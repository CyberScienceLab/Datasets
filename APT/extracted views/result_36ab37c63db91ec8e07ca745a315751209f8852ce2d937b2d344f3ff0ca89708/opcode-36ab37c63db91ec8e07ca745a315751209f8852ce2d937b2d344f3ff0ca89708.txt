mov sub test push mov push push mov jne lea push push call lea push push call lea push call test mov jne lea lea push push push call add lea push push push push call mov test jne push call mov push push call test jne mov shr jne push lea push push call add lea push lea push push call add lea push push push push call push call pop pop pop add ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push push mov xor lea movb rep stos stos lea push push push call mov mov cmp je cmp jne cmp je mov xor mov mov lea movb rep stos mov movl stos mov mov sub lea mov mov mov mov mov mov rep call add mov pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push call jmp int3 int3 int3 int3 push push mov push push push push push push push call mov cmp mov jne pop xor pop ret push push call push push mov mov push push push push call test mov je push push push call mov add push push push push push call mov pop mov pop ret nop nop nop nop nop nop nop push push mov push xor mov cmp je push call mov mov mov cmp je cmp je push call mov mov cmp je cmp je push call mov mov pop pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push push mov xor test jle mov mov sub mov mov cmp jne inc inc cmp jl pop pop mov pop ret pop pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop mov push push push push mov cmp jg xor sub mov js mov mov push lea push push call add cmp je mov inc cmp jle pop pop pop or pop ret lea pop pop pop pop ret nop nop push push push push mov mov push mov push add push mov mov push push call mov test mov jne mov push push push push call test mov jne pop pop pop pop pop ret mov push push call push call mov xor push push mov mov mov mov mov push push call mov push push push push call mov mov add mov mov push shr rep mov push and rep mov mov push mov add mov mov call mov mov add sub je push push call add push call add test je push call mov add mov test je add test je push push push call test jne push call add xor pop pop pop pop pop ret movl pop mov pop pop pop pop ret nop nop push mov push push xor mov mov movl mov cmpw lea jbe push push add cmpl jne mov mov test jle mov push push add push push call mov mov mov xor shr mov rep mov and rep jmp mov mov push push add push push call mov mov mov mov add mov shr rep mov and rep mov mov mov inc add mov xor mov mov cmp jl pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop push mov push xor push mov xor mov cmp lea jbe push push lea mov mov mov shr shr mov and and shr test je mov mov push push push call jmp lea test lea mov je or mov mov test jne test je mov jmp test je mov test jbe mov lea push push push push call mov xor inc add mov mov cmp jl pop pop pop pop pop ret nop nop nop mov push mov mov add mov test jbe mov mov add test jbe push push push lea mov sub xor test lea jbe xor mov mov and cmp jne mov and add add mov inc sub add shr cmp jb add mov test ja pop pop pop pop ret nop nop nop nop nop nop nop push push push push push mov mov mov mov add mov test jbe mov push add push mov call test jne mov test je add push call mov cmp je mov mov lea push push call add mov test je mov mov mov inc mov mov test je mov lea add jmp mov lea mov mov test je test je and jmp lea push push call test mov je mov add add test jne mov push add push mov call test jne mov mov jmp pop pop pop xor pop pop ret pop pop mov pop pop pop ret pop pop pop mov pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop mov push push push mov mov add push mov test je mov mov add test je mov test je mov mov add add test movl jbe mov mov add push push call add test je mov mov inc add add cmp mov jb pop pop pop xor pop ret xor mov cmp je cmp ja mov pop pop lea mov add pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov mov push push mov push add call movl mov test je mov push xor test jle push mov mov mov cmp je push call mov inc cmp jl pop mov push call add pop mov test je push push push call push push call push call pop ret mov sub test push push je mov test jne mov xor lea movb rep stos stos mov xor lea movb rep mov push stos stos lea push push call lea lea push push call add test je mov push push lea mov push add xor push mov movb movb movb lea mov mov mov movb mov push push call mov add mov push call mov mov mov xor mov add shr rep mov and rep mov mov mov shr rep mov and rep lea push call mov push mov call mov mov mov xor mov add shr rep mov and rep xor test jbe mov xor mov and shl shr add mov inc cmp jb add lea push lea push push push call add test jne mov lea mov mov mov mov add mov mov pop pop test je push call add pop pop add ret nop nop nop nop nop nop sub push push push call mov xor lea mov rep stos stos mov lea rep mov lea push push push call mov mov mov mov test mov je mov test jbe push call mov add test je push push call add test je sub mov lea mov rep call mov test je cmpl jne push push call add test je push call mov mov pop pop pop add ret pop pop xor pop add ret nop nop nop nop nop nop nop nop nop nop nop nop nop jmp jmp jmp mov test jne cmp jle decl mov cmp mov mov jne push call test pop mov jne xor jmp andl mov push push mov call incl pop pop jmp test jne mov test je mov push lea cmp jb mov test je call mov sub jmp push call andl pop pop push pop ret push mov push mov push mov push mov test jne cmpl jmp cmp je cmp jne mov test je push push push call test je push push push call test jne xor jmp push push push call cmp mov jne test jne push push push call test je cmp jne push push push call test jne and cmpl je mov test je push push push call mov mov pop pop pop pop ret jmp sub mov mov mov push push mov mov mov mov push lea push push mov mov movl movl call add test jne lea push push call mov add cmp je lea push call add mov test je mov pop pop add ret mov lea push mov call add pop pop add ret nop nop nop nop mov xor cmp je mov cmp je push mov mov mov mov push neg sbb push and mov mov mov push call add xor pop ret mov ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov test je mov test je mov test je mov test je push push call add mov mov push push call add movl xor pop ret mov pop ret nop nop nop nop nop nop nop nop mov push push xor cmp je mov mov cmp jne cmpl jne mov cmp jne pop mov pop ret mov mov cmp jne movl mov cmp jne movl mov push push push call add cmp mov jne pop mov pop ret mov mov mov cmp mov jge mov neg movl cmp jl cmp jg mov mov shl mov mov mov neg sbb push not and push push call mov add mov mov push cmp jne call add mov pop pop ret call add xor pop pop ret push call add mov pop pop ret pop mov pop ret nop nop mov mov mov push push push push call add ret nop nop nop nop nop nop push push push mov test push je mov test je cmpl je mov xor cmp mov setne dec mov and mov mov mov cmp ja jmp mov test je dec xor mov mov inc mov mov mov mov mov mov mov mov and inc cmp mov je movl mov movl mov jmp mov mov shr add cmp jbe movl mov movl mov jmp movl mov test je dec xor mov mov inc mov mov mov mov xor mov mov inc mov mov shl add div test je movl mov mov mov movl mov jmp test jne movl mov mov jmp mov push push push call mov add cmp jne mov movl mov movl jmp test jne mov cmp jne mov mov mov lea push push push call mov add mov test je movl jmp movl mov test je dec mov mov mov inc xor mov mov mov mov shl mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov mov shl add mov mov inc mov mov movl mov test je mov mov dec inc mov mov mov xor mov mov add mov mov mov inc mov mov mov mov cmp je movl mov movl mov jmp mov mov mov movl mov test jne mov pop pop pop pop ret mov mov dec inc mov xor mov mov mov mov shl mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov mov inc mov movl mov test jne mov pop pop pop pop ret mov dec mov mov inc xor mov mov mov mov mov shl add mov mov inc mov mov mov mov test jne mov pop pop pop pop ret mov mov dec inc mov mov mov xor mov mov add pop mov mov inc mov mov mov mov pop movl pop mov pop ret mov movl mov movl movl pop pop pop mov pop ret mov movl pop pop pop mov pop ret pop pop pop mov pop ret nop mov add sub adc sub adc add xchg sub adc sub adc sub add adc add inc sub adc sub adc add dec sub and push mov push test je mov mov mov mov cmp je cmp jne mov mov push push call add cmpl jne mov push push call add mov movl mov mov mov movl test movl je push push push call mov add mov pop pop ret nop nop nop nop nop push push push mov push push mov push call mov add test jne pop pop pop ret mov push push push call add mov test jne mov push push call add xor pop pop pop ret mov mov push push push call add mov test jne mov mov push push call mov push push call add xor pop pop pop ret mov push add push push mov mov movl call add mov pop pop pop ret sub mov push mov push mov mov mov mov mov mov mov mov push cmp push mov mov jae sub dec jmp mov sub mov mov cmp ja jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov mov jb jmp mov mov and mov shr and cmp mov ja jmp sub movl mov and shr shr sub mov jmp mov lea push lea push lea push lea push push call mov mov mov push mov push mov push push push call add mov test je shr mov sub movl jmp shr mov sub movl jmp mov mov mov cmp jae xor cmp je xor mov mov dec mov mov shl add mov or inc cmp mov jb mov mov not and shr xor jne xor mov cmp mov mov je mov mov jmp mov test je mov test jne mov mov cmp jne mov mov cmp je mov cmp mov jae sub dec mov jmp sub test mov jne mov mov push push push mov call mov mov add cmp mov mov jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp mov jae sub dec mov jmp mov sub mov test je mov mov movl cmp jbe mov cmp jbe mov mov mov mov mov shr rep mov mov and sub rep mov mov mov add mov mov sub add sub mov mov mov mov jne mov neg sbb and mov jmp mov cmp jae mov mov test je xor dec mov movl mov mov shl add mov or inc cmp mov jb mov and mov mov and cmp ja mov and cmp ja mov push shr and lea mov push push call add mov test je shr sub movl movl jmp mov mov mov mov shr add cmp jae cmp jae mov mov test je mov xor mov dec mov mov mov add shl movl or inc cmp mov jb mov mov and sub mov mov shr mov mov inc mov mov mov shr add cmp jb mov mov cmp jae mov mov mov movl mov inc mov mov cmp jb mov push lea lea push mov push push push movl call add mov test jne mov movl jmp mov mov mov mov mov and shr and lea cmp jae mov cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc cmp mov jb mov mov and xor mov lea mov mov cmp mov jae mov sub mov shr mov mov mov inc jmp cmp mov je lea sub mov neg sbb add and mov add cmp jae mov test je mov xor dec movl mov mov mov mov mov shl mov add or inc mov mov cmp jb mov mov shr mov mov and add mov shr add mov sub mov mov mov mov and shr and lea mov add cmp ja cmpl jne mov cmp jb mov mov jmp mov xor mov inc mov mov dec mov jne mov mov mov mov shr and and lea cmp jb mov mov push push lea lea push push lea lea push mov push mov shr and and inc push add push push movl movl movl call add mov test jne mov mov mov push push mov push push push call add test je mov mov mov push push call add movl jmp mov mov mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add cmp jne mov push push movl call mov mov mov mov mov mov mov add cmp mov mov mov jae sub dec jmp mov sub mov mov test jne movl jmp mov mov mov mov mov mov sub mov add mov push push movl mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add push push mov mov push mov call add pop pop pop pop add ret mov mov movl add shr movl mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov movl mov push movl mov mov mov mov sub add mov mov push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add mov movl push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub add mov mov mov push push push call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov sub add mov push push movl mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov push mov push sub mov add push mov mov mov call add pop pop pop pop add ret mov mov movl push movl mov mov mov mov mov mov push mov mov mov sub add push mov mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov sub mov mov add mov mov push push push mov call add pop pop pop pop add ret mov mov mov mov mov mov sub mov mov add mov mov push push movl push mov call add pop pop pop pop add ret mov mov push push call mov mov movl movl mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret cmpl jne mov mov push push call add movl mov mov mov mov mov mov mov mov mov mov sub add push mov mov push push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret movl jmp mov mov mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov mov sub mov add mov mov push push push call add pop pop pop pop add ret movl jmp mov mov mov mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov mov sub mov mov add push push mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov mov push mov mov mov sub add push mov push mov call add pop pop pop pop add ret lea add add cli das add insl xor adc add xor adc add dec cmp adc cmp adc add xchg add in add sahf add nop nop nop nop nop nop nop nop push mov push mov push push push call mov mov push push call mov mov push push call mov push push call add xor pop pop ret nop nop nop nop nop nop nop push mov push mov mov and shr test jne pop mov pop ret push mov test jbe push cmp mov jb mov sub cmp jl mov shr mov neg shl add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add xor mov add add add dec jne test je xor mov add inc add dec jne mov xor mov div mov mov mov xor div test mov ja pop mov pop shl pop or pop ret nop nop mov mov push push call add ret nop nop nop nop nop nop nop nop nop nop nop nop nop mov push call pop ret nop nop nop nop mov push push mov push call add test je mov mov mov mov mov mov movl mov mov ret nop nop nop nop nop nop nop sub push push push mov push mov mov mov mov mov mov mov mov mov mov mov cmp jae sub dec jmp mov sub mov mov cmp ja jmp cmpl jb cmpl jb mov mov mov mov mov mov mov mov sub mov add mov mov mov mov mov push push push push xor xor mov mov push push call mov mov mov mov mov mov mov mov add cmp mov jae sub dec jmp mov sub test mov je mov dec neg sbb and add mov mov jmp mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov mov mov sub mov xor mov test jne mov mov mov movl jmp test je mov and mov mov mov movl mov jmp test jne mov mov mov mov lea mov mov jmp mov test je movl jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov xor mov movl mov mov mov mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov mov lea xor mov mov mov shr mov sub xor mov mov mov test je mov and mov mov mov movl mov jmp test jne jmp mov cmp mov jae mov test je dec mov mov xor mov add shl mov movl or mov inc cmp mov jb mov mov and mov add mov mov shr mov mov sub mov movl mov sub mov cmp mov jae mov sub mov mov jmp mov add mov cmp jb mov mov mov test je mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov inc movl mov mov mov inc mov mov dec mov mov cmp jne mov mov mov dec mov jne movl jmp mov test jne mov cmp mov jne mov mov cmp je mov cmp jae sub dec jmp mov sub test mov jne mov mov push push push call mov mov mov add cmp jae mov sub dec jmp mov sub mov mov cmp mov jne mov cmp je mov cmp jae sub dec jmp mov sub mov mov test je mov mov movl mov mov inc dec mov movl jmp movl movl jmp mov mov mov mov mov mov sub movl add mov mov mov mov push push push call add pop pop pop pop add ret mov movl movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub mov add mov mov push push push mov call add pop pop pop pop add ret cmp jbe mov sub inc dec mov mov mov push push push call mov mov add cmp je mov mov mov mov mov mov mov push sub mov add push mov mov push mov call add pop pop pop pop add ret mov movl mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov mov mov mov mov mov mov mov sub push add push mov mov push mov call add pop pop pop pop add ret mov repz add test inc add xlat inc add dec inc add jbe add pop inc add jbe add scas inc add nop nop nop nop nop nop nop nop mov push mov mov push call add ret nop nop nop nop nop nop nop nop nop nop nop nop push push push mov push push movl mov push call mov add test jne pop mov pop pop ret mov mov push mov push lea push push mov push push push push push push push push call mov add cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je cmpl jne movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov push push push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov lea inc dec mov jne cmp jne mov mov mov mov pop pop pop xor pop add ret mov mov lea mov mov cmp jne inc add cmp jbe mov cmp mov jae mov mov mov lea cmp jne dec sub cmp jne cmp mov jbe mov mov mov mov shl cmp jae lea sub js inc add shl cmp jb lea mov mov lea sub mov jns pop pop pop mov pop add ret add mov mov xor dec je xor add add dec mov jne mov xor mov add cmp mov je mov mov lea mov mov inc mov mov mov inc cmp jb mov mov neg mov mov mov mov cmp mov mov mov movl mov mov mov jg mov lea lea mov mov mov mov mov dec test mov je jmp mov lea cmp jle inc mov jmp mov mov mov add inc add mov mov sub mov cmp jbe mov mov mov sub mov shl cmp jbe mov or sub mov add cmp jae inc cmp jae mov add shl cmp jbe sub inc cmp jb mov mov shl mov mov add cmp ja mov mov mov lea mov test lea mov mov mov je mov mov mov mov mov mov mov mov sub mov shr mov mov sub sar sub mov mov jmp mov mov mov mov mov cmp jg mov mov mov sub mov mov lea cmp jb movb jmp mov mov cmp jae cmp sbb and add mov jmp sub mov shl mov mov add mov mov add mov mov mov sub mov shl mov shr cmp jae mov lea mov add mov lea mov add cmp jb mov mov shl test je xor shr test jne mov mov mov xor shl mov lea mov dec and cmp je mov dec sub mov mov sub shl mov dec and cmp jne mov mov mov mov dec mov mov test jne mov mov add inc mov mov inc cmp mov mov jle mov xor cmp je cmpl je pop pop pop mov pop add ret nop nop nop nop nop nop nop push push mov push push mov push push push push movl call mov add test jne pop pop pop mov pop pop ret mov mov mov lea push push mov push mov push push push push push push push call mov add test jne mov cmpl je mov mov lea push push mov push mov push mov push push push push lea push push call mov add test jne mov cmpl jne cmp ja mov push push call add xor pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp jne mov push push movl mov call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret cmp jne mov push push movl call add mov pop pop pop pop pop ret cmp je movl mov mov push push call add mov pop pop pop pop pop ret nop nop nop nop nop nop nop mov mov mov mov mov mov mov mov xor movl movl ret nop nop push push mov push push mov mov push mov mov cmp mov mov jbe mov mov sub cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep mov mov and add rep mov mov add cmp mov jne mov mov cmp mov jne mov mov mov sub mov cmp jbe mov test je cmpl jne movl mov sub add mov mov mov test je mov push push push call mov add mov mov mov mov mov shr rep add mov mov mov and add rep mov mov mov pop pop mov mov mov pop pop pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop sub mov mov push push mov mov mov push mov push mov mov mov cmp mov jae sub dec mov jmp mov sub mov mov mov mov mov mov mov cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea test je xor mov shr sub mov test jne test jne mov mov and add xor mov lea test je xor mov shr sub mov test je and sub mov and add mov mov shr cmp jae mov dec mov xor mov mov mov shl add or inc cmp jb mov mov mov and xor mov lea xor mov shr sub mov test jne test jne mov mov and add xor mov lea xor mov shr sub mov test je and cmp jae mov dec mov xor mov mov mov shl add or mov inc cmp mov jb mov mov mov and add mov shr mov sub sub mov mov sub mov mov cmp jae mov mov sub add cmp jb mov sub cmp jbe sub mov mov inc inc dec jne mov mov mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp mov mov mov inc inc mov inc inc sub mov mov inc inc dec jne mov jmp xor mov shr sub mov mov mov inc dec mov cmpl jb cmpl jb jmp mov mov mov movl sub mov mov mov shr cmp jb jmp mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop xor pop add ret test je mov mov mov sub mov shr cmp jae mov mov sub mov lea sub mov mov mov add mov mov mov mov sub add mov mov pop pop pop mov pop add ret mov mov mov movl sub mov mov mov shr cmp jb mov mov sub mov lea sub mov mov mov add mov mov mov sub mov add mov mov pop pop pop mov pop add ret nop nop nop nop nop nop nop nop nop nop jmp add inc imul add mov add xor outsl imul and cmp daa pop and push adc jbe icebp add push jge stos in fbstp or cmp add sti repnz cmp pop rorl mov test jns mov mov mov (bad) jns (bad) repnz mov mov incb pop roll jns leave fisttp lret mov xlat test jmp imul into xchg add lods int rcrl sub mov cmp lret cmpsb ret lods scas dec aas xchg cmpsl push leave ret xchg fucomi xchg fimull jb pop or leave fucomi dec dec xchg outsl pop add fdivl inc cli dec xor xor dec lret push mov pushf mov add pop or add lods dec bswap dec lret mov aad in cmc popf lods jge lods dec bswap dec lret mov aad add mov xchg out in push sub cmc lods sub outsl jmp cmpsb cltd sbb jge out dec roll fwait add stc fsubrl or dec popa mov cli outsb sbb stos sti xorl jecxz,pt jo jnp (bad) sahf (bad) and (bad) in sub xchg aad scas push inc dec jb in std aaa js nop sbb (bad) idiv out scas lea addb lea mov xor or test scas jb sahf jge adc jne and cmpsl lds daa lahf pop ret add pop cmc int3 sub cmp xor int3 test add jne and int add inc mov and push jge jmp xor mov je lret rcrl das out mov dec repz sbb xchg enter adc push adc pop jl lods sub (bad) cwtl dec arpl mov rolb inc dec fbld sbb idivb push mov js pop sub sub fbstp jb sub cmpsb dec pop push test add loopne add out adc sbb mov or push test into test mov (bad) lods stc mov imul aaa out (bad) jge xchg stos mov adc ds int3 adc and jge xchg sbb popa in adc les cmc lods mov push mov lahf push lret pop repz les fyl2xp1 fst popf fdivs push pop pop lret inc (bad) fadds dec mov xchg test inc movsl mov push out push adc (bad) int3 clc mov clc pop sub ror and inc out sub and and adc int insb out leave fadd xor sub sti or cwtl push aad lea fs cmp ret iret jge mov or fstl jl sub cli (bad) or mov loopne insb out mov les movsb (bad) das or cmp (bad) xor jp clc mov mov pushf dec jnp repz dec xchg dec (bad) fisttpl jge fmull lret sti mov jg adc push adc dec les (bad) cmc sbb outsl pop mov pop or int3 add sub inc movsb jno inc roll outsb xlat mov jo icebp push (bad) andl jnp das pop sbb (bad) xchg lret icebp nop xlat js fidivr push insl jle sbb jno lods mov mov rorb push rorb mov mov mov gs pop addr16 iret mov iret dec subl rorb sbb in sbb mov add push das dec mov movl inc and js cld daa in or cmp sub fbld ret pop mov cwtl fdivr jle in ret imul int fst stos lds outsb pop pushf stc sub jg xor popa push (bad) jne sub insl rcrb in pop xlat dec xor (bad) lret xchg mov pop inc cmc xor cmova faddl lret jb or sub sub outsl mov imul cwtl ds adc insb pop cmp test (bad) insb mov dec jmp loope out call mov mov dec and jo les and es inc aam call mulb dec clc js xchg dec mov mov xchg push dec aad je cwtl jg mov jne cmc cltd adc dec sbb jne fdivrl sahf mov jns pop inc sbb dec mov pusha mov (bad) lods add ljmp aad inc ja hlt daa xlat pop pop aam pop lock and mov xchg pop lret mov push std mull pop push sahf xor sbb sub add jp fucom sbb fs push adc daa sbb jnp sbb icebp stos mov sbb add loop and sti gs jge sahf mov fs or and aas dec (bad) pop rorl xchg lock fstl dec out lds out arpl pusha out out paddsw (bad) cmpsb mov sbb in fxch xor bswap ror repnz int3 mov rolb mov jge xchg movl mov test lods outsl jne in popa jge int dec pop iret lock mov fsubs out testl mov scas (bad) popa xchg in cmpsb decl lcall (bad) mov mov or mov lahf jbe mov stos or aaa fnstsw and mov sub nop scas nop popf into shrl xchg jns js add int3 and mov jg cs or pop stos lock cmovns rcrl mov jb add repz mov mov hlt or jl or pop out mov (bad) int outsb (bad) sbb call cmpsl cmpsl dec data16 (bad) lea inc jb pop push out jb mov pop inc loopne push pop or lock les cli lock js add repz icebp es jbe push mov lock jne xor adc push int lret mov inc or and stos mov pusha xchg xor shlb pusha xor arpl xor fnsave cmp and xchg pushf clc stos cwtl (bad) dec push xchg sbb xor test stos pop mov xor and ret je add bnd out mov dec mov add mov jg or aam xor and adc mov div movsl mov and movsb icebp out hlt jle inc flds out stos adc cs insb lock enter clc and (bad) mov xor sub repz adc cmp push xor and in xchg je sahf ss mov sti mov (bad) btr cmp stos push mov lea mov pop fisttpl xor xchg mov out movsl and ret aaa mov in and out and xchg subl gs out add mov or (bad) idiv add imul dec outsl push jl and ret lcall (bad) arpl arpl ds lea cmp jb jmp sbb jno mov xor es mov scas push mov movsb stc nop test inc xchg (bad) or dec mov sbb sarl xlat add (bad) scas adc push (bad) and jp sahf das sbb jmp or jecxz daa pop fpatan neg iret or imul cwtl adc out shld jb pop sti aam iret stos bound fidivl xchg mov std icebp push out jl sub mov mov or movsl aaa fcom xchg fistpl xchg and leave xchg popf (bad) pop iret jne mov ret jae add dec sbb lcall test push fs nop jae sbb jl test testl xor or push xchg mov or popa jg imul push adc lret cmp dec adc pop and xchg push mov and push sub sbb pop jno call adc (bad) sbb jmp fidiv test mov push fs mov adc sbb andl ja push movsb sahf push push jne out outsl lods cltd sti fistl dec mov mov mov push pusha test cli push pop xchg pop or xchg mov push addr16 jb repz jnp mov loope out dec push shl out xchg xor mov ret pop adc arpl scas call addb pushf mov fxch jb push xlat xchg fwait ljmp in or fsubrl mov mov pop xchg sbb add sub or jno add dec fbstp sbb inc and fsub mov int add xchg cmc fstps sub lcall sub test pop xor cmp js test iret lea inc pop lods mov popa pop jl sub push pop test sub dec call loop in mov (bad) mov xor jnp or jae cs sub cmpsb dec subb or adc sub aam push rolb (bad) and fsub lods push inc (bad) push inc sbb or (bad) mov sub fildll inc pushl inc adcl pop fcoml push add mov adc andb rorb fwait jb push xlat test push pop popf adcl pusha mov (bad) aad lret sbb int3 (bad) int lret scas lret std sbb sbb jmp and dec pop loope mov jle sub daa in das pop push jbe (bad) cmpsb int3 pop jno outsb arpl push sub ljmp in inc sub fnop aad outsl out xchg xor into (bad) mov test flds (bad) jmp lds inc or push iret in outsl in or dec adcl repnz int xchg sbb fldenv fwait insb aas fsub (bad) insb push pop jae push adc stos adc pextrw adc dec aam push test jnp std dec add (bad) xlat jno push pushf repnz ror jge push xor inc or mov lcall fldenv (bad) cmpsl aad or int mov popa xchg fbld xchg das mov dec xchg punpckhwd rcll dec mov adc fs adc lcall or shrl xchg and sbb sbb popf mov stos stos push dec movl aaa push mov loop loope inc gs pop or xchg pop jg push push pop mov pusha pop mov adc sub popa adc hlt sub mov adc cli inc xor jnp fstl jo adcb hlt loope nop add aas (bad) mov inc daa movsb pop cmpsb cmc mov stos ret or adc dec cmp mov pop xchg pushf stc push je in fstl pop in mov mov mov push push jns mov hlt int3 js sbb push lods dec lea cs inc fimul aad dec add in xor popf lahf or add je xor test call xchg icebp mov xchg dec and sub cmp pop lds dec fstl xchg test loope rolb pop push push pop add pop insl cmp (bad) in mov mov (bad) (bad) mov mov inc rolb push inc mov ja cmp or fdivrl in or iret or sbb xlat daa pop pmullw mov mov mov mov test mov int adc or les adc stos cmpsl std (bad) push jne in fwait hlt jmp add mov mov repnz sbb ret je sbb pop daa lea mov aas ds cmp mov push (bad) xchg adc jo fcmovne mov xchg (bad) out js repz ret add xchg pop jbe dec jg loopne out lea enter imul je test inc in cmc cmc add out int3 daa adc push fstps orl jne test push test pop popa mov in mov dec popa idivb mov push (bad) divl adc or sub mov (bad) out out in xchg inc dec dec lret iret cmp cltd pop in pop mov push jg negb sub lea pushf mov sbb shlb jg lds orl lods pop pop add mov cmp jbe mov aam stos cwtl push cwtl sarb testb pop lds inc xchg push out imul push jbe test stos clc mov loopne mov (bad) xchg pop dec or loope into fidivr mov sbb loopne mov and test vmovmskps fcoml pop push sbb dec jns xor cmp repz pushf sbb (bad) pop in pop (bad) testl (bad) hlt xlat les imul (bad) out ret sti pop ret pop inc in (bad) or jno popf sarl mov cmp cltd inc loop (bad) cmp mov sahf push inc sbb lock add push lret xchg xchg xor inc or mov das subb fnstsw stos jge test loopne repnz sub pop mov pop orb fs fidivr push jnp adc xchg movsb cwtl js addb pop cld adc in jbe in aad adc in jbe mov sbb fcmovnb inc add jbe pop sub adc cmp mov test lcall or adc mov pop andl sbb (bad) jnp mov lret xlat movsb xor lock xchg mov xchg jo add xor stos adc mov sbb cmp pop sbb fs in daa jbe int3 flds fidivl lea jnp aad nop insl xchg push mov pop dec es sbb test (bad) xchg inc les jnp jno dec inc push jb cmp jo mov and lds mul or mov cwtl cmp add scas (bad) adc mov rep mov inc cwtl rcll leave outsb rorb aam iret repz jmp out dec mov das push mov push jge scas xor or into jbe jmp add fs adc add mov mov ljmp ljmp jae mov jbe or xor cltd out cmp mov fucom jb xor pop fs sbb cmp jl rol pop push push mov ds test mov sub mov inc sti sub adcl lcall movsl (bad) mov adc mov mov (bad) lock lret std inc sbb pop icebp cmp into outsb inc std mov mov fmuls rclb dec jle xor mov (bad) and adc add mov cmp insl inc sub mov pop or xchg into test icebp mov je cmp add ffreep fildl xchg mov (bad) cmc fistpl rorl push lods adc dec add sub aas cwtl sbb in orl jae and sub lret dec mov rcrb ret cmp fs arpl push (bad) dec adc lret cmp push scas sbb hlt clc add adc clc sub mov andl lahf jae fbstp adc jecxz jge mov fstpt mov (bad) movsb shlb sub jno push mov mov lods push mov shll fnop (bad) ljmp iret mov mov inc xor aam int cmp ljmp ja ljmp jne pop aaa fbstp pop ja movb in test outsb std fsubrl stc cmp outsl out popa sbb xlat mov subl sub mov add push (bad) jbe dec and sub dec loope (bad) sub pop jmp lea mov repnz repz mov adc xchg loope xlat out (bad) and mov dec push repz and pusha pop aaa jno fisubrl daa pop lahf jb pusha cli push pop sbb xor jo cmp push int test aad divb jb cwtl loop push adcb arpl sub sti leave xorb enter jns push xchg mov xchg push popf repz jecxz and orb push in mov push jb arpl sti fwait xor fcompl sub je add sub pop (bad) xor dec jne scas jge sub stos dec bnd and mov xchg sub loopne das call insl fiaddl pop hlt jbe xchg and mov sub sbb mov push lret inc push fild test int js fdivl jns pop arpl mov sbb inc push les fdiv lret imul mov and add sbb int fwait outsb inc call push dec dec jg frstor push scas xor mov and inc pop int3 gs sbb out rcrb push cmc inc gs adc ficompl add mov sbb jecxz mov orl pop lret push (bad) into stos push push in pushw repnz sti icebp jg or rcrb (bad) jne pop add (bad) pushl outsl iret andl dec xchg dec cwtl mov pop inc in hlt cwtl mov sub push in cs (bad) loopne sarl pop (bad) mov out mov jns xchg sub in jle or adc fsubrs lahf ds stos cmpsl insb or dec lds inc ret adc inc aaa xchg lea xchg jns sbb jl lea lea pop pop jne loope sbb ds cltd and cld into mov jge std mov adc in sbb xor or iret cmpsb (bad) fwait add lock outsb adc or push repnz cli stos decb add jmp xchg jge lds scas push or inc fidivl loop fstpt test or xchg js in adcl rcll inc push xchg sub pop sbb inc pop and rcl imul orl fcoms (bad) popf add jge scas cwtl insb cmp dec dec cmp mov push inc add sbb mov mov xor iret sub out (bad) outsl les rorb mov sub fwait xor xchg push push mov (bad) test fiaddl in fwait mov or mov xor jns test sbb enter das mov fnstenv bound push and cmpsb ret or js mov pop push pop imull rorb pop pop pop mov mov arpl ret add push pop scas push imul ret test pop push sbb sub cmp mov adc pop iret test jae mov pop test les jmp das sub inc sbbl sub arpl pop sbbb push fptan loope int xchg pop negl imul (bad) sbb popa (bad) lods or ret aam bound imul out int lret scas mov jg fnstsw (bad) push mov xchg and hlt fcomps pop or jns mov bound mov fwait xchg sub lods push lods sbb xchg (bad) mov adc fld call in cmp or pop mov mov pusha inc sub insl inc cmpsl mov adc pop fcmovu lret adc xchg push fstl pop dec push enter enter icebp imul stos pushf inc inc sbb iret lods or fucomp lea lret or imul outsl push push mov sti jl fwait mov shlb push pop les push inc dec dec loopne lret inc je (bad) mov dec mov (bad) mov jl or les inc lds mov stc or or cmpl inc push mov mov outsl (bad) and fcoms pop out jecxz das gs pushf rcll in sbb jo outsb lret and cmp jmp inc sbb mov leave mov inc lea mov sub lock fdivrs jge xchg add xchg mov xchg sahf and in fcomp ljmp pop (bad) cs movsl inc insl mov push xor push (bad) imul sub popf xchg ds leave jne sub cwtl leave jmp cmp enter mov xor pop vpmaxub and hlt jmp cmp les sub inc cs and cwtl pushf test mov push mov icebp stos sbb adc mov add aad outsb pop jecxz dec xor sbb xchg arpl popf repz mov sarb xchg daa push (bad) jo xchg sub push cmp lds popf or cmp test icebp (bad) decb add scas xor mov loope xchg pusha xlat ret xchg popf mov fldcw mov gs and cmpsl xchg pushf cwtl dec out stos dec loop jp xor xchg imul mov sub mov and test icebp xchg hlt and (bad) scas in mov add sbb xor js rcll jmp add int3 andl xlat fs sbb and dec notb test aas ds mov aad adc test ljmp cli enter lods adc test daa in (bad) stc inc mov and cs dec cmp push dec sti test mov cmp pop stos jbe aam sar mov cmp test mov imul mov dec out fs xor and mov lret ds pushf jo sub push in mov fisubr popa stos mov imul pushf arpl in nop leave (bad) jo mov pushf rcrl out sbbb outsl lods out cmc insl movsl fsubrp mov mov insl shlb adc pusha lods rorl sbb or out call pop aam bound cmp jne fwait cltd mov (bad) xchg into push nop inc leave xor pop bound dec pop inc insl cmp cmpsl lds lahf fwait jp ds lock sub pop jg stos mov cmpsl (bad) int3 mov lds mov mov lret inc mov das rclb dec jbe fadds xor in jns (bad) lods test es in cmp sbb out push and sbb mov stc mov pop out cld push xor cmpsl pop insb js or cld xor jge pop xchg sbb cmc ret push (bad) cmp mov rorl push mov iret icebp pmaddwd push and fisttp repnz mov jns jo push sub dec jmp and cli cwtl adc dec cmp push inc cmpsl cmp xchg push xchg aaa adc inc enter add lret cmp push push jmp jle sarl mov push movsl xor and hlt pop xchg mov fmul adc mov mov pop dec (bad) repz mov sub or loop lahf lods add inc mov (bad) iret mov sbb adc xchg push xor iret sub mov dec lea xadd inc inc jnp popf cwtl xchg or jne jbe or adc push repnz int xchg pop sbb xchg repz sub mov ja in pusha push data16 jo pop (bad) icebp out js jl sub mov dec jge outsl (bad) mov and pusha daa rcr add dec push inc and jmp les fsubrl lea out fdivrp les (bad) mov pop push mov out dec faddl add jnp shrb (bad) fildl inc push lcall adc int3 orb int3 push call inc (bad) enter add lods or jl das mov pop movsl dec test shr mov std lods sub or and adc mov insb xchg adc push jae push movzbl es aam xchg xchg xchg fsubs mov ljmp push mov mov mov pop xchg or out or and mov lods iret xor fildll (bad) jecxz cmp in push pop scas aaa (bad) mov add jle push icebp jl pop jp or mov mov (bad) rcrl fcompl push adc sbb xchg sahf (bad) nop nop push cmc (bad) test test add (bad) fdivr jecxz xchg push popf pop push mov jmp xor pop aas push aad cltd fs xchg divl push add push xchg les aam test push mov daa add pop pslld lahf lds dec push sub roll cwtl lahf xor xchg sbb js out add in dec test icebp sbb add push pop call cltd iret sub in test pop outsl outsb lcall cmp in in cmpsb mov xchg inc add cmc call hlt add push dec jb mov neg les cli ret push scas pop mov int push repz mov jecxz jns int mov (bad) mov mov add and push push outsb xchg cld mov ja ret jp scas cmp cltd cmpsl pop and inc les std jne ds push ret sbb dec xchg std hlt pop rsqrtps js adc in lods and xor jge outsl lahf cmc imul sub fildll (bad) push out mov fistpll mov inc mov adc jmp into xchg sub xlat or adc inc pop jecxz jecxz jmp dec jb mov inc xlat popa adc mov movsl es jnp scas (bad) leave xor jno out push push sbb jmp daa (bad) out call lods xor ljmp pop xchg cmp jp cmp cmp test add loope cmp sub popf aaa mov lret scas out call push inc jecxz xchg jnp shrl (bad) mov daa lret arpl dec aas mov xchg pop pop test mov test sub sbb dec mov fcomps inc jnp leave bound jns rolb pop dec dec lcall or pop xor pop out fwait aam addr16 lea cmc xchg (bad) mov outsl push scas int3 adc add ljmp loope insb jl imul cmpsl mov ret popl fdivl lret add scas sub mov mov cmc fnstenv mov enter sti (bad) add iret cmpsb inc pop push xchg mov pushw mov mov sarl cmp push or lcall loope inc dec jge daa or sbb or dec xchg hlt test jge push cmpsb out fsubl adc dec repnz push mov cmp popf push and leave lret lret push fwait scas enter xor xchg cmpsl jp adc sub inc mov xchg rclb pop repz lock bound pcmpgtd inc push mov mov cmpsb into push outsl xchg inc daa test or cmpsb jecxz dec repnz mov push test aam jmp mov aas das sub fmull pop in pusha fs je mov int3 mov inc loopne dec es sub loope daa mov stos (bad) sub cli mov pop pushf icebp sbb and inc and je cmpsb das or cmp cmp pop push push push int3 pushf std loop adc das sbb ja clc adc jl and xchg pop sbb stos (bad) xchg stos mov (bad) loop push nop pop scas mov push das cwtl test loopne mov mov pop inc cmp test push push inc push inc sub inc cmp or out fist adc ljmp (bad) mov jno xchg hlt adc push icebp mov add aad ljmp in loop sbb lahf xchg dec push loopne js xchg jbe push fild mov (bad) into (bad) mov inc movsl (bad) pop out fnstenv pushf cli in sbbl cmp or movsl cmpsl das add adc sub lret push (bad) push ret sbb lods jp adc sahf repnz stos int3 dec mov jl (bad) cld int and daa movsl and (bad) xchg mov loopne testl push dec es test iret stos push mov adc repz sbb push xchg xchg mov or scas mov cs cmp adc loope mov scas insb xlat jge cld push fwait cwtl ds lea jns jns in ret add loope adc xor mov add test out inc and out inc repnz out xchg mov addr16 cmpl cmp xlat out jmp add fsts loopne mov imul xor outsb xor jns pop repz sub fsubrl inc rcr cvtps2pi cld jcxz or fcoml adc adc je sbb sbb out rcr out mov pusha enter adc mov inc (bad) jge pop add push jae into jg jo lcall pop cld jo push dec (bad) outsl scas shlb fimull sarl daa mov jecxz stos cmp out addr16 fbstp stc sti sub mov cmpsl outsb sub mov xor jl add sub sbb fidiv dec xchg push inc popa push inc jae and and mov cmp lcall nop mov pushl aas push repnz jge cmp dec (bad) out shll lds je add leave jb cs scas loope lods shr xor (bad) iret shll dec sub out lret (bad) stos outsb mov mov cmpsl pusha lret adc push xor test cwtl ret push mov jp add xor cmc hlt dec sbb pop sbb xchg push popf rol pop fbstp and fistpll push into jo insb xor adc sub ds dec test testl fldenv (bad) daa jmp mov jge inc repnz inc jb sub std sbb bnd inc scas adc ss pop loope add mov xor mov jl aad js pop add mov orl fdivs inc mov sbb jnp repz popf inc arpl daa ja cli pop hlt lret mov dec jge es out cmp adc sub and addl (bad) cwtl mov test push fs incl mov insb out push sar jo das jae xlat push xchg ja test jo xlat jmp cld dec stos loop movsl cmp jns push popf mov pushf cmpsl and int inc out (bad) mov lods ja rorb jge dec call aaa lret push lahf aaa jo leave push cmp inc cmp movsb outsl sub mov cmp cld xlat add out repnz mov cmp or cmp mov arpl (bad) pop pop xchg arpl sbb jge arpl in insb xor pop test arpl addr16 jg inc js mov mov mov jp dec out and popf sbb insb pop lds mov in outsl or dec xchg and popf in sbb push xor repz or in out in lret insl fstp pop ds addr16 iret jecxz aad imul clc fmuls movsl sub loope in (bad) cld int3 lea sarl mov pop iret ja sub in cmc push mov enter out pop cltd in jno add or (bad) xchg jp lret ret outsl rclb push add shrb and or cs cs mov mov dec lea sbb adc sbb int3 sub lea xchg lock mov mov jge pop outsl add aaa repz cmp jmp nop pop icebp movsl inc jp repz call mov mov addl push call dec fwait jb add imul (bad) jb sbb fisttpl push mov xchg dec rcrl jmp test push iret pop push fwait mov inc test pop mov pop popf movsl in pop and pop icebp pop sub cmpsl imul fcmove dec xchg or cs cltd test mov fwait add dec je add mov lret cmp imulb push sub push jb cmp sub fildl daa pop movb out push stos out lret pop mov cmp jmp daa dec (bad) xor cmpsb xlat pushl push lds push inc pop enter pop mov add popf xchg inc ja in xchg push push xor mov std jecxz add int insb xchg lret subb pop in adc icebp adc cmp sbb cmp sbb sub jl lods lret mov out and mov xor ja dec (bad) scas pop pushf into xor sub test dec jecxz mov rclb inc psubsw ss cwtl rcrl and lret inc push test or dec xchg fs mov sbb jnp repz cmp xchg push add xlat mov addr16 jp add mov jb add mov jo daa mov scas out cli or push or insl addr16 jp jno mov data16 inc mov and lods fnstcw xchg insb inc adc jnp js xor roll add mov mov mov loop shrl ret inc push stc inc (bad) icebp mov cmp out stc add add (bad) cmp jbe lret loopne push cmp cmp pop xor push dec pop dec and mov or popf popf pop in jnp bound mov shll movb jecxz xor inc fldt dec sub dec sub mov push mov adc push andl ficompl pop call scas je out adc shll dec out lret stos (bad) add pop add decb mov lret iret xacquire mov sbb scas pop jns push jb enter clc repnz pusha mov sti (bad) mov jp ret mov insl stc xor imull push fistp mov push sub pop sbb (bad) cmpsl in lds into xlat mov stos push call ss jmp dec inc xlat (bad) scas std test or lods lret adcl fstpt (bad) insb or lock (bad) inc out (bad) ds dec mov jno dec mov jge or sbb fidiv sahf test iret sub int data16 jl pop jecxz out xchg pushf mov xchg jl fwait sbb xor lock clc (bad) cwtl sub and mov jbe xorl fistpll and jb inc sub sub loopne ficoml pop fldl gs mov push xor sub mov push aam cmp aaa lds xchg mov test sub movsl out or inc cwtl lds cmp shrl rorb xchg int3 and lret push mov cmpsb hlt nop pusha push xor add cltd cwtl (bad) ret mov test pushf xchg xchg mov rcl test (bad) fyl2x repnz fbstp mov cs sbb cmp insl gs fistpll daa repz sub insl enter cmp and adc pop pushf sub fldl imul mov sub subb mov (bad) sbb loope xor addr16 mov jecxz mov lret and xor imul pop ss (bad) rcll lcall and mov js or lcall or cli lcall iret mov sahf out ljmp shll (bad) fisttp pop mov mov stos pop insl dec clc add dec scas push call je cltd out jns xor mov fmull leave dec lods lret sub dec adc cmp mov sbb (bad) xor in push (bad) xchg xchg ljmp in push and mov and cwtl mov pop (bad) mov adc mov push xchg sbb loopne cwtl pop jbe cwtl dec movb int3 lea loopne (bad) mov lds das outsl cmp int3 adc cmc (bad) jp out call popf aas xchg mov addr16 add addr16 pushf shrl ljmp add rep add push in mov loop loope dec jno (bad) jge negl stos dec xchg cmpsb sbb xchg cmp xchg lds data16 out push push xor mov lds cld daa jmp mov outsl add arpl pop jne fildl pop sub cli arpl push adc push inc call mov stc call mov rcr jbe orl (bad) push int fs add xchg pop hlt add and stos cli fisttp pushf test add pop (bad) in adc mov movsl mov (bad) lods mov fiaddl jg mov and daa notb pop sub dec mov in in imul sbb aaa mov movsb sbb jbe sbb (bad) mov adc pop test sbb aad aam enter arpl rorb out insb pushl pop mov arpl and cwtl popf popf stc lods inc (bad) gs iret sub pop or inc in lods or xor outsl shll dec loope negb inc push or aad xchg addr16 sub clc out push not in lret inc jnp pop ljmp popa dec dec imul les mov jae rcrl mov shlb data16 je mov mov das insb cmp push cwtl inc add dec pop mov cmpsb jae in call jmp ja out pop mov out pop pop inc stos mov leave and xor push inc sub pop push mov pusha mov jp or movl frstor push push push ret (bad) sarb dec fistl mov popf int3 hlt pop xchg add push les rcr pop sbb inc fstps xor loopne pop sarl shll test test mov sbb daa and fsts cmp call daa jno imul push cld lcall pop test cwtd dec mov or mov sub sub pop inc lods sbb sbb dec cmpb fbld bts mov (bad) adc enter jmp add lds xor fisubr fdivl mov inc cmpb testb sub mov (bad) lea mov movsl shl fisttpl sti cli or dec int std sarl lods leave pop lret sub sarb popf bound xor inc lcall push fmull rol jge outsl mov xchg mov insl mov (bad) and xor jne repz dec jae lods xor adc adc iret sub sub mov sti jo xor scas pop daa arpl scas push xchg psraw mov movsl outsb mov and movsb rorl xchg mov repz loopne xchg int xlat setge rep mov mov int aas sbb xchg subl cli lods ja add stos mov inc in dec mov (bad) jle lret mov mov inc cld xor push jno sbb sarl xchg pop sbb scas xor in pusha cmp dec daa sub mov or pushf (bad) (bad) jge divb cmpsb int3 imul jne add jp scas xchg inc sbb out addr16 (bad) dec pusha push adc aaa cmp xchg sarl sub push jmp repz inc ljmp lods (bad) add rorb and push mov popf mov rep cltd xor mov (bad) call in es dec scas stos xchg loop sar pop mov stos cmpsl daa ss inc in inc jmp sbb cli (bad) daa cli adc and (bad) mov call dec cwtl (bad) out into rorb rcrl imul les scas les or cmpsl add repnz sqrtps (bad) insb push push scas pop inc sub inc lds pushf xor call dec xor or add divl dec stc mov inc ret dec jno xchg ret inc sbb test jle inc xorl jno or xor sbb xchg call lods add push lods add std (bad) divl fisub in push inc push bnd or xor insl hlt sub xchg and add mov mov in dec and fwait in test xor pop dec fwait xchg mov and and push lods mov and sub jns push jmp aad loop scas fidivl inc cmp pop cli in mov xchg or pop lock stos (bad) ja fsubl dec adc xchg dec cmp pop xor (bad) inc inc push fbld xor jmp dec xchg mov (bad) in mov (bad) jecxz push iret in cld dec aaa les lods dec xchg pop roll jge mov aam push (bad) mov sti jns push ljmp leave out insb sbb cmp and dec jns pop aad jge (bad) shrl adc mov fld fstl lret jge xor dec sbb stc jbe cli psrld sbb bound (bad) lea test lds test lea mov pop test ljmp dec flds mov jmp (bad) jo stos lods lcall in hlt cwtl cmp xchg mov sub push repnz dec repz mov pushf les xor (bad) lods jo adc ja (bad) xor cmpsb cld out nop inc imul sbb jns mov mov fwait mov ja shlb pop mov mov std pop jmp adc mov jmp push ljmp jge rcll dec pop push cmpsb loope or lea (bad) ficom pusha out (bad) jae push adc cmpsl shrb dec and add ffreep jae (bad) jnp gs jg sbb stos roll insb std imul xor mov les inc add jbe js sbb add mov hlt add icebp mov shrb or insl ds pop aad hlt test pop push jecxz mov pop mov or mov into mov call add add inc outsb test mov add sbbl popa pause sbb or or add pop or and jno icebp or dec or mov xchg or push sarl into es mov dec xorb mov aad arpl push out icebp mov into shr cmp stos mov popa out in aas (bad) ss sub adcb sbb mov cmp loopne lahf lds inc hlt inc ret xchg nop (bad) out dec aas lods (bad) imull (bad) loope outsl (bad) xchg mov loop jb insl arpl jg ffreep out (bad) stos dec aam cld or (bad) int cmp ret sbb mov ret fisubrl cmp imul les pop das sar int3 dec cmp fisubl xchg adc mov repnz mov mov cmc inc (bad) sbb jle stos inc pusha cmpb mov xchg inc (bad) js fist ds push mov stc scas mov xor mov mov pop pop jg cmpsl jne in lods add dec xchg stos test xchg xchg (bad) xor out cmc or mov sbb in pop ds (bad) push fsubs push fs shll adc mov mov pop xor mov ds pop scas and cmp shlb xchg lret xor adc push pop imul lods mov push sub jo out bound out inc and punpckhwd push sub adc push mov xchg xchg inc sub cmp mov cmp xorl cmpsb repnz push pop sbb mov inc pop sarl pop rorb pop gs lods mov xchg ffree pop push and gs testl lock fmul cmp lods ret in ss testl push fwait xchg daa dec inc fsubrl push or in insb pop fdivl in push je jg pop adc cmp rcrl push pop or xor add scas sbb (bad) fsubrs inc subl in jae (bad) hlt jle push and stc in cld pop mov andl stc lret lcall sub xor pop mov adc sbbb ret into ret sti jmp pop shlb imul push rcrl jmp pop fdivl enter aad xor cltd data16 sub dec orl push add fsts sub cmp inc outsb or mov sti mov sbb add (bad) in add adc sub pop outsb loopne outsl aaa frstor jge lahf cmc fdivl mov ds push jmp imul dec push xor leave dec cmp pop aad mov out sbb mov data16 mov sbb fwait push cld or loop aaa call sbb sti test loop leave fs mov inc mov js cwtl cmpsb int out icebp and test sub push in fisttp idivb in add pop add jb es (bad) ja clc std iret and into xor sbb xor mov stos (bad) out loopne je xchg jmp xchg xor jmp mov pushf leave xchg sub mov mov mov ret fs iret push loopne fsubl mov jo (bad) (bad) xchg pop or adc mov push (bad) jbe pop or or adc (bad) lea imul pushl ja stos hlt aaa inc movsl lods pop pop xchg dec inc fbld xchg lods fld int push sub lds nop aam jns fstl xchg into rcll idiv push lea int and in fisubrl dec dec fnstsw adc lock fimull jne push jmp cmp mov mov sub xor add sbb sbb jbe pop mov pop adc fs clc stos mov test xchg or mov ret mov enter lcall leave and push jge adc jg pusha ret sbb (bad) xor arpl mov je xchg dec mov int lret loope mov test push push test out mov xor cmpsb ret scas call imul in imul inc push jecxz cmp sbbb lods test and jge add xchg mov scas or lret daa jmp mov pop and loop jp cmp and sub stc mov fdivp adc pop jle cmpsl inc push stc push ficompl xchg or dec push das pusha adc test sti jb test scas lahf nop (bad) lret push repz pop push lock movsb ss pop inc scas jg xor push stc dec shrl lahf and cmp pop pop das mov jle dec xchg mov mov das (bad) jbe test lods arpl lods fldt mov mov and mov xchg fwait inc pop addr16 ljmp mov jae rolb loope insl sub xor pop sub pop push dec lahf cmpsb data16 frstor aas cmp (bad) in call dec mov cmpsl sub sahf cmp das ds jle sbb cwtl ja fscale fstp push mov xlat (bad) out push or shrb push dec aaa pop sbb adc jb lahf ffreep adc push bound push adc mov fmuls add lret insb add fsubr dec dec in notl xchg sbb pusha cli jle push add jp addr16 int (bad) leave push popf push inc je sbbl das test mov mov mov mov ds fiadd cs mov xor sbb rorl lock xchg sbb add data16 lret nop dec cltd xor lret lret repz int lcall add push daa in mov outsl jbe xorl jge leave shr aas repz dec mov xchg xchg lods sub ljmp jp inc jle mov call mov mov ret mov sub leave mov js sub xlat add mov pop iret mov (bad) std mov jecxz sub dec in add lock addr16 fmuls out and outsl pop pop fdivl pop flds xchg jmp mov ret push sub out aam fmull jno clc test jecxz jg jg xchg adc in test shr into push jo push pop sbb pusha gs or rorl lock push sbb push repnz addr16 std xchg loopne mov cwtl or inc mov mov repnz mov lcall mov xchg and movsl add dec gs scas xchg cmp dec jmp push pop dec fimul (bad) out test xor jnp adc into or or or mov mov out testl add lahf cmp leave inc push sbb mov lods and (bad) lret sbb sub dec (bad) pop jnp call adc pop mov xchg inc jg mov sub pop sahf jge sti fsubl sti daa inc cmp les mov clc or js pop fxch mov and mov sbb or pop mov insb inc imul out dec or gs adc and mov jnp inc dec (bad) add inc shrl cmpsb movsw aad jp jns (bad) decl (bad) and push icebp mov leave iret insb int3 push std in push (bad) inc adc mov mov xor sti dec cmp push xchg mov fildll stc ss call lret mov mov jno inc je inc aad cmp in lds add addl rorl push sub js fmull hlt pop icebp lea dec in mov mov push mov mov xchg cmp out sbb repnz fisttpll test or xchg sbb xor andl push dec out cmc cmp mov adc add lea pop lret insb cmp pop repz loope mov inc pop ret cmpsl inc popa ret (bad) hlt cmp nop sbb xorl sub push xchg xlat fmuls shll push cld cld inc rcrl mov inc out into add mov pop in pop pop mov dec inc sub icebp mov aas lods xchg fwait mov jmp xor lcall rolb imul add mov pop and xlat int gs jl subl in lret pusha cmp cltd push movsl lret imul cli dec pop pop outsl adc lea fdivp stos ds shr insb push fisttpll jo outsl aaa add cwtl rcl fcmovnb or (bad) mulb jns or sub xchg (bad) cmpsl sbb sbb repz fldcw or jno jo mov cmp pushf push add sub pop fimull or aam mov rclb or out sbb lret xor mov push popf mov cs push outsb sub ja ljmp adc pop enter cmpsb pop adc or sti push fs js push pop mov xchg push fstl xchg sub xor cmp lahf lret out scas imull cld mov insl idivl pop or insl cmp dec popf (bad) mov inc xor stc das mov cwtl pop into mov jne push shll and ret popa sub mov add sbb out and mov mov sbb inc rclb cmp or stos add jge dec scas and (bad) shr repnz data16 dec mull add pop gs adc mov pop xchg jle jg jl fistp mov push test test loopne int3 mov cmp jle mov inc loopne inc jo addr16 popf test xchg jno push sub push push mov enter push popw jnp aad jnp and (bad) into fwait outsb arpl cwtl mov push cltd jmp cmc iret aad mov cmp push sub mov cmp push jl add std push mov stos inc pop jmp rorb mov ret rorl out cmpsl adc or push jae adc rcrl xchg out cmp jns dec or iret lret cmp inc ret pop jne test cmc rcll inc js jb mov sub dec in jl and adc je dec stc repz pop lds mov shl (bad) xchg xor pop stc adc cmc cmp add lds inc adc lcall ret mov into push (bad) xor xchg add adc mov ljmp dec out (bad) mov sub (bad) out int cmp lds out (bad) repz or push sub push sbb movsb mov jp pop push out inc imul xor mov inc test or insl xor mov fistpl shll imul jg out vmovss addr16 or scas mov aaa adc imul mov ljmp rorl insb in int and or mov sub pop iret dec mov fcmove cs mov popa (bad) jbe in les dec out inc mov jne sbb fwait (bad) mov mov sub daa push int3 lahf pop xor cmp test xchg and das (bad) data16 inc sbb fcoms lcall int adc push leave inc imul mov (bad) stos add xchg out dec out xchg in jg outsb mov push sti push pop insl mov pop cltd jl cmp mov stc int3 dec popa lds mov mov lods push lods pop fsubs xor (bad) hlt cmp in dec imul fidiv popa sub popf iret lea cmp fsubrp hlt cmp fcomps sub cmp pop (bad) (bad) lea or cld cmp or and cmovge cmp jge inc popf add inc ljmp call fldt push cmp cmpsl fistl rolb aad cltd push mov cmc or push and mov xor pusha cli xor (bad) jg or mov mov cmp jbe xor hlt movsl add out int3 dec mov or xor (bad) mov sarb push jle xlat fiadd mov mov mov pusha scas iret push fiaddl cmpl sub std idivb inc mov xchg lret sbb out (bad) xlat jle movsb movsl mov popa inc pop in mov lahf nop jmp lods jae sti inc stc mov xchg push out sub add cmp sbb pop and jg pushf sbb cmp pop test insl mov and sub popf (bad) mov stos add sbb cmpsl lret mov loop mov cltd push iret inc xchg add pmuludq mov xchg lret (bad) ljmp stos xor cmp gs subb cld pop into arpl inc jns data16 outsb jp xchg fnsave addb movsb cld iret enter mov add into pop jecxz test cld or mov sub inc adc cmpl jb pusha test mov orl add pop scas xchg mov pop into cmp aad fdivs pop lods in hlt push push cmp add dec cmp (bad) mov movsb out pop jne (bad) inc in cwtl arpl lods (bad) adc and jno leave lds mov mov and ss push (bad) leave inc push iret sar shlb jae sub lret clc or jp cmp and xchg fildll out (bad) aaa push xchg or add or cmp and cmp lods nop mov mov pop adc jl (bad) and pop movsb jne mov es test cmpsb adc mov jno mov test rorl ror mov orb iret imul in decl cmp icebp lock ret xor icebp xor aam and je add addr16 cmc and aad mov lds dec jge lds or sbb or orl adc roll fildl add or fisttp repz test pop fldl sbb dec inc outsb enter in adc ljmp xchg mov adc push mov cmp aad pop (bad) enter lahf sub movsbl (bad) pop cmp mov das cmp mov xor mov or lock cmpl pop push jb sbb mov ds inc xor stos js,pt dec pop iret mov outsb popf xor mov pop xchg bound jo cs cli dec arpl enter or or and inc jnp nop lea cmpsb fistpll outsb xchg add jmp test and imul inc jle ljmp pop pop cmp cmp cmp shll mov mov jl arpl loope mov xchg jl add push out ror sbb add pop (bad) cli sbb cmp nop xchg or (bad) dec negl sub pop fwait repnz xchg lds ja jecxz shll out and mov sub js pop mov jbe icebp jae test int pop lods stc mov mov int pop fist or push lock (bad) test mov inc loopne push inc sub push fs jo or fs adc jmp loope cmc jo push sub mov cld (bad) jmp ret lcall jl mov add pop adc jp (bad) setne jle mov (bad) je popf nop or adc roll in push mov push or je lcall sub insb jle loop (bad) sub sti and jnp cmp mov mov jl mov lea pop out push test jnp mov mov mov cmp sbb cmp das lret sbb jg leave jo test mov sub out push shll psraw imul pop jge xlat xchg shl loope sarb divl inc sub cmc and dec adc inc fsubrl out movsl sbb imul or dec jbe sbb sub data16 xchg in (bad) int cs insb jb or int3 fldcw clc inc xor (bad) leave xchg jle mov or gs mov stos insl subl ss xchg xor or sub scas jo or scas sbb in stos (bad) xor mov andb xor jmp lock in sub sti push pop push divl adc scas loopne add dec push push shlb sub test setge repz ja adc rcll arpl aad sub push xor and loope jl daa add repz mov addb call dec mov icebp data16 mov mov or cmc sysexit xor dec jo out cmpsl jnp das fwait mov or hlt mov cmp jno xchg scas je mov push in rorl or mov pop adc mov (bad) insb cld add cmpsb mov or imul jge dec mov mov int push mov xor sahf mov inc sti adc js imul aam leave xchg das jl inc cli pop (bad) rol repnz cli xchg sbb iret push adc xchg cwtl test loop aas cmp dec pop adc jg scas dec shl jns sti ret add js les sahf add pop and mov loope pop jns sbb adc insl nop add mov cmc hlt mov jb (bad) pop sub stc std sub push mov cmp data16 sub push int3 fs adc cmc push add xchg push xchg mov jns xlat sub aam (bad) sbb lock lods xchg mov bound mov push cmp stc cmp (bad) sub jle inc lcall sbb mov mov inc cld xor scas pop daa push dec push fxch arpl and ds imul fwait mov pusha dec pop mov pop sahf mov cmpsl mov mov (bad) std cltd das ja mov pop pop mov les jp out cmp push fildl (bad) es mov mov mov cmp jge ret or ret fldt sub dec add and ja and call dec xor test jo cmpsb add data16 aas fdiv ret xor arpl pop xor lcall test popf mov mov dec push pop stc push test push mov mov mov inc fs add into xor (bad) incl test js (bad) mov repnz mov enter (bad) adc xchg pushf dec push dec push (bad) into mov (bad) das movsb pop lods scas roll lret dec sub jno (bad) nop lock sbb lds mov mov sti out adc jecxz sub mov pop cmp scas jl sbb jmp mov push and lret cmp test pop fadd scas inc fidivrl jne pop sub push sti mov mov imulb dec mov int fcompl pop pop into lret in roll xlat iret sbbb sub pop icebp inc pusha dec stos rclb (bad) (bad) (bad) aam packuswb lods stc repz mov sub dec nop lret jp ljmp mov fild inc ret fwait scas adc or sahf pop cmc mov push add dec dec fdivr mov outsb addl mov or push push and pop pusha fimull mov and dec cmp cli xor sub or mov pop and rolb imul cmp int3 popa int3 cmp fstpl inc xor roll jno outsb dec push sub fnstenv in pushf cltd int3 xchg jne movsb cmp jnp je cmpsl push xchg xlat mov cmpsl (bad) in outsb fsubr lcall adc and nop xchg loope xlat cmp lea outsb clc jne das add pop mov add (bad) mov mov mov cltd sub cmc and insl jge jmp lcall int3 sub jmp loope ss push push inc xchg push cmc xchg dec outsl ja sub sub test (bad) rcl push push mov xchg and leave and movsb xor test inc sbb pop cmp rcll sti ficom pusha int cmp jl pushf push add sbb adcb push lret jns xlat mov mov cmc push cwtl xchg outsl lret ret mov sub test inc sbb cmp push insb in mov adc adc push cmp adc (bad) xor mov cmp sub sahf das mov push or sub ret jmp xor lock add out and repz cmp fwait xchg sbb ret daa ja das rcl sahf jle cmp sti mov inc inc fcmovnb or fdivrp xor add lret loop imulb sti mov outsl hlt add cmpsb popf or sbb lods mov (bad) fimull push jmp jecxz in frstor mov icebp popa outsb xor inc push mov movsl or loop,pt sbb jns add jb mov imul iret jae xchg cs lds adc cli out loopne leave sub orl adc and js in jb imull cmpl jle cmpsl popf in or xor jge adcl mov (bad) pop pop pop pop je je pop adc cmp daa les mov dec shl sahf (bad) xor sub fidivrl clc or cmp fwait xchg cmpsl push adc (bad) fnsave addr16 mov mov outsl lods sub jmp (bad) push adc push call mov ds and sub jbe dec jge dec gs repnz jecxz sbb fdivr in mov cmp mov lahf rcrl lods add test iret les jp inc lcall and jle ja test js inc mov out xchg and push push and lods sti scas data16 mov pop ja xor lods mov mov mov sarb mov es test mov jl dec pop mov (bad) fucompp xor dec xchg mov (bad) movsl inc stos push inc inc loop mov lret test jl mov sti mov mov cmp iret daa inc rclb (bad) test add fisttp jge enter and xor enter in cwtl lds fisttpl cmpb mov dec fld lahf fdivl xchg stc (bad) scas sti mov mov lea mov cmp jecxz sbb xchg test sub lahf push insb mov movsb xor xlat aaa lahf js pop shr adc push pop test sub imul (bad) cltd pushf mov push push jo xchg add or sbb xchg jne fistpll dec cmp int3 jle xor fcoml cld inc mov in imul out insb push out (bad) mov out bound fstl aas cld jo mov pop fistp inc xlat pop inc add (bad) pop das sub push pushf or ret or daa js fsubrl mov sbb inc pop outsb lgs lret push mov leave in pushf decl cwtl xor pop mov movsb fucomi loopne negl jg push insl xchg mov or and imul add pop inc push mov and dec nop out dec dec fwait add inc mov jno lahf sub push in pushf pop xchg pop test std ret mov into sub enter insb bound lahf lret jle cmpsb sub fbstp xor popa inc cmpsb stos pop fcoml xchg inc loope addb sub sub repz mov shl sub movsb jae gs cmp mov out dec adc iret fwait jae in cld push inc sbb leave sbb fmuls xor stc sbb in cmpsb fisubrl xchg mov loopne sbb mov add mov std mov je pushf movsb xorl xor bound sub or mov cli mov jne inc (bad) sbb gs in push daa pop push enter mov mov ds stos frstor cltd shl je or dec aas loopne mov leave and jp xor inc es jecxz out ja in fucom add fisubr insl push cwtl xor stc insl fidivrl ja xlat test mov addr16 sub xor jno pop inc mov jge,pn pusha mov sbb pop aam and jo cmp rorb ja ss inc sbb xor sub int3 adc stc cwtl mov cmp sub dec out jecxz mov enter dec mov add xor out xor js icebp stc (bad) rcll push stos push mov outsl and sarb adc pop add aam mov mov add pop test fsub jns adc lods addr16 setle sbb std jae into mov add pop adc lahf xchg insl fstps dec out inc cmp (bad) push dec dec movd ret dec add outsb les sub adc xor mov sub and cwtl pop mov (bad) fist and in mov jmp jg hlt pop dec loop jecxz push xchg fnstsw adc enter (bad) insl xor test shlb jno imul ljmp insb mov cmp mov inc aad dec cmpsb mov inc add mov insb ret jne pusha or repz xor ret mov inc add adc enter cmp and mov (bad) fucomi mov inc sti daa dec aam aaa (bad) int dec push cmp addr16 push cmp cmp mov adc jne push push (bad) xor push mov mov cmp mov jo push add xlat insl pop fisttp lret outsl lea adc and xchg and (bad) mov pop xchg fucomp dec in fxch movsl rorl add fsubr pop xchg test jmp mov push loop repz mov outsb jg insb push sub fs test test rcrb xchg fnop imul xchg xchg icebp das or orb push test mov mov jl loop cmpsb ljmp pop push pop in stos xchg sbb (bad) mov sub fnstenv lods xchg (bad) (bad) clc cmpsl (bad) mov loop loopne xor inc mov dec jnp adc jno mov ja shlb bound or inc fisttpll mov push test mov out in aad ficomp fwait add fisttpll jno scas xchg cmp (bad) inc popa cmc test (bad) sub loope,pn jbe cmp popf clc fadd das in inc push outsl (bad) mov cmp xor add jl jp inc imul (bad) (bad) (bad) jle mov in mov add aam movsb mov push sbb not mov sub into rorb mov or inc (bad) or mov fsts mov (bad) ret mov push inc jl rolb inc jle dec rorl insl mov inc test push stc mov mov jmp roll test push and inc movsl pop add and aas pop (bad) mov sub pop or inc or push sti mov lret xor aad stos pop adc addr16 movsb test rcrb and dec jae push out outsb insb cli call out shl jg mov icebp pusha xchg xchg inc enter jp cmp icebp pop das push mov out jle mov cmp fwait jle adc jae xor xor cmpsl int (bad) fstpl leave mov gs xlat adc fildl and inc jl (bad) shl (bad) add push lahf into lods sbb pop mov inc cmp stos mov inc cmp fidivr adc inc mov pop jns add push out repz test add loope mov mov or mov gs lret iret push leave cli inc (bad) cmc mov xor pop dec jecxz or dec xor scas add mov in ljmp inc push ret out jg adc mov adc mov xlat leave je xchg fildl cld mov cli push mov dec pop cs sbb vpminsw stc pop fcomps jnp or in loope (bad) in in push or jl push xor out xor lea (bad) (bad) into into xor cmp lret push adc and enter (bad) sub inc stos cmp dec cmpb xchg adc cmp popf pop lds add loopne push inc adc lods nop movsb movsl orl cltd scas into sarl in xchg fcmovnbe lret push call (bad) enter (bad) sbb mov adc jge enter xbeginw pop push fwait mov sbb xor cmp testb lret out inc (bad) insl mov or (bad) ja jne sub push pop (bad) int3 sarb jl add les xchg dec cmp in out sarb jp jne lods add dec sub les lds cmpsl push pop inc cwtl xor add cmp popa pop push (bad) icebp cmc sub or lret mov mov mov inc mov out repz adc js rorl cmpsb nop mov pop (bad) fmuls sub cmp aad aas adc ret (bad) mov adc jge hlt sub ffreep ja add or or add sub jne aaa rorl leave cs loope clc lret in inc sub xor sub jno pop xchg nop cmp daa ret pop imul fsts fdivr adc insl adc data16 sbb cmp push mov inc mov or and pop push sbb jge aas push ficoml sarb and mov pushf pushf lret add punpckldq loope and fisubrl xchg xchg loop aas rclb repnz daa mov cmpb cli sub rcll inc std mov cmpsl add xchg push lcall push push jg flds push xor mov hlt dec aas test mov cmp frstor xor mov fwait or lret mov (bad) dec aaa xchg test call sbb push scas call cmp xchg test sbb ss inc push fsubrs cmp sub icebp scas inc add sub dec ss pop mov icebp sub movsb jmp jns cmp jl add jl sub cmp ret cli add fstps cmc and cmpsl dec bound jp testl js pusha movsl lock in adc aam rorl add mov or mov fdivl xchg cmp or dec adc aaa into push pusha mov jns xor ss nop stos cmc aam pop xlat dec push es pusha jmp rolb pop adc movsb test add (bad) cltd insl repnz push inc scas mov outsl jbe or mov mov dec gs mov int3 or lret das sbb sarb cmp xor int icebp cwtl leave cmpsb push dec sub and popf movsb inc lods iret icebp xchg xor pop cmp and rorl add jge adc sub inc outsl mov lret push sub test push rcrb pusha pop and mov and sbb aas icebp cmp add mov mov mov mov xchg pop xchg int in jge pop jns dec cmp xchg insb movsl mov inc add les jp or je lea jno push fnstcw cmp inc xchg pop add push adcl dec mov mov (bad) pop mov push mov int scas (bad) aaa add dec jo or enter jb cwtl stc sbb push cmpsb in (bad) xorl (bad) jl cli in daa sbb mov dec in adcb bound jecxz adc into cmp aas fisubr aas int in scas aad insl arpl mov (bad) lods xor jmp (bad) pusha in mov sub inc mov pop sti xor sbb ss jmp fnsave mov xchg cmpsb call fwait sub add scas in mov mov shrb mov inc divl stc sub arpl dec in add das fmull sub xor fist and arpl mov out add xlat nop or js test push dec hlt pop sbb cs add push sub sbb mov xchg das and sub mov sbb movsl add imul test orl les lcall mov enter mov push imul dec dec into push cmpsb (bad) mov pop idivb adc bound hlt add jne push clc mov xchg mov das pop icebp jg adc sub movsb out imul cltd mov fnsave push sub jmp outsl repnz mov sbb adc clc cmp mov imul aaa or cmc push mov sti nop (bad) mov je sub mov or dec inc js mov stc mov inc add hlt in mov call sarl insl cmp cwtl sahf xor cmpsb lcall pop mov outsb add cmp outsl mov std es aas pusha mov jle jge das sub ret das sub insl mov (bad) cmp push mov sbb fbstp stc add out in sbb in inc lret sub ja and (bad) call out add shrl loope adc lods jge sbb (bad) pusha cld xor inc lret add arpl jle and in xor dec push jp stos ja or pop xor jbe ds xor pop jecxz inc sbb inc jecxz,pt idivb (bad) lock (bad) movsb mov movb mov nop pop xchg (bad) or dec jne,pn and push pop dec sub pop mov push je inc push (bad) xlat mov push (bad) dec xchg sahf push jmp movsl fisttpl repnz fwait add pushf adc sub jbe stos sbb sbb fdivrp ret mov sarl sub cli add lock fldz add mov inc inc xchg jl sbb sahf pop inc jl or int3 xchg in adc in mov jmp mov fisub mov adc aaa and jbe jno mov cs sub fildl fiaddl (bad) pushf leave mov mov data16 std aas sub adc mov dec bound (bad) sub movsb fdivrl mov mov andl pop mov (bad) inc dec push scas adc cwtl adc icebp jnp sub stc mov insb fs addr16 mov xor test mov leave xor mov mov add push sub inc jecxz std les adc adc mov leave cli popa fcmovbe fldl fsubl test lods ljmp stos or lcall mov inc repnz xor adc push dec and test mov icebp (bad) or data16 iret push and cld cs ficoml int lahf or pop nop pop cltd mov xchg dec or jl lock mov mov (bad) pop push sub mov int3 cld xchg std pop stc xor js xchg stos lods je sub adc pusha dec jge arpl setno cmp clc mov stos andb data16 ja ljmp (bad) inc pop jno sub cmp and movsl sbb xor push xchg lret negb mov jle loopne sub stc add (bad) jl dec ret test lret pop xorl ret adc rcll movsb inc mov add xchg sub cld push and scas fistpll adc bnd pop (bad) add ror jns xchg sbb jecxz mov stos or std popa lret sbb add fimull jnp (bad) cmp lock ret (bad) call jp lods out pop mov outsl popa fmuls xor cmp mov mov mov add or ds jo ds mov inc dec and ror adc mov in cmp cmc pushf shrb adc sub xlat cmp test int mov push test gs mov xor mulb mov aaa jne mov pop lahf mov mov data16 (bad) lret cwtl sub jmp and mov adc sub pushf pop jp xor pusha or jge dec emms mov pushf dec sub and push mov mov addr16 ret ret scas inc push popa pop xchg ss sub pop clc push cmpsb inc xchg pop es fidivrl xchg (bad) loop aas pop mov push (bad) cmpsb inc aas rolb xor adc cld hlt popa es sub sahf xchg sbb lret sub push inc fcomip jmp nop xchg fadds call mov call mov and pop fsubl xchg inc pusha mov fldl pop lret cmp ret lea (bad) adc dec inc jp dec pop xorb sub dec push mov jecxz insb (bad) push shrb inc cwtl scas fprem1 pop push repz in or pop cs xchg dec in stos test and stos stc add push adc cmpb push pop stos outsb dec hlt adcb inc iret inc pop pop insl or pop or add dec mov aam xor lret les or (bad) mov push dec sar cmc add mov inc add rep aam aam pop cs cmc subb adc xchg lds movsb push xchg inc icebp pop or jb mov pop sbb push outsb daa pop and sub comiss inc mov xlat in and dec sub xchg add xor adc mov cmpl lret mov stc cwtl leave add sub inc int xlat js test mov cld jle and xor pop pop or dec test mov jo jmp repnz (bad) cmpsb icebp cmp dec dec ss mov push stos adc imul inc mov mov in dec mov fldcw mov cmpsl ss push bnd push xlat xchg aas mov mov push xor push inc adcl push jo pop and out outsb out push pusha mov dec and (bad) aam lock cmpsl in xchg dec fistl imul dec mov enter jbe je inc sub leave sbb pop mov in adc ds adc xor jne cli cltd mov outsl push repz movsl repnz add push mov push fneni(8087 pmulhuw (bad) pop rcrl insl fldl sbb mov and xor inc mov enter ljmp jnp leave sbb pop aam adc shrb mov sub sub or adc fs stos or out and jae (bad) dec leave mov into inc mov movsl dec push daa jne sbb lcall das loop mov jge or ljmp mov mov insl cmp mov cmp dec inc rorb and jnp mov sahf push js mov cmp mov and data16 inc xchg mov push dec dec inc mov xor push fcomp ret int3 lock add push sbb jge mov aaa push mov das loopne jl or lcall out push jg stos pop mov xchg sbbl aaa pushf aas das cmp and test sbb mov hlt inc out pop mov xchg pusha xchg aam add loopne aas pop adc or arpl ljmp (bad) add sbb sub jb aas jae std mov xor pop je add push push or mov int iret daa in lahf cmp roll iret sub outsb fisubr cmp into cwtl pop or mov sbb cmc xchg adcl dec pop shrb inc and inc lcall pop adc adc inc add push xchg stc pandn push cmpsb std frstor cmp xor xor cwtl (bad) cmc xchg jle or clc jb les cld xor sbb dec arpl lret pop loopne es mov fwait inc xchg scas inc mov adc insl cld out addr16 movsl mov les pop mov mov mov fidiv sbb inc jbe jne fdiv sbb ficompl cmpsl and imul arpl fstl aaa loopne mov incb (bad) div jo cmp (bad) incl stos cmpsl sub or sbb dec push stos mov push sbb mov adc jb xchg shlb or ja adc xorb dec or (bad) jb xchg fnsave xchg inc es pop stos arpl cmpb push cmp add cmp dec daa in iret push mov lcall cwtl mov jo mov fs pop fdivrl into sahf rcrl mov xchg lods scas push push mov lea xchg mov cld in addr16 xchg emms lock aad mov xchg mov jge call pop add aad cld cmp adc pop jnp mov rcll xlat jl shlb fnstsw add sub add stos test adc dec cld xor test cli stos out adc jmp jo or fimull clc (bad) or sarl imul lock pushf push and adc cmp ss std or mov lods jbe or inc movd iret mov rcr mov std lds aam jle or ret pop outsl mov jecxz and pop lds sub inc xchg pop pextrw jg push ret fmuls scas out (bad) out mov add aam (bad) push or aas pop fstl mov lods adc fnstsw scas cmp jns push or jbe mov popa xchg stos int jecxz or or adcl mov or cld psubusb arpl jg adc in cmp jl and leave ret test cmp pop movsl inc adc cmp pop insb les aaa ret clc inc push ss outsb pop mov xlat mov add ret rol push jle jb or cld pop ret xchg mov mov sbb adc push ficompl fistp popf je pop out xchg sbb mov movsl fiadd dec push add sub addl pusha add pop bound clc bound ficomp push pop arpl psubusw pop add push and mov mov nop out or and mov or or xchg sub sarb fdivrl arpl ret adc mov (bad) xchg push add sbb pop xchg lea jl (bad) push pop sub jno sub dec pop or pushf mov inc (bad) sub addb adc sarl inc mov push mov inc int3 adc sub push stc sti mov push dec mov add enter jmp gs mov adc bound sti dec sub pop test sub xchg inc mov arpl pop mov add je push add dec gs xchg ss and push push mov es mov call arpl ficomp add shrl jge loope adc test mov sub sbb pop lcall jge cmpsb add (bad) add xchg aam lret dec popf loop inc lea jmp rcr shrb dec insb cld mov push (bad) cld les mov hlt or jecxz jne das fmull (bad) int pop lock mov in loopew xor xor fwait aam test into cs js mov and pop mov push jns lret adc mov lret les out mulb xchg test mov or repz adc gs nop pop xchg mov cltd jle mov (bad) in hlt lods lock inc into xchg lahf js inc add adc or arpl sbb push vpshuflw sbb or cmp xchg xchg repnz (bad) icebp and inc popa je dec jne dec (bad) jmp jp (bad) mov sti in cli (bad) les mov lret loop push push in in (bad) cmp mov mov push gs cli mov js sarb push mov sub fbld jl ja mov sbb push arpl xchg movsl push jne fsubr mov out sbb sbb pop push sub adc pop bound ret mov jecxz imul push jns push pop jge mov gs mov arpl cmp push mov (bad) mov ret ret inc les stc ret mov mov add inc dec jp cmp sub xchg loope inc ret (bad) add stos (bad) jmp repnz or movsb pop push mov rcl loop cli dec and es cmpsb mov adc out or lock aas push add cmc nop (bad) sub mov or sub test or out addr16 outsl mov negb adc mov xor aam mov add faddp (bad) push cmp or pop arpl adc pop sahf cmp xor jle sub pop loopne (bad) sbb sub inc mov outsb fimull mov adc sub push lods (bad) mov movsl mov xor jg std repz dec sti sub or rcrl out adc dec push add adcl cmp subl rcl sub in cli stc mov mov arpl fisttp out pop leave push lods ljmp loope sahf ja or mov inc jnp add or jge jno and (bad) mov (bad) outsb jne nop je jne leave aam xor test int add xor inc movl arpl jecxz xor das cmpsb aas jle adc in es mov lods movsl xchg xor jle xor pop mov mov and mov xor dec sti lods mov lret enter rcrl out out push imul pop add lock mov mov xchg psubd lock xor push sahf movsb push orl cmp ror lea popf mov (bad) or (bad) fbld iret popf aam jns sub cli cld addr16 jge insb or push or test pop add mov inc mov push std cmp and xor cmp mov ret cmp adc jmp dec (bad) xor ja jle into adc fisubl dec adc cli xchg sbb insl lods pop mov and clc mov (bad) mov cmp push (bad) lock mov sbb xchg adc pop sub (bad) mov and ljmp clc arpl movsb pushf popf and inc cli test dec adc sbbl adc jbe (bad) jae push inc int3 push daa imul int and inc jo pop jne ficompl mov rorl cmp fs and push sbb dec mov xchg cmp outsl imul push adc mov and lret cmp xchg outsl nop mov daa sub (bad) push lret cmpsl mov mov mov jno stc jbe xchg cs les mov in dec add ss inc xor in loop stc push and orl and jnp fisttp bound fcoml add mov add inc es or xor pop pop or or jp test (bad) jno mov test inc xchg inc xorl mov xchg mov mov push hlt cwtl mov or pop mov lea push inc ror push es xchg mov ret sahf test lahf popf xor data16 pop loope ret cmp arpl fldl fisubl pop jle xchg or out or fnstsw sbb inc movd gs movsl xchg sbb cmpsl xor sbb roll cmp popf arpl scas test push cmc mov sti sahf das addl push cltd mov or sbb insb out cmpsb dec push xchg mov idivl (bad) mov sub jmp dec icebp xchg ja dec mov fiadd movsb ss cld jmp push sub test (bad) addr16 sbb cmpsl cwtl cli jmp fsubrl pop and jl scas or cltd ret or xchg or sti dec push inc (bad) xor add popf sarl mov sbb dec mov xor xchg push mov mov inc daa sbb dec sub cmp sahf sbb gs xchg mov adc pop xor repz lea mov add mov add or mov xchg mulb fldl in nop jp mov mov cld dec test hlt (bad) adc jg lcall pop out mov sbb cmp push jbe jbe sbb ret mov sbb out fdivrs sub sarl insb jl xor adc mov ret jmp scas dec and or repnz das and stos pop lret out cmpsb and hlt push jnp mov cmp test cs jmp jp jmp stos sahf pop mov jmp xchg mov cmp jp sub or push repnz ret push jns loopne or jb cmp push test dec lods and or cmp sub ret ja ljmp inc shlb (bad) test decl (bad) mov xchg lods mov lds inc orl lea add fisttpll or cmp lret jo xchg lahf inc dec daa xor (bad) fiadd jo pop mov mov mov andl fndisi(8087 pop jl dec incb push decl mov xchg adc fmulp sub add in gs jp xchg pop xlat dec sbb mov xchg sbb xor (bad) lods leave add dec int3 push cwtl enter push xor in jb jnp out fidivl adc int mov xor push push negb jnp stos mov repz (bad) fsubrl rclb dec pop jl cmp cmpsb es imul push push stos mov les ljmp sub cli hlt or (bad) mov fnsave xor ja out push ja jl adc loop loope pop lods xchg xchg in inc add rorb sub movsl ficom pop in (bad) cmp fcomi (bad) mov mov das roll dec dec pop in out sbb xor out mov mov fsubl add cmc push add sub add mov dec adc (bad) fimull dec insb jno or out sti into cmp cwtl daa push popa inc icebp adc insb aad aas clc aad movsb push ret push pop inc push ret inc movsb mov sub sub jne mov flds cmpsb jecxz in scas int3 and dec pop rolb pop out or mov (bad) hlt adc add lods mov cld pop add mov sub fildll mov inc lock pop mov addr16 add bound imul xorb dec push (bad) mov sarb jnp sub mov stos pop adc jle mov mov in test es in cli sti shrb clc cmpsb adc cmp aas push lods enter insb mov clc lahf insb movsb or ja mov sub mov fwait mov pop sbb in sbb pop sti xor shll daa pusha ja jb pop mov add ds fcoml mov test ja mov and and popa lret jmp add outsb add mov in aas and lcall jmp xchg and mov push lcall xor dec and ss stos xchg mov pusha and adc rcr adc mov ljmp divl out stc jns insb push mov in jp addr16 cltd leave jno pop (bad) jb (bad) sbb pop xchg dec gs jl movl lods push push fcmovne or push hlt add hlt int3 mov adc dec and leave (bad) xchg fwait mov fs pop gs ds sahf push icebp pop sub rorl mov scas or cmp xchg lcall addr16 and push sbb cld in jle push or mov cmp inc (bad) je push adc or inc pop sbb movsl test mov jnp into sub cld data16 lret fildll xlat jbe addr16 aam fxch ret mov and lock add or xchg jns xor ja dec mov mov mov xchg mov loope test lahf jle ja (bad) rolw add lods inc pop pop aad imul cmpsb mov (bad) mov fucomip into sbb xor mov adc (bad) loop aas mov add test sbb dec xor mov adc daa or rcll inc push cmp adc lret decl push dec xor aaa out jmp repz and mov xor aaa mov (bad) rcrl (bad) aaa push sti sub hlt or (bad) sbb pop mov negb push rcr inc (bad) jecxz mov ljmp popf sbb sub shrb and cmp push jecxz xlat xchg outsb repz sub push pop repnz test adc faddl fnstcw fnstenv inc jbe cld xchg popf xor mov push imul push jg pusha jecxz mov add cmp add fisttpl imul test popf pop mov aad movsl xor jecxz sub sbb daa adc outsb shll jno jmp jnp fidiv hlt jmp repz (bad) mov and mov jno cmpl cli test outsb jge jno mov mov int3 stos jno addr16 adcl repnz sbb rorb mov shrl mov mov jo adcl ljmp xor mov adc stos leave (bad) ss xor into or iret adc nop ret inc cmp (bad) sub (bad) fsubs adc mov shr cmp or fsub pop sub mov popa ret dec xchg mov pop mov lds inc fwait lods pushf inc mov xchg xchg jmp xchg pop jle ja and rorl into pop scas mov fmuls aas jp (bad) mov outsl js movsb cmp mov lret fcmovnb scas enter lret sar lret pop dec or push cwtl fidiv mov sbb cmp (bad) out mov ja testb psllq sbb nop andl push inc add inc sub call arpl popf sbb fisttp inc in sahf pop or ds push mov das mov mov insl or xor xor jne lret push inc shll inc subl ja mov leave (bad) (bad) arpl adc xchg aaa insl outsl xor inc cwtl arpl popf loope fildl out out cmc ret or and rol mov cwtl cltd push int3 mov sub mov idiv sub ret arpl lcall stos (bad) jl aam inc lcall out in (bad) lret mov lea dec bound mov pop xchg pop arpl add mov xor or or push cmpsb (bad) xlat addl xchg cmc pop sbb cwtl and frstor jae test sti mov or in inc fcmovnb xor movsl or sti jge mov (bad) ss test stos cld pop into ljmp mov and push dec (bad) ljmp icebp adc mov xor fwait jg movsl mov lret mov pop cwtl dec and push lret scas jne in mov ret add in repz fs test int pop xchg push iret pop jbe imul loope mov push dec push in xchg out and or push in jnp movsb jno mov xrstors clc popl sbb enter dec sub call iret xlat cwtl aad xchg xor enter ss jne inc cli sarb mov scas nop imul sub out bnd lret xchg test mov ja mov repnz xchg pushf mov inc movsl xchg pusha dec xchg dec repz inc cmpsb es test enter mov fcmovnbe dec loop out pusha inc push stos ja adc inc mov int cld out inc inc xchg insl (bad) xor insb pusha loopne jb jl xchg sub mov sub push sbb enter movl cmpsb das and sub popa xchg (bad) pusha add jo mov mov cli test ret push imul xchg bndstx inc mov outsb ja ret xchg jmp or int3 sbb das push inc adcb lods pop repnz int pop xorl adc mov pusha stos sbb gs mov cltd test fldln2 or sbbl mov loopne mov xor add addl mov pusha push insb push loopne aam fnstenv add adc test and mov (bad) int sbb cmp mov xchg xlat lret jl adc dec nop and ja ja xchg in imul push fucomip push rcrl lahf ret inc (bad) cld inc lret cmpsb mov and pop dec test sbb xchg ds or mov dec arpl fbld push aam test dec and push push ljmp in mov pop stos inc and push jo pop ja mov jmp test adc fs mov mov pusha test test cmpsl repnz xchg mov xlat push (bad) mov dec sbb roll mov or xchg dec sbb cld mov out xchg ret cld add xor enter jne xlat imul add dec jle pop add scas mov mov pop cmp sub inc daa jg dec popf pop cli mov punpcklbw mov pop dec adc jle popf adc (bad) es sbbl addb jp addl sbb pop jnp inc imul dec leave outsb pop mov adc jp addl stos out cmp stos xchg cs (bad) or xchg xchg popf fucom mov test jecxz hlt and and pop rclb inc hlt daa rorb pop mov lods test inc leave sbb out xor mov rcl inc mov clc adc push pop lcall dec repnz sahf pop xor xor sbb hlt add lods hlt fsubrs inc add ja and lods minps fnstcw aam xor push mov inc fdivs add cs sahf lods ss add jne mov pop sub push jnp lods and leave xor or mov insl pop (bad) dec mov js jns dec mov fsubs sarl es adc push push repz pushf and xchg in inc fsubl test pop pop lahf jg loope pop stc jle adc mov mov test cmp nop add in bound dec mov repz xchg cs sbb mov popa or into adc add aas fcmovb jmp or cmpsl dec mov ret mov lods push es out inc pop inc mov (bad) fcomps xor xor inc inc cmp add jge insb inc outsl ljmp jg push fild or mov inc ror ljmp xchg ljmp cmpsb popa jbe add and mov jmp add mov cltd or mov inc (bad) insb push fist gs cmpsb loopne adc pusha mov push inc inc cmpsb pop rcl mov or cmp jg xchg adc jp add call ljmp or fsubrl jbe or sbb jns cs movsl fcoms lds int mov push stc ljmp add mov call jecxz and pop mov cmp lcall ss mov mov ficom in inc lods mov push sub mov push mov dec dec test faddl addr16 cli repz push dec stc ds jmp aam loope add pop mov sbb or or ret hlt dec mov dec jmp sub icebp fwait xor cmp mov xchg push in jne xchg inc add and jnp inc dec adc or lret aaa call push inc lahf leave cmp inc pop mov xlat adc (bad) hlt bnd imul lahf ret fnstsw or ljmp sub pop sbb pmullw outsb aad push pop jge xor out test and mov adc inc inc push outsl outsb and ret push ja jle push outsl push inc cmpsb cmc adc aas fs sahf sub xorl addr16 xchg imul cld mov cmp stos xor dec shrl adc divb push add pop insl fisttpll cmp cmp addr16 divb loope insb out sub lock mov popa xchg movsl or dec sub mov lea inc lret les sbb jns outsb lahf sub enter push dec aaa roll or inc jp push dec popf leave push cmp test js xchg sub push jb pop xchg test mov mov aad inc adc in andl sub nop xchg lret xor in add or dec loop shrl cmp sbb xchg std cmc push xchg or lret or or es and adc cwtl jo pop or jecxz jne outsb aad mov cld ret pop cs dec inc inc ds popa daa out mov cmpsb mov fcmovnu inc xchg sahf jae xor repz into jl mov fsubr inc jl shrb fist xchg call mov sarl and push cmpsl lea cs mov or dec inc inc sbb xor sbb ja dec mov xchg dec push sub mov ja leave or gs pop fnsave daa push push clc int3 test in repz mov xor test not add inc es inc jnp (bad) dec and es jno pusha sbb lret pop mov mov mov jae cmpsl pop shl dec mov out test lahf and sarl pop jle std sbb imul pop sbb repz aam fisubr pop loope in nop stos adc push xchg or imul add cmp lcall test inc nop sarb add pop daa add in out data16 shlb mov scas dec sbbl nop fnstcw pop leave call popf mov cwtl jl jg cmpsl jae test ljmp jg je jb aad xor pop and push xor outsb (bad) int3 cld popa push aam mov add cwtl ja mov push stc inc (bad) pop mov fs pop movsl jp ficompl and and inc (bad) fisubr mov pop fldt mov dec inc jb lods sbb mov mov fcomps xchg sbb (bad) shrl push xor out inc enter mov inc jae sbb xchg xchg icebp and mov add or pop sub cmc mov ret add cmpsl cld incl mov inc jecxz mov jae pop pop push je adc push decl sub dec pop sbb cmpsb xor mov loopne jmp push push mov mov loopne scas pusha ret push scas mov in insb adc mov insl mov xchg mov xor movsl pop mov adc fwait xchg cmp pushf cmpsl js insl add aad push fs arpl fstp push inc mov add cmpsl adc hlt sbb mov pop in xchg (bad) sti sub mov inc loop out and dec (bad) push (bad) idivl sbb mov sti dec cli sub sbb leave inc sub lahf mov stc mov xchg xchg (bad) dec push lret sub adc cmp lret pushf mov mov cmp test ja clc push dec cs icebp mov dec enter fnsave loope mov add sbb (bad) stc pushf cmpb out mov mov and (bad) jno imul hlt xor add js inc (bad) into shlb xchg pop mov icebp cld lea fdivr roll push xchg movsb fldl jns cmp and xchg test jb scas cmp outsb je pop mov jb inc mov scas sub test idivl sub (bad) mov out mov inc repnz (bad) aaa into xchg jle outsb aam cmpsl lret stc pop xchg mov es adc test mov insl aam and add ret mov aaa mov (bad) sbb add push std xchg add mov sub aam sarb (bad) push jo pop adc adc hlt jo int mov (bad) or cwtl es jbe test pop xor adc jno (bad) mov add lds xchg add push mov and sti loop pop sub pop pop inc int3 mov popf imul cmpsb es lods or in cmp scas adc ja mov dec mov loopne sub gs stc lahf pop stc cs and insl or jnp out sub jne dec loope test cmp data16 sub enter test das pop push lret or cmpsl popf pop hlt push xor mov inc sbb lcall xchg lock mov ret test ja (bad) push push or std dec pop mov mov cmc jle and sub inc adc enter jmp or sbb dec adc mov sub lock fisttp inc add dec cmp fsub sub int3 lods jmp jg ja pop in fidivr fdivrl cmpsb xlat inc inc mov cld add xchg gs iret mov mov mov push (bad) movb jecxz cmp lcall shll ljmp int jb mov mov xchg sub sub xchg fs cmp (bad) mov ret leave sbb adc pop ret cmc fldcw adc cmp cwtl lret sbb loop adc push pushf and aam (bad) pushf and rorb mov pop fwait pop and insl xchg xlat add test lods cmp jnp (bad) and je test dec std rolb xchg int xchg sbb lock jno inc fwait imul or push loop sbb cmp or lea aaa dec inc repnz pop mov pop or data16 mov pop fdivl and dec jnp,pn sub pop mov jl mov jb rol inc inc lds out les xchg movsb pop outsb (bad) xchg (bad) rorl stos mov pop outsb jo (bad) das loope and sub aas mov sub nopl push mov and aas fwait inc lahf mov fstps mov pop jae cmp push pop mulb dec (bad) call mov pop cmpsb or push fwait (bad) pop mov aas cmp (bad) ret fwait js mov in lods push stos out pusha jecxz push jb lret popa mov mov dec test and aad add out lcall xorl dec adc push mov hlt (bad) lock xlat inc push add mov ret and pop jle mov inc sti cmp mov rcll lret adc mull mov imul movsl jnp cmc xlat jno sub push (bad) (bad) fdivr loopne push add (bad) and sbb imul xchg jbe sub sahf rol (bad) cli pushf sub pop jbe sub xchg loope pusha mov sbb movsb pusha mov pop daa in push popf jecxz stos out aaa pop jg or aam mov and mov mov or mov adc (bad) icebp sub inc je shlb negb pop mov dec xchg push jecxz and push aam ficompl sbb mov sbb fwait rorl jle in insl adc je push jmp dec sub mulb jecxz inc repnz ja sub dec mov xorl xor inc mov pusha push push dec fildl fdivl or fidivl sbb icebp push dec clc mov adc es xor (bad) add push jmp or mov adc fcompl test rclb pop adc xor movsl cwtl pop mov sub shr push push das mov fstl addr16 (bad) insb xchg pop icebp push add sub (bad) mov call out outsl mov in jle int mov sbb cmp jnp cmp mov pop sub icebp xchg add jnp das cs fstpt sub divl cld mov xor sub mov jle dec outsb ret cmp lret push mov mov movsbl jmp dec and sub sub (bad) in bound jns dec jbe dec sbb pop test js movsl add scas adc xchg jp pop shr dec cmpsl jmp lods jne mov jns inc push sub stos mov push (bad) pusha xor sbb pop mov sbb mov mov arpl nop sarb movsl cmpsl daa xchg sub aam rcll pop stos xor mov aaa jmp sbb ret mov jl cmp dec ud1 mov inc enter mov jne push jmp jnp (bad) dec (bad) in dec mov cmpsb adc ret jmp lea xchg adcl xchg call lock mov jbe pop icebp add js cltd cs and out push call sbb syscall call jno mov aam fidivr test nop mov dec out shll out push jecxz push leave jg add mov hlt data16 mov mov inc ja mov push call scas fwait ror cmpb push sbb loope xchg lea jno (bad) ret mov push aam enter xor mov jp push fdivr mov sbb mov jno sbb subl or push sbb xchg arpl in push (bad) jmp xchg outsb sahf push add mov pop enter out sub mov or mov aas std mov cmpl mov xor faddl sbb jle outsb aam jecxz adc daa inc sub mov mov fsub mov mov jp ret addr16 in xchg outsl mov movsb pmaxsw and jne in xor das fwait cmpsb iret push mov mov add popf sub xchg dec adc negb mov movl out dec and fildll int3 dec and dec (bad) repz lret out cmp jne sub push lock add (bad) jecxz lds or adc test push jne je dec arpl lret (bad) mov sub cmc adc fwait mov mov mov inc xchg (bad) dec xchg mov shrl mov jl nop (bad) fildl iret (bad) test mov insl repz jbe aas mov in push fsubl xchg xor mov iret ficoml lcall xchg pop adc cwtl int mov mov loop test mov mov insb xchg sahf xor es mov jmp add mov pushf mov (bad) bound xor and push sbb xchg push inc les ja mov adc push and mov fistp and lret mov sbb mov enter mov insl decl xlat jmp pop bndstx fwait mov cmp aaa lret add adc movsl in test pop cmpsl lcall mov popf mov aaa sub leave pop pop clc push (bad) in sbb pop fcomip shr frstor stos mov addr16 sbb sahf add mov push pop adc add inc loopne enter mov mov pop addl push pop ret xchg jb and int3 cmp cmp pushf cmc adc sbb push leave jns shr mov mov and adc loopne push or pop mov push adc clc pop sub loopne repz (bad) imul push stos sti jns test xchg push adc aas orl mov jp mov mov cmpsb mov popl add jle cmp cwtl std sub insl xor test adc inc mov xor mov (bad) xor cmpsl (bad) xor push adc pop mov fcmove dec xchg aas jnp cltd xor repnz adc stos cmpsb push jno outsl fwait xor into lcall inc outsl cmp sub das add ja sub mov pop lahf sbb in out dec and mov pmulhuw fldt std jnp mov mov jge pop aam cmpsw mov out (bad) dec mov outsb adc or shlb cmp mov xor das mov sub call inc push call or stos lds lds aad sub icebp jae xor in insl mov iret mov cltd mov pop dec inc lock addr16 jge inc cmp fidivrl (bad) mov scas lea movsl hlt fidivr jb pop aad cwtl out fs or aad mov mov jo xchg xchg popa pop or sub sbb mov aam jns pop fcoml test push cmp stos js scas popf push pushl and test icebp or xchg jno dec jo sar (bad) xor lods dec cs loopne adc scas inc repz add mov jecxz movsb pop iret add pop adc jnp popf movsl xlat je pop add cmc rolb or sub jl jno cmp outsb push sub mov cmp xor stos push fisub (bad) hlt xchg push sbb fwait lods pop push sbb add jno mov mov dec rolb sub sbb xchg jl int pusha sub (bad) mov inc mov xchg xchg icebp out outsb xchg jg jno mov mov adc mov push mov jl (bad) ljmp adc adc jae sub lds sub xor (bad) sbb mov adc das mov cmc gs pop test scas pop add or shrb add inc sahf lds cmp ja add jge sbb fsubs pop cmc rcr mov negb aad aaa adc push jo mov clc mov mov xchg hlt sub jecxz push in lods push dec repz mov sbb ret and stos dec and movsl add mov fisttp mov andl out loopne push dec and xchg std lods je mov sti shrb push rcrb nop push xchg mov xor int3 sbb sub (bad) into xchg mov jb push insl repnz mov and mov fsubrs pushf mov cmp ljmp into or mov outsb arpl xchg cmp mov call mov or inc push ret pop pop rcll cmpsl aad xor inc dec fimull sbb iret cltd push mov sub jge push lods inc lock daa hlt iret mov push bound adcl push or inc sub inc jge push (bad) cmp sub dec sahf scas mov int3 sbb stc jmp mov and lcall (bad) push int3 cmpsb adc xchg (bad) sub jmp in int mov or and mov roll xlat loop sahf pop aas out xor rorb sbb mov sub lcall ss movsb icebp and xchg pop (bad) hlt scas jecxz lret jmp icebp cmpsl xor or test imul sub add mov jae lret int3 inc bound test cmpsb imul sbb aam and test je cmc (bad) and adc xchg je push sbb and cmp test shrb clc mov pop popf adc icebp lret jbe std push and jp outsb adc mov addl adc cmp cwtl icebp sahf inc popa cmpsb out pop pop cltd adc add out clc jmp test sbb lret out or js cmpsl xor shrb sbb arpl shld dec das lods adc jp inc cmp faddl push push leave sbb xor mov mov fadds pop sub test lds (bad) add push dec pusha (bad) ror sbb add jecxz or jbe push pop cmp mov jbe jg insb pop or subb sub inc pop jge lods mov mov adc push cmc adc lock icebp lcall decl rcrb push rcrb aam fsubrs and rcr pop push gs mov (bad) in shll mov movsb mov jo pop popa add xchg jno or mov int3 jae inc xchg and test nop mov outsl cmpsl jl les dec fwait mov negl dec add cmp movsl and bnd xor mov fwait mov push mov sbb inc sub pop xlat xchg das jle dec mov lock shrb mov repnz pop pop push push insb pop aam adc clc sub adc cmpsl ret sbbl xchg pop mov cwtl inc dec (bad) movsb jmp jno and repnz pop mov add mov sub dec fcompl aas adc les out sarl loopne cltd adc xchg xchg stos mov (bad) cwtl jge adc mov pop lahf cli pop rcrb mov sbb mov push mov pop add add xlat pop dec jecxz cmp xchg roll test cwtl cmp inc pop jb ficompl pop jne jo fimul adc or arpl js fdivs mov idiv es jb rorl insl or mov sbb inc mov nop mov sbb fcmovnu xor mov idivl cld lret mov out cmpsl jns fs test daa int3 add stc repnz jnp dec fnstsw loope sub adc mov fild fcomip imul popf scas sbb into (bad) lock or cmp sbb sub loopne,pn dec jl pushf mov cmc ret (bad) mov in (bad) pusha pop or sub jl jecxz xchg mov or stos cmpsb in call sub lret leave pop xchg scas inc inc mov jle rcll pusha lods mov jle mov push jmp cwtl pop mov sub sahf jl dec repz xlat dec in sub pop js add inc sarb cmp and inc xor insl and sbb sbb cmp fcom or cmc sahf out jae into jle insb (bad) fadd test mov adc iret dec mov data16 clc lret arpl sbb pop jg or or dec ja dec test or mov pop xchg movsb push pop stc cmpsl jl xchg mov sub (bad) push fwait movsb mov fildl adc or xor jge imul xchg cwtl mov push scas push xor pop mov out jp sub sbb add sbb fsubrs pop jne aaa (bad) jecxz out sbb or imul outsl ficoml int loopne js pop lds mov movsl push cmc pop lods lea pop push popf jmp or icebp (bad) test jp sbb ja lret inc mov mov mov xor cli dec mov mov js mov xchg inc pop cmpsl dec movsb jnp sbb roll das bound ds jg inc mov jle movsl sbb jecxz flds ds mov rcr push push int3 std cmp cli ljmp fwait arpl adc mov imul and pop mov adc pushf (bad) (bad) mov sub lret add xchg xchg stos pushf or jge jmp movsb int3 fldenv jecxz cmp pusha jns into mov lcall and iret rcrb fwait cmp pusha inc mov mov test int3 and or cmc xchg cmp jge push jl mov sbbl push push xor xchg cld jle jns call add xchg lcall mov sbb mov xor inc xchg int shr mov mov or jnp inc ja add gs je inc mov lds fwait jne mov jge fwait adc push cmpb lods icebp mov mov icebp xor (bad) jno adc in adc call je push dec push jo mov or insl pop jo popf arpl call sbb cwtl dec lcall sbb out rcrb mov cmp pop pop mov cltd cmp mov sub sbb aam adc (bad) pop pop lret sub jne lds into jecxz scas push fstpl cmp inc subl or notb icebp pusha cmp mov pop stos inc pop dec and xor xor xorl mov pop ficompl push ret and clc push jge inc jmp or sbb xor in add out jl jge add and int3 std or mov fdivs repnz std pop adcl gs rcl scas or inc push sub mov cmp into mov mov and push pop and jl divb xor imul inc pop mov mov sarb ret xorl dec repz cmc mov and cwtl lret inc movsb clc aaa mov cmpsb inc aas lock adc jp repz mov pusha push subl cmove (bad) rcrb sti jmp ret push inc dec cld mov insl cmp xor mov sub das cmp out cmpsl je push or sti cmp js (bad) ret cmpsb push mov add cmp push cltd stos gs pop mov scas and lahf adcl mov in sub jb ret loop and ret fcmovnb leave jle aam xor jg add (bad) (bad) xor cmp fs adc push sub xor dec adc xor das and lret jb cmpsb mov jno cmp cmc std test lds cmc mov mov pop and movsb mov mov xor ret fs xchg scas mov scas movsl xchg cmp dec cmp mov or lret mov cmp cli push pop je ds cmp imul fadd faddl je aaa mov jo (bad) mov cmp sub (bad) jb mov or out cmp hlt jge or rclb sub inc fstps ja int3 and aaa xor daa or movl ljmp xor cmp out mov sbb daa mov cld push cwtl mov dec pop aam push test xchg cli popa aas jbe xchg notl adc pop sbb inc inc mov xor mov fwait aam mov pop lods adc aaa xchg jnp ja adc adc out iret popf add mov test cmpsl cli loopne push data16 insl ret push pop aas push ret jns inc out jbe cmpsb jb pop movsb jae test popa mov jge (bad) pushf and or data16 test and xor cmpsl pop xchg cld jbe or lods movsb fwait mov roll sub enter clc cmp movsb pop aas adc jno xlat push shrl inc hlt fistp lret outsb (bad) das cld out inc push (bad) xchg jmp push mov add push jecxz stc repz clc dec iret push in pop (bad) aam mov fisttp les arpl cmp and outsb pop ret sub daa sahf hlt (bad) xchg pop mov icebp lods lods mov push push fstpl stos dec int3 outsb nop pop les mov iret ret dec int3 mov pop icebp sub (bad) jmp xchg inc loop mov shlb stos jmp xorb sub mov jg or loop das pop insb jecxz fimull andl xchg jmp loope (bad) xchg (bad) std pop iret sbb add jl,pn push fild (bad) enter mov push sub ret push popl mov iret adc and outsb lahf sbb adc sahf ret jo pop les out push mov mov jno xchg push stos popf mov sahf into pop pushf or les pop imul mov fdivrs dec sarl call jle leave mov ss lret ds dec jb (bad) in fstps dec outsl int3 mov inc leave enter fstps dec inc fstpl and push inc xor mov dec cmp fsts and jp shrb mov sub js popa sbb out sbb shlb jp xor fwait inc sub (bad) mov add cmpl dec sub and and bound push sbb cmp fisttp sarb mov cmp (bad) and jp mov cmpb push mov loop repz and jp xor cmp mov sub push adc and and xchg xor cmc mov push pop push (bad) stos sbb cwtl cmp sub icebp ret lods aam cmp loop shll push xor xchg sub lods icebp enter mov (bad) fimull aas xor xor rcrl repnz ss and mov jbe or je fldl popa arpl rcrb push push je add mov sbbl cmp in sbb mov fmul cwtl dec rorb ss pusha sub xchg pop shl xchg shl push (bad) dec out push into enter fistpll jno jne lahf aas or and les std mov pop (bad) mov mov mov loopne lods inc sarl iret cmpsl pop stc sbb dec fdivr mov mov inc fcoms fsubrl (bad) ret mov jno jle sbb push mov test dec movsb lds jecxz mov xchg mov inc push mov sysret aad push inc jp scas xchg (bad) in fstl sub bswap cmpsb dec pop mov xchg movl inc pop (bad) xor mov jle into mov or rorl mov mov popa jle (bad) lcall nop mov test lret loope fsub mov add sbb clc push aam mov dec cmc movsl cmp mov and rol clc lods (bad) xor cmp icebp es sub fs jle mov aam in sbb movsb out sbb (bad) lock clc hlt xor xchg bound sahf sahf jle mov mov dec rolb dec sub sub sahf sub push in aaa out cmpsb mov jge xchg push imul les nop push mov xchg or pop cmp call ret adc push hlt mov inc pop inc clc and (bad) or movsl dec push sub es stos jl (bad) popa mov push push cmp xor push inc dec and (bad) push frstor shrl popf cltd mov inc add inc pop cmp adc sbb icebp sub sub not in in adc pop aaa mov xchg mov cmp dec js movsb push cmp in mov xchg cmc lds aaa push aas mov fdivrs mov push call sbb push xor pop popf adc and aaa cltd sbb cltd push xlat xor cmp inc jb push clc ficoml inc shl cmp add and push and push dec xor data16 call xchg xchg pushf rorl arpl mov fsubr test call dec push aad mov jg xor shl cmp stos inc inc add jmp push dec pop mov (bad) nop and or sub xchg add pop pop andb pushf adc or and cld mov mov std mov aaa add out les push data16 pushf fs lcall mov loopne mov cmp outsl bound mov shll push lds aaa imul jle mov xchg movsb jg jg or imul push (bad) push outsb pop insb sbbb aaa outsw sbb or xor push sub sub lods jp gs xchg dec add mov in pusha dec push jo or mov and sar and xchg xchg cwtl test les leave jns inc xchg and xchg mov mov iret jb shl cs aaa bound cmp addr16 jne,pt mov jp enter xchg aaa sub xor pop lock push in sarb enter aam test adc xor mov adc xor push add je push int3 test adc std mul and pop pop mov push sub (bad) dec outsb inc xor pop fwait imul adc push inc mov jg push cmp or sub jo adc in xor or loop pop out add (bad) lods pop mov mov xchg test pop push outsl aam sub in push mov loop jecxz ja in sbb dec adc or es fchs pop push cmc in jne cmp fsubl pop cmp and movsl shr movsl mov (bad) xor lret sub dec andb rolb in pop cmp mov jmp xchg lahf sbb cmp popf dec add aad test test cmp jecxz dec push shl shlb das and inc dec push sub cmp add imul push roll test sbb repz call cltd sub xor std popa addb inc leave enter fst lods fdivs nop rcrb adc in movsb adc pusha popf xchg iret and sti sub ret inc dec cmp cltd js add xor in ss push out add lret dec lahf push or popf addr16 and xor push xchg add and cmp jp cmp mov enter outsl adc fstpt cmp adc ret push sarl cmpsb sub jnp inc jae pop stos (bad) lods jmp add scas jb into xchg in xchg stc insb ljmp pop push xlat ret in mov xor dec out sub xchg test fcmove pop imul and xchg push fcomps cmc pushf xchg add inc lods add lret and test lock jbe push push nop mov sbb imul addr16 in xchg push and xchg adc inc popf jbe insl das (bad) dec add outsb aas mov add sbb subb bound int3 das xor cmp int fisttp imul dec movsl repnz sbb sbb sub sub pop stc daa (bad) std (bad) pop icebp popa int popa mov fnstsw or lret in jno pop adc mov adc pop cwtl lods test and cmp mov sahf in sbb pop ffree jg popf les or lods popf inc jge,pn jg fcomp xor lds iret pushf dec inc dec dec (bad) xchg (bad) adc inc fnstsw dec stc mov lods ret inc xor (bad) mov int leave rolb in xor pop jo sbb das aas sahf sahf imul sbb stos ja sbb lret dec cwtl sub aas jae mov (bad) or jns out cwtl cmp jno (bad) or mov in mov dec enter sbb mov inc popa fstp iret xor pop mov jo divl nop loope stos jbe fildl xchg pop out adc xchg scas in cmp jae fsubrp imul jo aas or pop je out sbb mov cmpsb mov popa pop jne xor cmp sahf icebp ja,pn nop mov sysexit leave xor push mov cmc mov push jae mov outsl loopne cmpsl cmpsb lret mov mov les aam (bad) push in dec out dec mov enter jns mov ficom lds push outsl jg push xchg popa jnp in (bad) xor bound jmp cmpl jae xchg push arpl or clc cmpsl push mov sahf out push mov in xchg cmp insl aaa push movsb in shrb sbb cltd insb aaa push insb loop push pop push xorl ljmp jl lea pushf mov out fisttp data16 lret sub push mov popa divb add cmp adc push cmp and mov pop (bad) cmpsl cmpsl cmpsl movsl mov (bad) test xchg mov pop fist les xchg out test fistp int into cmp out fmull cmp fisub xlat test imul jecxz fldcw addr16 lea mov loop mov pop icebp or ljmp pop cltd xchg mull and out inc cmp shl fwait add jmp adc hlt and lahf adc jmp add pop push test int3 sti xlat cmpsl fcomi or add adc or push imul push dec mov push pop add jle jle mov (bad) mov loope std lea dec mov sbb stos add cwtl cwtl lret push xchg push out aas ror out pop outsb fdivr pop or adc jmp sbb sub ret dec or xor shrb test mov pop aam pop mov xchg out daa addr16 mov call xchg or jns frstor stos rorl dec jnp add (bad) xchg fs xchg xchg dec mov mov mov out sbb xchg mov add pop xchg mov pop inc clc test shlb sub cmp or fistpl jmp xchg scas or add pusha int aad leave mov into lds int leave jle (bad) dec mov push cs adc imul jp and in or sub xchg push and ja pop rcrb jl insb (bad) adc xchg loope adc dec dec cmp std and rcr rcl jle push mov sub addr16 js lods and lahf push mov jge adc mov das lret lods dec mov or movsl mov xchg pop mov add test in rcrb add test subl mov (bad) push enter mov jp (bad) out dec push pusha sub push mov xchg sbb adc mov xchg push mov rcl sbb test rcll leave jae inc fistpl aad sarb fsubrl pop xchg xchg sbb fwait pusha test jl fildll push xchg mov pop and fisubrl les les inc mov jb (bad) sarb mov mov sahf leave jnp mov mov shrb insb push lods test mov add mov adc shrl int ret (bad) js rsm adc lock nop sub sub push pop add and xor add out xor jo xor mov push sbb je sbb mov sub lods xor scas cmc sbb stos jge iret cmp fbstp push xchg xchg outsl pop lret mov add cltd jb push sub aas jns lret mov push int push adc push cmp mov repz lcall mov mov test insb (bad) push scas xchg ss fisttp mov sbb pop inc cld inc sbb lcall in ficomp pop add ret inc scas xchg scas dec sub les lret lret or xchg es mov and jbe mov and cmp inc es sbb sub out xor inc add and add lcall popa xchg mov xchg sub jl mov push mov ja sub stos fnstsw sbb jb jae jo mov jbe aam cmp data16 loopne pop pop lret pop dec mov pushf notl mov popf out jae pop fsubr cmp and lcall mov xor pop fs push dec clc inc call fist cmp call jns scas push outsl push aam sub lea mov (bad) (bad) (bad) rorl sub push into shrl rorl aad fistp sbb pop add inc push stc mov push xchg (bad) js push insb xor and xchg repnz and mov jbe pusha sbb loopne scas (bad) cmp sub cmp out add and (bad) mov les ss ja leave js push ja xor dec fnstenv imul and aam (bad) rorl out jl xor xlat fdivl (bad) adc icebp sub sub and cmp inc mov arpl (bad) (bad) incl xor jmp or push jne cmc lret add xor enter iret mov sub lcall outsb stos sbb or ret xchg adc jl je pushf lock icebp add xchg sbb das xchg outsb cwtl cmpsl add (bad) inc lahf pop mov test hlt test pop cs sbb out inc pop out pop in push pop int3 in cmp jae add in push mov (bad) iret cmp imul push aad aad jge ss push sbb mov inc scas dec scas inc mov pop mov push test loope (bad) loop dec and xor mov adc and mov call xor fdiv dec push imul sbb mov mov or jl (bad) jmp jle fldl aas in jp inc mov push push in pop xor mov cld adc mov xor shl fnstenv aam iret add jae jle mov cmp shrl pop or mov xor pop mov jne add mov mov int3 aas (bad) aas inc mov push repz or or mov hlt test (bad) in hlt jnp or imul stc mov imul or loopne sbb mov addr16 mov cmp clc icebp push fcoms mov push push bound outsl push frstor and mov jo adc icebp (bad) stc js jmp aad xor inc or dec bound hlt icebp (bad) lret out dec sub scas push pop xor mov loopne,pt fcmovnb scas jmp (bad) in pop movsl push sbb dec inc sub xchg sub dec or out jp and aaa loopne punpcklbw movsb scas rcrb inc mov movsl pop cld push cmpsl call leave xchg je loopne mov pop pop fldl stc mov les daa divb je imul jg cwtl cmp pop (bad) xor (bad) mov es ss pop lds add stos xchg cmp inc mov and fs pop xchg add test in call (bad) iret sub or lea or push decb fcomps mov jb cmp pop mov clc and adc inc std push aad in mov ret sbb sbb sub mov adc loopne push aam inc stos lds sarb movsb sbb jno push cltd insb pop xchg lods loopne lods rclb cmpsb test popf mov dec pop lea cld sbb mov movsl dec cli call movsb mov pop lea rorb inc fildl ret push cltd inc cmp dec mov (bad) int3 data16 add adc adc and mov iret hlt sbb mov clc (bad) test adc (bad) and sbb sbb fstps mov imul pop cmp dec scas gs jl adc push int3 xchg stos hlt pusha popa adc push insb pop lods jnp (bad) in fisttpl sub int3 daa mov xor fcmovu add and fcmovnbe dec syscall mov mov cmpb out and mov popa in sarb iret cvttps2pi jno mov mov or cs cmp bound lahf mov ficom mov pop fistl push pusha mov (bad) jmp push cmp push pop xchg mov aas push movl dec sbb push pop sub loope jg pop popf ficompl aas or jne jns stos mov decb (bad) xchg push add ljmp bnd sub jle mov inc mov lea and cmp in ret pushl cmovo xchg dec pop lret in in jmp inc push cmc xlat adc mov xlat fcomi stos jns lods mov push adc pop or cmp sbb mov and ret loop jns push add adc jo adc or test adc imul mov lahf xor inc in (bad) popf orl fstps push bnd or jge loope shrl cmp adc mov out jne sub sbb je negb in xor adcl in js mov inc daa aaa xor sub cmp (bad) cmc lock add idivb pop rcl inc dec fdivrl cltd pop inc pushf (bad) out test gs fdivrl cltd pop inc pushf (bad) out test gs fdivrl ffree (bad) cmpsl ret fldl in in cmp in and pop mov dec test test repz ds fs imul arpl (bad) sti xlat icebp inc fdivp inc sbb sbb adc cmc (bad) adc mov sbb test adc push in dec insl mov leave int3 outsb ret rcr (bad) cld fiadd xor addl dec adc pushf fildll ds lods jge ja dec cmp sti and xchg jnp adc pop mov ret xor mov cmp add mov add insb mov push insb push int jge arpl leave fucom mov and leave repz enter in jb stos xor and mov repnz ficomp dec jnp and mov sbb pop rcl pushl push in mov aaa pop in xchg pop test add in xor rcr fbstp adc xchg outsb addr16 ffreep xchg dec lds les push lds cli fwait fs jae xor sbb mov ja lret xor leave xor mov daa push out cmp sub das mov mov (bad) shrl fwait lahf mov or cltd ds add and fnstsw pop and or jns mov sbb mov test xorl roll (bad) bound jl sbb adc scas cmp movsl xlat push sub sbb mov xor repnz xchg push popa (bad) jb push (bad) iret ficoml inc push or mov pop les adc mov and xchg ss out mov push mov arpl pop push aas dec ljmp ds push jp mov sub inc fstpt into lds sarb push xor ds jmp in in jecxz stc adc jge test iret sbb add (bad) mov pop sub mov push add sbb es sbb push mov psubsw stc push xor push ret xor cltd outsb aaa mov cmp add test and dec sar (bad) adc shrl inc cmp sub jmp das pop mov dec push push sbb rorb mov stos sub iret int3 (bad) sahf pop stos or jo repz jg xor jnp push popl cmp or (bad) repz jmp fstps pop inc cmp sbb fwait enter pop jle (bad) xchg jmp mov inc shrb popf cwtl sub in lock repnz fimull rorl sti xchg or das fwait or repz mov or jg jne cmp dec repnz fs add aas jnp loopne gs mov or insb test xchg imul loop bswap (bad) xor mov nop pop int3 daa sarb daa outsb jae dec xor or jp xchg std nop cmp repnz data16 lahf in xchg scas movsb fadds cmpsb mov cmpsl push adc push cmpsl pop (bad) lods xchg imul xor ss std addr16 in gs test rorb jnp in not cltd (bad) mov inc xor fidivrl or pop in mov pop das pop (bad) dec push rclb cmp push add fidivrl loopne call test imull sbb mov xor (bad) jg mov mov or cld loopne push cld and inc jne adc sar adc cmp loopne (bad) mov xor adc fwait inc and shll xchg inc sub pop inc cmp out push cmp sbbl lcall push repz outsl jmp rcrl in clc cwtl enter mov xchg repnz xchg mov sub fwait mov dec fbstp dec mov adc push push lret adc and sbb push loop aaa sub scas (bad) xlat cmp push out int call stos rcl and loop cmp out cmp mov mov mov mov test xlat mov mov jae push cmp mov dec lcall fistpll call jp aam sbb adc xchg imul jo inc out inc jle pop leave stc outsb out and loope add xlat aam pop mov mov scas push jmp daa add rcl jbe xchg xor jne iret add mov in gs test mov loopne cmp (bad) scas cmpsl imul lds sub xor xor stos cwtl out xlat loop out fildl (bad) aad xchg mov pusha jl in mov jno inc jge repnz jbe xchg inc iret and (bad) scas iret mov jns fprem1 xor loop loope mov or push mov in lods clc in gs pop xchg lahf cmp bound por fstps xchg out pop repnz movsl lods (bad) out aas jnp out das push or aas rolb dec pop lea push cmp push bound notl adc mov xchg xchg repz xchg jae outsl das pop jns mov dec sbb mov pop test xchg add fmuls add cmp aad push in pop mov xchg pushf ss fimul ss xlat les mov cmp aaa out loop subl (bad) mov fidiv loope pop test mov repz mov push pushf (bad) cwtl inc pop dec mov xchg rolb pop pushf sbb sbb jnp lea enter dec fdivs inc cmp in jle cmp mov orl or daa icebp or push stc cmpsl inc and lret cmpsb jecxz push push pop pop pop test rorb mov adc aad xchg mov push mov cmp notl adc mov enter push js inc rorl call xchg (bad) mov insb hlt xor mov clc fwait mov divl pop pop sub push xchg leave mov push and ds (bad) xor pop data16 sbb cmp mov enter xchg mov test mov es push add mov rcrb xchg test push xor pop pop push and dec mov xor mov adc das mov xchg lahf sahf jg (bad) out movsl arpl mov lods mov push ljmp pmaxsw push ljmp cmpsb mov fnstsw and mov xor sbb call xchg and pop movsb cs xchg jecxz or rclb pushf jbe leave enter and pop mov mov xchg lret lret or fistpl addr16 or aad mov test daa push and or pushf mov inc inc outsl mov in into dec cltd inc cmp xchg pop (bad) and into mov addr16 test dec xchg in into cltd inc xchg loopne mull (bad) xchg pop movsb scas push jno test mov pushf fisubrl pop fnsave mov jmp jge dec jnp in dec rorl insb inc push pop rcll in or jl in cmpsl ret daa lcall cmpsb mov loopne cltd popa cmc or mov (bad) aaa xlat push pop ret cli pop pop inc xchg add cmp pop popl nop xchg push cmpsl sbb add pop or xchg lds mov fstps cmp arpl cmp inc popa decl or in mov xor ret jno mov pushf xor loopne out cwtl mov xchg add gs mov arpl test arpl scas out pop lret pushf add std imul push fsts mov and out mov movsb jmp in mov lods jmp das sbb (bad) ljmp sbb cltd es cmpsl pop adc mov (bad) out mov int3 cmp xlat je jl sub xchg fstpl sbb loop sub sbb inc push aam (bad) xor xor cmp sbb and sub push inc imul xchg add popf cmp stos sahf push cmc jmp imul jns cmpb sbb xor les shl inc sbb clc mov add mov scas mov xchg fidiv (bad) xor inc pop cmpl mov push out data16 xor and popa adc cmp rclb add xor sbb sbb push jg xor mov outsl in ficom dec pop sti dec jnp aaa push xor sbb add in dec mov push out fnstenv iret mov out adc mov int3 mov push xlat dec lret pop or mov or (bad) cmp pop jp and mov in pop adc jae inc dec jb xchg mov inc lea push push fstpt fisubrl mov cmp cld or lea test fbld pushf xor andl loopne pop jno adcl out mov mov jns mov pop cmc iret push roll lods andb jg cltd cmpb jp repz mov and push in fmull fmulp or in dec rcl push test xchg xchg cli cltd loope sahf sub inc push ss inc sub lret pop stc fisubl int3 loopne cmp pop push push jecxz dec sbb adc mov mov ljmp sti mov adcl adc mov sbb int3 mov sbb cmpsb adc lock ret add inc pop loopne fisub loopne mov pushf call sbb clc (bad) into cwtl lahf clc mov out ds mov pop cwtl add leave dec cmp hlt push inc xchg popf dec sub add dec pop imul cmp outsb cmp jg in mov enter fisubl fwait outsl push cmp idivl popa inc or clc das mov mov or add and andb or mov gs push jbe aaa orl lods push xchg add xchg out sub jmp imul push popf add (bad) into cld imul lods mov mov imul xor cmp out fisubr add inc sahf cwtl push gs cwtl fcmovnu fdivl push sbb ja and xchg and xor xor addr16 cmp sbb cmp nop mov mov and test std push add and sbb push sub pushf mov fimull cs popa mov or mov cmpsl bound lret inc jp mov mov (bad) faddl out das fstpt and adc fstp in jmp and jae xchg sahf rorl les sub lcall outsl fwait ljmp xor idiv jns jb sysexit nop push dec fsub sbb jg mov popa or or outsl icebp or loope inc push gs les sub (bad) mov inc sti cli aas sbb mov sbb sub idivl fwait outsl fwait add lcall (bad) out xchg aad out sbb jnp fcoml test outsb push dec scas inc jo jg sbb ja js cs or icebp int3 cltd cmpsl cmp inc sub pop push inc loop addl inc loop mov dec into std add mov jnp push ljmp mov test cmpsb rorl or mov popf test popf mov add addr16 out pop cld lahf adc xor movsb pop dec push inc push bts adc in ja fsubr mov jno xlat jbe xchg fisttp arpl lahf xor dec hlt test mov inc push and outsb and (bad) or subl test push ljmp dec xor test int pushf mov mov inc mov int3 (bad) scas adc and adc jne jmp je notb fs xchg jg mov out arpl mulb sub scas mov daa nop clc incl jge inc aas adc xor stc jl push sub xchg adc scas popl jae push jb and je (bad) mov test inc shrl es sbb test xchg into xchg (bad) aam xchg cwtl mov (bad) adc push jmp adc jp in and test mov add cmp rclb fnstcw cld xchg stos push outsl out pushl pop inc ds subb fwait sbb in xchg mov insl and (bad) cli fadds cltd cmp pushf fdivrl inc in (bad) mov sub sbb xchg fs mov push orb fnsave out xor les xchg stc scas in xchg (bad) pop jne in imul jns mov hlt pop arpl scas jecxz mov add or xor fs xor repz test sbb xor mov jge lea mov int3 lret and repz cmp pushf mov enter push loopne fsubrl pop out push insb stc xor push mov aam cmp imul mov jbe adc add adc mov (bad) fdivl mov push les imul aaa in sub push loopne mov push inc adc shll dec sub test shrb repnz loope pop sbb rcll mov pop pop mov out xchg mov adc jno sarb mov jbe mov lahf pop ja iret lahf pop xchg inc into pop movb mov mov out stos xor xlat mov mov rcl dec (bad) or sbb pop ret xor mov add lock test jp cmp movsb sub movsl outsb cld popf fisttpll (bad) sbb pop cmc mov lods inc xchg lahf ds clc jecxz xchg int in inc dec dec fistpl scas cmpsl and aas xchg and scas xor pop lret lods sub (bad) test ss cmp ret adc xchg mov add in mov and mov xchg jno jle iret mov mov clc xchg movsl sbbl mov sub popa mov ljmp fldcw and mov fbstp push jmp iret sbb mov mov pop xchg sub and jmp xlat aam ds xor xchg xor (bad) repz (bad) or or out pop rcpps pop dec into mov mov mov (bad) mov xchg (bad) test or rdpmc daa pop aad imul (bad) mov dec fisubl dec shlb ficomp ret mov xor mov adc lcall push sub cli outsl repnz ds sub arpl xchg int3 icebp out dec pop inc in cmp stos popf adc adc mov fcomip jecxz aaa inc jns and mov popf lcall gs test in ljmp mov or into adc add std test push push xor jbe aaa aas icebp jns call xorl repnz mov ficom jns xchg mov cmp sbb out (bad) pop in sahf lahf pusha push mulb addr16 sar jmp pushf pop xchg xchg cmpsl inc sbb ret jge pop xchg movsl xchg and test ljmp out cltd movsb lret aad lds mov scas mov inc imul inc jle xor ljmp jae mov or jp dec add dec jmp call jl mov xchg mov push adc outsl mov in int3 push outsl sbb (bad) mov movsb sub shl enter jge or jle add xor xchg jl dec mov push mov xchg jnp movsb push pusha imul movsb outsl repz mov fcompl jmp push pop jnp aam (bad) mov add add and clc mov mov lcall pop lea stos mov int sbb jmp cwtl mov add jo inc ja mov setp data16 out popa jmp add cmpl push mov jne adc or outsl into push jp loop lods xchg mov test xchg mov cmpsl fs pop test push call subl push jge lahf orl lcall dec add xor pushf jg push aad data16 insl xchg cmc repnz mov cli rorb clc push cmp inc push mov pusha jl outsb orl mov mov pusha mov (bad) mov sub inc fadd push in ja jecxz cs cmp lea into (bad) mov sbb mov and out sbb add xchg xchg sub orl mov push push test divl mov jmp cmp aad xchg cs xor loop icebp adc shrb jl cmp ss xor icebp mov nop jl aaa inc sbb fildl pusha jl xor jp mov mov enter push push test xor dec and sbb adc imul xor sub mov jnp fimull mov mov rolb jg in cli pop hlt jmp xchg push sbb ror lds jo mov inc pop sub (bad) idivb push add xchg push and and int3 pop push mov stos xchg les xchg inc jge (bad) mov mov push jne cs jnp sub cmp dec pushf cmp jmp sbb into or lret mov mov movsl pop lds jne int sbb sbbl ret pop lds mov sbb in fldl inc (bad) out pop daa popf rcrl dec in aas aaa loopne mov cmc or inc xchg psraw cltd add inc dec rol fidiv out jns dec xor (bad) out or sub add dec enter in and pop jecxz int (bad) jl push pop call jae bound stos aaa adc mov add in jae bound jo jp jecxz cmp adc and add mov bnd call pop xchg movsl fidivr cmp mov xchg repz xor jmp pop lds dec lock pop pop add mov insb or or mov jae lretw (bad) lock mov fcompl imul sbb sub loopne dec and (bad) push mov imul lret lret shlb mov sahf fimull sbb jmp aas xchg push test inc xor push mov shrb stos addl icebp (bad) aaa mov (bad) pop dec pop ljmp aaa push (bad) xorl rorl mov bound cmpsl out fisub inc ficompl (bad) push mov mov lcall aaa sub and push xchg jecxz sub or cltd mov es into sbb mov push mov mov xchg adc loope divb iret lcall pop movsl mov cmpsl scas jge mov pop repz lcall push dec sub xchg call pop into adc mov sbb push movb pop into mov fdivrs je mov adc incb fisttpl or cmp movsb or rcrb inc ror inc mov adc or (bad) icebp pop icebp outsb stc fdivp sbb (bad) dec push lahf sbb pmulhuw scas fistpll test mov lahf rcrb pop sub scas (bad) cld pop push fs sub cld dec cld cmpsb pop adc xor push outsl add fcmovb lcall ret sbb cmp xlat mov xchg enter ret jp (bad) push jle adc mov lock cmpsb pop jmp cwtl sub mov js test aad xchg mov data16 sub sub mov scas not pusha test and lahf push jecxz aad in pusha aas dec in out inc or cmp rcrl (bad) jmp rolb mov jmp xchg sbb cmp aaa mov mov jo jno xchg loopne xchg cmp pop adc or jge jge jge jge jg push in je pop jl mov mov mov into arpl popfw sub mov sbb cmp and mov and les xor mov jb (bad) xlat rol xor inc lea inc or movsl ret lods xor (bad) fcoms dec sbb and aad fistp jo rolb .byte 