inc cwtl adc xchg pcmpgtd or data16 push xor sub push bound mov inc or data16 or je or popfw dec push data16 lahf or pushw add data16 push data16 xchg pcmpgtd push ljmpw fwait or adc or add data16 or and xchg pcmpgtd jbe data16 data16 mov pcmpgtd and sub data16 pcmpgtd add dec insb push mov data16 add test data16 or data16 data16 dec push data16 ja data16 adc insl push data16 popfw sbb inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add add sub add add add add adc dec add popf dec add add add adc xor add mov jb add jb add jb add jb add jb add jb add jb add jb add jb add jb add je add dec add je add je add je add je add je add je add jne add jne add jne add dec add dec add add dec add jne add jne add jne add jne add jne add jne add jbe add jbe add jbe add dec add dec add dec add add jbe add jbe add jbe add jbe add jbe add jbe add ja add ja add dec add dec add dec add dec add dec add ja add ja add ja add ja add ja add dec add js add js add dec add dec add dec add js add js add js add js add js add js add jns add dec add jns add dec add dec add dec add jns add dec add jns add jns add jns add jns add jp add jp add dec add jp add dec add dec add jp add jp add jp add jp add jp add jp add jnp add jnp add jnp add dec add dec add dec add dec add jnp add jnp add jnp add jnp add jnp add jnp add jl add jl add jl add jl add add dec add dec add dec add jl add jl add jl add jl add jl add jge add jge add jge add jge add dec add add dec add dec add jge add jge add jge add jge add jge add jle add jle add jle add jle add dec add dec add add dec add jle add jle add jle add jle add jle add jg add jg add jg add dec add dec add add dec add dec add dec add dec add dec add dec add dec add (bad) dec add (bad) dec add orl orl orl orl test mov dec add test lds dec add test fiadd dec add xchg fldl dec add xchg lock lock add dec add mov add dec add mov adc dec add mov sub dec add mov sub dec add mov cmp dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add nop dec add nop dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add cwtl dec add cwtl dec add cwtl dec add cltd dec add cltd dec add cltd dec add dec add lcall xor dec add dec add dec add dec add dec add fwait dec add dec add add dec add add add dec add pushf dec add pushf dec add pushf dec add popf dec add popf dec add dec add dec add dec add dec add dec add dec add popf dec add popf dec add popf dec add add aas jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add cmpsl xchg in jno jl mov in pop iret add add add add inc outsl jb outsl outsb xor add add push add add add add and add mov add add add add add and add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and xor add adc inc add sbb pop add add add push inc xor add or or add add add sbb push lock add (bad) decl add add add add add add add add pop inc add add add (bad) add add add push push imul jb jae jns add inc outsl jb outsl outsb xor add add add xor mov dec cmpsb sbb scas xchg add add movsb add add add add add add add data16 mov aaa je xchg jnp pop cmp add add add sbb add add inc add add dec and add add cwtl outsl dec add (bad) (bad) incl add add and sbb dec add add add xor add add add sbb add add pushf and add add rcrb inc add add add sbb add add aam inc add add add sbb add mov push sbb or dec add add add add inc add pop add add pop and (bad) (bad) (bad) incl sbb jo xchg push (bad) (bad) incl add add sbb pop sbb push pop inc add inc add add add add add add add jo add dec add add or inc add mov add add add add add add add add dec add (bad) (bad) incl add add mov add add add test dec sbb add insb and add add dec sbb add push sbb add dec sbb add push sbb mov push push inc add mov add nop sbb inc add adc xor add pushf and add add push pop xchg lods and add add inc add add add add add int3 push inc add xchg sub inc add add add add pushf and add add xor inc add xchg xor inc add add inc add add add cmp inc add add add xchg dec and push add add pop add add inc add (bad) (bad) incl add add add add pop inc add xchg push (bad) (bad) incl adc dec add add add test inc add xchg jo inc add add add adc dec add add add call pop xchg js inc add add add add add inc add sbb add inc add inc add add inc add sbb add inc add inc add add sbb add inc add inc add add sbb inc add inc add inc add add sbb inc add inc add inc add add push inc add sbb add inc add inc add add inc add sbb add inc add inc add add add outsl dec add (bad) (bad) incl add add add clc adc lea add add add add add add add add add add add add add add add sbb add (bad) (bad) incl add add and add add loopne test (bad) incl add add add inc add (bad) (bad) dec and cmp inc add add add xor addl add pop inc add (bad) (bad) (bad) cmp inc add add add mov add add add inc add add add add add incl add addb add add inc popa ja insb imul dec popa bound je jb add add outsl outsb jae outsl jb add add jb outsl outsb xor mov inc les xor mov jmp stos mov inc popf (bad) (bad) clc lret pop xor mov dec cmpsb sbb scas xchg std pushf cmp xchg xchg pop fdivp cltd dec xchg add xor or stos add xchg dec jo imul sti cld cli mov or sub jno inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov inc add add add add add add add and add inc add mov add test dec jo imul je outsl outsb xor repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg inc outsl jb add add dec jo imul je outsl outsb xor or pop add out lret dec xchg and push dec mov scas mov dec mov rcll data16 mov aaa je xchg jnp pop cmp pop inc rsqrtps stos mov mov mov or inc add or add add or add or adc add add adc add pop add add gs xor add add add insb insb push imul outsl arpl hlt and add add add int3 mov add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add inc insl jo jns arpl insb gs imul inc add inc add add fdivs add add add mov or je jmp push mov call jmp add add add add push jo popa je push arpl insb gs imul add inc add add in dec add or je jmp push mov call jmp add add add add push jne jb push arpl insb gs imul inc add and add add lock add or je jmp push mov call jmp add add add add add add add add add add add add add add add add adc add push add bound add jne js aaa add add add add push add popa add add jae push add add add cmp push add xor and push add xor add add test inc add add add lods xor or stos add xchg mov dec sbb mov cmp or add inc add insb add jb jns add add push inc inc ss dec dec add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push popa jb jae inc je add pop pop jbe popa dec bound outsb add jbe popa push popa jb fs jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jo xor add pop pop jbe popa dec bound gs test inc add mov add jbe popa dec outsb inc jb outsl jb add add jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb jne add jbe popa push popa jb outsl jbe pop pop jbe popa push popa jb jae dec add add jbe popa inc jb gs popa jb add add jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add dec xor push xor mov dec cmpsb sbb scas xchg mov inc les xor mov jmp dec lods xor or stos add xchg dec add add add add add fs imul add insb jns je insl add add inc add add (bad) (bad) (bad) jmp add insb jns je insl add clc or add add add add incl sub add add add je outsl outsb add add add je outsl outsb add aaa add pop adc add add add add pop add je outsl outsb xor push add add je outsl outsb xor add push or add add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add adc add add add add add je outsl outsb xor push add add je outsl outsb xor add mov add incl sub add add je outsl outsb xor add je outsl outsb xor pop or cwtl add add incl sub add push or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add add adc add add int3 xor add mov aaa je xchg jnp pop cmp (bad) (bad) out lret dec xchg and cmp xor or stos add xchg les add or dec popa bound je jb add jo imul sbb add and xor add es es add add add add add add fiaddl add add and add add lock add loope add je and fwait popa fs repz cmp cmpsb inc (bad) push jp clc add movsl (bad) lcall pop loopne xor xor iret movups mov jae xchg mov sub push in test and sbb cmp xlat jne out test ret jns ss sub xchg xor jg and sbb (bad) int dec negb sbb sbbl sbb xor inc (bad) sti iret orl out fldl clc jg pop jecxz xor mov stos (bad) adc in pop sbb faddl sub ds aas and mov add dec clc (bad) jno pusha les push xor sub push inc js movsl sub lret xchg xor pop lret repz or js insl adc sarb mov mov je jp inc lea inc mov mov sub xchg ret or sub push mov lods mov fidivrl dec xor push repnz pushf inc push inc pop (bad) stos lahf jmp (bad) jb mov xor mov adc or mov test icebp and pop fldt rorb xchg mov lods mov cmp push in add (bad) jb push pinsrw ljmp hlt js movsl jnp into outsb jecxz aas enter mov sub sub in movsb mov mov push or aam popf out xor roll mov mov dec push mov ret lock cmp movsl pop xchg push (bad) sbb mov lds movsl add ds add dec stos ljmp rcr aam and add movsb or adc insl xor loopne xor lock sub (bad) push gs into xchg cwtl xchg daa (bad) (bad) sbb push mov push sbb sbb icebp mov dec cmp xchg sub xchg xorl inc pusha mov mov sahf aas (bad) pop ds stos or and push push loopne in imul inc mov rolb imul or je in bound sarb mov (bad) xor and push and or dec pop mov fdivp test fnstcw in leave push mov shrl es mov pop mov jb adc rclb stc sub in (bad) in xchg inc in mov scas inc cli pop jecxz fmuls jmp push cmp cmp iret jp pop pop int3 push (bad) movsb repnz (bad) push jecxz jp (bad) lahf mov xlat jecxz add jne arpl cmc lods lds sub sarl insb cli add cmpsl leave adc pusha lret pushf pop loop xor (bad) fsts into addr16 (bad) xlat sbb pusha push and rcll cmpsb inc stc movsl popf outsl stos mov adc mov insl inc repnz adc call (bad) hlt stos xor cltd sbb fcmovnu pop leave mov mov pushf sbb scas aas xchg mov pop mov cld add rorl sbb loop (bad) ss mov enter popf sbb mov movsl pop fstenv cmp int imul in lods push fisub test inc push sbb nop mov (bad) (bad) jae (bad) (bad) cli inc dec dec icebp adc cs adc sub ja dec pop sbb cmp xor lods out aad jp outsl adc ljmp in out xor adc adc stos cmpsl jnp mov xchg inc inc mov popl push out mov or push inc jno pop sub cltd gs ficompl lods fs sahf std hlt mov insl dec xor add mov xor fcoml push (bad) sbb inc add dec ret pushf cmp in pop push out pop pop add lahf data16 cmp or push dec sub sahf rcrl ss jg (bad) fisub push outsb into imul push int3 inc add rcll sub inc jmp mov mov pop cwtl jns ljmp (bad) push cmp pop or jp repnz int3 push (bad) movsb mov add fisttp aad sahf mov adc loopne pushf arpl hlt stos les sub sarl adc add cmpsb leave fwait lahf pusha or ljmp fmuls xor rcll into (bad) adc stos pop jl sbb xor jno jmp cmp int hlt fnstenv call push ss push adc jl in jae lds fnstsw les movsl pop push xchg or (bad) fbld jnp mov add lcall mov (bad) xor push int3 leave loopne fadd sub mov test dec mov xchg leave and fnstsw imul mov dec fucomip push xor lret ja inc cmp xchg outsl fs jbe loope pop jb insl push pop and mov mov jp fnsave inc rorl outsb call cmc cmp mov and into loope popa sbb add hlt cmpsl pop adc mov dec mov (bad) xchg cmc and cmp (bad) pop fcmovb sti mov icebp insl cmpsb jmp mov repz sub lods adc ficoml hlt fs sahf std adc fsubrs mov mov xor adc dec mov dec cmp and cltd sub dec push rorl mov lods dec and sub adc add push adc inc jno mov divb xor dec fwait inc int3 nop pushf (bad) mov cs sbb sbb inc hlt fs add lock mov fcmovnu pusha (bad) lret pushf sbb lcall fsubr test leave lret inc mov fs mov mov jns outsl or mov jnp push rcr sti lahf insl mov decb xchg add and aad inc xor dec add dec mov sub rcrb mov daa repnz imul loop or (bad) lcall dec bound rol mov and adc (bad) xchg add and cmpsl scas ja cwtl ljmp or int3 test cmp mov mov std fsubl divb adc jo push mov inc add and jp in pop rcll bound push std sbb sub sarb insl dec lods mov pop push push aas movsb pminsw fildll es inc (bad) xor jge jb xchg in xor loop popa or xor push or jno cs imul xchg lods cld sbb mov xor pushf mov jae (bad) adc fnstsw les add shrb fidivrl xchg jp push adcb out inc addr16 int imul jns cmp inc enter sub add push movsl leave outsb or push adc xor inc ss sub bnd lds jecxz shl (bad) cmpsl pop or aam out pop ja cwtl (bad) or push xchg mov popf jns outsb jb cltd mov data16 bound mov scas dec dec mov cld sarb ss (bad) and pushf dec movlps mov adc stos ret daa mov jne (bad) or (bad) lret loopne enter fistp xor lret daa loopne (bad) sub stos xor in mov mov std pop in fimull inc test negl fs dec cmp xchg clc sahf cmp and int or and fwait mov adc xor pop lea outsb inc add cld (bad) int3 test sahf mov inc cli test lea insb rcl sub sbb mov push movsb in outsb push mov add scas jnp out icebp jmp adc xor and cmc aam out push or imulb sub aas cli mov mov cmpsb xor add and aad inc nop mov or pop mov jmp sahf fwait inc gs jg cwtd xchg clc jge rcrb xchg cmpl add push push pushf inc mov imul test push mov or pop jb xchg ss mov xchg jae imul (bad) cs inc (bad) pop sub jp stc mov loop leave sahf cs (bad) dec sub (bad) mov pop out dec inc xchg insl push sub popa cmp scas (bad) xor or pop lods add dec pop sbb cltd push (bad) popf sbb popl pop add int iret lcall addr16 faddl mulb mov jno jbe inc mov test push rcrl out stc (bad) xchg xchg (bad) aaa clc xor sbb fisubr or jge cld mull mov push xor daa aas lock xchg int mov cmpsb jo inc outsl xor xor movsl aaa and sub fimul addr16 loopne xchg lcall mov push sub cli sbb push aas sti mov xor push ljmp inc bound mov mov pop sbb xchg lods cmp sub int and ljmp mov rolb imul sar or jbe out fs call mov push pop test outsb and mov jge,pt mov push insb push push xorl or test pop out jns push dec adc rcl adc sbbl dec push adc cmpsb ss test push (bad) cs div xchg int cmp mov sub pop jp xchg adc shl xor lds movsl and xchg cltd cmpsb loopne aad sbb aaa pop cmp mov xchg dec (bad) outsb push test jp cmp push loope or and ja jmp xor push adc mov bnd or (bad) pop jb lods dec add sbb jbe inc clc xchg sbb adc mov aaa jmp imul push sbb mov pop pop jns pusha lock aad dec clc mov gs fsubrl movsl jl (bad) (bad) jbe mov pop pusha fildl pop pushf hlt add lret lods in in pop xor xchg pushf out xchg and lock and xor add push mov mov aaa and or insb xlat or test out sbb clc pop hlt sub pop je ficom (bad) push mov push jne adc dec cmp add (bad) out daa cmc sub mov sbb pop dec je in adc push inc sahf pop inc mov rcrb jmp imul jb adc cmpsb repz mov xchg sbb push cs mov jp sbb ret cmc dec popf repz cs js jb add dec jmp in or test inc and lock jno (bad) (bad) xor jl adc addr16 ja,pn ret jb xchg inc roll out mov test lret mov out test mov dec cltd jmp push adc fcmovnbe mov jle lahf (bad) adc cwtl xchg lods pop test hlt pusha cmp xor mov cwtl shl mov in (bad) (bad) jno lds insb fwait mov pop cmp outsb pop sub mov xchg dec decb or mov cmc fsub lods mov (bad) mov les leave test xor adc push iret in dec mov adc push out xchg movsl shrl cmp xchg mov pop inc stos fisubr jae clc xchg sarb push jle cmc sbb dec addl add jns mov je mov (bad) xor and sbb mov push es inc scas enter pop (bad) loopw imull lret mov stos sbb fmull xchg rolb or sarl (bad) aam cmc add dec adc cmp mov jno sbb adc add mov or out pop ficomp jecxz nop dec cs outsb fidiv or sub pop fs xchg mov sub add (bad) cmp repz leave cmp clc mov sub sub outsl cwtl ret fnstenv sarl pop hlt mov adc mov xchg and ja inc jge leave jecxz add jbe (bad) inc ds push cmp mov (bad) jnp stc push push imull inc push lods stos das lcall in xchg or out adcb andl xchg xor into jo pop ret dec push xor daa sub movsb sub lret jle cmp out loop das cmp pop imul jl hlt mov popa in mov add repnz mov fstp andl in pop (bad) daa ret lret in inc out imul (bad) movsl ret int3 popa lock bound cwtl mov mov (bad) jne ja (bad) (bad) pop pop lret adc or imul mov rcrb in subb cmp push je adc hlt mov repz cltd das mov cmp jl imul in add push adc dec inc popf jmp adc push fcoms into inc cwtl inc leave rcrb psubusw push sbb out movsl mov test gs mov jg cltd adc adc add (bad) sbb xchg pop shrb sub push push dec test loop lods movsl (bad) icebp dec (bad) jo loope in imul adc xor sub push inc leave xor arpl sbb enter dec xchg push add dec pop jmp mov in jae xor clc icebp mov pop sub iret pop cmp mov ljmp dec push adc xchg outsl enter jp movl packsswb fwait fs xlat jge movsb cmp jo je imul jnp ds inc ljmp das fbld jmp sub js sbb mov sub hlt jae push push je push add add pop cmp nop test mov mov mov in js or les mov out mov daa inc push loop and rcl int3 arpl ja notl popf jne in add mov mov rorb ljmp jo cmp push and mov pop jns lea sbb fidiv bound rep ret xchg mov stos add jle and sbb inc js pop fcomps mov and bound imul (bad) xlat fstl pop pop sub sub xchg stos mov fsubrl aad shl sbb scas lods adcb mulb (bad) mov repz sti in fisubrl inc lcall jae pop fildl cltd in or mov repz test gs enter mov (bad) mov add xor cld jl add insl out pop aam rcrb sub (bad) lahf push loop mov mov int push pop (bad) cmc inc dec inc in mulps movsl adc loope sub sub xchg ret or data16 push mov lods xchg sub sbb dec sbb add (bad) stos mov test push add aaa icebp fisttpl imul test jecxz call ljmp repz or push lahf ja xchg addr16 xchg pop cmp das xor sahf nop jle lock enter jp movl out inc ljmp pop mov (bad) mov es inc scas push (bad) (bad) (bad) test fisttpll mov arpl enter insb cltd mov (bad) cmp cmp sub test and std test mov test mov sub mov rcrl enter or inc cld sub je ficomp int and mov pop js push movsl mov stc orl dec xor fsubrl jmp fwait mov inc add (bad) jl and in mov aam jb outsl push sbb xchg or xchg pop fcmovnb (bad) ja sahf xor fsubr sbb fbld enter adc cmp in push fcompl lcall add cs xor xchg pop test insl in bound es jg int ret mov leave ljmp cmp lea jmp outsb dec jne in push (bad) push mov pop xchg cmp sub ret mov jle jo fwait sub lret (bad) lods (bad) rorb xchg (bad) out push ljmp mov mov cmp add push ljmp inc bound mov mov dec pop inc fstl repz xchg cmp rdtsc jnp (bad) xor add dec jae ljmp inc pop push scas pop (bad) sbb lret repnz pop in jge stos shrb ror fwait xlat mov rcrl fs clc int3 jle repnz ret xchg cwtl fiaddl aam call sub aaa or test ret cmp sbb bound sub (bad) mov pop out dec inc xchg insl pmulhw popa clc loopne repz cmovno outsb repz js add and imul int sbb popa inc push sti pushf addr16 movsl mov mov lods pop int imul cmp push mov lahf and (bad) (bad) mov jno,pn pop and dec mov outsl jecxz cmpsl mov aam inc sub jl gs or pop or rcl movsb cltd jecxz xor mov int js mov push mov add push in (bad) jg jmp cmp aad je mov cmpl cmpsb popf in les jnp dec sub mov or jp clc push mov push or xor xchg push and or jg int enter dec repz cmp insl jmp out xchg add sahf pop xchg rol cmp mov in es adc push jb adc mov xor stc xlat inc movsb inc and push sbb jecxz adc mov cld sbb push or addr16 sub popf das sti cmpsb add mov add mov or enter and lock push and push inc adc xlat (bad) jne pop aam push lods cli push les stos addr16 mov mov and inc xor dec (bad) lods mov loope mov fldcw shrl loopne mov mov xchg inc push mov out jecxz mul sbb sub inc orb fsts dec repnz push pop insb dec das in mov push (bad) ficomp add movsl jge cmc or add and bnd push fcoml or movb xlat lods lcall pop push mov and jmp jnp (bad) sbb iret cmpsb mov or mov lahf and ja pop mov test push les in dec add std inc dec push xchg js sub mov outsl ss xor jg cmp jle sbb (bad) sub cmc repnz mov out fisttpll jbe and jecxz cmp popa movsb (bad) mov jle and jns and pop stc mov push arpl leave scas dec lods mov pop or and es jecxz bound test loop jnp into insl mov ficom cmp pop stos lret inc lock mov inc pop call sti pushf je out xchg lods mov cmp pushf into mov cmpl jno mov divl jmp cmpsl mov mov push aam dec adc adc cmp pop pop stc (bad) dec or (bad) ja jecxz xor mov gs jge push and inc xchg inc mov jmp fildl add inc (bad) data16 xlat mov mov daa lret call je shrl std add pop in mov cmp xor inc aad insb (bad) adc testb sahf dec adc out mov xlat cmp jle cmp in push in adc xchg push cld out fstpl jne aas fsts (bad) xor sbbb fldl add push and pop jno xor add popa test mov lret cli in push ficomp clc sub pop faddl je out loop das ljmp sub sbb pop lahf push outsl stos outsb lahf inc arpl in jl and ljmp or mov push xor outsl outsb xchg mov ja jae rcr fdivr push and sti stos outsb add xchg icebp cmp xchg and xchg jbe mov insb outsb addr16 mov popf out xchg inc xchg mov sub pusha cmp sub iret icebp movsb test adc repz and pop sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb out adc outsl daa dec fnstenv in pop std iret pusha xor jns test xchg ljmp cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc movsb es xor mov decb pop pop stos mov mov fimull push imul cli jbe or (bad) sbb push sbb cmpsl push jbe ja dec inc fcmovne sub and stos dec loope (bad) mov xchg dec cmp test add pop xor sbb (bad) pop lds and cmp repnz sbb test pop clc outsl movl jmp inc jle pushf adc in (bad) and sub dec mov dec ss enter xchg jle pop mov movb push cmc mov push jo mov fimull inc mov xlat rcrl push adc cltd mov data16 in (bad) dec xor int3 insb iret ljmp mov push inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 sbb fimull add dec js cld pop aas div inc inc pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall add add test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov add xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp add pop inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp add add xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 add add xor test dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl add add xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl roll add add xchg xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov add add xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc add icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test jae pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in add lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in add add mov sub outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) add add sbb das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor add insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop add (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov ss lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub add fildl fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls xor cs mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl popf imul pop or flds jns (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd add mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub add inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov mov out int push pop aas sbb jecxz int3 scas mov mov and loope pop inc loopne aam insb add in xor ja movsb xlat mov fadds mov push lods or sub push mov cmp lock xchg mov inc push jle inc leave add add add push xchg sub sti scas xchg loop jns call pop inc or inc rcl jae sbb pop divl (bad) fstpl cmp mov aam inc lea dec dec into add inc pop scas xor outsl cld or mov adc (bad) push pop and out sbb sub xor aam icebp dec int3 inc inc add ret xor rcrb xchg sbb push cwtl push mov mov dec lahf dec jp sub inc mov mov mov add dec xchg push dec jo (bad) dec adc les pop frstor je idivl aas and mov mov clc js loope mov int mov mov fnop movsl mov cmp inc push jmp jle sahf rcll sbb in jge mov sub dec negb mov repnz insb movl negb mov (bad) adc add add mov sub add inc dec data16 pusha add push mov dec lock pop ret pop dec add sbb cwtl xor sbb mov jecxz mov push sub test fidivr rcr dec mov mov subl cmp jge jecxz out (bad) xor xor or loope mov mov add stos ja ja xchg iret fimul in xor jb int3 xchg jg mov sbb jo xorb cltd ret add cmp adc xchg add dec xchg mov test movsb dec xchg cwtl leave imul or in rolb sub cmpsb or dec repnz popf int cmp cmp int3 xor pop cmpsl mov jae imul leave out repz daa push (bad) mov fmuls inc add and sbb mov adc data16 jmp jo (bad) xor daa hlt jnp call fsubp xchg adc stos xor clc pop pop lret fsubrl pop jae fmuls hlt adc ret add and sbb jae mov add mov adc lcall imul xchg loop push jl lahf cmpsl inc into or mov rorl clc outsl lods add pop mov inc sbb out sbb pushf mov mov add dec mov enter xchg sbb xchg jbe mov cltd or xor or inc mov xor sti push push add dec icebp ds inc push add loope jns or (bad) jo (bad) jnp es jae ret imull lret movsl sbb mov orb scas mov xchg mov lods mov fistpl in or xchg or inc jle ret les dec pushf mov push cmp jecxz bound loopne adc rcrb cmp mov inc jnp das (bad) pop clc outsl movl rcrl jns add pop pushf mov inc das std int3 out negl stc nop insl (bad) mov stos jno outsl jg popa outsl (bad) mov subps fbstp je fidivr jmp add (bad) pop jae dec mov and mov aas jl add loope jns adc movsl pop inc xchg stos sbb dec xor cli and cmpsl test mov pop leave push fwait mov mov jecxz xchg pop or xor jg lea outsl adc or rolw add (bad) nop fnstenv cs jne cwtl les imul cmpsl ss add fistpl fnstsw aad ds push inc (bad) xchg jl orl sar dec cli adc aad (bad) cltd mov mulb or sbb das jl sbb cwtl scas (bad) in dec push aad inc add mov arpl mov push jbe and popa mov xor clc sbb xchg push iret mov test xor pop adcl rcr sub jmp mov lock jbe ja lret mov adcl cmp push or pop out mov mov repnz insl loope mov fldcw push cmp insl loope jb ss outsl movl push cmpsb bound and mov add push dec jecxz aad mov les add add push sti jg inc in jmp (bad) push imul cmpsl jl and iret fnstsw cs out xor xchg aas inc add push lods lods jecxz sahf mov push pop xor sbb subl repz sub test stc inc hlt and es ja mov fisttpl or icebp enter insl imul xor mov test inc mov out fstps pop repz pop movsb push mov test icebp sbb add cmpsl pop aas push adc (bad) shlb inc lock movsl lods dec xchg mov or dec xor adc cld popf jbe xchg pop lds out lret sbb inc and sbb cmpsl xchg mov sbb inc nop push mov sbb popa aaa aas jns divb mov insw lods cmpsb test inc je inc xor cltd loope jmp xor mov push xchg test dec test adcb mull cmp cwtl adc inc xchg and xor rolb mov stc cmp inc sbb lret ja ja js (bad) or addl jp push jb fcoml mov cmp sahf xchg aam imul xchg adc lock add mov mov enter pop cmpsb notl and xchg cli and sbb mov test ror cwtl idivb pop jg jbe aad xor push cmc fwait inc cmp add outsb mov into outsb xchg out dec stc xchg inc lods imul dec and cltd (bad) sti mov inc jnp in adc xor fisubr outsb in dec dec add addl add popf jg push test mov sti jo pop outsl adc add std movsl adc arpl inc and movl sub mov push add idivb mov cs xor aam out push cld pop jne (bad) push cmp pop pop aad sub mov adc mov out and imul adcl xor ss push pop ret or dec movsl jl lret pop mov xor enter (bad) pop test push stos fmuls je ss sub aas (bad) popa ret int3 out or xchg push movntq and mov inc loope dec ja sbb repz mov mov mov loopne inc call add pop jbe repnz imul or insb push popa jge dec push add bound dec ja and arpl in mov out sbb and in shrb popa lcall jne adc ds inc out movsl mov inc add aad dec adc mov enter inc in sbb jg xor sysenter mov movb leave push adc cwtl inc push jecxz lcall cs jo in out rcrb rcl add sub pop pop aas cltd loope or xor in andl jp and cmp pop stos push int mov lea mov fmul mov lods and je cli and or mov int3 shrl cli rcrb pushf jg ss push cmp push addr16 inc push lock rcrl push pop sbb mov in int3 mov add enter pop cmpsb notl adcl adc and add add dec add dec (bad) rcrb jg mov pop shrl xchg add pushf jno jb cmpsb imul adc pavgb gs inc pop pop lret or mov daa pop lock int pop fstpt ret pop sbb jp sti lock out and popf fs add xor (bad) bnd pop mov mov pop mov sub movb fs pop push pop call mov lcall addl and dec movsb push mov cmp (bad) cmc mov stos push notl aad addr16 mov lcall loop aam adc fucomip lret xor testl jg xor pop mov (bad) push ror dec ds pop out jbe jb aaa mov fmuls add ret dec xlat rorl (bad) shrl lss cmp fistpl in xlat (bad) mov fsubrs add test cmp push repz mov adcl leave pushl imul mov jbe cli out arpl push cmpsb in or cmpsl mov lcall bound dec ja cmc cltd and add ret cmp popf inc adc hlt aam add xchg sub inc pushf movsl or outsl movl in jns cmp addr16 push in (bad) push pop test les xor das (bad) dec cmp iret add fdivrs fsubs out pop dec push icebp roll popa aaa mov jmp outsl popa popa movsl lret lods pushf and mov jbe movsb call aad sub mov rcrl in adc and int3 insb iret ljmp mov adc das pop jbe into pop (bad) xchg sbb lds xor mov adc daa jbe nop popa in xor push jb (bad) int3 repnz inc jecxz xchg call das fwait jne pop cmp hlt jecxz lea ss add lea sbb cmp lea mov enter fisttp test push inc xchg aad dec jns dec gs and or sub or (bad) stc (bad) jb jg sar and pusha jle xor pop mov lock push pusha cmpsl xor idiv cmp lods mov or cld pop pop xlat add pusha fs insl hlt mov in mov and outsb push sub into ljmp cmp int cltd leave mov pop ret mov add mov mov repnz pusha pushf jbe cli ljmp inc jge or adc (bad) loopne mov leave lret xlat mov imul les repnz jae,pn mov jnp mov ja mov sbb add or sub (bad) xor push xchg sub icebp dec ret xor out sub pop mov (bad) (bad) pushf imul mov jmp dec inc push pusha aaa jmp push popf add add lcall ljmp cmp cltd push jbe and mov mov sub add ljmp shrl xchg cs cld mov mov dec out sub scas je pop jmp or lahf jo jmp mov mov inc nop cmpsb clc xchg sub (bad) sahf mov les cmp loop in cmc ret imul and in (bad) ficom (bad) mov add mov mov dec jmp das add inc xchg loope mov je jg mov insl xchg jle or xor sub aam mov mov mov pop dec add jle add pop lds outsb gs lret rorl ror mov ljmp xchg iret jmp fidiv daa mov pop inc inc sbb or mov fcmovnbe dec jbe imul mov icebp dec sti pusha iret push outsl adc ret mov negb inc mov inc pushf rcl pop inc mov push inc or cmp sar mul mov fsubrs divl mov sarl or add shll bound xor dec js or es clc sahf mov sub loop xor sub push rcrb test stos xor mov stos arpl inc test data16 loop adc subl pop push rclb shlb mov dec xchg add add jnp aad (bad) add ss test movsb jae inc sti mov sub (bad) push add push ljmp mov cmpsl movsb cmpsl push std mov sub mov mov cmp addr16 (bad) sub mov das sub rcll les mov lret movsb int push and shlb add or loop mov dec mov pop pop inc or jns dec sub cmpsb stc subl loope (bad) cmp call dec mov dec sub jl xchg pop dec push (bad) es dec (bad) fmuls mov ja loopne jno ljmp pop push fistpll fcoms xor mov test repnz fldcw jno lds mov mov jge dec imul aam mov push pushl incb ret add jne jge inc loop mov jb lahf out lret add add add mov cmpsl cmpsb xchg mov in sbb xchg mov arpl sub xchg popl test xchg (bad) fadds mov xor in in cmpsl lods imul or pop sub push pop dec cmp icebp adc pop dec xor bswap sub nop or jg push adc cltd mov sbb jge xor and in or dec xor add (bad) push mov sbb imul orl and in das leave mov mov jg (bad) pop dec mov xor pushf (bad) sub pop outsb call sahf rorl mov test testb test or or cmp add cmpsb imull add and mov (bad) in and insl add bound loop jg xor and cvttps2pi (bad) cmp sub add pop (bad) cmc ss std pop iret fstps push inc dec stc iret add jecxz aas cmp add push lods adc jb adc loopne mov mov dec sbbl sub inc movb mov pop fucomi lea bound inc lea fimul lahf fcomi ljmp bound dec jb xlat arpl sti outsb fcomp cmp mov scas xlat mov mov pusha les add and pop fwait inc inc add add sub jae or div sbbl xor aam inc and sbb loope sub pop mov cli fs jae icebp mov dec and imul jae jecxz mov cmp pop fbstp imul lods and push aas cltd add aam movsl aaa xor in push (bad) xor ljmp repz xchg pop mov (bad) mov mov icebp insl cmp pushf in lods xchg push repz mov cwtl or (bad) sahf ss insb out loop out repnz mov scas mov (bad) xchg xchg mov sbb arpl inc jbe das pop jne ret lcall ds xchg cs bound mov mov sub add fs imul (bad) mov cmp std jle pop xor cmp cmpsl aaa jp pop cmp mov ds cs mov sub and add pop xchg mov test pop aas xchg cmp notl xchg sbb sbb pop scas insl iret addr16 fwait xchg pop push pop cmp dec and dec sub mov fisttpll imul (bad) adc xchg lcall xchg xchg or mov sub sbb stos or xchg and gs lds addr16 inc push iret pusha les imul iret cmp add mov enter fcoml xchg add mov pushw lods adc imul inc (bad) sbb pop or sbb push cmpsl js push dec push psllw pusha pop mov (bad) mov mov mov xchg in add aas pause lods xor (bad) aam jnp cs inc xor and xor int3 mov mov inc rcll fsubrp (bad) ja (bad) push aaa ja test mov xor mov repnz cmpsb (bad) popa es mov or testl js (bad) adc mov mov std scas xor mov addr16 fsubs sub cltd add add sub std xor cmp test pop or fld mov in add rcrb mov xchg int dec inc sub in das aad inc mov jg mov popa aaa mov movsl lcall mov test push inc test mov popf out pop and int pusha not add mov out xor bnd mov push inc inc push out cmpsb add sub jns jg fisubrl cmp or mov test cwtl or xchg popa (bad) arpl dec push loope arpl mov sub insb sbb sahf ss fcomi add (bad) inc mov inc lods (bad) jne cmp aaa ljmp into add sub mov enter mov out add les imul pop push pop rcrb adc js push dec push or pop cmpsl stos mov jmp mov test into aam sub fadd outsb xchg in cmp in subl mov int3 insb iret mov cmp gs mov or inc sub mov mov add push popf fcmove std xor aas mov cmpsl push cmc xor push sahf shll popa pop push sbbl and in push jbe jle out cld xchg sub int xchg fwait mov out add popf adc xor pop and jo je adc (bad) lcall inc cmp les pop cmpl mov (bad) jae adc jb xor enter lret xchg adc or test (bad) xchg and ss popf push popa push xchg les mov xchg into es mov cli pop jl subb xlat dec push sub or push fidivr and call mov add add (bad) mov push pop (bad) jp int mov mov jo loope (bad) mov inc (bad) or or or cmp je dec lcall lea jnp adc sar mov push hlt or cmp and (bad) jbe jl sub insl mov add test dec outsb popa sub inc fisubrl jae sbb inc cmp icebp sbb cmp imul pop mov add add leave cs jnp lds sbb mov dec repnz mov lds leave and test inc mov ficomp cmpsb outsb and push xor cld mov sti (bad) fdivp mov dec push xor in jmp cmc mov adc cwtl data16 dec pop insb addl adc sbb pop lret fdivl sarl or xchg fs icebp imul pop add repnz clc add lds pop outsb mov mov pop dec sub xor mov lret mov nop cs (bad) xchg jle pop xor inc cmp adc ljmp dec add sarl fstps sub pop add aad daa pop push cltd loope jmp rcrb int mov clc adc ret addl sub stc adc imul mov movsb sahf outsb fnstsw (bad) and mov fcmovnu in and cwtl iret in or add (bad) dec xchg jnp arpl in dec push adc ficom or sti pop gs fs sarl mov mov xor pop cmp aaa ljmp flds pop sarl (bad) jae push push sbb xor repnz or sub fcomp daa xchg loope dec jecxz xchg jo push mov inc mov jb push lods out (bad) jo add mov outsl je jmp rcrb int sbb lret ljmp inc aam es cmp imul das jle xchg jne mov mov repnz inc cmp and lret adc xchg shll inc jnp rcl xchg jb mov and sarl inc push dec mov pop mov dec stos jg hlt fs lcall cmpsb imull scas dec and mov lods jmp (bad) jae add je sub sbb adc loope jne pop cmp jb ljmp mov in rcrb pusha mov xor bound add dec sahf fstps aas lret push xchg loope dec pop mov stos jmp rcrb int or test loope cmp dec push pop inc jnp and inc inc sbb fnstenv mov lea push subb gs int3 lret cmp push lahf int xchg xchg test stos jno (bad) in outsb sbb rcrb add sbb add add mov sahf clc mov sbb out or cmp icebp xchg mov jno sbb and jl or fdivrp xor push mov and jle cmp add and inc adc pop mov mov loopne push jmp aaa mov mov scas push test das gs lods fistp sbb mov mov lods out inc cmp fbstp xchg pop scas xlat dec mov (bad) out mov adc add push mov inc jns pop ja int (bad) shrl and push movsb xchg xchg ja jno adc test pop movsl pusha push inc jle sub cmp jmp cmp cmpsb std mov xchg loop outsb xchg adc xchg movsb out incb lock pop fstpl loop add mov xchg xchg jp andl js mov dec testl and fld ljmp in and push popa adc into es mov cmp pop xor cs rcr fs adc icebp cmp aaa dec scas fbstp clc and push in xchg adc es add xchg mov stos movsb lcall mov insb sub insl mov sahf dec cltd push outsl imul fstl and jbe test popa jbe sub ljmp test add flds lea fstpl outsl mov inc cmp pop push adc inc and add fimull mov mov ret mov mov ss (bad) push fisttpl fcomip push xchg or fcom insb (bad) std sbb notb ror test in pop lcall div push add push push cmp mov fmul in adc cli and cmp mov repnz call and (bad) aad xchg sub add add dec mov jo std punpckhbw ret imul mov mov (bad) stc mov int stc ja mov inc cmp scas xor mov rcll insb gs mov rolb cmp (bad) lret cmc push or aam enter cli fist xchg int3 jnp pop clc pop sub jle cwtl mov mov fisttpl dec jbe dec jle or cmp movl add mov push push pop add pusha stos mov (bad) sub cmp fidiv jnp std fmul ja int3 insb repz pop inc cmpsl test hlt xor xchg lahf mov and mov jo mov divb pop and addr16 jecxz mov adc loop loopne insb stos (bad) dec dec push cli mov sbb mov shrl cli fbld ret cmp jp cmp inc sti inc iret cwtl ja sarb add cmc shl (bad) jae repnz test (bad) dec mov and idiv int3 adc cmpsl xchg mov fdivs mov cmpsb test xor xchg mov in iret add mov pop aas sbb imul sbb mov jbe in inc mov test jl test gs les jo jb inc rcl dec sbb lret push iret mov adc iret in adc ljmp add mov stc stos pop mov lods or pop aam andl loop mov sub and inc add lcall (bad) ds or cmpsb bound or imul scas dec mov inc pop push mov nop cli adc mov xlat std adc adc lods push or andb push mov xor mov push ror bound xor push (bad) push adc and fnstenv loopne add xor in (bad) adc sbb je push adc jp repnz cmc fisttpll cmp ja sbb push movl clc jbe out stc xchg lcall pop cmp adc jmp xchg push ds jl in dec sbb ret lock ret sbbl fidivrl jl and mov inc icebp add add outsl (bad) jmp out cltd cmp inc or in (bad) and cs (bad) ljmp insb add repnz shrl jg pop pop mov push and sub cmc sbb cmp mov cmp imul arpl imul pop lods divl jp mov data16 (bad) cmp test push icebp sub insb iret bound repz sub loop xor sub pop mov lock roll lock dec lcall adc out idivl jmp mov inc nop call cltd cmp pop cs int3 rolb add add sbb neg mov out (bad) pop push push and adc cld and pop jne aas push inc negb fs outsl xlat add test jo stos ss test inc mov ret adc (bad) imul dec sbb ja jg inc push cmpsb jae js or cmp mov lea push xchg or dec push pop add fsubr mov cs mulb xchg xor lret jmp and mov add add fyl2x mov orb jae xchg stc repz shlb and cwtl mov mov inc cmpsb inc mov rorl xor xor lret cmp pop dec cmp inc call inc ja jge lcall dec popa fmul pop rcll jno ficompl jmp xlat xorl and enter push test call lret xlat int (bad) or fs cld dec pop adc add mov xor les ljmp dec pop stos data16 movsb push inc jecxz jbe shlb ja mov sbb and xchg and xchg jmp push out notb inc jns cwtl mov jne mov and (bad) ja xchg fcmove sbb jmp stos mov (bad) or xchg cs arpl pop sbbl adc das mov push sahf stos adc les dec cltd adc add test add jg pop jae pop or mov loopne stos inc sbbl out test mov push in iret into arpl fnstcw xor (bad) pop pop dec cmp icebp adc pop leave idivb mov into pop cmp xor fcomps mov jg or mov adc jmp sub daa test lods cmp push out aam pop gs jne test dec mov jae lret add add cli jecxz mov or bound mov sahf pop dec mov mov cs rclb push (bad) loopne fwait jp out inc sti lods inc adc rolb scas in or imul movsl sub mov nop jae mov insl pop mov stc lahf les cmp ds jbe sub imul cmp in mov jae pop dec int3 mov sub mov pop rcll add push pushf mov sub lret fdivr mov int pusha push xor (bad) adc imul jnp mov sub je inc mov lods sbb inc cmp in test movsb jle push sbb adc mov movsb stc stc sub fcompl movsb pop idivl scas sub sbb arpl adc xor lcall popl cmp cmpsl fs shlb mov adc add jo mov sub add add outsl sub or xchg jge or mov or cmp mov loop mov test cs mov popf mov mov mov jmp cmp mov in pushf cmpsb pop (bad) divb sub mov in pop inc aam repz jns decl mov mov inc sbb std bnd jbe insl das push rorl mov pop push outsb imul jne add push jge int3 mov repz fcomps enter adc push dec sti push (bad) push jle lock stos hlt outsl movl ljmp aam inc inc std in mov outsb lea inc mov jg pop imul js sub pop inc push das repz push jmp mov cmp cs or and mov pop mov jne stos mov data16 add dec and test dec push call xchg mov lea mov scas insb pop dec fistl xor jp ss fcmovne ljmp jbe call pop shll mov jle or adc jg es push cmp ret jecxz xor push jae shrl (bad) aam bswap mov test xchg mov mov leave mov or es or bound sub lret mov ds pop popa cmp and pop add add add add (bad) push or loope mov test xor mov sbb xor repnz lcall add popf pusha dec (bad) aaa aaa fsubrp fidiv adc ret movsb xor lahf dec test cmc (bad) dec (bad) sub fucomp inc mov leave je mov push repnz xchg repz and repnz imul sub add imul push sub inc pop ficom hlt add leave roll out push aaa mov insl cmp popa jle mov push pop pushf dec sbb imul push mov inc loop pop pop outsl repnz loope addr16 sub mov (bad) push pop les movsb in inc fs lods daa pop mov (bad) das gs push rcll push jnp sub test stos jns test xchg mov shrb pop jp test in mov pop xchg add add add lock sti hlt xchg xor xor or es dec mov inc mov icebp mov in and call fcmove notl sbb sbb pop fistl or out dec cmp xadd mov aas cmp inc jno,pt push cmpsb pop aad or test jo cmpsl pop dec add dec shll mov jle cmp xchg aas mov cmp cld pushf jno repnz mov add add dec jmp mov sub fadd push inc int insl pop aas repz and test int3 push iret addb mov jl cwtl xor jne xchg dec jle fcmove sub jge int xchg xchg test icebp mov mov pop mov data16 fild inc pop xor mov push mov rcrl push (bad) (bad) xchg pusha inc fcmovne mov popf je jno xor mov xor push sub dec fldcw and and lret dec cmp inc jno push push cmc icebp lret adc pop ljmp inc fsub loop in pop movsb inc push add inc pop fldenv cmpsb stos test cltd loopne dec xor int3 insb nop popa testl out sbb lret jmp repnz and in cmp fmull add enter mov or rcrb push fisttp sbb (bad) jl sub jp sub test dec and push imul cmp rolb cmc cld jmp int3 mov pop adc cmp push mov cmp jae cli or out jp pop mov inc cmp jge mov icebp lds mov pop dec fcoms fstps adc push ret lcall cmp add add test fwait or pop cmp insb iret addr16 mov imul pop xchg lret fsubrl int push sub (bad) add xlat pop xchg jmp mov mov xchg jecxz mov add inc mov (bad) cmpl cmpl inc jne fdivrs arpl cs rclb push ret lcall xchg out xchg stos jae pop stc and push paddd jmp lahf stc aam inc lea jecxz add ljmp add and jg xor and (bad) mov (bad) push pop cmpsl nop idiv pop ss jnp adc cmp jb add fstps test nop dec push adc data16 cmpsb push in push lea adc push icebp dec mov inc push pop inc outsl dec jo addl add xchg jg lahf xor insl addr16 in push jbe and aad enter hlt or shlb mov pushf or or add std xchg cs sub xchg loop jp dec movsb cmc pop lock lea mov and push inc ss or cmpsb pop outsb movsl xchg fisttp mov loopne test rorl (bad) int3 pop cmpsl add in fdivl inc cmp push cmp push movsl jp push xor or mov mov jo xor rorb inc jae push pop mov lret lods in cmpsl movsb cs mov xchg cmpsb push cmc jns int3 insb iret lahf sbb sub add pop cmp inc in xor jbe mov pop adc mov xchg xor and movb add fcoml dec pop stc call mov cmp popa pop xchg xchg out mov clc or shrl (bad) aam mov nop or xchg xor push push decb ja scas pop cmp pusha jmp outsb test push mov xor in cmp adc pop sub es les das push ja inc jle mov in xor lahf mov repz popa movsl sub lods (bad) xchg pusha ja arpl cli jns cld xor jmp xchg jg pop (bad) rcr inc sbb andb cmp stc notb or lds add sbb xchg sbb test andl and mov in xor or (bad) repnz mov aaa push (bad) insb sahf shll inc lea dec inc add lahf xlat dec mov dec aas sub xor popf jmp int3 (bad) rorb (bad) mov (bad) and std xchg hlt and aam xchg jle rdpmc inc jb xchg pop pop dec imul jne jp bt xchg fisttpl cwtl ja fmull es xchg cmp push adc and mov es mov mov inc (bad) cmp scas out pop aam addr16 shll push aad outsl dec rcll (bad) repz cmpsl movsb fs add xor jbe dec and lock xor int3 movsb scas mov pop fdivrl or mov sahf xchg inc push (bad) adc jo lahf mov subb lahf cmp add or outsl enter popf imull mov xor jbe in fisttp out mov out pop fwait jl mov imul jg pop aad mov add in daa leave pop mov jl and cmc test jbe in or (bad) (bad) fdivr in mov and call push movsb or (bad) mov sbb dec popf mov addl mov cmp (bad) repz je xor imul sub mov cmp (bad) adc in jp sbb in jne push mov loopne dec add bound loope push push lods sub je sub icebp or mov inc lret xchg into fldcw add loopne inc or mov bound sarl cmpsb push aaa out xchg (bad) notb int3 sbb cs lods sarl imul xor jmp (bad) ds test push out cmpsl (bad) vdivps and dec dec fwait add out mov fdivrl ds roll push into push movsl and mov jge or xchg (bad) mov fidivr push xchg lret out pushf lea add (bad) ficom addb xor repnz and test (bad) mov enter in xor push pusha mov popf xlat in cmc inc jge jg cli lea xchg inc jbe xor ljmp jge pop into icebp fsub jae push jmp add adcl mov xorb mov xchg (bad) notb rep stos aas jno dec loope clc lahf dec mov xor (bad) xor leave xor sbb call sbb sub jl add push mull add add cmp sbb arpl cli pop ret aam mov aaa (bad) lcall mov cli inc out (bad) lock lret inc outsb insl stos lea add (bad) sahf sbb jge mov pop (bad) mov add daa mov jae dec in push adc pop stos subb xchg sbb add xlat mov sti aaa iret sahf jle push xor fnsave inc inc popf xchg aaa pop addb jns pushl pop add add dec (bad) movsl shrb xlat pop ret insb sbb jne mov arpl inc das fwait pop inc cld mov adc mov fistpl xlat jo or jno mov jno aam inc (bad) dec xchg cmpsl sahf adc scas sub pop dec stc jbe jnp (bad) mov aad std sti or mov inc sbb es lods sahf (bad) scas add cwtl or xchg pop lahf or cmp inc ret mov clc arpl add in mov popf gs subps xchg test in mov call enter mov rcrb push mov lret inc jno cwtl lret sbb push pop test pop mov nop inc push inc or jbe push subl cmpsl mov rorb xor repnz fxch ret pop adc adc mov fcomps fldl or in push notb cmc sbb lahf sbb or mov xchg push enter add add mov xor loopne out mov iret in sbb add push adc add xchg ret movsl repnz push pop ret mov in push xchg adc imul xchg pop mov sub lea push icebp aam pop adc cmc pusha dec mov or (bad) pop mov sub es and push (bad) cmp imul or loop ss outsb jg ljmp jl ds add add addr16 and dec add das pop ss data16 sbbl push pop push leave xchg pop lret es stos pop pop mov mov int3 arpl cli pop test mov push dec test les mov and inc xchg xor push jl cs or hlt jo xchg or test dec jo fwait mov mov sbb stc out pusha leave cmpsb popf sahf subb xchg sbb jl inc jo push add cld out add pop xor hlt (bad) loopne dec or mov data16 mov ljmp in int shr jl dec cmp mov sub pop iret xchg pusha mov movsl stc shrb xchg sub cmp imul popa mov push mov adc std out int fnstsw aas xor push jns stc test shlb add iret adc ja fcomip or sahf scas rorb cmp and push repnz add add jne mov aaa adc pushf idivb mov adc fmuls cmpsl xchg sbb lcall enter dec fsubs push dec mov or mov aas ret (bad) xor jmp mov push adc std cli xor sub test xchg and dec insl (bad) cwtl push loop sub dec inc fdivs in jno jno xor lods rorb enter int3 fnstenv push xchg cs outsl inc sub xchg test and push jl gs xchg aas xor in arpl repz jae push dec adc cld add jns mov mov add sub pop mov pusha (bad) add adc fdivl gs pop ret enter inc test adc ret out mov sub xchg adc xchg mov mov xor jmp les inc lret sti and pop and jle sub push das rolb jb fdivrs out mov mov push xchg movsl jne leave arpl inc das fwait jle cld mov xor adcl (bad) jno or push stos mov in (bad) ret cmc jl stc sub jmp push dec sahf daa lahf jne mov xchg lea inc fs out cld or (bad) xchg lahf xchg xor in decl rol std jge popa jge xchg repz int3 mov aas mov adc ret out inc push fs mov jmp xchg or xchg xor or cmc sub push xchg push (bad) aas dec or cmpsb mov xor xlat push adc daa cli xor sub test xchg and dec add push outsl jns jp outsb xchg cmp lods sbb sti enter mov pop sarl es repz fisubrl popf cld sub addr16 xor rorb mov add push adc jp inc clc dec aam sti pop dec lret push jmp mov ret insb sub fstpl fisubrl aas mov xchg and push sub sub cld jecxz popa fsts addr16 xor dec mov pushf (bad) adc xor jbe inc mov jecxz notl cmpsb scas mov mov inc pop jo iret insb xchg (bad) lea jle mov fdivrl push cmpsb xchg pop je xchg (bad) jmp ret dec ss (bad) xor pop outsl or xlat std out add mov mov jno mov xor loopne test dec cs out test daa xchg dec pop test pushf pusha inc jbe bound cmpsb (bad) push in push outsl xchg or inc or addr16 jecxz mov ret xchg pop cmp (bad) cmp movl add xchg adc xchg dec loop jmp sub mov mov test inc pop push mov cmp lahf push and lods push push xchg xor bound sub push out push adc mov shr pusha cltd xor push inc pop xor sbb cmp (bad) inc mov ret hlt xchg subps inc andl adc jnp std fmuls incl out pop xor ret aad movsb lods sbb lret inc mov ror mov shlb sbb popa lret scas and jmp hlt in inc xchg loop,pn (bad) mov lret add cld clc inc fcmove je arpl xchg fldcw mov adc cwtl or (bad) int3 repnz loop (bad) cld es add sbb push (bad) xchg adc sub mov add or out (bad) jo push nop cmp cltd lret or fmul dec and inc (bad) cmp fbld mov inc cmp (bad) int mov lret outsl sbb outsl xor mov leave lock fucomip outsl dec add fstpt jl sub out xchg sub push mov or pop mov push cmc lods mov lea cs into ljmp test dec sti inc scas adc mov jle jnp repz push lea in insb mov clc add cmp lea lret mov dec pop cli or arpl lret cmp mov test lcall pop mov movsl mov test mov popa movb jg test add add add add or fimul cmpsl jp add loop jge pop inc jbe mov fs or mov inc sub cmp ss mov xor and inc popf mov aas fistpll int fstpl sbb cmp mov jo sbb inc push cltd xchg jb clc mov stc cmp pop pop adc cli adc sub (bad) lea push aaa ljmpw cmpsl popf mov sub es pop addr16 (bad) or aas scas dec xchg out test ljmp je cmp lcall mov movsl mov popf mov addr16 mov icebp repz das inc mov xchg mov mov pop mov out pop movzwl jns out sub xor xlat (bad) (bad) fcoml pop push push mov mov jg mov mov xor and shrl push push push xchg fist pop mov add add pop inc cs xor lods mov (bad) out xchg push loope andb insl aas push inc in mov or cmp lret jno xchg flds mov cmpsb fcomi pop loope mov in or xor add popf inc push dec push cmpl aad lahf out mov xchg xchg fs adc jmp outsl lret cli int3 xchg jle dec mov imul hlt std aaa inc pop mov cs or push or pop jns insl xchg or xor add add cmp aaa fdivs xchg and aaa lcall mov shl or cmp add push fstpl push mov lods scas adc adc xor xlat mov adc faddp jns inc and arpl inc scas fdivrl push jg cltd (bad) mov aad (bad) lahf jecxz pusha mov frstor pop mov stos sbb adc insb repz mov cmc mov test repnz mov fiadd inc (bad) leave data16 sub es fisubl jo cmp subps repz push mov or jmp cmp push mov xor cli cmp and dec (bad) and jg rorl jae cli cmp and pop (bad) pusha cmc clc and sub sbb les dec cld mov sub cltd dec psrld fistpl xlat push stos mov outsb cwtl in mov lret lahf or xor add or adc es cmpsb (bad) repz (bad) ret hlt dec mov test pop sbb idiv out shrl stos aad repnz fwait cmc mov pop adc rolb sub mov jae xor xchg xchg push and pop rorb push pop jecxz int3 dec int3 mov in push ss (bad) aad pushf inc xor xor ja (bad) xor pop adc lahf jmp dec mov mov xchg testl ror and and movl add shr or das mov ljmp push ljmp adc sbb adc xor scas pop add adc mov and insl aas push inc in mov or cmp lret jno xchg flds mov cmpsb in or push cld mov in or in or (bad) iret jnp sub js imul std (bad) jmp sub xchg xchg test fstpl ljmp lcall int cmp cld pop clc outsl dec push (bad) cmp popf pop xorl inc ret xor mov sbb adc (bad) xchg iret jle and and ss fildll push adcl pop dec loop in lahf dec cli test sub xor lods (bad) xor cmp scas stos jns and sbb ds (bad) call rorl xor fstp jb (bad) ret call lock mov jae push dec adc cld add popa xlat mov xchg int mov add stos imul in mov jl xchg dec or pop sahf or popf inc push dec pusha cmpsb andl fsubrs fist sbb cmp lcall pop inc inc ja jmp cmp mov cs or mov push aaa mov out mov inc jg andb insb scas sbb mov fwait xchg push imull cld pop ljmp pop jle cmpsb addr16 es xor xlat rcrl mov fdivrp xchg push cmp (bad) cmp outsb in daa sarb out (bad) adc dec push and inc scas test adc mov lds icebp int imul sub cltd sbb in aam in movb cld into or xor jecxz jb cmp dec dec and dec jg cmp inc push pop ds out pop sbb clc jne movsl mov xor js add hlt rolw jge xchg scas and jg int3 push (bad) add push stos pop and (bad) xor ljmp jp in inc inc scas mov push adc xor ret xchg insb pop xor fmuls inc or stos outsb jge movsb push mov shrb fsts popa hlt mov in pop into and addr16 inc sub xchg mov adc cmp and adc leave je (bad) in das leave mov sbb sbb mov aad sub adc rcrb (bad) popa ds cld cmpsb jecxz (bad) xchg adc std das pop mov dec pop jo hlt lret imul das fsub mov call pop inc or jb xchg pop (bad) out lret mov nop and xchg cs leave dec out mov ret add dec movsl sbb aaa cmp das mov xor fwait cmp sahf mov push xchg loope jbe cltd dec mov in mov pop inc push outsb fstp and ljmp mov movl lea lcall aaa jno push repnz dec sbb and xchg cmp cmpsb fcomp pop repnz stos pop mov push and jle rcll es adc or dec sub mov cmc push adc enter insb cltd jl (bad) xor insl out (bad) and jnp mov cmp mov cltd pop inc xor add add fstpl mov mov popf cmp xor cmp jmp mov jge or sub movsb (bad) ret jmp push in adc or jae inc adc (bad) outsl shrb sarl mov adc xchg mov sub fwait jb add iret je xor andb mov mov (bad) mov or mov nop fnstenv inc mov scas cmpb aas mov xchg loop push add add mov ss pop clc cs sbb nop insb js xor aas das push sbb (bad) std das and push daa jmp jns stc stc in roll (bad) ljmp xchg xorl mov mov pop dec scas cwtl cmp mov lock push pusha fist mov popa insl jle es test ret movsb jo xchg jns sti in mov subl inc into inc adc add push rsm outsb out daa dec jo lods mov jge add iret (bad) in dec inc aas mov push pushf lcall fmuls and aas into cs int3 push (bad) sbb dec shlb adc sbb lods fsubrs fildll lds pop repz sbb mov fwait dec loope das sub mov loop icebp das lret stos pop (bad) je and cmp loop sub add mov iret scas lea out das sbb jecxz ss mov add add lods push scas movsl add inc dec add push aas inc sahf mov in dec dec pop xor repnz pop ret out aad ja (bad) js negb movzwl and lahf test jne subl push lds xor inc scas xor jecxz mov lods jo add insl mov ljmp pop lods stos test or mov cmp cwtl xchg aaa scas iret out xor dec popf mov sbb xor fmulp aas ret mov jmp add push outsl xchg push les in test negl stos inc cltd ljmp mov sub cmc push sti gs gs cmpsb jbe lret (bad) sub cwtl fldcw call test dec nop lcall sub cwtl xchg cmp pop lea inc xchg ret cmp mov imul test jnp sarl mov jle arpl inc mov sub test out jmp movsb mov bts jne aaa adc add movb cmpsb mov arpl (bad) push clc mov pop enter or xchg das rorb push xor adc icebp imul mov inc cmp stos (bad) pop inc jns (bad) (bad) fneni(8087 add sarl sub out push movsb mov cltd jbe cmc sub out xor jl push aaa loop xchg push dec je (bad) adc push call enter mov cmp add aas fcmovnu xor ds dec test lcall add mov sbb mov fist pop mov mov lcall int jbe jp repnz int3 xchg xchg jecxz out push dec push sub mov inc mov adc add (bad) orl and loop test or pop aas test fs ret fwait fwait dec cwtl lahf xor in dec sti sbb pop imul jb sbb inc cmp pusha (bad) scas mov cltd push dec jne add dec stc jnp sub push lret push cmp movlps in and push outsl pop in mov (bad) idivb fs sub xor gs and (bad) les push mov mov outsl jnp mov lret jp inc inc jp (bad) sti stos cltd lods jnp (bad) or (bad) divl movsl jmp xlat jno int and mov aaa jae pop enter sub xor shrl cltd xlat mov lods and cli mov (bad) lret mov add lea fsubs ds mov flds aaa (bad) xchg fist test or sub les jo mov xor cmp mov or sti daa outsb dec int3 sbb bound lahf fstpl sti adc mov clc mov cmp jmp ljmp in cmp mov movsb add add insl outsb xor in mov add add mov mov inc dec ja mov aad sub out push dec pop das jmp and xchg mov sub ljmp mov stos jo inc cmc cld in cmp movzwl into xchg notl fwait ljmp mov pop mov jae lret push inc xchg mov rolb in or bound (bad) inc mov sbb cmp xchg jle cwtl mov mov ljmp add add dec push jle hlt pop pusha aaa aas inc call jmp outsl es and pop or pusha fs push cltd dec mov fcomip ds add pusha fidivr sub popl xchg sbb add dec push (bad) push or sbb xor mov inc xor orb pop es mul cwtl jmp dec jp (bad) das movsl mov jmp pop sahf scas adc or mov sarb dec mov inc pop pop addr16 cmp inc les pushf idivl inc jmp push push mov pop cvtps2pi mov dec ss aaa rcll adc lods push or andb mov sbb popa aaa cmp mov push inc es and pop add jne mov pop cltd mov fidiv clc and int3 insb into ljmp pop jbe movsb mov xchg out repnz add lahf inc aas mov or hlt adc popa jne xor repnz sub fstl arpl mov jno rcll fisub cmpsb cwtl adc add jae fidivl cmp or inc sbb popf jns mov dec adc sub lds and cld or outsl cwtl inc cmc mov jp je stos mov rorb pop loope push dec (bad) es add adc shrl cmp push push loope sti adc cmp repnz into sub in mov adc mov ja in xor xor (bad) add sarb jno mov xor daa adc cmp cmp dec xchg or jae sbbb push (bad) sub lcall and pusha ss lcall mov push jne lock push loop enter pushf push mov add orl pop (bad) out pop fldcw mov enter std jle pop jmp (bad) push (bad) mov fcmovu lcall push mov push pop imul aaa sti lea and push lahf or rcll jno xlat xchg cmpsl cli pop jl pop repnz and cmp mov test jno inc inc sbb movsl pusha movups fldt ret jecxz mov push stc sub int push pop cmp pop add add (bad) add sub jle mov daa mov jl test fidivrl sub lcall ret insb mov lcall (bad) jl rorb rorl aam adc jl addr16 pusha cvtps2pi dec repnz hlt iret pop cmp xchg jle or aaa dec dec push icebp hlt inc push popa aaa (bad) enter enter mov loopne fnsave daa loop mov push cmp ja xchg pop insb es fildl push fdivp jmp icebp out jns cwtl sbb jne pop mov fildl test call xchg cmp iret scas nop ljmp add cmpsl lcall push enter movl (bad) push jmp (bad) adc fsubrl mov test jo nop pop movsl outsl mov faddp pop or push inc data16 (bad) and cmpsb fmul outsl orl add add popa cmp shrl lock sub mov je mov movsl int xchg push test mov in adc add call sbb arpl fidivr or mov nop push adc jp imull pop jbe std dec stos adc popf mov ret cmp xchg (bad) pop movmskps fildl in das leave mov ja ja into popa jge je cmp inc push jb mov pop adc js push mov fisubrl adc add das xchg loop push in sahf ss xchg shlb test xlat scas addr16 inc call push and adc or fnstenv decb xor or sti inc mov add push xchg lock je es mov xor cs mov xchg sub fadd pop dec out out cld decl xor mov (bad) aaa fdivr (bad) je dec lods mov sub push jno add shrl mov xchg in mov adc pop mov cwtl adc mov subps dec inc movsb lcall lds les int push (bad) das pop sbb push testb movsl lods in mov (bad) pop mov int3 (bad) fcoml sbb cwtl xorl lods mov jp xchg push push pop mov add dec push cmc add add notl jne test mov sarl cmp xor aaa iret in jmp xlat rorl mov sbb aad mov add (bad) mov in xlat enter arpl adc jp (bad) xchg jns dec jb inc adc dec jne mov call outsb daa mov sbb in inc mov mov adc push icebp or jl cmp rorl addr16 and lcall sub push fidivrl jno leave call dec cmp inc sbb add mov sub mov pushf dec mov adc cmp lret lods out lret mov nop das and xchg std lret inc cmp dec adc pushf mov push cmp pop arpl je ror inc ficomp sti pop add inc xor adc push cltd and divl das pop in push (bad) and cltd cmp gs fisttpll add or inc xlat push pop xchg push cli enter mov nop xor add movb sbb enter or cmp lock lods pop pop sahf arpl int3 arpl addr16 add ret mov push aam mov shll xchg test imul andl dec cld xor adc and pusha dec loope xchg in sarb out repz jns (bad) cmp xchg pop fcomip mov mov push jp clc xchg stos mov mov out add mov add add adc sbb mov shrb mov dec je,pt out or lahf xchg jg clc enter jo mov insl pop lea sub lods mov cmp pop out outsl into sub cmc and (bad) fstps adc or pusha or jg loop pop arpl fchs jge dec sbbw mov xchg adc and int in sbb inc pop nop insl inc sub aad mov add jmp add xchg jmp add add mov jecxz jmp dec jnp xor jg mov (bad) mov (bad) fcomp sbb movsb cmpsb test outsl ss sbb mov mov jecxz adc cmpsb ljmp loopne fs stos mov bound sbb aas aaa inc mov iret lahf or mov sub aas into mov fcompl decb and (bad) js lret sbb cmpsb pop pushf mov repz or or orl mov add add add adc cltd lds sbb addr16 sbb inc push adc cmp pop jl pop sbb (bad) jae sarl lds enter bound mov push (bad) aam adc mov sub pop mov dec mov cmp sbb pop mov (bad) push rol dec sbb flds pusha fbld (bad) push add jmp jecxz push (bad) push test fnsave fucomip sub sub test lds roll add int3 insb inc fs fnstsw and popf sub (bad) mov jp cwtl or pop xchg fcmove and out lods lret jbe ja push cmp divb imul sub inc pop xchg cmp cmp dec jae es ret ret (bad) lahf xor (bad) jb lret dec scas ret insb out xor jbe jae out push and pop adc mov sbb hlt stos and sub xor mov cmp adc daa add add add inc icebp mov test jmp push arpl out xor frstor adc mov xchg add adc mov cmpsb outsb mov sub pop push cltd sub sbb aam mov inc inc sbb movsl add movsb pop jp repz mov gs int3 lret cmp sub jo push jns sub arpl push jb (bad) int3 bnd inc pop rcll cmp into jle leave clc mov je mov add add cmpsl push dec add mov rcrl push jae pop mov xor imul pop or pop lds out or fs (bad) inc cmp jno enter (bad) pop ss js sub (bad) sbb pusha addr16 xor sub aaa movsl mov adc and jb and xchg xor std sub icebp rcrb sub gs push adc ja mov add adc je fisttpl int xchg xor dec or (bad) mov scas jp push loope and jb dec xor cmpsl push aaa sar push jae pop fcomip pop out and adc add int3 cmpsl mov inc adcl lea outsb mov hlt mov mov mov cmp or fidivl js mov jg lods jl pushf push pusha aaa aaa cmp add add (bad) loop out ret mov rorb push lods data16 cmp sub mov mov mov shll es dec ja mov pop inc (bad) ja xchg fcmove and mov std xor and popf push outsl adc int mov lods and loop fdivrs arpl fwait pop dec pop jl dec cmpsl outsb insb sbb fs roll out inc jg jp gs aaa popa jbe (bad) mov popf je inc (bad) std push ret adc stc or jae test mov xlat je inc popa xor cld fwait push xchg mov mov and pop pusha mov xchg stos mov test ficompl pop ds dec mov fistpll stos mov push fwait adcl dec jo add dec and insb inc mov fcmovne je insl sub xchg test jb repnz insb add adc pop mov stc stos pop lcall pop lahf cmp mov sahf shlb mov push or lahf cmpsl pushf xchg pop dec leave adc idivb stc outsl (bad) cmp mov shr or xchg push (bad) in jge fist sbb mov xchg push data16 dec add sbb pop sti or lods push fild jecxz and loop in pop movsb dec mov movsl jne into push xor add mov xlat push jle xor push dec xor insb iret ljmp inc aam jae int andl mov jne mov les mov fsubr adc xchg movsb addr16 mov jle pop sub stos or mov sbb xchg mov popf adc shrb dec dec xchg or dec mov mov enter adc divl mov and dec and mov (bad) add jns pop outsl sub jg or out jp mov ja movsl lahf ret int mov fsubs dec mov jbe mov cmp fdivr dec fs data16 xor cmp int and inc loope adc and sub dec jmp icebp xchg mov dec or mov jge jle jp lahf pushf xchg (bad) lret inc addr16 push stc xchg mov cld dec int (bad) xor insb push je std cmp push xchg loopne insl call add add xchg inc sarb inc push pop es mov xchg js lret dec jge mov sahf jmp mov or dec sub pop es jge outsb mov mov sti xchg jns hlt and aam sbb pop pmaxsw es rcrb dec push cmc roll pop mov xor das cmp xor imul rorb inc je into mov cwtl mov fdivrl loope push (bad) adc fs lahf out adc mov enter cs addb push or mov xchg fimull mov and jbe nop pop or mov inc divb insb mov test and out cmp test mov xor out adc call sbb aaa push sti data16 pop les std cmpsb push fwait mov inc jo inc dec sub sub int3 (bad) aam repnz dec fwait pop inc xor mov sub pop shrb pop (bad) out loopne add mov adc (bad) adc aam ret xchg or ret movsl mov mov dec xor cwtl inc cmpsl ljmp pop mov cmp in xor (bad) iret jle test cli (bad) or mov pop add dec repnz mov cmc inc xchg or cmp lahf fs lret loop (bad) cs add sbb push cmp insl xchg pop cmp sub (bad) add add movsl jecxz adc idivb adc das push mov jne rcll insb jnp mov (bad) aam mov jb sbb out fimull pop mov inc dec pop dec jecxz or arpl cmp out add test call and xor inc paddsb rcl or aad mov outsl mov aam sub and mov inc inc xchg repnz jmp xor (bad) push mov ja add dec mov push add and mov neg jns and addb xor cltd das lret xor cltd and dec (bad) lret jecxz shll inc (bad) imulb das movsb orl and xchg ljmp pusha cltd pop inc sbbl fdivs mov jo sbb push scas sub xor (bad) in inc sub aad arpl sub js dec push xor aaa mov inc lahf xor sub mov add outsb cld fldt in scas fdivs gs mov or sub int iret mov adc enter nop mov clc mov or subl and mov inc add mov test mov loope sbb shrb adc js cmp cmpsb cs pop repz ret fwait inc fdivp ficomp lahf add xor lahf xchg push and or fcmove xor push roll jns or xchg icebp rcr push stos daa push pop xchg mov cmp popa sbb subps cmp cld pop out ds push pusha mov into insb das mov xor iret dec (bad) rcr les fwait in pop aas cltd (bad) mov and sub js insb dec sbb mov xchg jecxz mov inc idivb jno inc loope lret mov jmp push inc scas nop imul addl int3 jg pushf bound dec ljmp xor xchg test mov shr adc pop out dec dec dec mov lret lret sbb fadds mov inc adcl pop and pop cmp popf aad (bad) aaa les imul mov test (bad) addr16 loop dec or xor mov jne mov mov cwtl jo out cmpsl ficompl push adc cltd mov xlat cmp or add test inc pop ret aaa mov fdivrp bound jg in mov pop (bad) inc shrb (bad) pop popl aaa fistpll in lcall sub nop ljmp iret shrb jge cmc fs cmp mov jmp (bad) mov stc mov lahf mov (bad) lock cmp push mov cmp iret cld aaa inc jne hlt pop or lods push roll push out or mov outsl stos dec pop sub or add push aas push jnp sub push jno mov mov stos cld fmuls cmc sub ror iret mov andl pop sub fimul aas bound lods (bad) nop test xor inc mov inc sbb adc imul push xchg fimull cmpsb mov into mulb jbe ja push stos xchg or jmp loop sub push push mov lret mov daa inc sub add add mov std adc xchg xlat lahf test and jo movl jmp adc pop and dec outsb fs (bad) lret mov lret enter xlat (bad) mov mov jp aad je sbb cmpsb cmpsl test pop aaa mov sbb addr16 sarb jns xor ret cmp dec mov pop aas cltd mov aam jnp cmpsl inc xor and jnp adc (bad) mov and inc inc adc add add or cmp cli jg fidivrl mov rcrb cmc hlt push mov divb xchg fnop cld pop mov inc dec push dec mov loop lret xchg and out mov mov add repnz mov add mov test fsts roll out push andl push outsl sti shrb pop xlat push lcall sbb and or icebp adc add add xchg xor out ja and outsb cld lods sub incl lods sub shlb jle mov pushf push sub adc fidivr outsb in push dec jo add pop dec ja cmpsb lods ret orl mov cmp push lods or cli (bad) outsl adc adc repnz stos pop mov fwait movsl (bad) cmp or lods and sahf adc pop dec inc lds mov cmp sbb inc inc lea cld and add add bound mov mov push js or bound xchg int3 (bad) cmp rcrb inc mov pop mov add test push imul mov out mov xor fstps cmpl cmpsb pusha add aad addl in (bad) repz inc or pop std inc (bad) adc leave jne mov xor dec mov int3 lret cmp es in ja cld and mov pop mov je or sahf or and arpl in (bad) jnp test jae cs jecxz sub mov ljmp add inc rcrb xorb test push mov jge jle mov outsl enter mov fwait xchg jecxz mov inc fnstsw lods imul mov jecxz fsub imul in ficompl cmp and leave xor xchg pop push mov out repz test cwtl in inc xchg cs imul jg scas sar (bad) fs stos ds in or hlt push arpl adc not jns sub push sahf cwtl add les int3 jl sub scas xchg loop jp and mov es out cmp jecxz mov xchg xor fidivl pop xor (bad) cltd mov add aas popf stos sub dec leave add mov lcall add dec in cld sbb scas lahf enter dec and mov jecxz lods push xor cs sbb pop push int3 add xor mov mov cmc (bad) dec lods shrb jp decl leave mov test or dec sub call xor mov mov call sbb ja js lret outsl int mov ret ja sub sarb arpl xchg jle adc xchg adc sub lcall sub or outsl (bad) jmp pushf push pop aad add aam stos jmp in (bad) lret xor subl cmp aaa mov xlat xchg cmpsl mov divb mov cmpsl test inc aaa mov xor ret pop lods sbbl imul pop aas iret arpl fistpll xchg cmpsl andl add add adc jp sub repz inc inc xchg xlat cli pusha popa inc sub pop dec xchg mov xor mov lods or ja in adc pusha aad das cltd sub cmp mul arpl (bad) push sahf nop nop push (bad) mov mov call jae inc cwtl add pushf faddl xor repz das (bad) aad inc (bad) cld adc xchg fs mov aam leave xor mov mov add lcall dec cmp mov inc ret mov sarb (bad) cmc push aad add mov int3 mov adc movsl sub mov fisubrl movsl (bad) je inc icebp nop and jno movsb dec xchg subb mov or push or daa inc arpl or add test inc and cmpsl xchg lahf push scas (bad) jl inc enter ss nop adc add in pusha mov aam es jns fildl enter ficompl addl dec add dec les inc xor add negl (bad) xchg xchg sbb cmpsb icebp xchg nop jb scas fmuls enter mov popf imul xlat mov dec stos stc cmpsl mov pop mov cmp and jecxz mov pop xchg and jle adc scas stc dec jp dec jo (bad) push adc mov fisttpl sbb pop (bad) imul inc enter jbe cmpsb rolb adc and or jl pushf (bad) adc rcrb push repnz sti or loop cmp pop into fwait add negl or xchg cmp cltd rcll imul mov outsb jae sub xchg inc les push xchg adc ss dec xchg or pusha dec adc test icebp ret xchg jo jb sahf pop mov pop add add mov push mov cmpl cmpsb pusha cs pop jl pop repnz (bad) and xor adc decl lcall dec push xchg add pop xchg or or movsl lods mov dec sbb jae stos nop ljmp sbb push ret sbb lret jg mov (bad) lds ja rcrb loop pop addb sub outsl movl addl add push bound and cmp repz jns dec sub out nop mov push andl enter fcoms ss es nop mov jg mov popa aaa xor enter daa loope mov fistpll int xchg pop aas sbb ss xchg mov mov insb iret ljmp (bad) ja push push scas jno mov jns mov fyl2x jbe mov in lods xchg ss lahf jg int3 cmp add add mov cli test sbb out mov cs enter mov push jp lahf ss pop xchg push cmp sbb inc inc xchg mov push mov push orb repnz inc adcl xchg and jmp pusha cmp jo ja dec xor cwtl push sbb sub loopne pop repz mov adc mov sub daa gs push lcall push inc scas in xor stos out add sbb inc sub push inc fidivr and call (bad) xchg idivb fs lds dec out jne ficompl mov outsb fwait mov and in add fidivr jno push test out jbe fucom cmp mov fwait mov push (bad) xor sub lcall sbb jns stc outsl (bad) push mov loope pop stos or fs xchg add (bad) jae (bad) (bad) lock push (bad) dec xchg ficom lcall cmp sub pop mov add imul sbb xchg call jnp mov xchg and iret xor insb (bad) and ljmp add in mov mov in orl and fdivrl pop and ja nop add xor roll cmc xlat arpl cmc aad cmp inc mov add insb mov roll pshufw test inc in jo adc xchg imul aam test lret mov sbb (bad) jmp xor (bad) mov dec adc push jp add jp sub dec adc movsb hlt icebp adc fildll clc mov inc mov xor dec bound cltd fsubrs lcall xlat and xchg dec sbb shrl add test (bad) sub ret jl shlb lcall fistpll and mov mov xchg jmp or add clc xor arpl nop sub cli mov add fsub mov sbb mov pop mov xchg sub sub xor xchg enter loope enter add mov add jp mov hlt mov fmull mov jnp out pop in fucomp into rcrb add imul mov dec sbb jne clc stos jno push leave aaa push shlb jge lods loope fidivr gs aam pop dec ja xchg aam ljmp jp int3 rcrb sub pop in out iret lds rorb mov cmp enter cmc dec adc lahf ds int3 jns and push mov aas sti cmp lds xchg movsl xchg aas mov dec roll add mov int3 popf sahf jmp inc in push push mov in std and mov xor xor sbb pcmpeqb adc fist pop sbb xchg sbb pop jb cmp jne or xor jmp pop es cpuid pop pop push (bad) pusha js pop dec cltd dec mov fcomip ds xlat and add data16 sub mov xchg leave mov inc idivb unpckhps subb (bad) cmpsl xor add in mov or mov mov lods add in loop mov cmc xchg mov push testl imul jp mov cmp sbb cmp mov pop or xchg pop leave mov pop mov push dec sub push xchg lea leave adc xchg les cmp push jbe add fwait xchg xchg mov push outsl cmp shll jl fs movsl add jecxz add aas mov add int and dec idivl sbb or adc outsb inc pop push cmp cmp push xor or test mov dec stos pop mov xor sbb jnp iret mov repnz lcall pop out sbb sbbl fnstenv pop leave jns dec nop int cwtl loop mov sarb pop pop int3 lock mov or lods js pop scas loop inc cwtl call or (bad) adc add add dec and daa mov sub js cld or or mov jp jno xchg stc movsl sub xor jp add mov add jmp lcall mov add nop les sbb out cltd mov pop inc jle push cmp xor test add add dec in and dec jns xchg mov jg push vpcmpeqd xor sbb mov mov in or mov enter add inc movsb push jb pushf (bad) divb add inc pop vaddsd les ljmp cmc cvtdq2ps jnp jecxz test mov aaa inc push xor pop push (bad) repz mov ljmp orl adc pop inc pusha xchg into (bad) in jp pushf int and jmp xchg loope and sbb mov icebp push (bad) imul test lods mov addl mov dec sbb mov fbstp idivb xlat add inc or (bad) jmp push mov xor dec data16 push shrb lcall fdivrs iret loop cmc ja adc xchg cmpsb testl pushf (bad) adc das inc ds cmp insb sbb pop es sbb xlat les mov adc int pop (bad) imul pop leave fstl add xchg ficompl xor jo and pop push andl add pop outsl jno xor mov pop xor cld push xchg mov xchg fs jno pop bnd jnp imul adc adc cmp jb icebp push mov cmp fisttpll inc push (bad) (bad) xchg jo or lock pop mov lods and push (bad) inc pop xchg sbb jl in or and scas adc xchg arpl aas xor xchg mov adc movsb mov mov icebp lahf cwtl xor add add sbb mov das lods push dec ret lea loop dec es scas and inc xchg push leave fist push fldt inc lock pushf nop icebp rolb push and loope leave mov stc test arpl into pop pop cld xchg cmp dec or push jecxz mov mov sarl fcomps adc das outsb mov cmp (bad) lock popa sub and fsubr movsl ja jno mov pop mov dec outsb sbb movsl add push add loope fcoml insb arpl adc mov sarb sub int3 sbb aas inc out dec daa mov pop test xchg xchg loop xor cli lock jecxz cmp incb ss bound test or subl pop pop adc into scas mov sbb sub mov icebp adc lds add dec jle mov hlt and add add in add xlat out imul push mov nop cwtl js add cmpsb lcall out aam mov xchg xor sub and sti push mov inc add fldt scas add (bad) ljmp stos jmp divb (bad) dec adc cli pusha push push fcomps lahf out add bound outsl xor lock inc mov ja inc cmc lret sbb (bad) add add inc jnp mov mov lea test ja sub mov ja cmp mov dec xchg push push stos dec fsubl jp cmpsb mov jle mov cmp push das adc je mov mov addr16 pop and pop nop sub push mov (bad) cmp (bad) dec dec rorl sbbl ss (bad) cmc jae scas sub push cmc scas fwait add sti push mov or mov loope sbb push in jb sub pusha ds sbb sbb xchg popf sub lea inc outsb pop out xchg nop aas or into or add sti push add movsb mov (bad) int cs mov movsb leave jg xchg mov sbb sbb mov add push pop mov jl mov cltd cmp fisub add pop jp mov lcall sahf adc add add sbb xor daa repz mov cmp jae jbe jae (bad) outsl pop dec dec int3 dec movsb dec mov dec sbb std sti (bad) mov cs xchg and int ds or pop scas jecxz and mov add xchg sbb push dec rcrb or adcb nop cmp push ss add aas mov test insl push xchg (bad) stos cmp movsb flds add add push int3 (bad) aam into fs lret mov imul movsb xor pop (bad) and in lods loopne loopne mov xor or lds cmpsl lods out imulb das adc daa in mov ja popf jecxz sub int3 test pop jmp xor inc adc sub fstpt pop sub xchg inc fiadd sub dec ja lds inc icebp repnz pop mov stc mov stc imul insb andl (bad) pop dec inc (bad) arpl (bad) mov add stc or jl ss pop dec pop arpl scas dec lea mov negb fildl movb lahf xor xchg insl pop xchg and pop (bad) mov ljmp xchg icebp movsb leave jae pop inc mov mov test mov sbb xlat jns daa mov add or mov jae fisttpll inc adc sbb adc (bad) mov (bad) in in aam insl add push xchg das ret dec xchg lahf in sti test sub and outsl add mov mov and inc add ja popf lds mov mov ljmp jo push divb or cmpsl jae addr16 fidivr (bad) sbb or or lods mov lret dec inc lds mov push ret popa ljmp sbb ret test push mov lret xor imul imul fwait cmp icebp mov cmp jo pop int in xchg ficomp fiadd test into sbbl pop inc adc add or mov sbb cs xor inc mov pop jbe cmp sahf rcl pop or jp jns mov sbb je dec inc xchg push in and es add lods pop into adc cmp jnp gs insb fs test inc (bad) mov divl sub xor or xchg stos jmp and mov cmp sar lcall inc and sub push add and mov mov mov data16 push ret lcall xor test outsb test add jb sbb pusha jg push pop mov fwait xchg insl cmpsl xor sbb xor addr16 jmp xor cwtl add imul test sub xchg push in fs jnp into aas and mov loop pop testb sbb jbe repnz (bad) sti jbe fistl jae loopne mov cmc add add aam mov lret sbb scas jo (bad) popf jnp jne mov (bad) jecxz lds addl daa mov imul gs dec in mov mov pop cmp xchg pop or (bad) clc push dec push xor sbb mov or pop test push jae sbb pusha rcll pop cmp jne rol orl adc mov xor xor add movsl scas mov push adc xchg adc mov fwait shrb and aad insl decl inc repnz mov push mov into xchg add jl mov sub mov cmp (bad) aad das out movsb fist dec pop add int inc lods adcl mov inc mov shll mov jb rorl jo mov leave pop in ret jae xor bound push lcall jno fwait sub hlt push stc lcall in jne dec rcll jbe loope sub dec test lods imul adc mov jo dec mov xchg or xchg cld stc mov xchg cmp pop stc dec cmp lock cmp ret cwtl popa outsl into dec push lcall mov push pop mov rorl jnp (bad) ja mov test das xchg jnp mov bound add add add add jno xor (bad) fldcw jge mov mov cmp push outsl out pusha leave das sbb add (bad) cld add xor nop cmp cwtl or into jb sub mov ficom shrl outsb jg dec (bad) push push dec (bad) lcall insb sbb bound ljmp sub fistpl and and pop fldenv cwtl and adc negb sub adc and pusha sub stc mov ds mov js or cltd insb xchg mov sub or pop push repz loope in aaa mov mov mov jp adc push adc dec pusha cmp inc push jmp out mov xor push cld leave mov mov xchg pop testb fmul mov popf pop lea ljmp or sbb adc inc bnd (bad) and push out flds or sub outsl cmp add mov jle or pop lea pinsrw icebp imul fdivr add xor push cmp aaa mov adc lcall xchg mov out pop lret mov xor andl pop push fs add fcmovnu (bad) xor jmp adc stos inc out cld jmp sbb sbb into add pop jge mov clc pop mov push sub jne movsl fwait mov mov add add xor mov mov xchg lds test call addr16 or fcmove xor mov push dec adc outsb xchg test mov fcmovne enter mov test xor arpl fldl roll cltd jge inc pop sub js cld mov out pop jmp sub sub pop stos adc adc cli iretw lock stos (bad) test inc and addr16 jp test pusha inc add add aaa data16 cwtl push sbb fidiv adcb inc cltd imul jg scas nop cli rolb sbb jns movsl sarb dec mov mov mov push jmp sub in push dec repz ret bswap pop fs test jne sub aaa inc cmc repz add lds jns dec sub into pop mov add xchg xor in jp pushf int3 adc push or xor add add lret pop pushf gs (bad) sub sub int3 dec cmpsb movsl push hlt loop (bad) inc mov (bad) jb ficoml ud1 adc xor repnz cmpsl adc sbb xchg and movb loope sub fisttpl repz dec pop mov cmp and jb xor ljmp xor int3 xchg jp mov test add test xchg pushf mov push out mov inc jbe and out in sbb add add jmp dec inc mov in ljmp lods inc jno jmp scas dec (bad) mov add jg cmc cmp push sbb jno nop push xor push or sbb mov jo data16 popa and gs adcl daa loop cmp in jb and push xlat es sahf adcb pop xchg mov pusha int3 das (bad) xchg pop test xchg mov insb and gs jae fiaddl cmpsb mov mov loop add add aas iret push data16 ja sbb sti add cli je insb rcrb arpl mov scas (bad) dec push inc xlat mov and mov xchg stos lea dec xchg jl popa xor outsl (bad) xor cmp insb cltd pop movsb fwait int3 inc pop cmp mov std jne loop leave xchg push in cmp cmp inc jl ss add mov xchg fcomps adc cmc jp pop in jp lods push ffreep outsb enter jmp gs test (bad) (bad) adc movsl adcl dec dec mov cmp fstp into insb iret (bad) mov movsb test lcall or push push jg push pushf js aaa xor dec push dec sahf mov pushf or jle or inc cmc mov cmp sahf mov adc push ja lahf ss pop scas test fcmovnb xchg cmpb insl cmp jae aad xchg dec dec enter stc or mov jge fld mov mov outsb push cmpsb imul leave adc stos pop out add jge adc fldenv fnsave inc push in mov or jne cmp call lcall adcl aas jno call frstor push xchg and ljmpw sub enter mov dec inc lahf lret bswap jecxz jecxz inc cmp mov jbe cli ficom pop (bad) or movsb or sub rolb add mov add dec (bad) lret out adc aas ds int3 ret test mov add dec out or pop loopne mov sub (bad) jno fwait (bad) jno sbb lret nop andb ret addr16 std lret inc rcrb movsb dec dec push js sbb lahf enter and cmp arpl js call cs and into cmpsl stos adc rolb fiadd ljmp add add cmp cmpsb test and pop push dec add stos pop mov jo xchg scas rcrb jb dec stos dec es sbb cmpsl mov lods mov movsl je in loop xor bound lret xor inc adcl subl ss pop test pop sbb xchg movsl or add mov aam aad mov mov outsl push inc mov int3 mov nop das inc jl ss push pop add dec adc cmc outsb cmc icebp ret xchg push mov test (bad) jg mov in rcrl adc ja ja pop arpl cli subl movsb sub xchg xor test xor inc adc pop jne mov mov or pop or xor jg pop jle and das jl lcall aad sarl lcall in (bad) xor cmp out icebp sbb inc push ja add data16 rcrl sbb enter test sti cld aaa inc adc mov jle push (bad) movb fsubl cs ds ror (bad) cwtl sbb fwait push xor cmp or ss jae in (bad) cmpsb push iret cmp jbe test or push mov inc int and aas sbb jecxz int push ss subl test call lods and lea aam xlat add jle pop inc (bad) test adc dec mov gs rcll mov and cmp outsl in (bad) out jbe or inc jle scas adc sahf cmp sub popf rcll lds lahf add cs sbb add cmc lret mov xchg movl jmp or movaps mov lods xchg icebp shlb xlat inc cmp pop outsb repnz movsl (bad) cwtl push repz ret xchg loope dec loop fdivrl imul into mov enter xchg gs push outsb xchg test (bad) mov dec push dec inc pop and push xlat dec mov enter sahf and dec mov push lret (bad) aam dec ja int (bad) gs xchg iret lret inc mov ljmp and pop in or aad ja aam jge nop lock push (bad) cmp dec and pusha insb sbb adc xchg paddq and nop inc fnstcw add mov aam mov mov mov test stos xchg add inc mov lret cli or fwait inc imul cs pop dec push xor xor mov in mov dec mov loop fldl test sub outsb cmpsb movsl push in test into pop inc imul push mov lds sti ljmp push lds out adc mov lret inc mov (bad) cmpsl push std mov push add out ficom or push jns bnd test (bad) aaa aad mov stos cmp lds lret adc mov movsb cld aam add jae sbb (bad) sub jl pop sbbb popf add flds lock test jae xchg mov data16 mov testl sub aas pop cmc xor cld pop loop xchg leave inc es push fmuls movsl fldl2e lret aaa fucom imul stc in stos sub scas insl xor xor inc dec xor inc and (bad) lea les sub add or cmp push mov aas jbe in imul insb arpl cld ds jg imul mov inc xor adc lret xor inc mov xchg loop inc rorb push je lea xchg dec (bad) xor test (bad) mov sub mov cwtl mov out lret into jle mov adc add pop in pop (bad) mov inc inc nop mov sbb mov or push xchg mov lds fmuls ja stc fbstp sarl (bad) (bad) jb or jbe jl out push sub mov out cmp sub and mov lahf dec pop mov mov lds shl movsb (bad) push xor xchg xor daa sub ds mov or pop int push insl inc cmpsb cmpl add dec jl cmp sbb sbb fs fldt jae pop sub inc icebp push mov cmp bound push in cmp jb xchg xor xchg fsubl int3 loop sbb mov outsl sbb pop or leave icebp sbb dec pop rcrl pusha dec add xchg shr ds mov int3 fs lret add push aam adc jecxz mov data16 inc fbstp jnp and shlb pushf xchg sbb scas test mov push mov mov aaa xchg push aaa lds mov push cmp mov mov andb js or loopne fstpt jb (bad) (bad) or loopne push inc imul pop sbb dec mov add and xchg jl push pop xor add or setne in cmpsb fldl imul lock pop xchg ja ficom cmp lods loopne jle mov cmc push fstpt insb pop cld int3 aam fdivl mov add or inc iret int xchg jnp mov inc aam xor inc sub outsl rcl (bad) sub clc mov dec adc sbb movsb adc outsb xor mov cmpsb push ja ja js jg dec test jmp xchg cmpsb bnd pop add adc inc or leave sub test ror push leave out add xchg sub push or aad add cmp mov adc cmp rorb add movsb cld mov std pusha mov pop mov (bad) addr16 std lret inc out and jmp dec cmp call jle fisubl cmc inc jp jmp scas xchg and add loop (bad) xor out mov daa lret movsl mov movsl dec xor or jg cli and cmpsb test jno scas int mov inc lods aam out imul add cs xor mov mov mov jbe ja sbb adc mulb xchg cli adc push (bad) adc mov push (bad) (bad) push sahf xchg inc jg jo mov pusha push inc jne cs xchg xchg insb leave dec mov xchg and sub or inc jmp mov ljmp dec scas arpl fisub enter xchg jle cwtl mov mov jo push cmpsl sbb test aaa xor aam icebp dec test ret sub add and imul adc mov out scas mov (bad) mov insl iret imul test sub push adc orb jg pop or xor jg and sti sbb into add arpl push xlat pop inc sbb das lret mov stc xchg sub mov mov cmpsl sub xchg out scas ret aam test xchg xchg enter cmc rcl aad bound add add push xor fs and pop (bad) push sbb xor sbb xor in jl shrl adc sub add ss lds mov fldcw das inc or stos gs rcrl add mov xor clc sbb lods mov outsl lahf bswap add lea pushf push adc add rorb iret xchg xor xchg dec test dec aad cmc ja in bnd add adc jl add xchg pop lret loope lahf ficomp loop inc into xchg rcll mov push das jmp lds mov lock (bad) fwait push mov jbe into les std (bad) jne vpmacsdd enter mov stos sub fldcw ss out addr16 adc or pop mov pop add xchg pop out sbb ret fdivs dec fcmove mov xlat mov xorb push rcr jb daa push jg xor mov xlat and xchg fwait test adc icebp fistl jge (bad) idivb dec xchg push scas xchg add lock xor popa loop mov push jbe lahf insb mov cwtl add (bad) int3 jnp sub sbb mov or inc ret mov pusha pop lahf rcll popf push lahf ss int3 call inc pop pushf out or adc orl rcrl cmp xor (bad) xchg add lcall pop fldcw xchg jmp cmp push jl (bad) adc sub (bad) add ss lret das nop mov mov loopne push mov and out cmp rcll push adc jo arpl mov in push (bad) xor cmovg sbb leave jge pop test dec sub cld in std repz mov cmc das pop ret sbb add clc mov test adc pusha (bad) adc jns daa push push cmp inc stos rcrl mov pusha leave scas pop mov outsl fisttpll xor cmc jno clc outsl xchg ljmp add mov jbe nop mov xor jg xor jg sbbb or out cld dec fcomip fwait inc add fmuls add gs jecxz adc and pop mov in (bad) mov sbb repnz dec xor sbb sbbb mov daa jo inc iret pop add mov xor repz push aad repz fcompl xlat sbb nop popa in ds or testl bound ret jge sar mov mov push adc mov (bad) icebp mov sub mov in stc add pushf imull or rorl flds sub rorb dec (bad) pop cmp mov jno enter push pop push pop cmp js cmpsl dec pop dec dec push daa imul add add rep into sbb push insb das mov aaa scas cmpsb xchg pop xchg cmpsl mov and sub pop mov int in aas out lret ret inc fsubrp and daa dec jo scas jecxz pop dec loop sbb popf imul mov jmp sahf sar scas nop mov pop mov stc stos pop sahf cwtl lds mov xlat dec into mov lea xchg outsl mov push inc xchg inc (bad) lock ret test iret sub mov add add and add xor hlt insb (bad) jl xor aad jl js or insb pop mov inc jecxz pop fidivr aaa into mov mov inc (bad) aas pop cmpsl jb std pop ss mov bound (bad) jbe mov mov out ficompl movzwl add and xor jnp sub cmpsb fs add daa jp ret lahf xor mov shrb jl mov xor dec cmp mov cmpsl add sbb and or xor cmp mul jg pop arpl dec ljmp jb inc mov addr16 inc les mov sub adcl fidivl loop add adc or pop or pop pop (bad) mov and fmul rolb ret int3 dec les inc cmp xor fcomi mov xor sbb dec xchg hlt icebp ret xchg bound jnp xchg xor jge popa movsb mov iret push movsb je jnp add and mov mov cld test sbb and push adc decl cwtl dec jo (bad) inc into std ljmp lret jp and in mov xchg pop cs lcall xor or sar or cmp bound mov shlb adc ljmp shrl fdivrs lret insb mov lcall test cmc pop mov lret (bad) aam adc in add and lahf sarl mov lfs lods push xor dec adc ds icebp sub ss mov mov and jne (bad) pop rcrl mov pop push cltd fsubrl inc mov pop pop ljmp jp cli sub fbld sti jmp add shll repz cld fisubl aam and inc daa push push xchg or jmp push (bad) adc add add push arpl (bad) das iret sub xchg loop jp cltd fcmovu les add sub test mov jno add gs pop (bad) out ret sbb add (bad) das ljmp sti mov sti dec xor addr16 sti flds add sub cld pushf jne mov mov mov addr16 mov jge loop xlat cmp push adc (bad) push scas movsl fbld mov xchg into cmp adcb jp loop mov push iret pop stos lods mov sbb lea subb insb fdivl pop mov cmpsl xchg cmp adc mulb lcall fldenv xor test (bad) push sahf sub mov inc adc (bad) hlt mov sub jp icebp imul arpl add xor push pop pop or push dec dec jns addr16 in sub inc mov lret adc sub je sbb add add out out fisub pop cmp repnz jge mov test mov (bad) xor mov and push fwait add pushf mov cmp lret fsubrl and lock dec andb dec std jp sbb ljmp push sbb add sub jg push dec call mov xor faddl lock mov or (bad) xor mov and mov jle rcrl cmpsb ret jmp add outsb mov imulb cmp or or pop inc bound add loop pop int3 hlt fdivl ja xchg pop jnp pop or mov cli fbstp into (bad) popl subps dec xchg mov (bad) push rorl inc dec jno and fistp out test jecxz inc dec mov dec pusha and cltd or outsb pop js pop add test pop sub ljmp sub mov stc adc push cmc cmp push lea pop or loopne,pt lods or mov addr16 dec adc fdivrs pop mov bound lret ds cmp or dec inc lds gs xchg sarl cmp inc sbb cld rol daa imul pop pop aad mov adc (bad) jae mov adc ljmp sub mov sbb cmpsl xchg mov jns dec or adc sub add jae popa repz pusha lods jecxz fwait jne lcall fstl std aaa mov mov add scas adc cli lret shrb cld js sbb or loopne scas ja and cwtl jmp mov hlt push outsl pop jno mov int3 bnd xchg fmull pop cmp dec push dec stc xor in push push into les push aas cmp push lret xor xor loop ljmp add add imul or icebp rorb dec repnz addr16 das and fbld std lret push call movb fidivrl jecxz loopne jle int loopne aas jo ja ret repz popa (bad) adc pusha lods repz fwait psrld ficompl (bad) jb add and push mov sbb sbb and sub adc (bad) push pop inc jp cwtl lods mov fdivr mov push pop in or imul sub loope lahf aaa std cli jmp inc add add mov xor xchg and xor in push or xlat fistl and xchg push test shrl test sbb dec mov pop fs (bad) mov lods inc bound mov lea je (bad) and lret shrb sbb cld lea mov dec dec test dec sub out pop (bad) pop mov test xor inc shrb imul pusha xchg shll movsb dec pop pop cltd mov pop add add pop push ret mov int3 insb mov cmpsb out push jg inc jo xor xchg jg fisttpl push dec xor xor outsl jg push popa xchg cmp es in dec push mov jnp les stos or repz jns stc jecxz jmp inc adc inc (bad) lock xchg xadd and movsb movl sub sub mov sbb test (bad) add stos imul ljmp cmp or push xchg cs icebp inc push xor fcoms fmuls (bad) dec mov loop sub stos in pop aas adc out stos inc hlt fdiv sub repnz (bad) sar (bad) xor repz test fmuls hlt shll dec mov mov testl adc addr16 cmpsb popa aad cmpsl xor pushf or out mov sbb lret mov test mov int3 mov pop jb mov xchg dec push push xchg cmp f2xm1 adc cmp push call int3 cmpl add pop jge into out pop iret outsl sub ds pcmpeqb addr16 jle fwait std jecxz push mov mov jg cltd jo cmp cmp test jns lods mov jae loop fnsave shrl (bad) push add fidivrl repz int3 insb inc cmovg push mov add cmpsb cmp int adc fistl jmp pop push aad mov add xor xchg xor (bad) jmp arpl cld ds and (bad) sub xor (bad) (bad) ds xchg sub insb popa je adc jmp cmpsl xchg xor shr ret test iret cmp cmp out inc xor std jmp inc adc mov sahf outsl push sub sti in jb divb sub pop leave push sub xor jecxz jg add lods mov mul jbe (bad) popa push mov xchg scas cmpsb popf pop xchg mov loope or mov xor and dec xor js mov ret mov push scas aaa pop mov sbb pop dec cld out test out jge inc repnz lcall pop loope jl add lret addr16 fwait (bad) adc mov and lret mov push mul rcrl mov inc ja ljmp fcmove inc pop add xchg xor movl pop pop or test test or xor outsb or pop mov mov xor pop xor and gs cmpsl cmp xor in scas xor mov xchg cmp cmp and iret add and test test dec testb push daa jb std mov mov test sub add cli push aad je xor add mov adc dec ja nop popa int in or cwtl jecxz lret fidivrl repnz dec mov adc cli mov test sbb sub mov test pop clc outsl mov inc out xchg popf in or xlat add push lds cmp mov pop in adc test cmp js xchg xchg and inc xchg and pop loopne jbe hlt lret pop xchg mov arpl mov cmp push add pop push adc inc sub jno outsb lret fstl jle mov push roll int iret popa xchg (bad) jo test int3 stc mov (bad) pop (bad) inc out repnz and rol lods or push and jp pop loope out or jl ss rcll or xchg xor jns xchg jp (bad) lcall dec leave enter push fidivrl mov cmc (bad) cmp push iret cmp cmp sbb and jl xor adc add add sbb xchg icebp scas dec fwait insl lcall sbbb subps dec jle sub xchg and or fnstenv imul mov arpl dec fsubr lret mov sbb push adc fcomps data16 in enter xor sbb xchg iret popa push ret movsl fwait jp inc repz xchg and jbe mov adcb and pop hlt dec daa mov cwtl mov (bad) mov adc add pop (bad) adc (bad) fwait js scas dec xor inc jg sub mov iret mov sbb mov stc sub in and mov jmp movsl mov adc pushw lods fcoms fild (bad) and cmp sub and push pop cmp std pop mov scas lret mov hlt in sbb aaa mov pop cltd fstps mov fidivr out fimull aas cltd loope jmp cmp int in aas add call ret mov xchg faddl jnp aam inc inc sub mov add push push out sbb push dec mov fs test mov mov scas sbb sahf or jne mov (bad) fwait outsl mov inc fidiv push jp jmp ja add inc sub adc dec mov (bad) adc mov or sub sahf push (bad) adc cmpsb test push imul andl imul (bad) mov cmp addr16 mov jno xchg (bad) push pop dec ss sbb lahf icebp sub mov add jne push mov movsb sbb call stos enter add lea mov test cmp lahf cmpsb xchg icebp push lcall xor mov push pop cmc jo push xor in mov or jae in mov js adc cmp pop dec xchg pop cmp rorb mov jo imul add add cwtl ss int adc sbb (bad) or test inc bound add call mov mov (bad) jae sbbb (bad) mov xchg sub cmp jno xor cmp or xor cmp cs int3 dec or jo divps movsb pushf add cltd mov sti fisubr fiadd aam int3 out loop fisttpll xchg fwait rorl mov add movsb push insb jae add and and inc adc push sbb lahf xlat dec adc pop jnp insl xor std sbb inc ret fnstenv ds pop popa je les gs cmp add out mov fnstsw xchg ljmp in movsl mov dec jns mov pop fwait cmp xchg pop adc or ljmp add dec xor lahf enter std stos mov mov shll add and mov adc fadds je or (bad) movsl sbb and scas int3 stos mov fimul cmpsb iret sub scas movsl push flds sbb push je mov push psraw imul dec icebp pop loope sbb and or movsb fldenv loop xor mov dec cmp shr inc jge jle sub xchg push lds andb jp fstpl daa mov add dec jg cmpsl fs shll dec jns sbb repnz jae and adc outsl repnz ffree cwtl push sbb out lret dec push jno pop or mov add jne aam into inc mov scas and pop xchg sub add stc xlat jns pop push cwtl loope jmp pop pop and sub cmp cli push lcall mov lret (bad) jne dec ja push shrl repz mov loopne inc mov add add push ret call and rcrb pushf jle xor or jp inc ja icebp rcrl in xchg insb out jmp jae lcall jns push cmpsb pop mov mov mov jecxz push les sbb mov jnp out pop sbb out (bad) push cwtl pop in adc jo mov fistpll mov mov imul out aas xrelease push pushf mov fiaddl add xchg mov mov pop scas int xor jp decl (bad) dec jo (bad) pop into std cmp lea pop rolb sbb cmp mov insb gs sbb daa and mov int3 repnz dec adc and daa repnz mov fcmovne negl mov ret lcall inc inc cltd mov or insl cmp dec out js mov aam leave or adc sbb xchg pop inc lea (bad) dec mov addr16 icebp inc mov jmp stos inc in adc xchg pop push cmpsl adc cld pop ds adc push (bad) leave mov and in jb into mov xlat rcl inc stos inc jae lock aas cltd or inc addr16 outsb dec mov adc int3 adc and insl je inc adc arpl jbe dec sub imul inc xchg jbe add mov or pusha push pop adc xlat arpl inc cmc dec pop cmp add add mov scas dec stc jle in push (bad) clc xor sub adc leave out lds ss (bad) popf pop adc sbb pop xor adc push jns (bad) out loop mov insb dec outsl mov xchg jle sbb pop sub jb dec push mov imul jbe add popa popa or test ja push add push fs mov jmp inc pop and sub cmp adc add jecxz and enter sub ret jl shlb xchg xchg fimull mov dec test or push imul jl mov adc (bad) xor jb xchg xchg in sub xchg sti loop mov shrl dec sub mov jmp push and imul pop enter lea adc lods cmp jg fsubrp xchg outsl dec add add jns icebp lahf mov or dec sbb pop data16 mov mov add lret mov sub fwait push pop cwtl js inc aam insl jb cltd aaa lods jle xor sbb cmp sub iret sub mov stc scas mov dec pop mov ja ret lret jbe bound jp addr16 xorb (bad) mov mulb mul gs or (bad) xor stc sub and mov rcrl std adc hlt sub add add add scas ret pop fnsave add dec jnp pushf add cltd jle adc outsb xor xchg icebp rorb dec rol mov mov into (bad) adc sbb jp js dec push xor ret dec add loop cmp push daa mov pop push hlt pop jns cmpsb es mov jg cltd and iret fisub mov (bad) mov ret jmp shrb out ret jne push inc rcll (bad) xor xor cltd add mov mov fimull jbe add mov or xlat arpl xlat or dec inc ss cmp sbb inc push mov jae repz int jnp pop mov nop xchg ljmp add add mov jns insl cmp add xlat les sbb mov xchg jle cwtl lods sahf mov aad nop dec scas loopne stos scas clc push pusha aaa mov push outsl insb jmp out stc cli add add loop push mov push adc fdivrl xchg data16 push int3 push xor popa mov pop btc pop jmp or sub jl or push (bad) jno cmp sahf leave je push mov repnz sub loop or lds test sbb inc lret ds pop xchg icebp lret insl inc std xchg mov ds (bad) lock addr16 hlt fs or cmp add cmp insb cltd jge add add mov enter (bad) jnp jo xlat inc xor pop mov enter jb int3 xchg jl cmpsl mov mov rorb arpl jle sarl mov inc mov scas call cmpb fnstenv in stos mov sbb clc fwait nop xlat and mov push shll xchg repnz ret xor pop lds movsb pop (bad) jno add and push lret aaa imul sahf cmp or add jg (bad) int3 push push xlat adc adc inc and lcall sahf cmp pop jns out pusha mov repz rcr push sbb ret xlat out or nop lods or jmp lret fnstcw enter jae in mov leave nop cmc adc les mov cmp es mov xor mov daa jne push negl arpl mov inc cmp fild add add arpl mov test xor into jmp and sub lea dec (bad) cmc pop cmp dec sub test mov pop mov lret cmpsl push cmc xor add cwtl hlt dec adc fdivr pop or adc (bad) xor cmp into sub insb sbb leave fiadd lcall dec add push test jge enter in aam js mov mov push adc mov (bad) mov loop add cmp popa outsb (bad) in lock inc (bad) fmuls or or lret pop push dec xor ljmp mov pop pop cld test mov inc mov in mov push push sub sub mov adc mov mov mov lds pop jg xchg ja sbbb mov in in or push imul testb stc aam jge cmc mov cmp or cmp roll sahf add inc ja cli rcrl push int shrb mov fnstsw cltd mov fisttpl cmp inc dec jns fcoms scas and fidiv mov lock int pop mov add jno inc push push mov daa daa jne inc scas jns adc and daa dec aam or (bad) outsl jno and xor sbb (bad) xor ljmp inc jns push fiadd add add sbb inc jae mov bound mov iret inc sbb enter cmc xor into popa jge je es cwtl arpl les xchg push pop xlat arpl lret mov popf push adc ret ret outsl cmp addr16 pop pop add sbb outsb push test lcall pushf clc insl stc or dec inc mov adc jbe test jae adc inc dec mov (bad) or outsl sbb out ret or add in sbb jo jbe ret repz mov and daa outsb aad shll repz js je or xor sbb pop push cmp in and bound repnz inc inc sbb mov cld mov xor pop repz sbb mov pop loope cmpsl daa inc pop ds or sbb stc jbe addr16 (bad) (bad) mov das aaa dec dec (bad) nop xchg je in push push into fisub lcall movsl or add popl mov aaa inc int fmull (bad) aam mov addr16 icebp rorb dec (bad) push xchg xchg mov push ss sub mov stos cmpsl daa ja (bad) pop cmp mov test fsubs je mov mov pop add pusha lods jbe xlat sbb sti pop jl mov imulb sub and fidivr insl movsb xor or mov (bad) (bad) mov (bad) icebp jg pop leave mov fs test add std pop dec cltd orl lret (bad) mov xor or xchg sub pop adc inc and jg cmp (bad) lcall sahf sbb loop inc push leave fisub mov adc sarl clc push push fcmove sbb fnstcw jne pop jnp push push sub scas or mov lock and inc push js inc scas lahf enter mov sbbl mov pop xchg pushf mov leave fstl mov divb adc dec xor xchg out mov adcb mov sbb add stos gs xchg jg scas lods (bad) or fcoms dec sahf adc in fucomp arpl addr16 mov rol adc js pop loop (bad) jl add mov int3 shrl (bad) fmul out int shrb pop jae xor add mov jmp into pop lock es mov outsb push jae dec aad sbb out insl pop out test jnp jecxz mov cmc xchg xor push cld dec cmp mov mov mov and test push and jbe pop mov adcl int mov aas popa call mov push pop call inc inc (bad) cmc xlat add gs movsl imul lods or sbb popf (bad) or xchg cmpsb repz insb jg add in loop push test clc xor adc repnz stc sbb push leave (bad) dec xchg sub call dec xchg imul mov push mov mov dec jns fnsave leave push inc pop add outsl cld or mov add (bad) daa popf inc (bad) jne dec idivb mov jb pop push (bad) aaa cmp and inc mov xor insb jl notb pusha lock fdivrp or aad xor ljmp mulb push and adc dec ja cmpsb loop (bad) lea push fcmovne and arpl mov and data16 push (bad) jmp loopne add idivb daa sbb adc cmpsl inc mov sahf xchg jns lds xchg adc add dec xor ret movlps xchg outsl lods add pop or adc push jge dec jns cmp push jge or inc dec pop outsl das lahf fstps xchg jle sbb out xchg cld mulb (bad) push mov pop push cld xchg cmp inc push jecxz repnz mov pop cmp jns mov and daa jge outsl decl adc cltd mov loop mov dec movsb xlat dec xor dec mov ljmp mov dec iret les add (bad) fnsave or hlt jno xchg and or ja nop add fdivs into sub adc je repnz adcl pop jecxz adc add add sbb lcall xchg or imul pop pop enter lods test cmp xchg cmp dec jns addr16 imul dec jle arpl and and aas loop (bad) and sub cmc ss std xor cmp inc push add jmp stos gs not pop push xchg push in jmp popa aas pop into aaa dec (bad) movsl sbb subb xor ljmp sarl sar mov pusha nop cwtl (bad) and dec mov rorb lret ljmp inc daa and mulb mov rcll stos (bad) notl sbb xlat (bad) mov sahf stos sub jnp fidivr and lcall xchg insb pusha gs in ljmp xchg xor sarl mov sub add jg cmc js sbb xchg push mov movb pop (bad) cmpsl leave pop pushf fildll mov mov mov dec gs jecxz cmpb outsb push adc jo jp arpl or mov in xchg xor jge jp sub (bad) popl out jns fmull push xor je fs mov lods mov pushl sbb mov or mov std jge popf (bad) adc stos cmp add inc in cwtl pop or shrb lock sub cmp or mov add add mov mov and (bad) fwait cvttps2pi imul cmp ret fucomp fidivr pop and mov jp scas jecxz mov push add daa mov lret sub push adc and cltd or fs xor in sbbb popa dec jb bound jno inc inc xchg mov mov or xor mov mov lods stos push jbe add add ljmp xor or test sbb (bad) and dec push inc mov xchg or mov adcl fdivrs shrb dec mov fnstsw pushf pop xchg xor sub rcr stos mov adc imul (bad) lret (bad) jae sub je addr16 jle in sbb pop pop xlat fadd dec push xor mov sub sub mov adcl fadd cltd add jae xor push (bad) cmp inc scas imul inc mov inc in cmp orl data16 aaa jae scas cmp cli ljmp or mov sub inc pop push jb jmp mov jl sahf rcll cmc imul xchg rcrb dec mov lret fnstsw cwtl mov mov subl sbb mov cwtl fisubr mov add add cmp loop clc sub pop or push add enter xchg push cmpsl hlt icebp lret pop push or das mov push sbb pop mov cltd aaa movsl es jp or jle jno push jle out insl dec xor int3 xor inc hlt arpl int3 and push (bad) pop sbb mov popa jo mov inc sub imulb xor nop mov or push or or xor shr push cmp add repz dec cmp push insl cmc imul repz mov add out lds cmp fstpt sbb dec scas cmp aas pop inc addl (bad) jmp xor xchg dec outsl jg push mov leave dec iret pop xor daa popf dec dec sbb mov xchg mov sarl pop lods jmp pop cli fmuls add mov pop test movsb dec push mov imul xor test mov (bad) aas loop faddp cmpsl test mov add mov cmpsb and test jns mov stos xor bound jmp addr16 jne inc mov outsb adc fsubrs jnp dec in xorl mov mov inc ja dec rcrl fidivl xor outsl xchg enter adc jle ror ffree flds adc fildll mov ss mov xchg addr16 imul pop lahf leave add paddb mov icebp inc rcrl xor sub mov gs lock cmpsb pusha add dec xchg xchg mov mov mov and and and sub and mov or out add mov test push mov hlt scas stc (bad) xchg cmp dec popa mov or jne loop xchg sub lret insl mov pop aam scas (bad) mov fisubrl fdivs les xchg adc xchg test xchg cwtl pop clc in orl xchg cmp flds jns mov pusha jecxz mov in adc cmp movsl jnp rcrb (bad) or dec (bad) jl inc push scas dec cmp loope inc stos aaa mov pop or mov loopne mov movsl leave push adc cltd add pop cmc jbe cli andl icebp and mov sub push push inc xchg (bad) mov fildl pop xor add sub or xor out loope push or cmp clc loopne out fstl dec nop pop sub jecxz roll out pop xor jae dec test sbb cli lret inc sbb insb mov in dec (bad) imul or cmpsb sahf pop popf add shll in fldenv lds pushf pop cmp jl das (bad) es jp nop es insl std jg jno lret pop jl xchg and aam fidivl pop xchg and mov shr and loop ret cmp mov inc popf movsl and sarb sub fs fs ljmp int3 in lds cli ljmp cmp mov jge pop push (bad) xor fsts fmuls aad add jmp inc ret popa fisubr cmp divl std jae jno add iret push call and mov pop adc xor cwtl add inc pop je nop mov cmp arpl insb sub ljmp sahf hlt pop adcl jl jnp dec xchg adc flds repz movsb rclb cs xchg push fdivrl cmc push jnp jo mov or call xchg dec pop cmp jl pusha jp xchg stos ja xor mov scas mov sub test movl (bad) je mov mov nop xor push add pushf mov dec jns dec cmp cld mov ret lock dec push push lods and pop dec ds mov lahf jb (bad) int3 mov sub out movsl mov pop fsubr imul pushf mov mov outsl ja push or add push xor cld stos dec jno xchg movsl sub push rcrb lock insb (bad) jg and push movsb pop pop pop sti mov inc scas dec lods sbb adc repz jae add add test loope jp fistpll and or dec jo scas adc mov cmp (bad) mov jg push dec cld movsb xor and (bad) or mov out scas ret dec pop decl mulb int stc sub sbb cmp les jbe ljmp xlat shrb sbb fst repnz mov out xchg xchg aas dec mov pushf idivl dec hlt lock ss adc add fldcw mull cmpsb push xor add mov mov sub imul sar dec fucomip pop xchg cld fcomp mov mov lret aad jecxz adc adc and add pop inc mov adc inc mov ljmp mov inc inc push and sub (bad) lea push imul sub loope stos iret scas nop ljmp fmull mov stos mov enter nop mov cmp sarl add pusha out pop xor mov sahf inc popa and outsb (bad) std sbb popf ja pop outsb push cwtl and ret add sub stos and out sub outsl dec xor push or inc pop or cmp cwtl cmp stos push cmpsb mov out (bad) dec mov (bad) shl (bad) adc pop das mull shlb mov dec scas fucomp adc push mov and xchg lret pop add sub sbb aam insb xchg fisub cmp mov std test clc sbb (bad) mov or (bad) sub cmp outsl pushf pop adc jl xchg inc jg pop dec inc push aam mov fcompl daa shll insb jl lret fdivs movb jg jb push xchg pop inc cmpl cmpl loope jnp outsl jg mov imul jnp sub push daa insb pop cld pop cmp pop push add dec sub mov test movsl sbb mov cwtl mov ds aas adc mov stos add cmc and or aas mov in push shrb and add les aad (bad) (bad) repz pop push leave je idivl add sub dec movsl cli and mov int3 jno and inc data16 fadds mov (bad) dec push xchg inc push (bad) push mov jae ficomp push cmp add xor add lods fwait xchg (bad) dec mov dec sahf inc cmpl xor ja dec pop imul aaa outsb out sub sbb test cmp pushf arpl inc cmpsl xchg push test sub fildll or jne clc stos jno (bad) aaa (bad) cmp aas lea shr add lahf xchg mov arpl sub cmp dec sbb sti das (bad) cmp mov sub (bad) lea cmp ljmp add add mov hlt push mov lret mov or xor lret iret std sub dec insb movsb mov jbe test popa je lret dec pop popf fbstp xor pop mov jbe jae iret xorl jge rorl test (bad) dec jns mov jb imul aas ds ss int3 mov lahf dec mov dec add out push mov mov cmp xor outsb inc jecxz scas in stos icebp push push stc xchg pop fldenv movsl imul and or inc push xchg xor and mov sbb cmc pop add ds sbb fnstcw dec xchg xor (bad) jmp arpl cld ds inc je and aaa arpl lcall rcl jnp mov xchg clc call clc push addr16 lahf cmp movsb jo sbb xchg ljmp repnz movsl mov lods es lds add and icebp ret pop pop fadd fisttpl xor mov jl cbtw daa outsb sbb pop in jl scas lahf enter bswap rcrl cmpl movsl daa gs cld addl pop pop mov fistpll insl and mov int3 insb iret imul jo inc stos xchg sbb sti (bad) (bad) cld sti sub leave je gs xor fwait mov mov mov or fsubs popf jbe add les mov (bad) dec push xchg inc icebp sbb inc push ja out gs cmp sbb inc inc movsl mov jg xor sub imul pop or aad dec xchg push out and cmpsb or ljmp aas sub pop pop addr16 std lret inc xor rcrb xchg push loopne insl cmc movb mov lods ret push movsb je jnp into es loop sti pop js (bad) pop jnp test pushf outsb jp insb iret ljmp mov adc jecxz adc ret jl outsb or ja fcmove and pushf je cmpsl push repz mov push jne xor popf (bad) adc das cwtl jecxz inc pop (bad) sahf shll sti in mov (bad) cs ret test xlat jne cmp aaa push cmp jmp dec adc mov jl je mov mov push jg lret xchg incl add cmpsl mov cld pop or icebp inc push or aas push loope cmp cmpsl leave int3 inc ficomp sub xchg jecxz aas adc add jbe or js insb iret ljmp inc aam jo rol mov shll jge mov je lods xor in les cmpsb push jbe lahf outsb push ljmp imul push xlat adc jmp inc and mov fidivl rcll xlat loop out sbb lret push cmp daa sbb nop insb into enter or insl xchg (bad) dec xchg xchg imul or adc add push sub int3 xor cli or in mov pop mov inc insl pop cmp cld dec cmp bound daa or sub out xor jecxz push sub inc pushf mov sub aas lret lret lods out pop call dec dec sub into sbb jp fdivrl mov push mov dec addb add jo xchg push mov test rcll je mov or xchg cs (bad) adc push loope (bad) xor test cmc sbb out push xchg adc and pop mov dec (bad) jae jo fwait xlat mov mov neg mov pop cmpsl mov jmp mov leave arpl shlb xor addr16 (bad) pop xchg fcomp into push pop pop in and dec or mov sbb mov (bad) mov stos mov test and mov jle and (bad) fs dec repnz dec mov shr setle stc fisttpl int3 and popl sti mov (bad) cmp xchg adc dec (bad) in jns call jnp (bad) cmc cwtl or jmp int3 cwtl stc inc popf shrd mov cmp inc xor jbe dec xchg xchg popa je sbb jg sub pop shlb shl or std pop jnp xlat xchg iret mov add xor mov lahf jl adc lret outsb fs lahf dec (bad) mov cmp adc das xlat ss jge sub push cld pushf jno scas push or shr fstpl pop ret cltd lea lds jne lcall mov xlat xor (bad) adc add int3 insb into ljmp mov xchg fwait repz imul mov out cmc popa xor mov jbe cld repz popa sbb add add mov imulb fs inc das lret mov sub sahf roll and mov mov pop mov dec inc pop js lret loopne outsl dec mov mov idivl inc or add add gs xchg add mov imul mov push lock push sub and mov inc xchg and mov test gs in in xor (bad) shrb fldenv data16 (bad) movsl mov imulb sub mov fdivp repz mov xor mov ja or mov aaa fistpll in cli pop sub jle (bad) jbe ljmp mov call fidivrl arpl fwait cmp popa nop jne push sbb push or sub in xchg inc add adc outsl (bad) ljmp sbb lcall xchg fbstp mov mov jb ret mov sbb pop xlat aas ret jge sub pusha outsl push mov aaa in pop mov cmp cs mov pop and les rcl cmp sub fcoml hlt idivb in sbbl mov test cs sbb adc mov sub and in inc loopne push jbe lahf sbb mov int3 movsb adc cmpsb (bad) adc iret sbb popf pop jmp movb add jns stc loop push hlt jle ss pop stos subl sbb ret lock clc outsl mov dec add or les sub inc dec jns fwait stos fcom sub jmp add enter xchg and xchg xchg push or pusha dec cmp push pusha aaa mov mov into ret and inc add mull jecxz pop movsl push push mov fdivrp popf jecxz jbe mov in push (bad) cmp push mov inc inc jo inc ss cmc pop movsb cld mov pop inc mov mov outsl into cli xchg push cmc dec sbb in addr16 cs or inc fs sahf mov pop (bad) mov call xchg xchg jecxz mov shrl add les or outsl lods add push or popl das add scas dec cmpsl imul sbb sahf fnop mov mov sub and mulb or pop jecxz push fmuls dec std stos cmpsb lcall ljmp mov addr16 in mov sbb mov dec sbb stc fcoml stc mov ss inc sub (bad) clc jmp stc cmp ds cmc dec jbe hlt push arpl sub in or push stos pop xchg jle loope inc sub push stos mov cld vcmpgtps xor inc lods testb lea xchg add mov aad arpl rcrl or jne es fdivrl fs out sub repnz cli or ljmp sub nop mov jg movsl jo xor jmp dec xchg fsub xor mov gs scas xchg cmp loop ficomp cltd mov in mov outsb in sbb push iret ljmp in orl push shl in fsts js adc inc cmp add xor scas jmp movsb and push cwtl or xchg repnz shlb sub out mov test idivl rcrb push out shr pop sub hlt or dec xchg sub or cmp cmpl jmp xchg (bad) fisttpl sub cmpsb imul and and cmp sub dec mov inc in (bad) pop mov fwait jle sub add lret cld mov add add add add inc jae repnz data16 fistpll mov push rolb iret addr16 push sub cmpsb mov or iret les dec inc xchg xor (bad) lea dec push pushf xchg jno sar in lods test idiv mov or call cltd add sbb lods maskmovq and push sbb xorb pop xlat lock ffree test sbb movl pusha and aad fiaddl add inc sub (bad) mov in enter enter push and xor daa popf pop data16 js insb insl dec nop out movsb lret mov fmuls inc mov sub movsb push xchg push fldenv jle and aaa mov test cmp out and xchg mov mov mov (bad) mov mov xor xchg mov xor fiadd jmp clc js cmp mov int mov add add addr16 fidivr sbb jae mov mov int3 sub sub jp and cmpsl ss nop dec push std pop scas pop pop push mov test cmpsl mov mov in (bad) and xchg scas xlat xchg dec ss rcrb add sub call sub add lods xor int3 es mov aaa cwtd push sti in pop movsl push push add sbb addl mov mov add mov dec adc ljmp sbb dec repz push std cmp (bad) iret stos inc cmpsb hlt jp and jmp pop push jbe ja shr cwtl or or lea pop iret pop xchg lods aaa xor (bad) fistpll cmpsl das add sahf leave adc (bad) sbb inc xchg gs mov pop (bad) out jo stos test sbb aas lods add push pop aad faddl cld sub push dec shrb sbb sbb in les addr16 add jg adc icebp push inc (bad) aas pop and out repz mov shr pop mov lods mov (bad) loop out in mov (bad) out dec push ljmp push push fisubr mov pop and movsb fidivr fdivl lock xchg sub nop imul jg lahf lds mov arpl in lods gs push jbe sbb or in pop xor (bad) int3 repnz mov ljmp jb inc mov mov add xchg pop sub (bad) push mov mov mov fstpt pop and mov rolb push pop sub inc sub mov and je test xchg outsl arpl push and nop in nop xchg ffree out sbb pop jecxz jp pop in jp lods push (bad) outsb xchg fsubrs xchg jmp adc mov mov (bad) pusha inc ds aas cltd add push inc xchg insb frstor ret and push ljmp (bad) ss ja push adc sub add add int xlat pop dec mov aad daa pop push push xor pop push jmp adcl in iret call ret cmp mov out adc sbb addr16 imul or add mov loop es fs insl or int3 fmull (bad) adc xlat inc mov fdiv loop aaa adc addr16 jle mov iret jno rorl test dec fld1 scas mov std fsub pop jno mov mov and lcall fdivr in mov and dec and cwtl jno aam mov pop out sti ljmp push jge mov (bad) repz push inc xchg lret jmp stos sub pop loope sbb adc xchg fcoms fs sti adc outsl jecxz and andl sarb inc push pop push dec push daa lock les mov pushl inc into cmpsb cs cmp push hlt dec jns (bad) xor lret pop mov shlb aaa je in push (bad) hlt pop lret movsl add sbb push ret xchg push cmp insl lock sub and xchg gs adc add mov stos mov shld mov (bad) movsb xor xchg xor test cmc fnsave das test movsl cld ja inc (bad) or (bad) imul pop mov repz add (bad) clc pop jnp bswap repnz jp or pop mov xorl loope sarb inc push pop cs hlt pmaxub test iret cmp xchg movl lods cmpsb test xchg scas and sarl cvtps2pi out pop insl pop mov push in scas mov sub stos ja pop sbb mov push idivl packssdw xor lods adc pop dec or loop mov add add and movsl xchg xor (bad) jno insb cld cmp dec ljmp and roll jecxz aam les fnstsw shll mov ljmp sti rclb sub mov sbb (bad) stos or loop sub or idivb mov mov sahf roll mov (bad) sub adc push negl dec push mov jns pop clc sbb mov cmpsb test pop das mov adc mov add add jae mov cmp addr16 arpl ss add add xor (bad) xor mov mov pop jne in in icebp rcrb aad xor sti in mov in xlat enter arpl adc jp xlat cmpb inc adc xchg mov fstp (bad) lea mov xor addr16 orb scas adc divb orl sub fcoml add cmp sahf xchg aad mov clc pop test pop (bad) cld pop sbb scas vpunpckhqdq jae shrl cmp aaa jmp loopne jmp pop iret mov push sub arpl sub ss sub stos imul pop ds mov rorl fs cmp mov mov mov clc mov cmp es call xlat imul xchg pop aas adc lret jb mov in aam popa dec pop pushf (bad) ljmp add sub adc stos adc dec nop xchg dec jg push inc jg push inc jo xor mov sarl cmc iret push cltd or fimul test cwtl clc loopne mov pop xchg int3 jecxz sub jb adc std out sahf ss pop lea movsl or add sti jnp sarl jle push (bad) or imul dec push dec push outsl sbb jo push sbb jecxz add ret scas fdiv jne inc adc lock mov gs mov in shll add cwtl push cltd mov xlat mov pop jle cmp sahf cmp scas rorb cld out and inc test imul bound sahf dec loopne pop xchg sbb pop mov cmpsl jnp xor jbe ljmp jne inc mov mov push push jle cmpsb mov jmp cmc fstpt dec cmp mov add add xchg sub or jecxz inc xor mov mov push lret or icebp rcr arpl inc mov dec mov mov in sbb jp fcoml pop mov icebp int and dec add sarl es xlat mov fcomps or data16 popa fwait mov ljmp loope pop in and es dec mov inc sbb jno and fcmovnbe jmp sub add xor (bad) mov mov xor and bnd pop or ljmp inc and jle jo scas (bad) lcall sahf add mov leave fisubr gs mov xchg or dec enter adc add rcrl mov pop jl es push jns (bad) jno xchg arpl fs mov dec mov (bad) xor inc in mov jne pop and cmp popa pop add push dec add cmp cs out test add aaa clc pop fbstp mulb dec mov xchg cwtl push mov mov out add adc pop xlat push pop (bad) jp int3 je pusha bound cmpsl push sti jo push outsl adc dec or jl jns sub mov repz xchg cmc add jmp adc pop or (bad) nop dec pop data16 mov inc inc lcall leave add add sarl mov add jo arpl lea out rorb push mov xchg aas pop sbb (bad) enter jb inc jmp jne ljmp and rorl mov xchg test inc mov sub (bad) mov mov test xchg lcall bound xchg add inc sbb fnsave mov push or stc jg mov mov pop loope pusha pop push outsl adc testb add or xlat pop pop dec loopne and dec and adc push or push lret pop xchg mov sbb jge lret popf imul mov jg jns cmp xchg std popa (bad) and mov adc sub jnp mov mov mov sub adc cmc enter jnp arpl das in xor xchg ficompl cltd das adc lahf cltd and mov dec jb xlat (bad) mov (bad) insb iret popa pushf cmpsb jno test jo pop iret add dec ja sbb lea jbe xchg pop or inc sbb cld pop dec dec fcomi ja push loop push in addr16 stos repz popa jge dec in push cmpsb addr16 xor pop jl jl dec xchg rep sbb or shrl or push mov mov mov or mov pop jl es lods ljmp imul xlat inc fstps les add xorb push fwait inc in lcall push ja jnp,pt dec push pusha pop mov mov movsb pop pop sarl jecxz xchg push adc push pop sub adc cmp push outsb xchg push pop fisubr xor test icebp jmp sbb sub (bad) mov push pop rorl subb pushf jae xor iret fcmovb or pop lcall add gs fmuls sbb out loop pop decl sarl pop xchg sub sub add mov loop jp inc ja adc push pop es cmp push or jne xchg pushl inc iret cmpsl mov mov mov dec and cmpsb leave (bad) pop sbb mov cli sub sub insl adc jp scas lcall sbb cmc icebp lret fistpll lret push pop push ret pop rcll ljmp inc aas ljmp aaa ds jg push cmp mov test mov mov push xor add (bad) call mov and fmull sahf test jns mov lock loope repz cltd mov (bad) jnp jl or rcll xchg in in and xchg insb sbb xchg mov das repz mov test add xor xchg push cmpsb imull mov push test jo cmp bound mov push cmpl xchg bnd dec incl or idiv mov les sbb jbe push mov add jl scas popf enter (bad) mov mov imul sbb fistpll in aas je ret mov xchg test lret mov push mov mov cmpsb lods jo lea push mov int3 lret inc mov dec mov jnp (bad) or jmp repnz movsl fcmove inc dec out xor into (bad) xor jb inc mov sbb in jge inc ja adc push vpaddq mov add add pop stos cmp mov mov bound flds inc in (bad) and mov dec mov mov data16 lahf repz adc dec xchg pop xchg stos rorl pusha je xchg xor push mov sub mov mov sarb into out xlat rcl xchg stos in ficompl shlb fcoms loop inc pop pop idivb push inc or in lods push jge test repz fs dec sub (bad) (bad) repz rcr inc repz xor mov add add test and pop pop je xor or jp mov das arpl xor mov or insl mov xor and xlat and lret mov rcrl aad jl mov cmp cs mov in (bad) sub sub inc ds mov and lea repz pushf ljmp fisttpl xor enter fstp push ljmp dec jecxz xlat orl add add dec pop and stos inc jle shrb mov dec sub or sbb das sub push es int subl sub rcrb mov cmpsl xchg sub inc outsb adc nop pop out dec xor out mov es inc imulb sbbl mov repnz pop inc push mov test inc jno cmp cmp rorl xchg jae pop or or xchg cld add add sti pop in or adc cld lret cli or fiaddl repz dec adc xchg clc sbb dec xor mov scas stos test sti test fisubr and lea sti jmp jl mov jg test jmp ret enter sub test cwtl stc dec inc xchg sub pushf push mov pop inc mov leave je push (bad) or and inc cwtl or (bad) mov xchg sub rolb add (bad) mov cmp jmp in call and push pop mov push adc stos aaa sub leave mov xchg out addl inc incb test xor lret adc test je mov gs (bad) mov mov mov mov dec in xor dec or jle daa jne aam xchg (bad) daa (bad) outsb cld sbb movsb incl int lea or xor pop rcrb and fs push jp (bad) aam xchg es or ja inc (bad) js lret sbb pop pop xor mov cs cli and mul mov fdivs pop inc or mov xor sbb jb inc test into xchg jp loop xor js ss roll pop out xchg mov out test mov (bad) testb popf call or (bad) ja jnp push gs icebp incl cmpsl jl cmp jg mov pop or push sub pop sub dec and nop pop icebp inc cmp testl mov mov mov pop stos es mov xchg test fbstp outsb in iret sbb aas lret cltd shrb int3 test cwtl push dec inc xchg sub jl or xchg lock mov push in mov cmc cld sti mov mov xor pushf call sbb lret cmp pop dec sub or add pop aam sbbb sti pop jge cmp loope pop nop cwtl pop jo popf imul add pop xor (bad) and negb (bad) aas bnd xor sub std out push in subl push xchg aaa add push fmuls inc jecxz jne or xlat pop push or aad sub sti aaa mov jne test push repz or frstor repz imul aam mov inc xchg mov add sahf arpl lcall push xor fnstenv inc pop (bad) lcall pop in mov inc pushf or xor stc ljmp cmp lcall jp mov cmp dec in test ss push stos xchg inc push xor push push pop sub mov adc jae mov je xlat into ss mov nop (bad) dec inc (bad) cwtl push in xlat scas mov pop jge lock add jo iret add mov jbe jecxz and push add aam or mov push ja insb in jbe je inc sub fwait fwait xlat cs sqrtps inc sti mov imul pop lahf jns jbe mov in lods sub daa movsl lahf xor outsl outsl int mov ret jbe sub (bad) mov lret mov jecxz icebp fcmovb adc ret imul jge aaa ss iret adc jnp faddl xchg jae push test (bad) push cwtl in add add dec pop or mov and mov scas jb dec ss inc jl aaa std jle pop out dec xchg jle (bad) push fisttpl dec or adc mov and cmp (bad) enter lcall add pop mov bound enter iret push pop js jnp std iret shr or xor cli loope cmpsb test push pop mov mov mov ficompl mov sub jp and mov repz add mov nop fiadd rcl mov mov jecxz sub xor in jb ror push pop out repnz test inc test test enter jmp pop roll in (bad) stos jns push sub aaa je xor push xor (bad) xchg add add xor fwait mov out mov movsl ljmp sbb lret add adc jl movsl pop divb imulb xor int3 aaa inc cmovg mov test lods jmp (bad) add int stos roll scas ja jmp pop scas imul sbb lds xor xor mov out (bad) aam imul adc loop mov sub lcall ret loop dec (bad) mov mov rorb roll inc pop pushf xchg cmp jmp leave inc push fiadd add add dec sarl add xor sub lcall fcompl xchg lock jb je and out int adc mov movsb dec push jnp sub push and sbb clc fistpl cmpsb jg add mov push adc push ja int lret aad insb ficoml push mov lahf add jbe sub jecxz popa jge (bad) cmpsb repnz sbb bound loop add add inc ficompl inc mov push clc fwait popa movsl xchg bound lds and add xchg movsl add lods cmp ljmp in jge loope test popf inc outsl (bad) (bad) lds pop cmp xlat outsl (bad) fisub adc mov jb std fmuls inc mov out mov pop add push cwtl mov jmp aam fbstp sub xchg popf aas daa cwtl pushf fidivr das add int3 lock ret adc loope in lret aam xor hlt mov sub add cld sti insb addr16 (bad) int3 repnz mov mov mov loope cs (bad) push cmp insl inc adc (bad) cvttsd2si test mov std pop jnp xlat xchg iret mov dec lret xchg inc dec sub sub cmp cmp mov (bad) inc leave stc lcall add jmp clc aas (bad) in jl loop mov mov fucomi jae into push xchg sub mov fistpl lods adc adc imul dec (bad) sub cmp (bad) movb movsl jae inc inc sbb mov pop inc mov xor fstl stc sub int or test cld repz sub mov dec ljmp addr16 subl aas (bad) aaa (bad) icebp pop jae adcl in xchg add ss lds pop iret js sub test push pop mov mov sbb cltd push sbb cmpsl cmp cld fdivs adc aaa sar pmullw pop (bad) ss and cs cmp inc sub je mov outsb imulb sub outsl inc and sub outsb (bad) mov add or xchg mov mov add xor inc sbb sub mov scas cwtl popa mov mov stc dec pushf inc xchg jne and add mov andl xchg loope ja in pusha leave push rcrl sbb dec adc lret xchg inc push movl adc cmpl inc shll out imul (bad) (bad) vminps xor pop inc aam mov lret pushf jno jl adc gs (bad) cs ret sub jecxz jae add into adc xlat rorl movsb dec inc cmp xchg inc sub and mov popf mov cmp rcl dec test mov adc add pop ljmp stc repz fs lret cmpsl push cmc xor push in and (bad) enter pop repnz sbb sub mov lods push sub xchg loop jmp popf (bad) adcl add shrd test or xchg adc iret addl add add push into sbb pop movsb (bad) jae aaa out sub (bad) or (bad) lds pop (bad) repz sub push jno mov jl (bad) xor jns mov cmpsb movsl push in mov dec mov push mov movsl lock sub pop mov ret call icebp jecxz sub push inc inc xchg cmc fisttpl rcr sbb adc leave divl mov xchg outsb daa inc pop dec and adc addr16 (bad) bound add add mov adc das lret loopne inc xor (bad) addr16 adc xlat or repnz je jnp mov jg add movl mov subl (bad) cmp les outsb dec sub push xchg lea leave adc in xor outsl (bad) pop cmp jb je push pop dec push ss dec pusha inc adcl sarl out dec pop outsb addl adc mov aas cltd pushl jnp add test dec mov stos xor jp negl mov int int3 pusha lahf mov test stos jmp add cmp je outsb je movsb cli sti or or lods sub (bad) jne lock shrl lret mov ror dec dec repnz out mov ret fisubrl repz out push dec rcll cli mov (bad) (bad) (bad) rcrb popf add fldcw dec mov pusha sub inc (bad) sub jae or cmp lret sbb mov xchg mov inc push jmp xor int3 cmpxchg8b jno add cmpsb jne popa pop pushf lret push fisttpl mul pop or fsubl mov test lret xor (bad) stc fsubs push adc imul (bad) (bad) xor sub pop scas nop mov pop push jo xor outsb mov push mov (bad) into icebp lret push inc les add add aam xchg adc mov lcall sub jle lret jle adc add maxps sub aam addr16 jns fnstenv push adc push inc sbb mov pop shr mov or sbb cmpsl mov fnop dec loop ret fcoml mov cmc xchg xor sbb pop jle and dec imul cld test xchg fwait lock fdivrp or pop jb stc sub stc pop and add es jae mov push push (bad) repz jecxz mov das or push repnz sub push sub or ds jo adc add in enter sub insb sbb ja mov lcall dec add lret push adc pop add adc flds sarl add pop lds adc cmp idivb repnz leave push mov mov push aad sub jbe inc add add (bad) and loop push adc pop jno xlat aam sti push xor xor test sub dec pusha sub mov sub ret push repz out push movsb push outsb jbe add xlat ljmp cmp in or or imul movsb adc pop jge sahf jns fs cmp iret icebp mov cmp fwait ljmp mov insb out xchg lret lcall add add or into xchg popf jmp scas xlat dec es and jnp xor inc xor dec mov rcrb xor and (bad) and push sbb mov in pop dec inc cmp jo dec jecxz fs mov icebp lods mov jne sti data16 repnz jnp test ret je iret ljmp sti sub pusha iret pop jge orb arpl mov push jl mov sldt add mulb mov xor inc mov nop out (bad) adc xchg stos mov scas mov push cmc imul sbb sub insb sub cmp cmp btl dec mul xor ret cmp aaa dec outsb push sub (bad) fisubr ss (bad) loope add pop test ljmp add dec movsb xchg xchg pushf cmp pop sub add cmc in arpl loopne psrld ja add lods loope lcall jg daa jle lds xor jp cmp inc aam sbb adc and mov mov and in subb cmp fstl rclb cmc xor push dec cltd or fcoml cmovbe out xor ljmp lret repz addl loop xor in fidiv dec lcall xchg or sbb rol outsl dec dec and jne jne or push push mov aas out adc mov xchg inc and ret mov cmpb (bad) push pop pop in xor cmp or and imul push std (bad) es fwait rcrl fildl stos sbb arpl (bad) fistpll loope ret mov mov test lods lret fcomi push inc inc ret hlt pop and out (bad) push jp je arpl mov inc stos iret scas nop ljmp xchg hlt cli mov pop add add sbb adc xor dec (bad) leave roll sbb cmp push xor ret xchg scas inc bound mov mov dec pop add shlb xlat inc sub mov (bad) out rorb movsb dec dec adc fldt pusha push mov popf outsb pop cmp cs int3 push dec gs jecxz das jecxz or ja movsb cmp pop inc shrl dec push dec cltd mov add cli das cli push test jo inc and out fistl pop rcl add sahf fcmove daa pop hlt scas mov call das imul int3 jg pop into setbe and xor add scas (bad) push nop dec pop ja outsl and vpunpcklbw jle add fiaddl pushf inc dec xchg push std or test cmpsb lods mov mov adc out mov adc pop es outsl (bad) lea dec pushf xor add outsl push fcompl xchg lock mov jb les cs mov pop jno sbb push ja add dec mov fsubs je mov in xor insb (bad) into icebp int mov in mov dec std mov mov jmp mov jnp fcmove push mov fs mov push (bad) movsb lahf dec or cwtl cmpl add xor or je pushf addb jl xor add ljmp repnz loopne lcall ret aad mov clc add pusha or or std or pop (bad) inc dec xchg fidivrl lods aam outsl inc mov dec insl in xchg repnz fwait sti iret sub int3 push pop pop subb mov jg pop pusha aaa jecxz mov xor cs popf xor test fwait push fist xlat jbe sti pop jl subb xlat dec push sub or dec in mov call xorl lds orb add add dec push lea mov and imul clc jge aad cwtl xor or or xor hlt ljmp dec or adc divb jp xchg pop cmp sub (bad) repz xor add fadds pop test push rcrl repz std add xchg mov clc pushf insl lcall fucomi xor addr16 hlt sbb or adc aas pop ret lods dec pop pop push dec jle xchg and les xlat rcr les (bad) int3 and cltd fnstenv cmc inc pop and insb cmp and pop ljmp xor jnp stc mov ja mov fisttpl out mov jecxz in lahf int pop nop jl inc sbb outsl jg jne mov sbb xlat add das lods mov jmp push sahf test push (bad) add mov jns sbb loop in mov insl mov in aas mov sub add pop rorl pop aas leave jle imul inc mov test decb (bad) xor sub jp fimull mov addr16 icebp dec aad aaa mov push xchg insl das mov ss test rcrl pop pushf pusha jl (bad) mov stos push cltd and dec jno jnp fwait pop enter jmp pop cmpsb sti mov stc mov dec xchg (bad) and loop or int3 lret (bad) push lods lret pmaddwd push scas sbb add mov or or jne fsts lcall mov aas jmp cmc (bad) sarb imul adc jmp cmpsl cmpsb xchg mov in sbb xchg (bad) insl cmp imul enter jle or sub mov adc and in xlat inc pop andb cld or data16 jg pop mov add cmpsb scas dec pop hlt imul xchg (bad) popa push mov lret cmp sbb push adc scas inc jnp cmp loop lock add sub aad movb test adc cmp ljmp int3 daa sbb sub pushf imul jg mov and fistpl push (bad) xchg cmp and nop sbbb iret jl jne sub cmp psllq decb push rcll ret mov ret push adc add ret test or adc mov xor imul dec cs enter mov mov adc add add outsl hlt mov mov pop rcrb sub ret cmpsl mov push fcoml xor lods mov (bad) pop sarl js xor jg mov imul adc mov mov fbld push int3 cmp sbb test (bad) xor stos sti xor push testl and cmpsl je lahf jbe add mov xor nop mov das mov add inc sbb sbb or rcll adc cmp popa sub adc orl icebp ret (bad) cmp aam xchg test jb sub in dec sbb dec cmc sbb pusha xchg std adc (bad) push sub jmp cld adc push in (bad) leave xchg sbb pop jne jecxz repnz fcompl or jno jmp fistpll popa sarl dec mov mov xlat jp test add add jl adc or mov fwait jns fcmove cmp cld imul jbe mov pushf or mov or xor arpl sbb (bad) xor mov lcall mov aam inc pop jae (bad) jb inc mov out mov xchg pusha pop clc add adc push cmpsb imull scas inc es fist sbb mov outsl jg mov mov mov in dec add fnstenv lock mov jo (bad) int3 ret pop jle cli sub gs outsb popa sub movsb push fildl (bad) into into lods data16 mov bnd jmp or pop jmp fisubr das sub inc aam stc adcl pop cmp in jbe push sub inc sbb mov divl xor jmp jecxz and (bad) mov dec push inc mov pop or es int inc (bad) out scas mov add insl mov jae aad ret xchg push fs adc mov mov fld mov icebp sbb imul bound mov lret jg mov xchg jle and (bad) push pop lret js mov icebp ret sub aaa mov cmp push jne mov jecxz jecxz push scas outsl add pop movsl es mov fwait test pop hlt pop and sub sub fwait xor imul push inc inc in ljmp mov jg test add add and ja ja iret mov in ljmp lods xchg jnp push mov push arpl cmp xchg loop xor sbb roll sbb dec inc mov and add mov movsb mov js adc jmp and and cmpsl or loop xor mov cmpsl adc shrl xchg add call int3 push pusha aaa cmp lock fiadd add lods cmp pop adc lods loope aaa and xchg push repnz test cmp cmp sub adc jb mov add inc (bad) add mov dec mov mov mov mov and lret test inc addr16 (bad) arpl nop cmp pop sarb mov scas dec xor (bad) push pop add pop subl stc xchg das and xor test popf imul pop or flds adc or jecxz leave stos mov sub imul cmp push lahf jecxz dec sahf je mov mov rcll push mov push jb push data16 mov inc mov je out xchg aam pop push fistpl incl jle and pop aaa push push cmp cs pop xorl sub mov mov gs in imul push repnz imul les adc cmpsb addr16 push xlat pop inc add push mov aam dec fdivl adc add int sub push cmp in test (bad) or push and imul fcmove sbb cs ret (bad) mov and xor fldl sub or dec or (bad) lret cmpsl pushf or pop jmp pop ret pop loopne movsb cmpsb test insb aaa mov sbb mov mov jecxz das pusha (bad) sub pop add sub adc movsl mov repnz xlat sbb test add cmp loope shrl daa jo scas pop fs dec or pop lods sbb iret jb mov leave je cs in and ja ja js adc (bad) outsb fdivr xor dec ljmp mov (bad) jl push sahf xchg xchg popa je lret dec lods divb jg adc out rorl or jl std aaa rcrl outsb mov adc fsts (bad) hlt sbb jp ret mov nop sbbb add add xlat cs jnp sub push xchg cmp enter test jmp xchg xchg mov fnop mov mov mov pop movzwl xor inc and popa test cmpsb test mov (bad) pop mov or hlt shll inc cli jbe xor mov cld bnd and sbb xorl or xor xor jb pusha or or adc adc adc add push arpl rcll out in dec rorl pop clc cmp int lods lods pop outsb or iret fmull (bad) and lds sbb les ret hlt inc mov addr16 lock jecxz sub in cld pushf jno jo pop inc daa mov lods pushf outsl sti and and jecxz outsl rcrb push dec scas inc jnp popa pop or insb fistpll mov ret sub and insl and leave in mov movl pop es (bad) jge movsb cld fistpl ljmp mov jmp popa xlat or mov movsb idivb pushf shr int3 ss dec cmp xlat xchg push mov mov jp rcll call test lods fwait xchg mov or or dec jns pop movsl scas add int3 (bad) cmp in pop addb xchg ret and sbb cmp jo data16 stc pop dec push mov cmp outsl push out out pop add push xchg outsb sub out incl cmc add cmpsl cwtl mov loope sub jnp scas jmp jle,pn adc jno inc mov inc ret pop mov cmpsl sub pushf cltd inc hlt dec cmp loopne inc bt std mov cmp inc cmpsl jecxz ss or rcrb imul cmp sarl ret sbb adc jno pop add rorl out lahf test mov add in lret dec or roll setno xchg outsb xchg push mov and and imulb dec clc dec xchg sbb pop ja lret jle push imul xchg js xchg mov add lret mov xlat fistpl adc lods loope aam inc add cmp ds std xlat cmp add sub mov sub inc ror aam cmp lahf mov lea adc loop or add push scas pop xor dec or adc clc js arpl repz cld jl (bad) jne fimul sti cmp fbstp (bad) test xor outsl dec mov mov testl leave dec jns or push sub iret loope mov mov or mov int3 push pop and xor sti inc push aaa gs mov dec (bad) leave mov xlat rcrb movsb add aaa aas adc sub mov push xor std pop enter test data16 lret js inc inc sbb dec fmuls out adc out jl mov and dec mov outsb lahf outsb rorl in (bad) mov test pop ret pop push push jmp jp mov sahf dec inc adcl int3 mov fsubl xor test mov in push inc adcb in push or push push repnz add add add pop test insb mov xchg jle fidivrl add cmpsl std xchg cld pop loop out int3 push pusha mov xor mov movsl daa gs fst pop push mov sarb fistl lcall out test dec icebp ret dec vmovsldup mov fnsave out ret dec std add and sbb aaa ds int jne jbe cwtl loopne or mov int3 movsl adc jge mov add and ret sarl mov in (bad) mov add jp lret xor cmc push clc outsl dec test mov testl arpl jecxz std frstor pop inc mov mov jmp in dec lock cmp lods dec pop into jns push jmp stos xchg fsub and stos mov mov pop xchg lret xor mov or data16 (bad) push int3 cmp adc test xchg inc dec (bad) cmc push mov add dec mov jae sub adc or into xchg sti mov data16 dec test divl sbbl cwtl pop movsl push outsb imul mov cmp sbb dec inc push push (bad) mov pop mov xchg aam fnstsw dec inc ret lret pop inc rorl cmp movsl inc dec hlt fprem1 mov mov mov divb sub push adc xchg add adc dec out sbb lahf enter aad test test jnp xor add insb iret add mov mov add out mov lock pop adc dec inc lcall dec jae,pt cmpsl hlt jno pop pop lods cmpsl pusha pop xchg cmc push call cmpsb xor loope clc lea icebp ds cmp jnp inc popa adc mov rcrb lea add add dec dec (bad) cwtl jp mov test jae aas mov ss pop xchg or inc xchg cmpsb leave cmp adc mov xchg inc xor in jbe lahf int3 push dec xchg dec dec pop rcrl fmuls cmp icebp lret pop sarb cmp xor rcr les pop xchg daa fadd cltd sub lods es popa cmp cltd fwait xchg sbb mov popa xlat pop imulb fildl add xchg push dec push fucomi outsl into sub cmc and cli aad dec xchg cmpsb test repnz sbb push push and and (bad) imul leave sahf ret xor inc ja stos sub mov and push inc sbb adcl sbb cmp scas jo cmpsb lock jmp scas sbb flds add out inc repz mov fsubrp pop enter xor dec ss dec adc cmp pop ffree mov fdivr mov mov lods add mov add mov movsb jne mov xchg cs mov sbb lahf cmp add dec subl adc pop push leave mov lds jmp jg push test mov or and insb idivl xor xor std jge pushf (bad) adc jg xchg sarl mov push mov lahf pop adc inc das pop sbb xchg or mov ljmp dec ret add movsl mov sbb in (bad) lods jmp (bad) jae mov scas loopne mov in dec cmc add dec jno fnstsw dec and cld dec jecxz addr16 pusha pop push xor fwait pop cmp cs fbstp dec xlat (bad) xor es aas lret and push aad xor insb jmp push ret jmp push pop add test js xor fdivrl movsb xchg lea je adc adc push add ret cld mov add add inc (bad) xchg lods inc sub data16 cmc dec cltd ret add sahf or jns mov mov or lret ret test cmp and lds enter adc imull into sbb es fist sbb mov nop addb cwtl push in mov mov xchg jns dec or leave xlat adc dec add inc ret pop shll add imul pop add pop daa movsb sarb in push add sub into sub iret ljmp jmp enter mov (bad) lret push and jb jg fimull xor inc xor in jmp cmc mov sbb cwtl dec mov dec jp cmpl jb sbb pop lret (bad) mov and rorl cmpsl sub xchg jle icebp imul pop popa scas test or ss aaa clc sub lds pop iret js sub int (bad) jae leave push inc je cmc inc outsl add add enter lock pop jg mov mov jmp cld xchg sar inc cmp aaa mov jne insb hlt (bad) mov inc fsubr stos stos xchg sub or gs and cltd mov and test lahf mov cmp adc imull in call push scas outsb aaa pop dec or or sbb pop xor repnz je cmpsl lahf inc adc call xor jle inc and dec ljmp lods sbb add movsb inc test sub or leave roll sbb xchg dec or (bad) lret mov call lahf cmc jmp mov mov mov rorb dec (bad) push xchg mov repz sbb in (bad) cs dec push xor aaa mov dec fcmove ret pop jl popa movsb fistp push fwait psrld and nop mov jmp cli push and dec and cmp and sub add add (bad) dec inc or dec mov inc insl scas (bad) jecxz data16 or (bad) or sub mov mov jnp (bad) xor sti mov push ds push xchg adc leave adc push int sub dec jle (bad) inc and nop dec (bad) cwtl inc bound mov mov iret cmp fistpll pop lds jb sub ds mov xor out cmp jp addr16 or pop mov add add xchg enter mov hlt movb mov in pop movsl cmc mov in ja into jns cltd mov xor and int3 insb iret mov cmp gs inc jnp cwtl add sbbb flds push and mov in pop ja loope pop jle push mov clc push (bad) or sub negl das sub sahf rcll sbb xchg pop sub cltd push xchg lahf cmp mov js add mov (bad) (bad) xchg mov mov and jns (bad) out (bad) or add inc dec push outsl mov loopne enter jp sub adc sub cld fdiv push mov negl mov gs mov lds xchg lds aas aas pop into dec or frstor test dec testb sbb data16 inc aad jbe lret das sub neg leave je cmp add add lahf jno ljmp and notb and dec ja sub or mov lahf ss adc lea inc xchg xchg punpckhwd scas in push push (bad) insl mull stc mov mov xchg and gs push xchg xchg cmp mov out rcrb mov dec adc aam cmc icebp lret adc mov ljmp ds cld mov sub mov fistpll push fistl hlt into inc mov das jmp or dec inc push jp in jo jp pop (bad) inc inc sbb popa (bad) push stos and lret mov dec movsb cmpsl dec sti mov sbb mov dec push pusha push andl adc das lret fnstenv xchg sti jle loop xor ror pop push lcall ret add xor xor push cmp jns add and lds or xlat int3 std cmp ficom enter xchg pop aas adc sub fst das jp in lcall fnstsw mov loopne aaa rolb cwtl pusha dec scas sbb incl mov push ja insb in jge mov data16 fwait ljmp stc inc test out out mov std push (bad) pop jp dec mov jno xlat jmp dec inc adc ja sbb inc notb mov adc add jnp xchg fwait movsb push repnz (bad) mov test sbb mov mov xor or cmp inc push (bad) or fstl push sahf dec cmc adc loopne push push xchg std mov out xlat ret int insb jg bound loop pop xlat lds stc cltd xor rorl nop xchg pop cmp out xor cmp sub jecxz xlat rcrl and movsb lods fstpt xchg mov or xor or dec add add (bad) ljmp mov inc inc sbb inc fisttpl sarb les cmpsb divb jb sti daa push jbe mov push loop or aad push add arpl xchg sbb inc out cld xchg xchg faddl xchg push scas push out jge pop ss pop add in sbb dec add pop jne pop push cwtl push (bad) jne pop test push imul mov add test pop jns leave nop hlt inc xor lret sbb add sbb sbb xchg add mov loopne mov mov push mov cmp sub outsl es xlat pop push addb int cmpsl pop aas adc jnp aaa in and test int3 out out inc mov mov inc sti mov jnp and jg lahf sub adc mov arpl ja jg nop ljmp xor fistpll aam iret out dec xlat fcoml jge out decb jbe inc push lcall add sub adc xchg dec (bad) xor fnop outsl dec push js jne xchg pop or lcall repnz stos adc bound mov gs pop cmp ret or cmp pop sub mov pop mov xor xchg dec ss rorb inc mov fldt data16 rcrl fcoms aas adc xor mov pop xor std pop sbb mov insb iret jmp mov mov stos mov dec ja fsubrs roll xchg sub in and dec sahf mov push or in or sub adc (bad) push xor xchg sti mov loop mov rcrl repnz jnp xorb add mov pop aad movl outsb push cs mov dec mov ret jne xor sbb (bad) push call (bad) fcoms popa mov repnz mov data16 js or lcall push pushf pusha inc jbe xlat xchg sti push in inc (bad) fcmovu fwait test dec icebp inc or sbb jp outsb in sub push int cltd sub push lds jg ficompl ljmp and repnz in adc pusha push mov jns push insb sbb jge jmp scas (bad) jg rclb rolb jle (bad) int3 call dec inc orb lods (bad) xchg push and loop jmp scas test mov mov add das aaa fs ret pop rorb sub ret pop dec jmp in pushf jbe jb push jp repnz sub ret pop jno (bad) aaa data16 sbb repz mov cwtl imul jne pop push fnstsw (bad) xchg pop push mov scas (bad) ficom cmpsb add insb dec adc aaa mov lds fsubs sbb dec inc sbb repz inc add cwtl or mov xor popf (bad) adc add inc inc lret fnstenv fistl xchg sti mov lahf pop sub int3 mov ret test dec (bad) leave fnsave add fadds add outsb cmc fidiv ja xchg arpl into inc mov lea mov adc or xchg aas xchg or add adc popa cmp mov hlt imul adc int aas pop aas icebp pop imul movsl mov sub and insb iret imul and adc jnp or dec sub je aaa imul xor fstl add sbb ja in xchg mov (bad) or sub jge pushf (bad) adc add out lret mov xchg mov xchg inc repz xchg loop lret inc pop sbb sub lcall ret test pop jne dec pushl inc scas aaa mov into hlt sub jo xchg push mov add ds outsl repnz mov pop mov sbb test addr16 mov mov into out daa out xor (bad) clc pop push pop pop mov push call dec pop mov lea pop inc cmp in (bad) adc mov movsb test nop addl mov int iret jge das sbb jle aaa jno push repnz dec std mov iret loopne adc in jg ror jge icebp (bad) pop std jae xchg dec les dec xor in ret out push xchg adc pop adc mov pusha push (bad) leave mov stos pop add js sub xchg aad cmpsb sub and mov or inc inc mov xlat adc push xor xlat outsl cmp repz jl loop xor adc sub add xchg xor nop jne cmp jns out scas pop movsl cltd and (bad) sub insb in xchg xor cmc leave jp sub add movsl scas lea lret pop popa icebp fisttpl call xchg xor hlt test jp daa (bad) js loopne mov pop add and subl loop pusha call jle jg xchg jp sbb xor adc sub jb,pn cmp xlat int3 jo (bad) pop fwait outsl add xchg popf sahf jmp inc call aad lret dec lahf add or jae mov push fdivr cmp cmp add aaa push cmp add push mov pop out ret pop pop inc in in push sbb sub fsubl pop push mov jbe and mov sub sub shrl pop pop pop push pop lock jo ret push pop dec lock sub mov leave sbb fstl cmpsl push jbe scas fsts test inc mov mov inc mov mulb (bad) rclb mov xchg xlat (bad) arpl out add out outsb add add scas test stc sbb xor test shlb sbb outsl pop and jns (bad) out rcrb out out add dec dec outsl mov popf jle aad repz dec das (bad) push sub loopne or push pusha aaa loop push fist mov or movsb push fildl int add xchg sub test push outsl and ret test cmp mov mov bound dec fimull sbb add add arpl cltd sub lcall sbb add xorb inc inc or pushf (bad) inc fidivrl aam arpl jecxz mov cs rcll dec outsl repz push aam or add xchg rorb jle and (bad) push mov pop imul in in cmp xor add negb cbtw pop sub rclb lcall push cld inc adc cmpsb push outsl insb call jbe add pusha test dec sub adc notl out mov pop push mov scas xchg aas and and or pusha iret pop xor hlt das mov in (bad) pop jp inc push mov les sbb jmp mov dec inc gs dec mov ljmp xor daa mov adc loope fsubr adc sub lcall rcl dec mov movw fcoms in add add test and test push outsb jge dec into push mov jae or ret fbstp xchg pop dec jecxz clc adc fbstp pop cmp cld mov add mov mov js fstpt and (bad) je pushf push out adcb div mov push pop cmp lret pop sbb out loope sub aad das or notl adc ret xchg out cmc cli jecxz mov or mov add (bad) ja pop orb adc test pop dec push cmp xchg loop jp adc imul daa lret sub call dec push xor sub stos aas (bad) hlt cs jbe fnstcw dec push sub add mov xor cmp ljmp pop and push push sbb negb rcll aaa mov push pop fsts mov popa fs lcall into es sub or xlat cmp add inc adc dec test mov data16 test sub in fwait (bad) insl sbb jae ficompl mov add outsb (bad) mov jl push or add arpl imul scas jl rcll push inc dec inc push leave pusha cmpsl cmpsb xchg push xchg inc (bad) inc and insl movl bound push cmp cmp fs sub lret mov in sub add stc gs repz cs sub jbe sbb pop xchg data16 mov pop or sub in loop xlat loop push jbe jp add sub test jp sub xor test jae inc adc adc mov mov imul fimull ja mulb dec test test jmp pop inc mov sub mov and popa ds (bad) add dec movl adcl fcmove inc mov hlt rcrl add mov movsb lret or mov (bad) jae mov xchg shrl jbe lret ljmp in mov lret js mov icebp lret pop nop mov xor mov rcrb loop push push inc int jg aas sbb jecxz int xor imulb aas xchg xor push pop xor in cmp sub cmpsl mov push or jnp (bad) repz ret sub arpl and mov cli jmp pop loope cli scas xor pop imulb xor inc je rcll xchg loop jns mov ss mov ret test popf xor pop xchg imul (bad) sub cmp mov and dec fstp fisttpll inc sbb sub dec arpl or (bad) and (bad) cld dec in ss push pop push addb pop mov mov add xor jle cmp cs add adcl or stc or pop scas jle sarb and test and sub ljmp xor in mov mov mov in (bad) lea jp pushf pushf in popa stos mov scas or mov mov pop push in aam bnd mov sbb call sahf lahf cwtl jb and or imul sbb lret jo pop add test dec fdivl inc bound fistp repnz (bad) adc test ss mov nop das scas mov lock push pop mov add jno imul fistpll mov jne test out lret mov imul pushf clc es aas lret in jb lcall fcmovnbe dec mov adc dec xor into mov ret (bad) in out rorl out repnz xor or fisttp add add aad arpl dec mov xor adc shlb setle nop push xchg outsl cmp sub pusha leave jge jb movsl pop sbb hlt addr16 lcall mov (bad) loope mov mov mov rorb dec ret (bad) adc pusha insl jg mov lock out repz cmpsb aad (bad) pushf inc in fdivp fwait adc icebp inc fldcw pop enter adc sub sahf fstps subl int frstor jmp (bad) int lea xlat dec xor adc ret xor mov ja push sarl (bad) repz (bad) fmul je mov std xor and cld push js or dec outsl int mov mov lahf jnp mov pop dec dec push xchg sub in insb popa je adc nop mov rcrb dec dec dec push jl lret sarl cmp aaa jmp dec call xor sub rorb or mov arpl mov jecxz adc (bad) cwtl (bad) repz mov sub add (bad) cld arpl dec or jae lahf enter psllw stos sahf cld mov imul ja into imul je mov mov in xlat sarb dec ds test clc sub stc adc sub aam jge jo (bad) jmp mov mov les add dec pop gs add (bad) cmp cwtl popa daa les (bad) dec sahf push push ja loop mov sub lcall mov test jno pop jne sbb aaa inc int3 jp movsl pop imul mov dec push sub addl xchg into push mov scas push and ss lods sbb lret xor fstp mov jbe jno mov or inc fistp fdivrp (bad) aam (bad) mov add adc addr16 insb add add jmp es mov push addr16 xor rcrl lcall test (bad) cmc ja sbb and jo push or pusha in (bad) bound into jl rcrl dec sub test cwtl add cwtl and or adcb das inc mov popf popf in push cmpl inc leave mov aaa pop pop std movsl pop xor sbb loop fisub sub pop mov fs add xchg adc jmp js test aaa mov mov mov outsb popf and fwait or aad sub pop mov ficompl lcall sub add mov cmp inc stc inc mov in jnp fmuls insb pop or or imul xor (bad) stos cmpb cmc ja fldl adc addr16 (bad) xor and movsl fnstenv dec push adc arpl les jb xor aad push testb aad add add rcrb jmp (bad) mov or adc sar sbbl mov inc leave mov dec leave or lret dec outsl jg fs add jge jns jbe popf push fmuls sti cmp std lret pop push cmc xor lods addl pop push mov fdivrp xchg mov and inc push outsb in and xor adc sbb arpl or iret les int lds fldl add jmpw xor push jle pop xchg or dec rorl push fnstenv add lods hlt pop iret jmp clc cmp arpl lret mov push ret insl adc push adc jne sub xor xor inc cli leave into mov jmp inc icebp or aam mov stos sub and (bad) loopne or dec iret or popf cmp push dec mov les jae in sub mov pop mov push ffreep xor add push add (bad) sbb pop test daa loop pop cwtl fwait adc inc cmpsb stos and mov (bad) iret push jnp mov cld lret inc (bad) push lcall int flds loope lea fstl pushf arpl adc (bad) mov je rolb cmc call mov jmp sub sub xchg loop repz inc leave ficom lcall sub mov es popf je jno arpl inc adc mov addr16 and push fisubr int3 mulb cmc cli inc sub pop xlat push dec icebp sub add pop dec js cld negl xchg icebp inc fldcw xor mov outsb inc mov mov push ljmp (bad) mov int3 fs movsb andb dec mov cwtl addr16 sahf js test and jmp dec ja mov pop inc clc mulb enter cmp es sbb dec and test inc add ror mov inc push jne shll fisub sarb xchg loop jecxz out cmp xchg leave sbb das pop imul jnp mov rorb roll pop pop pushf mov xchg daa into negb lea dec cwtl xor xlat outsl or sbb xchg lock add mov add cmp hlt mov popa dec lret in or inc int je aas adc add imul jl (bad) adc cltd cmp gs and inc hlt inc inc inc xchg and or adc (bad) lea lahf aad pop mov xor mov daa push stos xchg jne or cmp fwait sbb jns (bad) nop fldenv inc mov int adc ljmp leave mov cs or rcl shl push and pop jae and mov in pusha cltd les lods pop lret add popl xlat in xlat inc cmp add add cmp push lahf cmp jnp das inc stos pop cmp mov xor icebp inc push pusha in loop xor ljmp loop rclb add pop scas loope (bad) jb loope jmp dec notl mov aam arpl adc mov jnp nop mov and (bad) xor and xor je xchg cmpsl and mov add jb roll in mov into jge mov push add jmp addr16 sbb lret ret test mov out xchg dec je (bad) pop jae fnstsw pushf pop inc jge jl add mov mov scas and add jle push addb pop sbb repnz out call (bad) cmpsb inc sbb negl push rcrl (bad) in dec and ja push (bad) rcrl fldl and cmp mov (bad) (bad) popa xchg push clc xlat dec mov sbb leave sub add push inc mov into lods sub (bad) inc nop xchg jge in pop and je js dec std mov xchg mov or inc xchg divps in mov xlat lret mov scas add push adc push pusha leave les (bad) add and cmp std xchg andb stos mov movl ficompl inc pop iret sub adc in jecxz (bad) add dec pop outsl repnz imul and cmp cld add xchg loopne mov mov push iret leave mov aaa (bad) cmp add dec cmpsl jo lret xchg mov mov sub xchg push mov cmp push jne jp cld mov push inc sti add aaa cltd leave mov fisttpl add (bad) imul lods mov repz leave pop pop lcall xor or cmpsb sbb clc loopne mov jge pop dec inc jl lds xchg xchg mov ljmp pop clc sub test add add add test ss (bad) jne cmp aaa ljmp flds adc or jecxz icebp mov ret arpl xchg dec fstpl xor and or outsb jb ljmp xchg sbb in js stos jmp push jns cmpsl add mov scas lea icebp jne ja xlat dec (bad) in push sbb inc daa aad shlb lcall bound sub hlt pusha mov cmp jg enter inc cmp add cmp push ss ja aad sbb mov outsl lret repnz jp (bad) jmp clc and call scas lds (bad) mov in les jge rcrl xchg sbb xor mov sahf inc cmp xorl fistp add repnz jecxz mull stc lret pop mov inc mov xorb push ret or sub sub imul fwait inc cmp in sahf lds cmp and push sahf sub jecxz add add dec jnp lods mov imul xchg fidiv jnp push flds int iret imul cs sub jo lret pop imul sub roll cld das lds mov inc cmpsl push std loop clc js xlat or fnsave sub mov cmp rcrl movl add xchg (bad) xlat pop arpl dec adc add cmp xchg add add (bad) into jbe outsb mov cmp in adc cmp mov fsubs in mov ret lods xchg xor roll xor xor (bad) (bad) jo push jae insl inc (bad) pop lea jmp pop xchg mov out mov push mov stc (bad) sarb push es and mov dec jo adc cld int (bad) notl je jbe call lods push jbe and mov lock aas push out or add add pop or push mov cltd jecxz sub sahf rcrl push push arpl pop iret sbb call jp cmpsl stos cli pop clc ljmp push or popa inc dec jno push xchg repz cld sub xor cmc in test (bad) or sub sub cmp mov icebp adc test std fadds ds hlt (bad) push (bad) mov ljmp sar popa rcrb incl xchg fist mov enter pop xor aad incb je or pop xchg mov pop lret cmp enter mov loop mov mov adc sbb test pushf or xchg mov scas das lcall repz enter inc pop push sbb jecxz cmc das pop lahf fldl dec mov dec inc popl das inc cmp push dec xchg mov addr16 mov inc push popf (bad) adc add aas stos (bad) not cmpsb push sbb push ffree lods jo mov cmp cs nop aas frstor cli loopne sub es cwtl fwait sti (bad) xlat xor daa mov in xlat sarb inc scas into mov fisttpl (bad) push pop adc add in iret pop dec cld sti mov repz leave mov jmp arpl les fnstenv mov sahf inc iret dec jle mov stc cs rcll pop popa je add add add adc nop scas in pop pop pop mov insb lcall mov cmp iret lahf imul xor fsubrl arpl xchg mov sarb jno mov aam imul jb lods outsl mov cld fmuls in or adc fistp adc sbb cmp cmp dec mov shlb adc jp push mov scas add inc shrl or add sub add jo loopne je mov test cmpsb popf or push cmc or adc cltd or pop (bad) repz sub jl adc lret das dec dec xchg mov adc out mov push adc nop or and std dec jg test pop test sub ss hlt mov rcr fmull mov dec ror repnz xchg outsb mov lret mov sub push push ret lods xchg loopne mov dec add add pop dec and jno insb loope fisub imul xchg cmpsl movsb es mov mov lea xchg insb in ret inc and pop push jmp sub xchg les sub add sbb test aas jle xor xchg cmp jecxz mov pop mov stc mov sbb aaa out mov daa stos mov push loopne jae or enter inc pop mov mov pop inc pop (bad) xor push loopne adc push sbb mov outsb push jb outsb mov sbb sub mov imul mov loope mov adc xchg sbb stos stos jae aas mov icebp arpl lret sbb test xorb fstpl mov jnp mov arpl movsl fbld mov dec cltd fs (bad) jae test inc sub arpl add lds sar add je xor adc and add add sbb (bad) or and inc jne (bad) cld outsb call scas (bad) jl xchg sahf adc dec inc std adc ss jb mov out mov push jae aad cmp xor bound mov inc sbbl fnstenv sarb je adc in jae and movsl stc cmp test scas inc stc sub xor movsl hlt loopne sbb cmp scas movsl adc fidivrl movsb pop xor sahf mov mov sub je inc push ja xchg mov icebp push ss aad hlt xlat enter adc sub mov lds cmpsb push mov mov ja,pt mov mov pusha sbb nop arpl add mov pop lret cmpsl xor nop and jecxz fs xor cwtl rcrb push xchg ficomp inc pop mov lret inc jle cmpsb ja jecxz loopne jl add mov mov sarl and or add add insl inc (bad) (bad) jb sbb inc fs fwait in xchg jmp (bad) fiadd (bad) mov das les mov cltd aaa das std and aad push adc in xchg ds and dec cltd xchg rcrb icebp jmp sub orb dec ja dec pop daa mov and and prefetchwt1 iret mov outsl dec pop xor (bad) or or fnstcw push jp std insb add test lds (bad) cli aad adc dec inc push adc cmp dec sub mov jmp out js pop (bad) test cvtpi2ps adc add fninit in inc mov int3 jmp xorb cmp push sti shll popa cltd push pop les xor adc mov dec ds je stos aas xchg sub or mov movsb sarb (bad) xor xor pop (bad) int iret mov add push pop inc sub and mov jnp test repz push stc icebp jbe xor cli daa sbb sbb mov fcoml aam dec pop mov xor xor dec push dec cmp sahf sbb dec inc (bad) clc inc push sub adc jb,pn cmp xlat pop (bad) mov ljmp or pushf mov lods outsb push sub adc sti sub outsl cld or mov inc mov in add inc imul jl mov je lods xor push cmp movsl or out scas scas gs sbb push fstl push imul cltd in ret cld and add mov dec cwtl pop mov inc and je nop xor or cmc mov push add mov xor mov cs lcall test xor cmp fstps es inc mov and inc (bad) jnp fdivrl test add cwtl mov ficoml xchg mov or movsb test inc out push xor sbb ljmp aas hlt lea push pop cmp outsb add fidivr or pusha je es mov mov mov push loopne sahf xchg in push push subl pop lods or enter mov cmc (bad) fiaddl cmc (bad) xchg xor jb cmp int lods sbb rolb dec dec loop (bad) jbe imul add fs and or loop xchg adc imul or imul cld xchg mov lds fdivr cmp (bad) pushf clc in cmp push sub icebp gs in aas sub add mov test lods test enter ret sbb scas fldl ss mov (bad) cmc dec push clc xchg aas push adc inc iret fucomip jle sbb jbe xchg mov push test mov scas in push push xchg out ficompl and mov inc pop and cmp mov popf fsubs arpl and stos mov stc int mov ffreep adc aas mov push add jbe test std mov and lret cmpsl imul push xlat pop inc pop xchg clc and mov (bad) not fsts mov fidivl es notb inc insl sbb test ret int3 jle mov add add xorl or stos and dec cld cmp xor add dec jmp clc dec loop or jbe pop dec inc pop les xor mov (bad) lds add pop (bad) cmc je out adc pop cmp lock pop push int lcall jecxz (bad) out test lds fimul cld movsl xchg pop xchg ss pop xor push jo or ja xchg mov testb add mov lods arpl pop xchg xor arpl inc and int3 dec push imul loopne fsubr ja ja mov test push std pop jnp fistl ds cmp mov adc sbb js (bad) and test rorl inc sbb addr16 icebp data16 jb int3 push mov je sub mov and sti popl dec sub jp mov and arpl add orl sub movsb movsl pop cmp dec mul fnstcw add add pop cmpsl mov lahf push push jl and test int xchg out loop sbb xor xlat repz (bad) divl mov loope repnz shlb jle and ret lock jl sbbl cs jecxz mov jl ds push out xor out pop push push pop dec mov mov jae aad jg or call push adc loope xor dec cmc mov mulb add add push (bad) dec mov outsl into add jae imul inc fldcw pop gs movsl inc mov das mov cmp jge add and (bad) std cmp inc loope cld rolb inc mov and test (bad) jg or mov jo (bad) jb cld push (bad) dec jb insb push add xor mov cld adc addr16 mov aas lahf xlat pop ja lea bound js add add add adc out loopne cmc ret fwait bound dec xchg pushf push dec and mov stos in push cwtl ljmp flds scas and mov sbb ror (bad) cmp dec jnp pushf cmp in nop jge push rcrb sub ret pop dec xchg sbb mov ds cmp mov jbe lods cmpsb jns pop push or inc je inc mov jbe out cmp fldenv aam iret in dec xor hlt arpl mov add add (bad) mov cmp hlt rcl cwtl es into inc sbb das leave mov sub repz (bad) mov addr16 out mov cmp or out mov pop xor insb rcrl stos loopne adc xor fist out (bad) dec dec xchg mov pop addr16 sbb fsub ret jl add mov scas add adc push adc add ret das inc je lds out inc in fucomp (bad) or les cli jne lods lahf enter or aas lods test jbe fcompl in in mov xor xor clc imul leave fsubl sbb dec outsb xor sub and pop stc mov or mov and mov mov jnp cmp loopne or lahf outsb loop dec adc or xlat iret mov dec jnp int jmp inc add test lcall add xchg js pop mov ds add lahf je push mov pop int3 xchg pop dec stc adc push popa mov xor in mov in movsl dec push mov xchg sub ss xchg pop mov aas push cld pushf mov jb pop jecxz mov xchg mov loope push out push sti loop pop push adc insb xor jb adc lea cld call dec mov enter xchg fdivrs idiv xor adc sub nop mov scas xchg push scas outsl sbb pop xor mov add mov pushf cmpl cmpsb lock test arpl dec mov sub sbb int3 mov mov jge sub xchg adc xor jb sbb pop jnp mov or cmpsb cmpl push dec sub in jecxz rcr (bad) pop adc cld or mov add (bad) daa popf push lods and les mov lret daa je add fiadd daa mov and lea jecxz jbe mov add clc mov fidivr popf add or xor es aas or int3 out leave call scas cmpsl loop adc jecxz subl popf lock cmpsl (bad) into xor iret lds sbb hlt outsb xchg mov or mov enter pop test loop mov jb cmp rclb jg lahf ss sbb fsubl loope sahf pushf fimull out push jmp add mov addl mov push inc iret test add or fisttp (bad) mov out xor dec jae jo adc add cld pop ss ret xchg insb mov incb jae add pop in in enter fstpl jae outsl adc divl (bad) call sbb adc popf xchg out mov loop test dec dec mov jg mov aas fisub pop cmp hlt dec xor outsl addr16 ljmp scas xchg pop in loope lret jno cmp fldl add dec xchg pop cmp dec lods mov adc idivb repz arpl or cmp in inc inc xchg push push jbe movsl lods sti stos mov rorb mov push or in add insl dec and mov ss js cmc xor xchg jl add nop lahf add cli cld sub xchg mov sbb mov jecxz jae into push cmp push xchg loope movsl pop cmp aam in cmp push bound cs add mov push push das mov sub daa sbb push scas imul pop jb faddl push and andl test bound mov out pop push sub in mov dec inc cmp mov rorl dec inc (bad) sbb int jns lret dec and cmp inc sbb mov ds mov pushf inc cmpl or sub or test pop daa sbb xor or add add add inc and iret fwait xchg mov jle lret pop jo iret jmp sub inc les orl push mov xorl daa (bad) rolb inc scas add mov in mov adc mov jp (bad) push hlt jge push (bad) xor mov and repnz cmp sbb std cli gs call inc xor lret dec mov add (bad) dec enter jecxz sub inc add sbb insb pop aad stc xchg xchg call out insb xchg push mov adc cmp pop xchg jmp jnp push cmpsb imul add inc ja into mov sbb in adc sub insb dec lods imull xor cmp or cmp jno add cmpsb sbb sbb pop lcall aam in cmp data16 push call ret nop mov cmp gs push int3 or add fisub int3 sbb fwait pushf jg xor sbb jo sub sbb (bad) sbb not jns mov test inc mov jmp push lahf xchg inc jg mov mov and add sahf inc mov sub in mov aam sub int3 mov xchg dec and fmulp add sub les lret and outsl mov lret mov xor dec dec outsl sahf test addb mov pop cmp out inc fldln2 lret push je imul mov add cmp test cmp outsb inc pop push cmp mov push sub mov pop in xor add pop test push scas ja jmp mov icebp sahf imul and mov (bad) jle ja mov fs sub jecxz bound push lahf sbb fisttpll (bad) ljmp aas xchg mov xchg xchg (bad) popf inc add iret mov lods mov leave mov jl rolb and adc pop mov push cli pop stos add stos or ds ja mov pusha aaa xor fdivr pop push popf mov xor cmp jmp arpl mov sub lret sbb mov xchg xor ret sub mov jns fsubl mov insb sbb fiaddl pop cmp or icebp or daa and add add leave loopne mov sarb sub cld sbb mov xchg mov jecxz mov sbb pop and out mov aad pop sub adc orl jbe pop xor inc fldl faddl test mov and jno mov ret loop sti xchg pop fcomip mov pop fsubrs jne mov lods mov lret pop adc add aaa aas repz mov aaa xor and xchg or bsr cmpsb rcll in std sub sti mov js pusha bound adc sub adc jb inc push push enter in pop jnp lahf pushf sbb (bad) arpl fldcw mov mov (bad) rol jnp mov js xchg jp addr16 push cmp inc xchg (bad) jae jle fsubrl sbb cmc cmpb addl scas dec lahf outsl xchg arpl push popa sbb addr16 into jb and sbb pop js adc inc adc dec jbe push (bad) pop xor sub loope cmp pop mov rorl lea or shlb jb decb (bad) (bad) ja movsb scas push jp mov int3 test and push lods outsb pop xor outsl jmp repz jg movb pop sub test int and xor dec adc (bad) jp movsb (bad) add xchg xor in movl add (bad) (bad) push sahf nop sahf rorb pusha mov (bad) adc and push dec cmp lahf lods add inc pop aad test pop lock mov adc stc xchg insl orl adc sbb adc xchg xchg mov (bad) cs jg icebp cmc test aas fisubrl mov in jno add movsb adcl popa adc movsl adc xor push cmp fisubr (bad) xlat les lods xor push (bad) leave enter bound mov pop pop dec mov pop pop xor divb rcrl (bad) cwtl in sbb out les xor (bad) jl test sbb push cmp aad iret roll test insb out (bad) aad aas xchg ljmp add pop addb cwtl jae mov aas pop std sub mov ja outsl or jnp aaa dec mov add jecxz les jl lret add stc push fidivrl mov es leave mov and push call movsl cltd aaa movb cmp mov dec sub or jns xchg and out imul dec xor sub roll scas ja push jp mov dec lahf repnz (bad) mov (bad) or mov jl loop fcompl dec add cmp sahf out adc push dec inc push lahf pop sub pop mov add ret test jnp std xor loop cmp inc (bad) les push pop cli fildll sub sub in dec movsl inc icebp (bad) jae out inc je jns nop subb cmp pop (bad) xchg fnsave loope jp xchg icebp es or daa bound dec movsb in sahf loop xlat rcl jge cwtl pop fs and mov mov js sub out sub jne pushf mov push dec (bad) mov xor aam scas icebp jg jecxz push mov and in scas nop shl sub push cmc mov daa sbb sbb and mov movb sbb jle mov lods outsb scas cmp lcall or jmp add mov mov pop inc addl repnz mov int outsb jg mov pop sarl dec adc outsb sub add mov into push mov icebp out add add push incl mov xor mov fmul jnp int3 insb inc movsb push mov jecxz lock cli into or mov mov addb xchg pop xor xor loope sub mov cwtl bound andl add lock cmpsb (bad) (bad) push sahf nop inc sar fidivrl in fs mov js hlt addr16 cmp and (bad) imul push mov add in dec mov and ss sbb cmp (bad) dec test pop cmpsb xlat outsl fcompl imul cmp enter add call add pop pop nop out cs aas lret sub mov adc adc mov insb iret popf jb jbe clc sub stc adc mov and push movl mov gs lods imul addb roll xor jb push mov jecxz cmp push out fidivrl cmpsl test in xchg aad fnstcw pop xchg std sbb enter sub xchg or mov roll (bad) sub xor leave xor addr16 cmc ljmp popf fidivr xchg pop jbe jl and or dec sbb push mov (bad) bndstx sahf mov mov and mov add pop faddl mov pop dec test leave add xor into jns pop data16 fnsave push lds imul add sub cmp pop mov xchg or out test inc or (bad) ret movsb fisubr aad and lock cmp pop adc fisub cmp icebp and aam test sbb ret mov ficomp hlt (bad) cmp mov xchg and dec loopne xchg (bad) sbb xor mov popl add pop data16 or addr16 dec jns cwtl xchg cltd inc adc fcmovnb cs jge jns fs push fwait lds lcall cld call ret divl inc adc push movsb push cmp mov dec xor jecxz pop pop mov or aam lret cld add or cmp outsb sbb pusha push loopne fst fsubr fs dec push rol lea pop jns or add add notb cli in cmp adc push sbbl sub dec ret xor or jns pop inc pop dec outsb sahf push fnsave add pop mov push movsb dec test and ret shr roll lahf les mov daa xor sub adc cmp lock and pop pop (bad) cld xorl lcall cmp push incl daa jmp in enter pop aas dec repz sbb in add xchg ret dec js push cmpsb sbb or dec push mov int lret dec jmp mov jns stos fsubrl mov or test sbb pop push fisubr es jno xchg dec es pushf rcll into stos call xor out in (bad) adc and aas loop push jmp (bad) scas shr lods popf pop movsl xor stos xchg jp cltd es push xor outsl mov and loopne xchg int jp ret fstpt jle push cmpsb cmp jge rclb out std adc sub imul divb daa and cltd arpl ds hlt push mov ljmp les inc jg ja cmp out stos dec xchg adc mov jb in xchg lds fist fstpt ds (bad) mov int pop add fild mov xor pop out dec xchg iret sbb adc insl cs scas mov ds rcrl iret push mov lret repz cmp jo add add mov scas ds (bad) mov cmp xchg jo lods push negb cltd or lods pusha lods adc and sahf cmp or adc mov cwtl push pop jle,pn lea das and fsubl call push jns jae fstl (bad) inc in push or cmp xchg mov ja test jecxz mov out gs adc mov cltd inc xchg jb mov out std add add add lea fsubs lahf scas fsubl fdiv pop add loopne xor gs aas pusha movsl mov out insl leave fs xchg jne add (bad) mov sqrtps xor pushf xor cltd out or adc xchg xchg pop imul cmp add (bad) std in pop repz fmul adc ret (bad) lret dec fild aas push sub fnstcw jmp cli fidiv xor xor pushf pop ja das add add sbb addr16 out lret cld fs or lahf adc xor pop add je pop lds jb gs loopne cltd cmp jo test insb add mov mov sbb daa sbb and xor sbb insb push (bad) cld dec xchg mov adc insb sub sub pop inc mov lahf xchg lods pop mov cmp scas xlat mov push aas jl insb cwtl fwait pop adc mov js jecxz repz fist mov cli add dec out js out ror popa ficompl idivb clc rclb and jne mov sbb xor add movsb and int pop add add jns adc fistpll lods xor loop cmp fwait inc dec mov lret pop (bad) dec int3 fidivl ljmp jl mov cmp mov aas addr16 jnp mov mov and xlat mov push cmp jmp xor outsb push fistpl ret dec cmp insb stos add mov lds test stc sarl jbe mov clc xchg imul xchg sub dec cltd out push sbb or int3 add in mov movsb fs popa adc loope push push in sbb ss xchg inc push outsl jae sbb xchg push loope leave int3 dec maskmovq testl popl or and aaa and in add jmp aad loopne daa scas or jne idiv fmull and stos int jnp andl roll add add add in loop loope add (bad) call mov bound push sbb mov aam fs jecxz mov xchg sub xchg cmp xorl mov push push decb loope (bad) loopne test subb outsl or jae or hlt cmpl daa fild gs sahf lock lods inc mov and pusha pushf jle stc dec ljmp push loop mov shrb call add xlat sbb adc xor xor pop pop outsl cmc xor push imul jge jg in rclb rcl lea fwait (bad) push lods jmp aas scas rclb lds in add das adc loope inc pop notl jno sbb jge or xchg and pop (bad) dec dec xchg mov xor dec repz and jbe fisttpll nop mov sbb dec pop jecxz xor lods (bad) and mov pop fidivr (bad) testb fistl lods into inc push je dec jecxz (bad) or ret and mov (bad) cmp lcall xchg sub icebp or inc mov cli cmp fsubl ljmp aaa dec push js or sub sbb fistpll pop mov (bad) xchg mov sub xchg aad jl add cwtl inc fwait cmp mov bound xchg call inc stos int and add add (bad) sbb jnp push mov jo xor nop fstl xor cwtl sbb jmp and inc sub pushf andl rcl cmc adc dec adc cmpsb loopne push mov inc arpl cwtl je jne lret push gs sbb (bad) and jns testb xlat and insb sti sub xor stos xchg dec pop jae repnz cmp in mov in pop (bad) cmp mov add inc inc mov fcmovnbe pop (bad) in sbb jno xchg or pop or test fwait mov ljmp dec pop push sbb lret pop jns cmp pop inc sub shlb cmp mov and and cmpl jno or or (bad) movsl fnstenv dec jp ret outsb and cmp jecxz cld xchg (bad) fcoms imul fcomip rorb pop (bad) or test mov push dec mov pop bound xlat adc mov enter mov mov sbb sub cmp and subps cwtl cs sub ficom xchg loope sti adc daa jne clc out sbb mov loop mov ljmp or xor inc inc popl ret push fimul jecxz fdivrs push inc adc cld pop lret mov inc aaa xchg mov mov xor jmp bound adc xchg je lahf pop push test add add in add neg jns and add adc mov into (bad) xor xor repnz push jmp adc jg (bad) or sub lea jg aad enter mov or sbb inc es and sub lret pop aaa outsl fstcw xchg jle cwtl mov mov iret pusha jp cld dec out fisttpll push pusha mov icebp pop dec inc lock mov gs add aad and sub int movsl mov out xlat dec mov shr lahf mov divl in mov sub and stos or lret jmp mov loope fsubl and sub in mov mov stos js cmc dec xor cmpsb sub mov repz xchg es rcrl sbb ret xlat rcrl into test scas aaa mov or pop sub sub add lods dec mov add imul xor sbb push xor xlat push pop dec jmp lock daa rcrb aam cld stc movsl mov outsb jge push fiaddl and adc cs fidivrl adc ljmp hlt cmp lea dec sbb mov pushf or dec mov jmp in and sub sub in ljmp dec lods mov out lahf stos repz repz add add add popf call pop push mov xchg pop sbb adc in push cs aas and aad cmp frstor add ds and sub or push and ljmp xor inc mov aas xchg ret insb scas xchg mov sbb movlhps mov pop repnz stc scas fnstcw scas ret push icebp sti dec cmp scas sub int leave jbe not lock add add sub dec arpl xor ds mov cmovg sub dec addl mov cwtl addb push push clc and into mov gs (bad) jae movsl and (bad) xlat dec mov in popf std xlat (bad) fucom cld test iret adc clc notb adc fnop (bad) enter dec (bad) sub jne outsb loopne jae pop lods mov adc orl adc sub dec sub add sub jo xchg nop (bad) pop mov cmc adc sub add push popa adc cmp pop push sbb test out pop inc inc mov mov cltd jmp cli (bad) jo xor psubsw push xor xchg (bad) mov sbb int3 mov test sbb cld outsl shll push test inc pop xchg mov fcoml adc aaa cmp or jne add sbb call add add xchg stc loope sub cli movsl rcl pop pushf idivb sbbb dec fmull test or xchg (bad) pop test pop sub inc jb (bad) mov bnd dec jmp lods inc sbb stos repnz mov jge subl push repz dec inc out enter in xor insl clc pop dec and cmp jl ret idivb mov cs and gs mov add scas mov in loope inc cmp ret inc and dec roll xor sbb mov xchg adc (bad) mov pushf push cmpsb pop pop mov movsb mov mov adc mov jbe insb mov hlt enter scas mov gs into sbb jns xor pop xchg xlat push out (bad) ja call adc mov mov jmp inc mov int3 xor add add imul mov or stc pusha pop idivl sbb and aas clc test adc mov add sbb jmp pop jns sub repnz sub lret popa jge je xchg adc dec mov cmp inc lods jae test mov adc jne iret mov andb jmp push adc stos les mov aaa sysenter inc xchg sub add push lods dec gs mov xchg loop (bad) adc cwtl cmpsb lret sbb popf divb and pop mov fcomp addr16 cmc mov loop in and ja into fldl cltd mov fstpt sbb mov aam ljmp jp jle pop int int3 pusha add sub add add ss gs mov mov cwtl or imul repnz add add sbb loop (bad) mov scas jp rcll push ja inc push int movsl pop (bad) std das pop shld ret test jle (bad) js add cmp push jb push cmpsb bound pop or and stos mov mov je pop rorb mov cmp addr16 cs stc sbb sub add in sbb insl lahf enter pop movsb les mov aaa jecxz cmpb inc push adc dec sbb and repz arpl push (bad) xchg xor cmp ss xchg mov rorl rorb push mov repnz sbb ja shlb dec adc cmpsl mov sub push daa mov and inc jmp insb sbb mov clc sub push xor or outsl movl mov adc (bad) adc je xchg or sub jmp addr16 add ss xchg out cmpsb xlat cmp ret jbe push add fisubl dec adc xor xlat push lahf add stc mov es push cwtl loope jmp inc pop and sub cmp in and sub mov sub out ret add add (bad) mov and adc cwtl pop jecxz or or xchg int3 bnd cwtl sar dec std fdivrl loopne ret in call add in and add jecxz pusha das jns jbe cmp loop lds jecxz pop adc sbb cwtl pop in and or ljmp sbb sahf (bad) (bad) and outsl cmp std mov or mov xor dec and sub xlat imul std inc mov dec iret push imul popa decl jmp jge test inc cli divl inc fucomp test pop cld xchg inc adc push dec push push add clc mov scas xchg ret jnp add sbb popa sub loop push xor inc lods (bad) movb sbb pop je or jmp movsl jge and (bad) jns roll mov stc dec push fwait shr imul xlat mov push imul leave cmpsb sub sub jmp xlat inc hlt scas add lods sub mov icebp mov (bad) sti hlt jp mov ret cmp fs int (bad) xor jmp sarb in fcmove fdivs sahf sub xchg les or ds xor shr jno pop pop (bad) (bad) into stc cmc leave andl rolb repnz push xor mov inc sub push adc adc int mov je roll out imul imulb xlat aad xor lods lret mov adc pop pop inc roll add mov jb faddl data16 out mov addl dec mov sub push out adc push mov test mov or mov js sub pop pop cmpsb mov in mov jmp popf pusha mov mov cld pusha xor sub and push in inc and repz in add fimul loopne xchg bound cmp out mov (bad) mov andb and add mov mov in jns jp push sti push in sbb mov inc sbb inc repnz dec test ds mov rclb cmp in call jno movsl pop pop test (bad) xchg xchg rcr rolb push cmc ret xchg fcompl xchg add and sub fs lret lcall in pop mov mov ljmp lret sub add add xchg (bad) jg bound leave jge es add loop xchg (bad) jno inc arpl hlt lret scas lcall and stos mov repz jp add mov aam sahf aas mov mov int3 mov out add jns stos mov add loopne or jl rsm not inc xchg push lock cmp out pusha jo jnp insl daa ds xor (bad) js and fisubr pushf cmp cltd repnz test sub mov adc mov pop xchg out xchg jmp (bad) mov nop or or lods pop push fcoms js int das xorl and inc jno das loope hlt arpl cmp jle gs sub adc inc iret repnz xlat cli fist popf adc int xor pop xchg test mov dec test sbb pop stos aas sub sbb shll mov inc repz mov test std inc das (bad) mov (bad) loope imul pop add inc add ret push push sub es (bad) and daa push in js outsb cmp and fldt adc pop sub in popf mov repnz popf sbb mov sbb arpl mov icebp repnz out fwait daa dec mov fldt or inc xor push (bad) aaa jle mov add mov jae pop dec add push xor add out (bad) jnp mov ljmp cmp adc mov std (bad) aam adc pop mov jbe push rorl andl dec push add xor cmpsb rcr daa and repz test or sub xchg lret jecxz es and mov dec mov (bad) shl imul pusha or push in daa aas outsb (bad) cmp out xchg fnstenv clc imul iret add cmp mov ds mov adc add sub sti repz and testb insl dec cmp mov push nop mov jge bound xor mov scas pop push les push pop sbb cli mov in adc or push popf jb lock test fistl dec and jl dec nop into xor push jge jmp xchg push cmp inc inc int3 xor out add add test cltd fwait mov addr16 sub and sbb cs cmp mov nop cmp lret pop daa xchg add popf mov insl jns pushl enter and sbb (bad) cld mov xchg addr16 jae in mov mov enter ljmp add xor outsl ret out pop jge loope aas cmp adc push inc (bad) aam (bad) mov mov add mov lds jg scas mov add dec jmp mov sahf push xchg mulb inc jae stc inc xor xchg dec mov push push lods dec test lds push cmp cwtl mov lret repnz xchg and dec stc out lret jecxz and mov dec push jl push mov push lret cmp stos aas (bad) mov sarl and cmp dec aaa test stos es mov mov lods call mov mov cmc nop xor lods pop inc out imul in xchg fnsave out sti adc loope int pop lret lahf lods popa (bad) xor xor mov mov insl sbb scas loope xchg aaa pop mov popa (bad) (bad) iret rcrl lcall jle pop movsl mov int3 sbb dec xchg aam loopne cmp mov cwtl daa adc js xor ss push pop dec fs xchg (bad) sbb adcb dec inc cs lret jp mov add cmp sub fmull ljmp dec mov pop enter (bad) or (bad) aas mov (bad) xchg sbb jbe xor (bad) fmuls test mov frstor jecxz xlat (bad) shl or jae imul fistpll and xchg and cwtl add out cmpsb sub lea inc loope jmp adc (bad) push aaa jae add mov (bad) in in (bad) icebp into scas xor gs cmpsl mov adc add mov cmc stos jo inc cs insb stos or mul leave sahf sbb xchg mov rcrl xchg xchg xor std push jg movl add ret inc fcomps std arpl cmp sub outsl sub je push jae aam out sbb xchg cmp sub xchg addl roll insb enter mov xchg and mov jb add add xor and and sti ljmp mov adc sub mov adc mov jne je mov lods push cli push daa lahf je (bad) mov divb rcll fnop shr push xlat call mov mov xchg mov or je ss adc scas push inc cmp pop clc outsl mov pop add orl cli loope cli pop cmpsb pusha or decl sub pusha in add rolb push dec sub sbb dec adc ja repnz inc fucomip out inc add fldenv push int3 int3 fs mov pop push or das dec decl in sub push (bad) cmp sub lret jp in inc ljmp hlt rorl push pop push add imul mov add nop ljmp xor into push das mov das jecxz and mov add add cmp mov lcall lea nop aam lret adc orl (bad) rcrl pop (bad) pop sbb push jge iret aam inc mov aaa mov arpl xchg or sbb sarl pop aad mov add in mov aas mov fstpt out lret daa adc push faddl pushf test shll push fistpll mov push xchg (bad) cmp and jp and inc jp in add mov outsb icebp pop xchg dec sub lods jo shl or xchg arpl repnz mov popfw rolb divb xchg (bad) nop fnstenv cltd xor andl inc mov pop addr16 imull pop mov push icebp test lcall adc scas test flds cmc call scas dec (bad) mov jnp sub mov ja mov mov or pop dec jecxz in in add lahf enter mov add adc sub and lret push jle sub (bad) fisubrl xlat test sbb lret pop sti dec std sbb push lret pop cltd repz fstpt rorb lcall cli pop repnz dec sahf xlat inc scas nop popa fisubr xor inc int neg mov in inc (bad) shrl lret mov push das adc dec push iret (bad) loop add dec adc lret mov add mov (bad) cs rolb jo xchg sbb mov dec loopne add ds jmp out mov jp scas push mov lock pop pop inc push jmp mov push pop jmp fistl fstps adc add or aad pop lret jecxz loopne and or lcall lahf fidivr pop (bad) push xlat xchg jg sub jnp pop xor or lods jle xchg xor cld mov mov or mov call outsl imul and pushf (bad) jbe jmp (bad) and imulb xchg fdivrl dec jp cmp mov rcr dec pop int3 ror push mov stos cltd lcall out xor add into (bad) in jb add fadds or bound pusha inc fidivl xchg or mov push gs mov dec dec inc scas aad (bad) jbe mov mov xchg (bad) aas cmp shrl imul add xchg mov stos and fiadd scas leave xor out sub cmc add shlb out loope lret jno and fisttpll fsubs xchg mov xor and inc adc xor xchg adc neg daa std sbb ret jae dec stc outsl (bad) push mov xor push pop lret mov shll add add push jne sbb xlat into cmc sub xor les xlat mov shl cltd aas pop and repz sbb cltd lahf enter push inc aam inc inc jecxz jno scas movsl gs test ljmp jmp iret adc push xor in andb in ljmp dec and add dec std inc cld mov int jae bnd leave push mov arpl mov loope popf inc mov or or stos adc mov add in loop sarb gs push sahf stos adc les sahf jge push leave rcrl push scas ret out test xor or das xchg aad cmp fildll dec sub rolb test and add and in lcall pop cld pop mov lods andl out ds adc fdivl iret out mov test add rcrb test lea add int3 test jmp lret movsl jge inc inc sbb jno mov xor subb divl mov jmp out cmpsl push push cmc add fwait in or add cli jl xchg push and inc out decb xchg nop inc jg jb inc std out mov enter (bad) lock pop jae test fstl mov mov div pusha fistpll imul cmp and leave add sbb or add out xchg cld out (bad) push mov mov inc lock push jecxz cli xchg loopne mov mov je mov mov lahf out fcmove jne inc adc js fbstp lock (bad) dec xor mov or dec jo adc sub fisttpl or aaa jle fisubl loope int3 lret xor xchg lock pop rorb pusha cwtl (bad) int3 bnd fcom jns xlat fsubrl (bad) movsb jp push inc mov xchg loop mov add add sub out cmp das sbb ret test cmp outsl (bad) jbe ds or mov pop inc adc push mov outsb push pop sahf or inc mov dec inc data16 fwait push lahf out dec xchg xor (bad) push fisttpl jne jp bt adc cmp inc jae and cmpl mov (bad) cmp fisubr test sbb movsb (bad) iret ljmp inc inc dec and ret scas outsl pop dec mov hlt add fildl jae je fldt out in das int dec sti js push outsl adc (bad) or and ficom sbb sub mov cmpsl nop jl inc rcll inc out pusha mov fcomip adc sbb (bad) int xor aas nop ljmp nop outsl mov lahf sub sub jns (bad) lods jmp (bad) jae mov or jge inc inc xorb insl inc xchg xor adc or into stos mov sbb jp aaa loope test add xor (bad) mov jnp aas test test lds arpl dec and lcall int3 in xchg inc cmpsl mov mov mov (bad) imul jge scas jl fiaddl gs loop push repnz movsb lahf arpl je pushf and and rcl arpl xlat sub lret mov mov ret out std xor dec shlb inc xchg xor adc aaa in add pop cmpsb notl adc ret das data16 xor in or test addr16 jle ss cmp push imul clc pushf jno ret ds mov push sub (bad) mov aas in or (bad) push and lcall xor aaa mov mov mov fwait fwait xchg roll (bad) xor es push ret fs rcr sbb jb mov cmp scas nop imul jne scas int3 xchg leave (bad) arpl nop dec adc repnz fistl adc lret xchg nop das or std pop lea jl mov sub jge,pn xchg cmc enter xchg stos outsl aad std add popa jae (bad) xor jle pushf mov sbbl jecxz loopne mov loopne inc jmp mov cmp jno (bad) aaa (bad) cmp das movsl (bad) pop mov add fldcw aaa ds add add add arpl inc cs ds lcall fldenv xchg xor lods dec cs mov insb inc adc (bad) mov and mov jae lret shl jne dec mov add mov in iret xor jl cwtl icebp jg les cmc fstpl les xchg cmc fcomp sti lds dec aam inc push jo cmp lds pop lea dec ret or nop mov cmpsb notl adc xchg jmp jo jg movsb lret int3 add (bad) dec shll and (bad) mov (bad) ja xor sbb cs popf mov popf cmp jecxz leave adc fild daa jne es cmpsl add push iret mov pop sbb pusha fldenv and test cmpsb and or and aad lea cmp jae pushf pop jge cltd push rcll pop cltd lock sbb and js pop (bad) dec xchg mov push xor push mov add pop sub cmp sbb xchg adc call hlt outsb pushf dec ret test mov dec aaa popf imul mov stc movsl mov int3 jmp inc jmp adc stos fnsave outsl jg or cwtl push cs pop dec xorb loopne lahf lret pop (bad) stos mov fsubs clc pop shrl mov stos jecxz jecxz xlat cmp test aam cmp mov fdivr pop int ret daa push shll test xchg add xor stos ja dec ja enter lea mov int3 pop cli mov sub mov int3 testl je shl inc mov xor dec movzbl in push adc lahf ss pop ret das pop outsb pushf add test pop clc in add jae popf imul rorb xlat faddl cs cmpsb roll dec mov ja jl out lods subps xchg mov add xchg loope push loop ja push pusha aaa pop mov jne push call and or movsb push inc lods and aas cltd arpl movsl and xchg gs aad xor out scas xor das call adc fisttp lea jns and mov or mov loopne (bad) mov push ljmp arpl lret xor sarl addr16 loop jmp rcrl fldl add add xchg pop aas jmp xor jmp inc adc sub dec insb push sub scas jns dec ss mov xchg jle and ljmp cld pop jecxz jl lods lahf mov icebp xchg push popa adc cltd xchg test lods psubsb jge add dec push es aas adc scas cltd and fbld pusha cld sub ljmp mov or and push ret movsb (bad) jge or jle sbb add dec mov push pop dec fstpl out mov mov xor sub cmpsl xor jl inc rcll xchg adc ljmp and push scas xlat insb addr16 xor aas dec xchg jne popf idivl mov pop xchg dec shll (bad) in mov imul sub xchg push jb dec push inc xor sub pop pop in sbb mov mov dec jle xchg dec cmp mov add and in sub push inc int mulb or push ja xor push shrl inc ss jbe pop cmp inc sbb scas iret fsubl jns inc lods bnd mov sbb int3 lret cmp xacquire mov cld inc adc mov cmp add stc sub push cmp cwtl cmp push adc in push push xchg mov xchg inc cmc aaa jg xor das pop and ret test pop clc in adc lcall add in mov in mov stc pushf insl xchg mov ds xor cmp mov icebp mov pop outsb cmpsl cld (bad) cmc test sub add mov push das pop fisttp push push and cltd mov lcall adc int3 out sbb enter jo sub ret sub nop jmp or (bad) add imul je arpl in aas jbe cld clc mov hlt mov icebp sahf and add int3 repnz je xor movsb xchg cmp jl rcll (bad) ljmp imull gs cmp lret bound adc mov (bad) jne xor aam adc mov sub add pop enter jg repnz jns mov dec push movsb sbb cmp (bad) call ljmp movsb adcl aas adc cmp xor lret mov add and aad ljmp mov lret or es (bad) negl mov mov je and cld sti jl mov aas mov ret jbe sub mov iret and mov jb jecxz adc pop inc or (bad) test pop (bad) repz mov sbb push add scas xor push cwtl popf stos cmp movsb fwait dec mov dec xchg xor add add out outsl push dec test fmull cmp cmc (bad) dec cmc icebp inc rcrl (bad) cmp add adc mov shrl shrb (bad) jb repz ja xor push ret pop and mov push insl das std mov push inc ret imul push aam jp xchg shll fdivl xor sbb imul scas cltd arpl cmp js divb add in cmp xor aaa cs scas (bad) jl cmp xchg add lds js xchg jmp and lock mov out cmp (bad) loopne je push into push xor lret addl jg and (bad) fmulp in mov and jbe ja or sub paddsw shl adc insl dec dec idivb mov enter jbe rorb xchg pop mov sub adc cli outsl push out test push in iret cmp adc stc fstpt std jle aaa mov add add hlt adcb mov fisubl je mull aas and mov cmpsb lahf test ljmp imul scas cmp orps in push je mov andl mov push xchg setg inc xlat pop push or push ret xchg insb je xor sub push inc hlt xchg cmpsb das push add mov lahf aam enter jmp mov and ss (bad) xor in push push add nop lahf add jns fwait js add xchg jp ret xchg ljmp xor (bad) mov mov and push fstp rcrl push stc popa mov pop mov xchg jo lret xor iret mov icebp cli pop push cmp mov push xchg out jle inc adc in out lds vmovaps shlb add and ja sbb (bad) mov stos mov outsl (bad) data16 (bad) testl sub and rclb xchg out jo xchg or or add mov dec sub sbb fbstp fdivl dec mov out lds incb mov pop jb (bad) (bad) add inc add lods xchg add ss jns mov mov ss int3 test sub pusha lods ret adc pop inc scas mov aad movsl scas daa dec pop mov adc out loop xchg push ret scas shrl sbb mov dec xchg mov fildl lahf (bad) sti and pop stos add add repz outsl cmp push je fnstcw and mov cwtl icebp ss xor addr16 fsubl mov call sub adc sub inc pop and (bad) cmpsb xor add push sbb add leave sub pusha aas clc gs sub dec mov ret hlt lea sbb call add bnd mov or fdivr mov and in lret shrl imul add lret fildl and outsb inc pop push cmp jl addb jp and pop and push push stos in mov mov cmp cmpl out in mov xchg lcall pop (bad) arpl popa push jl repnz cmp sahf scas cmp aad push xchg adc and sbb fwait sahf inc fadds lods in mov punpckldq xor pop imul add or mov imul push push xlat mov mov jecxz in dec fnstsw fwait inc add xchg fmuls dec mov ret pop push adc aad imulb std aaa lea subl leave outsl (bad) rol jno push xchg sub pop es push sub inc sub aam sbb fcmove jmp das mov sbb bound adc mov xor cmpsl jne push push and xchg es daa cmp cmpsb dec xor xchg jns stc loop xor test call dec xchg nop push dec and stos rcll lods int push mov cltd fwait pop (bad) xor lahf push ljmp int3 mulb jle sub repz or inc push dec push mov lret pop jo jbe mov fs movsl inc fsubr fdivl addl rcll mov and xor iret fs ret mov add add inc mov mov bound out lods or pop jnp xlat xchg mov (bad) sti and mov cld xchg lock rorl imul inc xchg push push jle movsb andl nop sahf daa xchg out mov ret inc ja and lcall dec leave lods mov scas aad dec xchg mov inc pop mov pop rcrl push sbb mov and add xchg lods mov fs sbb pop xlat lock xor lods push or fcoms lock mov mov mov lea dec or aaa jbe mov lcall adc jmp mov iret fbld push movsb fisttpl xchg pushf test out fdivp repz cld or cmp icebp cmp sbb mov xor arpl (bad) inc mov jge js pop clc in push mov xchg cmpsl jb pop (bad) sbb xor insb xchg rcll ret or or fistp out lcall pop and jbe call jmp imul add inc sbb lret inc cmp inc loop stc and enter jecxz subps dec pop aad fcmovu adc dec mov daa jecxz xchg xchg mov adc outsb jge in movsl (bad) pop mov adc scas in or loope aaa push or clc aas jg ret lcall mov lea push shrl cwtl push lds push in (bad) and clc jbe test std mov repnz popa mov movsb test sbb push cmp mov mov xchg adc and sbb fwait sahf inc dec (bad) pusha clc adc mov in not sbbl ljmp xchg pop test outsb test add lret sub push inc mov mov (bad) push call lret mov nop lcall add add xor addl mov xchg jo lret cmp pusha lock xchg je popf out mov hlt arpl fstl sbb int lds aam xlat adc sahf aas xor mov inc cmp mov scas test and inc cmpsl in js movl xor and add pop (bad) imul test and jne mov stos icebp outsl (bad) mov add add inc xor adcl adc xor or movsb cmp pop sti faddl xchg insl in jnp dec push xor or aas pop push in int3 adc aam mov push fildll les loop rorl adc outsl pop movsl cmp ret (bad) fcomi std pop cmpsl mov cli inc mov int3 test jl inc adc dec lds sahf push mov sbb daa xor adc jle cld rclb add add das mov mov push adc inc jecxz mov dec int3 cmpsb int xchg lds lahf mov loopne stos ss pop nop xlat andb aad dec xchg mov inc pop mov pop rcrb push sbb mov and add test dec std pop imul dec mov push xchg fidiv movsl mov data16 dec in xor jle pop mov lods mov pop xchg jae sbb mov stos stos in add add arpl dec mov pop shrb sub lahf cs test sbb mov hlt fmulp lahf push pushf pop xor imul cwtl ljmp sbb adc cwtl dec popf mov sti mov (bad) lret aad sbb repnz fcomps incl std mov inc pop mov jbe jae iret mov xor insb xlat test sub cmpsb flds cmp sbb mov pop xchg xchg aad into ficom pop je,pt jne movsb jl sbb stos mov xor cs fdivl jge mov rcrb fidiv push std lods push jp mov stc and xchg inc fcompl testb sub push leavew aam cmp sbb in iret rolb cmpsb imul mov jns mov mov stos sub es pop addr16 (bad) mov pop testb arpl popf jecxz cmp add add inc mov cmpsl test fadds repnz insb pop leave xchg jnp add inc push popf mov dec or (bad) jno mov adcl outsl hlt popf adc inc cmp outsb or xchg inc or sub stc mov dec das xchg repnz jnp gs insw lods stos jns mov test jp aas cltd (bad) fistpll push mov incb das mov sub daa add or outsb jb aad dec mov sub mov sahf cmpsl dec sti inc pop mov pop cmp divb or or sbb xor sub into and in (bad) jnp lahf cmp add lret bswap sbb into xor ds mov mov idivl inc sbbl add in lret fistpl push sbb out test cmp and jge sbb pop or das adc dec in inc push dec pop xchg testl popf lcall out test jbe xchg add xor or out das mov sarb push cli adcb notl lds bound cmp pop lds sar push into fwait jmp jl into (bad) out scas das adc mov pop pop enter jns and or pop mov mov or or xchg adc and adcl in popf flds add popf cwtl test adc (bad) or mov jmp sub xor (bad) jbe out mov cmpsl or in clc mov jae cmc pop jo nop aas jbe dec sbb dec fmull mov adc sub sahf popa mov ds icebp das aaa lods cmc cmp sarb cmp in xor loopne mov dec addr16 push iret mov test and inc inc sbb movsl add mov imul fbld int3 out add in loope fidivrl aam cmpsl push les add out sub push lahf dec mov jbe push xchg xchg imul mov (bad) icebp insb dec rcll clc mov stos in push cltd inc dec test sub repz push gs mov js insl xchg dec cmp pop jle xchg das (bad) in cmp jp jl mov ja mov sub fdivrs pop loop cmpsb add add sub mov pop icebp jae rcll into repz push mov (bad) out mov in ljmp mov int popf sub mov lods and aaa ljmp add adc jl fldl cmp add jg fs (bad) adc xor addr16 lret cmp mov add insb xor jecxz ret aas loope mov dec xchg pop test mov mov pop inc or punpckhwd sub lret add xchg dec (bad) pop imul cmc inc push out jno (bad) jbe push dec push icebp icebp inc fnstenv add mov inc repnz mov (bad) scas loope (bad) ja fstl fwait cmp incb insb inc mov and test int popf repz fnop xor mov adc adc std mov and mov test mov repnz js adc movsb mov pop roll test ret pop jbe xchg stos insb push leave xchg out lea ret mov outsl xchg push and pop xor inc add leave adc sbb xor popa or sbbl mov fwait sub test or ds in lock ret sub (bad) jo imul hlt mov (bad) (bad) sbb jecxz mov cmp jnp and add inc sbb cltd mov loope mov int mov jg aad and fadds (bad) lret (bad) lock inc js out loope sub jp jae sbb pop push sbb xor shrl push jle movsb sahf pop mulb xorl or inc or jnp fsubrl (bad) dec iret adc shld xlat mov dec cmp stos je dec add ret mov idivl adcl mov cmp nop sbbb sub xchg stos test dec in negb mov pop stos cmp cs or loop movsl pop inc insl leave push push cmpsl fs lcall fstpt aas cmp cld (bad) sub sqrtps mov int int3 pusha inc jne fldenv cwtl or test popl loopne inc mov test and bound push xchg jge or sti xchg les and andl rol cmp add push cmc es jb cs sbb pop bound lods adc cmpsb notl adc cmp mov jbe out jb sbb jns xorb cs xchg dec mov bound add dec lahf jmp dec add loopne push (bad) insl ja fmull cmp ds into movsl ljmp mov addr16 or out repnz aas test push push (bad) jns sarl cwtl add and jl mov mov fild add mov shrl (bad) xor mov pop fwait mov inc rcrb mov dec cmc dec adc movsb scas rclb xlat clc insl xor je dec push lods pop enter outsb sbb enter gs mov addr16 hlt pop pop stos or hlt cmp aaa cmp xorl mov jl sub mov shl cmpsl mov scas into (bad) mov add adc lock dec sub cmpsl and xlat or mov add add mov fldcw sarl into scas xchg sub xor add loopne mov cmp movsl fbstp and push shll xchg and (bad) xor dec jl add push xchg aad sti xlat xor jmp cmc cli cmp mov xor inc and jb mov (bad) sbb ja xor out mov in pusha sar push cltd pop mov arpl add add enter loope and cmpsl inc jns std fbstp icebp xorl jge ss aam push cmp lock sub pop clc es pop rcrl sub sbb roll sbb ljmp xchg loope js bound movsb (bad) out js fcoms lods cmp sbbb test fs int cltd repz (bad) and shl cld fisubl std dec fstl arpl push add icebp int or xchg lret push inc xchg push push jbe jns (bad) mov in pop pop sbb scas jbe sub fnstcw push push sar in enter in or (bad) push push mov fs sub xchg js arpl addr16 cmc sarb push jl push push jle jl scas mov xor stos pop jno and stos gs xchg push push fildl xchg outsb jno mulb xor daa cmp enter stos out jmp mov into adc fistpl mov js adc inc and mov and cmpsl push and inc daa loope or add outsl dec xor loopne mov daa cwtl fdecstp and cmp loop mov jp xchg or mov xchg rcrb addr16 or sahf mov or mov sbb les fist add add mov mov push pop xor xor xchg add cmpsl outsl addb ss lds jmp outsl mov jae add aaa aaa stos cmpsb mov cmp or scas jmp push negl mov in and stos mov jp jp iret addr16 ret dec mov cmp sub lods jns (bad) inc out mov xor outsl outsl push xchg ljmp lret test or mov and jbe add cs dec aas stos jg pop xchg dec scas insl jae loopne jb pusha pop sbb pop mov mov xchg pushl inc push xor rorb fild pop dec jnp and push jmp mov cmpsl pop and and (bad) cwtl push dec xchg push sarl stos rorl insb sub insl dec push pusha pop inc std fmuls lods daa mov gs jecxz aad push cld add push repnz jae data16 in lcall (bad) iret aad lret aam ljmp add sub jb jno adc dec jle fwait add or cmp jl call xchg enter in mov fwait cwtl mov (bad) out sbb call lods jl (bad) adc insl fcomps inc ror push cmp in dec pop push iret adc xor adc rolb adc bound adcl jecxz xor packuswb pop call aaa add pop pop dec jecxz xchg pop fcomip jl scas xor scas mov rcrb into int3 inc mov fadds lahf sub (bad) and (bad) in std sbb stos iretw ljmp mov int int3 pusha cmp or hlt jp lods aad xor outsl bound mov pop jg (bad) xor mov movsl fdivrl arpl cmp fsubp cwtl jb and xor orl add add jle fildl aad addr16 or popa jle cltd or sbb inc iret push sub mov out mov jb int3 sahf aas xchg mov mov or in mov jp (bad) jmp jbe jl movsl mov mov xchg test in aad sub orl outsb in sub jns inc and sub test sti inc dec lret aam cmp or pop daa pop jb push adc add add repz cli cmp outsl scas nop imul mov mov pop je dec xchg pop cmp cmp mov adc movsb xor pop fisub sub test insl cmp dec out js cmp and or pop scas inc das mov sub into not ret hlt cmpb mov mov fs mov lret daa pushf mov mov or mov add add cmc and jo test insl sbb cmpsb pusha cs in test out mov push movntq inc hlt arpl dec jle sub out inc jg out jmp xchg fiaddl xchg push xchg adc mov cwtl or or outsb adc sarb jl ficompl mov inc ja cmp lcall int3 btr jae mov inc pop (bad) xor pop cmp add add mov adc pop jne in pop cmpsb pusha add sbb pushl into (bad) in jbe pushf int3 push stc sahf push fwait xchg imul je sub pusha aaa (bad) (bad) mov jbe in inc das movsb call mov aam xchg imul sbb aas inc cmp int3 loope jb ss pop sbb pop iret les jecxz mov enter mov mov jns mov cmp jp js nop (bad) dec addr16 add (bad) mov xlat int3 sar in and loopne mov push repz adc ljmp cmpsl xchg stos mov dec int3 mov add movl bound add pop mov jne jp psllq xlat xor mov mov gs sub shll mov cmpsl pop cmp mov push pinsrw shrl mov in rcrb lret push adc cmp in add out mov mov xchg shl adc fwait xchg or out add stos movsl lcall stc adc xor in daa dec xchg dec sti js push outsl adc or mov xlat into aad sbb (bad) loopne (bad) jbe leave imull aaa out lea adc jno adc cld mov and testl pop or adc aad inc adc sub iret cmpsl xchg pop and mov dec ss add push out mov dec fisubr aad adc in inc pop jmp jecxz popf jbe cmp cs sub lods loope pop xchg cmpsl nop fstl ret add push inc scas in xor bound xlat (bad) jmp push aas pop cmp cld xlat (bad) xchg pop test push mov (bad) repz dec pop int3 inc (bad) xor insl addr16 popf sub mov repz es pop cmp pop xor int3 repnz sub ret pop push add inc (bad) dec ds cmp add (bad) lret in jns jae jg int lods scas aam sub gs cli push clc outsl dec ja cmp ficoml (bad) fsubrs mov mov pop pop mov dec int3 mov scas sub pop int repz ret out pop dec push xchg dec add xor (bad) loop out ret mov push mov aaa cmp divl push in cmp push sub je pushf test out in and mov in and inc fldl add add or outsb movsb mov lds mov mov mov dec and jb mov pop mov dec xor jns sarb push sbb lods add cwtl xchg cwtl jnp push xor xchg adc icebp imul cmpsl pop mov sti je add dec inc xor fmuls add cld sub ret jg and sbb push pop in mov nop adc (bad) and test ret cmpsl mov xchg and or add dec jle sahf pop sub mov aaa push pop add aad and sub adc in cmp data16 mov (bad) cwtl sbb (bad) stos mov in inc sarl sbb xchg leave mov mov std jg push pushf nop in fdivrl fstl arpl repz movl mov adc jg and pop xchg xchg mov mov adc mov and mov mov jp xor add pop adc adc mov js rorb cmpl pop notl nop repnz inc lret cwtl push (bad) xchg mov jl xchg sbb cmp and push cmp test sub xor push (bad) mov cltd mov data16 shlb fsubl into xchg and aaa adc pop mov or jno inc inc sbb lds mov push pop jmp dec sbb int3 lret push fmulp add and jb repnz bound scas fistpll cmp clc loopne rorl outsb mov into sub jp sbb pop cmc (bad) mov movsl pop mov mov pop lods rolb cli outsl (bad) push sahf mov dec pop or es push push in inc xor inc fmulp xchg ss mov lods lea fsubrs jp adc fmuls dec jno mov repz pop in mov fsub and ljmp rcrl add pop aas pop into add mov or inc dec dec lret pop mul in repz mov jle mov popf xchg jle imul rcrb fstl icebp xchg lock scas nop add dec adc xchg js push pop mov lret mov sub sarb mov jae test inc push jmp in pop movsl (bad) cmp hlt ds push sbb add lcall shlb add aad outsb push pop jg cmp xor sbb pop or sbb cs lds mov int cmp sbb mov fmuls loop loopne or in not mov cmc jne mov xchg stos scas sbb into out dec inc iret inc xor jmp in mov xor in dec mov movsl cmp mov xor scas jb std (bad) dec sahf int3 jne nop popa lret pop in pop push into (bad) int3 repnz inc add add lahf dec lock lcall xor icebp test push stos clc shlb mov lods dec jae iret cmp int movsl bound sbb sbb add (bad) stos add repnz loop lahf fs leave xor in rolb stc sbb out adc mov jmp cmpsb push outsl insb (bad) (bad) daa sti cmp pop cmp in (bad) xor jb mov add mov fldcw jmp popa xchg add insb mov gs mov dec mov test int sub sahf mov xor andb mov push sub mov leave addr16 aad cwtl jl (bad) stos repz adc call sti cmpsb inc mov xlat stos fcmove loop fsubrs cmpsb sub ret lock test add cmpl fcoml sahf and rcrl movsl (bad) xor fisubr int3 mulb negb imul ss int icebp push push inc imul mov xor aad dec inc enter aam sarl xchg es jmp push addr16 (bad) xor iret mov push cmp popa push (bad) repz sub push sub sbb mov push inc pop or and scas out repnz test (bad) lds xor (bad) mov test adc int3 imul ret cmp xchg inc jg or push aam add adc and or inc mov cmp lds add jl rorb or (bad) fcoml inc adc fidiv je jae adc out rolb mov sbb pop xlat std pop call cmp or movsl mov mov (bad) sub in mov aam add cmpsb (bad) cmp sbb sbb (bad) (bad) xor xlat pop jnp inc in dec xor dec test mov pop test mov leave fsubrl jg add add icebp cmp mov mov fnop jmp xor lock adc mov lock ret jb pop iret add cltd mov lahf rolb xchg mov fildll pop fs sub das push mov lods dec inc shl pop into xchg cmp jno imul outsb arpl insl mov push mov mov outsl das test lds push cmpsl xchg pop or sub movsl mov cmp mov inc aas out sbb mov xchg push mov sbb movsl push pop jecxz cmp (bad) push imull leave cltd outsl push aaa stos lcall dec imul sbb (bad) (bad) repz inc fstps push sahf mov push repnz dec sahf lock popa fstp cmp vpsadbw cltd or xchg clc sub fistpl xor inc sarb inc push pop adc push fcmove push inc push lret mov jae sub add xchg inc mov outsl rcll ret cmp mov sbb jb xor xlat inc mov ret mov inc sbb icebp sbb dec sbb adcl add add mov enter xchg cmpb mov pop (bad) sti xchg add cltd ljmp addr16 xchg sbb cltd out popa push (bad) icebp out mov jl mov fsubr push add push lret ret inc nop sub cmpsl dec sahf xchg mov add imul inc mov cld mov xorl mul xchg jp mov imul sbb inc pop pushf add inc gs loopne xchg push cltd xor out rcrb or xor dec jge mov mov lcall insl in jnp test mov mov das cmc xchg push adc (bad) sbb pop mov lds inc inc fnstenv insw jbe mov movsb adcl mov add add add pop movzwl xor int3 xor lret adc (bad) pushf lea dec mov inc movsb mov stos ror add testl and jle and rcl or mov sbb fadds pusha out sub repnz cmpsb out sbb pop popf adc sub test je enter idivb xchg int lret mov and stos push jo cltd lods das fmul and pop gs addr16 mov and rcll mov gs imul hlt into or call fmuls sbb (bad) jecxz jnp movsl sbb and sub mul pop int3 stc mov mov jb lock lahf jmp dec pop sub xchg xchg (bad) dec fidiv mov lods and mov jmp mov enter (bad) or pop xchg les out iret aas gs xchg jo add cmp iret dec enter lea pop add leave mov xor pop xor jbe jae iret mov fnstenv cmp pop jg jns jbe adc test (bad) jmp mov push or adc iret fnstenv pop cld xchg fild add pop mov mov and aad cmp xchg jns insl rorl pushf adc lods fidiv push cmc lods push imul push sti cmc sbb lods je inc fildll add inc mov aaa adcb rol jmp inc rcr mov jp lock sub (bad) cli lret incb sub dec xor adc loop lock pusha aad jae daa ret lahf dec push pop mov push push push xchg mov movsb scas push (bad) xchg xor pop out push lea scas sub xchg pop test or pop (bad) push mov pop cmpsb pusha add ret sbb dec je leave (bad) imul fisttpl add jns rcrb negl add (bad) or xchg loope or cli and lds fdiv lods mov jne stc data16 fcom xor xor inc sbb outsl in (bad) sub inc (bad) cs xchg mov shll jge mov icebp dec into lret inc or push repnz sub not sahf jl lods outsl iret sub mov aad mov les cmp outsb sbb (bad) leave rcll or bound add add and cli aas pushl inc fmulp sub in pop les push ds hlt fsts jno sub ja jp or int3 packuswb push and mov mov push (bad) std adc cmp insb xchg push xchg cmp push in mov jne das and pushf fldenv sbb pop fidivr aas mov mov dec fnstcw adc push ja test add cs cmp (bad) mov add add and inc aaa mov popf fstps jl adc insl inc cmp pop xchg jg xor mov cmp adc popf cmp pop adc cld pop bound cli xlat dec push inc loope inc aas aad dec cmp iret mov lret dec mov in mov bound adc rol arpl mov lahf sbb pop int3 or xchg mov sub and cmc jl adc mov dec mov fimul add test jmp pop jne xlat and call in jecxz push mov cmp lcall sub ret mov pop mov jp sbb dec mov mov iret adc push js scas nop ljmp inc jp cmp inc loopne or icebp cwtl and push insl mov inc adc and inc je sub std cmp and and push les ss shr sbb add add fiadd fs int fcmovb inc (bad) aad iret push xchg and cmp mov push stos scas jae cmp jo scas xor cs fdivl ja cmp sti test fdivr in cmpb insb and cmc adc outsb jp insb iret ljmp in andl cmp push xlat xorl cmpsb add xor push gs enter or adc ss mov negb pop fistpl sub mov xor (bad) jo enter in push pop add ret test insl cmp lcall push pop outsl or mov loopne add dec in mov iret pop insl xor or fist inc mov or bound jmp mov mov rorb xor das adc xchg sbb jnp outsb orl add add dec mov jp mov cld and std or rorb cld mov pop mov xor cltd popf repnz shl mov sti sub sub sub cwtl or inc pushl mov ds xchg cmpsl add xchg and sbb adc out lret sbb add xlat data16 jne fldl cs lods xchg pop outsb mov mov mov scas push out xor out inc out out pop idivl rcpps addr16 push sub das aad xchg add xor lcall aas aas mov icebp movb in ljmp jp cmp in xchg (bad) push lods pop cltd out jg jmp mov or fidiv adc lret ljmp add dec adc cmp jmp ljmp loope fdivrs or into mov bound (bad) repnz fldt and rclb xchg mov push fisubl lcall xor sub scas add mov test sub mov adc xchg add and jae xor pusha mov (bad) jge xchg in add dec or jns mov jo movsb adc idivb xchg lahf cs add xchg mov lock mov dec mov fucomip and xlat mov stc xor lock mov shll jge mov mov mov push pop div stc add test adc or rcrl nop fldenv lea lds push jecxz dec rorb sub inc push xor repnz out outsb negb out push sbb or pop inc xlat pop lods push iret (bad) cwtl mov scas push cmpsb imul sub mov (bad) or inc in mov mov adc ss jae add mov mov add mov cmpsb leave mov lcall add sbb (bad) decl sub (bad) xor subl or (bad) out dec xchg pop jmp sbb ret pop dec ja lds fsubl mov (bad) icebp into repnz lcall pop loope or xor arpl sbb (bad) xor mov fisttpll lahf imul pop and xor jnp pop fisttpll mov pop loop lcall bound mov sbb add mov cltd inc (bad) mov and cltd mov lock xchg and cmp add ds xchg pop mov mov add mov mov stos lods sbb dec xchg cmp daa out mov pop cmp stos cmp gs (bad) cmp and sbb movsl out jmp stos jb iret cmc xchg dec jl or pusha jmp jb imul add add sub pop mov fucomip mov in cli stc sub or mov popf jb xor xchg jnp xchg loop out sbb adc sub or sar cmpsl sahf out incl bound xor ret data16 push stos push mov dec test sbb pop push xchg mov adc xchg mov fsts test mov repnz dec iret testl sbb (bad) or aam ftst outsb xchg fstps add pop add jle sub xlat xchg dec cmpsb outsl push dec leave cmp inc sbb mov inc fisubl dec ja xchg or inc or xchg test aas hlt ficoml sbb test imull (bad) testl mov pop daa fwait (bad) xor test loope push cmp sub out pop mov jl hlt and hlt mov ljmp inc aad mov cli loopne cmp or add add rolb ss leave nop mov adc mov pop add sbb enter push cwtl enter lcall inc sub subb fwait nop dec cmp cltd cmpsb adc sub (bad) mov sub outsl dec test mov pop mov mov mov mov repz push int3 inc sbb lahf icebp adc push outsl and test push fisubl nop fnstenv add add sbb dec xor jbe into movsl lahf push cmpsb mov inc sub testb xchg xchg insb mov lret mov sahf jnp lret cmp iret lcall mov sbb mov rorb dec ljmp push loopw cmp cmp pop pop into adc xor cld push jo xor ss cs repnz fsub loop push mov movsl es aas ret addl in push fldl outsl (bad) xor scas jg icebp dec ljmp int3 cmp xchg ret vmovmskps je aad mov popf int out stos dec sbb daa inc mov push outsl adc sbb ss lret mov adc (bad) data16 enter xchg mov daa shll lds xchg xchg loop jecxz and jno push cmp mov iret scas orl adc lods addr16 stos push mov pop je pop xchg inc sub in sti xor mov dec inc xchg repnz pop out popf and pop js repz pop ja mov add jp xchg xchg movsb lret mov sbb and jmp mov push sub ja loop je in mov sbb or loop xor cltd out popa pop (bad) dec iretw cltd mov inc add and push xlat cmpl out popf dec sbb das leave stos inc mov test mov or movsb xchg sub and pushf shlb andb xchg jnp inc inc push ljmp add outsb sti dec movl ds xchg je pop cmpb jg or push adc sub sbb arpl popa or sub shr les leave dec add lret dec xor add mov movsb inc insl fist lods enter add stos mov or sub cwtl mov cltd stc test jb jle in out mov lcall mov sub xor iret adc imul xor pop cmp and fstl mov iret push pop inc inc xorl adc jecxz mov sub pop sbb cmp popl mov daa inc bound mov push je push das aaa je scas mov clc adc mov stos jnp mov fwait imul dec fs inc es icebp int and mov dec jae add aas (bad) jno pop clc xchg stos in fdivp and and mov pop mov jb mov cmp xor or xor lea dec adc lret aad jge js sarl movsb mov jbe xchg mov hlt cltd mov aas leave push pop xlat arpl pop ljmp and (bad) icebp sbb mul into fwait jp out gs addr16 mov mov in jbe jae lret andl add pop or je pop cmp mov test stos sub inc mov imul jle pop jg xchg (bad) push mov cwtl loope jne js lods add mov ffreep pop movsl add out movsl and xor ret sbb and or fidiv push std test mov sahf test add and bound jns in (bad) les pop add lods sbb (bad) scas mov inc outsb not pop in xchg pop push jno push iret jbe addl add pop mov inc (bad) jb insb or mov jne lods or jae xchg adc (bad) mov push adc and adc or or mov pop gs jnp pop nop dec dec fdiv xchg pop cmpsl push pop mov adc cmp scas mov lretw xor adc nop addb in bound add insb xchg mov mov xor adc and dec jbe daa cmp stos in out inc into sbb icebp lods mov jo add add and icebp or enter rcr and addr16 adc sbb repz inc mov fldt xchg leave daa mov jno leave and or mov ret (bad) mov shlb aaa out mov and adc jo pop dec fs fscale test or mov jnp sbb roll maxps loopne dec jbe pop and jle aam pop fdivl dec ss int3 mov pop pop ja sub int3 lods adc shl ret xchg insb or stc stos push push cld movsl mov push push (bad) dec xor jo leave mov jnp rolb jge,pt jnp (bad) popa inc (bad) jecxz icebp mov shrb bswap jmp imul and mov in jb add loope push sbb jl sbb nop mov jnp shlb jo cmp add add add int inc sbb out mov movl adcl fidivl jae ds ret pop mov xchg in jl add cmp rcl pop xor (bad) stos sub movsb leave ja rol jae (bad) jae sub sub movsb xorl mov ret jno mov icebp inc fldenv xor notb int mov int fstps adc faddp and bound in add xchg push xlat es or adc mov mov add add fnstsw xchg lods aaa add pop inc popf jle mov leave je mov out call and popa mov xor shrl push outsb ja (bad) sub test mov jnp int3 call inc pop mov mov mov stos sub inc rcl lea (bad) xchg icebp scas dec xchg xor cld (bad) add xchg or pop out icebp mov pop in add xchg leave gs aas mov sub fsubrp jne and xchg sub mov xchg sbb sub shlb add push mov call pusha enter jo lret xlat arpl ja mov lea cmp insl scas pop lock loope enter popa in add sub movsb adc jge mov fbstp dec dec clc xchg xchg add in push mov pusha leave cmpsl mov xchg sbb add push out push addr16 push int3 rcll outsl mov insb sub rorb pop pop sahf add mov nop das cltd flds cltd push pop jle mov cmp sub push ret xchg jo mov xor ret addl mov adc cwtl negb rcrl mov sbb (bad) popa xchg xor ficompl (bad) sub fucom push int icebp repz fsubrs mov mov mov add add and in mov or push mov mov lret roll cltd js add loop pop jmp xchg xor add push repz scas xor pusha mov xlat sti pop push jcxz push push aam iret push and orl or lret pop sbb ficom mov fldenv push mov jb xchg pop mov mov xor fildll es clc cmpsb dec sbb mov addl add add rcrl push shrb sub xchg dec repz cld pop mov inc es aam repz leave and rcr orl scas cld jp cltd push pop cmp mov cmp xor mov or cmpsb add imul cmp test mov cmpsb xchg mov push mov add and sbb adcl aas add pop xor (bad) cmc (bad) cmp xchg aad sbb rcrl enter add outsl inc jne outsl sbb sub pop pop push mov sub in xchg icebp shr leave push inc and mov xchg into int daa in (bad) (bad) dec pop xchg jg fist mov mov fnsave loope and (bad) rcr paddb ljmp xor push orb jg (bad) or mov cmpsb cmp divb ja enter pop test jno das xchg je add and arpl and cltd mov out jne dec mov push dec cs nop es cmp inc divl dec jmp enter add cmc xor out sbb repnz repz jle add addr16 imul or in mov nop jnp jecxz sub (bad) mov loopne sbb ret (bad) (bad) aas mov push out stos push ss and add (bad) scas sub push div inc cmp push mov add inc sub int loop mov shll pop mov and mov jge dec ds xchg sahf or push and out (bad) lret cmp dec adc insb ljmp push roll aam pop aas xchg les daa scas (bad) pop fwait push mov sbb mov mov in fstp daa sbb adc popw leave pop ljmp mov sub xor das mov daa mov push xchg mov push sbb ds sub das adc fidivr lahf or test xor mov mov inc or xor push (bad) sbb fisttpll les pop and scas fs pusha cltd ret loope inc mov push aam aaa sbb push xchg or mov dec sbb push cmp and sbb cwtl or icebp bound xchg insb pop stc sub and in call xchg loop jnp fwait sub mov add mov je sub out (bad) ds andl xchg movsl pop into cs xchg movsb mov popa push cs pop outsb push or dec mov (bad) jae jno icebp lret xor fldl shrl xor int3 pop adc icebp mov fwait scas fst mov cmp ds andb pop xchg std test adcl cmp sub sub (bad) out mov lods push xchg (bad) cltd adc insb (bad) gs ds xchg mov scas cmp int3 mov popf ret arpl cmp adc jg cwtl push es test stos pop es rol push ss std pop add mov (bad) add das stos rorb js je lret pop mov test dec stos sbb xor imul inc pop cmp idivl push mov jns shrb in enter test in mov ja stos scas js jp xor mov dec xchg push add (bad) std in and xor jmp cld pop sub sub mov jmp cmp and pop loope loop jp ret mov and jecxz lods mov or aad adc inc (bad) bound sbb xor xorb pop add arpl iret arpl mov cmp cmp push out pop fistpll pop mov or mov sbb jg jns xchg add mov add add (bad) sub push jbe clts or arpl and or jp enter stos lds das pminub add jnp jl lret in int3 aam or sahf adc jp inc mov imul and aaa inc repz gs ret or push int movsl push cmpsb dec sub sub and mov mov mov (bad) out lahf es ror dec (bad) pop in inc cmc add add bound mov jecxz daa lret jl jae push icebp popa add mov dec scas sub aas cltd adc popf xor mov sub jno aad jnp or mov dec sub outsb test (bad) repz xchg jne imul sbb dec test jno mov imul sbb mov aas cmp pop jbe xor test xor add sub ret clc aaa push out xlat rcr fimull add inc ror cmpsl cli mov xlat mov pop xor movsl jns in (bad) jg test jg sbb fcmove and inc pop pop hlt mov push lahf pop cmc push or sbb rcrl and pop add sbb rolb push jns adc hlt out loop ljmp adc lcall mov mov pop nop enter bound call pop and xchg mov add add add dec jmp push mov jb mov and stc xchg cmpsb inc in jae cmpsl lret push dec insl sbb sbb dec inc js adc in movsl push cmpsl add mov sarl ljmp in xchg int3 lret out lret xor iret pop mov daa inc pop enter cmp fbstp push mov and stos mov scas mov cli sti subl inc push stc mov icebp xlat mov add in xor pushf mov push mov sti pop sbb (bad) sub mov (bad) adc pop fwait jl jnp pop test xor ucomiss addr16 jb lods xlat test scas add insb mov (bad) ja and mov jg jae mov sbb (bad) out cmp movsl pop and pop pop ss jbe add and push add jecxz jo or push mov int3 mov jo lock inc ret hlt (bad) les add mov lods lret push sahf mov aam jecxz subb push and dec mov aam push mov mov lods lahf xchg (bad) (bad) mov xor icebp mov add push hlt jae clc aaa push sbb cmp rolb mov das jno mov inc xchg push les add dec int test sbb jnp mov sub jg sbb jbe lret xchg dec and mov dec outsl and xor xor cltd movb push jae add aaa out ja enter sub mov testb jp and or pop rcr out aaa push adc int3 mov dec pop flds adc pusha mov xchg ror jl add imul into cmp cmp idiv or jo jecxz xor or inc mov in or dec mov das rolb popa hlt jecxz,pn ret or popf xchg sub add pop insb fnop aas push push jae aas std aaa mov std dec xchg pop pop cmp jo insl cmp repnz cs mov jb sbb insb push stos inc aad add dec imul jg and roll adc push or lods and addr16 fs or vpmaxsw or test and in lret cltd pusha xchg test call insb sbb (bad) enter cld cmc push add add dec fsub pusha push aad mov cmpsl push fwait push add mov jne lock sub inc or cmp scas mov aam push lret jae mov movsl mov cmpsb into mov stos or aaa lea pop dec out xchg add (bad) mov mov xor push (bad) clc lds sbb lock rcll daa cmc add pop aad mov cmpsb ficomp mov popf mov ss xor scas out mov add sbb lret pop cmp sbb ljmp push mov leave mov mov mov fcoms mov dec adc sti mov pop cld lret jne add push repnz lahf out (bad) imul jl jb add pop cmpsl sbb insb movsb or push pop jns and mov out mov ljmp mov push cs and imul jo add add pusha std push add scas lcall outsl jo dec into cwtl push inc pop dec adc insb and adc add andl (bad) repz mov loope pop lahf lods ljmp enter mov repnz jne aad outsb mov xchg sub xlat push xlat (bad) xchg mov sub bound jmp fbld push call push mov test mov bound xchg adc mov add add jl sub and xchg sub cmp add inc mov fwait mov bound mov mov int3 out jecxz icebp hlt (bad) lock mov test lcall int3 push push jbe push mov adc imul shll or sub in mov mov xchg movsb (bad) mov loope lcall mov lea popf xorl frstor mov getsec fldl out repz and mov mov xchg sub dec jae (bad) mov shrl cmpb daa push adc sbb jnp xor mov fldl test int3 jns jl xor push daa mov xchg inc ljmp sar data16 add add xchg push cmp enter add add out add test add mov test mov pop adc in out push cli jecxz and ja cmp jmp addr16 sahf sbb adc push pop pop jp jle loope bound nop xchg popa mov jp ds jb dec inc xor repz (bad) sub jns sub int3 out push add sub stos (bad) aam stos mov fcomps cli outsb repz push clc jmp pop inc les jb lock push mov scas jb aaa mov sahf aas add test sbb adc or and scas push int3 repnz das xor xor aaa inc mov popa cwtl add adc push and adc cmp testb jnp int (bad) aad inc sub fcom rcll inc addl (bad) mov mov or push dec mov movsl subps (bad) jecxz scas jnp insl rorb out push sub cmpsl inc jae (bad) adc cmp inc fstpt rolb pop addr16 ret push mov or jns subl call (bad) hlt adc inc inc sub add push sahf add out mov xor scas into pop jge xor sub fstpl fnstsw mov dec clc and (bad) (bad) jns loopne mov stc mov icebp xchg movsb icebp ss sbb sbb es xor jecxz leave inc into in dec mov sbb ret add sbb inc pop push sub mov sti adc inc repz fist (bad) push incb sub push xor sti (bad) movnti (bad) xchg sub mov faddl add add inc ds cmp cmc add sub dec cmp adc pop and mov sub dec xor es sbb arpl jge stos xchg sub inc ja aam (bad) xor inc icebp mov pop scas gs aaa in pop daa push mov in jnp aas lods (bad) loop xor ret cmp xchg sbb insb cwtl fwait cld inc cli sbb inc and jl lret scas aas jb pushf popa ds push movsb or xchg lcall test add add and iret lds or push mov mov xchg flds ret (bad) sahf imul jne mov cmp (bad) aas push pop (bad) jb inc push rolb sti xor insl pop test sub or push jge insb cmp data16 pop adc fstpl stos cmpsl inc int je push scas es mov mov add xchg sbb scas movsb or mov add fimul popf xlat xlat mov (bad) call push mov pop cmpsl pop or mov test or push loope rcll icebp mov inc cmp ds pop mov xchg mov gs adc (bad) cmc mulb call add fwait lock js inc pop cmpsl mov and xorb pop pop stc (bad) pop push jb xor cli mov loope dec repnz sub inc (bad) xchg cmp popf sub std (bad) pop mov int and add inc je (bad) repnz or jmp in int3 pop mov push cmpsb cwtl and mov push mov lcall dec arpl add ret mov das xchg xchg push xchg lea xor sub mov cmp aaa sar iret mov push inc rcrl test xchg test lock (bad) fdivrp out gs out inc dec jp dec rclb lds dec fptan and xchg lret mov add adc or push jae cmp inc mov dec test add jno outsl push pop fwait sub loopne,pt ss mov lcall imul sbb push and notl mov mov aam or lcall push push repnz loope mov das mov cmpsb push shl jno sbb in lods or fwait test sub inc xlat add (bad) fldcw add addr16 fild and sub pop and pop out stos fwait loopne cld jmp out (bad) add xchg imul dec xchg push lahf std into addl sahf repnz adc popf imul rol ret es bound or add xchg cmpsl mov mov push push rol xor cli jno pop jmp inc ds xor adc imul lea and fs sbb xor and sub lret enter push inc push jno cs ret pop jb and mulb cmpsl imul pusha fdivl or or imul pop inc arpl sbb imul jns sbb cwtl (bad) cmpsb adc lahf and iret out mov popa cmp and enter mov fistl sub sbbb adc xor push jb test dec xlat roll jno push into pop add inc or andl out movsb (bad) (bad) and movsb ret add addr16 test cmc jns and push xchg fcoms jo and mov (bad) mov and jmp push and cmp xor or test int3 jmp add adc imul mov add xor mov xor fnstsw lahf pop les and add test mov pop inc sub cmp ret imul arpl inc and orl je lcall aaa fisttpll fistpl dec ficoml jmp xor fiadd enter fnsave fsubrp pusha adc jg push out fisttpll sbb std push movsb adc inc js ja inc lods daa out push jecxz mov dec out lock out pop scas xchg mov iret xchg mov add add inc pop or (bad) jp imul sbbl dec xchg sub fiadd lret cld arpl loop (bad) movsb mov sarl ja mov push outsb out mov mov inc push pop fnstcw cmpsl and notl fmul mov mov adc clc xchg jge sahf shrb cmp inc jl pop xchg cmp cltd fisubr adc dec int subl and mov pushf arpl shrl js dec inc push lock ficoml into in inc jg adc add cmp in imul loope arpl into stos sbb xchg aaa and pop daa push ljmp mov out fmul outsl dec jle shrl lods test sbb popa lods repz xchg jp test fisttpll mov (bad) loopne mov xchg inc sub mov or cmp push jno mov jg pusha in into dec pop (bad) fistpll add pop jno ret cmp aas int3 xchg lods das add mov add add add add rcrl and ds imul sti (bad) std pop je adc and cmp int3 mov sbb jb add mov inc shl dec dec push xchg (bad) jb in sbb addr16 mov push push call mov add cmpsb rorb cltd jmp lods and jle stos fwait mov jmp mov dec mov mov push mov popa push daa shlb mov xchg add mov adc add outsb adc ret mov adc jp pop movsl mov adc fldcw xchg aad out jns in shrl adc mov pop clc outsl (bad) pop or push sbb ljmp in fsub test sub popa and inc fsubs dec sub push and popa xor rcll adc rol cmpl repz mov xchg arpl mov (bad) sub push push mov lret push add xor push lcall pop lahf adcl fwait mov sub mov sbb popa imul outsb loopne mov mov adc lock daa xor mov push mov mov and inc nop outsb into (bad) sahf mov ss xchg push testb or sahf outsl ret imul cmp das aas cmpsb loope insb insb aaa movsb push xchg inc icebp aad inc out (bad) xor popf movsl cwtl fst add add in inc idivl (bad) push or test lcall ret fcompl icebp inc push cmp out xor adc out daa inc std inc test push inc pop rol dec leave add pop int3 stc xchg ror pop mov or int3 cs or fwait or popaw mov mov xorb ss mov aaa ljmp xor lods sbb adc lahf stos in or test leave push ss fs incl add ret and jmp icebp mov adc inc std fstps lahf nop mov mov pop or sub fisttpl or xchg xchg mov daa je push stos rcll or cmpsl in xor push ret sbb test sub adc add dec add jg or add into (bad) cmpsl orl out test pop mov mov fistp popf insb sub dec ret loopne adc and mov add add test and inc imul push pop stos lret mov aaa xchg jp mov bound xor sub rclb mov lds adc test fdivrs sub lods jmp xchg enter nop or sub add bswap cmp sti mov xor sysenter mov jae insl ljmp ja nop inc mov imul rorl lret mov and loope pop pop mov ds jge adc sub rorl out add sub add je psubd rol dec xchg es mov mov pop mov pop jl jmp mov (bad) fsubl xchg or cmp out (bad) jg mov (bad) repz dec xchg leave xchg mov inc (bad) xor ret dec out ljmp clc adc out inc aas aaa int imul adc enter cld mov add add mov xchg push cmp jle fbstp xor je xchg sub xor in (bad) mov push sub pushl movsb jle out jno dec dec push add cmp mov pop push out mov cmpsl mov movsb scas mov movsl bound outsl xor loope jnp mov sub sub inc inc pop and sbb inc pop int push pop pushf (bad) push in call repnz add add add out and stc push fcmovb pop sub icebp inc loope lock inc push fstpl mov out das das dec xchg std aad out mov cmp aaa jecxz fbld adc cmp and test inc adcb dec mov mov mov dec int mov xor and sbb test push into mov icebp dec mov mov pop nop add cmp fmull mov mov jns int3 ljmp daa cmp pop jp data16 and xchg inc mov cmpl push sub add cs jecxz cwtl leave pushf dec mov pop fwait arpl out pop ds pop lahf divl loope gs add mov hlt inc mull mov fisub lods xor out push xor dec add lret ja mov jl jns xchg mov push ret stc and mov dec push mulps pop mov cs sbb in lods push push mov aam dec arpl leave lea mov mov push stc in dec add mov inc jae add add adc nop outsb push je sbb into add push jmp fwait jns mov outsb jge sti xor imul (bad) aaa fdivs shrl sub sub and jle mov push aas or add add inc push jbe jb dec and icebp scas sub xor lods sub xchg sub (bad) aas cmp push mov pushf imul pop cmp sub dec mov repnz xchg and (bad) jmp ffreep (bad) mov cwtl push mov les enter jge and jno fcompl int3 clc sbbl scas jge jns mov and add add add jmp outsb (bad) push lcall nop mov cmp mov lods cmp stc mov mov lock mov sub sbb pop int mov push adc fmull sahf fxch repz cmp cmp popa test call ljmp inc outsb or sbb call and inc (bad) mov inc aaa mov adc leave add nop or (bad) outsl insb ficom push mov push jo aad arpl popf mov add add in sbb cltd jo test iret fwait xchg mov push sbb outsl jno (bad) inc into ret popa movb and movsb ret mov add out push push jp int es xlat dec xor xchg scas cmpsl bound inc inc aam cwtl push inc inc xchg sti jb mov mov subb je xor daa dec and das xchg lahf sbb jo mov or jno jne icebp loop pop shll lret mov insl scas hlt push dec fwait jle dec inc push clc lahf ss ret sub dec sub hlt lret pop clc outsl (bad) pop or adc leave mov inc dec jns xlat jecxz xchg movsl dec rorl xor jle in mov sub push add sbb pusha aaa ljmp movl jecxz xlat roll ret mov sahf xlat cltd mov xchg cmpsb lea xor int3 xor add (bad) test dec mov test add dec ja cmpsb sub (bad) lea cmpsl pop cltd stos cmc xor out add dec fisubr cmp add fnstcw sub mov xor xor pop mov das in dec sahf icebp mov add mov sub sub mov xchg cmc ja data16 sahf add ljmp sub add je gs addr16 pop sub lahf jno mov cltd pop sarl rolb frstpm(287 daa bound in or addr16 fidivr mov and ljmp push (bad) mov xchg dec loop (bad) mov sub pop sub push loopne dec pop aaa and or push sub adc cmpsb dec es adc dec add jp mov xor cli sahf sub mov sub ljmp cmp sti lock push test push cltd mov and sahf scas insb dec cmpsb xor add add jle rcll fstl ret jo xlat add mov popf xchg sbb repz (bad) scas cld ret add sub lret and mov jo adc (bad) or paddd int3 clc dec ja inc add xor jbe lret aam adc sbb xchg out cmp hlt aas jne or call jne pop sarl dec pushf popa xor lret or dec cmp push cmp xor shrl sbb dec xchg fsts les jbe jne adc cltd mov sbb cmpsb test sbb or gs push ds xchg xorl leave sahf mov xor pop roll push mov lods je jno outsb sub insb jmp xchg sub jecxz,pn jmp add scas inc lock pmuludq fwait cmpsb cmp fs xchg dec jne mov int data16 gs adc sub sbb inc aam ret add addr16 jae,pt xchg and stos insb push xor pusha rcrb xlat ljmp outsl mov dec inc add jbe decl xchg (bad) cs fidivl jnp fdiv mov push add jae pop jge sbb cmc loopne icebp sbb aad mov or lods jmp dec (bad) test add lcall inc repnz hlt pop inc push arpl por jae lock das (bad) xor pop sub test mov mov pop data16 xchg add add and jmp js mov jecxz push xor out mov pop xchg in data16 fiadd mov sbb dec push sub mov push aas mov mov inc fstpt imul imul ja sub jb (bad) push fidivrl flds gs jle (bad) mov (bad) cltd dec push cmp push test dec popf (bad) cwtl cmpsb push call imul mov outsl jae mov leave adcl imul pushf es push sub test sti (bad) movsb insl sbb jmp cld jo mov divl sbb scas je shll fld clc repz sub jl aas clc je outsb xlat add clc stc in repnz cmc nop sub test and data16 (bad) push cmp dec aam jno add jecxz xor ss or cltd xlat (bad) adc (bad) pop bound jge dec insl push push add insl adc dec stc xchg adc shrb test push fcmovb (bad) lret or push jmp pop dec call cmp add cmp pop push shrl and sti xchg sbb cmpl jg cmp les dec inc add loopne cmp jp icebp gs movsb cmpsl sub mov xchg dec insl cmovae js push in add cltd das adc mov push test jbe idivb je or dec dec sbb scas dec or pusha enter cltd shrl in pop pcmpgtd fild mov cmp dec cmc cmp loop daa andb sub xchg mov addb inc jne lods ja mov clc push or (bad) cmp ljmp or mov dec push xchg jmp stc cmp lret add add out xor jnp push and and add repz cmc sti dec mov popf icebp jmp cmc loop inc out mov cmc jbe loopne lret lcall sbb sub cmp stos incb mov sbb cmpsb shll mov dec jo sbb repz addr16 push adc cmp push adc jmp out add (bad) ja pop lahf mov pop aad jecxz aad inc cs add sahf cld int3 jb add dec push mov fwait mov fistp fsts jno fnsave push stos adc pop or sub inc (bad) cmp les pusha (bad) mov mov push mov jno cmp int mov (bad) mov aad or loopne xchg adc data16 jmp out les or (bad) push sub repnz repz fisttpl icebp or inc fdivs mov arpl cmpsl mov add xchg arpl and cmc ljmp add pop sub add xchg bound imul mov jo push mov mov add push mov pushf sbb das inc in setl dec jo xor mov addr16 dec popf push mov iret rclb push inc xchg mov sbb (bad) fidivrl dec xor int mov adc cmp int3 popa add pop sbb xchg (bad) mov div into inc jbe popf add and cmp mov in imul mov cmp imul dec adc imull jge lret mov inc fmull cmp (bad) pop les (bad) and movsb or pop repnz dec or stos mov push hlt sub pop scas push movl popa adc cmpsl push movsb inc outsb mov popa jb popa sub stos jecxz add and cli sub xchg arpl les sbb lea (bad) stos dec in sub insl mov inc aad or outsb mov in inc push mov push mov sbb jmp in or test pop insb mov mov lahf ss jp mov push dec add mov jge mov mov mov int stc mov fcomps xor push test push (bad) xchg pusha xor adc add add inc xchg and aad mov mov cmp push sbb pop xchg sub imul adc fidivl lret cmc fsubrl lods adc add xor inc dec cmp or stos das loope and mov fsubrs arpl push mov leave cmp xchg stc out dec xchg aad es pushf flds and scas dec out xor into das add aaa jae xorb in loop add add out or stos imul sbb outsb movsb add sbb leave into mov imull cmp inc mov cmp insl int jge hlt hlt add sbb cmp pushl int3 fmull test lods icebp movsb mov sub pop test xlat les loop les jl add test lret out cmpsl adc adc clc jne xlat pop mov xchg cmpsb insl out out push push ljmp dec adc imul add sahf and sub aaa leave and cmp push jmp push shll sub sti push pop ret inc inc jmp mov jg cmp mov xor pop cltd (bad) and pop aaa jmp dec aas pop ret push call fs pop mov sahf inc fisttp push push adc int andl inc inc pop test xchg add add pop mov jnp movsb xor jle sbb lahf test inc add ljmp sub test pushf dec pop mov push mov bound or or sub (bad) int aam daa xchg mov xchg rol imul mov mov or (bad) jne push (bad) shrl lock enter gs mov in icebp sbb xchg mov adc push push xchg (bad) cmpsb enter je jnp and adc lds call or imul fidiv in push mov pusha (bad) cmp (bad) ljmp mov or and pop repnz pop inc shrl xchg and sahf loopne mov fs push sbb inc jae xor fld aas ja scas pop pop roll clc mov fneni(8087 insb mov adc rclb outsl jg (bad) loop sub pusha lea imul mov push subl add xlat cmp out in add xchg xor mov sbb xor in mov mov imul dec pusha push fistpl ret and sub or cmp pop mov push xchg mov adc jmp lcall jae adc and (bad) dec rcrl mov cmp and gs push pop ds cld icebp push jnp mov cmc je cmp cmp sub fwait mov jg xorl mov or clc pop addb ja dec push aas out daa popl add add cld es aas (bad) jae mov bound sahf xchg inc mov xchg into sti pop pop mov call or repnz cmc out jne loopne push shrb rclb mov pusha out add pop pop addr16 mov lret cmp sbb jo mov in sbb lods fs or (bad) or cmp fmuls push adc shr vhsubps mov (bad) lret test jnp repz mov dec dec std cli cs fcoms mov add sub push jmp lret je lfs imul add sub ftst ja inc lods (bad) jo lret cli dec in (bad) or jo scas push sbb imul test nop cmp sbb fsts xchg ds dec rorb (bad) ret iret (bad) mov dec jae pusha mov or lds push mov ja out dec sub cmc out into jecxz cltd out stos add sbb pop ljmp add (bad) decb fsubs dec mov insb pop pop test inc sbb push adc fwait mov pop hlt mov arpl cmp sub mov mov sub outsb in mov iret jbe lods mov addl fistpll pop and push nop xor push jns js mov daa (bad) stc pop mov loopne or (bad) jbe adc mov mov push hlt add add push stos push cmp push stos mov repnz in roll fldl cmpsl inc jns int out outsb sbb xchg movb aam and dec lret loop jecxz loope cld adc scas bound sbb ss nop pop cmpsb test outsb jne dec sub int3 imul jmp (bad) iret push push (bad) cmp data16 js fwait mov outsb cld ds repz mov (bad) aas ret and dec dec popf outsl push xchg add roll cmp add mov mov or sbb xor mov mov push (bad) ss or outsl dec jno aad std add inc jae cltd push push xor mov and xchg aaa jl fmull les dec loope dec in cmpsl insb mulb push fmul stos adc mov (bad) hlt ss pop inc add xchg adc inc adc (bad) mov adc cmp add in adc inc push out push addl sub adc and sub (bad) insb (bad) jmp push inc nop push (bad) fidivrl (bad) je sub adc push xor bound mov cld mov xor adc fcomip push pop pop cmp aam xchg out xchg jmp pusha icebp jns add sbb dec std bnd push pop (bad) pop fs pop divl mov aas jmp push push hlt sub xor xor jo push stos push mov push arpl (bad) xor sti and xor outsl (bad) fnsave xchg mov sub loopne cmpsb test jg inc and lret iret jl fwait push iret mov sbb sbb cmpsb pop imull int3 out jb mov test gs sub jecxz sbb mov sahf mov test adc hlt rorl (bad) dec stos pop adc (bad) sub dec pop testb add or aas dec adc outsl jle push subl in xor push xchg xor adc test (bad) (bad) gs adc and push sub dec stc lds fwait jmp addr16 cmp jno icebp arpl in sbb xor push pop xchg ja push mov jnp loopne lea xor movsl test mov push ljmp fidivr rcrl test sbb pop jae jno aad inc mov add add dec es push fimull sub out insl cmpsb outsb jne push out movsl outsb xchg out cmp shr pushf dec mov ja fcmovnb adc popa mov outsl mov xchg (bad) xor cmc je data16 movsb xchg mov pop or xchg push cli mov sub sbb xchg test pop decb pop add pop dec js stos mov mov pusha aad loope not mov mov (bad) daa (bad) jecxz ds arpl pop shrd add pop cmpsl pop mov xor and mov (bad) gs (bad) jmp clc add dec int push test lret (bad) das popa pushl dec lea or mov pop jle pop dec inc cmpl ss lods inc mov mov lods cmp in add jbe add test pushf in inc aaa cmp mov mov ljmp dec push sbb mov inc mov jae (bad) mov inc out mov or mov enter popa fnstcw outsb (bad) and push das rcl mov in aam inc dec ds dec stos lea sub push movsb int3 fwait (bad) in mov xchg iret mov (bad) enter shll push rorl outsl js (bad) hlt cs out adc adc mov or jge cmpsb sti pushf xor cs lret or (bad) sub test and xor jbe js add or and mov bound into int inc aam inc pop cmpsl lret pop fildll pop fidivrl push or leave int inc sbb dec inc mov add pop icebp xlat ja fidivrl into lahf lahf push jecxz or or leave mov cwtl scas jg (bad) mov int3 ljmp xor pop push xchg mov adc jo add mov cmpsl mov mov pop mov adc jmp ret in xchg cmp clc jge (bad) lock dec mov mov frstor stc fmull sarb ret mov xor in in rcrl lcall ljmp xlat mov add lods pop jl inc inc sar test arpl aad pop push popa sbb div mov nop cld mov sarl dec cwtl jae mov out ds sub pop push fisttpl xor mov lret out adc fdivl cmpsb mov or jne fstps aad nop loopne repz loopew pop cmp daa push loopne popa int ja push cmp and add imul cmp cmc add call shr dec and fisttp mov mov inc push adc or loopne jb dec inc or iret int3 sub mov cmp jle sbb or scas jge xchg in out push cmp add push jns popa lret ret pusha js dec es and orl cs stos lods movsb push mov dec xor decl mov jmp jmp subb push ss outsb (bad) test adc add imul jp das mov fwait in xchg arpl xchg xchg inc mov dec xor sbb sbb adc sbb cltd xlat cltd jmp in push xor pop sbb movsl xor test mov xor ret stos (bad) lea std imul xchg test dec aam test jno mov inc outsl cmp sbb sub pusha inc (bad) cltd sti fcoml (bad) fisub pop scas into adc ljmp lds pop jecxz outsb add shll outsb lret stc xor push pop into push imul test les jae xchg xlat ljmp mov pop aam mov inc js cmpsb lock out xchg xchg sub ret mov rclb mov js jg mov movsb in stos stc dec loop pop ret and lea fidivr inc sbb (bad) int3 adc shrl add fucomp js into mov hlt daa cmp out test sub andb enter xor sbb add mov and mov and push stos psrld hlt cmp dec add cltd mov sbb and in jno lcall dec cmp js ljmp mov loop lcall dec sbb adc fmulp or mov gs push pop int push std mov xchg imul add cvtpi2ps sbb std pmulhw daa lret xor adc loop xchg xor pop ficom sub mov fwait or add rol mov sub loopne dec push cmc popf ljmp and mov add jmp push imul jge lds inc cmp cld imul daa mov dec sbb push xchg loopne cltd mov mov xchg mov int3 bound add add mov mov aad inc and xor push in jae adc inc sbb mov mov pop push dec sub (bad) mov loop mov mov xchg pop pop sub xor dec cmp mov fist mov sub into jbe,pn subb incb loopne or insl inc mov je inc aam popa loopne or les pop push mov lea mov idivb cmp inc push fdivrs fldcw mov xchg pop cli or push iret sub dec xor dec pop push leave pusha push (bad) inc or rolb push inc test mov das pop lock iret outsl daa lds mov cld pop xchg insb pop mov jnp xchg mov das shl inc cmp and pop js (bad) xor mov jp xchg test (bad) push xchg f2xm1 cmp push call stos push in out sub mov (bad) inc mov jle and jo aam outsb inc subb xor dec add mov call insl pop jo inc lods (bad) ljmp pop pop push pop jae (bad) repz (bad) pop mov and (bad) xchg mov lods setbe jnp push push inc inc rorl rclb gs mov mov sahf jge mov jae sbb mov pop test shrb fdivrs aad cltd or hlt push add ja lret subl cmp pusha sub je outsl repz push push push xor lret sub mov and arpl lret mov mov scas sub and and push pop jns sahf sbb and sbb sub jmp pusha scas fdecstp push jno (bad) imulb sub (bad) mov rclb daa enter int3 (bad) rcll dec aam stos inc ljmp js jge mov add ds movsb fdivrs ret inc fildll sub dec mov fnsave ret fidiv or push bound sbb push or cmp inc dec orl movsb and clc loope or jle lods aas (bad) mov das cmp cmp xorl push jp pop or popf outsb dec dec int3 xchg and add sub cmp dec popa das insl inc out nop repz dec repz jp mov fcoml inc loop lahf lret js cmc ret jns ss jb rolb push mov lds (bad) xchg push mov mov mov jbe bound ss popa orl (bad) jmp sti add xor mov xchg sarb cmp cli xchg mov cmp rorl jg mov sbb inc out and icebp add mov mov lret into xchg int3 scas mov pop mov pop test fcoml fdivrl in sbb push sbb push std jge sti sub cmp mov out push xchg std mov dec andl push push (bad) notb out dec ret sti cwtl mov push mov cmc mov adc test mov add inc inc inc pop mov pop push ljmp sahf in sub lds out mov lahf out sub insb mov pop sti gs mov add (bad) jecxz pop xlat push mov add pop sbb xchg push mov or xchg mov (bad) xor sbb sti in mul or sar cs xchg mov add mov popa mov call out insb sub xor call aam push fsubl mov loop adc cmp popa scas cmp rol sbb test xchg mov lahf sub mov (bad) inc or (bad) sbb lds add popf mov pusha dec sub mov lahf outsb imul add dec psllw push lock inc xorb cmp je sbb ret dec mov jae mov or addr16 (bad) (bad) scas (bad) mov pop js fsubrs fdivrs cmpsb xchg aaa add dec sbb divb mov mov js pop fcomps in pop jle mov xor iret inc sub scas rcll inc sbb mov push xchg push push fdivp clc ljmp or repz mov lods adc lods lcall icebp inc inc enter mov pushf or imul adc fs lods jge cs push pop cmp mov popf fdivrs enter out mov lea jg int3 aam xor orl inc test push ja xor aad clc dec cltd icebp cmpsb ljmp mov jg popf popf xchg lret add mov or shr mov movsl mov call jo,pn ljmp pop fs sbb es repnz dec mov mov iret fdivrs mov lcall inc dec cli leave inc mov daa mov (bad) cmp lcall sub in lahf cs (bad) mov and mov or adc bound jne sbb out cmp loop mov lcall add add cmc push shl mov loopne rclb jge (bad) lret push inc mov into stos mov inc pusha test mov or jne fnstsw jmp arpl imul push roll aad pop sbb mov xchg loop lock mov test add dec sub (bad) into lcall pop test aaa and push dec inc xchg scas mov insl cmp arpl test sub fdiv push nop test add jne lea xchg xchg add adc scas test adc lcall ret mov and popa (bad) (bad) int3 xor les sahf dec jle dec test xchg cmp cmp sub cmpsb or stc movsl mov in hlt push pushf xchg mov scas mov cld jbe cmp scas mov and and or rolb xor and outsl lret fst cld es mull out out stos rcrl mov xchg loope cli jb std imul insl mov lea or cmc pop dec push das addr16 in lock push inc push push movsl int push decb mov shrl xchg push daa sbb scas or cmp or cs xor stos pop outsb arpl push mov hlt push outsl jnp data16 xor add iret lock jge mov movsl ret scas cmp je or (bad) xchg cmpl movd add add add (bad) fsubr and aad inc cmp mov jecxz pop jne scas push movb fstpl lcall shr lock lods divb std pop cltd inc (bad) in arpl gs xchg jae mov cmp cmpsb mov dec and repz aad and pop lret dec mov pop fbstp push leave inc mov jl outsl adc jbe sub mov outsl mov dec aam cmpsb sbb add push jno add arpl add test (bad) xchg mov sub lret mov dec mov inc mov cli jno mov out fist push iret jp adc ds mov xor and mov add and jle pop fwait or sar xor les test test sbb cmp cwtl dec cmp rorl sbbl (bad) inc insb in pop mov bound outsb loope push lock sbb test xor add cmp sbb ss adc shll repz loop test bound pop (bad) out inc sarb jnp ret inc daa mov jecxz sub ret in adc loop adc adc cmp stos jnp rcrb push addr16 sub int stos call (bad) cmpsl push lahf lods ret sub cmpsb mov jb in add test int mov ljmp notb pop push inc ror sbb mov dec add add movb fidivl dec sub das mov add sbb (bad) sbb lret jb imul stos loop push cltd stos lods mov and pop or sub cwtl fsubp lret xchg sbb inc lret mov and xchg not loopne movsl adc lret inc shrl or mov call in sbb out sub or fsubp jb stc adc ljmp mov sbb mov push pop js and adc add jae test je,pn and shrl cmc jge incl xor hlt dec add aad push mov scas mov push mov int3 lock or mov lock push out aad in pop jbe add cmp adc or cmpsl and imul cmp and (bad) divl mov loopne adc fs xlat mov mov mov sbb push mov js or cmp add mov (bad) idivl les jae mov jns rolb sub (bad) or sbb and mov sub testb dec mov negl (bad) push lea (bad) add arpl adc inc sub lds push mov cmpsb fdivl into mov mov ja and or adc arpl adc xchg xchg (bad) pop lods aaa mov js js add in les add lock push in ja push stos loope fsts rolb and jl mov cwtl stos mov lea or push and arpl cvtps2pi pop in aas gs jo fwait inc (bad) int3 leave bsr and cs or cmp ss jb dec lahf push (bad) mov sub xchg bound adc cld nop sbb cmp je fwait je pop roll add inc test cmp push popa jle sbb cmpsb push pushf ds repnz push jl inc mov cmp in push fwait aas xor sbb dec push enter cmc stos add lock idivb and push mov pusha outsb hlt push mov and push ret push insb mov stos add leave xor idivl (bad) jmp movsb fs xlat xor cmpsl lcall mov xor in wbinvd xchg inc std add add clc dec xlat push sbb bound mov pop ja into jnp lret or in daa gs mov cmc flds ljmp inc sub aam or aam cmpsb ljmp fdivs push jmp aam popa ss xchg mov cmp or inc jp cmpb push cmpl mov test mov jno xor mov and xchg fistpl (bad) dec add shrl add in inc mov xor or fiaddl jbe sub retw dec push fsts enter mov push xchg jp sub mov jb scas or sub les cmp mov xchg into pop sub xor mov xor test lahf push inc adc fwait mov dec fnstcw fxch mov cli xchg or jp sti adc add cmp pushf dec mov stos sub clc cld sti push or mov ret inc out dec mov dec mov test xor xchg mov (bad) mov hlt xchg inc jle mov mov adc stc outsl loope imull mov xchg add aas push xchg jp mov xchg clc data16 cmp xchg aas sbb repnz xor pop jmp sub movl xor add sub ret sub mov lods and dec rcrb push push fldl push ljmp lcall ror rolb scas dec aad xchg xor xchg mov jns mov pop inc das lods fwait adc ja into inc mov cmp jmp pushf fdivs clc mov mov subl (bad) xchg sub cmp in imul (bad) lret sbb incl inc imul or adc psubq jno jbe xlat mul dec in stos and lods pushf sub addr16 jns fisubl cmpsb cs in (bad) pop or xchg fisttp pextrw sbb lcall fadds push dec add fidivrl lods sbb sub jns lahf roll aad cmp jne mov jmp add aas mov shld or lds cmp or inc mov dec ret mov sub (bad) cld jg sbb nop add mov (bad) gs jo,pn out aam imul or xor sbb xchg mov cmpsb xlat mov out mov sub out (bad) ret xchg inc add push jae or fnstenv push out aaa imul popa push lret enter pop sub cmp (bad) sbb mov fldt aaa jne jno ficoml fs aaa lds jp lret add add push pop out scas cmp xor add lds mov testb sbb add cmp xchg test out into mov push sbb xor xor int3 cmp aas ret inc dec mov pop xor repz pop inc fistpl jno stc dec or xor inc mov out adc int3 mov enter xor movl inc push cwtl sub push push and (bad) xor mov add add scas test mov or pop (bad) arpl ret xor in pop nop loopne pusha popf dec fnstcw int3 out arpl repnz adcl cs addb sub div repz lret int sahf mov cmp ds xchg adc mov sbbl in sar jo notb subl pusha in loopne imul push ljmp leave push test adc test add add mov pop adc int3 lret sub add (bad) test mov mov sbb incb add repz (bad) xchg movsl push or test and test pop mov stc mov mov in xchg stos cld mov xor cmp fimull or aam jb imul fwait jg add adc cmp (bad) or stos out add push jmp or push rclb adc mov push imul mov sahf jecxz adc push mov ds xchg adc and cli stc pop push xchg cmpsb cmp xchg (bad) repz int jae and inc test jmp mov push loope jns add dec nop in and inc ljmp dec xchg fbstp jae idiv outsl add sahf adc or jbe outsb mov jge mov mov mov pop je xor add add add jp mov xchg mov or adc arpl sbb mov jecxz xlat fwait lock add adcb sub adc out inc test cmp out pushf or test cli sub and fcompl bound jnp cmp subl cmpsb xor int3 out push (bad) das mov jnp das mov sub sub inc pop or or adc mov ret (bad) ror bound iret mov cmp sub leave lret and cmp add and imul lret xchg sub sbb adc pop mov adc mov iret inc add jae xchg fldenv cmpsb es pop add pop sbb jmp (bad) loopne push enter inc into mov pop dec int fcompl aaa cmp pop movsl addr16 repnz movsb jge (bad) ss push outsb sbb and add add add xlat jae pop ds jge lods push xor xor mov and dec mov lret push cmp jmp repnz adc cmpsb dec outsb loop xor in shrl andl (bad) sub js inc mov fnop and leave mov inc clc mov jns cmp push inc je xlat xor fdivl ds mov out cmp mov dec and mov or repz mov pop icebp push pop pusha mov mov out inc jb push or outsb insl adc fiadd jge fiaddl inc cmp sbb xchg sbb call pop jle orl xor subb fistpl sbb pop xchg getsec inc xchg pop repnz xor xchg out lret mov adc jp adc mov cmp jo sbb fcoms jg bound jnp cmp push scas imul lea add add xlat mov movsb inc xchg sbb cltd shrl adc push es pop mov repz (bad) clc xchg (bad) stos mov lcall (bad) leave aad in sub xor add daa mov addr16 jnp sub xchg gs xor mov inc fdivrl pop or rcrl adc cli shll jb subl popa xchg sub in jnp mov or mov add cli aas lock or and cmc or (bad) xor mov loop sub pop jns mov in iret sbb fisubl mov pop jl and inc xchg imul nop in (bad) fistp sbb jnp inc cmp xchg mov jbe cmc fimul out and mov dec hlt cmp or inc mov or scas mov inc cmc cmp data16 sbb and and outsl (bad) repz lea mov (bad) pop pop dec adc push mov sub loope or aam subl sbb imul pop or notb mov loop stc (bad) sub xor xchg mov movsl popf cs mov xor nop addr16 fisubr push jbe push ret push out sbb jge xlat aaa imul inc cs insl jne imul gs mov std jecxz data16 repnz repnz mov ret (bad) mov sub hlt sub addr16 lods ret add andl ret rcrb shl mov in mov jp lods mov or adc and cmp or aam push dec xchg (bad) mov inc dec out xor or push lea test xchg outsl push idivb cld and mov push sub fucomi hlt sbb xchg imul and out mov ret jnp push xchg mov and mov jmp mov (bad) in dec sbb add out push out movsl sti jb xchg xchg sbb inc dec mov cs jne sub pushf push stos push js mov dec pop mov xor nop xor scas jb inc (bad) divb mov mov sbb or test sub fs push jecxz jl mov (bad) jl enter pop (bad) js out cmpsb leave dec xchg orl repz fstps or jns out sub lock sub loope push push cmc mov add aas add popa mov je mov mov sub inc mov mov cmp mov and out sub adc inc xchg xchg das jmp (bad) daa ss mov mov into cwtl lea mov int3 jnp cs daa pop dec and es add (bad) xchg jge xchg daa pop xor mov xchg mov rol mov insb jge sub lods sahf test je out fstpt call adc mov add imul sub cs jno,pn mov stc add push jno loope inc push daa outsb xor je mov xor (bad) push mov sbb lea ret pop push dec xchg mov jmp mov pushf sub dec popf (bad) pop sbb jae loope push xor out sahf and imul movsl or shrl aad mov jecxz push outsb inc insb das cltd les pushf cmp clc add add mov cmp add inc inc pop push push pop ret lret adc or add fldenv inc inc imul stos pop adc cmpsb or mov dec cmp and jnp outsl cmp inc fsubrs outsb add mov push dec addb jecxz (bad) repz mov xchg mov mov out or bound loope push adc mov add add js dec mov push scas mov or cmp test push (bad) mov movswl cmp pop sahf sub lcall jp inc pinsrw lret ret xchg enter clc in cld push js mov out mov daa packssdw cmpsl int mov sbb sahf mov push xor out add xchg div icebp mov in pop dec sbb jmp bound rcr mov add mov xadd adc mov push mov lea (bad) lret pop movsb dec pop adc in lock add fldl call xor outsb lret mov aaa adc and nop fcomps lock jb push push (bad) mov inc dec dec ja dec pop imul add or sbb dec mov jae adc insb sub or dec test test divl cmpb cld jns and add add add mov fscale call dec mov inc into rcl push stc or push test repnz cltd int3 push repnz paddsw movsl iret jno das jl pop popf add mov (bad) xor mov mov xor decl sbb mov mov pop jge int3 cs andb and xor or mov lods into cmp push inc (bad) inc mov repz pop pop jmp push popa sub sarb push dec scas incl xchg sub or push int outsb lret inc daa or inc mov cmp jge in inc scas xchg inc dec mov stos es xchg fldl xchg jbe push imul nop mov fmull push ret ret xor int pushf mov ds ret popa dec cmpsb mov adc cmp rorl (bad) mov jbe popf clc and xchg add cmp xchg xor mov xchg jb in les jo adc rorl ss imulb cwtl add add mov cld cli out or mov scas sbb ret sahf call fwait (bad) mov sbb lcall jae add or jo pop das bound jp push hlt cmpsb imul inc scas (bad) popa fsubs sub sub adc adc cmp sub int3 mulb loope inc cmp mov mov cwtl (bad) xorl cmp push out call stc mov and inc xchg popf scas dec inc mov cmpsb popw test inc fcoml imul push or lods pop aas add test loop jp fmuls aas aad lods repnz push je lock dec lcall cmp sub and sub adc sbb jns cmp arpl repz cmc sub adc lret fbld lds push add pop dec mov imull mov add lds cmp add add lods or sti pop sub addr16 ficomp notb jne loopne cmpsl cwtl pop xor push mov stc xchg dec gs jg inc mov (bad) mov nop inc cmp sbbl idivb (bad) jae (bad) sub adc imul movsb xor sbb sub jbe jo pop cltd xlat and or mov dec and loop push stos adc mov cmpsl std imulb loopne add imul add jmp adc xchg fs shrl int3 loop mov je ret and xor push push or popf sub mov cmp xchg jl pop rolb prefetcht0 inc push and imul jecxz clc push stos pop fcmovb or xor jecxz clc inc dec jbe outsb adc enter jo mov cli mov or sbb inc js ljmp dec das mov ljmp ja cwtl (bad) sti into or add out nop inc cmp test adc cltd mov xor imull cli test fildll push les mov test cmp jmp xchg jl add mov (bad) out stos jge push sub xchg imul int dec dec xor push xchg adc gs jbe push test out cmp jno lods les jnp sbb test add imul add add pushf and push dec sub push sbb push loop loope test xor movsb in add inc jge movsl loope sti adc mov mov int3 sub (bad) aam xlat lret int3 pop scas ret and mov jo test into je mov out clc sbb outsl adc arpl and out adc out adc xlat cmp lret add rcrl dec pop (bad) mov push pushl add daa lret into jle fdivrs pop sbb cmp jp add clc daa fisubrl cmp (bad) mov cmpl lcall xchg and xor cmp sub mov cs mov inc pop mov sbb daa in push jb cmc mov sub js sbb scas mov mov (bad) hlt mov pop mov jl daa pop cmp jmp fisubrl cmp xchg ror adc faddp xor idiv (bad) jns xor outsb out fwait xchg scas jp adc loop aad jmp cmpb or std xchg xor inc adc mov sbb fstpl pop xchg loop mov enter cld hlt addl adc aas and test aad or arpl jmp xor xor add inc data16 push sub sbb (bad) sub subl mov (bad) out (bad) insl bswap mov adc mov pop in cltd test mov sub jb inc sbb lret test xor push dec jecxz loopne or push xorl mov sbb stos (bad) roll (bad) insb push je mov or cmp mov fildl add cli (bad) shl fstpl inc std add xchg out lahf cltd cmp adc inc cli jbe lahf ds or sub add (bad) sbb cmpsb in sbb call cwtl sbb sub roll push leave test (bad) mov test fild call inc or mov stos test xchg rcl mov (bad) out cwtl test sbb mov pop sub roll pop (bad) (bad) add in dec fdivl ret add add sahf inc xor dec lahf loope (bad) (bad) sti (bad) inc (bad) jb xchg add repz mov imulb imul jl push jge loop sub insb inc mov jb adcl dec mov xor dec les shll inc inc mov scas ret aas pop push (bad) lahf out xchg cmp rorb jmp mov pop out mul aaa or xlat jg jb es sub clc adc or outsl xchg xorl frstor jmp mov repz scas into push xor or test inc push jne pop stc sbb (bad) aaa pop xor pop es mov nop imul and lret cmpsl jae insb mov sbb clc addr16 dec mov mov mov and rcrb es ss mov lea jl push add ds pop mov and gs xchg dec mov add push inc adc daa mov ds roll push iret jo xchg mov adc lods lret sbb leave rcrl xor notb mov bound lret xor mov jmp frstor rcrl scas stos mov mov pop dec jno lock mov call jp push dec int3 enter fldt incb add cltd xchg add sbb xchg or iret stc inc sbb inc fmuls push lret dec jecxz sbb xchg xor cld pop sbb mov ja adc mov outsb (bad) jns fidivl sbb dec or out lds push pop popa push cmp test push out int3 pop fwait movsb imul pop sbb rcll lods (bad) repnz jle in leave outsb scas push mov dec lcall ret inc std rcrb add mov sub stos outsb sahf imul insb mov sub and inc sbb or scas push push adc clc add (bad) repz test sub scas sbb enter jns jmp dec (bad) jns sub mov sti cld cmp clc test (bad) xchg pop shrb pop or and fisub adc fxch sub (bad) mov gs fdiv sbb xchg mov push subl adc test lcall add add in dec rcrl lock rorl iret ds nop scas push mov das imul jns mov sbb push push xchg fldenv mov fldcw test enter push cltd or lea jns push mov bswap ss lea sub fldcw (bad) loopne movsb flds sub dec dec mov or fdiv leave ss es pop enter das arpl sti dec mov push xlat add mov (bad) cmp repz mov dec cld bound ds test inc or add iret xor dec insb shrl popf into dec repnz repz dec (bad) mov imul add stos ja daa add xor call std and jae in pop sub jbe aad pop lret inc pop in loop push mov sbb dec in cmp push or ss push cmp repnz rcr push pop loop aaa add rolb add add add cli insb jnp pop lret cld push into xchg inc (bad) jp mov push outsl pop loope sbb addr16 jb jge stos push loop mov out shrb xchg dec loopne mov jle xor lods lcall xor xchg pop mov hlt adc ljmp mov or hlt aaa out (bad) lcall test (bad) mov mov adc adc nop mov and mov outsl pop lret adc lcall and bound pop and data16 fstl (bad) negl scas pop xlat mov jae mov pop xchg cmp xchg cmc test nop dec in addr16 les les ds xor mov not and xchg or lea mov cmp xor jns ljmp into fwait mov sub push dec (bad) jb out in fwait icebp shll js aad adc mov push cmc js stos outsb cmp bound add add enter negl lods addb xchg test mov add mov sbb push das jo lret jne stc cmpsl pop mov repnz inc mov or (bad) mov cmp test add std and insl and inc cmp mov insl xor mov dec ret pop xchg xchg xchg pop mov insb out pusha mov or (bad) pushf loop push loop mov fdivrl cmp (bad) movsl lcall push mov add xor mov arpl sbb lea mov dec jb inc or pop (bad) dec mov and data16 dec mov mov in pushf sti pop call enter push stos adc ret inc push and jg,pt outsb in fsubr out jae mov test lods xor lcall enter inc jle or aad pop jbe and mov outsl pop int3 pop out test je xchg fmuls cmp xchg mov ds xchg movsl leave cmpsb es mov sti aad add cmpsb repnz adcb bound lock mov adc inc scas ljmp cmpsb iret adc iret cmp stos pop loop adcl popl and sbb aaa or add lock push mov inc mov enter test xor fsts cs mov mov je lcall xor and lods jo xor add jae lret aas xor test mov sub loopne insl popa adc add mov and jb (bad) xchg sub dec sbb jae outsl out and dec lds movsl lock lods lods mov mov mov int pop je js fcomps in or aaa mov shrl dec lea adc jle xchg pop in mov and out pop push hlt adc std dec int3 mul (bad) scas push or pop lea iret clc add add pushf inc outsb dec loope mov dec dec pop js test inc pop ja into mov jecxz test xchg shrb sub push sub dec mov add jmp int3 add loopne inc push enter iret call imul in push into mov push (bad) adc imul and popf mov jecxz mov pop dec jo or inc dec inc jne mov mov jmp (bad) dec test cwtl jne insb jae add add (bad) mov scas inc pop jo jb sbb push aad dec jle lret sbb adc test les push (bad) sbb jnp and arpl cmp iret mov mov sub les lret xor cmp pop xor add mov inc imul pop (bad) mov lds pushl inc test sbb adc stc push add jo pop sub mov je outsb or add add inc sbb ffree jg and sub ret cmc loope iret lock sbb rorl cltd aaa xor sub fs add loop push int3 adcb mov ljmp nop sub mov mov sti jmp mov xchg dec movsl scas (bad) fimull jo scas mov aaa sub and xor pop xor xchg ficoml push pop sub and pushl dec in into pop in out sti add stos jbe jbe sub mov fimull test pop xchg push cs mov push (bad) mov sub mov cmp loope sub sbb scas or stc (bad) inc xchg mov bnd push jno ret (bad) xchg mov pop rorl adc dec inc xchg lock mov or pop jnp mov stos inc dec lret ss xchg adc pop cmpsb out iret sbb aad es cwtl (bad) jmp cmc inc bnd xor dec add mov pop sbb lahf sbb insb lods xchg int lret push insb and pusha xchg icebp sub sub inc clc ffree fnstcw enter scas mov adc xchg and fisubrl (bad) cmp lds (bad) sub (bad) jecxz and or lds cli cld call sbb stc (bad) fdivr pop popf addr16 mov or jb mov out inc outsb adc add add pushf jmp ss les add or je cltd dec xchg (bad) int mov mov sbb jg aas mov cld xchg mov bound test cld xchg jbe stc cmp dec scas lahf xor add sbb (bad) mov addr16 jo out aam push rcll pushf xor push jmp incl sbb (bad) lock lahf stos addr16 out add cmp std sahf and mov in dec icebp sbb lahf cmp jo push loop add add pop mov pop cmp lahf dec dec loope mov lods fnstsw das out shl es jl pop outsl xchg cmp mov test fimull inc sub sbb jmp dec insb push dec iret dec jns mov scas sub xor aaa lea or mov movsb and ss xor pop pop (bad) lcall icebp sub aam pusha xchg dec cltd (bad) aaa or rclb xlat mov mov lods sbb push sub adc push aas jmp sub inc (bad) movsl inc xchg mov (bad) jae outsl scas popa arpl push pusha push xchg add in ficoml xor (bad) pop lahf enter cmp dec add movsb adc sarl adc divl cld popa lock pop push shr hlt loope mov decb xor aaa stos test xchg jae cwtl push mov sub inc in xor adc jle inc mov cmc dec aas repz cmp add add lret xchg mov jo mov cmp cmpsl add jns push mov ret mov lahf idiv xor int3 mov sbb popa jnp movsb int mov xor test and dec repnz aaa ret gs cmp xchg xchg inc pop fs jle sub jo mov fisttp add and cwtl dec test rolb in dec je leave xor nop jns and xchg cmp inc add add jmp test repz test loop push fwait jne int3 sti stos inc cmp pop cmp outsb lret aad add outsl push inc leave je push into sbb fs pop iret or xchg movsl rorl hlt dec push loop jmp rcrb repz push aas inc scas add xor outsl pop fstl cmc jp jo xor jecxz sbb and loope and vmwrite rcrb sub stos fwait cmpsb shrl add add (bad) push fnop mov dec inc insb mov mov popf push add mov ljmp (bad) (bad) push lret cmp stc jle pop lods inc les cwtl (bad) mov in ja pusha hlt int3 mov lret int3 lahf mov push jne adc (bad) jp sti sbb rcll add mov (bad) out insl xchg xchg lods xor mov cmp push push xchg push xor pop fwait pop call mov push add adc pop pop jg pusha add push add test xlat add pop xchg adc loop stos ja (bad) sub pop jmp cmp (bad) sbb les fucomip lahf mov dec pop movsl clc jne mov push pop iret mov subb sbb add pop std jae (bad) xchg loop outsb mov cmp scas mov mov je dec xchg sub mov lret sub out mov dec inc cltd insb xchg out sbb pop add pop add mulb fxtract popa dec js sbb cmp mov fldt mov jns add out jns stos mov inc in xchg inc jmp jecxz outsb inc dec sub movsw sbb xchg and jnp negl mov or out xchg repnz nop xlat push pop inc sub jmp push push sub scas mov insl cmpsl movsb adc adc ficoml cmpsb mov add xor bound mov jg jmp icebp ror mov or out jle pop cmp ret adc and add fdivrl aam xor xor pop sub fisttpl or add in ss mov rcrl cmp in test cmp mov xchg mov es and insb (bad) lock pusha pusha arpl pop dec push (bad) loopne sub das ljmp cmpb insl add jg xor pop dec xchg das or sar out sub fcompl jmp lret mov ljmp and in push cwtl pop negl xchg test xor xchg imul in insb clc je mov cmp rolb bnd add mov lods sbb cld gs pop jae push test mov jmp popf mov mov or jbe adc cmc js cmpsb test jecxz mov loop push inc aas and lods pop nop mov xor add mov or dec gs stc inc push insl push aad cmp cwtl and ds adc in js adc cltd add cmp jae adc sbb mov mov dec mov imul insb jecxz icebp or pop add pop scas inc test push stos cmp add flds insb add aaa lods repnz enter push mov pushf out imul je inc sub pop lods test pop stos stc test ljmp push nop add add mov stos imul adc and mov imul xor mov xchg xor mov jne jecxz jmp fild (bad) hlt scas mov inc push dec mov cld or (bad) adc repnz bound mov lods sub repnz lds or in fmul xor sbb jnp push pop mov pop outsl pushf js jns mov mov add add and cmp std push cmp jnp in cmpsb jne dec xchg xor xor push mov xorl cmp adc clc xchg stos enter cs push lods jp adc lgdtl in push jne arpl test test lcall (bad) ja orl imul (bad) jno jg xor decl jg pop pop mov test add mov sarl add add and dec test jge adc cmpsb aaa mov fwait cmp jbe repz lret int3 xchg mov mov mov jmp jle in rorb icebp aaa pop cltd lods lahf mov sub icebp mov inc cmpsb xor rol adc add or xchg push out push rcl rorb in jno lods xchg dec sbb xchg add mov add mov lcall or out andl add dec dec scas stc dec push inc cs clc cwtl (bad) clc sbbl lret mov fistpll repz negl jmp sub (bad) lock mov dec or pop out loopne jge,pn in inc stos lock scas notl les pop lock jg lods les cwtl jl jle cwtl or pop fbstp inc fcmovbe and scas inc outsl mov lock outsl ja lods xor imul sbb iret cmpsb add mov push dec mov fwait cmp lds fdivs out pop mov jmp pmuludq mov mov xor lahf jnp mov loope hlt ljmp cltd hlt es popf jns mov out push pushf cmp jb (bad) out (bad) mov jno push (bad) lock push (bad) rclb cmp and mov leave in pop movsb sbb dec ljmp xor mov pop imul add add outsb insl sub xor ja inc movsl xor fnsave sbb cltd ljmp (bad) add pop inc pop stos ficompl jecxz mov (bad) aam in sar mov jmp sub push lods sbb sbb mov push in inc push xor test inc icebp and dec daa xor sub lea (bad) mull dec mov push int3 int inc or cmp add je rcrb popa lahf pop pop movsb jno enter into fcompl out cmp adc cmpsb mov dec mov xchg jge sbb imul fnstsw pop mov into icebp sbb loope push xchg cmp xchg sti xor das xchg movsb add sbb jbe jne loopne idivb cld das or pop lock jg lcall pop mov push mov pop pop push mov test push pop fistl pop jmp add add push inc imul mov cs rcrl lock nop adc add and jns sub fbstp mov loope movl push cmc lret sbb fidivr js idivb aad and mov sub lds mov sub fidivr xchg pop xchg xchg mov test lahf xor lret les (bad) or (bad) scas xlat mov incl mov add pop fdivrl xchg lcall enter push scas jmp adc push jg jae or les jnp pusha pusha out pop dec repnz mov ljmp push in and leave insb xor loopne dec dec mov sar lret or jo and jo ds jbe cmpsb pop imul iret into sahf addr16 into pusha cmp idiv lds sub push mov and jnp lret mov popf lahf popa cs lcallw push orb add cmp pop (bad) jmp faddl leave adc xor (bad) jecxz sub gs push xchg jo dec push dec xor mov loop inc xchg xchg pop pop mov xor jl adc xor pop int insl fsubr mov and mov fwait pushf mov data16 jecxz sti cmp inc pop push push xor and movsb aaa jne mov and mov mov dec gs lock dec mul pop mov mov fsubs mov add xchg int3 cmc movsl int mov in cs mov bound jne out mov dec xor dec iret sahf dec fldcw out lods out pop add fcoml pop dec gs push das adc xor fcoml movsl movsl mov scas lret aaa cmpsb (bad) in sbb jle bound or hlt jecxz iret xor jb testb push mov iret and ljmp fisttpl orl inc jl mov add jae jmp sub fdivl xchg (bad) incl jne test repz mov rcrb xchg aaa das dec push in adc mov movsl insl dec mov push xor xchg push push mov pop rol jb inc pop dec push or jecxz rcll gs lds daa out and cmp mov add pusha enter repnz add cwtl lcall adc push jl scas mov sbb adc lods add addr16 clc popw les out push cmpsl or jmp cmc add orl xchg (bad) push addr16 inc insl sub (bad) adc clc push rclb sahf add sti xor inc pop mov popa xchg xor popf mov fwait push push and inc jb push ja fcmove mov cli sub in out rclb dec out mov cmp and int3 jp jns (bad) fstpt xchg and adc add and cmc sbb popa jp xchg mov sub in cmp and inc iret pop insb and xor roll push xchg (bad) in movsl push imul cli cltd jnp popa (bad) cs fwait and fwait or mov xchg cmp inc pop mov inc adc repnz loop dec cmp dec sbb xchg enter sbb cwtl loope jns pop data16 out negl es add add and adc pop cld mov push pop mov stc jne pushf fsubs jle in mov xchg popf xor push inc gs adc int3 cltd fcmove xchg cmp push jnp and test or xchg scas ficompl xchg and lods mov pop mov lret test push xchg in jp mov imul adc fwait ds cmpsl or push inc jmp nop movsl test or xchg inc hlt dec popa in sbb adc ds int mov mov popf mov mov sub jne fsubr pop mov or mov call test icebp and push lcall sub sub cmc movsb add gs add mov jecxz pop shl sahf div cli sub adc es dec dec popa int3 test cmpsb (bad) negl and cmp jge mov (bad) (bad) dec sbb jp in dec sub xchg inc aas ret sbb add test pusha dec out jbe jl cmp test aas push shr inc inc out daa xor push lods lahf sti xchg imul adc cli inc xor outsl es xchg mov ficoml push je pop push outsl push (bad) (bad) (bad) mov das add cmp loop mov push push shr xor adc sub push ja arpl sub scas mov pop (bad) mov xchg stc pop fstl in aad push loopne fdivs stos repz out pop inc outsl xchg outsb xchg ljmp add std scas dec mov inc ss push shr clc jp fistpll into leave xor cmp mov or lret loop pop xor xor adc pop xor or add add xchg fildll sar mov ss mov xchg lods out andl cmp mov je clc inc lret and incl invd push cmp jno aaa lds dec sahf pushf cmpsb sbb ja (bad) scas pop xor pushf movsb dec jle fcmovb xor (bad) add (bad) jl inc sub mov adc xchg xor (bad) xlat insb pushf cmp ret sbb and mov (bad) sub cmc inc lds jmp sbb sub adc mov mov dec stos mov mov das divl adc add pop test in sbb movsl rcr sahf jmp pushf xlat xchg sbb lods jmp sub push (bad) pushf add mov sub add add imul and sub int3 dec mov gs push push into and stc out sub and cmp mov je sub cmp (bad) pop dec lods and es and sub push xchg mov cltd rcll (bad) pop pop js xchg imul jmp dec sub cwtl or out and and or or push add dec mov mov cli es xchg movb and jl inc xchg mov iret xchg sbb xor ret stc mov or ja (bad) rcrb inc jle lret cmp and mov cli push or dec mov lcall xor push sub push aaa and js xchg mov lahf xchg sahf sub das push stc fwait jo addr16 daa pusha pop dec push dec test push int3 ror fdivp imul aaa das cs cmp incb add mov push pushf push inc cld notb mov or add call jl leave sbb mov movsb or sub adc jge sub je popa inc pop cltd (bad) (bad) mov repz jg cmpsl orl (bad) or aad loopne das cmp popa hlt icebp outsb sbb ret push paddsb aas popf jne aas jmp mov pop xchg adc lock aas stos dec mov gs dec mul out mov in sti dec roll add and (bad) loop js imul (bad) popl push rcrl nop mov xor aaa xor inc push mov iret mov scas cwtl jae popa mov rcl ficomp inc xchg and int icebp leave fimull sbb enter fdivr jo mov dec (bad) mov pop push dec (bad) into (bad) dec mov jge inc mov pop in mov (bad) cmp aaa xor aas leave fiadd fidiv dec loope add fimul call ret loope xchg or adcl push xchg sti mov and ficompl mov (bad) sti mov out xchg (bad) fiadd push pop movsl jle int mov or stc lahf sbb ja mov mov push xorl adc pop xchg lods repz repz loopne mov sbb mov fwait push dec fxch test xchg popf jmp jb (bad) mov scas in (bad) cmc and add add push cltd outsb dec add pop sahf adc cmp gs and and ljmp xchg push mov lret cmpl fwait aas and jnp fiadd sbb inc shrl ds rcrb lret sbb push outsb mov jno call nop lret jb mov push push jmp mov adc add sbb and cld push rclb mov out imul scas add rep sub mov push push or inc in movsb inc popf cwtl outsb out call idiv daa loopne mov dec fisub jle cmp push inc mov mov sbb push cmp in lret push sbb xchg or inc enter cmp jnp (bad) in jmp mov std jle inc sub adc clc je andl stos test aas shl ret bnd ret out fisttpll xchg push mov repnz pop or loopne sub popa cwtl out xchg popa add jns loope add cmp or (bad) cmpsl test pop pusha in jb xor pusha push jge xchg cmp xchg mov and fiadd idiv call cmp and jne rorl push test push out mov cbtw sbb sbb xor jae insl sbb push mov dec cmp addr16 sub mov adc sbb rorb sahf dec adc aas dec adc sub add fsubrs rcll add int addr16 jno aam inc jg or icebp inc pop pop add test test enter insb cmp out fcomi sub pop add sbb ss push and imul sti xchg lea mov mov jp movsb inc jecxz xchg and shr and frstor call into imul lret loopne (bad) repz or sbb add xchg hlt push lds (bad) icebp adc add inc movl (bad) xor iret gs pop clc adc push call xchg mov dec mov xor sub cmp mov jbe lea xchg xlat insb add clc sbb out pusha xchg fwait jp sbb nop out inc test (bad) ljmp addb adc sub lds int3 mov mov add add shlb mov mov cmp es or adc inc mov pushf push sub sbb mov jno or mov lock push pop mov or mov out push cmc mov movsb (bad) test sub dec and insl enter sub outsb stc xor push sar lea xchg and jo dec pop inc gs push (bad) push and pushl and imul add je lret dec cltd aad popa xchg test jl lds aad icebp fstpt mov mov cmc or and in xchg jecxz or fwait stc xor lcall mov gs out ss add dec inc add fs pop lret push imul or dec lcall mov sahf and movb lods rolb and xchg pop js repnz xchg arpl sbb push in aaa mov push xchg push add cmpsb or sub loop ds sbb xlat sbb fnstsw xchg outsb enter leave jge icebp loopne xlat add pop nop mov pusha push push shll stos xchg inc movsb into rorl sbb icebp into stos stos outsl cmp pop in lods and mov clc subl jle,pt mov shll sub add cs je popa and cmpsl ja push dec xchg sti push push sti xor dec sub ss mov push add mov mov (bad) cld fidiv mov enter je mov test lahf into mov pushf fsubp fbld pop aas in push imul and fiaddl pop leave xor jns inc pop (bad) out push add jl and pop adc insb fnsave loop push sub push out add fistl mov popf mov fs dec or or jp add add xchg adc push mov jecxz push adc pop movsb cmc ljmp dec dec ds pop ljmp cs xchg daa out pop cs loop adc cmp sub or xor int3 pop mov jo lret sahf lret pop pop pushf jle pop in ret add mov dec jo cmp mov mov or cmp inc inc inc mov mov cmp out std (bad) into inc sub cmp add dec in frstor stc pop (bad) repnz or adc pop cmp sub (bad) in fcomps dec jg sarl pop sub mov and sub push out vmovntps and pop pop add push pop loope push movsl int adc aam push or in imul in insl pop push inc adc imul je icebp mov aaa dec fisttpl in pop pop fstpt push adc adc add add mov lock in add fnsave in mov mov mov cmc sub and jle dec lret int data16 (bad) jbe hlt ja inc xchg nop aam outsl pop ljmp mov (bad) sub dec inc movsl pop imul mov es call cwtl sbb adc in pop jmp bound pushl out add inc hlt xor cmpsl and mov pop xchg das lcall data16 add sub push push inc mov mov push pop ficompl je push mov int or mov or in inc aam cmp aaa dec push sub push inc icebp jge neg aaa cmp inc push sbb lods mov (bad) mov inc jg xchg inc jle or push clc push orl clc stos cmp and rorl imul push sub clc adc std jg xchg mov xchg lcall add sbb stc xchg fninit (bad) rolb cmpsb jbe mov lds mov sub mov pusha dec stc je add scas push (bad) fisub (bad) add leave and arpl cli int pop sbb inc mov in cli cld out ja jecxz decb mov notl mov xor out aas ret nop add mov inc mov mov xchg cmp rolb mov sbb dec sahf jmp cmp add (bad) fiadd outsb in and mov inc aam ja call dec clc cmp fs (bad) outsb test popf orb insb mov lcall cwtl shll lds adcb fwait loopne test scas xchg outsl sub jns xchg add test mov or add imul adc ja cwtl add push and rorb and or (bad) cmp push imul xor (bad) add add add inc add sub cmp dec out mov lds je and xchg sahf ds mov aad xor mov ss scas mov cld mov repz (bad) xor push jb addr16 pop add fst mov xchg mov and lahf nop and sbb mov cmp pminsw pop call rclb cli xor clc jnp or rcll pop sbb mov hlt in imul (bad) les add add jae ljmp jno jge sub sbb pop ja jne add sarl push inc xchg xor or cltd and mov xchg ja mov bound shrl lea out inc mov fsts xchg fiaddl jno push cli inc je (bad) jae adc std imul rol and mov pop dec std int or aaa divb dec push std xor add das push and cld pop imul (bad) xor adc insb mov and jmp jp mov push decb mov pop dec out xor out lds addr16 cmpsb test or popf xchg sub add negl mov ja lock int pop push sbb insb clc sti mov add fildll or mov daa dec in aaa dec daa (bad) dec or push adc xor (bad) mov add pushf lods sbb hlt cmp cld repnz pop pop jp add les jl fnstenv inc inc mov mov loopne mov cmp cs ss mov mov add clc ljmp outsl and imul clc mov lahf mov ds cmp and dec pop push stc sub add xchg add push dec and cld lea ret mov scas cs fs repz push ficoml push jg add pop out movsb idivl fdivrl aas ret or sub push orl je ret (bad) jno loopne je jmp or in sub mov sahf xchg jns outsl aaa test ret hlt jnp (bad) jae sub mov aaa jg mov insb mov push adc rcr (bad) hlt jne mov dec adc mov clc adc mov mov jno ret jg mov ja xchg roll in sbbl cmp or pushf das push aam or mov dec lods into inc sub xchg pop je pusha mul aam dec add movsb xchg pop aas ret mov push es pop out cmp cmpsb jmp adc xor xchg cmpsl lret pop lret inc sbb xchg jmp mov insb xchg in push lods sbb hlt add loop pop xchg sbb lds (bad) iret jbe or jb arpl les mov adc add ja mov mov aas push jecxz sti or jl inc mov push xor cmc ds ret scas mov pop push push (bad) jo pop ds int mov pop sahf xchg jg ljmp bound jbe mov mov jo and rolb xor push inc cmp movsb jne mov inc jge lds imul hlt pop (bad) sbb or jge sbb jl cli dec movl dec sub inc cli subl incb add add adc mov lods repnz stos and (bad) lods dec arpl jae mov into ja jnp cmp adc repz push mov js sub or aas jmp iret jns cltd out sub xor dec sbb and ljmp fs (bad) out sub inc dec mov push mov or out mov aam mov cli aam mov (bad) xor and cld das mov paddb je,pn pushf test cmp sahf or cli mov push ja sub push int int3 cmpps xor aas cs pop add mov add or sub xchg popa xchg incb or lret rorl pop shl pop jb cltd dec xor popa pop pusha sub pop xchg xlat or xor and loop repnz mov loope xchg push fstps push in lcall add (bad) dec fadds or shr add sub push push or aad mov icebp in xor or stc ret or push mov or sbb push adc ret pop insl sub cmc push xchg scas xor in lods fiaddl fdivl int or clc das les push les cmpsl out push adc stos in pop sbb jg,pn jns pusha repnz popf lock sub sbb daa jns lds and movsl arpl add adc xchg inc mov into jecxz and xchg mov loope jg nop dec aas in jns mov call mov sub jbe in dec or in in pop sahf or push je mov fcompl int3 iret insb xchg or repz ret shll incl jbe cmp ret stos xchg jb adc and lods mov bound and lock inc cli (bad) fisubl add and loop es dec and rolb into gs xor faddl mov movsl mov sbb jns les xchg pop daa mov mov mov popf mov repnz rcrl jno sub scas iret scas enter into cmpsl add pop enter sahf lahf insb mov pop in movsl cmp xor pop dec xor imul lock movsb sub ret dec xor std arpl dec ljmp add add data16 pop and fucomip cmp outsb cmp adc mov imul pop (bad) lret xchg aas pop es in jno dec popl and pop push inc fnstcw cltd loope cmpsl jle pop inc popf (bad) dec mov push (bad) mov mov test cli js or les mov push in fisttpl mov (bad) nop (bad) pop and stos movsb push out mov inc outsb loop fstpt out pop and mov outsl add int3 mov jns cmp add add test ss pushf xor push cmp ds adc cmpsb adc or insl lock adc (bad) outsl mov movsl xchg rcrb jp insl cltd cs (bad) jmp notl fnstenv outsb (bad) add mov pop push sbb stc ret sbb push mov mov sub mov daa dec push repz mov dec jae dec jnp dec aaa or or stos dec ret (bad) insl push add rorl aad add or xor jno es pop insb xor lret scas mov push ds mov xor scas mov and and push out les dec xchg data16 cmp mov mov bound xor lock mov dec xchg invd div push fimul and push jmp sahf mov lret clc push push sub add arpl nop jbe sub test add and stc icebp sub xchg (bad) mov cwtl dec push cmp pop sbb mov rcr pusha jmp (bad) fild aam inc xchg mov sub jmp dec dec xor cmp in and sbbb sbb adc inc inc stos es mov mov (bad) fildll test jmp push fldenv add mov scas shll jb or sbb jb dec setns add add test into inc dec lret push mov sub sub in inc mov arpl pop push out das mov movsl fwait xor xchg add mov pop insb dec arpl pop (bad) mov or sbb jg nop cs sub sbb xchg xchg cld push out pop fdivrp jae and daa push stc add dec and mov cli in and daa cmp fldl sub push jo insb add xlat or jnp add mov cmpl ror add cmpsb test movsl inc out adc out call int sbb nop cmpsb into (bad) int into in sub clc cmpsl loop mov and loopne xchg lcall dec into (bad) jle stos mov inc xor cmp fnstcw cmp scas push mov sbb (bad) mov loope mov xor adc outsl xchg clc ja cmpsb mov cmp jl sbb add imul jl in jnp sub inc jl sub inc cmpsb sti movsb frstor or push cmc mov adc ss jg sub aas mov cltd aam cmp sub pop in cmpsb lret sub jl sbb fimull loope (bad) sbb xchg nop cli data16 add popf loope outsl pop hlt test mov dec movsl mov jle sub cmp adc aaa test sub add pop lods jl sub dec sbb pop jno adc push shrl fs xor sbb lea pop xlat aaa fxch or cmp repnz and jo sub insl cmp fstl fistpll pop push inc push cmp cmp xchg add (bad) (bad) fild movsb xor sbb inc (bad) jp ljmp dec dec inc jle mov aas xchg scas pop (bad) jnp (bad) dec repnz lods add out jbe add push adc int xor cmp and in mov aaa mov fimull sub sub jg inc shlb and xchg adc lahf lds mov rcl mov movsb dec dec int pop jl imul js add add inc sti (bad) dec ljmp jno call ret push xor aaa mov push pop add xchg int je sbb loop jmp or mov lret (bad) das mov (bad) cmp cmp daa aam out mov lds xchg cmpsl repnz out adc adc das cld int3 add mov mov sub in or cld adc divl inc adc and bound mov (bad) mov xlat cmp fs adc subl call jae inc jb mov call pop int and (bad) and add add add imul jo (bad) jg jo inc fsubrl rolb test mov or mov pop jae ds popl ja lcall jle add inc ss sbb pop jg addr16 xchg adc mov lret fsubs inc ret sbb aam xchg xchg mov cmp mov addl dec add fdivs jge push xchg jl xor xchg (bad) pusha aad jo sub add add push xchg js data16 in lods sub jmp sub push jo sbb dec cs or insl pusha addr16 inc jno pop pop sbb inc and mov and xor jmp (bad) mov and jne cmp sub cltd pop mov aam fidivrl cmp mov insl (bad) shlb adc push cmpsb fwait xchg fldt sbb mov add pusha and movsb or pop add stos xor jo pop and inc mov jb add or insb aad dec leave xor sbb (bad) insl int3 repnz jle sti das hlt xor stc sub mov push aas pop cmp pusha lds jecxz jmp jmp push push aad dec push push mov addl pushf pop cmp dec stos das pop mov push je in cli std pop (bad) (bad) xor xor addl loop ja cmp add scas and sti dec fwait add push lea cmpsl in xchg mov mov jp mov repnz (bad) lcall sbbl sub lods movsl adc lock aam xchg arpl sarb fisubr or leave cmp (bad) iret jmp frstor loopne xor fidivr std mov movlhps or data16 movsb push mov or or in push dec add adcl aam sbb mov add jb fbld int cmpsb xchg xor les lods out enter pop iret xor jmp lcall addr16 adc mov pop push jge mov sub (bad) mov bound adc negl xor pop std sub popa (bad) (bad) or xchg daa and mulb ret movsb dec mov lock mov sbb xlat roll sbb mov sti lcall mov push imul add (bad) xchg sti cwtl aad lahf mov mov frstor pushf fsubrs mov hlt cmp push test fidivrl xor daa mov cmc lahf call adc cs (bad) cld mov (bad) jo mov push sarl sarb or (bad) xor stos cmp push nop pop sub mov rcrl xor inc jge movsb jp jno dec imul (bad) cmp hlt pop inc in push mov add test or shll inc ljmp lods nop cltd and fisttpl push or mov jle xchg arpl leave or jns call pushf dec in and inc push mov mov push orl add mov loope and (bad) cmp lock cmpsb cmp in and push iret stos aad test dec cmpsl mov fwait jnp loop outsb cmp xor fisub int3 test (bad) dec addr16 jne push test lods jge pop cmp pop mov (bad) push xor jne mov test xor jp mov aas loop ret push sarl movsl fstl aam xor cmp inc dec aas in mov and or sub nop cli mov add daa xchg pop xor decl xor pop jnp mulb add lock in fstpt cmc pop xor jmp aam adc pushf xor add js adc in test in or (bad) bound jo rcll hlt push pop std pop or xor push imul pusha gs insb aas ja out jle dec cmp add adc les mov push and dec ja add orb cmpsl in sbb xor fs int mov xor (bad) movsl xchg or es cs loope inc stos stos xor add or inc je cmpsl sub push stos inc xchg rcll cmp in mov nop popa sbb loope push sub out mov fidivr or dec adc pop push and adc push pop pop lret mov cmp fwait rol cld (bad) shr dec rcl addb inc lock inc inc popf jge dec popa andl inc int push out push cld test (bad) lea enter cmp mov add add add add or test stos outsb cmpsl sbb (bad) mov sub js std mov icebp in incb fidiv mov in jecxz mov xchg mov sbb vmread cmpsb cmp jmp inc aaa and mov jb and rcr (bad) ja lcall (bad) lahf cmp sub adc (bad) dec out xor (bad) sbb fnsave add lock sub pop inc cmp jne push pushf mov int3 jle add mov add dec or das outsb fwait sbb fidiv dec inc xor aam (bad) cmc pop (bad) mov adc xchg add mov pavgb mov scas leave dec jp jg jmp and xor jp xor outsb inc pop pop sub jle subl xchg and gs das out pop push fistpll popa (bad) cmp (bad) out in lds je enter lcall outsl cmpsl aad xchg inc add lock pop sbb xchg jno mov jb sbb popf mov mov enter fmull insb rcrl pop pop cmp fnstenv cmp push outsb mov (bad) cwtl xchg and push sbb std cmpsl fistpll push insb sub jmp ret (bad) adc inc loope lret gs sbb and incb je cs or repnz mov pop xchg dec push mov addr16 xchg sbb std aas jb lahf or stos sub push mov lcall loopne pop icebp iret dec inc add dec xor nop cmp mov cld push dec xchg mov aam cmp fst fistl std clc mov pop pop and leave xchg push test push pusha loopne and pop jle fs mov or pushf pop popl aaa int pop bound cmp test pop aam push mov dec xorl sahf add add add pop (bad) inc inc add mov push push sub out adc add bound stos outsb add mov push outsl mov xor pop push xchg mov nop push push mov pop adc test mov arpl or mov inc lods aam out jp xchg mov ljmp loopne or imul xchg inc repz popf sti adc pop sbb cld cli roll or add add add jg adc cmovge xchg in scas dec daa adcl jecxz cs xchg push inc xchg (bad) mov push jbe decb mov lds cli lcall mov jo add and sub hlt test aad das into jecxz mul mov mov add lea push jo jo aas out into mov ret inc or add jo (bad) (bad) adc je fs pop js lods jp scas xchg inc pop xor add and lea cli loopne pop xchg or pop mov or bound cmc pop (bad) lcall sbb xchg lahf push stos mov push cmp jne jp cli mov mov pop icebp mov out jp in push push les add adc mov inc mov sub loopne xchg lock dec inc inc arpl enter add mov popa jp mov cmp inc and mov mov aas fsubp xchg and scas jecxz add push ficomp inc pop jmp stos or cmpsb aaa aad pause adc repz stc insl decb pop imul pop enter rorb popa mov cld lds or pop mov mov dec icebp push imul sub rol ror adc add add add pushf loop loope xor push xorl insl imull pop cmp ds mov mov in xchg xchg xor push xchg xchg or ret jb movsb clc sbb mov mov pmaddwd rcrb je pop enter jo push insb shl push xchg lcall cmp fsubs aam addr16 aam lret xchg fildll xor add pop aaa sbb push add inc aas cmpsl adcl mov ljmp jecxz aaa mov int3 mov push mov std fs movsl push or inc mov fldenv and orl xor xchg mov cli mov mov and pop insb mov add push or test mov mov mov outsl ss pop (bad) xchg lods push aam ds add or sbb xor (bad) lahf ljmp fucomi pushf ret pushw call in push cmp pop cmp imul lret aad (bad) jge daa in ret pop cmp out mov sub rcll mov lret pushf add test into cs add in shlb inc cmp xor in cltd sbb dec xchg frstor popf jecxz xor inc mov sti jns insl mov mov add sbb pop mov mov dec cmp jp out pop xchg xor mov mov cs push mov xchg cltd lods aad subl (bad) mov mov repnz rcr je adc adc inc xor rcrl push inc mov stos dec xchg pop scas rorb add xchg into xchg jl int3 xor mov addr16 add mov sar pop mov iret loop out stos or je in push xor insb add add or mov in dec mov cmp enter sbb dec add repz test and mov ja mov lea xor xor loop mov iret push mov divb cmc and call adc test fbld push fucomip mov jb push add test mov push adc mov add pop int ret xchg xor es lods pop mov pop inc inc imul das sub jo jmp loopne enter inc insb mov cs (bad) dec std inc rolb inc mov loop mov pop cld or push pop cmpsl lods incb xor inc sbb inc inc add es (bad) jo (bad) sbb dec lods mov pop cmc jne,pt pop push pop inc out mov and jmp enter inc inc mov loopne arpl pop shll add mov shrb push xchg push adc in (bad) lods add xchg jle bound xor movsl xchg (bad) stc or cwtl add xchg dec bound adc loope inc or add in xchg in mov inc imul cmp (bad) jne test sahf mov sbb dec loopne sbbb or mov xor fldt (bad) ficoml mov cmp xchg (bad) pop add int3 xchg mov (bad) add mov fprem1 ss push into (bad) mov incl xchg adc pop xchg inc push push pop or add xor mov and shrl addl es xchg ror insl adc test arpl lret jno outsl adc sub jmp (bad) push ret repnz adc and inc clc xchg fwait inc loope fs leave addb adcb test add hlt sahf sarl cs push dec and aam jecxz mov jb and xor arpl hlt and (bad) std stc mov loope popf push test pushf jmp sub repz (bad) sti out dec sbb (bad) sub xlat in xchg push orb mov xlat push fwait xor jecxz jo rcrb pop pop dec push je or jg pop fidiv je mov adc out sub ds push shlb rcll dec add lods js mov int into je add xlat push orl dec xor pop (bad) dec lods dec sub out into lods hlt lea mov into jb rorb add in jl lret and adc or test xchg jl cmp adcb es fidivrl imull pop and dec push inc inc outsl mov jle icebp or clc fs inc in insb fsubs leave add cmp or adcl ja push jae xchg mov popf leave sbbb jg loop fs xchg js or insl sbbl mov jg jg xor rclb mov lods les fs xchg pop (bad) in sub xor movsl and lret aaa adc xchg lods push inc push cwtl rolb xchg pusha xchg mov rorb mov adc jp xchg outsb test and into jo dec jne imul push sahf add add pushf push shl pusha fs dec mov test into lcall ss pop in sub sysenter jp std lea mov adc lahf pop ret lock cmpsb sbb mov dec xor movq xor pop inc add pop jg xchg scas and (bad) cmc sbbl insb test sub xor rorb pushf xchg adc movsl ret xchg stos xchg pop cmp les add mov push pop ds fwait pop das mov hlt in les das out and and aaa sub sti dec pop (bad) icebp (bad) scas sub pop popa inc gs in insl and dec in cmp ss repnz imul sbb fist sbb test ja mov inc sti xchg js push in adc ret (bad) cltd les mov push mov ds adc call sub andl inc mov xchg fstpl lods mov add push mov aam lret cli popf push test push fimull jg bnd cmp cmpsb and push cmpsb enter and jge daa lcall stc mov adc fildl mov pop mov test sub (bad) jmp push jp mov pop mov jb mov std pop push mov outsl sub test icebp ret jne js mov adc mov stos cli scas add jns mov enter add add lcall mov and outsl fild jb shll lret pop pop cmp fiaddl cmpsb mov sbb xlat push les xchg in push sahf jecxz cli divl das and (bad) dec jns mov inc sbb (bad) jle pop repz int in mov negl adc arpl inc push scas cmpsl shr mov pop test pushf movb inc pop add stc pop (bad) push xlat enter fwait insl and jo xchg push cmp pop popa stc push mov xor arpl inc push sbb mov repz nop cld aam inc push lahf outsw cvtps2pi mov ror fsubrl scas int3 fnstsw xchg fnclex mov into pusha jns dec cld cltd mov cld popf adc push test dec (bad) xor cld lods and xchg lret in int3 cmc ljmp mov insl subb mov cmpsl pushf in jge and dec xor ret push sub aad in adc or ret movsb mov test push int3 push mov add add add fwait repnz jp scas xlat loopne mov dec sarb fbstp out pushf adc cmc push loope pop and loopne add mov (bad) inc stos negb dec out dec outsb push jle sbb lcall cmp mov add imul sbb ja pop mov test inc dec repnz movb dec addr16 insb mov (bad) adc int3 negb xor scas popa mov push sbb (bad) ja aas loop popa add xchg pop mov mull mov int xorb sub ret lret popa iret inc cli push jae divb pop xchg fmuls pop out mov in gs mov sub (bad) and stos ffree je ds inc cmp push mov aas arpl pop jmp xchg xchg adc cs daa adc mov add mov (bad) jne shr cmp (bad) idivb sarl icebp es push movsl mov jb popf inc sub data16 mov lds in jo addr16 (bad) add jns test hlt xchg dec inc ret repz movw adc pop movsb mov mov lds jae add cmpsl addl sbb cld mov imul pusha test jl lret lds fcoms scas ja mov pop adc inc push inc jg and adc adc inc outsl mov mov stos cwtl mov icebp loop push push cmpsl std push push movsb add pop loope movsb fs stc lret out add stos cmp mov inc mov in call pop pop (bad) xor xor sbb aam (bad) push imulb ss jnp pop subb xor dec cmp xchg icebp push icebp jbe adc mov fdivp and or push mov aad lret (bad) mov cltd iret lcall xchg sub push sahf inc rcrb xchg xor fstpl mov jmp and mov xor sahf sbb add add mul sbb (bad) push pop xchg dec pop lahf mov push cmp pusha inc gs fadds icebp and pop mov and (bad) lcall stos int3 sbb leave movsb aad add in pop lds dec push push lea pop inc dec xor xchg mov push mov arpl in (bad) ss adc das jnp es repz out cmp push push rcll addr16 sbb sub adc and and int3 icebp cmpsl out lea frstor fs icebp hlt sarl loop pushf push cmpsl sbbb inc hlt pop daa jmp std sub andb lretw lahf imul ret jp sub into and and or xor lods into push push jle push int jo mov pop loope je fwait cmp xor (bad) lret cmc add jb insl mov (bad) sti jl jecxz add clc xchg or ja or (bad) ja ljmp sarl xlat add xor outsb and sbbb push incl xlat cltd lods sbb mov mov scas push inc lock daa ss cwtl sub dec xor and mov xor sbb push stos mov aam xlat (bad) call xor or lds data16 or dec xor and cmpsb lock add mov xchg pop lcall lds call cmp cmp add add (bad) xor mov sub lods fldenv sub sub mov pop loope fild pop pop inc (bad) xor and mov jnp clc daa adcl mov xchg psubb push push (bad) cmc adc int dec fsubp inc jge into insb pop add xor dec adc sub loope sub push ret mull ds xor test jo inc insb nop cmpsl push ret cmp or add jecxz stc mov in dec ljmp lods pop and insl mov (bad) fwait push loop das mov mov (bad) xor mov or cmp popa adc adc sbb aad imul mov dec or fiadd ds jmp imul aaa call je in into xchg mov (bad) pop xor mov add jle test adc pop pop dec or mov lods sub leave inc xor push mov cltd cmp pop sub mov call fldl popa mov mov in sub out subl mov mov insl cmp movsl cli mov xchg ja pop dec aas add pop inc dec inc mov pusha (bad) popl adc les sub loop adc or dec and loop add sbb pop popa cli les fldenv add sub sbb add or jnp js adc sub mov jmp mov fstl add add sbb pop jecxz je push add add jb out adc pop xchg dec and sbb in xlat fwait dec mov aaa push fidiv js or cmp rorl enter xor pop pop mov outsb and adc push mov insl jo (bad) rol jp add outsb mov or inc adc imul sti sbb xor cltd mov (bad) enter lcall daa push jg mov xor pop sbb pop sbb jbe (bad) outsl adc fistp movsl (bad) xor punpckhdq into addl shlb xchg jae jb rclb test pop cmpsl sub addr16 inc mov mov lods inc out out add pop and lods popf xor sbb rcr popa sbb shlb mov dec and or pop sbb mov int3 (bad) repnz jg adc in das pop rcll pop (bad) pop jmp outsb lcall ljmp push daa ret adc imul xor jb jmp bswap sete ret jns lret dec dec dec cmp sbb jo mov sub lea pop sahf out mov add push dec jle cmp adc (bad) jae ret pop ljmp pop outsb cmp jmp (bad) mov dec rcl pop std ja imul xor mov fsubs gs sub mov add jns push mov ljmp stc jge mov sub (bad) sbb xchg xor test xchg mov stos mov es into mov addr16 xchg popw fdivl mov adc out push mov and cmp mov or inc adc es xchg mov mov mov mov scas (bad) insl lret insb xchg icebp push inc gs (bad) sbb call sub mov out jno hlt inc mov push test xchg call fptan and inc (bad) pusha adc or ljmp pop and lea dec cmp imul xchg pop pop inc ret mov outsb jnp jecxz lock xor movsl and out and push icebp push add and jg fprem1 fs mov (bad) jno (bad) mov pop push xor hlt movsb sub xchg pop fwait push mov cmp popf test inc scas push sub push jle dec imul inc ljmp dec aaa sbb out outsb test cmp pop and mov sub push (bad) loope stos jp fdivs pop cmp xor xor leave pop pop jno stos nop inc fnstsw loop or (bad) pop add out xor push add lods sbb bound addr16 cli or xor mov mov enter pop popf push lret jo lahf mov (bad) fistl leave xchg mov adc mov dec cs inc into add and add enter xchg test mov inc xchg shlb xor cld inc aam test xor and adc lds inc es hlt dec and sbb (bad) outsl xchg popf lds add push je nop pop mov mov jmp jecxz (bad) stc or negb ficoml jno or mov jo aam int3 gs and mov adc xchg lods imul push int xor jnp add mov stc push add pop popf xor movsl xor jmp ds fsubp shlb aad in insl pushf mov outsb jg xchg (bad) mov mov aas adc loope adc fsub sub nop das inc icebp sti shrl movsl inc fisubl add mov push insb push xchg inc and cmp bound adc dec outsb xchg jbe ljmp dec sti pop ss jne fwait or adc dec sub aas jg sub fdivp mov into ja cltd jo ficompl iret aas repz pop add clc les test int3 push andl js fucomi loope xchg int stos popa inc mov mov test and xchg xor mov icebp xchg jmp add add in cwtl jge jnp xchg insl push sub cld mov lcall (bad) insb jge sbb dec rolb xlat call ret jge imul sbb mov je mov add xor ficompl xchg mov xchg push mov call je sub adc mov sbb inc test xor mov adc dec pop mov idivl jg jnp sub sarb and adc mov test nop test popa fisubrl jo test sub pop or add sub dec push fmull inc push and xchg dec add xchg jg cmp pop imul add sbb das clc pop imul sbb or test inc inc cmp cmpb mov jno mov pop pop mov movsb pop push call xor rcl ds mov mov (bad) or sub add out mov std je or adc push mov arpl mov (bad) int3 xchg insl cwtl in inc push cmp or dec xchg pop push cmp out data16 js out lods lea std adc shll pop imul sbb imul mov inc ljmp stos pop xchg rcr clc xor aam add xor pop inc pop jp xorb add into jp pop data16 mov inc inc xchg xchg lds mov (bad) sbb in fnop imul jne ret mov shrb mov (bad) jb cmp sbb sbb (bad) jb mov push xchg pop hlt add loope and in mov cmp imul lcall inc jle dec inc inc out dec xlat push sti aaa mov stos jle aad push aas pop cmp xchg mov fcomi xchg inc add out aad aaa and xor mov aam (bad) mov mov out inc xchg mov test xchg lret sub push mov pop orl push outsb mov mov xor adc jp inc ja xchg pop in jmp out cmp jnp cli test imul sub xlat and popa add mov jl jle mov ss ret add and jnp adc inc mov add iret fisttp mov pop push stc mov mov cmpb js mov movsb jl leave mov dec inc lock dec andb cs xchg and adc test (bad) repnz mov cmovne int3 push fisubr into or loop jge ds cmp sub aam xchg jbe adc adc lods mov fcompl lds fstpt inc imul out add fs lods jo inc xor fimul adc jne jnp jns jmp pop into data16 fimull movsb stc adc mov mov xchg int ret and mov jl sub jne inc ja movsl sahf push sbb pop xchg repz and adc push or icebp xor mov push mov ret or mov imul jbe jae imul dec icebp cmp scas mov scas add outsb stos imul out push cmp ss mov movsb xchg mov fwait xchg rol movsb (bad) stc and std and push dec mov insl add fisub movsb jns jge xchg fsubr mov and insb xchg ficompl pop outsl repz mov sub ret aaa hlt push add addr16 sub ja (bad) adc inc pushf or push xchg pusha xor sub loopne outsb sti nop inc sub jbe xchg xor fiadd stc lahf or add and sub ficoml and dec ja adc les (bad) mov mov mov je cwtl rorb scas dec ret xor mov ror cmp movsb jmp fidivr daa cld mov mov lods addr16 jp psrlq ljmp aam mov dec xchg lcall out fdivs sub cltd jmp mov adc xor sub add ds popa and push jns cs aas sbb cld add sbb pop mov pop mov cmpsl fcomi mov mov inc push jmp lahf test fisub fisttp lods and lds inc divb fistl (bad) icebp sti roll arpl add add and mov mov xchg loope push adc jg andl movsb cmp xchg jbe lret jle add add adc das mov loope rclb shl or repnz mov data16 jg add das test fcompl xor sbb adc lods cli and pop lods out or test adc (bad) jge jp mov sub and or imul dec add and mov pop int3 pop jp subl in sbb sbb lret and add add scas jmp sub jbe xchg (bad) ja dec cmpsb in jl sbb sbb clc inc out mov or jnp sahf imul push scas (bad) lods or dec dec sub cwtl rolb dec jmp cltd sbb mov lret or cmpsl jge sub in pop ljmp mov and imul adc push sub in pop shll ret test test les leave xchg fbld outsb fs push add add push call jl (bad) lahf dec lods mov mov (bad) ja aas in (bad) cmp std out in int dec out add int3 (bad) (bad) xlat pusha mov shrb inc push mov (bad) jae and inc pop imul movsl sub add imull dec pop inc dec into fcom xor (bad) sbb mov test jge nop xchg adc test gs xor mov (bad) aaa hlt jae jo nop cs test out mov stos xchg lcall (bad) mov add add jmp jbe ret inc mov mov sub call stos clc cmp mov add and repnz in or and (bad) testb mov aad push cmpl add les mov mov fistl pusha dec stos insb xchg scas or adc mov dec outsb pusha test adcl xchg inc cmc mov outsl add mov add cs mov mov je push sti addr16 push mov xchg outsl add mov mov aas jmp xchg icebp cmpsl inc fistpl stos and ss cmp sbb mov adc cs fwait setae pop ds mov mov and pop push mov loop dec cmpsb sub push sub jo loope mov inc push xchg push xor int3 jecxz pop iret mov outsb xor jl inc aam add add add cltd push repnz mov std fild cltd push insb pop or mov (bad) push cmpsb rep cld mov sarl mov pop int add cs mul dec xor fs dec mov mov xchg push out sbb insl dec fnstenv mov mov sarb mov (bad) lss into imul cmp test insl mov test imul mov js shr stos mov add sub push xlat outsb push sbb mov cmp (bad) pusha adc adc adc imul sub orl test sub sub mov xorl outsb push movsl ret sarl aas pop leave pop in xchg fstpt sbb add clc enter mov pop std xchg aam les (bad) sti jecxz lret and add or lods inc pushf add cwtl movsl stos jl add mov jl xor out cltd dec push ror sub xor and add sbbl inc adc outsb rcrl hlt or mov daa mov lea or xchg int mov and sub fildll test outsb out pop mov (bad) pop dec push out loop pop mov mov cmpsb shrd roll in push aad std inc outsl js mov add popa jg push or in cmp sub test imul js or mov pop sub lea sub add push fadd shrl mov sub mov sbb dec outsl jo inc scas dec movsl mov mov xchg fcmovb push inc rcrb scas jp lea xlat out jns pushl push lock mov lods stos cmpsb pop sub fidivrl insb jmp ss mov dec pop sub inc mov push andl sbb xchg cmp adc mov xchg cmpsb ljmp rorb inc test mov sbb mov mov arpl in sub or push repnz test adc jl add lret nop stc mov out adc mov jmp jge push xlat shrb or mov jns mov pop lods rcrb mov add add push andl xor ds in add mov ja test mov outsb fwait divl xchg stc ret push dec ret int sub and add jl sbb jmp leave push insb (bad) and in (bad) sahf loop das or loopne or or mov jg jmp pusha or inc jb dec dec aas dec add out and inc sbb loopne,pn ret adc add add xor lods in ljmp xor cmc cmp xchg or and (bad) mov dec jecxz fwait ret dec das repnz lods xor add add adc push adc jp dec cld push psubw jns pop xchg stc xor test push xor xchg iretw mov shl mov iret xchg inc (bad) mov xchg adc sub push inc mov fwait xchg sub push cmpsl add scas loop mov push das dec mov sahf hlt cmp add aaa cmp dec call inc cmpsb mov jge es inc cmpb cmp aad pop or add sbb pop mov cltd adc sbb mov outsl lock and loope jnp mov push movsb mov sbb or jl (bad) sub roll pop (bad) inc fmuls sub fisubr aaa xchg adc mov stos dec pop arpl scas repnz xor (bad) mov outsb cmp (bad) xchg fsts (bad) in scas popf in pop lock mov hlt dec cmp push lods rorl imul or pop lret int3 (bad) jge das (bad) (bad) movsl jb test popa clc add (bad) gs add lea jecxz addr16 (bad) jae push andl fmull push pop pop jns xchg sahf cmp cwtl data16 aad lcall push packsswb mov sbb loop icebp outsl addb and mov mov lock push add push inc mov sub cmp outsl mov lock xor bound aas mov mov (bad) imul xor out nop daa jnp mov pusha ja cld xor inc fstps shrl (bad) pop mov das sar dec adc insl aas stos int3 jecxz loop das gs mov mov push test hlt insb orb imul sub cmpsl push or dec dec and push (bad) movsb sub add pop pop inc jg jecxz jb mov mov loope add pop shrb xchg sub pop and (bad) cs xlat (bad) xchg lret scas and cmp aaa lods jle aam cmpb pop xchg mov fdivrl mov sarb mov (bad) dec mov mov je sub shrb movb mov das mov mov push pop popa cmp (bad) mov jecxz jnp jp push lret cmp lods lock xchg clc inc push add insb iret mov cmp stos lds mov push or aaa das daa insb std dec mov sbb aam jno insl mov ret mov fucomip cli or cmpb sub xchg push mov repz add imul call adc mov into es in das cld adc fadds es movsb sahf sbb sub push call mov add bound fildll icebp mov das sbb stc dec mov (bad) (bad) lea aaa stos mov inc add lret mov stos cmp xchg pop loope repz jge aaa cli jbe dec in out ja cs adc out dec cwtl decl bound push mov xchg pop daa xchg ret das (bad) jo gs sub icebp pushf add and xchg mov callw jnp iret fs add test (bad) loope push sbb int3 cltd subl push push dec jmp pop lds add cmp test cwtl ret rclb mov ja adc test pop add inc sub mov xchg fnstsw push dec pop pop inc push jnp aaa pusha dec int popf jbe cmpsb push (bad) mov rcll add shlb jmp lods xchg nop cmp inc mov fwait je add lea add ret gs jg push cwtl pop jmp fistl outsb int3 inc sti cmp stos adc inc xor int3 cmp stc int pop hlt inc mov pop jno and inc and sub lods (bad) xchg imul mov inc or loope (bad) mov js xchg push mov (bad) ret jae push pop rorb cli push mov xor rol pand push shr dec mov in jne jl push push testl add mov sbb insb jmp fsubr das fucomi mov xor pusha arpl imul wbinvd inc adc nop jne orb call cmp aam xchg sub insb out daa pop inc shll das clc sub push adc (bad) push loopne fidivr frstor flds pop mov pushf inc pop xchg inc popf sub jae in or sti adc loope in int lret push sub pop or sarb jne outsl daa sbb xchg clc jp sbbl add dec push popa jbe cmpsl cmp sbb mov jns mov (bad) xor movsl ss pop xchg dec es stos test dec lock adc out or (bad) fcompl dec jbe ljmp clc push jmp aas fstl ljmp fild test xor outsl jb jnp xchg pop jp pop stos scas jecxz das and out add xchg mov mov add and (bad) leave repz aam jge std lods mov pop adc aaa rorb mov rclb cmp popa bound cmp jns or xchg bound push (bad) lds mov ja push pop xchg fsubl in and jbe jbe ret shrb pop jmp fs mov and mov je xor cmpsb out lret aam (bad) lea dec das sbb icebp sub dec pop je or add ss popa pop aad pop xor rorl into scas mov test ds mov lret mov cmc jmp (bad) mov xor cs mov mov inc jae (bad) stos push (bad) dec dec jge jo and lea jno adcb cmp mov aaa jnp fcmovnb xchg iret mov mov cwtl shlb mov jo jmp sahf int andl in cld cmpsl lcall add mov or adc sub adc lock js imul xor arpl loope mov movsl xchg (bad) lea mov test movsb ja and neg inc xchg jno jno push lret sub mov pop mov push ljmp into pop loop pop cmp sarb sbb jp je lods movsb push xchg xchg cmp shr pop sub sub bnd rclb jg push cltd add stos jg or js repnz pusha mov pop xchg add add add imul ret lea ret dec rorl aam adc repz iret inc mov bound mov adc int3 roll cmp push cmp cltd jne or cs cmpsb mov xlat fimul mull data16 leave rcr or cmp (bad) jns mov jg and test xchg add rcll mov icebp ret cmpsl lret xor (bad) loopne mov fistp aam addr16 mov fistpll xor dec dec dec stos and gs xlat mov push insl mov add xchg sub movsw cmp mov loopne xchg lock int3 xor bswap xlat jge gs sub mov insl pop or testb sbb sbb arpl ret or cmp (bad) dec sub clc mov (bad) mov add mul cli and sbb test popa dec mov (bad) sbb lahf gs es stos je jae lock enter scas test pop aad mov dec ret push mov pop sbb add sub mov insl loop xchg adc test add cmp or out lods arpl jb xor movsl and sub adc mov out into fiadd mov cmpsl pop fldt movsl jb or add mov or adc inc adc (bad) jno or (bad) loope pop pop mov mov mov insb iret jmp aad mov test popf faddl pusha mov stos cmp mov push sub or xchg mov adc cwtl jno add ret minps and aaa (bad) in js mov into dec mov mov shl je sbb or cs inc cld test jle mov push add add cmpsl (bad) sbb in push push xchg xchg sar test jmp scas popf fild out mov mov mov push test xor sbb adc icebp movsb push cmp loope cwtl adc and lcall loop mov add dec dec cmp inc (bad) mov sbb lods or adc push int3 dec dec sti dec jp adc cmp and sub call jb imull inc add mov push xchg movsb into stos movl rcll pusha je inc push lods jecxz mov jge inc stc xor and and xor jge (bad) (bad) inc inc pop call adc out lahf rcl enter mov add dec push js sahf push movsl sbb jge jle inc inc js push fist cmp mov lea aaa inc sti jecxz inc add mov add add add jge mov push out loope inc rorb test inc pop lods mov out mov insl scas add push mov rol repz mov popf loopne mov dec inc pop cmp lcall cltd mov (bad) pop (bad) sbb pop scas pop pop jle or aam (bad) sub and in jne push rolb cmp adc inc fiaddl sbb sbb (bad) (bad) mov pop jp sbbl ljmp pop add rorb adc (bad) idivl mov orl cmpsb fsubl in jl clc pop repnz rcll mov adc stos sub push xchg outsl adc leave inc stos xchg and inc daa les pop cwtl fsubr (bad) daa xchg push clc ret lock adc test (bad) jnp adc test sbb inc fwait imul mov addr16 fstps jle adc testb add add xchg sahf (bad) ficompl mov das or push (bad) scas mulb in and shrb xor mov btc pop lea scas sub pop insl inc in add popf (bad) push xchg (bad) mov incb out out or repnz inc aaa leave rolb dec es bound leave push nop mov in loopne and sar jecxz cmc dec cs mov push add sahf lret in mov xlat adc (bad) repnz jge inc and arpl lock sahf xor lods jo loopne sbb aad pusha mov ret mov fldenv mov (bad) lret inc dec mov (bad) mov mov test mov (bad) mov inc and fcmovne jne fist pusha jg cmpsl xchg ljmp cmpsl adc movsl or mov xchg call mov jae jnp cmp sbb test js dec jo cmp sahf jne mul stos add and jp add mov mov or dec pop clc mov ds inc xor and ret mov pop jns mov addr16 xor or outsl pop lods jbe test (bad) enter jle cld mov cmc int lds nop jmpw push xchg mov jb jae (bad) add mov xor adc mov jp lret lds push pop outsl adc xlat inc inc clc es sub xchg jb rclb xchg add add add or (bad) jae sub (bad) xor and cld ds or push aam aad push sub outsb test sub repz popa and mov leave jno lock push mov pop test inc in sahf nop mov rcl sarl dec sub add pop cld addr16 or push xchg jge cld pop (bad) xchg arpl stos hlt sub pop push loop sbb xor push jae add loope neg add and into cmp movsl cli loope (bad) call and mov xlat and cmp pop cwtl push push in (bad) or int push (bad) (bad) fisttpll mov movsl (bad) mov movsb out pop repz sbb or fistp add divl mov cs add inc cltd inc sub xchg mov fidivl dec into xor xor popa jp inc mov adc jmp sub add shrb mov or ljmp inc in sbb xor inc sbb (bad) fcoml xchg sarb loop outsb lret cli inc cld jecxz cmc call (bad) lret push cmp (bad) pop ffree push iret (bad) jne mov test shl inc jmp sub inc mov dec xchg stc icebp add lods (bad) out push sbb in imull aas cmpsl sub lea daa jle inc xor rcll (bad) call xchg movsb or push inc lock mov adc or pop pop adc sub lds pop pop shl mov push xchg arpl push fisttpl in insl sub sbb mov leave (bad) repnz mov stc mov or xchg sbb sarb mov lret pop adc cmp stos cmpsl cmp add sub aas and adc sbb test jbe (bad) xor shlb pop ds pop (bad) mov pop pop push jne inc adc push xchg lahf fwait (bad) pop in data16 push xchg cli (bad) outsb mov jmp sub sbb pop or pop jecxz repz adc pop pop mov and ret icebp out ja repnz mov andl dec xchg xorb lods pop iret dec mov loop sti (bad) cmpsb mov in into decl in and jge add mov jge decb aas sbb fdivrl daa mov mov cmp fbld pop arpl out mov leave cmp inc and jb or (bad) adc in sbb (bad) adc lret mov xchg gs sub test push icebp mov movsl (bad) cmp jl mov in jae dec sbb rdtsc roll push lods inc add out enter cmp add popf xchg insl loopne dec and add lods jle loop fxch xchg dec mov and pop test aas (bad) in in lock add jne adc or adc or or xchg js xchg jg push aaa stos test push nop sbb xor cltd adc test js sahf mov enter xchg test push mov in sub pop push inc sbb fstp xchg mov cmpsl and dec jno,pt enter mov xchg scas cmp inc cltd pop sub inc xchg les lret fiaddl jnp aad pop jp jns in decb shl cmp pop js inc sbb je sub ljmp movsl scas loop mull mov shl mov mov (bad) sub dec popf testl lods mov fldenv loopne fdivrp shrb nop les mov leave adc sahf push sub fwait xchg cli xchg cmp or jae pop ja dec gs sbb mov enter add (bad) mov sbb add rorl pushf cmp orl dec (bad) popa das movsl sbb cmpsl mov add lods pop lcall gs jg mov jb (bad) xchg fldt into into outsl lods push xor hlt xor add (bad) xor push push mov ret add add jbe call ljmp push mov sbb cmp flds sbb stos roll push stos push sub jp mov push gs push loop,pn and (bad) xor adc iret std clc jbe loopne mov mov in bound cmp jge xor ret xor xchg xchg testl push inc jae mov cs pusha xchg cmp les adcl ret add (bad) xchg xchg push dec data16 pop mov add dec sbb xchg jp cmp jbe (bad) frstpm(287 sti into add push imul or dec lahf sub mov jnp lods popf jbe push out es mov ret imul rorl xor mov lret cmp test jle dec pop int3 test xor jmp and aaa call out sub mov and imul arpl sub push add cmp fildll setg adc mov jmp pushf cli dec movsl pop (bad) jns mov outsl lock jne pop mov cld xchg xchg push inc sti jmp push rcll in push sbb leave fisubl pop xchg pop insl xlat push out jb mov jge cltd (bad) leave sbb std push pusha xchg pop sbbl test add into enter mov into pushf cmpsl aad cltd add add movsb insl (bad) mov test xor pop daa orb iret jae enter dec gs je and (bad) mov and inc mov adc xchg or jmp fstpt inc add ficom (bad) jmp push int3 (bad) xchg adc mov add or rcrl mov mov outsl (bad) mov pop jecxz inc jp into sti stc push dec nop or push mov in or fisubr dec es mov js loopne adc xchg leave pop jnp mov push lahf clc mov add hlt sar xchg jae or xchg bound inc das add (bad) loop mov aas imul add rorb popa test mov and inc mov and add push dec or pop or call shr jmp jmp and adc sbb jmp test aam add add (bad) mov in cwtl in xor pushf fwait and sbb jns neg xchg flds mov sti xchg mov je stos scas arpl mov es or push sub add jmp xor loope roll xchg mov cwtl dec mov push popa xchg and sub mov fdivp dec bound cmp mov loop sbb sub cmpsb insb mov push repz sahf and push add mov lds or lret inc jl mov cmpb jmp pop push sbb adc pop lds adc push pop mov test mov mov js outsl lods inc das cmp mov cmp mov jne push int sahf push lods jle cwtl mov and cmp dec inc and sub das dec out mov (bad) mov scas sub ss ffreep jb out (bad) mov dec fbstp test add or test sbb fs cmp xor pop dec inc pop lods jecxz out adc jno xchg pop lcall addl or sbb nop xchg ljmp addr16 mov aas (bad) test sbb mov jecxz cmp out stos xchg cli push hlt cwtl jbe and xchg je adc add or roll shr addr16 xor (bad) xlat enter add add fdivp jecxz outsb stc sarb mov jb ljmp outsb sarb jecxz dec pop outsb mov push sbb nop sbb mov cmpsl dec icebp push adc sub int3 adc and int dec mov adc movsb dec scas sub sub pop xor stos push pop xor daa push sbb fcompl add xchg adc xor ret xlat leave (bad) push scas jmp sti cwtl (bad) aaa adc jo inc rcrl add add data16 fbstp xor sbb fs ret cmpsb repz test sbb fsubl out lahf test pop mov sub inc pop lods jno out loop,pt push dec xor mov lock xchg or pop js and aad mov ds push mov or mov mov adc or loope xor cwtl js movsl scas insb sbb test aaa or pop mov mov mov add add inc jnp imul ret es enter test cmpsb xor xchg cli int pop add test and sbb (bad) add mov mov jmp outsb pop dec push sahf das es dec rcr or cwtl and movsl aas mov mov enter dec inc xchg imul ja jmp pop stos pop ret stos mov jg fsubl sti and rcll add adc scas mov pop test dec stos sub loope add in mov aam push mov pop xchg test mov (bad) and bound mov in cld (bad) xor mov xchg push mov rcrl popf scas pushf fmull mov hlt xlat fcoml mov negb fadd popf and push xorb adc add jo in mov outsb add cmpsl insb enter cmp popl (bad) fs sbb out pop lds dec lock mov cmp cli mov add add add xchg dec mov cmp and popa mov in (bad) je imul mov (bad) in jnp xchg jnp icebp pop arpl adc cli adc ss test lds repz in jns or push and in jl jb lret shr test pop divl mov xchg dec (bad) popa fwait addb jae loope,pn test push jno mov bnd dec shll pop jb push gs (bad) ss mov mov add add pop sar xchg sbb (bad) out lds and add aaa xor push insl scas jecxz mov push inc xchg cmp xchg ja iret jge std lea xor jo pushf ja icebp inc rorl (bad) push jl push subl mov je loopne mov cmp push call pusha fisttpll adc or stos jbe xor lret jg in and add pop dec je xchg xorl pop jb dec sti xlat cmpl addl sub push add jne and fstpl push fisubl mov mov and cmpsl xchg setno mov out and pop mov xor pushf adc jno mov ja and mov and or (bad) stc cld xor sbb lods add std push in pop inc adc xchg adc or add add fwait mov lds xchg arpl pusha scas je sbb int dec hlt add test mov lret sub hlt ljmp mov ss adc sub mov xchg (bad) mov push or or aaa bound cmp xor mov popf and sbb shl addr16 aaa loop call sub aas sbb pop shrb push out pop test or ja ret sahf sbb add bound adc repz loopne or insb frstor sbb sti and cmp ficoml mov push push aad cmp out add nop sbb inc and pushf sahf mov insl xchg cmc (bad) mov lods adc mov arpl pop daa mov sahf or adc xor inc xlat (bad) or cmp shll mov jg dec mov ljmp cmpsl addr16 sbb fdiv jae add add inc and xorb add pusha pop popa lahf sub pop cmp pop cmc and nop and cmp test add mov test negb inc mov and repnz adcl insb call jle loope lcall repz loope pop insb imul sbb mov imul push lock push mov and insb cmpsb jl rcrb in xchg mov adc mov cmp mov xchg inc stos lcall push lea sahf icebp jns cmp and jbe loop and add jmp ret sbb adc push in adc (bad) testl gs dec cmp enter add jg sbb (bad) mov push lods pop dec adc call cmpsb jl add cmp mov cmp sub mov add add es push xchg jmp in ljmp cmp and movsl lods mov popf inc dec push out fs arpl dec mov mov jge outsb fiaddl stos lods insb test out ljmp jge xchg mov (bad) int mov sbb mov sub or cmp add loop fidivl mov dec les js jecxz mov int (bad) jae jae dec add mov sahf bound mov scas xchg dec sub mov mov add ss pop in lock cmp ret lahf mov ret push jnp pop inc lret jae lcall add inc mov mov jno popf inc outsl sbb popf lods inc (bad) into xchg mov mov enter push fdiv sub lea mov popf sub fimull xchg dec inc and add add add xor jg imul std mov cltd xor pop fisubr (bad) rclb in in daa pusha or aad notl xor loope (bad) adc jne fstp ret aaa ret cwtl (bad) xor lahf cmpsl inc adc dec pop mov mov cmp (bad) out mov sbb inc bound ss push aam fcomp jne add xor cld jns jge jae ds cmp xchg push dec mov sub sbb imul add mov outsb repnz fiaddl ja andb sub mov mov push pop add push xor mov xor mov push scas lret (bad) jno lahf jecxz sbb jmp pop push dec ficoml mov icebp jp sbb sti shlb dec jae jne lods dec jp jg aad sbb neg test xor adc mov addr16 cld mov inc notl outsl add mov mov jmp lret cmp int loopne and call fcmovbe add push sahf into outsl rorb xchg pop xchg idivl pop popa int3 fmull in push xchg cwtl test addr16 xchg (bad) jge inc add (bad) out (bad) pop data16 (bad) jno xor dec pop scas fidiv mov pop sbb sub adc dec xor js jge dec adc pop dec push mov sbb adc mov loopne mov rorl test push scas and pop sub scas push int3 cmp aaa movsl aas mov and lods int3 je popa mov ss pop dec mov repnz push or test fwait push push jp adc in xor out adcl push push stos cltd pop and inc hlt push sti xchg je and dec mov dec aam inc push add mov movsb adc out push xchg pusha jge iret jle popa mov decb ljmp add xchg cld mov lea loope mov or and mov popf negl nop icebp lods adc sbb loopne xor sub sbb inc push cmc mov jo movsl add xchg xchg sti scas pop loope stos popa in xchg cmpsl cmp enter inc xchg data16 push dec or out imul push rcl mov (bad) addr16 cwtl xlat es cmpsb jp and jo xchg mov ja std pusha add add scas (bad) loop cld std lahf or add aad icebp jne loopne or adc movsb pop (bad) or sbb mov pop insb xchg xor loopne push stos xchg mul dec xor or sub push push adc out push sub push sti fidivr inc or daa nop outsl ja jb sub jo hlt (bad) stos in adc xchg mov dec pop neg xor xchg adc sub daa fmull ficomp and sbb add add sti lods flds xor inc add int data16 sbb shrl sub inc or stos cmp stos lret sarl fldcw mov cmp into lods mov lcall repnz jns mov test daa pop jge cli push das inc cwtl pusha jmp push dec push mov outsb pop sub stos sbb or xor fsubrs out mov cwtl pusha inc fwait push pop fcomi shrl testb add inc and inc xchg and cmp dec movsl mov popf sbb outsb mov jmp push mov leave or mov or rorb mov divl xchg mov das adc push sbb movsl dec enter or or and popf jo push lahf arpl mov mov cld scas mov push jecxz sbbl outsb cmc (bad) mov in dec ja or fmulp add mov cltd push dec aad rol bound jecxz push aas mov mov lock pop push data16 loope mov pop sti shrl dec push lds sub std dec outsb add sbb xchg sub pop out or lds jl (bad) pushf (bad) ljmp pop and lahf pop lcall xchg cmc mov push jne jecxz cmp test insb iret jno das pop (bad) incl pop sub imul inc push fild stc xor into bound js inc fistpll jecxz push jae pusha or inc fwait adc test insl and xlat dec outsb cmpsb sbb fwait jecxz mov mov jmp repz adc sbbb int (bad) (bad) mov or push fdiv cmp jle pop fcmovu cld push and dec mov jne int daa mov lds pop and cmp inc ljmp lret lahf mov (bad) xor sub cmp jmp outsl fs rcll jne mov dec dec loope jae jmp int dec loope xchg mov inc xchg leave push mov popl test and mov and or or sub in pop and and adc insb loope sbb lahf lahf inc pusha into push cltd dec mov insb inc fildl pop insb inc dec ret mov (bad) leave sbb mov xchg jmp sub cli xchg cltd call dec mov sbb cmc jbe push mov jg jl and lea les outsl je jge (bad) sbb add xor int or mov test ret ret pop jns mov pop mov add lods test and adc push sbb lods pop xchg push mov sub out dec (bad) out mov pop in sarl outsb adc sbb xchg dec lcall jne mov data16 (bad) add lahf mov popf scas cmpsl mov insl jge cmp insl std sub rol pop add imul fadds addr16 xor push cwtl mov pop nop andb add cmpsl xchg pop sub fbstp fmul cmpsl lock mov cmpsl call into adc xchg mov flds call cmp xchg imulb mov inc pop pop push mov loopne dec lods enter jl ds fucom mov jne add xchg mov (bad) lret lds inc pop mov inc xor fcom push in std pushf sbb mov xor push out jl or pop xor sub insb (bad) mov loope inc cmp cmp sub imul mov adc fsub xlat sarb xor adc loop cli test push mov or cmp inc (bad) mov mov (bad) movsl (bad) test add mov call dec inc arpl scas fidivl ss inc lahf lods push sub pop or xor or je jbe mov in out (bad) negb mov adc outsb (bad) cltd rcrl jns mov ljmp stos out cld xor and (bad) xchg stc icebp jecxz imul in jns mov push adcl push sbb sbb adc ss lea test fsubs cmc in add add loop cwtl shlb and cmp outsl mov sbb cwtl fistp mov sbb xchg adc push fwait pop push jle,pt sbb dec mov sub dec loope mov cltd jbe xchg scas sbb int outsl cmpsl mov into loope subl pop and jge jnp xchg fimul pop mov mov dec xchg mul nop mov pop jb int leave add dec inc out out and in cmp int sbb add out decb pop mov sub rorb push out mov int and loope stos pop pusha lods and in adc dec lods and push lret leave jbe stos cmpsl in mov cs stos jecxz pop xchg inc popf jmp push notb jg leave and jmp (bad) sub cmp pop pop jbe rolb xor mov cmc mov adc sub loop push loop sub das lret sbb test cltd out adc jns out inc push int3 aad add nop mov jne xchg add sahf lock pop pop xchg mov xchg std loopne insl cmp cmp fildl jg lods cmpsb cli jmp imul mov cmp mov xchg bound js mov jno cmp jnp sbb subl into xchg (bad) push movsl jbe mov out fstpt mov push ss cmpsl icebp test xchg adc icebp add sarb in (bad) mov stos xchg push adc push cli adc sahf adc push mov push or lret and mov adc ss addr16 in int3 add dec sti loope ror and inc cmp (bad) dec pop mov jo in ss gs je rorl jge pop cltd and mov outsb jp lahf (bad) loopne std fiadd outsl enter dec adc xor push adc add add add add je hlt (bad) sbb dec insl mov push push mov push or cmpsb lods sbb jl ja mov mov mov mov pushf scas jns mov inc mov sarb fcom xchg cli add inc pop jns adc xchg sub add mov and jae test mov mov mov out or fldcw sub scas pop popa mov push roll add add mov pop inc fnstenv sti daa int lods mov mov test call pushf xor fcomip repnz (bad) enter aad and inc lret das decl push loopne inc xchg lahf xlat popa lds push mul push xlat cmpsl mov fisubl aas arpl xchg adc (bad) cmp push lds daa hlt sbb jo adc cs mov aad lcall cmpsb and jae,pt push lahf mov push scas mov add enter or inc (bad) or cli add (bad) or mov dec add popl sbb push aad mov jge push inc pop xchg test pop pop (bad) mov aas sbb addl jecxz jae (bad) movl push mov jbe fwait iret cmc cld or enter mov push aad nop adc inc insl sub (bad) xchg xchg jg xchg inc es pop ds push js sti jns add adc lcall fstpt and hlt inc cltd ds cmpsb add repz mov cmp imul dec pop pop pop (bad) out mov mov xor cmc mov jno cmp add push jae test decl (bad) cmp and imul pop mov and (bad) jns pop out sbb cli xchg push push cltd push fldcw mov push popf xchg test xor fimull cmp jb and inc xchg pop adc add mul push loop andb jmp xlat cmp shll out das cmp xchg subb call push rolb aas in pop mov pop mov xchg mov and lahf lahf std sub add fwait push ret sbb pop loopne cli xchg fisub pop push stos into (bad) xor punpcklwd or dec mov add xchg xchg lods fwait xlat push push fwait push aad xorl push or iret fwait aaa jmp push daa (bad) jmp add or imull xchg dec pop cmp in adc cwtl mov sbb push pop adc or and (bad) jnp sbb inc lock sbb leave mov xchg mov inc mov pop enter and sbb test cmp shr mov dec bound and mov sysenter pop imul lock sub out sbb imul add jno cmpsl (bad) cvtpi2ps stos ss mov mov add mov flds sub (bad) dec jb sub in sub jge mov mov fcmovnu inc push cmp adc imul jns js lcall push dec sbb xchg push push scas les jge mov movsb scas sbb fsubs std cmpsb adc stos scas fsts decb xor fbld fmuls or adc add xchg xor js pop xchg add mov scas (bad) jnp cltd stos sbb aas push adc inc (bad) pop push xchg pop dec sub daa sub mov mov call nop ja fimul aam cmp insb cmp fcomps ds xor fadds xor stos mov (bad) stc pushf pop dec fst jp or das pop cmpsl fcompl mov xchg mov add jnp adc loop popa call and or popf push fldenv fnsave mov pop call cmpsb push jl (bad) jae jmp movsb icebp call xor popa push jmpw shrb lods cs popf sub pop std lahf aad insb stos sbb scas inc outsb cmp sub pop push sub (bad) mov inc (bad) in inc jp mov inc jge clc push jo jmp lods sub and (bad) pop ds pop cmp add add int3 xchg mov lods add test scas ljmp shlb mov or cmp shrb and add fdivp cwtl sub push inc mov mov aam in dec es test call ja addl or sbb or aas mov inc and adc stos rcll pop sarl ss (bad) jbe mov leave dec adc or and int3 pop pop pushl add sbb mov push nop mov repz leave xchg shrl fnstenv popa inc cli arpl test mov out arpl dec and mov ja sub lds jge mov jnp xor push inc dec cld aas inc dec (bad) mov pop push jbe int3 add int test int3 (bad) xor cltd jmp xor pop adc adc aaa push mov pop test mov add or and xlat pop add pop pop loop mov mov popf push clc imul pop pushl inc sub cmp inc mov mov loope,pt fsubrs cmpl sub mov iret sbb and dec mov pop pop jb mov pop stos mov mov pop push test sbb push adcl pop out jle mov adc dec insl xchg dec fs cmp dec movsb pushf fwait out lds adc push sub dec std jge add push sbb mov pop mov orl mov mov jb pop es and addr16 jl mov sub decb pop iret push jae pop cmp loope adc fimul push repz jmp xor mov jecxz pusha aad fcompl sub stos stos xor insl (bad) ja adc mov (bad) test enter sub lock xor pop xchg sbb (bad) adc sarl add add pop fldt xchg in dec data16 repnz or ret in nop adc inc insl mov push shrl dec cmp and jno push shl and fist lods jns sti sbb sub cmp clc les jmp outsb loopne or xor fwait sub fldenv xor pop mov xchg mov pop mov insl ljmp sbb sbb rcll or add add dec popf hlt mov push fptan mov loop pusha inc cmp xor add push addr16 mov stos imul adc push adc jge lock (bad) mov mov cvtps2pd and push in push sbb pop or fwait mov iret pop dec sbb mov cld jno,pt push rolb cmpsl push out (bad) arpl xchg and jecxz xor je lret inc add ret dec (bad) (bad) adc pusha into add std movsl cmc xchg cmp xor push fnstsw mov xchg add addr16 adc and inc jg adc repnz (bad) je dec jns jl mov int in scas jb jmp cmpsb jne jb loop sti fs (bad) mov pop test xor fcmovnbe pop add rcll lcall pop icebp out pop insl ljmp cld cmpsl out or cmpsb xlat inc push jno iret rolb rorl cs jno fcomi xor pop add add dec cmp cmpsl cli mov movsb pusha mov mov inc jp js xchg and test enter (bad) (bad) fcmovb sbb roll push xchg sbb jl loope push pop lret out (bad) popf adc inc cmp adc rcrb stos adc aam xor push inc pop inc leave leave rcrb cltd faddl xor jecxz mov (bad) jo or mov int pop test or push ja movsl add fldenv pop adc or test and push and dec das push in cmp pop xor lods (bad) push add rcrl cmc test inc xor inc mov mov shrl jl mov arpl pop cli adc (bad) in sub aaa sbb mov imul inc jne xchg jae imul ficomp jbe add pop cld sub addl repnz cmc pop cld cmp or pushf sbb and cli pop clc (bad) xrelease add push push sbb repz mov loope xchg mov dec int3 jle int out jecxz xor push dec stos fstl stc (bad) sti xor fcompl jmp mov sub mov popa aad push (bad) inc cli inc push fmull sbb repnz fstps pop repnz lahf lods aam add cmp sub repz push aas cmp jge pop cmp mov outsl mov pop out aaa cmp adc lods rcrl push lret add or fisttpl sahf push xchg das xor fucomi mov pop adc out ljmp xor cmp (bad) test shl sbb dec push std aad xchg pop pop inc push xchg in out je ret sbb xchg sbb je xchg lock jnp lock add dec add mov mov dec and scas pop dec xchg sbbb add fmuls dec psubusb inc stos movntps icebp cmp aad iret rclb xchg std xchg or sub dec loop popa pop stos lret sbb or testl lret jno cmp jecxz xchg cmp cmp stos lods daa sub pop insl dec lahf xchg inc imul inc and mov rcrb (bad) mov add sub std adc stc mul arpl push sarl xchg jl xchg bound mov and jl (bad) cmp jb leave cmp mov out xchg icebp add xor dec push xor lock push xchg repz cmp loope xlat xlat adc aam cmpsl popf (bad) cwtl das addb or stos xchg arpl mov lods xor (bad) hlt sbb xor stc push cld adc and dec sahf mov inc and add movsl mov xorl scas pop lock inc adc jecxz popf gs push paddsb (bad) clc mov shrb or jl mov dec cmp cmp sahf repz mov or fdivs pop inc cld andb xchg push lea mov xchg inc out mov sub xchg push test les es std inc add mov repz test movsl pop mov adc idivl jl add add add leave outsb imul (bad) fcoms pop sbb fadds dec jmp aaa pop mov xchg cld or pop fdivrp mov and sbb out test sub cld xchg jno popf repnz idivl mov sub js call cmp sub lret dec stc (bad) jb pusha aaa add cwtl (bad) jne in add ds cmp leave ja or mov dec lods xchg insl mov mov cld xchg ss add mov cwtl pop sub aad jle test repnz test sti int fwait daa (bad) push cmc imul gs mov (bad) dec add sbb sub jle nop je jae pop cld dec xchg lock and add pop and es push cwtl insl sbb push xlat es pop mov sti sub mov (bad) push lcall cld dec pop rcll adc clc loopne movsb ja leave adc cmpsl stos and add jmp sti test lods sub inc mov icebp sarb mov and mov jns cltd mov xor mov mov arpl push sub movsb daa jo ds hlt mov push loop (bad) dec cmp mov sbb outsl lds xor pop mov in addb add cmpsb adc cli fstps imul dec cmp mov cmp xchg stos lret mov repnz pop mull ljmp add pop mov in sbb push (bad) in bound orb (bad) dec push xchg mov pop mov test movsb in ficom lds fdivrs pop ds repnz rorl out aam jg sub sub loope cs movsl pop (bad) jg (bad) mov bound push jo adc jno xor outsb cmpl imul adc xchg dec aas jmp pop fbld push push push scas or (bad) popf add add xchg out push jns sub pop insl and aas sbb fnstenv movsb pop gs xchg ror insb je movl xor cmp (bad) in dec mov cmp sahf xor testb and test int3 imul xlat (bad) notl inc mov imul mov sbb mov inc inc dec pop add cltd fstpl add mov add jge test in hlt test jno dec ficompl repz and js inc imul sub or loopne and mov sub and push sbb inc adc lods les xchg sti repz in add int3 sti dec aas push dec or popf jle push ljmp xchg xor jg sub in inc xlat inc (bad) roll dec les pop es leave xchg (bad) pop addb out in mov sbb dec nop push lret jl imul popa mov divb (bad) mov icebp clc push push add (bad) fs pop pusha cmp cmp xor jl fdiv jno jp pop cwtl imul sbb inc stos outsb icebp adc lret imul mov (bad) mov or rep sbb fstps and xchg out push sub jl fcoml push and cltd clc jne shll xchg xchg test outsb test arpl mov pusha add xchg lcall sbb or ret mov (bad) xor xchg push and pop pushf mov icebp or xchg (bad) mov add or (bad) mov scas sarl mov or bound ret repz or jb sub adc ljmp movsl jb push sub inc adc cld mov sti aaa push adc les cmp add add xchg dec out mov push insl and cs das mov ficoml xchg sbb xor xchg or insb add mov push aam sub aas andnps ss dec pop movsl les xlat pushf rcl fsubrs into rcrl mov aam std std mov daa in xor xor loop inc push enter sbb repnz loopne adc stos xchg mov and add add les daa mov mov push xor cmp sub fisubl add cmp mov mov sub test in lds mov jmp sub jle mov iret dec cmpsb adc pop mov or mov test dec lcall mull sub subb fldl jg fmuls add aad test mov rorl or pop xchg enter cli adc push scas dec aaa jnp lock xchg test add add insl dec cmc ja mov pop mov mov jle addr16 jns lahf mov add insb dec inc sbb orl or sbb vorps xor ljmp in xor int3 mov jmp xchg dec cmpsb adc and enter out push daa sub mov sub (bad) lods push shrl fwait xchg inc cmp jb mov push mov add cmpsb sub inc and (bad) and pushf decb popf movl xor cs mov mov enter scas daa insl or dec loopne add cmp insl mov or jge into dec pop add pop mov lret mov jbe and imul mov shrb int3 testl stos add pop adc (bad) int3 or ret add add stos add lods sub call pop clc adc cmp and jge jb or xchg jg iret pop cmp jb adc pop test mov call out push or test das cmp inc add lock mov xchg cli push push mov testb mov das and bound aad movsb iret cmp shrl mov add or shrb dec adc adc add add mov outsl xlat test inc scas jle pop add and out popa rcll jp lock or fs mov dec pop xlat add dec sarb mov inc ja mov xlat push jl insb lods add out fadd mov daa mov jb test mov jle lret (bad) adc mov mov call insl adc xchg shrl mov test mov sub dec lea (bad) mov sbb add add add imul adc iret mov lods and aad mov jbe and notl imul jo dec cmc inc xor jbe pusha lods aas sarb push mov fisttpll xor mov test pushf out hlt int3 fldenv lahf add loop sub and and dec push test sub mov xchg jae mov fistpll push adc dec aaa mov in add push stos and xor aaa fadds inc add jmp xchg xchg push sti add out push pop jno mov pop sub inc movups mov hlt mov inc sbb xchg mov push pop add pushf sbb into mov ljmp dec aaa push sub cmpl cli adc ret inc push ds push lret push cltd lods xchg mov xor into mov sub inc mov mov bnd dec pop insb dec pop sub cmp add mov add test movsb and dec lret push icebp imul arpl add sbb cmp xor (bad) pop pop mov pop mov jg nop icebp push push cmpsl dec test stc jl jmp pop adc fs adc inc sub aam popa jne xchg jo pop movsb push push fisttp clc and lds push aas mov call xor adc fmulp inc or iret lret fldpi adc inc adc test pop mov (bad) repnz cltd xchg in add mov mov sbb fldenv fsubrp lahf inc mov scas lds (bad) popa and nop fdivp lock xor mov pushf and repz xor mov jp xchg aas loop popf imul jecxz ss dec adc test mov jmp jp ret mov jle (bad) clc js and cmp sti rol jno in js xor cld jmp dec adc add add add add outsb xchg scas addr16 sti cwtl jmp popf mov in xchg sub in scas inc aas or xchg test cli popa jae inc push jle fcoml pop sub mov lcall or sub out adc sub xchg popa aas xchg mov dec testl popa cmp cwtl inc mov sahf mov pop loope imul fidiv dec and pushf and push xchg imull dec mov adc add add inc call clc xchg ret mulb iret fadds jb ret test xchg mov mov inc (bad) stos push cmp int imul push aam adc ficom (bad) adc push cmpsl sub jge std mov xor dec jge jg sub cmp mov out cmp pusha or push inc mov mov xor inc sahf sub out cmpsl sub xlat xchg ret add sub and inc add pushl cli jmp add jne pop aaa push incb icebp mov arpl out or xchg mov pop inc push cmc lahf lahf push xor lret cmp shl dec fnstsw ds addr16 rcrl push inc inc popf es lods xlat adc mov jb push jmp xchg pusha flds dec add or and jne xor mov pushf mov mov mov jo cmpsb gs arpl (bad) out jo adc ficompl pusha adc and fstpt push rorb push xor in rclb push add push int3 call mov jae jmp stos mov subb test xlat jb out jne mov daa fcoml mov stc adc (bad) sbb jb jnp mov fisubl inc add movsb stos lds adc mov and add push ret cmpsb cli dec add add cmc aaa jmp repnz lcall fsubr jmp std aam test pop je pop and int enter (bad) repnz xchg push jae imul pop add (bad) hlt and jo mov daa cmp fild aad jb std and mov ds push mov push (bad) sbb adc into dec (bad) mov outsl out popl dec cmp xlat daa mov aam arpl sahf ss out lea divl out sbb or cmp jnp xchg cmp loop mov sbbl cmp stos ret mov and cmpsl andl sbb outsl in mov mov daa push add ret dec dec sti adc clc add andl fnstcw rclb cmp adc adc dec lahf jo adc test add je sbb sbbb ss pusha ret add jg dec mov jb adc fnstcw es stos (bad) mov mov push xor push sbb aam cmpsl fildll std push jmp out test std mov mov add mov jbe jnp push fidivr or inc push inc imul sbb scas icebp adc movl outsl and cmp js xlat rclb cli xor bound in das in cwtl xor int hlt jo inc ss jp outsl (bad) xchg dec pop (bad) aas dec in sub popa cmp cli sub cmp push ljmp leave inc leave iret jne or cmpl fs mov incl dec pop sub shrl pop (bad) jno mov hlt loopne jge adc adc arpl aas shrd int mov (bad) cmp fild adc ja add lds dec add push or sbb es fidivl int stos cwtl mov push out and aad lock push xchg iret xor sub or push ds lods (bad) enter push inc jno iret cmp push mov push repnz cld mov lahf ret and jnp jmp incb enter jno jecxz xor fld fsubrs xchg sarl push repz js and add add pop mov sbb cld mov hlt sarb push dec je push hlt bswap loope test cmpsl notl ss push sub cmp pop push jo mov stc loop mov mul dec inc movsb mov mov sub mov into repz inc aas lods loop xchg lods mov xchg and stc bound mov push push ds test mov or jle sti out imul sub ret add hlt pop xor rcrb cmp rorb mov outsb cmp jle push mov das icebp lahf aam in bound dec jecxz xchg aad out ljmp sbb (bad) sbb sbb push or pop mov mov repz movsb test fwait dec shll push mov mov stos inc jbe jle fiadd sahf data16 popf inc je mov rorl sbb mov mov cwtl sti (bad) mov subl mov add dec mov mov push lahf cmp imul sub jmp add mov jo (bad) lds xchg push inc sub mov fmul in xchg mov cmp add adc add lock cmp xor xchg dec in adc cmp jno ljmp push lock cmpsb mov xor stc popf sbb add dec loopne imul inc mulb mov inc mov add lret inc mov jmp (bad) xchg lods lcall and das ljmp or pop fcoms lahf cs and or ds jmp shll test clc mov inc dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc add das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp add add add jp test jo inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub inc mov dec outsl jg xor addr16 jle pop mov movb add dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall add add mov test dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad fsub out icebp divb int3 rcl fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test (bad) lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fadds fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp add std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov aad loopne add ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push push pop bound jno jl xchg mov mov (bad) in out repz incb or adc push and das xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc sbb add daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz add add unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop add insl jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop add outsb jae jle mov test ret leave into rcr fsubp jmp push or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp add addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push push pop popa imul addb add mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop add jne jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push jae orl mov ret enter fucom out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop add push je jg mov test ret enter fucom call add add pop or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat add jecxz in repnz std add or daa sub aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp sldt add add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop popa imul addb mov mov (bad) fndisi(8087 out lock add and aas inc dec push push pop pusha gs jne jg mov stos scas mov ret lret fsub out repnz add or push sbb sub add add add xor cmp dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor add add push push pop pop add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec add push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha data16 imul addb movsl stos mov mov add fndisi(8087 out lock add or pop sbb daa sub aaa cmp inc dec push push add insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and cmp dec push push pop pusha gs jne jg mov add movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov add (bad) leave into rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jb pushf movsb lods mov ret enter fsubp call add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out add icebp idiv add or push sbb es ss inc jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop add imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop fs je addb movsl stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) lret fcmovu in lock cli add and sub cmp dec push push pop popa add data16 jno jl xchg lods mov mov aam (bad) ljmp adc xor cmp dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and inc inc dec push push pop pusha imul mov test (bad) leave into aam (bad) ljmp adc xor cmp dec push push pop popa data16 jno jl xchg add add mov mov fcomp jecxz add cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop add jne addb cmpsb stos mov add (bad) fsub out icebp idiv add or pop sbb cmp inc dec dec push pop pop arpl je jle mov stos scas mov mov fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jae jge mov test (bad) leave into aam (bad) jmp add unpckhps and inc inc dec add pop bound jb jge mov test mov mov (bad) add add jmp add unpckhps pop and inc inc dec push push pop popa imul addl mov ret rcl fucom call add push adc push and xor ds dec dec push pop pop gs jne addb cmpsb stos mov mov rcl fucom call add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcr in repnz add or add add sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl push adc push and add add ds dec dec push pop pop arpl jae jle mov (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and sub xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds add add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add fucom call add or sub dec dec push push pop add jecxz out hlt stc incb push adc push and das dec push pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or or daa sub inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov add fndisi(8087 out lock add add add and aas inc dec dec add pop fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb add sub inc dec push push pop popa data16 jno jnp xchg movsl stos scas mov rol iret aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg mov rol rcl fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret leave into aam fsubp jmp add push adc push and xor cmp add add push pop pop bound jb jge xchg lods mov (bad) lret rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop add aaa cmp push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop arpl outsb jae jle mov test (bad) leave into aam fsubp jmp add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov mov scas mov mov (bad) jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs jo jnp test cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add adc and xor aas inc dec dec push pop pop add jo jp test movsb test add add mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov mov mov add int fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push add insb jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge mov mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into roll add fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop arpl jae jle mov mov mov mov fcomp add jecxz in repnz std add or daa sub aaa cmp inc dec push pop arpl ja test mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out in repnz add add add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push add popa imul addb movsl stos scas mov mov fcmovu in out cmc cli incl sbb and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps push and add dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or add sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb add add add xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg cmpsl lods mov rcr loope lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push add pop pusha gs jne jg mov test ret enter fucom call add add adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pusha add imul addb movsl stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas add push push pop pusha imul jne addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound outsb je jle mov test mov mov xlat fsub out icebp idiv add or xor inc inc dec push push pop popa insb jno jl xchg add cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov add (bad) leave into aam fsubp jmp incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fiaddl add loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec add pop popa insb jno jl xchg lods mov mov xlat fsub out icebp testl add add add or pop sbb daa sub aaa cmp inc dec push push pop bound jne nop cwtl lahf cmpsb lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es add xor cmp inc dec push add bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa add inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss add add dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl je jle test movsb stos scas mov mov out hlt stc incl push adc push and xor ds dec dec push pop pop arpl imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jb jl add addl mov aad (bad) ljmp adc xor push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add mov (bad) jecxz out repz incb push adc push and xor ds dec dec push pop pop arpl je jle mov test les lret fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add xlat fucom out repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock add add or pop sbb daa sub inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in ljmp add cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out cmc cli incl add das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es add add ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp testb add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec add add pop pop arpl jb jge mov mov mov (bad) in out hlt cli incl unpcklps pop and aas inc dec push push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul add mov test (bad) aad loopne ljmp adc xor add inc dec push push pop bound jb jge mov test mov mov (bad) in add cmc cli add and inc inc dec push push pop popa imul addl mov rol rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov add add mov aad (bad) jmp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov movsl stos scas mov rolb (bad) aad loopne jmp cmc sti add and sub ss inc add pop pop bound jae jge mov test mov mov (bad) in or pop push and dec dec push pop imul test mov ret xlat loop out cmc add add adc pop and inc dec push pop popa push mov mov ror xlat fsubp in repz add adc push and dec dec push pop imul xchg add mov mov (bad) fnop out cmc std add adc and cs push pop gs jae orl (bad) into aad jecxz icebp clc incl push adc cmp inc dec push pop popa outsb jne orl mov ret xlat fsubp in repz add movhps aas inc dec push pop popa push mov mov ret (bad) fucom ljmp sbb sub ss pop insw je (bad) mov add rol aad jecxz icebp clc incb sub aaa cmp pusha outsb je (bad) mov mov ror aad add jmp clc incl or das ss pop insw je orl (bad) int (bad) call or sbb es cmp dec push push pop imul test lods mov ret (bad) fucom ljmp sbb sub cmp inc dec push test mov fucom jmp add cli add movhps aas inc dec push pop arpl ja test mov ret (bad) fucom ljmp sbb sub cmp dec push pop popa push mov mov (bad) (bad) call or sbb sub mov mov fsubp in hlt sti add adc push and dec push pop pusha outsl jbe test mov vpaddq loop icebp clc incl push adc cmp dec push pop arpl add add xchg mov ror xlat fsubp in hlt sti add adc pop daa cs pop pusha outsb jne test scas mov (bad) fnclex jmp push adc cmp inc dec push pop imul xchg mov rol iret xlat fsubp in repz add adc pop es push pop pop outsb jne test scas mov (bad) (bad) jmp or sbb sub cmp inc dec push pop bound js xchg add into aad in repnz add movhps inc dec push push pop gs je (bad) mov mov sbb inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul add add add jbe addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov sbb outsb jae jle mov test ret frstpm(287 jmp idiv add or push sbb add sub aaa cmp add dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop add bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop data16 mov lods mov mov fcomp loop in repnz incb or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov add mov mov fcomp jecxz in repz std add push adc push and xor ds add push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add add add aad (bad) ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov xchg lcall mov add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae add mov stos scas mov mov fcmovu in out hlt cli incl unpcklps add and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and add add inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add push pop popa insb jb jl xchg lods mov add fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov idiv pop push adc cmp inc dec push push pop bound jb jl xchg add add rol rcl fsub out icebp idiv add or pop sbb daa sub dec dec push pop add push je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov lret rcl fneni(8087 out lock add or push sbb sub ss inc inc dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb mov mov xlat fsub out repnz add add add add add pop sbb dec push pop imul orl test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad fsub out repnz add or pop sbb daa sub inc add push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha data16 add jbe addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb add inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge add add mov mov xlat fucom out repnz add or daa sub dec dec push add arpl jae jle xchg cwtl mov mov aam (bad) jmp add push adc push and sub inc dec push pop pop bound jb jl xchg stos mov mov aad fndisi(8087 out lock add pop and jp test cmpsb stos mov mov (bad) faddl add out repnz add or sub dec dec push pop pop arpl je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle add movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) aad loopne ljmp add adc sbb sub ss inc dec push push pop bound jb jge mov test mov mov fcmovu in out cmc cli add and sub cmp dec push push pop popa insb jb js orl test (bad) leave iret aam (bad) ljmp adc sbb sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt cli incl unpckhps pop and add push push pop pusha imul addl mov ret rcl fucom call incl unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out add cli add and inc inc dec push push pop pusha gs jne addb mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec push push pop pop gs jne jp test movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor add inc dec dec push pop pop fs je jg mov add add xchg cltd lahf movsb test (bad) leave iret aam fnop in lock cli add pop and aas inc dec push push pop pop gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds push push pop imul mov mov add add aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc add push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol roll add fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock add cmc cli add and inc inc dec push push pop pusha imul addb mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fiadd in out cmc cli add adc xor push push pop pusha gs jne addb movsl scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb and add xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incl unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl add test movsb stos scas mov mov fcmovu in out hlt cli incl pop and aas inc add push pop popa data16 add add jbe addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add and das xor aas inc dec dec push pop pop fs je jg test cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov add rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fiadd add in out hlt stc incl or adc das xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop arpl out icebp idiv add or add xor ds dec dec push pop add push jne addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov rolb lret rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jb jge mov test (bad) leave iret aam (bad) ljmp or push sbb sub cmp dec push push pop popa data16 jno jl add add pushf mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge orl test ret leave iret aam (bad) ljmp unpckhps and inc inc dec push push pop pusha imul addl add add rol rcl fucom call add or and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec add imul (bad) clc std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add add add xor pop outsl jbe (bad) xchg test mov mov rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno js (bad) mov cmpsl lods mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul popl add add mov mov (bad) in out cmc cli incl unpckhps pop and inc dec push push pop popa imul addl mov rol roll xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl add rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add xlat fucom out repnz add or pop sbb and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out in icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aam fild in out cmc cli incl or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) jecxz in repz std add or add sbb aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad (bad) ljmp push adc sbb and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb add and inc inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov aad loopne out add push sbb aas inc dec dec push add pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out in repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop popa imul add add addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop gs je jg mov movsl stos mov mov aad (bad) ljmp adc das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and add aas inc dec dec push pop pop imul add add mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov add add ret leave into rcr add in out hlt stc incl unpcklps pop and das xor aas dec push pop popa imul addl mov rolb int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb into aad loopne ljmp adc sbb sub ss inc dec push push pop bound jae jle mov test (bad) lret fcmovu in lock add sti add or push sbb es aaa cmp inc dec push push pop bound jae jle mov test (bad) lret fnop in lock sti add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test (bad) aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jae jle mov movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb add sub dec dec add gs jne addb cmpsb stos mov mov xlat fucom call add push adc push and cs aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fucom call add push adc push and das xor aas inc dec add dec push pop pusha gs jne addb cmpsb lods mov mov xlat fucom call add push adc push and das xor aas inc dec dec push pop pusha gs jne addb scas mov vpaddq loop in repnz add or daa sub inc dec push push pop bound jb add mov test mov mov fcomp loop in repnz add or sub dec dec push pop pop arpl jb jge add mov mov xlat fsub out repnz add or pop sbb xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg add add mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul jl xchg lods mov add mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli lcall pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in add out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add lret rcl fneni(8087 out lock sti add add xor push push pop pop gs jne jg mov test (bad) lret fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and add xor dec push pop pop insl jne addl mov rol rcl fcmovu in lock cli incl and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push add imul mov scas mov mov aam (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add rol iret aad (bad) ljmp unpcklps and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul add add jns test movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add sbb es cmp dec push push pop popa data16 jno jnp add mov mov aad loopne add icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov loopne jmp cmc sti add and aaa cmp push pop arpl jb jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge mov add add mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test ret enter fsubp call add push adc sbb cmp pop pop arpl jae jge add mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam add add (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push cmp push pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl add and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos add lret rcl fneni(8087 out lock sti add or adc xor dec push pop pop fs je jg mov test ret enter add in out repz incb or adc push and add xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp add push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp or adc xor cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc add and cs aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push add add popa insb jno jl lea lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul add stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov aad loopne jmp cmc sti add sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov add add int3 rcl fsub out in repnz std add or daa sub inc dec push add arpl jae jge mov test mov mov fcomp idiv pop push push push and inc dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl add add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad add out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb add and sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc dec push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha add imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out in repz std add or sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle add mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne jg mov stos mov mov aad loopne jmp cmc sti add or push sbb sub xor push push pop pusha imul addb movsl add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp inc inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov ror xlat fsubp add jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg mov scas mov mov fcomp jecxz in repz std add add or sub xor add inc dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add add add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov add loopne ljmp adc xor push push pop pusha gs jne addb mov mov (bad) fneni(8087 out lock sti add or adc xor xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp and sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add jns test movsb test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom call incb or adc push and sub dec dec push pop pop data16 jne xorl fnop out repz add or sub dec push pop popa outsb je addl rol rcl fnop in out cmc cli incl unpcklps add and das xor ds dec dec push pop pop arpl add test movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov rcl fsub out lock add or adc xor dec push pop pop gs jne jg mov test ret leave into rcr fsubp call add or daa add inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos add int3 rcl fsub out icebp idiv add or push sbb sub xor add inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov ror xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa add inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul add jnp xchg movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov mov mov (bad) in out hlt stc incb add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge add xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul ja (bad) xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov add add mov rcr fucom out repnz std add or das xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb add sub inc dec push push pop bound jb jl xchg lods mov add fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp hlt stc incl add adc das xor dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne xorl in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jg mov mov mov fcomp jecxz out repz incb or adc push and xor ds add add push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add vaddsubps fneni(8087 in lock cli add pop and aas add push push add gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul jae jle mov test mov mov fcomp loop in repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov aad in repz incb unpcklps pop and das xor aas inc dec dec push pop pop imul add add add test ret leave into rcr fsubp call add push adc push and add aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop arpl jae jle mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je add lcall rol iret aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov add rcr fsubp call add or sub dec push pop pusha gs jbe addb movsl stos mov mov aad loopne ljmp unpckhps pop and cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp add add cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add unpckhps pop and aas inc dec dec push pop pop fs je add lcall rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) lret (bad) in out hlt stc incl unpcklps add add aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov mov in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in repnz add push push sbb inc inc dec push pop gs je test add mov fucom call add or sub dec dec push pop pop imul mov scas mov mov (bad) in out repz incb push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat add loope in icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds add push pop pop imul mov scas mov mov fcomp jecxz in repz or adc pop daa das ss pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add pop or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps add add and das xor aas inc dec dec push add gs je jg mov movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push add gs je jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb add sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad add out icebp idiv add or push sbb sub add add cmp dec push push bound ja (bad) xchg lods mov add fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jl xchg lods mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add fsub out icebp idiv add or push sbb es aaa cmp inc dec push push add pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb add ja (bad) xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl add xchg xchg pushf mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov ret enter fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fadds fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out repnz add idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl sldt adc pop and das xor aas inc dec dec add pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc daa das xor dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and das xor add cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add push pop add outsb jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs add jne jg mov stos scas mov rol rcl fnop in out cmc cli add and inc inc dec push push pop pusha gs jbe addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add rcr fucom call add or sub dec dec push pop pop bound jb orl cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul add pushf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov add fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fucom in repnz add or daa sub aaa cmp push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) add lock sti add add add xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb add add dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop fs je jnp test movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add add cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec dec push pop pop imul mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave add add fneni(8087 in lock sti add and inc inc dec dec push pop pop add add add je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov add (bad) jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp addl mov rol rcl fneni(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add add add xor dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg add (bad) iret (bad) fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock cld add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov add add (bad) int3 rcl fsub out icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz std add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add add adc xor push push pop popa data16 jno jl (bad) mov test mov mov (bad) in out hlt stc add add add unpcklps pop and aas inc dec push push pop pusha imul addl mov ret rcl fsub out repnz add sbb sub cmp inc dec dec push pop pop arpl jae jge mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec add pop gs je jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and xor add add dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add arpl jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jge mov movsb test (bad) leave into aam fild in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub xor push push pop pusha imul jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push pop outsl jns mov stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add add rcl fsub out icebp idiv add or pop sbb daa sub xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb add jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov into rcr fsubp call add push adc add and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul jl xchg lods mov mov xlat fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl push je jg mov stos scas mov rcr loop icebp clc std add or add cmp inc dec push pop pusha imul (bad) mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec push push pop popa imul addl mov ret leave into aam (bad) ljmp adc sbb es aaa cmp add imul nop xchg pushf mov mov xlat fucom call add push adc and inc inc dec push push pop popa insw jb jle mov stos scas mov mov fneni(8087 in lock add or pop sbb cmp inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub xor aas inc dec dec push pop pop fs jne jg test movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jae jge mov test mov mov aad (bad) ljmp adc sbb sub ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) jecxz out repz incb unpcklps pop and das xor push push pop pusha imul addb cmpsb add aam fsubp jmp add mov inc dec push pop pusha outsb jne addb cmpsb stc incl adc xor cmp pop pop arpl je jg mov lods mov mov fnop in icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jne addb test mov rol rcl fsub call add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov xlat fucom out repnz add add adc pop and xor cmp inc dec push push pop bound je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push pop pop arpl jae jg mov stos mov mov (bad) fsub out repnz add or daa sub dec dec push pop pop fs je jg mov movsl stos scas mov mov fneni(8087 in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz in repz std add unpckhps and inc inc dec push push pop popa data16 jno jl xchg scas mov mov fcmovu in lock add or push sbb sub aaa cmp pop pop arpl je jle test movsl stos scas mov rol rolb add (bad) fndisi(8087 out lock add or push sbb daa sub aaa cmp pop pop imul mov aam fsubp jmp add push adc cmp push pop pusha imul addb mov scas mov mov fneni(8087 in icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jae jg mov stos mov mov (bad) fneni(8087 out repnz std add or sub xor aas inc dec dec push pop pusha imul mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop popa imul addl add rcl fsub out icebp idiv add or xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop pop arpl add add jns test movsb test (bad) lret (bad) out testl push es dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb scas mov ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jae jge mov test add lods mov mov fcomp loop in repnz std add or daa add xor inc dec push push pop pusha imul addl mov rol rcr loop out idiv add adc and xor cmp push pop bound jb jge mov mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock add cmc sti add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs jne addl mov ret rcr fucom call incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov fucom call add push adc sbb add sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add push adc push and xor cmp pop pop arpl jae jge mov mov mov aad loopne ljmp unpckhps and inc inc dec push add add pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out idiv add or sub xor ds dec dec push pop pop arpl outsl je jg mov stos scas mov mov fnop in lock cli add and dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul add movsb stos mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl add add lret rcl fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add add add (bad) int xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es add cmp push pop bound jb jl xchg mov mov fcmovu in add ljmp push adc push and sub dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb js (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc das xor dec push pop pop imul add test mov mov fcomp loop in add repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add add add add pop or pop sbb es cmp dec push push pop pusha gs je jg mov add ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test mov (bad) in out hlt stc incb or adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa imul addb movsl stos scas mov mov (bad) jecxz out hlt add sub dec dec push pop pop arpl pushf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or sub inc dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc pop and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec add pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push insl jbe test mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave add aad add fneni(8087 in add idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp idiv add or push sbb and sub inc dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov (bad) leave iret aam (bad) ljmp adc xor cmp inc inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop pusha add add add jne addl mov rol rcl fucom out repnz std add or sub xor ds dec dec push pop pop imul (bad) xchg lcall mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov stos scas mov rol rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov add xchg cwtl popf mov mov (bad) in out hlt cli incl and inc inc dec push push pop popa imul addl mov rcr fucom call add push adc push and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jg mov stos scas mov add fneni(8087 in lock add pop or dec push pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push add popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add push or push sbb daa sub aaa cmp inc dec push push pop popa insb add jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push add and cs ds dec dec push pop pop imul (bad) xchg cltd lahf add rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop popa imul addl mov add (bad) int3 rcl fsub out repnz add or pop sbb daa sub aaa add add inc dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jg mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov aad (bad) ljmp adc xor push push pop pop gs add jp test movsl stos mov mov aad (bad) ljmp or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb add test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov add (bad) lret rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret iret aam (bad) ljmp unpckhps pop and inc inc dec dec push pop pusha gs jne addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz add repz std add or and cs aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli decl adc pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat add jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz add or add sub dec push push pop bound jb nop xchg fwait mov mov aad loopne jmp cmc cli add and inc inc dec push push pop add insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop add pop arpl je jle mov test (bad) lret fcmovu in out hlt cli incl unpckhps pop and aas add push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound ja (bad) xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add add sahf mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov sub aaa cmp inc dec push push pop bound jb jge mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov flds (bad) ljmp add unpcklps pop and aas inc dec dec push pop pop gs jne addb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub add add cmp push pop bound jb jge xchg test mov mov fcomp jecxz in add stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aam (bad) ljmp unpckhps pop and cmp dec push push pop popa imul addl mov ret (bad) fneni(8087 out lock add pop or daa sub dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno add addl mov mov fcomp loop in repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out cli add unpcklps pop and das xor aas inc dec dec push pop pop add jo jp test movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne jg mov add add add add mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov add add rcl fsub out icebp idiv add or push sbb sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor dec push pop pusha imul addb movsl stos mov mov aad fneni(8087 in lock sti add and es aaa cmp inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec pop pop gs jne jg mov stos mov mov (bad) fndisi(8087 out icebp testb cld add or pop sbb cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul add pushf mov mov fcomp loop in repnz std add or add add cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add and inc inc dec push push pop pusha imul orl mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov aam (bad) ljmp adc xor add dec push push pop pusha imul addl mov rol rcl fsub out repnz std add or sub xor ds dec dec push pop pop arpl je jle mov stos scas mov mov fcmovu in lock sti add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov fadds fsubp jmp add unpckhps pop and inc inc dec push push pop pusha add jo jnp xchg cmpsb lods mov cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop pop imul mov lods mov mov fcomp jmp or daa sub inc dec push push pop popa imul addb movsl stos mov mov (bad) aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop gs jne jg mov add lods mov mov add add fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp mov xor inc inc dec push pop pop imul (bad) xchg lcall rol rcl fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl add adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or add add daa sub dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp add add add inc inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jge mov stos mov mov aad loopne ljmp unpcklps pop and cs aas inc dec dec push pop pop arpl imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub ss inc dec push push pop popa imul add addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb lods mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop gs jne jg mov add mov mov (bad) jecxz out repz incb or and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov add ret enter call add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul ja (bad) xchg lods mov mov int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out add stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub add in repz std add or sub push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub add push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or daa sub add inc dec dec push pop arpl add test movsb stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec add pop add insl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl je jg mov ret rolb fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg xchg xchg popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jae jge mov test add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos add add lret fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add unpcklps pop and add cmp dec push push pop pusha imul addl mov rol add (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add add adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam in repnz std add or sub dec dec push pop pop imul mov mov rcr fucom call add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc add add push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jae jle mov test mov mov (bad) jecxz out hlt stc incb unpcklps and cs ds dec dec push pop pop imul nop xchg lcall rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb add add jl xchg test mov mov fcomp jecxz in repz incb or adc push and add xor push push pop pusha gs jne addb cmpsb stos mov mov rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addb add add stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec imul mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jge mov add (bad) leave into add aam fsubp jmp add unpcklps pop and das xor aas add push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul (bad) mov scas mov mov fcmovu in out hlt stc incl unpcklps push and das xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov ret rcl fucom out out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps sbb and inc inc dec push push pop pop imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub add add push pop pop arpl jae jge mov test ret leave into rcr fucomip out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub dec dec push add imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add add add je jg mov stos scas mov rol rcl add loope jmp idiv add or push sbb sub cmp dec push push pop popa imul ja (bad) xchg lods mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or sbb and das xor ds dec dec push pop pop arpl jae jle add mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb add (bad) aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa add dec dec push pop pop bound jae jge mov mov mov aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc dec push pop popa insb jb jge xchg cmpsl lods mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave add aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock add cli add and inc inc dec push push pop popa data16 jne jle mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc sbb and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov rcl fsub out in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge xchg test mov mov fucom jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in icebp idiv add or push sbb add inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov lahf movsb stos scas add rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb add mov test ret leave into rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov add mov aam (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or sbb daa sub cmp gs jae jg mov stos scas mov mov (bad) in out hlt stc add add add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps add push and cs ds dec dec add fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add pop and add add xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor add add push pop pop arpl jae jle mov scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or push sbb and inc inc dec push push pop pusha gs jne jg mov movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae add orl test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps and inc inc dec push push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and add aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in cli add unpckhps pop and das xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb movsl stos mov add mov rol rcl fneni(8087 in lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop add insb jno jl xchg lods mov mov add rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos add int3 rcl fsub out icebp idiv add or pop sbb es ss inc dec mov in repnz std add or sub dec dec push pop pop arpl jae jle mov add test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov add test mov mov fcomp jecxz in repnz std add or sub inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jle mov test mov mov add add enter fucom call add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge add movsb test (bad) fndisi(8087 out add add icebp idiv add or push sbb sub cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb add or adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu add in icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg test mov mov xlat fucom call add or add add sub dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps and aas add dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and cmp dec push push pop popa imul xchg test iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insl jb jns test add test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul ja (bad) xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test add scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov rcl fucom out repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add add rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jbe orl test mov mov fcomp loop in repnz add or pop sbb add sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fsub out add in repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov mov mov fcomp loop in repnz add std add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push push add push (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov rcr fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov loopne ljmp adc add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl add and xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop pop gs add addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec add dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc add pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound add insl jb jl mov cmpsl lods mov add loop cmc cli add and push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or add sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add popf mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec add pop fs je jg mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods add mov mov (bad) fndisi(8087 out lock add and aas inc dec dec add pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add lret (bad) in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul addl leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec add pusha gs jne jg mov stos scas mov mov (bad) in jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pop gs add addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec add pusha gs jne addb movsl stos mov mov aad (bad) ljmp add add add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or add add pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov ret rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in hlt cld add push adc push and add add cmp inc dec dec push pop add push je jnp test cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub dec add pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt stc incl or adc xor push push pop pusha imul addb movsl add enter fsubp call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle add mov mov fcomp jecxz out repz incb push adc push and cs ds dec push addr16 orl rol rcl fndisi(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov add int3 rcl fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or daa add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) add add loope jmp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop add jne jg mov mov into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jb jge orl test ret enter fsubp call add or add add sbb cmp push pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub add add cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pusha gs jne addb movsl stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec add pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb adc sub cmp dec push pop pop arpl jae jle mov add test ret enter fsubp call add push adc push and xor ds dec dec add fs je jg mov test (bad) leave iret aam (bad) ljmp or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb add movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha imul addb mov mov add rol rcl fsub out icebp idiv add or pop sbb daa sub add pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr add loope icebp clc std add or sub dec dec push pop pop arpl jns xchg stos mov mov aad loopne ljmp push adc push and xor cmp push pop bound jno jl xchg cmpsb stos mov mov aad (bad) ljmp push adc push and sub inc dec push add arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl unpcklps pop and cs ds dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov (bad) fneni(8087 in lock cli incl or adc pop and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and xor cmp pop pop bound jb jl add mov mov (bad) fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp sldt add push and xor cmp push pop bound jno jl xchg stos mov mov rcl fneni(8087 out lock cli add pop and cs ds dec dec push pop pop bound jb jl xchg stos mov mov fucom in hlt cld add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop out repz std add or sub add cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat add jecxz in repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub xor ds dec dec push pop pop arpl insl jae jge mov test mov mov fcomp loop in repnz add or add xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa ds dec dec push pop pop fs je jg mov add (bad) xchg cltd lahf movsb test add lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add add add rol rcl fnop in lock cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or adc push and sub dec dec push pop pop bound jb jge mov test mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add add adc pop and das xor aas inc dec dec push pop pop fs je jg mov nop xchg fwait mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or and sub xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and inc dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub call sbb cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 add insb jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa insb jno jl add mov mov fcomp jecxz out repz incb or adc push and xor cmp inc dec push push pop pusha gs jne addb add add mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov add test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov add loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov mov fcomp jecxz in repz std add or sub mov loope in icebp idiv add or push sbb sub ss add dec push push pop popa add jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push add arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor add push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb add rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop add add outsb jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jno add ja addl mov rol rcl fneni(8087 out lock add inc dec push pop pop imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp add out add sti add and cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov add enter fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub xor cmp push pop bound jb js orl cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add adc sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add add clc std add or sub inc dec push push pop bound push jle mov test mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov movsb test mov fcmovu in out add cli add add or adc das xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pop insb je (bad) xchg test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc add push push pop popa data16 jno jnp xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp add add push push pop popa imul addl mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop add add imul add stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fnop in jmp idiv add or push sbb sub cmp dec push push pop popa imul add jbe addb cmpsb stos mov mov cmc std add adc pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub xor cmp pop pop arpl jb jge mov cmpsl lods add into rcr fucom call add or sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add int3 rcl fsub out icebp idiv add or adc xor push push pop pop gs je jg mov movsb stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fsub out icebp idiv add or adc xor push pop bound jl xchg lods mov mov (bad) fneni(8087 in lock cli add push or push sbb xor dec add imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl add unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul lcall lret fnop in lock cli add and inc inc dec push push pop pusha gs jne add add lcall rol rcl fcmovu in out cmc cli incl and inc inc dec add pop pusha gs jne jg mov stos scas mov mov aad loopne ljmp unpckhps and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul mov add add mov mov fcomp jecxz out repz std add or sub xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat add jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub dec dec push pop pop bound jb jge xchg mov test mov mov fcomp jecxz in repnz std add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop bound jno jl xchg lods mov mov add add (bad) int3 rcl fsub cld add adc and cs push pop pusha outsb jne orl mov (bad) lret rcr loopne out idiv add adc and cs inc dec push pop pop insw je (bad) mov mov (bad) lret rcr jecxz icebp clc incl or xor inc dec push push pop insw je (bad) mov mov (bad) fchs out hlt sti add movhps inc inc dec push pop imul mov mov fsubp in cmc add add add cld add adc and xor inc inc dec push pop gs jne test mov ret fchs call push push sbb inc dec push pop bound js xchg mov (bad) int3 rcl fsub out repnz add or pop sbb aaa cmp dec dec push pop pop arpl jae jp test movsl stos scas mov mov fcmovu in out hlt cli incl lldt sbb sub cmp dec push push pop bound jb jge mov add add mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and xor push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub aaa cmp popa push test cmpsl lods mov mov xlat fucom add add in repnz add or push sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add add add or pop sbb es xor cmp pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc add pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc add and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jb add mov test sti add or adc xor cmp dec push push pop pusha imul add jnp xchg ret int xlat fucom out repnz add or daa sub inc dec push push pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop bound jae jge mov test add mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add add rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad (bad) add add out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add sub xor ds dec dec push pop pop arpl jae jle test movsl stos scas mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or adc sbb es ss inc dec push push pop popa insb add jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov aad (bad) ljmp adc add sub xor push push pop pusha gs jne addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov add xlat fucom out repnz add or sub inc dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or and xor ds dec dec push pop pop outsl ret fsub ljmp sbb inc dec push pop pop insw jne orl mov vpaddq jecxz lock cli incl add add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and add cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl and es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov repz add adc and das aaa cmp pop pop bound jb jge mov add mov rcr fucom call add or daa sub inc dec push push pop bound add jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or and cs ds dec dec push pop pop imul mov scas add add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov rcl fnop in out cmc cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop add jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne add jmp idiv add and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov add fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb add add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fild in lock cli add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb add and inc inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es xor add pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov (bad) lret rcl fneni(8087 out lock add pop or pop sbb es ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jns orl test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul add test ret leave into rcr fsubp call add or sub add push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov movsb test ret leave iret aam fsubp jmp add push adc push and xor ds add push pop pop imul mov scas mov mov out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jmp adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat add add loop in repnz add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call incb push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out add hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push add sbb and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc add and das xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and add xor cmp je orl ror xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add push adc push and sub dec dec push pop pop bound add add jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc inc dec push push pop bound jb jl orl test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul add add orl test mov mov fcomp jecxz in repz std add sub dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lea lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl ret rcr fsubp call add or sub inc dec push add bound jb jl xchg stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jnp xchg movsl stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add add rcr fsubp call add or sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov rcl fneni(8087 in out cmc cli incl unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock cli add pop and das xor aas inc dec dec push pop pop imul mov test mov mov add fucom out icebp idiv add or push sbb and inc inc dec push push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jb lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl add unpcklps push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and cmp inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fildl loope in icebp idiv add or push sbb and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and add add inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc pop es push push arpl jne addb mov mov xlat fsub out repnz add or sub inc dec dec push pop pop push jbe addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul add jno jnp xchg cmpsb stos mov mov aad loopne jmp idiv add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor cmp push pop pop imul add add add add movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sbb aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb add mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov movsb test add lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas add xlat fsubp call add or daa sub ss inc dec push push pop popa imul addb movsb stos scas mov mov fcomp jecxz in repz incb or adc sbb aaa cmp push pop bound jno jl xchg movsl stos mov mov aam (bad) jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov add add rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fildl add out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fucom call add repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop ss dec push pop arpl ja (bad) xchg lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add ret leave into aam fsubp jmp add push adc push and add add cmp inc dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb push adc add and das xor aas inc dec add add pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl adc xor push push pop pusha add add jne addb movsl stos scas mov mov fcmovu in out cmc cli incl and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps and inc inc dec push push pop pusha add test stos mov mov aad loopne ljmp adc das xor push push pop pusha imul addb add xchg lcall rol rcl fnop in lock cli add and inc inc dec push add popa data16 jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa add inc dec push push pop bound jb jl xchg add cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov movsb test add aam fsubp jmp add push adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop add jne addb movsl stos mov mov aam (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov int3 rcl loop icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop add jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and add xor push push pop pusha gs jne jg mov stos mov mov aad (bad) add ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add add pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae add mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop add and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and popa imul fwait mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pusha gs add add jp test movsb stos scas mov mov (bad) in out repz incb or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge add popf mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add or sub dec dec push push pop bound outsb jae jle mov add add lods mov mov fcomp loop in repnz add or pop sbb daa sub cmp push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha gs add addb cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) add ljmp sbb sub cmp inc dec dec push pop pop imul mov mov mov add (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov add rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out add add add icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add pop or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and add sub cmp dec push push pop insw je jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec add push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul add lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 add add jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg add add cmpsl lods mov mov add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov ret (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test add add scas mov mov (bad) in out hlt cli incl pop and cmp inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge orl test (bad) leave add aam (bad) ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpckhps and inc inc dec push push pop pusha imul addb mov mov fcomp loop in add repz std add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fneni(8087 in lock sti add or push sbb es ss inc dec push push pop popa insb jb jl xchg cmpsl lods mov mov fadds fsubp jmp add unpcklps and inc dec dec push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps push and add add xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or add sbb xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub add add push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec add add push pop pop imul test movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul fwait mov ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov add cltd lahf movsb test mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test add add int fcomp loop in repnz add or daa sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock cld add or pop sbb daa sub aaa cmp dec push push pop data16 jno jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) (bad) in icebp idiv add or pop sbb es ss inc dec push push pop popa add jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec push push pop pop gs jne jg mov test (bad) leave iret aam (bad) jmp add out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add or sub inc dec push push pop bound jb jl xchg add (bad) int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa inc rcl jecxz repz incl unpcklps pop and das xor dec push pop pop fs jne jg mov test (bad) leave add aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp add call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp testb sti add or adc xor dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp add xor inc inc dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp lldt sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or sub dec add push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop add add imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge (bad) xchg lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push insb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl add mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov add mov ret rcl fucom out repnz add or daa sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp add push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz add jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add add push or add sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or adc sbb add add cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out repnz add or sbb xor ds dec dec push pop pop add arpl jae jns test movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul mov scas mov mov aad (bad) ljmp unpckhps pop and das xor inc inc dec push push pop pusha gs jne addb add add mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jb addb test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in add stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add pop and cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in add add clc std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas add push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add push add adc push and xor ds dec dec push pop pop arpl jae jle add movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcr fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov add (bad) aad loopne ljmp adc add add cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz adc push and xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul jo jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb add jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fsub jmp push or push sbb sub cmp dec push push pop pusha gs jne addb mov add lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb and sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul ja (bad) xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in add jmp add push adc push and cs ds dec dec push pop pop imul nop xchg mov mov fcmovu in out cmc cli add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp or push sbb add add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add idiv add or daa sub add add aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp unpcklps pop and cs ds add add push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec add pop arpl jb jge mov stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop add gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb ja (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov lea lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out clc add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods add mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov add (bad) int xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add push (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fadds fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl mov rol rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec bound js orl test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pusha gs jne addb cmpsb stos mov mov rol rcl fsub out repnz add or pop sbb add add sub aaa cmp push pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and sub xor dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp add add push push pop bound jb jge mov test mov mov fcomp jecxz out repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out hlt cli incl or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound add add jb add mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov vpmullw in repz incl push adc push and xor ds dec dec add imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg add add mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov mov mov fcomp jecxz in repz std add push adc sbb cmp pop pop arpl jb jge mov test mov mov xlat fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov add ret rcl fucom out repnz add or dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fucom out repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa add das xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc add add sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and add add add ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push push pop bound add je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc add inc dec push push pop pop gs jge mov stos scas mov mov fcmovu in out hlt cli incl push adc push and xor ds dec add pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop add add insl jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul add add add orl movsb test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg add add stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop imul mov scas mov mov loop out repz std add or sub dec dec push pop pop arpl jae jge mov mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add (bad) int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) add loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insl jb jl xchg lods mov mov xlat add loope in icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and inc dec lods mov xlat fsub out repnz add or daa sub inc dec push push pop popa insb jno add addl mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps and inc inc dec dec push pop pop gs je jg mov add (bad) xchg lcall mov (bad) in out add cli incl pop and xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incl push adc push and cs aas inc dec dec push pop pop imul mov add mov mov (bad) jecxz out repz incb or sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor dec push push pop popa insb jno jl xchg mov rolb add vaddsubps fneni(8087 in lock cli incl add and add dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor cmp pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop add je jg test movsl stos mov mov aad loopne add lock cli add and inc inc dec push push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt cli incl add or adc pop and das xor aas inc dec dec push pop pop imul mov scas mov mov aad (bad) ljmp unpckhps pop and aas inc dec pop insb je orl scas mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or adc push and add add add add inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec add pop pusha gs jne jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul add add jp test movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov lods (bad) iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov add add ret enter fucom call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop add imul mov scas mov add mov aam fsubp jmp add push adc sbb cmp pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add or adc push and cs ds dec dec push pop pop arpl jae jle mov test mov rol rcl fsub add out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl unpcklps pop and das xor ds dec dec add pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add add add or daa sub aaa cmp inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or add pop sbb aaa cmp push pop popa insb jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push add add sub xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add adc xor inc dec push pop bound jns xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb and sub aaa cmp inc dec push push pop bound add jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz adc sbb cmp pop pop bound jb jge mov add add add lea scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl outsl jne jg mov stos scas mov rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs je jg mov add add (bad) aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc add pop popa data16 ja (bad) xchg cltd lahf movsb test add lret fcmovu in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov add add fcmovu in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli add and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec add pop pusha imul addb movsl stos mov mov aad loopne ljmp lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov loop repnz add unpcklps pop and das xor aas inc dec dec push pop add imul (bad) xchg cltd lahf movsb test (bad) leave into aam fcmovu in lock cli add and inc inc dec dec push pop pop gs jne jg add cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs add add addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop add inc inc dec push push pop pusha gs jne addb nop xchg lcall mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov add add (bad) leave iret aam (bad) ljmp unpcklps pop and xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and xor cmp pop pop arpl jae jge mov test mov mov add add rcl fucom out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne add in lock cli add pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb and sub inc dec push pop pop bound jb jge mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov rcl fucom out repnz add or push sbb add sub cmp dec push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa imul addl mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop add je jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out add idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub add add push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out idiv add or pop sbb es ss inc dec push push pop add imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno add addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fiaddl loopne jmp idiv add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov add lea lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc add push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov add add mov xlat fucom out repnz add or pop sbb xor cmp jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jle test movsb test ret leave into rcr fsubp call out repz std add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add add add or push sbb sub cmp dec push push pop pusha data16 jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov stos mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fildl loope in icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov add (bad) jecxz out hlt stc incb push adc push and cs aas add push pop pop imul (bad) xchg lcall mov fnop in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound add jb jl xchg mov rol rcl fsub out icebp idiv add or push sbb es add push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or add push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add adc and sub cmp dec push push pop pusha imul addb nop xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos add mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec add pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test (bad) leave into aam (bad) ljmp hlt cli incl and inc inc dec push push pop pusha outsw orl lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa add add inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz incb or adc push and cs ds dec dec push pop pop imul add add test movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pop gs jne jnp xchg movsl stos mov mov call or adc das xor aas inc dec dec push pop pop imul mov xchg lcall mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg add add mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp push adc push and xor ds dec dec push pop pop bound jb jge mov cmpsl lods add mov mov (bad) fsub out icebp testb adc sbb es ss inc dec push push pop popa imul addl mov rol rcl add loope in icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and inc dec dec push pop pop bound jb jge xchg test mov mov fcomp jecxz out repz incb add or adc push and xor cmp pop pop arpl add jle mov (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out repnz add or pop sbb add and sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 add in repnz add or pop sbb aaa cmp inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add adc and sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl add add jb jge xchg scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push add bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push add aaa cmp push pop bound jb jge add popf mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov add movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa add jb jge xchg test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp or adc das xor dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov add add (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs add addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha add jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or add add sbb and xor ds dec dec push pop pop arpl jae jle mov test mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor cmp dec push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec add pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jnp mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jae js orl test ret leave into rcr fsubp jmp incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop imul (bad) xchg add add mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop add push je jg mov test (bad) lret fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov iret aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub in icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub add add add out icebp idiv add or pop sbb aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add push adc push and xor ds dec dec push pop pop arpl jns xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jle mov test ret leave into rcr fsubp jmp add push adc push and add sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov aad loopne jmp idiv add or push sbb and inc add pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov roll int xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl add jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push add aas inc dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg add mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec add pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add leave iret aam fsubp jmp add push adc push and sub dec dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave roll fnop out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and inc add inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add sbb es cmp dec push push pop popa imul addl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add add dec dec push pop pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and xor inc inc dec push push pop popa insb jno jnp xchg cmpsl add enter fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jno jl xchg lods mov mov fcomp loop in repnz std add or daa sub inc dec add push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop data16 jno jl xchg movsl stos mov mov (bad) fneni(8087 in lock add add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg add test movsb test ret leave into rcr fsubp jmp add push adc sbb cmp push pop bound jb jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb ror rcr fldl jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test add add into rcr fsubp call add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or and das xor ds dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov add rcr fucom call add or sub dec dec push pop pop arpl jae jge mov test mov ret enter fucom call add or sub inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) jmp add add hlt stc incb push adc push and cs ds dec dec push pop pop add jo jp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in clc incl sldt add add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu add jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out in repnz add or sbb and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec add add pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub add ds dec dec push pop pop arpl jae xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp adc sbb sub cmp dec push push pop popa data16 jg mov stos mov mov aad loopne jmp idiv add or push sbb es ss inc data16 jno jl xchg lods add add int fcomp jecxz in repz incb or adc push and xor ds push pop pusha gs jne addb movsl stos scas mov mov fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov flds add fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae xchg movsb test ret leave into rcr fsubp jmp incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or push sbb es ss inc add push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or add pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec dec push pop pop arpl jae jge mov test add into aam fsubp jmp add push adc push and add add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es cmp add add push pop popa imul addb cmpsb stos mov mov fnop in lock sti add or push sbb sub xor push push pop pusha gs jne addb mov mov (bad) fneni(8087 out lock sti add pop or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha add outsl jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add pop sbb daa sub aaa cmp push pop bound jb jl add add mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add sahf mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov add mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave add aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret leave add into rcr fsubp call add or sub dec dec push pop pop bound jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fucom out repnz add idiv add or adc push and sub dec dec push pop pop arpl jb jge mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg mov mov fcomp jecxz out repz incb or add sbb and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push add imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add and sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl adc xor push push pop pusha gs jne addb movsl stos scas mov mov icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop add insb jno jnp xchg cmpsb stos mov add fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc sbb cmp pop pop bound add add ja (bad) xchg lods mov mov (bad) fndisi(8087 out lock add or adc das xor dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul add add lahf movsl stos scas mov mov (bad) in out hlt add incl pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and mov (bad) fsubp jmp idiv add or push sbb daa sub add cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add sbb daa sub aaa cmp inc add pop popa insb jno jl xchg add (bad) int xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add (bad) int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push add imul addl mov rol rcl fneni(8087 out add idiv add or push sbb es ss inc dec push push pop popa imul add add addl mov rol rcl fndisi(8087 jmp pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg add lods mov mov xlat fucom out repnz add or pop sbb es add cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test add add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add add adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno ja (bad) xchg lods mov mov rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad fucomip out repz incb or adc push add das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out add add icebp idiv add or push sbb sub cmp dec push push pop pusha imul jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add pop or pop sbb daa sub aaa cmp inc dec push push pop bound push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test mov fcmovu in out hlt stc incl sldt add push and cs ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp push pop fs je orl mov aad loopne ljmp unpckhps pop and aas inc dec dec push add imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul add jns test mov mov fcomp jecxz in repz std add or daa sub aaa add pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge add add add popf mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov rcl fndisi(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb add mov xchg cwtl popf lods ret int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add push or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add (bad) lret rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds add fucom call add or and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call adc pop and aas inc dec dec push add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add add add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp testb add adc and sub ss inc dec push push pop popa imul addl mov rol rcl faddl loop in repnz add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor add add dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and add xor dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop add add imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add or add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl add add pushf mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add push (bad) mov test mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb xor ds dec dec push pop pop arpl jae jle mov add cwtl sahf mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push add insl jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov movsl add vaddsubps fneni(8087 in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl push je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov add (bad) int fneni(8087 in lock cli add push or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp loop add add in repnz std add or sub dec dec push pop pop arpl jae jge mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push add imul addl mov rol rcl fsub out repnz add add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and add xor push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp inc dec push pop popa outsb jne orl mov ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop add add je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub add cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa insb jno add jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec push push pop data16 je jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl (bad) xchg xchg pushf mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add or sub inc dec push push pop bound jb jge mov rcr fucom call incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out add idiv add or pop sbb daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fneni(8087 in lock sti add adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp add std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) sbb aas inc dec dec push pop pop imul add add jns test mov mov fcomp loop in repnz add adc sbb cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov xchg cwtl popf mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add add pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl orl test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov ret rcr fucom call add or daa sub dec push pop pusha imul addl mov ret rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jae jge mov test mov mov (bad) in out hlt stc incl add adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out in repnz add or and xor add inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add add add adc sbb es ss inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp loop in repnz std add push adc push and xor ds dec dec push pop pop add jo jp test movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jle mov movsl stos mov mov aad loopne jmp idiv add or push sbb add sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall fsub call or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop add add push je jg mov test mov (bad) in out hlt stc incl push adc push and xor ds dec dec add imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add test movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fucom out add clc std add or sub inc dec push push pop popa insb jno jl xchg lea lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jle mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb add rol rcl fneni(8087 in lock cli or pop push and xor ds dec dec push pop pop arpl jae jge mov add mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 add in repnz add or pop sbb es ss inc inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas add mov mov (bad) in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov rcl fnop in lock cli add and cmp dec push push pop pusha imul addb mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push pop pop je addl mov mov xlat fsub out icebp idiv add or push sbb sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add add adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fucom call incb push adc push and add sub xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop gs jne test movsb stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec add push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg add mov lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg test movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb add add mov aam fsubp jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test add iret aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or xor inc movsl scas mov mov fcmovu in out hlt stc incl push adc push and cs add add add add ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub inc dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop add add outsb jae add mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add jg mov test (bad) leave into fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add or adc xor add pop pusha imul addb add add stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu add jmp cmc sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop fs je jg mov add (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jno jl xchg lods mov mov rol rcl fndisi(8087 out lock add and cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fndisi(8087 out in repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add pop or daa sub dec dec push pop pop bound jb jge mov test ret leave into rcr fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test ret leave into aam fsubp jmp add and add add sub cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop imul (bad) xchg scas mov rcr fsubp jmp add push adc push and cs ds dec dec push add add push je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb unpcklps push and cs ds dec dec push pop pop arpl jae add add movsb test ret enter fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addb xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp push pop popa insb jno jl xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add lcall lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp add pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov add mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add add adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp testb adc and das aaa aas inc dec push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul add pushf mov mov (bad) fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul addb movsl stos add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor add inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb push adc pop and das xor aas inc dec dec add imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop jbe mov mov aam fsubp add out cmc cli incl pop and das xor aas inc dec dec push pop pop fs jne jg mov mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop bound jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor dec push pop pop gs jne jg mov stos mov mov (bad) fneni(8087 out lock add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add enter fucom call add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs add dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl faddl add out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push add imul (bad) xchg cltd lahf movsb test (bad) leave iret aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov vpsrlq fsubp jmp add add or adc sbb cmp add arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb push adc add add push and sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat faddl loop in repnz add or adc sbb cmp push pop bound jb jl xchg lea lods mov mov (bad) fsub out icebp idiv add or push sbb and sub xor dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps push and das add add ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add sbb cs push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub xor cmp inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs add add jp test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fsub jmp incb or push sbb es ss inc dec push push pop popa insb jno jl xchg movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb add mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jae sbbl rcr fsubp jmp add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad add add (bad) ljmp unpcklps pop and das xor ds dec add pop pop fs je jg mov test mov (bad) jecxz out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp adc das xor dec push pop pop imul mov scas mov mov fcomp loop out repnz add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add movsl stos scas mov mov (bad) in out hlt add incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop fs je jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov fsub out icebp idiv add add push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and add xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc add sbb cmp pop pop bound jb jge xchg test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov rcl fneni(8087 in lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa add add inc dec push push pop bound push (bad) mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jae jge mov cmpsl lods mov mov add fucom call add or daa sub aaa add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc das xor pop bound jne (bad) mov scas mov ret xlat fsubp jmp stc add movhps sub cmp dec push push pop pusha gs jne jg mov test mov fnop in out cmc cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov add add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push add imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop imul mov add mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc push and sub dec dec push push pop bound jb jl xchg cmpsl add add add add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb scas mov mov fcomp jecxz in repz std add or sub inc dec push add arpl jae jge mov test mov mov add add rcl fsub out repnz add or add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec push push pop pusha gs jne jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push add gs jne jg mov stos scas mov mov (bad) in out add repz incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add adc add add sbb es ss inc dec push push pop popa data16 jno jnp xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa add dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop and cmp inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push add push pop bound jb jge orl test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul jbe addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop popa imul fwait mov mov aad loopne ljmp adc xor dec push pop pop gs add addb movsl stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop gs jne jg mov movsb test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov add mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov add fsub out idiv push or pop sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop arpl jb jge mov test mov mov xlat fldl add add out repnz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov aam out idiv push or push sbb sub cmp inc dec push push pop popa insb jno add xchg cmpsl lods mov mov xlat fucom out repnz add or pop add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor add cmp inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov mov mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out hlt stc incb or adc push and xor ds dec add add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or popf stos mov ret xlat fucom out repnz add add pop or daa sub inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop add je jle mov test (bad) leave iret aam (bad) jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fneni(8087 in lock sti add and add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss add add push push pop popa data16 jno jnp xchg cmpsb stos mov mov ret rcl fsub out repnz std add or sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop add insl jb jge xchg cmpsl lods mov mov incb or sub dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat add jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test ret enter fsubp call incl unpcklps push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test les add add iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz add call add push adc push and sub xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb stos scas mov mov loopne jmp cmc sti add sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out lock add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb add daa sub aaa cmp inc dec push add bound jb jge mov test mov mov fcomp loop in repz std add or sub dec imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec dec push add add arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub pop pusha push test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov add lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jns test mov mov fcomp loop in repnz std add or add sub dec dec push pop pop bound jb jge xchg add add mov rol rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas add add mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov rcr fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov mov rol add rcl fnop in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov movsb test (bad) leave iret aam fild add add add jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add fsubp jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push add sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add push or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp incl pop and sub xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas add push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec dec push add gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out repz incb or adc push and xor ds dec dec pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add add unpcklps push and cs ds dec dec push pop pop arpl jae jns orl test ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl add add mov mov rcl fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor dec push push pop popa data16 jno jl xchg cmpsb mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add (bad) int3 rcl fsub out repnz add or sub xor ds dec dec push pop pop arpl je jg mov stos scas mov rol rcl fneni(8087 in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps and cmp inc dec push push pop bound jb jge xchg test into fchs in out cmc cli incl or adc push and das xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods add int xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fucom call add or pop sbb es aaa cmp inc dec push push pop pusha imul addb movsb test ret leave into rcr fsubp call add or pop sbb aaa cmp inc dec push push pop popa data16 jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 add in icebp idiv add or adc add and aas inc dec dec push pop pop fs je jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test mov mov fcomp loop in repnz add or push sbb sub xor dec push pop pusha gs jne jg mov movsb stos scas mov mov (bad) jecxz out repz std add or daa add aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or xor ds dec dec push pop pop arpl je jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp push pop bound jno jl xchg lods mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp inc inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs mov mov aad (bad) jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fildl loop in repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add rcl fsub out repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov add fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz add add out repz incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov fninit ljmp add add adc xor push push pop pusha imul addb mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa add add aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or add cs ds dec dec push pop pop imul mov mov mov fcmovu in jmp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp unpckhps pop and inc inc dec dec push pop pop gs jne addb movsl stos scas mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop pusha data16 add add jbe addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es cmp push pop bound jne jg mov test ret leave into add (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov add add scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc push and sub inc dec push push pop bound jno jl xchg add cmpsb stos mov mov aad loopne ljmp add push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr add in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop arpl jae jle mov mov mov (bad) fildl loop in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov add aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp or push sbb and aas inc dec push push pop pop gs je jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad add add in lock cli incl pop and das xor ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push add daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec add pusha imul addb cmpsb stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp adc xor dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in lock add push adc sbb sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor push push pop pusha gs jne addb movsl stos scas mov rol add (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub add add add cmp push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret leave add aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp add dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incl add adc das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop add add imul mov lods mov mov fcomp loop in repnz std add add adc push and sub dec dec push pop gs jne addb cmpsb stos mov mov aad loopne ljmp adc sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop arpl jae add orl test mov mov xlat faddl jecxz in repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl add movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push add fs je jg mov test ret enter fsubp call add or daa sub aaa cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpcklps add and inc inc dec push push pop pusha gs jne jg mov lcall mov (bad) jecxz out repz incb or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop gs jne jg mov test int3 rcl fsub out icebp idiv add or pop add cmp pop pop bound jb jge mov test mov add rcr fucom call add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in add cmc cli incl pop and das xor aas inc dec dec push pop pop add outsl jne jg mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add add adc and sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub call incb or adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt cli incl unpcklps pop add add add xor cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc add pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae add mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul add jo jnp test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul cwtl popf mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb pushf mov mov (bad) fndisi(8087 out icebp idiv add or adc sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg test add add int xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov add fndisi(8087 out lock add or adc xor push push pop pop gs jno jnp xchg movsl stos mov mov (bad) lret rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add add and aas inc dec dec push pop pop imul mov lods mov mov fcomp add call add push adc sbb cmp ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb add add adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add add and sub cmp dec push push pop pusha gs jne jnp xchg movsl stos mov mov aam (bad) jmp add push adc pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and das add inc dec push pop pusha imul addb mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push add bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jge xchg lods mov mov (bad) add loop in repnz add or push sbb es cmp dec push push pop pusha data16 add add jbe addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul add orl test ret enter fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg iret (bad) fsubp ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov add mov fcmovu in out hlt cli incl unpcklps push and sub xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb add (bad) aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp incl unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop add imul addb movsb stos scas mov mov add (bad) in out repz incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fildl loope in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out add clc incb or sub inc dec push push pop add insl jae jge mov cmpsl lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add add push adc push and xor cmp push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov movsl stos scas mov mov (bad) in out hlt stc incb or add add adc sbb cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae add mov test mov mov xlat fsub out icebp idiv add or push add and aas inc dec push bound je jg mov test ret lret (bad) in out hlt stc incb push adc push and sub dec dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor add add add dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa sub pop popa imul add addl mov rol rcl fneni(8087 out lock sti add and inc inc dec push push pop pop gs je jg mov movsl stos scas mov rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov ret fninit jmp add unpcklps pop and das xor aas inc add push pop pusha gs add addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg test mov add (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out add clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add adc and sub aaa cmp inc dec push push pop bound jb jge mov add add lret rcl fneni(8087 in lock add or add add sbb sub cmp dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock add or push sbb sub ss inc dec push push pop popa insb jb jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and add add dec push push pop pusha imul addl mov ret rcl fucom call add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fsub out icebp idiv add or and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop add arpl je jle mov stos scas mov mov fneni(8087 in lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov ret rcl fucom out repz incb or adc push and das xor aas inc dec dec push pop pop imul jno jge add (bad) mov test mov mov fcomp loop in repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jge mov add add ret add aam loop in repnz std add or sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or and xor aas inc dec dec push pop pop imul mov mov mov ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz in repz incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa xor inc inc dec push push pop popa insb jb jl xchg test (bad) aad loopne jmp cmc sti add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub add cmp pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fildl loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec add add pop imul mov mov mov (bad) in out cmc cli incl pop and inc inc dec push push pop pusha add jl xchg lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul add add test movsb test (bad) leave iret aam (bad) ljmp adc xor ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov add test mov mov aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je add fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add add (bad) lret rcl fneni(8087 out lock add or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push add daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov roll add fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test ret enter fsubp ljmp add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or add sbb aaa cmp push pop bound jb jge orl test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor add cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc add and das xor dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave add aad (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps and inc inc dec popa add jl mov mov aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg add add lods mov mov xlat fsub out icebp idiv add or adc sbb cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos add mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push pop add insb jno jl xchg lods mov mov (bad) int xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov stos mov in out hlt cli incl unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lea lods mov mov xlat fsub out icebp testl add add add or push sbb sub xor dec push pop pop fs je jg mov test mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or add adc push and sub dec dec push push pop bound jno jl xchg cmpsb stos mov mov rcl fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret enter fucom out repnz add or add pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add push adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add or pop sbb daa add xor cmp push pop bound jno jl xchg stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc das xor add inc inc dec push push pop pop gs je jg mov test ret enter fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa add ja (bad) xchg mov (bad) in out hlt stc incl unpcklps pop and das xor push push pop add pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl je jle mov test (bad) lret fcmovu in out cmc cli add and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop fs jne jg add cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound nop cwtl lahf movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam fiadd add add add in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb and sub xor aas inc dec dec push pop pop imul mov scas mov mov aam fiadd in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and add add cmp inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul ja (bad) xchg lods mov mov xlat fsub out repnz add or adc push and add xor aas inc add push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb sub aaa cmp push pop popa insb add add ja (bad) xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods add into rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb xchg lcall mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop bound jb jl xchg add mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add push adc sbb cmp pop pop arpl add test lahf add add add (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl add fsub out repnz add movhps es aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out add repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in or daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or sub inc dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop add pusha gs jne jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push add imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc push pop pop add jg add add mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fucom call add or daa sub inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl outsb je jle mov add cwtl sahf mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg add int3 rcl fsub out icebp idiv add or adc xor push push pop pop gs je jg mov add ret enter fucom call add or pop sbb daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg add ret rcl fsub out icebp idiv add or push sbb sub ss inc dec push push pop pusha imul addb movsl stos scas mov add add add add aam fsubp jmp add or sub dec dec push push pop bound jb jl xchg mov loop in repnz std add add adc push and cs ds dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jge mov test mov mov (bad) jecxz out add stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jae jge mov test (bad) leave into aam (bad) jmp add unpcklps add sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fcomp jecxz in repz incb or adc add sbb and xor ds dec dec push pop pop add jne addb cmpsb stos mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) lret fcmovu in lock cli add and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc push and xor add ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno add mov test mov mov (bad) in out hlt stc decl sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound add jl xchg lods mov mov xlat fsub out repnz add or and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out in repz incb or adc push and cs ds dec dec push pop pop imul mov test (bad) lret fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jnp xchg cmpsb add (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz std add or sub xor add push pop pop gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop jo orl mov mov aad (bad) add out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) faddl loop in repnz add or pop sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp add add sti add or adc xor dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss add push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add push or add sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc add add pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs je jg mov test ret enter fsubp jmp add or add adc sbb aaa cmp inc dec push push pop popa imul jl xchg stos mov mov loope in repnz add or pop sbb daa sub xor cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das add aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom call incb or adc xor push push pop add pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add jns test movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or inc dec push pop pop arpl jae jge mov add ret enter fucom out repnz add or push sbb sub cmp dec push push pop pop fs je jg mov test add enter fucom call add or pop sbb sub cmp dec add pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jno jl xchg lods mov add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) add loope in icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb mov stos mov mov add vaddsubps fnop in out hlt cli incl push adc push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg nop xchg fwait mov mov aad add loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out lock add or adc das xor dec push pop pop imul add test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test (bad) leave into aam fsubp call add add push adc sbb cmp push pop bound jno jl xchg stos mov mov rcl fndisi(8087 out lock add or push sbb and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or add adc push and xor cmp pop pop bound jb jl xchg stos mov mov (bad) fndisi(8087 ljmp push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or add xor ds dec dec push pop pop imul mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and add add inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound add add add jle mov test mov mov aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps push and cs aas dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul ja add add pushf mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add pushf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add add rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa add jb jge xchg cmpsl lods mov mov xlat fucom out repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge xchg mov ret rcl fldl add add out repnz add or pop sbb daa sub xor cmp pop pop bound jb jge mov test mov mov xlat fsub out add clc std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop add cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add add idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop imul mov test (bad) leave iret aam fsubp jmp add add push adc push and add aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop add imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop add sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti pop pusha data16 jae addb mov mov jecxz repnz add movhps cmp inc dec push push pop popa data16 jno jnp add mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov add add fsub out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov xlat fucom out in repz std add or daa sub inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add fsub out icebp idiv add or pop sbb es cmp dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt add add incl unpcklps push and cs add dec push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop insw jne test mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov add fcomp jecxz in repnz std add or add add daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or pop sbb daa sub add cmp inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub add inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test into aad loopne ljmp adc xor push push pop pusha add push jne jg mov stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov (bad) in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg add add test movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aad (bad) ljmp adc xor push push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp adc xor push push pop pusha gs jne addb add mov aad (bad) ljmp unpckhps and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in add cmc sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov add add aad loopne jmp cmc sti add es inc dec push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add pop or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz clc std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec pop pusha insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push add push (bad) mov test mov mov (bad) in out hlt cli incl unpcklps pop and das xor dec push pop pop fs jne jg mov stos scas mov mov fnop in lock cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je orb lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp idiv add or adc xor push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push add arpl jae jle mov cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound add js (bad) mov mov ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub ss inc dec push push pop pusha imul addb lahf movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test mov fnop jmp adc sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rol rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec add arpl je jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge mov test mov mov add fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov add fsub out icebp idiv add or sbb cmp inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt add incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc add add add adc sub cmp push pop bound jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add and cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call incb push adc push add sub xor cmp push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor ds dec dec push pop pop arpl jae jge test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul mov stos mov mov aad (bad) ljmp unpcklps pop and das xor add add ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor cmp inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub add push push pop popa data16 jno jnp xchg movsl stos mov mov rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz std add or sub xor cmp push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp push add insb jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsb test ret leave into rcr fucom call add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add sbb sub cmp dec push push pop popa data16 add add jnp xchg cmpsb stos mov mov fnclex call add or sub dec dec push push pop arpl jae jge mov mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov xchg cwtl sahf mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound outsb jae jle mov test (bad) leave into aam fsubp jmp or sbb and xor ds dec dec push pop pop bound jb jl xchg lods mov add add rcl fneni(8087 out lock sti add pop and cmp dec push push pop pusha gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov ret rcl fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test mov mov fcomp loop in repz add adc sbb es cmp push pop bound jb jl xchg lods mov rol rcl fucom out repnz add or daa sub inc dec push push pop bound jb jge add movsb test (bad) leave into aam fsubp jmp add add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add add add daa sub inc dec push push pop outsb jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or adc add add daa sub cmp dec push push pop pusha gs jne jg mov test ret enter fucom call add or pop sbb daa sub aaa cmp inc dec push push pop add insb jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop add je jg mov test ret leave into rcr fsubp call add push adc sbb cmp dec push pop pop bound jb jge mov add ret enter fucom call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov add push adc add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha gs jne jg add mov stos scas mov mov flds (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp call add or sub inc dec push push pop popa data16 jno jl xchg fwait mov mov aad loopne jmp cld add or push sbb sub cmp dec push push pop add insb jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add sub inc dec push push pop bound jb jge xchg lods mov add rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub dec dec push pop pop arpl jae jge mov test mov mov xlat fsub add in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp add add add hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or sub dec dec pop pop arpl jae jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add aaa cmp inc dec push push pop popa insb jno jnp xchg movsl stos mov mov aad (bad) ljmp add unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov rcl fsub out icebp idiv add or add push sbb and inc inc dec push push pop pusha gs jne test mov ret rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec add pop bound jb add mov test (bad) leave into aam fsubp jmp add push adc push and cs add inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb lods mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop add and xor ds dec dec push pop pop arpl jae jge mov movsb test (bad) lret aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul jnp xchg movsl stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad in cmc cld add adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop popa imul addl stos mov mov rcl add jecxz in repz std add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add ret rcr fucom call add prefetcht2 and das xor dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push add add cmp dec push push pop popa imul addl mov rol rcl fildl add add out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp pop bound jae jge mov movsb stos scas mov mov fcmovu in out cmc cli incl add pop and das xor aas inc dec dec push pop pop fs je addb movsl stos mov mov aad loopne jmp cmc sti add push or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add or add and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb adc and sub inc dec push push pop popa insw ja test movsl stos scas mov rol iret aad (bad) ljmp adc sbb cmp push pop bound jb jl xchg lods mov mov fabs out repnz add or daa sub aaa cmp inc dec push push add pop bound add jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb or adc push and cs ds dec dec push pop pop imul jns test stos mov mov aad (bad) ljmp adc sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge mov mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov (bad) xchg lcall mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov add add rcl fsub out icebp idiv add or adc das xor dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fildl loop in repnz add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc sbb aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 in lock sti add push or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out add stc incb or adc push and sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov add (bad) aad (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add add add or push sbb xor cmp dec push push pop pusha imul addb cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds add push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps add push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das add aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or pop sbb es cmp add push pop add insb jno jl xchg mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov lods mov mov xlat fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop add add push orl cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg mov mov rcr fsubp call add or sub inc dec push push pop bound insb jb jl xchg lods mov ret aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp testb add or daa sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop imul add (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop jae jg mov test (bad) leave iret aam (bad) std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl outsl je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or push es ds dec dec push pop pop arpl jae jge mov test mov mov fcomp add jmp add push adc push and xor cmp pop pop arpl jb jge mov cmpsl lods mov mov fcomp loop in repnz add or daa add xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli add and add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub xor cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb add mov test mov mov fcomp jecxz out repz std add or sub xor add add dec push pop pop arpl je jle mov test (bad) leave into aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne mov mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add orl test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs jne jg add movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad add out lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb fwait mov mov aam (bad) jmp add push adc push and xor cmp push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push push pop bound jb jl xchg add add rol rcl out stc add adc das xor dec push push pop pusha gs je jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop gs je jg mov test mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret enter add add fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha gs je jg mov test ret rcr fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jns test movsb test ret leave into rcr fiadd add in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp incb push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb add sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add add add and aas inc dec dec push pop pop fs je jg mov test ret enter (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and add add xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or adc sbb aaa add add inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg ret fcomp jecxz in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub add inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov add int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov add add mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jle test movsb test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov add rcr fsubp jmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fldl add add out repnz add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp testb add or pop sbb aaa cmp push pop pop arpl jae xchg xchg pushf mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and aas inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and add xor ds dec dec push pop pop add jo jp test movsl add int3 rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push jo orl mov aam (bad) jmp add push adc push and xor ds add push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop add add add jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz add add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg add mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add add (bad) leave iret aam (bad) ljmp adc das xor dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp add pop bound jb jl xchg lods mov lret fucom out repnz add or push sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add add aam fsubp jmp add or adc push and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc sbb cmp pop pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and cs add dec push pop pop fs je jg mov test ret enter fucom out add repnz add or pop sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl add add sub xor push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add add adc das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add add add xor dec push push add insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor add cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul mov stos scas mov add (bad) int3 rcl fsub out icebp idiv add or adc xor push push pop pop gs jne jg mov test ret leave into aam fsubp jmp add or sub inc dec push push pop popa insb jno jl (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add or sub inc dec push push pop bound jno jl xchg cmpsb stos mov mov aad fndisi(8087 out lock add and aas inc dec dec push pop pop add imul mov scas mov mov fcomp loop in repnz incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop imul mov scas mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop bound add add add add jge xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) in repnz add or sub inc dec push push pop bound jb jl xchg add lods mov add fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz add or daa sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock add add or push sbb es cmp dec push push pop popa insb jno jl xchg lods mov mov add fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov add fcmovu in out cmc cli incl unpcklps pop and das cmp inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop in out cmc cli incl sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp add sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov rcr fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl outsl je jle mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock add or adc xor add dec add pusha imul addb movsl stos scas mov mov (bad) in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov ret lret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push push pop bound add insb jb jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es aaa cmp inc dec push push pop popa add jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and inc inc dec dec push pop pop fs je add add jns add lahf movsb stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg add add stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov rcl fsub out icebp cli add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec add pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add add add (bad) lret rcl fneni(8087 out lock sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat add loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repnz add std add or and xor ds dec dec push pop insl jbe xchg test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) jmp add push adc pop and add sub xor aas inc dec dec push pop pop imul add stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc push and xor add add add dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb add sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov add fsubp call add or sub dec dec push add arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods ret int3 rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop pusha gs jne addb test movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa data16 jno jnp xchg stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out add push adc push and xor ds dec dec push pop pop add je jg mov add add rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos add int3 rcl fsub add in repz std add or cmp dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add add cmc cli add and aas inc dec dec push pop pop imul test movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos add int3 rcl fsub out icebp idiv add or add add sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or daa sub inc dec push push pop bound ja addl mov rol rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa add xor cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb add pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push add pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jbe addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add add addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor dec push push pop popa imul addl mov rol xlat fsubp jmp idiv add or adc xor push push pop pusha imul addb movsl stos scas mov rol rcl fneni(8087 in lock cli add and inc inc dec dec push pop pop gs jne jg mov add add mov mov fnop in lock cli incl sbb sub cmp dec push push pop pusha gs jne add lcall mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb add add (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc add push pop bound jno jl xchg stos mov add mov (bad) fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc xor push pop pusha imul addb movsl stos mov mov aad fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp cmc cli incl add sub cmp dec pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne out icebp idiv add or push add es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb add mov test (bad) leave into aam fsubp jmp add push adc push and cs add add ds dec dec push pop pop imul xchg cmpsb lods mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound insl jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub inc dec dec push pop pop imul mov add iret aad loopne ljmp adc xor push push pop pusha gs jne addb add mov mov aad (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fneni(8087 out repnz add push adc push and xor ds dec dec push add imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg stos mov mov add (bad) lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) add lock sti add and inc inc dec dec push pop pop fs je jg mov test ret enter rcr fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg mov mov (bad) fneni(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne add add ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb add sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec push pop popa push mov add int3 rcl fsub out icebp idiv add push or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push add cmp pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli incl pop add inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jo jnp test cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test rcr (bad) out idiv add push adc pop and das xor ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb aaa cmp inc dec push push pop popa add jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add xchg lcall mov fcmovu in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul mov xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg add int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl add lret rcl fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add ret leave into roll fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb nopl and aas inc dec dec push pop pop fs je jg mov add (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add loope jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods add int fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incl unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push add add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl js nop xchg fwait mov mov aad loopne ljmp adc xor add dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add push adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz std add push adc sbb aaa cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop je jg mov movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and das xor aas inc dec dec push pop pop imul test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle add orl test mov mov fcomp jecxz in repz std add or sub inc dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat faddl loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg add add add pushf mov mov fucom ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec add pop pop gs jne jg mov stos mov mov add add add add lret rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out add cli incl unpcklps pop and aas inc dec push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or adc push and xor cmp pop pop arpl jae jge mov test mov mov (bad) add add add jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add add push or push sbb es aaa cmp add push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and add das xor push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp testb add or sub xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec add pop imul mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push add arpl add je jg mov stos scas mov mov fcmovu in lock cli add and sub cmp dec push push pop popa imul (bad) xchg lods mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul movsb lods mov (bad) lret rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add add add fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc add add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp add add add out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp sub aaa aas inc dec push pop bound jbe test scas mov ret lret loopne lock incb unpcklps push and cs ds dec dec push pop pop fs jne addb movsl stos mov rol aad loopne ljmp adc sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz add or and xor ds dec dec push pop pop arpl jae jge add mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl add mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa add jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov add mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc pop imul orl test ret enter fsubp call add push adc push and xor add push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz add in repz std add push adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp add push pop pop bound jb jge mov mov aam (bad) jmp add push adc add add push and cs inc inc dec push push pop popa imul addb mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and add xor dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jno jl xchg cmpsl ret fsub jmp stc incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp or adc xor cmp dec push push pop pusha data16 add jbe addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno addb mov mov fcomp jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov add mov iret aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out repnz add or daa sub dec dec add imul (bad) xchg lcall rol rcl fneni(8087 out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov add fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add push sbb and das xor aas inc dec dec push pop pop imul nop xchg lcall rol rcl fnop in add add lock cli add and inc inc dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge orl test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop fs je jg mov stos scas mov mov fiaddl loopne jmp cmc sti add or adc add add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcr fsubp call add push adc push and xor add cmp pop pop arpl (bad) mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jno add add addl mov rol rcl fneni(8087 in lock cli add add sub xor push push pop pusha gs jne jg mov test ret leave into aam fsubp jmp add push adc sbb cmp push pop bound jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jle add add mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) add icebp idiv add or adc xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push add push (bad) xchg add xchg pushf mov mov (bad) fsub out lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov out repnz add or sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz in repz std add or sub inc add push pop pop gs jne jg mov stos scas add mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb add cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat faddl add loope in icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add or push sbb es xor dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl add add unpcklps pop and das xor aas inc dec dec push pop pop imul add stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov xchg xchg fwait mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb cmpsb stos mov mov out repnz add or daa sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop add hlt stc incb or adc push and xor ds add add push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul test into rcr fsubp jmp add push adc pop and cs ds dec dec push pop pop imul mov mov mov flds loopne ljmp unpckhps pop and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp push pop popa insb jno jl xchg add add mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods add int3 rcl fndisi(8087 out lock add sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jle mov test mov mov ret enter fucom call add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in repnz add and aas inc dec dec push pop pop gs je addb movsl stos scas mov mov fcmovu in add cmc cli add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fiaddl add in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add and cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov rol rcl fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop add outsl jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out repz incb or adc push and xor ds dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub add sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa add pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop add add imul addl mov rol rcl fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb mov lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 in lock add and inc inc dec push push pop pusha imul jnp test stos mov rol iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg fwait mov mov aam (bad) jmp add pop and das xor dec push pop pop imul mov mov mov (bad) jecxz jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add mov (bad) fneni(8087 out lock add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg test mov mov xlat fsub out repnz add or push sbb es cmp dec push add popa insb jno jl xchg lods mov mov add rcl fndisi(8087 out lock add or adc sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp and cs ds dec dec push pop pop imul mov mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fnop in lock cli add pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop add daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add add adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cmp inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor push push pop pusha outsw mov out cmc cld add adc sbb cmp pop pop arpl jae jge mov test mov mov enter fiadd in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam fild in out hlt cli incl unpcklps pop and sub xor push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in lock cli add and cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp testl cld add or push sbb es aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb es cmp dec push push pop popa imul jl xchg lods mov mov idiv push or pop sbb daa sub aaa add inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec add add pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha add jbe addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop popa insb jno jbe (bad) xchg test mov mov xlat fucom out repnz add or pop sbb sub cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov rcl fsub out repnz add or daa sub inc dec push pop pop bound jb jge mov test add mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop add je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov rol add (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or and cs ds dec dec push pop pop imul xchg popf movsl lods mov ret rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov add (bad) ljmp stc incl push adc push and xor ds dec dec push pop pop arpl add jle mov test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp add add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul jg mov test (bad) leave into rcr fsubp call add or and sub dec dec push pop pop bound jb jge xchg add (bad) int3 rcl fsub out repnz add or add sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) out incb or push sbb and add inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or push sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps sbb sub xor push push pop pop gs jne jg mov stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc pop add add add jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jl add pushf mov mov xlat fucom call add or sub dec dec push pop pop bound jae jns test movsb test (bad) leave into aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg mov mov (bad) fsub out repnz add or pop sbb daa sub aaa cmp push pop pusha push mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne addb add rol roll add add fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add add pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz add add incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov fnop in lock sti add add add and inc inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop add je jg mov mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc add push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb add add (bad) mov test mov mov xlat fucom call add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp add jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz decb adc sbb aaa cmp push pop popa insb jno jl xchg add add mov mov aad (bad) ljmp or adc das xor aas inc dec dec push pop pop imul lea test ret enter fucom call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and add xor dec push pop pop gs je jg mov test add rcr add in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov add rcr fucom out repnz add or pop sbb es ss inc dec push push pop je test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add add pop or pop sbb daa sub aaa cmp add push pop pop bound jb jge mov test mov (bad) int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push add add sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc inc dec push push pop popa data16 jno jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test enter loop in repnz incb add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop add je jg mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop bound jb jge add popf mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec add pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov add movsb test (bad) leave add aad loopne ljmp adc xor cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push daa cmp push pop pusha imul addb cmpsb stos mov mov aad add loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc add push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fnop in lock cli add and inc inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push add and sub cmp dec push push pop pusha imul addb mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es add add cmp inc dec push push pop popa data16 jno jl nop xchg pushf mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push add popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp add add bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs je jg mov test les lret fcmovu in out hlt cli incl unpcklps pop and cs aas inc dec dec push pop pop add add jae jle mov movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec add pusha imul add jp test movsb stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fdiv incb sub aaa cmp inc dec push push pop bound jb jl mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push add bound jb jge mov test mov mov add fucom call add or sub xor cmp pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc add sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp add std add or daa sub dec dec push pop pop bound jb jge mov add ret leave into aam fsubp jmp add unpcklps pop and das xor inc dec push pop pusha insb xchg popf mov mov xlat fsub out icebp idiv add or push sbb sub add inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add add insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl (bad) xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul add add mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb cmpsb lods mov add mov ret lret loopne jmp idiv add or push sbb sub cmp add pop popa insb jno jl xchg add enter fucom call add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov add fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom call add or sub inc dec push push pop bound jb jl xchg test mov mov xlat fucom out in add stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz decl unpckhps pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp add add unpckhps and aas inc dec dec push add imul addb mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne out icebp idiv add or add add add adc xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs je jg mov movsl stos scas mov mov add loopne ljmp unpcklps pop add das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps add sub xor push push pop fs addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc add push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or adc sbb aaa cmp push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound add add jb jl xchg lods mov mov xlat fucom out repnz add or add push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl add add pushf mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push add push (bad) xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop add outsb jae jle mov add mov mov fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov add add rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push add gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov add add add add rcr fucom call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor push push add insb jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg mov test ret leave into rcr fiadd add add call add or sub dec dec push pop pop bound jb jge xchg mov mov fcomp jecxz in repz std add or aaa aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov rcl fsub add in repnz std add pop or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc add push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) ljmp or adc sub xor push push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc sbb sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or daa sub inc dec push push pop popa insb jno mov mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop popa data16 jno jnp xchg mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound add insl jb jl xchg lods mov mov (bad) fsub out lock add and aas inc dec dec push pop pop imul mov lods mov add fcomp jecxz out repz incb or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov rcl fneni(8087 out icebp idiv add or adc das xor dec push pop pop imul add je jle mov test mov mov fcomp loop in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb add mov stos mov mov aad cld add add sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp jmp add push adc push and xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add (bad) leave iret in out hlt cli incl unpcklps pop and aas inc dec dec push pop pusha add jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl outsl je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov add fcmovu in out hlt cli incl add adc pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub ss dec push push pop popa data16 jno jl xchg lea lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub add add add cmp dec push push pop pusha imul addb movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and add dec dec push pop pop imul mov scas mov mov aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret leave into rcr fsubp call add or sub inc dec push push add add insb jno jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jno jnp xchg mov mov aad loopne jmp cmc sti add or push sbb sub xor cmp push pop bound jb add add (bad) mov test mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop fs je jg mov stos mov mov aad loopne jmp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor push push pop pusha imul addl add add mov xlat fucom out repnz std add or sub dec dec push pop pop fs jo jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb cmp pop pop arpl jae jle mov nop xchg lcall rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jae jle mov test add (bad) leave into aam (bad) jmp add unpckhps and inc inc dec push push pop popa imul addl mov ret rcr fucom call add push adc push and cs ds dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test (bad) lret (bad) fneni(8087 out add add icebp notb sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub cmp dec push push pop pusha gs jne addb mov mov (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or add pop and das xor cmp inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out icebp idiv add or pop sbb es ss inc dec push push pop popa imul addl mov rol rolb xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec add add pop popa imul addl mov rol rcl fneni(8087 in lock cli add and inc inc dec push push pop gs jae jle mov test ret leave into rcr fsubp call add or daa sub aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor add dec push push pop pusha gs add jp test movsb test (bad) leave into aam fsubp jmp add push adc sbb cmp push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov add mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge mov mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test add int fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov (bad) into (bad) fsubp in repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fildl loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov nop xchg lcall rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz idiv add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rolb (bad) fneni(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add push adc and add add xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp add add push push pop popa data16 jno jnp xchg mov mov fnclex jmp or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb and sub dec dec push push pop bound jb jge mov lods mov mov fcomp jecxz in repz std add push adc push and cs ds dec dec push pop pop fs outsl je jg mov test (bad) leave iret aam (bad) jmp add push adc push and cs ds dec push pop pop gs jne addb movsl stos mov mov aad in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne test cmpsb lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos mov mov add add (bad) aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add push adc push add cmp dec push push pop pusha imul addb movsl stos mov mov add add fneni(8087 out lock add or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out add hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl outsl add addb cmpsb stos mov mov (bad) fucomip idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add sbb and inc inc dec push push pop pop gs jo jnp xchg movsl stos mov mov aad add out lock sti add and add dec push push pop popa imul addb mov aam fsubp jmp add unpcklps pop and das xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp add add dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) fneni(8087 out lock add or push sbb sub cmp inc inc dec push push add add insb jb jge mov mov mov (bad) in out hlt stc incb push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub ds dec push pop pop gs jne addb add movsl stos mov mov aad loopne ljmp adc sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg add mov rcr fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp push add imul mov lods add int fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock add or adc xor push push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add pop and aas inc dec dec push pop pop imul mov scas mov mov add leave into rcr fsubp call add push adc push and xor cmp pop pop bound jb jge xchg mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incl add add unpcklps pop and inc inc dec push push pop pusha imul addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop gs jne addb movsl stos mov add fucom out repnz std add or sub add aas inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz std add or add sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb es aaa cmp inc dec push push pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov xlat fsub out repnz add or sub dec dec push pop pop arpl jae jle mov stos scas mov mov fnop in lock sti add or push add daa sub aaa cmp pop pop bound jae jge mov movsl stos mov mov aad loopne jmp or sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 add in icebp idiv add or push sbb es cmp dec push push pop pusha imul addb add add movsl stos mov mov aad loopne jmp cmc sti add sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add rol rcl fnop in lock sti add or adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc add cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and sub xor push push pop add insb jno jl xchg lods mov add add fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pusha push orl test mov mov xlat fldl add add out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp cmc cli add pop and aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov add (bad) lret (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add adc pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps add and xor ds dec dec push pop pop arpl jae jge mov test mov ret lret aam jecxz out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov (bad) in out hlt add add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds add push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or add cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop add insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jo add addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add unpckhps es inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos mov ret rcr fucom call add or sub dec dec add pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov add mov xlat fsub out repnz add or adc sbb aaa cmp pop pop bound jb jge xchg mov mov fcomp jecxz in repnz std add or sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov add add xlat fucom out repnz add or daa sub inc dec push push pop bound jae jge mov movsb test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push add insb jno (bad) mov test (bad) leave into rcr fsubp call add add clc std add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz in repz std add or daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub ss inc dec push push pop pusha imul jg mov stos scas mov mov fcmovu in out hlt stc incb add or unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad add out lock add and aas inc dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock sti add pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add sbb and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add and add dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or add pop sbb daa sub ss inc dec push push pop pusha imul addb movsb test ret leave into aam in lock add and inc inc dec push push pop pusha imul addb mov mov xlat fucom call add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp ljmp unpckhps pop and add add push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push add pop popa imul addl mov rol rcl fsub out in repz std add or sub xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub ss inc dec push push pop popa insb jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl je jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall add add (bad) lret fcmovu in out cmc cli incl and inc inc dec push add popa insb jb jge xchg test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add int3 rcl faddl loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add leave into rcr fsubp add out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov ret rcr fsubp call add push adc push and das xor cmp dec push push pop popa data16 jno jl xchg mov mov (bad) in add idiv add or add adc and sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov fcomp jecxz in repz incb or sbb and inc inc dec push push pop pusha imul addl mov fcomp jecxz in repnz add movhps sub cmp push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp dec push pop pop arpl jae jle mov test mov mov (bad) jecxz repnz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in lock cli add and inc inc dec push push pop pusha imul jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov add mov mov fcomp loop in repz sub cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in add jmp cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp add push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test ret enter fsubp call add add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp sldt adc das xor aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push pop imul addl mov rol rcl fneni(8087 out lock cld add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb add mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec add add pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor add push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp adc das xor dec push pop pusha add add jne addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov notl sbb sub cmp push push pop outsl ja xchg mov (bad) int fsub jmp add push adc add add add add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es add aaa cmp inc dec push push pop popa imul addb add rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov test ret leave into rcr fsubp call add or daa sub aaa cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor add inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push pop pop bound jb jl xchg lods mov mov (bad) fildl loope in icebp idiv add or xor inc dec push push pop pusha imul add add addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne add fwait mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul add movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jle mov add add mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov rolb lret rcl fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov add rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul xchg fwait mov mov aad loope jmp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub dec dec push pop pop bound jae jge mov movsb test rol rolb add add fneni(8087 in lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov lods mov ret rcl fucom out repnz add add pop or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or adc add and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb test (bad) leave into rcr add in out hlt stc incl add adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop gs je jg mov test ret enter jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa add sub ss inc dec push push pop add insl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub aas inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec add add pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add adc pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul add addb movsl stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub add cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec push pop pop arpl jae jge mov add xchg cwtl popf mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov nop xchg fwait mov add add mov fcmovu in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov test ret leave into rcr fucom call add or sub inc dec push push pop popa push mov test mov mov fcomp loop jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov add vaddsubps fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop add insl jb jge mov test mov mov fcomp loop in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr add fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg popf movsl stos mov mov aad loopne ljmp adc xor dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test add aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz in repz std add or sub add cmp pop pop arpl jae jge mov test ret leave into rcr add in out cmc cli incl sbb sub cmp dec push push pop popa add jb jl xchg lods mov mov fcomp loop in repz add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and cmp inc dec push push pop add insl jb jge xchg cmpsl lods mov mov rcr fsubp jmp add unpcklps pop and inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pop fs je jg mov (bad) xchg lcall mov (bad) jecxz out repz std add or sub inc dec push push pop popa imul addb xchg movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) jmp add push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop jne addl mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp add jmp add push adc push and xor ds dec dec push pop pop arpl jae jg (bad) xchg popf mov mov xlat fucom out repnz add or daa sub inc dec push pop pop arpl jb jge mov test mov mov rcr fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle lea mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz add std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out in repnz add add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov ror rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and add add xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam (bad) out cmc cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 add call add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc and xor inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc pop and cs ds dec dec push pop pop arpl jae jle orl test mov mov xlat fucom out repnz add or pop sbb daa sub add cmp inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb sub aaa cmp inc dec push push pop popa imul addb mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne jg mov (bad) xchg lcall mov (bad) jecxz out repz incb or sub dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pusha gs jne jg mov stos add add leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push add aas inc dec add push pop bound jb mov mov aad add add in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz add add add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge add movsl scas mov mov (bad) jecxz out repz incb or daa sub aaa cmp inc dec push push pop popa imul jl xchg cmpsb stos mov mov aad loopne ljmp sldt add add push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad loopne ljmp push adc push and xor cmp pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jl xchg cmpsl lods mov mov fnclex jmp add pop and aas inc dec dec push pop pop gs jne jg mov stos scas add rcl fneni(8087 in lock sti add or adc xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and add inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz decl adc xor push push pop add push je jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add and add dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub push pop fs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge mov add add mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt add incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb mov add cmpsb lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop outsl jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or sub dec dec push push pop bound jb jl xchg add add enter fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add jl xchg cmpsb stos mov mov (bad) fneni(8087 out in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb lods mov mov fadds add add jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne jmp idiv add and aas inc dec dec push pop pop fs je jg mov mov mov fcomp jecxz in repz add add unpcklps pop and cs ds dec dec push pop pop arpl jae (bad) mov stos mov mov (bad) fndisi(8087 out icebp idiv add add or pop sbb aaa cmp pop arpl jae jle mov test mov mov rcr fsubp jmp add push adc push and xor cmp push pop pop arpl jae jle mov test mov mov fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz std add add adc push add and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs aas inc dec add pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and add dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp cli add or adc pop and das xor dec push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop add imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop add imul addb mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb sub cmp inc dec dec push pop pop arpl jae jle orl test mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov add add add (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop arpl jae jle mov test mov mov xlat fucom out repnz add add sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov add add rcl fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul orl mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpckhps and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in add add add add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test lret fcmovu in out cmc cli incl or adc pop and aas inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or add sbb add sub aaa cmp inc dec push push pop bound jb jge mov test mov mov rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop jmp add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb and aas add inc dec add pop pusha imul jg mov stos scas mov mov (bad) in out repz incb or adc sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom out repnz add or and inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz add or sub inc dec push push pop bound jb jge mov mov mov (bad) in out add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop imul mov add ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov scas mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb add (bad) aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test add add (bad) in out repz incb or adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jp test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu add ljmp or adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push add popa imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or add add sbb sub ss add push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov icebp stc add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop add add imul mov mov mov fcomp jecxz out repz incb or adc sbb and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pop gs je add add movsl stos mov mov aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push add imul addb add stos mov mov aad loopne ljmp unpckhps pop and xor inc dec dec push pop pop arpl jae jle mov test mov mov fadds fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall add mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into add aam fsubp jmp add push adc push and add xor dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov int3 rcr loopne cli add or adc sbb aaa cmp push pop bound jb jge into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs jne jg add lahf movsl stos mov mov add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu add jmp idiv add or push sbb sub cmp dec push push pop pusha imul addl mov mov add int fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam (bad) ljmp unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out add in icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam (bad) jmp add push adc push and sub xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne add icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp adc das xor add add aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and das xor aas inc dec dec add push pop pop imul mov mov mov fcomp jecxz in repz std add or sub cs ds dec dec push pop pop arpl jae jle mov test mov mov fadds fsubp call add or sub xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push pop bound add insl jb jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add adc pop and inc inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg lcall mov mov fcmovu in out cmc cli incl pop and inc inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol roll add add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov rcr jecxz lock cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or add adc push and xor ds dec dec push pop pop arpl jae add mov test (bad) leave iret aam add in lock sti add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb add add add ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov aam (bad) jmp add unpcklps pop and add cmp inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add adc and sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul add add jnp xchg mov mov (bad) fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge add add mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz add hlt stc incl unpcklps pop and das add push push pop pusha gs jne addb add mov mov (bad) fneni(8087 out lock add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa addr16 jl xchg lods mov mov add add int fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods add int fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl and es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb add add daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov incb sub ss dec push pop popa push mov rol (bad) fsubp in repnz add movhps inc dec dec push pop outsb jbe test mov fsub jmp cli add adc push and inc dec push pop popa push mov mov ret lret fucom ljmp sbb sub add ss imul mov mov (bad) int fucom in hlt cld add adc and xor inc dec push push pop outsb jbe test mov ror fchs out idiv pop movhps es pop add jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and inc inc dec push push pop pusha imul jl xchg lods mov mov xlat fsub out repnz add or pop sbb cmp pop pop arpl jb jge mov test mov mov fcomp jecxz out repz incb or adc push add ds dec push pop bound jns xchg stos scas mov mov fcmovu in out hlt stc incl unpcklps push and mov mov fcmovu in out cmc cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul add add vaddsubps fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add add or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov add fsubp jmp incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc sbb and xor cmp pop pop arpl jae jle mov mov fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc dec push push pop bound jb jl orl test mov mov fcomp jecxz in repz incb or adc sbb cmp pop pop bound jb add add (bad) mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add add stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fiaddl loope jmp idiv add or adc xor push push pop pusha gs jne jg mov add add (bad) leave iret aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz pop adc and xor cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out in icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg test mov mov fcomp loop in repnz add pop or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop add imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp add out cmc cli incl pop and aas inc dec push pop imul mov mov mov (bad) jecxz out repz std add or sub add add push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push add pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor add push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop add imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul add add xchg fwait mov (bad) fucom in repz incb or adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec add pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg add add mov ret rcl fucom out repnz add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add add fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out add add add icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add adc pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor cmp pop pop bound jb jg mov mov mov xlat fsub out icebp idiv add or pop sbb add daa add dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul ja addl mov rol rcl fsub out icebp idiv add or push sbb es ss add inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jbe orl test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add add jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je add jg mov test ret enter fucom call add add sub inc dec push add arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb es ss inc dec push push pop pusha imul addb add mov stos scas mov mov (bad) jecxz out repz std add or sub dec dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc add push push pop popa imul addb xchg fwait mov mov in lock sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge mov test scas mov mov add add leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat faddl add add out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp incl pop and aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add push or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add pop or sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam (bad) ljmp unpcklps sbb and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor add add inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop add push orl test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl lahf test mov rol rcl fneni(8087 out lock add pop or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add mov mov (bad) in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add rol rcl fndisi(8087 out icebp idiv add or adc xor push push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec add imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov add rcl fneni(8087 add in icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jb jge mov adc sbb es aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out add adc and sub dec dec push pop pop arpl add test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) fneni(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa data16 jno jl xchg mov lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add lret fneni(8087 in lock sti add and sub cmp dec push push pop popa data16 jno jl xchg add lods mov mov fcomp loop in repz std add push adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fnop in lock sti add pop or pop sbb daa sub aaa cmp push pop bound jb jge mov test mov mov (bad) in out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov add (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp dec push pop pop gs jne jg mov stos scas mov mov aad loopne jmp idiv add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in lock cli add and aas inc dec dec push pop pop gs jne jg mov test rol rcl fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or add add add sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc add sub xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb cmpsb scas mov (bad) into (bad) fucom jmp add push adc push and sub dec dec push pop pop arpl jae jle mov test mov add (bad) in out hlt stc incl unpcklps pop and cs ds dec dec push add imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl pop and add cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul add add addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul popl add xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne add fwait mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add adc xor inc inc dec push push pop popa insb jno jl xchg lods mov mov rcl fsub out icebp idiv add or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps add add pop and das xor ds dec dec push pop pop add jl mov mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add push adc sbb cmp pop pop bound jb jge mov test mov mov xlat fsub out repnz add or sub add inc dec dec push pop pop arpl jae jge mov movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp add pop bound jb jl xchg lods mov mov xlat fsub add in repz std add or sub dec dec push pop pop bound add jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov out cmc cli incl unpcklps push and xor ds dec dec push pop pop bound jb jl xchg lods mov mov aad loopne jmp cli add unpcklps pop and das xor aas inc dec dec push pop pop imul mov add scas mov mov (bad) jecxz add cmc cli add add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpckhps pop and aas inc dec dec push pop pop fs je jg mov test add leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub inc dec dec push pop pop add jne jg mov stos scas mov mov add (bad) in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne jmp cmc sti add add sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out add clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop add je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das add xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor add dec add pop pusha imul addb lods mov add fcomp loop in repnz add or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add add insb jno jl xchg lods mov mov xlat fsub out repnz add or and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add and inc inc add pop popa insb jno jl add addl mov rol rcl fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl outsl je jg mov add add mov aad (bad) ljmp unpckhps pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne lock add daa sub push pop pop arpl jae jle mov test mov mov xlat fucom out add clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into roll fcomp jecxz out repz incb or adc push and xor cmp pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and sub dec dec push pop pop arpl add test movsb test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs add inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor dec push pop pop fs je jg mov test (bad) lret fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc xor push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es add add ss inc dec push pop bound jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out add cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz incb or sub dec dec add push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul outsb je jle mov test ret leave into rcr fsubp call add or sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne jg add lahf test vpaddq jecxz in repz std add or sub inc dec push push pop bound jb jge mov test mov mov xlat fucom out repnz add or pop sbb aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov add rol rcl fneni(8087 out lock add and cmp inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp testb add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol roll (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop fs je add fwait mov mov (bad) fneni(8087 in lock sti add and inc add push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fsub out icebp idiv adc cmp push pop bound jb jge mov cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov js and dec je pop mov xlat inc mov dec outsl jg xor addr16 jle pop mov (bad) push pop dec push cmc icebp inc push pusha aaa mov fmuls inc mov xlat rcrl push adc cltd mov data16 in xlat dec xor int3 insb iret ljmp mov inc inc xchg mov sub (bad) (bad) repz fcmove je xor in lods or ja nop ljmp xor pushf (bad) adc das lret mov scas (bad) jl rcll xchg loop mov sub lcall ret test pop clc outsl movl jmp inc adc in (bad) and sub pop loope out inc jb xor (bad) cmp cmp cmp test mov cmp cmp cmp cmp mov cmp cmp cmp test mov test test test test cmp jmp call test cmp cmp test test mov test test test test test mov cmp test test test cmp inc test test test cmp test mov cmp nop test cmp cmp mov cmp test cmp cmp test ret pop test test test test test clc adc test cmp test test test call out (bad) repnz add dec jo sub mov aam daa jno (bad) movsl mov mov ficoml or xor inc cltd sbb sub adc push sbb inc loopne pop xchg (bad) call cmp test test test test jmp test cmp cmp test cmp pop test cmp test test add test cmp test cmp test mov cmp cmp test cmp cmp mov inc cmp cmp cmp cmp test cmp cmp cmp dec cmp cmp cmp test cmp cmp cmp cmp cmp dec cmp test cmp cmp cmp cmp cmp cmp test dec cmp cmp cmp cmp cmp cmp test cmp cmp dec cmp cmp cmp cmp test cmp cmp cmp mov cmp cmp cmp test cmp cmp cmp cmp cmp call cmp test cmp cmp cmp cmp cmp cmp test push cmp cmp cmp cmp cmp cmp test cmp cmp test jne mov cmp cmp cmp cmp add test cmp cmp cmp mov cmp cmp cmp test cmp add cmp cmp cmp cmp call cmp test cmp cmp jmp cmp cmp cmp cmp test pop cmp cmp cmp cmp push cmp cmp test cmp cmp push cmp cmp cmp cmp push test cmp cmp cmp mov cmp cmp cmp test cmp call cmp cmp test test pop test test test test cmp cmp jl test cmp cmp test cmp mov cmp test cmp test test sub test cmp test test test mov test test cmp test cmp sub cmp test cmp cmp test call cmp test test test cmp mov test test test test test push cmp test cmp cmp test mov cmp cmp test cmp test push test test cmp test test push test test test cmp test push cmp cmp test cmp cmp call test cmp test test test jmp cmp test test test test pop test cmp test cmp cmp inc test cmp cmp test cmp push test test test cmp test pop test test test test cmp inc test cmp cmp test cmp or cmp test cmp test test xor test cmp test test test mov test test cmp test cmp cmp jne cmp test cmp cmp test mov cmp test test test cmp test test test test test dec cmp test cmp cmp test dec cmp cmp test cmp test dec test test cmp test test dec test test test cmp test mov cmp cmp test cmp cmp test cmp test cmp test cmp test cmp cmp cmp cmp cmp cmp cmp test cmp cmp cmp cmp cmp test cmp cmp test test cmp test cmp test cmp test test test cmp test test test cmp test test cmp cmp cmp test cmp test cmp test cmp cmp cmp cmp cmp cmp cmp test cmp cmp cmp cmp cmp test cmp cmp test call test cmp test cmp test cmp test test test cmp test test test cmp test test cmp cmp cmp test cmp test cmp test cmp cmp cmp cmp cmp cmp cmp test cmp cmp cmp cmp cmp test cmp cmp test test cmp test cmp test cmp test test test cmp test test test cmp test test cmp cmp cmp test cmp test cmp test cmp cmp cmp cmp cmp cmp cmp test cmp cmp cmp cmp cmp test cmp mov cmp test test cmp test cmp jne cmp test cmp test test jmp test cmp test cmp test shr mov mov aam mov idivb ds pop xchg and faddp sbb imul inc xchg xor xlat mov cmp into icebp xchg adc stos pop dec pcmpeqb pop mov stc mov stos out shrb jecxz ja xor insb cmp cmp test test cmp cmp nop test cmp cmp xor test cmp test test cmp test test cmp test ret int mov mov mov loop mov jnp mov inc fcomps adc aad sti lods push pusha lds lods fild dec pop cli hlt jg jp dec enter mov fmul add or cli outsl out (bad) repnz add dec jo sub (bad) aam daa jno (bad) movsl mov mov ficoml fisttpll inc (bad) xor inc cltd sbb fistl sub sbb inc loopne pop xchg add adc test cmp cmp mov cmp test cmp test pushl test cmp test test cmp pop test cmp test test cmp mov cmp cmp test cmp mov test test cmp test test push cmp test cmp test test mov cmp cmp cmp test cmp mov test test cmp test mov test cmp test cmp test inc test cmp cmp cmp test cmp jne cmp test test cmp mov test test cmp test cmp inc test test cmp cmp cmp inc test cmp test test cmp jne cmp test test cmp test pop cmp test test cmp cmp mov cmp test cmp test mov test cmp test test cmp mov test cmp test test cmp add cmp cmp test cmp mov test test cmp test test mov cmp test cmp test test add cmp cmp cmp test cmp mov test test cmp test add test cmp test cmp test lods test cmp cmp test test test je test cmp cmp cmp cmp add test cmp cmp test test mov test cmp test test test cmp jne cmp cmp test cmp cmp mov cmp test test test cmp cmp jne test cmp cmp cmp test mov test cmp test cmp cmp push cmp test test test cmp pop test cmp cmp cmp test push test cmp test cmp cmp push cmp test test test cmp push test cmp cmp cmp test push test cmp test cmp cmp push cmp test test test cmp push test cmp cmp cmp test push test cmp test cmp cmp push cmp test test test cmp call test cmp cmp cmp test add test cmp test cmp cmp ret out (bad) (bad) jmp mov mov mov ds pop xchg and faddp sbb imul mov xchg xor xlat mov cmp into icebp xchg and stos pop dec pcmpeqb pop mov cmp mov stos out shrb jecxz ja adc cmp dec mov in add add mov jns call andl fmul add or cli outsl push push jo push add sub mov pusha ret xchg out movsb ds cmc pusha push pusha (bad) push add mov and stos adc or xor (bad) push and mov push adc mov add test cmp mov push adc cmp add and push or cmp (bad) push push xor push sbb (bad) push cmp es scas xchg inc jbe push (bad) lcall adc aad sti lods push pusha lds lods fisttp hlt jg jp dec enter mov leave add or cli outsl push out (bad) repnz add dec jo sub (bad) aam daa jno (bad) movsl mov mov ficoml fldl xor inc cltd sbb fistl sub push sbb inc loopne pop xchg (bad) (bad) jmp mov aam mov idivb hlt (bad) call pop das fwait jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc jl adc cmp or mov mov mov adc cmp fistpll mov and mov adc cmp dec cmp push and mov fstpt cmp cmp push fstpt (bad) fistpll imul push aam mov cmp lock cmp push push jl shll xor push (bad) lcall cmp fcomps mov fistl fstpt (bad) lret cmp dec (bad) lret cmp mov movsb fstpt ficoml cmp or add scas or fstpt shlb cmp xor fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr push fidivr mov push xor pop and cmp fcomps mov fldt mov adcl mov fstpt fsts ret dec sbbl mov add (bad) (bad) cmp fwait push (bad) sarw fcomps mov fstpt mov and xor ljmp cmp ret es mov and mov test ljmp pop lods hlt mov push scas in xchg fstpt mov xor mov inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret sub inc lret pop cmp mov push addr16 cmp stos xor sti jmp mov fidivrl push aam cmp cmp ss jmp mov adc mov xchg cmp idivl or int push (bad) sahf push (bad) sbb aad jl cmp mov push jns ficoml cmp or cmc mov (bad) mov fstpt xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov (bad) push xor (bad) inc fnstsw fcomps aad jl cmp mov push jns ficoml cmp or leave mov (bad) mov xchg cmp repz or fnsave push fidivrl ficoml cmp or icebp mov (bad) mov xchg cmp idivl or test dec fidivrl ficoml cmp or cltd mov (bad) mov xchg cmp idivl or lods mov (bad) mov pop adc fcomps cmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp pusha ljmp fcomps mov fstpt pop movsl fstpt xor shrb xlat or mov pop lds mov (bad) sahf push (bad) cmpsb and push fistl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb pushl sbb test leave cmp ficompl push mov pop aas mov xor dec scas and jo mov mov xorl test fdivrs mov subl cmp ficompl xor dec fdivrs ficompl push mov cmpsb xor xchg ret xor push fstpt (bad) iret cmp mov fstpt mov pop (bad) mov fstpt scas dec and push fcmovnbe inc jp cmp rcrb mov fstpt shl cmp test outsb loop mov xor push jno sbb sub repz adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc jns adc fwait mov cli shlb cmp movsl fwait mov fld jl shl add movsb sbb mov fstpt adc cmp push fstpt or imull pop pop sti stos pop fstpt push mov mov fistl cmp push mov fstpt adc mov push pop cli mov fldt or outsl cmp mov jne xchg cli lock subl mov mov fidivrl jbe sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb cld sbb ficoml cmp imul mov dec add mov add pop repnz scas and jae sahf push xlat lock mov push jl ficompl fs shl jno add dec inc shlb cmp mov push bound (bad) push (bad) lret fcmovu sbb xchg repz ss scas (bad) mov (bad) mov xor mov in scas fucomi pusha add add cmp add and jp mov (bad) (bad) xchg push inc mov and cmp std gs jae ficoml cmp mov sbb mov push sarl mov push (bad) mov fistpl xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb (bad) push xor xchg push (bad) jbe ret dec scas or dec scas and idivb (bad) xchg push (bad) test (bad) les dec mov cmp push mov fistl scas scas adc and ret es fidivrl shlb cmp dec scas xor scas push (bad) sbb aad dec fstpt mov push jns ficoml cmp or orl mov pop dec fstpt sbb aad dec fstpt ficoml cmp or mov push adc jecxz adc mov xor mov fcmovnbe pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov xor pop mov push jno mov adc jecxz xor mov xor cmp mov xor xchg xor out cmp or mov scas and les jae scas ljmp popa fstpt pop pop std jecxz mov cmp push imul pop les push fcmovnbe in and mov mov dec out cmp mov xchg xor pusha and pop push fstpt adc ret add fidivrl cmp push dec scas dec mov ss fstpt cmp mov scas insb push mov fcmovnb push icebp fstpt scas lods cmp push rol subl sbb test xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg fsts xor ret (bad) jne dec mov mov arpl stos shlb cmp aam xor xchg (bad) push mov dec and ret les imul pop les push (bad) mov xchg pop loop (bad) mov fistpl jns pop mov mov mov or outsl cmp xlat aas in push mov dec push ret mov cmp aad mov cmp in push jae xchg fidivrl mov fstpt mov aam clc push fstpt sbb aad dec fstpt mov and mov and ret arpl and aam xor mov (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop (bad) aaa mov pop mov fsts (bad) xor lret mov cmc fstpt rcrb xor fimull xor xlat cmp fiaddl mov push jae fcmove aas stc jns aaa cmp aad dec fstpt mov and mov and ret arpl and aam xor push fistl cmp or push mov mov fimull das push fstpt aam cmp push mov cmp adc insb mov out jae push sub push sbb mov xchg cmp int3 cmp or adc and mov (bad) mov rcrb test in cmp push push imul fistpll in lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop lea pop mov fsts xlat xor mov mov sbb mov fldt push rol subl fbstp cmp jnp mov push xlat xor mov mov sbb push fldt push rol subl pop decl push fstpt fiaddl mov fstpt mov push imul xor int3 imul push fs fistl add pop push fstpt push rol subl mov fnstenv ret push loope cmp fimull stos mov push jno mov adc cmp pop cmp push xor mov fisttpl andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push andl push cmp aad dec fstpt mov push mov cmp insl dec adcl pop sarb xor push dec fstpt add fild and xor sahf dec fsts cmp push push jno add arpl aad cmp shlb push fstpt movl and outsl movsb and cmp mov pop pop (bad) mov ficoml cmp or std inc scas and mov or mov fldt push mov mov push push arpl std fstpt xchg pop cmp push fstpt (bad) pop xor movsb push (bad) (bad) cs dec mov sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je sbb je mov leave cmp or ret rcll xor fdivrl ficoml cmp or pop inc scas and xor fidivrl fsubs mov mov push imul fs mov fstpt mov (bad) ss ret dec shlb push fstpt mov push push jno mov adc jecxz pop cmp push push imul xchg cmp ret cmp or cmp and xor fidivrl ficoml cmp or int scas and xor fidivrl ficompl mov pop mov xor fidivrl jl sub push push mov pop jp cmp mov rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl rcrl ss scas and mov and and cmp scas dec inc mov fstpt mov aam push push fstpt (bad) inc cmp mov sbb aaa lcall pop pop aam jae fstpt (bad) cmp pop pop mov push fstpt aad cmp mov (bad) aaa into fidivrl insb (bad) cmp xchg aam daa push fstpt movsb fstpt pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop popf jp pop out mov sbb aaa (bad) cmp insb (bad) cmp xchg aam aaa push fstpt (bad) fstpt and fstpt push sbb insb xchg jae mov push mov test push and fstpt push out mov sbb insb fidivr xchg aam push push fstpt push fstpt pop pop mov push fcmovnbe test lods mov fstpt (bad) jne cmp mov mov mov fcmovnb add fidivrl scas insb test push fcmovnb and fidivrl mov mov fldcw sbb fistl cmp mov fcmovnb add fidivrl scas dec inc mov fcmovnbe imul mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov insb mov fistpll adc sub cmp out cmp iret push fstpt int ret dec cmp cmp push and sub cmp out cmp iret push fstpt shll mov inc aam xor (bad) aaa es mov mov mov fistl cmp scas lods cmp push rol subb mov rcrb dec mov fldt adc aaa push fstpt out cmp mov std fstpt cmp cmp push and sub cmp out cmp iret push fstpt push sarl sbb mov and scas dec test push fcmovnbe cwtl push fstpt inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int movsl inc int dec rcrb dec mov fldt push and aaa push fstpt out cmp mov std fstpt mov mov cmp rol subl sahf add test fidivrl xor (bad) mov adc mov mov pop fstpt rcrb ds (bad) xor fcmove xor push cmp xor sbb aad out mov sub inc mov push fcmovne pop fisubl cmp push fstpt mov pop (bad) mov fstpt scas dec and push (bad) mov fstpt xchg (bad) jecxz cmp mov adc push fstpt cltd (bad) mov loop enter push mov fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml fcoml lods push dec mov push (bad) mov fstpt cmc xor cmp sbb push xor jnp repnz xchg sub xor dec aaa push and loop (bad) pop xchg faddl fidivrl push sbb mov sub decb andl fiaddl cmp cmp ret arpl mov fsts aas fsts cmp xor and sti fcomps les xchg lret insb in dec and sbb fisttpl test or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or in or test fldt xchg cmp adc cmp pop and xchg push fstpt pop push jns push sbb push push fs push add mov xchg lcall scas scas cmp stos cwtl mov pop cmp in push push ret fstpt mov mov fsts cmp fistl cmp pop and sti fcomps sub push mov les fldt mov scas mov fidivrl test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and dec test and mov fstpt xchg (bad) push ljmp fld xor nop fstps imul cmp rcrb push aam mov xor pop mov sbb mov push mov cmp nop fstps push aam mov sbb aad fbstp mov push inc mov push sarl cmp push mov fsts cmp push mov fldt (bad) and mov xor mov aam cmp push xor mov xchg (bad) mov xor mov (bad) mov adc mov push scas iret mov xor (bad) fidivrl push push inc mov push fnstcw push ljmp push scas aaa cmp (bad) out push pop std mov ss hlt scas test hlt scas mov aad inc fstpt mov mov xor test xor les nop (bad) inc xchg fcompl pop inc fidivrl adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc jge adc xor scas pop cli dec pop fstpt push lea fstpt xchg fildll out cmp scas insb les add cmp fimull ficoml cmp or lds and dec rcrb push mov and cmp fstpt push mov fsts push mov fcmovnb out xor pop in aad mov pop add and fistl scas mov xchg push and dec fwait jnp imul cmc (bad) adcl fld xor aam mov pop std mov and mov fidivrl push aam jbe fstpt push aam mov push daa cmp idivl mov (bad) mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov pop (bad) xor mov push (bad) cmp or cmp repz fistl cmp scas outsb adc push fistl cmp es cmp fcomps mov (bad) mov lds mov xorb lock mov push jl pusha adc dec rorl rcrb cmp push lret cmp push push or adc int mov push imul fimull and stos fisttpl push (bad) test adc aad push fstpt nop fistp (bad) cmp or cmp jmp mov push mov cmp (bad) cmp xchg clts popa fidivrl aaa pop ret xlat pop cmp mov mov cmp mov dec adc push fistpl fdiv cmp mov cmp push mov add push fildl adcl mov inc lcall push mov inc enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter pop push mov xchg fdiv cmp xor pop sbb aaa push and xchg fnstenv mov inc or fsubr cmp sarb pop (bad) mov fstpt add mov rcrb cmp push (bad) mov (bad) mov lods mov jne jno push adc push xchg cmp fstpt push push fstpt sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb jbe sbb ss aam jae mov mov das sbb xchg fimull fsubs mov pop pop std mov add les push aas (bad) mov fimul mov sub sub inc (bad) jbe adc and mov mov fistl cmp add cmp push xorl mov adc ret dec add push (bad) xor dec (bad) xor push shrl aam mov fstpt scas cmp push mov fstpt push daa cmp cmp aad sti pop push jb ficompl cmp mov scas dec (bad) and push mov int3 cmp clc sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb ja sbb fimul dec xlat cmp or dec mulb test pop (bad) push xor gs and (bad) and cmp popa cmp dec pop scas outsb (bad) xor dec sarb test ljmp mov dec fsubl fcmovnbe fadds scas jg and dec mov or dec scas xchg dec in mov (bad) pop mov (bad) and push (bad) xor push shrl aam test hlt xor push fsubl cmp push cli sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb xchg jo sbb divb mov xor jae add push mov (bad) fisttpll dec out test dec (bad) add mov ret dec pop scas jg xor dec (bad) add mov jmp scas and (bad) push stos pop fstl aam mov ret std and mov push shll push fsubl mov cmp cmp mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll mov fistpll and std and mov out test aam mov ret std and mov (bad) xor dec out test aam mov ret std and mov (bad) xor dec out test aam mov hlt xor jg cmp pop fnsave mov inc cmp dec add pop (bad) and push fistpll mov aam scas pushf pop (bad) adc push (bad) adc (bad) xor dec mov shr scas cwtl dec (bad) xor pop (bad) and fisttpl pop shll outsl (bad) and mov push fistp mov lret cmp cmp fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl aas fstl pop js ret dec adc lcall and pop test mov (bad) and push jecxz mov (bad) xor movsl push scas and fdivl mov pop shrl cmp add ret dec pop mov (bad) and push repnz mov cmp popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl loop popl aam mov ret in mov cmc ds pop mulb mov mov and (bad) xor dec (bad) add push xlat push xor push scas and (bad) and lcall push xor (bad) and test push shlb test pop push or dec add aam mov ret lock fidivrl scas pop divl dec aam lods pop frstor and lock push fbstp cmp xchg or dec push test push fbstp aam (bad) and lock mov cmp outsl xor dec add dec (bad) adc scas push shrl inc in xor mov fstpt mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr mov fidivr pop addr16 ret dec add fldt fcmovnbe in andl cmp cmp insl sub dec add pop repnz scas dec (bad) and dec add push (bad) push xor popa scas and (bad) push imulb mov imul pushf pop (bad) sbb mov push (bad) push fcmovnbe push andl xor push fidivrl mov push (bad) xor dec mov lock dec scas pushf pop (bad) pop mov (bad) add into popa scas and (bad) and mov cmp mov xchg or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa out or popa pop test enter fmulp dec scas xchg push xchg adc dec fsubl sti outsb (bad) and pop lret and scas sbb and push xchg insb sti jg xor dec (bad) push mov adc push mov cmp pop fistpll mov clc xor sbb jno je adc dec les test pop sarl push aad xchg aas mov jg and pop shll push fisttpll mov (bad) or and xchg pop shrl cmp adc xor imul scas pop xchg cmp ja sub push mov popa rorl adc add dec fildl mov fistpll sti push mov (bad) dec scas fistpll push xor inc scas and mov fcmovnbe inc mov fstpt and ret dec push fstpt mov fstpt push xor scas and pop aas xor dec or mov fidiv aam mov scas pop aad mov (bad) and aam mov mov inc xchg sbb push (bad) push xor fdivl cmp mov ret dec sbb arpl and std outsb ja pop mov ret dec push fstpt mov dec cmp push xor inc scas and scas push fldt imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull imull testl add add mov cmp shrb ja jecxz xor int insb mov jnp dec xor push rclb int js mov cmpsl outsl dec sub add mov sbb jge mov push ret jmp add mov jbe outsl lret paddq shrb pop push sarb or jmp icebp fstpt out and dec sar push fnstsw fcoms push shr jecxz sub lea jl and push mov data16 div lahf xchg push stos mov std xor test loope sub lea outsb fisubr mov lahf into xor fisub insl in (bad) daa xor push (bad) lds mov inc pop je xchg cmp cmp into mov cltd jbe imul int3 mov add mov xchg push loop cmpb mov jg mov cmp repz cmp push cmp adc aad or cmpsb mov ss jbe ret dec (bad) mov or sbb adc rcl dec mov adc adc xor and out sarl in sub jle xchg inc mov mov pop pop pop xchg fadds aam js outsb ret sub mov pop inc fs xchg mov sub push dec loope cmc adcl xor pop (bad) mov test insb pop or imull sub (bad) cmp push and mov jp repnz mov cmp xor ja xchg mov sub jecxz mov jno or mov cld addr16 and test mov dec jecxz or cmp cmp dec int3 dec shll and pop pop (bad) rorb xchg repz in jmp dec mov aad mov hlt out xchg inc rol pop fld aaa mov cli data16 lret xor sbb sub ucomiss (bad) lock rorb xchg (bad) out push ljmp sbb xchg sbb mov imul inc dec mov (bad) dec bnd dec xchg mov mov fsubrl xchg jb jecxz bound rdtsc jnp (bad) xor add dec jae dec mov scas out mov xlat fldcw fistl into xchg enter xchg or iret fsubrs pop outsl push in movsl xchg lea and cmp mov add fs stos out mov xchg fstl imul aad popa addr16 in ljmp mov sub cmc ret cmp fisubl pop push mov insl dec xor je xor or mov xchg int lcall adc mov stc pushf out xchg rcrb (bad) mov orb mov lcall movsl xchg (bad) ja jns adc and mov out or pop dec leave enter mov mov loope dec pushf sub sbb mov xor mov xchg insb out sti lods neg inc scas mov add out loope iret inc lret add roll xor dec sbb hlt movsb data16 in ljmp jmp push and fcomp shrl cmp pop (bad) mov sbb test xchg pop cmp xor sbb clc dec rcrl inc test mov and inc xor inc les sbb (bad) fwait push lret dec inc mov dec jmp pop xchg and es stos cmp test and roll jb add (bad) ss sbb pop insl (bad) push aad out push pop notl dec sub popl sti cmp jl ret adc fsubl push sahf dec sub and dec cmp sub pop mov jb adc rclb stc sub in add je in mov scas inc cli pop jecxz (bad) jmp push cmp cmp iret jp pop pop int3 push (bad) movsb repnz sbb and and adc add add adc add add add add and add add add add add adc add add add add into or add add add add add add add sbb add add orb cmp adc push and jo and and and and and and sbb sbb pop sbb sbb adc or push or push or sbb and aaa xor pop push lahf nop jge test ror into in in in in in in repz ror into in jecxz mov xorl mov xorl sub xor aaa xor xor xor sub and and pop sbb adc or push or xorl nop jge lret (bad) fstp fcmovu fcmovnu loope fucom (bad) in jecxz out in in in repnz repz cld cld cld cld cld cld cld cld cld cld cld cld mov xchg (bad) mov scas mov mov lea jae jge xorl pop push push dec ds push dec lods movsb pushf mov (bad) int mov mov int mov aam fstp (bad) (bad) in jo in in out out out repz div clc div clc cld cld cld cld cld cld mov mov popf xchg jge xorl pop push pop push dec push inc xor lods cmpsb mov mov mov movsb mov mov mov into lret int3 lret rcr fcmovnu loope fucom jecxz in in in repz repz cld cld cld cld cld cld cld cld cld cld cld cld scas fwait xorl (bad) jns xorl pop push push dec ds dec cmp jb mov stos scas test mov movsb mov mov mov int mov iret into fcom rcr fldt in in in in in repz repz repz cld cld cld cld cld cld cld cld cld cmpsb xchg jl xchg jl jb xorl pop dec push inc xor push mov movsb mov cmpsb lods cmpsb mov lods movsb mov mov mov les int mov aam fstp (bad) jecxz in jecxz in in repz repz repz cld cld cld cld cld cld cld cld cld cld cld cld mov jae addr16 outsb pop dec push inc cs nop jge mov lods cmpsb mov test mov movsb mov mov mov into int3 lret into (bad) aam (bad) aam fstp (bad) (bad) in jecxz in in div clc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld sahf mov andl lods cmpsb mov cmpsb mov cmpsb mov test mov mov lods movsb mov pushf (bad) mov (bad) mov lret (bad) mov lds lds (bad) mov lds (bad) repz cld cld cld cld cld cld fwait andl bound sub movsb lods cmpsb mov cmpsb mov mov mov movsb mov lea lea mov xchg mov lea xchg jge xorl pop dec inc cmp inc cmp fcom ror (bad) mov (bad) mov aad gs dec push dec inc xchg jge subl andl mov lods movsb mov xchg mov push xorl jb xorl pop push gs dec pop push inc dec inc cmp xor cmp inc cmp inc cmp dec inc cmp ds cmp lods movsb pushf int mov lds jb sub pop (bad) jns mov mov cmpsb mov mov lahf nop jge pop dec push dec cmp dec inc push dec inc push dec inc dec inc cmp cmp cmp inc cmp inc cmp inc cmp cmp cmp cmp inc cmp inc cmp push dec inc lret (bad) mov mov lret (bad) mov (bad) mov aad xorl xor mov lods movsb pushf scas test mov pop outsb pop inc outsb pop dec outsb pop inc push dec inc inc cmp cmp aaa xor xor cmp inc cmp dec inc cmp dec imul movsb pushf int mov cld cld cld cld cld mov (bad) (bad) mov (bad) mov (bad) mov into lret pop dec pop push inc mov mov mov test je sub push sub imul jae pushf test mov lods movsb pushf mov movsb mov lret jecxz cld cld cld cld cld cld cld cld cld cld cld cld cld scas cld cld cld cld cld cld cld cld cld lahf nop jge mov mov movsb (bad) mov mov cs lret jne mov mov mov gs sbb mov lret rcr fcmovnu in jecxz jo out out out repz cld cld cld div clc div clc repz repz repz repz in in in in in in div clc popf xchg scas pushf mov pushf mov pushf mov mov aam sahf mov mov je sub push sub addr16 subl xchg jl lods movsb ror into in jecxz jecxz in jecxz jecxz in in in in in in repnz in in in repz repz in in in in in in in in in repz into lret pushf test mov xchg mov mov pop sbb pushf gs sbb xor pop xor pop xor pop xor pop xor push sub scas aas les repz in in in in in in in in in repz out out out repnz in in in in in in in jecxz repz lahf nop jge cwtl jg mov mov mov (bad) mov pop push sbb xchg jnp gs sbb jp xor pusha cmp cmp addr16 xchg xchg jp xor imul cld cld cld cld repnz in in in in in in in in in in in in in jecxz jecxz jmp jae xchg jl fwait subl mov (bad) (bad) mov xorl sbb mov gs sbb je sub push xor pop xor push xor push xor xor inc ss aam cld cld cld repz in in in jmp jecxz (bad) in jecxz mov fwait andl jl xchg jl xchg jl fwait xorl scas pop push and mov inc adc inc sbb and sbb xor xor xor and and and and sbb pop adc aam cld cld cld in jecxz jecxz loope fstp (bad) in in lahf nop jge andl jae mov xchg jl xchg jl fwait cmpl pop sbb jp xor imul adc inc sbb sbb sbb sbb or sbb dec sub dec sub push dec inc inc and xor repz jmp fstp fcmovnu fstp fcmove int3 lret pop fwait andl outsb mov jae xchg jl xchg jl mov pop sbb jp xor addr16 fs adc push sub push sub push sub imul jg mov into lret jecxz cld cld cld int mov popa cmp pop xor cld cld fstp scas (bad) aam fcom (bad) mov mov insl dec fwait andl gs xchg mov mov mov mov pop sbb jp xor jne subl xchg jl mov in jecxz jecxz in jecxz jecxz in in in in in in in in in cld cld cld outsb jae popa inc and sub mov in jecxz iret into (bad) aam lahf nop jge insl dec xchg jge xchg jnp fwait andl gs xchg mov fwait andl pop sbb jle cmp add cmp jp xor mov fstp (bad) (bad) in jecxz out in jecxz sub jle cmp xor imul (bad) (bad) aam xchg xchg mov xchg jnp xchg jge fwait andl gs xchg xchg jl pop dec sbb cmp add cmp pop xor dec sub xchg jnp cld cld cld in jecxz (bad) in in in mov push jp xor pop xor pop xor push sub mov ror into mov sub insl dec subl jne mov test pop fwait andl jae push inc sbb cmp or gs sbb fs adc push jp xor repz in jecxz repz subl sub je sub pop xor push sub mov fcmovnu xorl pusha cmp dec xchg subl jne mov xchg jnp mov inc sbb andl aaa or fs adc fs adc dec sub popf xchg repz fstp fimull or je sub push sub push sub push sub jnp in jecxz push sub popa cmp arpl andl imul push mov mov fwait andl inc and andl aaa or fs adc fs adc pop aaa or cld cld cld mov push gs sbb test push sub inc sbb mov push sub pop xor popa jae arpl andl imul dec subl andl sbb andb xor fs adc fs adc fs adc dec sub into int3 lret outsb pop xor fs adc inc sbb sbb sbb sbb imul push sub pop xor pop xor popa cmp arpl andl imul pop push inc xor adc andb xor fs adc fs adc fs adc push sub je sub aaa or popa cmp fs adc inc adc arpl jp xor inc sbb je sub pop xor pop xor pusha cmp cmp addr16 xchg mov push inc xor adc jp xor sub pop test pop xor pop xor pop xor pop xor push sub pop jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor popa cmp gs sbb sbb sbb je sub push sub push sub arpl inc and pop mov test gs andl gs andl gs andl gs jnp fwait andl gs andl gs andl gs andl gs xchg xchg mov mov mov mov xchg jl xchg jl xchg jl xchg jl mov adc or xchg cmpsb xchg jl xchg jl xchg jl fwait subl scas fwait subl scas fwait subl scas fwait subl scas fwait subl scas fwait subl mov test mov mov xchg mov xchg jp xor add add add add add add add add add add add add add mov push dec push dec dec dec inc inc inc inc cmp aas pop push xchg mov shr call out in in loopne fnstcw jb jnp jb push pop dec cmpb lcall mov mov rcl loope fucomp call stc stc cli cld cld cld mov mov jp gs xchg (bad) mov cmpsb mov test mov ret mov xlat jae loop loopne in in hlt hlt cmc stc stc cli cld cld cld movsl xchg jns push lods cmpsb mov lods cmpsl mov lods ret enter lds int3 (bad) loope fucomp in in in jmp popf mov mov cmpsb mov cltd lea jbe jg xorl jo je pop push push jl push mov mov lods movsb sahf mov arpl push pusha push dec pop push dec pop push dec fs push outsl addr16 xchg lcall mov test movsb cltd popf xchg adcl lods mov sarl loopne out out in in call popf mov popf test mov inc test subl (bad) ror (bad) in jmp test icebp lock out in jmp ror enter mov xchg mov js jg jno sub push xor jne cmp dec fwait popl out out jmp loopne scas mov pushf test pop lea imul inc and and inc sub xor cmp (bad) loopne aam int3 mov jno xchg jnp xchg subl jge ds andb lea enter jae cmp aam mov xchg jle cltd (bad) data16 mov mov popa push mov push push jbe xor in loope xchg push sub mov mov mov xchg jle xchg subl push mov inc push fs adc sbb enter jo sub xor je andl insl dec mov js pop push dec mov inc push fs adc jno sub pushf mov sbb dec es jp jge cmp andl outsl push pop push inc mov addr16 sbb push inc push imul arpl inc push addr16 sbb sbb push sub pop xor andl dec inc mov xchg mov jbe nop jbe nop jbe xchg jns nop jbe nop jbe nop jbe nop jbe xchg jnp xchg subb mov mov add and add jb outsb imul xor ret add add or add add add add pop outsl dec add ljmp rcrb add (bad) (bad) incl add add add add add add add add add add add add add pop sbb (bad) (bad) (bad) incl add add add add add add add add add add add add add dec and (bad) (bad) (bad) incl add add add (bad) (bad) incl add add inc add dec add inc add inc add dec add inc add inc add mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov call lea push lea lea push mov movl call mov lea push call mov mov lea call lea call lea push call lea push lea push mov movl call test mov je lea push lea push lea push mov mov call mov lea call call lea push lea push mov movl call lea push call mov lea call lea push lea push push call mov add push call mov lea call lea push movl mov call mov lea call mov lea call mov lea call push lea push lea lea push mov movl call lea push call mov lea call lea call fwait push jmp lea push lea push push call add ret mov lea call lea call lea call mov lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl movl movl movl movl cmpl jne movl call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl push call movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea call movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov mov cmpl jae movl jmp call mov mov cltd idivl mov xor mov mov mov movl cmpl je jmp movl push push lea push push lea push call lea lea call movl movl movl movl movl or test je movl movl movl movl lea push lea push lea push call mov lea call movl push push call cmp jne movl call movl movl movl lea push lea push call movswl test je jmp jmp movl mov cltd mov idiv mov movl push push push push mov push call call movl movl movl lea lea call movl call fwait push jmp lea call lea call ret lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf jl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or add add jle or mov or cmpsb lahf or mov or (bad) lahf or fcomps or cld lahf or or or cmp or pop mov or js or or add or add mov mov or xor add repnz or adc or sub or push mov or movl or (bad) mov add test or mov or mov mov or add xor or add or lods add andb adc or xor or imul or push mov add outsb mov or (bad) mov or add add dec push push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add add inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl jns pop pop jbe popa push popa jb jne add bound js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs bound jo xor push add dec popa je outsb add add jbe popa push je dec outsl jbe add mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 