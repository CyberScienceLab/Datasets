xchg mov jb push mov jb push jb inc mov jb mov mov jb int jb add jb xchg mov jb fwait mov jb mov mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb add jb xor movsb jb jne jb xchg mov jb jne jb out mov jb frstor jb addb add in inc add add add add dec std inc add add add add add add (bad) std inc add add add add add add pop incb add add add add add add js inc add add add add add add cld incb add add add add add add incl add add add add add add (bad) incl add add add add add add inc add add add add add add mov inc add add add add add add sbb inc add add add add add add test inc add add add add add add in add add add add add add fwait add add add add add add push add add add add add add cmpsl add add add add add add daa add add add add add add add lcall add add add add std add add add add add add add jne inc add add add add add add xor inc add add add add add add xchg push inc add add add add add add repz inc add add add add add add jb inc add add add add add add call add add add add add bound inc add add add add add add int3 or add add add add add cmp inc add pushf sub add or add add add or add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add dec add add add add mov dec test inc sub call add add add add js cmp outsl insb imul outsl outsb gs xor fs and add int3 xor add enter mov sub dec xchg int dec mov jge mov dec lods xor or stos add xchg push add add add or push gs je outsl xor or arpl jae imul sbb add and and add arpl jae outsl outsb outsb jae xor mov push add sub add add add xor add or add add fs xor add (bad) decl add add add add add add add add adc add adc js add xchg add xchg add add add add popa outsb addr16 imul je inc insb imul jae add insb imul outsl outsb gs xor hlt add add add add or add or inc add and add add sbb icebp add add add cli enter mov sub dec xchg add add add add add add inc add add add popf mov (bad) dec mov cs adc add add add add push add lods xchg add add add adc inc add add clc mov xchg mov add add add push add pop push add add add in dec inc add add add add imul dec mov add add add add add push push add add add add inc add add push add add and inc mov and xor dec add add add add add add add add call add add add push lahf cli daa ja push dec xchg cmp (bad) ret push and add add push add loop add add add xor inc add add add add mov inc outsl test mov inc (bad) mov push add add push add jecxz add add add push sub sub add push add add push mov jp dec mov gs fdivp fadds add add add add push add adc add add add hlt push inc add add add push cmp mov stos jne cmp or add add add out add add add sbb inc add add add add xor mov lods cs leave or add add add sti add add in inc inc add add push add add ljmp xchg pop mov mov loop add add add add push add ljmp add cmp add add add add sbb pop add add add add add add add sbb pop add add pop inc add add add inc add add add pop inc add add add push inc add add add add add inc add add add adc add mov inc add add add add add add adc add les add add add add add add inc add add add adc pop add add add add inc add add add adc pop add add add add add add add adc pop add add adc pop add add add add inc add add add adc pop add add add pop adc pop add add inc add add add add jo inc add add add cmovno pop add add add insb push inc add add add push inc add add add or add test inc add add add inc add add add add mov add add add add add or add add add or pop add add add cmp inc add add add or pop add add add insb or pop add add or pop add add add jo inc add add add or pop add add or pop add add add add add add add pop inc add add add add add inc add add add inc add add add push inc add add add add inc push inc add add add add add lods add add pusha add add adc add les add add add add add add add add add add add pop add add add add inc add add add add pop add add add pop add pop add add inc add add add add pop add add add add add inc add add add add pop add add add add inc add add add add pop add add add push add add incl pop add add add jo inc add add add incb pop add add std inc add add add add cmp inc add add add cld inc add add add add add inc add add add cld inc add add add sti inc add add add add add add sti inc add add add cli inc add add add add add inc add add add inc add add add add insb stc inc add add add stc inc add add add clc inc add add add add add inc add add add testl pushf testl pop testl or inc add add add add add add add add inc add add add cmc inc add add add add add add add add hlt inc add add add add add add add add hlt inc add add add add je inc add add add inc add add add repnz add add add add add add add add inc add add add icebp inc add add add add add add icebp inc add add add lock add add add add add add inc add add add out inc add add add add add inc add add add out inc add add add add add add add add inc add add add in inc add add add add cmp inc add add add in inc add add add add add add add add in inc add add add jmp add add add inc add add add jmp add add add ljmp test inc add add add inc add add add jmp add pushf jmp add push jmp add adc inc add add add call add test inc add add add inc add add add out add add add add inc out add add add out add add add add add inc add add add inc add add add in add add add add add add add add in add add add add add inc add add add in add add add jecxz add add add inc add add add inc add add add loop add add add add add add add add loope add add add add add add add add loope add add add add je inc add add add inc add add add fild pop add add add add add add add fiadd pop add add add add inc add add add fiadd pop add add fldl pop add add add add add aam inc add add add add inc faddl pop add add fildl pop add add add add inc add add add inc add add add fiaddl pop add add add add inc add add add fiaddl pop add add add pusha flds pop add add flds pop add add fadds pop add add inc add add add inc add add add xlat inc add add add add dec xlat inc add add add (bad) inc add add add add pusha (bad) inc add add add (bad) inc add add add aad add add add add add add add loopne inc add add add add sub inc add add add roll pop add add add add roll pop add add rolb pop add add add add inc add add add roll pop add add add aam inc add add add add add add (bad) (bad) incl add add enter and add add and adc inc add add add add add add es add add add es add add add es add add add es add mov push daa inc add inc add add add add adc xor add add add adc add mov add test adc add inc add add add add add add add add jno add add add adc cmp add add add push add add jno add add add adc inc add add add add add mov add add inc add add add add add add add jno add add add adc dec add add add add add add imul inc add add add add add add add imul inc add add add add add push add add imul inc add add add add add add add pop test sldt add adc pop add add add add add add push test pop add add adc pop add add add add add add push test or add add add add add push add add dec test push add add adc add add add add add add push test adc add inc add add add add add or add mov add dec test or add inc add add add add add add add dec test sbb add inc add add add add add add add add inc test add add add add add add add add inc test or add inc add add add add add adc add mov add addb add add adc jl add add add adc add add aad add add add add add add add roll add adc test add add add adc add mov add add inc add add add add add add iret addb add add adc mov add add add pop add add int add add add adc nop add add add add add add movb pushf rolb inc add add add (bad) incl add add add add inc add jge mov (bad) (bad) jmp sub mov sub aam inc add sub out sub sti sub or inc add sub das sub cmp inc add inc add inc add inc add inc add inc add sub movsb sub mov inc add sub fsubrs inc add sub repnz ljmp inc add inc add sub sub xor inc add inc add inc add inc add inc add add sub fwait sub test inc add sub iret sub fsubrl inc add sub imulb inc add sub adc inc add sub aaa sub inc sub push sub pop sub imul add inc add sub lahf sub lods sub mov sub shrl inc add add add es add adc test inc add add add add add incl add out rolb add incl add pop aam add incl add test add subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add nop enter add add (bad) incl add add add and add add fs push sub add add add jmp add push sub add add add inc add add add add sub add add add xor pop push add add add addb fild test inc add adc xor add pop sbb sldt add xor mov add add inc add add add add inc add add cmp inc add sbb sbb add inc add add add pop sbb sbb add cwtl xor mov add sbb sbb add inc add add add pop sbb add add hlt xor mov add sbb add add inc add add add inc add add add inc add sbb or add inc add add add pop sbb pop add add jge in sbb pop add add adc dec add add inc add add add xor mov add sbb adc add inc add add add pop sbb add add xor mov add sbb add add inc add add add inc add add add add add xor mov add sbb add add add add pop sbb push add add inc add sbb add add add adc pop add add inc add add add inc add sbb add add add adc pusha add add inc add add aam inc add sbb add add inc add add add inc add add add xor jge xor inc add add add adc push sbb sbb add mov jge inc sbb add add add adc insb add add inc add add call jg add add add inc add add add pop sbb sbb add inc ss add sbb add add add adc je add pop sbb push add add jg add inc add add add adc js add pop sbb adc add add add add ss add sbb add add add add inc add add add inc add sbb add add add adc addb add inc add add add jge pushf sbb add add add adc test add pop sbb or add adc inc add sbb add add add adc mov add pop sbb add add insb cmp mov add sbb add add add adc mov add pop sbb or add add add add cmp mov add sbb add add add sbb add add and inc add sbb add add add pop add inc add (bad) (bad) incl add add add add jg add (bad) incl adc cwtl add add inc add add add inc add sbb add add add adc pushf add add inc add add add inc add sbb add add add adc mov sbb adc add int3 cmp mov add sbb add add add adc movsb add add inc add add add cmp mov add add add add pop sub add sub mov adc scas adc subb fsubrs inc add adc scas adc test inc add sub mov adc scas adc shrb add sub mov adc scas adc clc sub add sub mov adc scas adc and inc add adc scas adc dec sub inc add adc scas adc jo inc add sub mov adc scas adc cwtl sub inc add adc scas adc shrb add adc scas adc call sub mov adc scas adc adc inc add sub mov adc scas adc cmp inc add sub mov adc scas adc pusha cs add sub mov adc scas adc mov inc add sub mov adc scas adc mov inc add sub mov adc scas adc fsubrs inc add sub mov adc scas adc add inc add sub mov adc scas adc sub inc add sub mov adc scas adc push das inc add sub mov adc scas adc js inc add sub mov adc scas adc mov sub mov adc scas adc enter fsubrs inc add adc scas adc lock inc add sub mov adc scas adc sbb inc add sub mov adc scas adc inc xor fsubrs inc add adc scas adc push sub mov adc scas adc nop xor fsubrs inc add adc scas adc mov sub mov adc scas adc add add nop enter add add (bad) incl add add inc add add add gs cld cmp add add fcomps inc add add add cmp add add add inc add add add cmp add cmp add add add inc add add add jg call push inc add adc xor add pop sbb or add mov add pop inc add add add adc cmp add pop sbb or add call jg add inc add add add adc cmp add pop sbb sbb add inc inc inc add pop inc add add inc add add add pop sbb add add mov jg add inc add add add adc inc add add inc add add add inc inc add pop inc add add add adc dec add add inc add add pop inc inc add pop inc add add inc add add add inc add add add jge push pop inc add add add adc push add add inc add add add add add inc inc add pop inc add add add add inc add add add add pop inc add add add adc pop add add inc add add add inc inc add pop inc add add add adc pop add add inc add add add inc add pop inc add add add adc pusha add add inc add add add jg add add add adc add add inc add add add inc inc add pop inc add add add adc push sbb sbb add cmp add pop inc add add add adc insb add add inc add add xchg inc inc add pop inc add add inc add add add pop sbb adc add lock inc add pop inc add add inc add add add inc add add add add pop inc add add add adc js add pop sbb or add add add add jg add pop inc add add add add inc add add add inc add pop inc add add add adc addb add inc add add add inc add pop inc add add add adc test add pop sbb or add mov jg add pop inc add add add adc mov add pop sbb adc add sbb add and adc add inc add add inc add add add add and sbb add inc add add rolb (bad) (bad) (bad) incl add add add add dec inc add jge mov (bad) (bad) incl adc xchg add add inc add add add add and adc add inc add add sbb push add add dec inc add and push add add adc pushf add add inc add add add inc add and adc add inc add add sbb pop add add inc add and pop add add adc movsb add add inc add add add add add dec inc add and add add add inc add inc add adc sub inc add inc add adc push cmp add inc add adc jl inc add inc add adc movsb cmp add inc add adc int3 cmp add inc add adc hlt cmp add inc add adc sbb inc add inc add adc inc cmp inc add adc scas adc insb cmp inc add adc scas adc xchg cmp inc add adc scas adc mov cmp mov adc scas adc in inc add inc add adc or inc add inc add adc xor inc add inc add adc pop ds add inc add adc test inc add inc add adc lods ds add inc add adc aam inc add inc add adc cld ds add inc add adc and inc add inc add adc dec aas inc add inc add adc je inc add inc add adc pushf aas inc add inc add adc les inc add inc add adc in aas inc add inc add adc adc inc add inc add adc cmp inc add inc add adc fs inc add inc add adc add pop add add add inc add (bad) (bad) incl add add inc add add mov add add add add add test inc add add add add add add mov inc add add add push inc add add add add and fsubl inc add adc xor add pop sbb push add add push inc add and push add add adc cmp add pop sbb or add xchg push inc add and or add inc add add add pop sbb sbb add lock inc add and add add inc add add add pop sbb or add dec push inc add and add add add adc inc add add inc add add add jg add push inc add add add adc dec add add inc add add add inc add and add add add adc dec add add inc add add add inc add and add add add adc push add add inc add add add jge cmp add add add adc push add add inc add add add push inc add and add add add adc pop add add inc add add add add and add add add adc pop add add inc add add rclb add and add add inc add add add pop sbb or add add add add inc add and add add add add inc add add add jg add add inc add add add pop sbb adc add in inc add and add add add adc insb add add inc add add add inc add and add add add adc jo add pop sbb pop add add jge mov inc add add add adc je add pop sbb add add clc push inc add and add add add adc js add pop sbb sbb add push push inc add and add add add adc jl add pop sbb push add add jg add and add add add adc addb add inc add add add inc add and add add add adc test add pop sbb pop add add inc add and add inc add add sbb or add les add and add inc add add inc add add add add add pop inc add and add inc add add rolb (bad) (bad) (bad) incl add add add add add jge mov (bad) (bad) incl adc xchg add add inc add add add add add pop inc add and add inc add add sbb push add add add and add inc add add inc add add add pop inc add and add inc add add sbb add add and inc add and add inc add add inc add add add jg add add add add add add dec inc add adc scas adc fmuls add dec inc add adc scas adc add xor add adc scas adc sub xor add adc scas adc push dec inc add dec inc add adc scas adc js inc add dec inc add adc scas adc mov dec inc add adc scas adc enter xor add adc scas adc lock inc add dec inc add adc scas adc sbb add dec inc add adc scas adc inc dec inc add dec inc add adc scas adc push dec inc add adc scas adc nop dec inc add dec inc add adc scas adc mov dec inc add adc scas adc loopne inc add dec inc add adc scas adc or add dec inc add adc scas adc xor add dec inc add adc scas adc pop dec inc add dec inc add adc scas adc orb xor add adc scas adc test inc add dec inc add adc scas adc rorb add dec inc add adc scas adc clc dec inc add dec inc add adc scas adc and add dec inc add adc scas adc dec dec inc add dec inc add adc scas adc jo inc add dec inc add adc scas adc cwtl dec inc add dec inc add adc scas adc rorb xor add adc scas adc call dec inc add adc scas adc adc add dec inc add adc scas adc add add add add add inc add (bad) (bad) incl add add leave inc add add add add jle push pop inc add add add inc add add add add add add add add add inc add pop inc add add add pop inc add add add add jg js inc add add add add pop sbb push add add pop inc add and push add add adc cmp add pop sbb sldt add inc add and sldt add adc cmp add pop sbb adc add pushf pusha inc add and adc add inc add add add pop sbb add add clc pusha inc add and add add inc add add add inc add add add add and adc add inc add add add pop sbb sbb add mov inc add and sbb add inc add add add inc add add add inc add and push add add adc push add add inc add add add inc add and adc add inc add add add inc add add add bound mov add and sbb add inc add add add pop sbb add add and add and add add inc add add add inc add add add add and push add add adc pusha add add inc add add add arpl mov add inc add add add adc add add inc add add add inc add and adc add inc add add add pop sbb pop add add jg add inc add add add adc insb add add inc add add add fs add and or add inc add add add pop sbb adc add dec gs add and adc add inc add add add inc add add add add add jge jo inc add add add add pop sbb or add add add and or add inc add add add inc add add add add and sbb add inc add add sbb add add mov jg add add add adc test add pop sbb or add adc inc add and or add inc add add sbb sbb add jo inc add and sbb add inc add add inc add add add addr16 add and pop add add adc nop add add inc add add add add add push jge enter add add add inc add add add jge je inc add add add adc cwtl add add inc add add loopne inc add and sbb add inc add add inc add (bad) (bad) incl add add add add inc add jge mov (bad) (bad) incl adc mov sbb or add shrb add and or add inc add add inc add add add add add inc add and or add add add pop inc add adc scas adc test add pop inc add adc scas adc lods pop inc add pop inc add adc scas adc aam inc add pop inc add adc scas adc cld pop inc add pop inc add adc scas adc and inc add pop inc add adc scas adc dec pop inc add pop inc add adc scas adc je inc add pop inc add adc scas adc pushf pop inc add pop inc add adc scas adc les fcompl add adc scas adc in pop inc add pop inc add adc scas adc adc inc add pop inc add adc scas adc cmp inc add pop inc add adc scas adc fs inc add pop inc add adc scas adc mov add pop inc add adc scas adc mov inc add pop inc add adc scas adc fcompl add pop inc add adc scas adc add inc add pop inc add adc scas adc sub inc add pop inc add adc scas adc push pop inc add pop inc add adc scas adc jl inc add pop inc add adc scas adc movsb pop inc add pop inc add adc scas adc int3 pop inc add pop inc add adc scas adc hlt pop inc add pop inc add adc scas adc sbb inc add pop inc add adc scas adc inc pop inc add pop inc add adc scas adc insb pop inc add pop inc add adc scas adc xchg pop inc add pop inc add adc scas adc mov pop inc add adc scas adc add add nop enter add add add (bad) (bad) incl add add inc add inc add add add jle add add add add sbb add add add add add add imul add add inc add imul add add jno add add add jo add sbb dec sbb inc add add add pop sbb adc add nop outsl inc add sbb adc add inc add add add add inc add add add outsl inc add sbb sbb add inc add add add pop sbb push add add inc add sbb push add add adc inc add add inc add add movsb jo add sbb add add inc add add add inc add add add jno add sbb sbb add inc add add add pop sbb add add pop jno add sbb add add inc add add add inc add add add jg add add add adc push add add inc add add add inc add sbb push add add adc push add add inc add add add inc add push inc add add add adc pop add add inc add add add jb add adc add add add adc pop add add inc add add add add add jae add adc or add add add pop sbb push add add jge push add add adc add add inc add add add jae add adc adc add inc add add add pop sbb or add cmp inc add or add inc add add add inc add add add jg add or sbb add inc add add add pop sbb add add add add add je add or add add add add inc add add add inc add or or add inc add add add pop sbb adc add lods jne add add add add add adc jl add pop sbb adc add add add add jbe add add adc add add sbb sbb add fs add incl sbb add inc add add inc add add add jbe add std inc add add add adc mov add pop sbb or add sbb inc add sti inc add add add adc mov add pop sbb pop add add inc add stc inc add add add adc nop add add inc add add add ja add testb add add pop add inc add (bad) (bad) incl add add add add js add jge mov (bad) (bad) incl adc cwtl add add inc add add add js add or add add inc add add inc add add and add add or add inc add add sbb sbb add jl inc add clc inc add add inc add add inc add add fdivrs add repnz add add add add or add adc test inc add add add imul push add adc scas adc pop imul push add adc scas adc subb mov add adc scas adc test inc add adc test inc add add add imul push add adc scas adc clc imul push add adc scas adc and mov add adc scas adc dec insb inc add adc test inc add add add inc add adc test inc add add add push add adc scas adc shrb push add adc scas adc call push add adc scas adc adc add adc test inc add add add insl inc add adc test inc add add add inc add adc test inc add add add push add adc scas adc mov inc add adc test inc add add add insl inc add adc test inc add outsb inc add adc test inc add add add outsb inc add adc test inc add add add inc add adc test inc add add add inc add adc test inc add add add push add adc scas adc enter mov add adc scas adc lock inc add adc test inc add add add outsl inc add adc test inc add add add inc add adc test inc add add add inc add adc test inc add add add add add add add repnz add (bad) (bad) incl add add inc add add add add add add adc inc add add add add mov inc add add add add add mov push jg add inc add add add inc add and inc add add add pop sbb adc add cmp inc add and adc add inc add add add add inc add add add jg add inc add add add adc cmp add pop sbb or add hlt jg add and or add inc add add add pop sbb add add add add add inc add and add add add add inc add add add jge je inc add add add adc dec add add inc add add add addl mov inc add add add adc dec add add inc add add add add and push add add adc push add add inc add add add addl mov add add adc push add add inc add add add add add inc add and or add add add pop sbb sbb add js inc add and sbb add inc add add add inc add add add (bad) inc add and sbb add inc add add add pop sbb adc add xor jge aam inc add add inc add add add inc add add add jge loopne inc add add add adc push sbb sldt add addl jg add and sldt add adc insb add add inc add add add add add add and adc add add add pop sbb or add mov jg add and or add inc add add add inc add add add test mov add and or add inc add add add pop sbb or add pop test mov add and or add inc add add add inc add add add jge shlb inc add add add adc addb add inc add add add xchg mov add and add add inc add add inc add add insb xchg mov add inc add add inc add add sbb adc add enter mov add inc add add add adc mov add pop sbb adc add and inc add and adc add inc add add sbb push add add jg add inc add add add adc xchg add add inc add add add xchg mov add add add add adc cwtl add add inc add add add mov mov add add inc add add inc add add add jge cwtl and add add inc add add sbb add add lock mov add add inc add add inc add (bad) (bad) incl add add add add add jge mov (bad) (bad) incl add add inc add adc scas adc fdivrl add inc add adc scas adc add inc add inc add adc scas adc sub inc add inc add adc scas adc push jnp add inc add adc scas adc jl inc add inc add adc scas adc movsb jnp add inc add adc scas adc int3 jnp add inc add adc scas adc hlt jnp add inc add adc scas adc sbb inc add inc add adc scas adc inc jl add inc add adc scas adc insb jl add inc add adc scas adc xchg jl add inc add adc scas adc mov jp add adc scas adc in inc add inc add adc scas adc or inc add inc add adc scas adc xor inc add inc add adc scas adc pop jge add inc add adc scas adc test add inc add adc scas adc lods jge add inc add adc scas adc aam inc add inc add adc scas adc cld jge add inc add adc scas adc and inc add inc add adc scas adc dec jle add inc add adc scas adc je inc add inc add adc scas adc pushf jle add inc add adc scas adc les add inc add adc scas adc in jle add inc add adc scas adc adc inc add inc add adc scas adc add or nop enter add add add (bad) (bad) incl add add lret shlb inc add add add add add inc add add add add add inc add add add inc add add add add mov add mov push mov cmp inc add add add addb sub shrb add adc xor add pop sbb or add call jg add sub or add inc add add add add inc add add add add sub or add inc add add add pop sbb adc add mov jg add sub adc add inc add add add pop sbb push add add popl mov add sub push add add adc inc add add inc add add add inc add sub or add inc add add add pop sbb or add mov inc add sub or add inc add add add inc add add adc jge sub inc add add inc add add add pop sbb sbb add insb xchg inc add sub sbb add inc add add add inc add add add xchg inc add sub adc add inc add add add pop sbb add add and inc add sub add add inc add add add inc add add add jg add inc add add add adc pusha add add inc add add add xchg inc add sub push add add adc add add inc add add add xchg inc add sub adc add inc add add add pop sbb or add add add add jge push (bad) inc add add add add inc add add add xchg inc add sub or add inc add add add pop sbb sbb add dec xchg inc add sub sbb add inc add add add inc add add add jg add add inc add add add pop sbb adc add add inc add sub adc add inc add add add inc add add add inc add sub push add add adc addb add inc add add add jge fsubrl inc add add add adc test add pop sbb adc add sbb jge in sub adc add inc add add sbb add add add add add add sub add add add inc add add add xchg inc add sub sbb add inc add add rolb (bad) (bad) (bad) incl add add add add inc add jge mov (bad) (bad) incl adc xchg add add inc add add add xchg inc add sub pop add add adc cwtl add add inc add add add inc add sub sbb add inc add add inc add add add inc add sub sldt add adc mov sbb adc add add add add cwtl inc add sub adc add add inc add add add cltd inc add sub pop add add add add inc add mov mov adc scas adc mov inc add adc scas adc mov inc add mov mov adc scas adc fmuls inc add adc scas adc add inc add adc scas adc sub inc add adc scas adc push mov loopne inc add adc scas adc js inc add mov mov adc scas adc mov mov mov adc scas adc enter loopne inc add adc scas adc lock loopne inc add adc scas adc sbb add adc scas adc inc mov loopne inc add adc scas adc push mov mov adc scas adc nop mov loopne inc add adc scas adc mov mov mov adc scas adc loopne inc add mov mov adc scas adc or inc add adc scas adc xor inc add adc scas adc pop lea loopne inc add adc scas adc orb add adc scas adc test inc add mov mov adc scas adc rorb inc add adc scas adc clc lea loopne inc add adc scas adc and inc add adc scas adc dec mov loopne inc add adc scas adc jo inc add mov mov adc scas adc cwtl mov loopne inc add adc scas adc rorb add adc scas adc add add nop enter add add hlt inc add (bad) (bad) incl add add add add add add fs add inc add add add add add inc add add add inc add add add lcall or inc add add add inc add add add test inc sbb inc add adc xor add pop sbb sbb add xchg sahf inc add sbb add inc add add add add inc add add add add add sahf inc add sbb add inc add add add pop sbb sbb add dec lahf inc add sbb add inc add add add pop sbb add add test inc add sbb add inc add add add inc add add add inc add sbb add inc add add add pop sbb add add pusha mov jge movsb sbb add inc add add add inc add add add jge mov inc add add add adc push add add inc add add add mov jge mov add add adc push add add inc add add add add sbb add inc add add add pop sbb or add shlb jge fcompl add inc add add add inc add add add inc add sbb add inc add add add pop sbb pop add add jg add sbb add inc add add add inc add add add mov jge or inc add add add adc push sbb adc add inc mov jge adc inc add add add adc insb add add inc add add add jge sbb inc add add add adc jo add pop sbb adc add clc mov jge sub inc add add add adc je add pop sbb sbb add push movsb inc add push inc add add inc add add add pop sbb adc add mov inc add push inc add add add adc jl add pop sbb add add or inc add push inc add add inc add add sbb sldt add inc add push inc add add add adc test add pop sbb or add les jge pop push inc add add inc add add sbb adc add and jge insb push inc add add inc add add inc add add add add add add push inc add add add sbb add add fsubs jge mov inc add add add adc xchg add add inc add add add inc add push inc add add add adc cwtl add add inc add add add jg add add inc add add inc add add add add add cmpsl inc add push inc add add add sbb push add add inc add sbb add inc add add inc add (bad) (bad) incl add add add add jge mov (bad) (bad) incl add add inc add inc add adc xor inc add inc add adc pop lcall mov adc scas adc test inc add adc scas adc lods lcall mov adc scas adc aam inc add inc add adc cld lcall mov adc scas adc and inc add inc add adc dec fwait inc add inc add adc je inc add inc add adc pushf fwait inc add inc add adc les inc add adc scas adc in fwait inc add inc add adc adc inc add inc add adc cmp inc add inc add adc fs inc add inc add adc mov add adc scas adc mov inc add inc add adc fcompl add adc scas adc add inc add inc add adc sub inc add inc add adc push popf inc add inc add adc jl inc add inc add adc movsb popf inc add inc add adc int3 popf inc add inc add adc hlt popf inc add inc add adc sbb inc add inc add adc inc sahf inc add inc add adc insb sahf inc add inc add adc add or nop enter add add repz add (bad) (bad) incl add add add add add gs mov inc add add add add add add add add add add add mov add add inc add inc add add add add inc add adc xor add pop sbb adc add inc scas inc add and add inc add add add add inc add add add jge mov inc add add add adc cmp add pop sbb adc add clc scas inc add and add inc add add add pop sbb adc add push scas inc add and add inc add add add inc add add add jg add and add inc add add add pop sbb sbb add or inc add and add inc add add add inc add add add add add inc add and add inc add add add pop sbb pop add add mov add es add add add adc push add add inc add add add mov add es add add add adc pop add add inc add add add add es add add add adc pop add add inc add add add mov add es add add add adc pusha add add inc add add add inc add es add add add adc add add inc add add add jg add add add add adc push sbb push add add mov add es add add add adc insb add add inc add add add inc add es add add add adc jo add pop sbb or add movsb mov add es add add add adc je add pop sbb or add add add inc add add add adc js add pop sbb add add pop mov add es add add add adc jl add pop sbb or add mov jg add add add adc addb add inc add add add jge pushf es add add add adc test add pop sbb add add add add add inc add es add add add sbb add add int3 mov add es add add inc add add inc add add sub jge shlb add add inc add add sbb or add add add add jge je inc add add add inc add add add mov add icebp inc add add add pop add rolb (bad) (bad) (bad) incl add add add add inc add jge mov (bad) (bad) incl adc pushf add add inc add add (bad) mov add es add add inc add add sbb adc add sub inc add es add add add adc movsb add add inc add add add jg add es add add add add add test inc add adc loopne inc add test inc add adc or inc add adc scas adc xor inc add adc scas adc pop stos inc add test inc add adc subb add adc scas adc test inc add test inc add adc shrb inc add adc scas adc clc stos inc add test inc add adc and inc add adc scas adc dec stos inc add test inc add adc jo inc add test inc add adc cwtl stos inc add test inc add adc shrb add adc scas adc call test inc add adc adc add adc scas adc cmp add adc scas adc pusha lods inc add test inc add adc mov add adc scas adc mov inc add test inc add adc fsubrs add adc scas adc add inc add adc scas adc sub inc add adc scas adc push lods inc add test inc add adc js inc add test inc add adc mov test inc add adc enter cmp inc add adc lock inc add test inc add adc sbb inc add adc scas adc add or nop enter add add (bad) incl add add inc add add add data16 pop mov add add inc add add add add add add add add add inc add mov mov push mov inc add add add or add daa inc add adc xor add pop sbb sbb add in mov jge xor inc add add inc add add add add inc add add add inc add daa inc add add add adc cmp add pop sbb adc add movsb mov jge dec daa inc add add add adc inc add add inc add add add mov jge pop daa inc add add add adc inc add add inc add add pop mov jge fs inc add add inc add add add pop sbb adc add add add add jg add add add add add inc add add add add add inc add daa inc add add add add pop sbb add add jo inc add daa inc add add inc add add add inc add add add rolb jg add add add adc pop add add inc add add add roll jg add add add adc pop add add inc add add add jge les inc add add add adc pusha add add inc add add add roll jg add daa inc add add add adc add add inc add add add inc add daa inc add add add adc push sbb pop add add jg add daa inc add add add adc insb add add inc add add add ret mov add daa inc add add add adc jo add pop sbb or add add add add inc add and or add add add inc add add add jge call add add adc js add pop sbb sbb add or inc add sub sbb add inc add add add inc add add add add sub or add inc add add sbb sldt add les mov add sub sldt add adc test add pop sbb sbb add sbb inc add sub sbb add inc add add sbb adc add js inc add sub adc add inc add add inc add add add lds mov add add add add adc nop add add inc add add xor inc add sub or add inc add add inc add add add jge push add add adc cwtl add add inc add add add movb jg add repnz add add add adc pushf add add inc add add add add sub push add add adc mov sbb sbb add mov jg add add inc add add inc add (bad) (bad) incl add add add add movl mov (bad) (bad) incl add add add mov inc add adc mov inc add adc scas adc mov inc add mov inc add adc fdivrl inc add adc scas adc add inc add mov inc add adc sub inc add mov inc add adc push mov inc add adc scas adc jl inc add mov inc add adc movsb mov inc add adc scas adc int3 mov inc add adc scas adc hlt mov inc add adc scas adc sbb inc add mov inc add adc inc mov inc add adc scas adc insb mov inc add adc scas adc xchg mov inc add adc scas adc mov mov inc add adc in inc add mov inc add adc or inc add mov inc add adc xor inc add mov inc add adc pop mov inc add adc scas adc test add adc scas adc lods mov inc add adc scas adc aam inc add mov inc add adc cld mov inc add adc scas adc and inc add mov inc add adc dec mov inc add adc scas adc je inc add mov inc add adc pushf mov inc add adc scas adc les inc add adc scas adc hlt and cmc inc add (bad) (bad) incl add add and adc hlt inc mov scas sub add add or in inc add add or add add add add add (bad) (bad) ljmp inc add iret inc add add add lret (bad) incl add add add (bad) (bad) decl icebp inc add iret inc add add add jle (bad) incl add add add sub (bad) (bad) (bad) decl icebp inc add iret inc add add add jle (bad) incl add add add (bad) decl icebp inc add iret inc add add add arpl (bad) incl add add add (bad) decl icebp inc add inc add add add gs (bad) incl add add add pop inc add (bad) (bad) decl icebp inc add inc add add add jle (bad) incl add add add inc add (bad) (bad) decl icebp inc add inc add add add jle (bad) incl add add add dec inc add (bad) (bad) decl icebp inc add rolb add add test jle (bad) incl add add add test (bad) decl icebp inc add add add add gs (bad) incl add add add mov (bad) decl icebp inc add inc add add add data16 (bad) incl add add add mov (bad) (bad) (bad) decl icebp inc add inc add add add jg (bad) incl add add add or add add add cmp pop add jae add jae pop add push add add jae imul add jo pop add add add jb add add xor add add and push add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp cmp inc add add add outsb add add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae pop add jns jae je add cmp inc add add add outsb add add jae cmp add add cmp pop add imul outsl add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add bound add cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add imul outsl add jae push add ja add push add add add add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add jns jo add add outsl add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add add push add dec add add outsb add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp pop add add add insb imul outsl outsb gs xor add push gs je outsl xor add add popa jns jb outsl je add push insb popa fs gs imul add add jo popa imul outsb imul gs add add fs imul xor push insb addr16 imul data16 gs jae jae add add gs insb jne bound add dec outsl outsb arpl je jb add push push jo popa jb popa outsb jae add data16 imul xchg cmp int dec mov jge mov adc rolb (bad) cmp cmpsl jnp jecxz enter mov sub dec xchg inc orl stos mov dec lods xor or stos add xchg inc outsl jb add add cs push add xor aam inc add rolb add add loopne inc add or je jmp push mov call jmp add add add add pop push jb addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add (bad) rolb add add push add add add add inc add inc add es add jge or xor add add xor add pop add add gs xor add add dec outsb jae jb dec outsb jne add inc add add lock add or je jmp push mov call jmp add add add add jb gs xor add add adc imul outsl push jns je insl push imul aam inc add roll add add cld es add or je jmp push mov call jmp add add add add gs dec outsb jne add inc add add or inc add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add test inc add inc add add adc inc add or je jmp push mov call jmp add add add add imul inc inc inc add add add add inc popa fs jne gs jb je push je add add roll aam inc add add and inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add roll sub inc add add sub inc add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add inc add add cmp inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add test inc add roll add add inc daa inc add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je test inc add aam add add push daa inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul add add insb jns gs dec jne inc add add rorl inc loopne rorl mov inc js pushf leave and inc add add add pop daa inc add or je jmp push mov call jmp add add add add data16 je imul addr16 js add and inc add aam add add push add add add add or je jmp push mov call jmp add add add add dec outsb push arpl add test inc add aad add add je inc add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add aam inc add add add andb add or je jmp push mov call jmp add add add add je insb imul push imul test inc add add mov inc add or je jmp push mov call jmp add add add add insl xor cs insb add add insl insl inc gs popa outsb imul je add add clc aad add (bad) inc add add cwtl daa inc add or je jmp push mov call jmp add add imul add and inc add add add movsb daa inc add or je jmp push mov call jmp add add add add arpl outsb jne popa imul add inc add add mov inc add or je jmp push mov call jmp add add add add fs outsl arpl add roll in inc add add mov add add add add or je jmp push mov call jmp add add imul cs add add adc add inc outsl arpl outsb je jb jo jb imul inc add xlat inc add add enter mov or je jmp push mov call jmp add add add add js gs gs popa jo inc add jo inc add add aam inc add or je jmp push mov call jmp add add add add je bound arpl jo add add roll int3 xlat inc add add loopne inc add or je jmp push mov call jmp add add add add je jne jb outsb je push dec add add add aam inc add inc add add in daa inc add or je jmp push mov call jmp add add add add je outsb jne gs jne je je insl add test inc add add add clc daa inc add or je jmp push mov call jmp add add add add jbe jo xor add add sldt add je gs imul add mov inc add fadds add add add inc add or je jmp push mov call jmp add add gs gs jo popa je inc add add aam inc add flds add add adc inc add or je jmp push mov call jmp add add add add je outsl insb jns imul and inc add inc add add sbb inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add je arpl add flds add add sub inc add or je jmp push mov call jmp add add outsl insl imul add add add je outsl outsb jae insb gs je insb dec popa outsb fs gs add aam inc add flds add add xor inc add or je jmp push mov call jmp add add add add fs popa je add roll dec fiaddl add add inc sub add add add add or je jmp push mov call jmp add add add add outsl jae dec gs inc imul inc add add dec sub add add add add or je jmp push mov call jmp add add add push gs popa jbe dec gs add fiaddl add add pop sub add add add add or je jmp push mov call jmp add add add add je jb imul inc add aam inc add inc add add sub add add add add or je jmp push mov call jmp add add add add popa jae push popa jo add add roll pop fildl add add jo inc add or je jmp push mov call jmp add add add add gs je inc arpl insb gs je jb popa bound add inc add add jl inc add or je jmp push mov call jmp add add add push jb jo jb push popa jo add roll lock add add mov inc add or je jmp push mov call jmp add add add push gs insb outsl jae dec gs cwtl flds xor inc add add xchg sub add add add add or je jmp push mov call jmp add add add inc jb popa je push arpl popa bound outsl outsb je gs jne arpl add roll js inc add add mov add add add add or je jmp push mov call jmp add add add add inc push test inc add faddl add add lods sub add add add add or je jmp push mov call jmp add add add add jb fs insb add add add gs gs outsl outsb outsb arpl outsb inc add or inc add fldl add add mov add add add add or je jmp push mov call jmp add add popa insb imul je add add insb insb gs popa outsb xor test inc add add add les inc add or je jmp push mov call jmp add add add dec outsl arpl push outsb insb outsl arpl aam inc add add shrb inc add or je jmp push mov call jmp add add add inc outsl outsb outsb arpl push jb outsb je jb insb add xlat inc add fldl add add fsubrl inc add or je jmp push mov call jmp add add add add inc imul je js add inc add add call add add add add or je jmp push mov call jmp add add gs jbe inc jb je arpl push arpl outsb add add aam inc add add hlt sub add add add add or je jmp push mov call jmp add add add add jae je jb outsb je jb add add inc add fiadd add add add inc add or je jmp push mov call jmp add add add add je outsb jne je insl push arpl mov xchg mov add inc add add or inc add or je jmp push mov call jmp add add add add ja outsb imul arpl add test inc add add sbb inc add or je jmp push mov call jmp add add gs arpl push arpl add and inc add fild add add and inc add or je jmp push mov call jmp add add add add je jne bound inc outsl jb popa je add add aam inc add loopne add add xor inc add or je jmp push mov call jmp add add gs popa jae inc jb outsl jb add add roll fs add add cmp inc add or je jmp push mov call jmp add add add add gs imul add add inc add add dec sub add add add add or je jmp push mov call jmp add add jb gs gs jne arpl add add add add je outsl outsb jae insb gs outsl fs aam inc add loopne add add push sub add add add add or je jmp push mov call jmp add add add add imul push outsl insb jne add add jo inc add inc add add pusha sub add add add add or je jmp push mov call jmp add add add add gs je inc insb insb imul outsb dec outsb imul add roll pushf loope add add insb sub add add add add or je jmp push mov call jmp add add add add je popa jo jne add test inc add loope add add js inc add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add outsb inc js arpl jb jb add add inc add add add test inc add or je jmp push mov call jmp add add add jbe jb imul add add add push gs outsb jae popa insb insb inc imul mov inc add add nop sub add add add add or je jmp push mov call jmp add add roll or inc add add pushf sub add add add add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add inc add add test inc add or je jmp push mov call jmp add add add add je imul add roll insb jecxz add add mov inc add or je jmp push mov call jmp add add add add outsl ja imul jns arpl test inc add add shrb add or je jmp push mov call jmp add add add add gs popa outsb arpl inc outsl outsb outsb arpl outsb inc add add inc add add int3 sub add add add add or je jmp push mov call jmp add add add jo push add push outsb push jne jb add dec in add inc add add fsubrs inc add or je jmp push mov call jmp add add add add je jb outsb je jb jb jbe jb add add add add inc add add in inc add or je jmp push mov call jmp add add outsl insl fs xor cs insb add add or add inc imul inc and add in add in add add lock add add add add or je jmp push mov call jmp add add add inc gs jns inc outsl insb outsl jb test inc add inc add add cld sub add add add add or je jmp push mov call jmp add add add add je inc dec dec outsl fs and inc add add or inc add or je jmp push mov call jmp add add add add jae jb dec outsb jne je insl inc add inc add add adc inc add or je jmp push mov call jmp add add add add je jae jb bound arpl outsw jb popa je outsl outsb inc add add inc add add and inc add or je jmp push mov call jmp add add add insl imul dec inc add inc add add add sub inc add or je jmp push mov call jmp add add add add je popa jo gs insb popa addr16 add roll test inc add add cmp inc add or je jmp push mov call jmp add add add add je outsl insb outsl jb jo arpl add and inc add out add add inc sub add add add add or je jmp push mov call jmp add add add add addr16 imul xor inc add out add add push sub add add add add or je jmp push mov call jmp add add add add je inc inc js test inc add add add pop sub add add add add or je jmp push mov call jmp add add add add jae push jne je gs popa add add add push add add add add or je jmp push mov call jmp add add outsb insb outsl arpl imul add add add je jb jbe je dec bound arpl arpl imul roll add inc add add je inc add or je jmp push mov call jmp add add add add je jns je insl inc gs jne je popa outsb addr16 inc add aam inc add add add subb add or je jmp push mov call jmp add add add add popa jo outsl arpl add add roll mov add mov inc add or je jmp push mov call jmp add add add add gs inc inc insb push popa jb insl add add inc add add cwtl sub add add add add or je jmp push mov call jmp add add add insl imul arpl roll dec jmp add movsb sub add add add add or je jmp push mov call jmp add add add add insb imul je insl add test inc add add mov inc add or je jmp push mov call jmp add add add add je imul je add xor dec mov orb les roll aam inc add add mov add add add add or je jmp push mov call jmp add add add add push outsb imul imul add inc add add enter mov or je jmp push mov call jmp add add insb outsl jae push jb outsb je jb add add inc add add add aam inc add or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add roll mov add loopne inc add or je jmp push mov call jmp add add add add outsb fs js arpl popa bound add inc add jmp add add in sub add add add add or je jmp push mov call jmp add add add add gs je inc dec inc push popa je gs inc jb jae add add roll push jmp add add clc sub add add add add or je jmp push mov call jmp add add add add gs je inc imul jns add add push jae jne fs add add roll mov add add inc add or je jmp push mov call jmp add add add add outsb fs imul inc add add inc add add adc inc add or je jmp push mov call jmp add add add add je gs outsl popa jb push je je add add test inc add inc add add sbb inc add or je jmp push mov call jmp add add add inc fs insl jo je imul insb gs test inc add add sub inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add in inc add add xor inc add or je jmp push mov call jmp add add jo outsb inc jbe outsb je outsl add add cwtl flds sub inc add add inc sub add add add add or je jmp push mov call jmp add add add add fs jo popa je push gs jne arpl add aam inc add inc add add dec sub add add add add or je jmp push mov call jmp add add add add insb imul imul add in inc add add pop sub add add add add or je jmp push mov call jmp add add popa jbe dec jne inc insb outsl jae add add jo inc add inc add add sub add add add add or je jmp push mov call jmp add add add add outsl jae inc jbe outsb je outsl add add out inc add add jo inc add or je jmp push mov call jmp add add add add gs je dec arpl dec outsb imul test inc add add jl inc add or je jmp push mov call jmp add add add add outsb fs outsb jbe jb outsb insl outsb je je imul loop add out inc add add mov inc add or je jmp push mov call jmp add add add add outsb inc jbe outsb je add idivb dec mov nop jns mov dec dec aas cmpsb out xlat add add aam inc add out inc add add xchg sub add add add add or je jmp push mov call jmp add add add add ja imul mov inc add add mov add add add add or je jmp push mov call jmp add add add add insl push gs outsl insl jo jae je outsl outsb push imul aad add out inc add add lods sub add add add add or je jmp push mov call jmp add add add add outsl bound inc gs je insl dec popa insl gs add aam inc add lock add add mov add add add add or je jmp push mov call jmp add add popa imul outsb je jb push add add and inc add add add les inc add or je jmp push mov call jmp add add add add fs je insl inc add add aam inc add add shrb inc add or je jmp push mov call jmp add add add add outsl jae inc insb imul add or mov push arpl roll clc lock add add fsubrl inc add or je jmp push mov call jmp add add add add je imul imul je outsl jb je add add icebp inc add add call add add add add or je jmp push mov call jmp add add add dec outsl outsl imul jb jbe insb gs imul popa insl gs add icebp inc add add hlt sub add add add add or je jmp push mov call jmp add add add inc insb outsl bound push outsb imul inc add icebp inc add add add add or je jmp push mov call jmp add add add add imul inc insb outsl jae add inc add inc add add or inc add or je jmp push mov call jmp add add add add insl inc gs popa outsb imul je outsl jne je add add aad add add sbb add or je jmp push mov call jmp add add outsl outsb imul jns add call add and inc add or je jmp push mov call jmp add add js jb arpl outsl outsb inc add add xor inc add inc add add xor add or je jmp push mov call jmp add add add add jo arpl inc inc insb push popa jb insl add inc add add cmp inc add or je jmp push mov call jmp add add jae popa fs outsl fs je add add aam inc add add dec sub add or je jmp push mov call jmp add add add add gs push gs imul arpl arpl imul add repz add add push sub add or je jmp push mov call jmp add add add add outsb gs je inc outsl outsb jae insb gs je insb inc jbe outsb je add add roll dec hlt inc add add pusha sub add or je jmp push mov call jmp add add add dec outsl imul inc add inc add add insb sub add or je jmp push mov call jmp add add gs outsb addr16 push imul inc add hlt inc add add js inc add or je jmp push mov call jmp add add add add je jne jne fs outsl insl jo gs outsl outsb push je je jae add aam inc add cmc inc add add test add or je jmp push mov call jmp add add add add imul add jo inc add add add nop sub add or je jmp push mov call jmp add add add add addr16 gs outsl jb dec gs add cwtl flds (bad) cmc inc add add pushf sub add or je jmp push mov call jmp add add add push insb jae gs popa insb jne add roll or inc add add test inc add or je jmp push mov call jmp add add add add insb jns imul push jb fs je outsl outsb jae popa jo arpl gs outsb jae add add and inc add add add mov inc add or je jmp push mov call jmp add add add add insb insb push popa je add add and inc add add shrb mov or je jmp push mov call jmp add add add add insl push gs outsl outsb jbe jb imul jne add clc aad add testb add int3 sub add or je jmp push mov call jmp add add add add inc gs push je jb insb popa arpl outsb je add roll inc testl fsubrs add or je jmp push mov call jmp add add add add je imul add inc add add in inc add or je jmp push mov call jmp add add add add je outsl jns jne jae jb add test inc add testl lock add or je jmp push mov call jmp add add imul gs jb dec gs fs add add imul add add inc add inc add add cld sub add or je jmp push mov call jmp add add add add imul outsb je outsl insb add roll js inc add add or add add add mov or je jmp push mov call jmp add add add dec jo outsb inc popa arpl jo jbe outsb je outsl addr16 add clc inc add add adc inc add or je jmp push mov call jmp add add add add je gs inc imul js add and inc add inc add add and add add add mov or je jmp push mov call jmp add add add add je popa jbe inc imul add add call stc inc add add sub inc add or je jmp push mov call jmp add add add add gs add aam inc add add cmp add add add mov or je jmp push mov call jmp add add add add insl inc gs outsl outsb je js add add fs gs outsb jae add clc aad add stc inc add add inc sub add add add mov or je jmp push mov call jmp add add add add gs gs jns je insl push imul roll cmp inc add add push sub add add add mov or je jmp push mov call jmp add add add add jbe dec jne dec gs popa add jo inc add add pop sub add add add mov or je jmp push mov call jmp add add add add jbe dec jne inc gs gs popa jo inc add jo inc add cli inc add add push add add add add or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add roll sbb inc add add je inc add or je jmp push mov call jmp add add add add jb popa je add add aam inc add inc add add subb add add add or je jmp push mov call jmp add add add inc gs jne jb outsb je jb arpl jae add popa arpl jns gs add add aam inc add add mov add add add mov or je jmp push mov call jmp add add add add je insb popa jae dec outsb outsw inc add add inc add add cwtl sub add add add mov or je jmp push mov call jmp add add add add outsl bound inc fs je insl inc add aam inc add inc add add movsb sub add add add mov or je jmp push mov call jmp add add add add je insb addr16 je insl push gs inc add inc add add mov inc add or je jmp push mov call jmp add add add push popa imul insb gs bound arpl roll loopne inc add add mov add add add add or je jmp push mov call jmp add add add add gs je push arpl outsb add add roll sub inc add add enter mov or je jmp push mov call jmp add add add add arpl jae push outsb fs jne imul add add addr16 bound add add cwtl flds je inc add add aam inc add or je jmp push mov call jmp add add add add outsb jae popa je inc arpl insb gs je jb add add inc add add loopne inc add or je jmp push mov call jmp add add add push outsl insb jns outsl insb jns outsl outsb add roll and inc add add in sub add add add mov or je jmp push mov call jmp add add add add je insb je add roll push add clc sub add add add mov or je jmp push mov call jmp add add add push jb je push jb imul imul inc add add add inc add or je jmp push mov call jmp add add add add imul arpl jne je popa insl gs add cwtl flds hlt incb add add adc inc add or je jmp push mov call jmp add add add add je data16 outsl outsl je outsl outsb imul je jae add jae outsb outsl jbe gs add add add incl add add sbb inc add or je jmp push mov call jmp add add add add jbe push outsl inc js add add roll mov add sub inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je inc fs insb imul outsl ja add inc add add xor inc add or je jmp push mov call jmp add add add add gs jb outsl insl insl inc jb outsl jb add roll cmp inc add add inc cs add or je jmp push mov call jmp add add add add je popa imul outsw add roll addb add add dec cs add or je jmp push mov call jmp add add imul jae je add add inc add add add add pop cs add or je jmp push mov call jmp add add add inc insb addr16 imul add jb jae popa data16 fs add inc add add fs add or je jmp push mov call jmp add add outsb fs gs popa addr16 add add test inc add add add jo inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs jne jo je push add aam inc add add jl inc add or je jmp push mov call jmp add add add add inc insb insb outsl arpl add add roll clc add add add mov inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb imul inc outsl jb popa je add inc add add xchg cs add or je jmp push mov call jmp add add add insl imul arpl push popa je push roll nop add add add mov add add add add or je jmp push mov call jmp add add add push gs outsl jbe inc outsl outsb je gs jne arpl add je add and inc add add add add lods cs add or je jmp push mov call jmp add add add add imul add and inc add add add add mov add add add add or je jmp push mov call jmp add add add add gs je dec popa je push push and inc add add add les inc add or je jmp push mov call jmp add add add dec outsl popa fs je imul inc add add add add shrb inc add or je jmp push mov call jmp add add add add inc insb imul inc outsl jb popa je jbe imul test inc add inc add add fsubrl inc add or je jmp push mov call jmp add add add add je dec inc inc outsl insb outsl jb popa bound add add roll pop add add add call add add add add or je jmp push mov call jmp add add add add outsl ja ja gs outsl jo jo add jo insb imul add add inc add add hlt cs add or je jmp push mov call jmp add add add add outsl bound dec gs outsl jb push je je jae add roll cld add add add add inc add or je jmp push mov call jmp add add imul outsb je outsl jne arpl add add cwtl flds dec add add or inc add or je jmp push mov call jmp add add add add je popa jae inc arpl gs outsl jo jo add inc add add sbb inc add or je jmp push mov call jmp add add add add je outsl insb jns imul and inc add add add and inc add or je jmp push mov call jmp add add add add jbe dec jne inc gs outsl jae je outsl outsb add jo inc add inc add add xor inc add or je jmp push mov call jmp add add add add outsl outsl jae push imul insl popa je add and inc add inc add add cmp inc add or je jmp push mov call jmp add add inc dec popa jo je imul add roll les inc add add dec das inc add or je jmp push mov call jmp add add outsb je jb jb je arpl push arpl outsb add add aam inc add inc add add push das inc add or je jmp push mov call jmp add add add add popa fs imul roll pop pop inc add add pusha das inc add or je jmp push mov call jmp add add gs insb addr16 je insb dec inc add add test inc add add insb das inc add or je jmp push mov call jmp add add add inc fs gs popa je inc add inc add add js inc add or je jmp push mov call jmp add add add add popa jo imul push imul popa gs jb arpl jae jb add je add add aam inc add inc add add test inc add or je jmp push mov call jmp add add add add outsl ja jne jae jb add inc add add nop das inc add or je jmp push mov call jmp add add add add insb insb dec jae inc imul test inc add or add add pushf das inc add or je jmp push mov call jmp add add add add gs je push imul inc add inc add add test inc add or je jmp push mov call jmp add add add add insl dec outsb jae popa insb insb dec dec inc inc add clc aad add inc add add mov inc add or je jmp push mov call jmp add add add add je push inc gs je jo add add inc add add shrb add or je jmp push mov call jmp add add add add je outsb push inc imul imul add inc imul arpl outsb jae add roll hlt or add add int3 das inc add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul roll pop or add add fsubrs inc add or je jmp push mov call jmp add add add add je push push outsl imul add or add add in inc add or je jmp push mov call jmp add add add add ja arpl add add test inc add or add add lock inc add or je jmp push mov call jmp add add add add jae imul test inc add or add add cld das inc add or je jmp push mov call jmp add add arpl push imul and inc add add add or inc add or je jmp push mov call jmp add add add add je gs inc push je jb js jb inc add inc popa insb popa arpl push jae add roll mov add adc inc add or je jmp push mov call jmp add add add add outsb fs jb jbe jb gs popa add add inc add inc add add and inc add or je jmp push mov call jmp add add add add addr16 gs arpl test inc add inc add add sub inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne test inc add add cmp inc add or je jmp push mov call jmp add add gs outsl outsb jae insb gs jne jae jb outsb outsw add add aam inc add or add add inc xor add add add add or je jmp push mov call jmp add add add add jbe dec jne inc jb popa imul add add jo inc add add add push xor add add add add or je jmp push mov call jmp add add add add addr16 jb popa je dec gs js add outsb imul inc add add pop xor add add add add or je jmp push mov call jmp add add add add insb imul inc add or add push add add add add or je jmp push mov call jmp add add add add insb jns outsl outsb add roll and inc add add je inc add or je jmp push mov call jmp add add add add insb jns jb ja add add roll pusha push inc add add xorb add or je jmp push mov call jmp add add add add popa bound outsb jne je insl add test inc add add mov inc add or je jmp push mov call jmp add add add add gs inc outsl insb outsl jb jo arpl add add roll in push inc add add cwtl xor add add add add or je jmp push mov call jmp add add add add insb outsl arpl gs imul bound add add add add insl insl popa outsb fs imul addr16 add push insl gs cwtl flds cmp inc add add movsb xor add add add add or je jmp push mov call jmp add add add add dec inc dec inc push jb arpl add add inc add add mov inc add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul test inc add cmovno add add mov add add add add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add aam inc add add add enter mov or je jmp push mov call jmp add add add add je imul inc js inc js add add roll nop adc add add aam inc add or je jmp push mov call jmp add add add add je bound arpl add roll fcoml inc add add loopne inc add or je jmp push mov call jmp add add add add jo push imul jae outsb add add cwtl flds and inc add add in xor add add add add or je jmp push mov call jmp add add add add fs arpl jae inc outsb imul add adc add add clc xor add add add add or je jmp push mov call jmp add add add add outsb jae popa je dec gs popa add add test inc add add add inc add or je jmp push mov call jmp add add add add je gs push outsb add and inc add inc add add adc inc add or je jmp push mov call jmp add add add add je outsl insl insl push jb jo jb imul roll dec adc add add sbb inc add or je jmp push mov call jmp add add add add je gs imul popa insl gs add cwtl flds xchg adc add add sub inc add or je jmp push mov call jmp add add add add jne dec outsl outsb imul add je gs jae add add add add inc add adc add add xor inc add or je jmp push mov call jmp add add gs jns gs popa add add test inc add adc add add inc xor add add add add or je jmp push mov call jmp add add add add jae popa addr16 outsl js js add add inc add add dec xor add add add add or je jmp push mov call jmp add add jae popa fs gs fs je add add aam inc add adc add add pop xor add add add add or je jmp push mov call jmp add add add add je imul inc js inc js add add roll adc add add xor add add add add or je jmp push mov call jmp add add add add je jb jae dec jb inc js add and inc add add add jo inc add or je jmp push mov call jmp add add add add inc jb gs popa je dec popa outsb fs add add jae jne imul roll movsb adc add add jl inc add or je jmp push mov call jmp add add add add je jae jb gs jne je inc dec inc add aam inc add adc add add mov inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je dec popa insl gs imul outsb je add adc add xchg xor add add add add or je jmp push mov call jmp add add add add insl inc gs jb jns outsl outsb je js add add aad add add mov add add add add or je jmp push mov call jmp add add gs jo popa je push outsb add add test inc add adc add lods xor add add add add or je jmp push mov call jmp add add add add je inc dec inc push add add aam inc add push inc add add mov add add add add or je jmp push mov call jmp add add add add gs insb xor add je outsl insl gs jns add add add add add add add les inc add or je jmp push mov call jmp add add add add imul outsb outsl ja gs popa addr16 add test inc add push inc add add (bad) xor add add add add or je jmp push mov call jmp add add add add insb arpl imul add roll sbb inc add add fdivl inc add or je jmp push mov call jmp add add add add jne push gs jne arpl popa outsb addr16 addr16 add aam inc add inc add add call add add add add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul roll mov inc add add hlt xor add add add add or je jmp push mov call jmp add add add inc insb popa jae push imul roll cld pop inc add add add inc add or je jmp push mov call jmp add add add add jne inc jb popa imul pop pop jbe popa dec gs add add add add roll inc sbb add add or inc add or je jmp push mov call jmp add add add add inc push dec add add add add jne push popa addr16 imul sbb mov add sbb inc add or je jmp push mov call jmp add add add add insb dec outsl jbe dec gs outsl jb add add roll call add and inc add or je jmp push mov call jmp add add push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov sbb add inc add insb add and jbe add jae imul cmp and add add and add push add outsl add add je and jbe add jae imul cmp and add sbb add inc add insb add and data16 add jae cmp and add add adc add inc add insb add and dec add cmp and add push inc inc ss dec dec add add pop pop jbe popa push je inc popa je pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa push je inc outsl jo add add pop pop jbe popa push popa jb jne add jbe popa inc jb outsl jb jbe jb insb outsl ja add imul jb outsb jae gs jb add insb insb gs xor pop pop jbe popa inc jb gs je add add pop pop jbe popa push je dec xor add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs popa jb add add add add jbe popa inc jo xor add pop pop jbe popa dec xor jns add popa rcl aam jo dec lahf (bad) aas repnz mov push in movsb jne mov shll mov mov (bad) dec mov cs adc jne jg xchg push ja repnz lods xor or stos add xchg dec gs imul gs add add jae jne jae fs push outsl jb gs outsb addr16 outsl jb gs xor add jae imul add insl bound imul outsb fs add add push insb popa fs outsl jb je add add data16 fs xor add popa outsb addr16 xor add inc imul gs push outsl jb imul dec gs push dec popa jae gs add outsb jns outsb outsb add add je outsl jb xor add add jae add add je je gs jae add inc popa je push add add gs jne insb jns add add dec outsl insl gs ja cmp add popa insl gs jb je xor add push je outsb je jb je insl insl outsb add dec outsb gs insl cmp add add imul popa outsb gs gs add dec outsl outsl insl gs imul add imul gs outsl outsb imul inc gs jae outsb fs xor push outsl jne gs add jbe insb outsl arpl cmp add outsl je gs popa insb insb jns add add jae outsl insl jb gs inc jb outsb outsb add addr16 imul xor add test sbb out inc mov and mov cmpsl es popf jecxz mov (bad) mov imul add cwtl leave addr16 out mov add ja mov inc stos lret cmp dec popa insb insb jne imul cmp add jb insl fs imul add jo jne imul bound gs imul add push outsb fs xor add jae popa jb imul add push gs jne fs add add jne push gs outsb imul gs jo gs add add inc imul insl popa je arpl add outsl insb popa je outsl outsb outsb jae add add gs outsl imul popa jae add add bound jne popa jb add dec jns outsl arpl add add push imul inc gs insl outsl xor add add insl jns xor add je addr16 data16 add push gs insb insb jae add add dec jo imul outsb imul add imul imul outsb jae jb jb xor popa outsb je arpl popa je jbe xor inc outsl outsb fs popa outsb add add jae popa jae popa addr16 jb add push gs imul outsl jb add dec imul xor xchg sbb jl loopne incb and xor adc inc mov and xor dec mov xchg xor fwait mov sub inc jne imul jae jb outsb jae outsb cmp add jae insb gs dec imul popa bound popa imul add imul add add popa insb jns gs add add jb add inc popa jbe jae add inc js arpl insb xor add jp insl add add jo popa addr16 cmp add jb jo imul add add je je xor add add outsl addr16 insl insl gs outsb addr16 add outsl imul jae add push outsb jo jb outsl outsb imul imul outsl jb add jns insb popa jb xor outsb arpl data16 add insl jae popa je outsl outsb gs add add imul jb jo popa outsb outsb jae add push outsb add add inc jb imul add imul gs jae xor add push popa insl ja jb push inc gs dec jne je jb je je jb xor add pop clc int3 (bad) inc mov cs loop (bad) sbb inc (bad) dec cwtl ja (bad) mov lahf cli daa ja push dec xchg cmp (bad) ret push and push aad imul xor inc jb fs outsl data16 add dec gs jb gs gs aaa add add outsl jae insl jo je gs arpl add add push outsb jae outsb jae outsl jne outsb gs xor dec gs insb jns gs outsb jae add push je outsb add add push popa insl data16 fs outsl jb imul outsb add add popa jb imul gs add add inc popa jae ja jb add add dec popa jp insl jne imul jns outsl jne push push jb imul outsb jae add dec jns jb jae add imul insb imul jb add bound outsb je add outsl insl popa addr16 jbe outsb add add jo imul jae add push outsl outsb jns outsl outsl jo add add outsb outsl jae imul add add imul add dec jb imul gs gs add push gs xor add dec popa add gs jb jne imul gs je fs add inc outsl outsb imul popa add add sub pop cltd or dec sahf inc push sbb lret les cmp in mov mov inc outsl test mov inc (bad) mov pop add in mull sbb stos pop dec jbe jb popa outsb imul add jb popa insl insl gs gs add add gs add push jne imul imul je imul jae popa outsb popa insb outsb jae add dec gs jae add inc jb outsb gs arpl add push imul push fs je outsw jb popa je jb add imul insb jns inc jne popa insb jns je jae jb jb add jb imul add imul add jae jb push xor add add gs outsb je add add imul je gs add outsb popa outsb jae dec outsl fs addr16 outsl jb xor add push jo outsb outsb gs add add inc outsb jb jb outsb jae add dec gs jb outsl jae add add inc jne popa outsb imul gs gs imul add add outsb popa je fs add add jns je jb je jae add add push jne gs popa addr16 xor dec popa imul fs add add outsb gs add xor dec lret cld fistpll sbb outsl (bad) in sbb push inc push dec sbb dec mov stos jp dec mov gs fdivp fcoms scas insl pop mov jns pop mov sbb popa imul jae imul outsl imul xor dec popa jb outsl outsb outsb gs jb dec popa jb outsb outsl jb insl popa add inc outsl jne je add addr16 outsl insb outsb gs add dec imul insb imul outsl outsb arpl je imul insb jns add inc imul jae je outsl outsb gs xor dec js outsb imul jae insb imul push je jb imul popa outsb outsl gs xor add outsl imul je outsl outsb outsb add inc insb popa jo outsl outsb xor add add imul jae add outsb jne imul je xor add add jae fs add add outsl jb jo jae gs inc gs insb outsl ja push xor add push push je imul dec gs insl jns jae outsb xor inc imul jb add dec outsl outsb addr16 outsl xor add dec gs outsb outsb imul dec outsl je imul add popa insl imul outsl addr16 imul add repz nop pop or xor push and mov xchg jo push cmp mov stos jne cmp sbb dec nop out fiaddl jl pusha push outsb jae popa bound imul gs insl bound gs push jb insb imul add add dec outsl outsb jae jo jb jae imul xor push jb fs outsb add add insb gs outsb fs add fs add gs gs je add inc jns insb outsl jo imul gs imul je popa outsb imul jb fs popa jae add add je imul dec imul inc outsl jb outsl outsb gs add dec insl jo jb je jbe jb add add insb add jae jae insl outsl popa outsb jae add add outsb imul popa imul jae add add jbe outsb outsb gs add dec jne imul add push outsl insl bound jne insb jns add popa jbe outsb gs add dec outsb data16 outsl jb jae add outsw jb gs add add outsl outsb gs add add ret dec pusha std mov pop out jo sub pop stc stc out into sub inc (bad) xchg jl xor mov lods cs leave into jge jp push out inc mov in jge test push push outsb outsl arpl jo popa bound add add imul add inc imul imul je insb outsb xor add dec jne insl gs jb outsb outsb jae add gs outsb gs add add jae outsb imul outsb imul add add outsb outsl jb insl jne gs push je jb je jne je outsb fs inc imul insb je add insb gs insb jns add dec popa jb outsl insl gs je add outsb imul add popa addr16 insb outsb add dec outsb addr16 outsb imul add outsb gs jns outsl insb outsl imul add outsb addr16 jo jb popa outsb gs add dec outsb je popa insl popa insl insl popa jb xor add push popa jns jne fs add add dec popa arpl arpl outsl xor add add insb imul add insl jo outsb xor push imul outsl insl insl outsb je jb jb add add push add popa outsl insb outsl addr16 add insb push aad cmpsl ret sub or inc aad lods dec mov mov pushf mov (bad) ljmp xchg pop mov mov loop or stos leave (bad) insl dec test fwait (bad) and jne jae jbe xor add add outsb jae je jb je outsl outsb add add outsb je popa imul jae imul imul add jae gs popa je jae jb outsb fs add push popa insb je popa fs add add push fs dec outsl outsb popa jb gs imul inc jb je je imul outsb imul add jae popa jb popa add add dec outsb je popa outsb jae outsb arpl add dec outsb data16 popa je outsl outsb jae add add jb outsb imul add add data16 jne gs cmp add add jae je gs add add insb jbe outsl outsb gs gs add add imul add gs addr16 add dec popa jb outsl outsb imul add add jb jb xor push jb jae insb jns imul add jb imul dec jne bound je jb add inc imul jns gs add add imul gs add jbe imul add jae jp cmp add add int3 xor sbb xchg test mov inc (bad) mov sub pop cltd or dec sahf inc push sbb lret cmp xor or stos add xchg mov add add add addr16 imul data16 gs jae jae add fs insb outsl ja outsl cmp sbb add and and (bad) (bad) jmp add fs insb outsl ja outsl cmp xor sbb add add or add add add add adc je imul jae popa outsb popa insb outsb jae add or inc popa imul jae jae add add add adc add add add add or push jo outsb outsb gs add or inc insb popa jb jae jae gs jae add add adc or add add add add or dec popa imul fs add or push insb popa jae jb outsb add adc adc loopne adc add add add add gs add add inc jne add add push sub or add incl xor add add outsb imul imul add je popa jo jns push xor add adc add adc incl add add or dec popa outsb popa je fs add or inc outsl jb popa addr16 gs or add or or add add add add insb jae add or push gs outsb popa je outsl outsb xor add adc movups add add add add pop add outsb popa outsb jae add or inc insb jbe outsl insb popa jb outsb add add in or movups add add or inc imul insb jns add or inc imul add syscall punpcklwd mov adc add add add add add gs add adc dec popa outsb outsw insb imul jae add or push loope mov adc add add add add or je addr16 outsl jb xor add or push imul gs jae add adc sub or incl xor lldt imul je gs add or push popa outsl jne gs gs add add adc leave add or incl xor lldt fs je outsw jb popa je jb add or inc insb je imul xor add push insl or add or or incl sub add push pop add jae outsl outsb jae add pop add outsb insb add or adc add or or add add or dec gs jb push xor add or dec outsl jbe imul add add push mov push add add add adc add popa jb outsl jae add or dec insl outsb je insb jne xor jle add mov adc add add add add or insl gs imul add or push gs je jb fs add push jae and adc adc incl add add or dec jbe jb popa outsb imul or inc insb insl jne imul add push cmp (bad) adc or adc incl add add or inc jb jae jo outsl je jae add adc dec jb popa outsb outsl jo outsl jae push add add or adc add add add add add jb imul add add jae imul repnz adc or adc incl sub add adc insb gs outsb je add or dec outsb popa jne jne popa insb add add or adc incl xor add push or inc jb outsb gs arpl add or jb fs je outsl outsb jae add or ds add adc add add add dec popa add add dec popa insb add adc orb or push add add sldt imul jo jne je gs add or push gs jbe push jb outsb jae add or or jns adc add add add add or inc insb imul insb jns add add push popa push add pmaxub add adc sbb incl sub add sbb add jo jb popa addr16 xor add add push arpl add add or adc adc sbb incl das add add or inc outsl jb popa insl insl gs gs add or inc jae push add push push in adc add sbb incl add add add outsb jb jb outsb jae add or inc insb gs imul sub adc ja enter add add dec xor sbb lahf cli daa ja push dec xchg cmp (bad) ret push and pop clc int3 (bad) inc mov cs loop dec lods xor or stos add xchg mov add add add fs imul xor or jns outsl imul add add (bad) (bad) (bad) jmp add insb outsl imul add add mov add push or add add lldt jae outsb jae outsl jne outsb gs xor add or dec outsl outsb imul arpl sti add adc add add add add or dec popa jp insl jne imul push jne insb insb jne add jnp out icebp pshufw sub add add add insb insb gs popa outsb xor add pop add imul insl add xchg or add add add add add jns outsl outsl jo add push add outsb push insb gs outsb xor cmpsb or adc add add add add jae xor add or push popa outsb addr16 outsb outsl jne xor add adc or add incl sub or push insb jns outsl jne push add or inc insb popa outsb addr16 add adc adc add add add push add imul pop add jne gs or push testb push adc add add add add add inc gs add or dec outsb je outsb gs outsb je add or call pop add add or push jb imul outsb jae add or push insb outsl jbe imul xor add or add or incl xor add or add imul jb add or inc jb push jae outsl insb gs add pop or lret or or incl sub add or add addr16 je fs or push jne imul bound add adc adc push in adc or incl xor add or add outsb outsl jae imul add or insb imul arpl add add add or adc add add add add outsb imul popa add or inc jae outsb jae bound add add adc or incl sub or inc jb fs outsl data16 add or push push jb gs add or add adc incl xor add prefetch dec gs jb gs gs aaa add or push imul je add bswap or sub adc add add add add adc push popa outsl jae insl jo je gs arpl add or inc insb insb gs fs add cmpsl add add add add adc inc gs jb imul gs add push add insb insb popa outsl je gs jne add add or adc incl sub add adc add insb insb jns gs outsb jae add or inc imul add add add adc incl sub push add fs jae add or imul gs jae add push dec adc add or adc incl sub add adc add bound outsb je add pop add insb gs add or test adc incl add add outsl insl popa addr16 jbe outsb add pop add push add add or adc incl xor add push adc push popa insl data16 fs outsl jb imul outsb add or push popa bound gs add push into adc or adc add add push add imul gs gs add or dec gs gs add or or push add add add add or inc popa jae ja jb add lldt jns gs outsl fs addr16 outsb xor add adc or pop add add add add or outsl imul jae add or push jne jae je gs add add or (bad) push adc add add add add or inc outsl imul add or dec push insb gs je outsb add push cli or pop scas pop adc add add add sbb push imul je outsb add add add outsb outsb gs insb outsl imul in push into or push adc add add or jo jb jne imul add bound xor add or dec adc adc add add add int3 xor sbb cmp mov stos jne cmp push popf repz nop pop or xor cltd iretw adc pusha rcll mov add add add outsb arpl je jb add outsb fs xor sbb add and and (bad) (bad) jmp add fs xor xor faddl add jno add cmp incl sub or push outsb gs imul add jae outsb jb xor add push mov inc or add add pop add outsb imul or push fs insb imul add add push xchg push jmp incl add add or dec jne jae fs add or inc jb popa jo gs gs add push jb stos or adc add add add add add insl bound jne insb jns add or push outsb imul gs add or or add or dec jne imul add or push popa insb outsl outsb je insb cmp add or adc add incl xor add push or dec popa je popa outsb imul or inc insw popa gs outsb imul or clc or push adc add add or dec outsl gs gs je add or inc popa outsb bound jns add adc sub add add add add or inc outsl jb outsl outsb gs add push add jae popa outsb fs jb outsb imul jae add or adc adc add pop add add add add or je popa insl outsl popa outsb jae add lldt jae outsb jae jb gs xor add add aam orb or incl das add add or inc insb popa imul jae add or inc imul insb insb gs add add and adc add add add add or gs je jbe jb add or inc data16 imul add add or movhps add add add add popa jbe outsb gs or outsl imul jae jb add adc add das adc or incl sub add or insb add or inc jb jbe jae popa outsb xor add or adc incl daa add add push add outsb imul add jo jb xor add add adc or add add or dec push insl insl bound gs add or dec outsl insl popa insb outsl jo gs add psrlq xor push add push add add add add or dec insl outsw jb gs add push add gs imul gs add adc sub (bad) incl xor add adc add outsb jae jo jb jae imul xor add pop add insb imul adc movups add add add add or inc data16 outsb outsb gs add or popa insl jb outsb addr16 add adc or adc incl xor add adc push jb insb imul add or jo gs outsb je je add or adc adc incl add add outsb jae popa bound imul dec imul add push popl popf or or adc incl sub add adc fs or dec outsl bound imul add add adc adc incl xor add push or inc jns insb outsl jo imul add outsl outsb je outsl insb fs je add or push clc add add adc add add add push arpl add add insb gs outsl jb outsb imul jae add pop cmp sbb sbb adc add add or inc jb fs popa jae add or dec jo outsb imul repnz adc pop add add add add or dec gs gs outsb fs or inc jne outsl arpl outsl insl imul enter jp adc add add add add or inc jb outsl outsb gs add pop add insb jae gs add add jno adc add add add sbb add je jns outsb add or push gs popa fs add adc adc adc adc add add add add add data16 outsl jb jae add or push bound addr16 imul adc xor movups add add dec xor sbb ljmp xchg pop mov mov loop insb push aad cmpsl ret sub or inc aad dec lods xor or stos add xchg xchg add add add add data16 imul or dec outsl outsb je imul add add inc add add (bad) (bad) (bad) jmp add outsb je imul add push or add add add add add add or insl outsl outsb imul add or inc jae gs imul flds adc or add add add or jbe outsl outsb gs gs add or dec imul jae add adc push adc add add add add or inc popa jae popa jb popa add or dec gs outsl outsb imul pop orb incl add add add push fs push add outsl bound add adc adc in adc add incl das add add outsl jae insb jns imul add add popa insl gs aaa add or pop adc incl add add or dec outsb data16 popa je outsl outsb jae add or dec popa jae jb jae add pop decl adc add add or push outsb jae jp cmp add or inc gs imul add or add push add add add add or jae je jb je outsl outsb add pop add insl imul add add adc add add add add or push popa insb je popa fs add or inc gs jns je jb jae add adc add adc add add add add adc push jns je insl popa je jae jb outsb fs or push imul xor add or movb add or incl xor add or inc jb data16 jne gs cmp add or inc gs jne jns outsl imul inc or add or incl das add add add jae jbe xor add or fs jb jae insb jae add adc add add or incl xor add or outsb imul add or jb gs jbe jb add or add or incl sub add push or push popa jbe imul add add je jne outsl add add or adc push adc add add or inc imul insb add add add outsl jb jb add adc or push add add add add or inc imul imul add jae outsb imul jbe add add mov push adc add add or dec imul fs add or inc imul add or adc adc incl cmp add adc add jae popa je imul outsb imul add or push push push xor add adc or jbe adc add add add add pop add jb jb xor add or inc popa insl bound xor add adc or adc incl cmp add adc add outsb je popa imul jae imul inc jne fs jbe jb cmp add or add adc incl sub add adc jbe imul add pop add jb outsl ja add adc cmp adc add add add or push jo push addr16 add or push gs jb imul gs mov add adc add add or dec jne bound je jb add or push gs arpl gs add add clc add push add add add add or je outsb popa insb jns gs add or push insb addr16 gs add add or adc adc add add or dec gs imul add or inc addr16 gs add or add sbb incl xor add sbb add je popa outsb jae outsb arpl add or push fs outsb je add add fist mov adc add add add add or popa jb gs imul pop add insl jo outsl outsb add adc incl sub add sbb add jae je gs add pop add fs add push jae push add adc sbb incl add add int3 xor sbb outsb test cs leave ret dec pusha std mov pop out jo sub cmp xor or stos add xchg mov add add push add popa imul gs jb popa outsb jae or outsb jae jb imul add and and (bad) (bad) jmp add outsb jae jb imul add add adc add adc add add add add or inc imul insb je add or popa outsb arpl gs add adc sub orl add add add add dec jns add or inc outsb je insb jne je arpl add or cltd cmovno adc add add add add add outsb imul add add je jae popa je add adc push add adc add add add add add outsb outsl jb insl jne gs add or push outsb push imul js cmp insl or adc add add adc dec push jo imul outsb imul add sldt jns jb popa jae outsl jb imul or or incl sub add push or inc jb je jae xor add or push jbe addr16 xor add adc or xorps adc add add or inc imul insb outsb xor add or push outsl jae imul add or or add push add add add add or dec popa jb outsl insl gs je add or popa je imul gs add add add pop add add add add push add outsb addr16 jo jb popa outsb gs add adc push imul jb outsb outsb cmp add phsubw add add add or inc je insl imul or dec popa jbe addr16 fs add add adc or incl xor add or add insb imul add add outsb imul outsl jne xor add add add or incl sub add or add insl jo outsb xor add or push popa outsb addr16 fs add add add adc add add add add bound imul dec outsb fs data16 add or adc or incl sub add push add inc gs or push jne jae imul or divps mov adc add add or jb insl popa insl insl popa jb xor add push add imul add adc or add add add add adc push imul outsl insl insl outsb je jb jb add sldt jb popa insl outsb je jb gs add or or (bad) incl sub add adc add gs insb insb imul push popa fs add push mov aas adc or adc incl sub add adc dec popa arpl arpl outsl xor add push add jae outsb jae add adc add add add add adc add addr16 outsb imul add insl popa xor add adc or add incl xor add adc add insl insl gs jb outsb outsb jae add or inc data16 outsl imul add push jecxz mov adc incl xor add adc gs outsb gs add or inc outsb arpl bound gs add or adc adc incl xor add push push add popa jb je jne je outsb fs or push outsb fs outsb imul inc add pmullw adc add add or push insb popa addr16 insb outsb add adc inc insb jne imul outsl insb imul punpckldq push adc adc add add add add or push popa jns jne fs add or dec jo popa addr16 xor add or adc or or pop add add add add adc inc jb gs jns outsl insb outsl imul adc inc outsl jb imul outsb outsb add add or push sub adc add add or dec popa ja gs insb jns add or push outsl imul je jae add add int adc add add add add or inc imul addr16 add push add popa push jg or sbb incl xor add sbb add outsl arpl jo popa bound add or push popa jae outsb gs gs add or pop bound movups add add dec xor sbb and inc mov and xor dec jne addl stc inc xchg xchg sbb dec lods xor or stos add xchg test add add or jbe outsb imul gs add jo jae data16 imul je jb jb add add inc add add (bad) (bad) (bad) jmp add imul jbe jb gs jb add pop add add add sbb add inc add add add add or push popa bound popa imul add or push outsl jae outsl jb jb xor add add or adc adc add add add add push popa jb jo imul add push add jb jae je insb jae jae jne jae jae gs add adc or add incl sub add add imul dec imul jae add push push pop adc add add add add add outsl imul jae add or inc jb bound gs xor je pop adc adc add incl xor add add insb je jb je je jb xor add or push jo jb popa je add cmovne movsb push jbe adc incl sub add push or push jb jae gs add or dec outsl jne insb outsl outsb add lds pop adc add add add or push outsl fs outsl jb add or dec outsl jb popa arpl jns add or or push add add add add pop add jae insb gs add or push popa jae popa jb xor add adc or pop add add or jae popa je outsl outsb gs add push add popa jo insb imul add add adc adc incl cmp add or add outsb imul jae jb outsb jae outsb cmp add str insb gs jae insl insb imul push or add or movups add add add add pop add imul add add jb bound gs jb gs gs jae add add pop adc add add add add add popa insb jns gs add str jo imul addr16 gs add add xor or or incl das add add jns insb popa jb xor add outsl outsb je fs imul adc jle adc incl xor add push pop add imul adc dec outsl jb imul gs gs jae jae add add push adc ljmp sub add clts add jb add or push gs jne gs bound add or mov adc add add or dec popa je je xor add or push popa bound gs imul push test pusha push faddl adc add add add add or inc insb gs jae xor add add je add adc fcoms stos or adc incl sub add adc add jne je outsl outsb add or push gs jae outsb add adc add rorb sub or dec jb jo popa outsb outsb jae add or push push popa je add push fwait add add or adc incl xor add adc add jo jb outsl outsb imul add fs gs gs add pand adc add add add add jbe jae add or inc gs outsb imul add or pop or adc incl das add add or push outsb arpl data16 add or inc jne push gs add push rcll xor scas add adc add add or push popa insl ja jb push pop add jns imul dec or add incl das add add or inc jne insl popa addr16 cmp add or inc popa insb fs je outsb jae add add sub movups add add add add or inc js arpl insb xor add pop add outsb fs jbe add or add sahf or sbb incl xor add sbb add outsl addr16 insl insl gs outsb addr16 add pop add jb imul add add adc add add add add or inc jo imul or push outsb outsb je outsb insb gs add add movups add add push add insb popa jne add adc insb jns bound popa outsb fs imul add push leave pop stos or incl add add int3 xor sbb mov xchg mov mov nop jns mov dec dec aas cmpsb out xlat cmp xor or stos add xchg scas add add add add popa fs gs imul add popa insb outsl imul je add add inc add add (bad) (bad) (bad) jmp add insb outsl imul je add pop adc add sldt dec add incl xor add add add jae outsb fs xor add or inc data16 gs jo gs add andps mov pop pop adc add add add add add jbe insb outsl arpl cmp add or inc imul add pop aad xor add incl sub add add add popa outsb addr16 xor add pop add outsb outsb gs add or push or add add incl sub add add add jae gs add or inc outsl data16 imul pop or add incl xor add add outsb jns outsb outsb add adc push insb imul gs outsb xor add or adc incl sub add push or inc jae push add or push outsl imul add add incl xor add pop or gs bound gs gs add or push push je gs add push add add add add add add adc inc outsb imul gs outsl outsb imul add or inc bound insb jbe jb fs add adc inc adc incl xor or je gs popa insb insb jns add push add je imul xor add adc inc sets adc add add add add or inc imul gs add insb add add cmp incl sub add or add je push add or inc jb insl insl gs gs add add push add adc add add add add add je je gs jae add or push gs gs je jbe xor add pop xchg or or add or incl sub add or jne gs add or push popa jns outsl imul into or lds inc adc or incl xor add push push add outsb je jb je insl insl outsb add or inc jns popa jae imul sbb aad mov or or add add or push jae jne fs add or jb jae insl push add push sbb cmpsl adc adc add add add add push add addr16 imul xor add sldt je jb jo bound insb outsl addr16 add adc or add add add add add or push popa imul insl jb gs add adc push jo imul gs gs add add or adc incl xor add adc add jns outsb add adc push jb jo jb imul jb xor into add push xor adc add add add add pop add insb push add or push gs jb imul and sub scas or adc incl sub or dec outsl insl gs ja cmp add or dec outsl gs bound add adc or sub adc add add add add gs insl cmp add pop add outsl jo outsb add add inc movups incl xor add push or outsl insl gs imul add dec outsl outsb popa data16 outsb add or in adc add add or push outsl jb imul push add imul insb outsb gs add or pop or push add add add add or dec fs fs xor add push add insb imul addr16 jae add add push testb add add add sbb add gs jne insb jns add or dec jns gs insb popa jae add adc outsl or pop adc add add add sbb jae add or jne insb popa je outsl outsb outsb add adc mov fimul adc add add or popa insl gs jb je xor add push add outsb fs insb jae gs insb gs add add movsl push adcb sbb incl sub add sbb add popa fs outsl jb je add add jne add or add add dec xor sbb mov stos jp dec mov gs fdivp fdivs dec lret cld fistpll sbb dec lods xor or stos add xchg mov add dec add add or dec jbe jb insb jne bound add insb popa jae popa jae xor sbb add and and (bad) (bad) jmp add popa jae popa jae xor xor xchg add pushf push add in add inc add add add add dec popa outsb jne imul je xor add push add imul jb popa insb je imul add add icebp movups add add add add add dec imul dec outsl insl outsl imul imul jne xlat push xor adc add add add add sldt jae outsl jae je outsl outsb gs xor add or push outsl outsb imul add or add add add add add add popa insl imul dec popa jae push xor add add add add incl daa add add imul jb jb add add pop imul xchg add incl das add add or dec gs outsb outsb imul or inc addr16 jbe jb outsb fs or add jns adc add add or push insb imul jae add or push imul imul add add adc push add add add add or dec popa jb outsb outsl jb insl popa add adc jae popa bound je data16 insb jae jb gs add sysexit adc add add add add add or push jb imul xor add adc inc imul insb imul aaa add or adc or incl xor add or insb outsl ja push xor add or jb bound jp insb gs or pop adc add add add add sldt outsl outsl addr16 imul add or inc jb je outsl insb gs mov adc or incl sub add or add jb insl jns jae outsb xor add add push push push add pop push xor add add add popa insb imul add insb insb gs push pop adc adc adc incl add add or push gs imul jae imul arpl outsb outsl jb arpl je jbe add or fild add add add add adc push je jb imul popa outsb outsl gs xor add or inc insb imul outsb xor add or or push add add add add or dec outsl je imul add add outsb je addr16 add adc add add add add adc dec outsl outsb arpl je imul insb jns add or inc outsl jb jns fs add add add adc incl xor add adc add outsl imul je outsl outsb outsb add or inc insb outsl ja gs jb add pop cs push (bad) adc adc incl add add or inc insb popa jo outsl outsb xor add or dec popa outsb imul gs add add or push adc add add add add add jns outsb imul or push popa outsb arpl popa jae jae add adc or adc incl sub add adc outsb addr16 outsl xor add push add popa jb xor add or or or adc incl das add add or push push popa jae gs add or inc imul popa fs add or inc add adc add add or jb outsl je imul adc push imul gs jb gs outsb je add or adc add add add add str insb imul imul add gs add ud1 push ds add pop add add add add pop add bound add or inc popa jae arpl add lfs add incl sub or inc imul add or inc push imul or add adc or add add add push add addr16 outsl insb outsb gs add adc dec jo popa insb fs imul jae jb add emms or sbb incl xor add sbb add jb outsl outsb outsb gs jb add or inc outsl jb jne jae jb outsb cmp add adc dec or add sbb incl add int3 xor sbb cmpsl cwtl leave addr16 out mov add shrl out inc mov and cmp xor or stos add xchg mov add inc add add pop add jo popa imul popa imul add and and (bad) (bad) jmp add imul or add add add incl sub add add je je imul add add jae add add or add add add add lldt popa outsb je arpl popa je jbe xor add adc jb popa outsb addr16 gs gs insl gs jae jae add add or add incl sub add add add jae popa jb imul add add addr16 jae gs add adc mov mov adc add add or inc jne outsl addr16 data16 or push jne gs arpl outsb add or jns jnp adc add add add add jb insl fs imul add pop add outsl arpl add add adc pop or add incl das add add or dec jns outsl arpl add or push popa imul aad fiadd (bad) movups add add or push insb gs outsl imul push outsb imul push jge adc push add add add add adc inc gs outsb imul gs jo gs add or dec jne je imul add or out or pop add add or inc outsl outsb fs popa outsb add or push jo jb gs add add adc add add add add or push gs jne fs add or jo insb outsb imul add push dec or test adc add add sldt outsl insl popa je gs popa je arpl add or push jbe addr16 gs fs add or or adc add add add add add jae jb imul outsb gs add push add insb addr16 jb outsl fs add or dec add or or incl xor or inc outsb jae jb jb xor add outsw insb imul addr16 popa outsb add push out fwait push dec adc or incl xor add push add jae add adc dec gs bound fs outsl outsb je outsl insb insb gs add or adc add adc add add or push gs insb insb jae add sldt insl bound fs imul push insb add add adc add add add add push add insl jns xor add or push outsb imul gs adc adc (bad) incl sub add adc add jne push or push fs jne jb gs add or movhps repnz adc incl sub add adc add jae outsl outsb add or push push insb imul test push add adc adc incl xor add adc add bound jne popa jb add push add je outsb jb fs addr16 add or aam std or adc incl xor add adc add imul imul or inc outsb je outsl arpl outsl addr16 add or adc adc incl xor add adc jb imul outsl jb add or inc jb jae outsb fs push push push adc incl xor add push or inc outsb imul add add addr16 outsb je jb outsb addr16 add adc or adc incl sub add pop or insb popa je outsl outsb outsb jae add add jo add or push add push add add push add insb insb jne imul cmp add or outsl insb imul jns add add adc dec or pop add add add sbb add fs xor add add dec jbe aaa add or add add incl cmp push add jae popa jae popa addr16 jb add adc gs outsb jb outsl jbe imul jb add add adc add adc add add add add or push outsb jo jne imul add gs jb je outsb xor add pop or inc or adc add add add add add imul add add imul add adc adc pop adc add add add int3 xor sbb mov (bad) dec mov cs adc rcl aam jo dec lahf (bad) aas repnz cmp xor or stos add xchg push xchg add loopne add add add popa jns jb outsl je add jb je imul add and je add sbb add add add add add add add xor add add sbb add add push mov add mov aas xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop cld cld cld cld cld cld cld cld cld cld xorl cld cld cld cld cld cld cld cld cld cld jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call popa jne push xchg in xor and mov arpl cmp xor icebp mov xor icebp mov movsb fcoms mov mov bound xor pusha xor outsb xchg mov jg xor add xor inc es cmp sub popa imul jno xor in xor popa fdivs jne xchg xor popa fadds or loope ja xor xor mov cld popa fcomps jl xor popa mov and popa pop cmp sahf loope adc cmp sbb adc and call loope jne mov pop cld or arpl xor fs gs cwtl or xor js xor loope xor popa xor in xor cmpsb ljmp movsb aaa popa pop fdivl pop xor lods and idiv popa xor xchg popa lretw lods inc mov fsubl xor in popf xor clc cmp xor outsb mov mov ljmp xor or sub nop add popa xor adc xor sub (bad) ja xor mov cld popa mov xor popa xor xchg cld popa xor sahf movsb xchg cld popa xor cld xor jecxz xor jmp xor sub (bad) mov cld popa add int popa pop repz movsb mov lods sahf loope fsubs je pusha jbe mov test pop mov hlt movsl xor popa mov and popa imul outsb xor or pop cld or pop cld mov and clc mov and popa imul outsl xor gs jmp mov je ja xor xor mov cmp popa mov xor cmp mov popa xor clc mov and popa imul outsl xor gs call stc aas xor call xor xor mov jno ljmp cld cmp inc repnz xor clc mov and popa imul outsl xor jne xor mov and popa imul outsl xor mov cld popa imul outsl xor or and popa pop xor popa xor or lret test popa mov cld xor (bad) cmp popa xor data16 popa xor cld cmp fucomp popa xor xchg and cld cmp lret xor ljmp xor cmp fdivp popa xor cld popa xor xlat cmp xor popa pusha add pusha popa xor cltd cmp or cld popa into mov xor mov adc into lret add jge hlt ljmp cld popa xor hlt popa mov popa cmp or add popa pop cld or lret test loop xor mov and popa mov and popa mov es popa mov es popa mov and popa imul jne sub mov imul ja sub adc cmp mov cld mov and popa push pop add mov mov (bad) cmp mov cmp popa mov xor in popa xor js xor cmp lret xor out xor cmp inc les mov jne popa popa fmull and xor and xor popa jl mov jbe xor ljmp ljmp cmp xor add xor mov fldenv ja xchg xor popa fsubrs adc cmp outsb cmpsl xor ja sub popa mov in je faddl sahf into lret mov lret test cmp xor imul mov mov insl mov mov insl xor pop mov mov cmp popa mov cmp mov leave xor popa bound fwait cmp ljmp cld popa mov and popa xor ds push jne cmc xor popa mov xor (bad) cmc xor popa mov cld sti popa xor xor xor mov jnp xor call xor cld call xor add xor popa mov and popa add scas xor ja cmp faddl cmp sbb xor mov mov xor xor mov popa inc (bad) xchg and int3 popa xor dec imul xor popa xor sahf fs cltd xor call and push clc add and call imul fs cmp cmp mov mov xor adc lret dec popa cmp mov ds popa divb popa xor cmpsb je cld popa xor fisub cmp xor xor xor out cmp popa xor std test lret popa cmp mov popa xor cld loop xor in xor popa xor jne and cld in inc cli ljmp jnp cmp bound xor cld popa xor std xchg mov cld adc xor adc sub arpl xor loop ss and xor (bad) and cld popa xor mov (bad) ficoml ja mov add and xor (bad) and cld popa xor mov bound cmp cmpsl mov mov lret add xor icebp push xor sbb xor cld popa push xchg int3 popa xor and dec movsb pusha inc cmp out cmp popa fidivl inc popa xor call xor popa mov fs popa xor movsb pusha inc pusha jne mov cld jno xor test mov cld popa popa fdivrl sahf inc cmp out cmp popa xor xor add insl jg sbb out xor out cltd xor lock xor into xor xor out cmp popa popa pop add popa cmp popa xor cwtl ljmp mov call mov shr mov pop mov mov in mov imul add push ljmp mov xor inc or scas mov mov lods call xor jg jns mov mov mov mov mov sub xor fsubs popa xor popa cmp sahf loope mov popa xor stc popf ds ljmp cld adc mov push cmp and xor cmp repnz popa xor mov inc lock pop cld or pop cld ljmp scas sahf loope add ds sahf into lret ja inc fstl jno xor mov fdivrl sub fstpl xor mov cld popa mov sbb popa xor in popa xor or xor sahf inc xor cmp int loope mov popa into adcl xor add mov cmpsl jno cmpsb or mov add arpl sahf add stos jns int3 cld outsb mov jmp mov mov xor sahf inc pusha add xor push add sub imul mov lcall testb xor ficompl xor outsb sahf in lcall outsb call ljmp ja cmp into sahf data16 cltd xor jns xor pop push int sbb mov sti popa xor sub frstor outsb xor mov inc in ljmp sub leave xor in aaa cld popa mov pop clc call bound pop popa xor mov cmp into sahf loope add ds arpl xor and cld ljmp aam cmp repz xor pop ss sahf inc and ss mov in cltd xor jns xor loop enter xor pop mov cmp popa imul xor cmp add inc xor std or and popa into inc clc ljmp pushf cmpsb mov hlt popa xor mov fadds popa xor mov xor or mov clc sahf loope add ds arpl xor sub (bad) outsl xor mov mov pusha xor xor push into in fmulp xor popa xor lds cmp popa xor js xor ljmp cld cmp inc cli popa xor cld ljmp cld cmp push popa xor cld ljmp cld call xor cld dec xor popa mov xor sahf into xor call xor sahf cmpsb dec std popa xor cld pusha ds popa xor out xor cld popa icebp cmp xor pop out into adc mov popa xor out xor outsb mov cld popa xor inc xor repz xor popa or cli popa xor js xor pop sub cld mov xor and ss inc or popa xor mov or cld popa icebp inc xchg pop xor push (bad) jbe xor adc jb mov roll pop xor loope dec shll outsb mov cld popa xor std popa xor fisub cmp xor or lret imul xor pusha xor (bad) movsl xor andb adc mov mov dec stc xor sahf xchg imul pop clc popa xor test subl xor (bad) dec xor xchg arpl xor std popa xor dec cmc xor sahf cmpsb dec std popa xor push ljmp add inc sahf jg xor call xor xor xchg popa and sahf inc xor cmp iret sahf fs ja cltd xor loopne lret adc pop je (bad) mov cld popa into cmpl ja cmp iret sahf fs xchg arpl xor std popa xor dec cmc xor sahf cmpsb dec std popa xor cld call mov mov xor or xor sahf xchg imul fucom sahf into lret xchg popa pop lret add std aas or mov add (bad) lcall cld cmp push pop push xor ljmp call jno ret mov clc ljmp hlt push clc mov mull mov shlb lods xor out test shrb lret xor jo mov cmp mov sahf inc aaa jg xor mov cmp cmp popa imul inc leave xor pusha ds popa xor and pusha addr16 xor or xor daa call xor repz cmp test pop cmp pop aas repz gs lock jg xor call mov std adc outsl movsl outsb inc mov leave xor arpl mov popa xor sbb mov jge repz popa add inc popa xor jmp add int add jbe ds xor jbe cs jecxz mov cld pusha xor insb jae push popa xor sbb call xor subl xor mov add int iret divl cs jmp xor mov jbe ds daa into js insl inc (bad) ja cmp xor cs inc pusha xor cmpsl xor imul popa fdivrs popa xor xor ljmp cld popa (bad) lret mov fnstcw popa xor into ljmp cld popa (bad) lret mov xor cld jno xor loopne xor popa xor and cld call xor in popa xor push insl xor call mov mov popa inc rclb xor ljmp cld popa add jbe mov adc xor pop xor mov cmp popa imul sahf movsb mov lods xchg into lret adc cmp cmp int cld popa fnstcw add inc cmp mov fidivl adc cmp std stos xor (bad) cli popa xor cld jno xor scas add stos xor jbe popa xor mov popa mov std adc repnz inc ja cli dec ja cli xor cli xor repnz inc ja cli xor cli cmp cli xor cli xor ja cli sub (bad) ljmp cld popa pop xor popa addr16 mov xor popa into popa lods mov xor lock xor popa xor jg xor pop xor ljmp cld popa pop xor popa pop aaa xchg popa pop xor jl into popa fsubr idivb cld jge xor ss popa int3 call cmp aaa into inc add (bad) mov popa xor sahf sbb and xor and xor cmp cmp and mov cld fs popa mov inc cli call cmp or cmpsl xor popa pop xor popa pop xor xchg popa xor aaa into popa fsubr idivb cld jge xor popa addr16 mov repnz xor ss popa fdivs into popa aam loope cld popa into mov adc cmp xchg popa popa lret mov xor popa into popa lods ljmp jns ret mov xor popa mov std outsb mov add xor ljmp fcompl ret add xor shlb xor loop aas cld adc push jg xor cld popa xor in ljmp adc mov push ja cmp jne inc or mov clc mov in jmp icebp ss xor popa mov mov test cmp xor jmp mov mov add popa xor call dec mov mov bound xchg mov clc aaa xor adc mov mov pusha out mov fsubs mov push in inc pop bound mov jge xor inc sbb add scas xor xchg popa xor cld xor jne icebp xor popa into in movsl sub lods xor xor mov inc in xor xor movsl sub cmp popa xor call xor ljmp aas dec mov hlt clc call mov xor mov mov cld ljmp jmp cmp cmp jne cli icebp js add mov cld popa mov add popa xor call dec mov cld popa xor jbe cmp repnz loop mov and fs pop mov lock xor and cld jae fs sahf into popa pushf cmp cmp pusha stc repnz imul cmp popa mov push cmp and xor jge xor or xor sahf xchg popa xor sahf fs adc loopne adc popa xor mov xor adc push xor add jge adc inc mov popa xor mov mov fsubs xor adc jno cld and jge adc inc (bad) loopne adc mov fadds add adc jno pushf mov adc inc jmp dec adc mov xor jmp popa fidivrl inc xor mov (bad) fsubl xor popa repnz cld jno xor sahf inc jo or lret add insb cmp xor cld popa bound cld xor inc cld popa xor stc popa sub cld cmpsl xor fsqrt popa xor jb and and (bad) popa inc (bad) ja cmp xor or pop cld or pop cld or pop cld popa xor fs cmpsb mov xor popa xor aaa into inc clc loopne neg popa xor sahf adc adc mov popa sub cld or pop cld or bound xor divl adc xor (bad) lret test ljmp adc and inc add mov jo arpl std popa xor and in popa xor into popa pushf cmp aaa inc and push pop push xor ljmp cld ljmp mov mov leave xor popa mov adc call insl adc call bound loop xor or lret sub leave xor in xor popa mov jo xor imul cld popa xor sbb xor lea (bad) ja aaa mov imul inc pusha xor and out adc mov push fnstenv (bad) mov sbb xor jle ja cmpsl jb inc and xor adc push jg xor mov inc fldenv jge mov fs aam jne ja cmpsb jb inc popa xor mov mov cld inc xor (bad) repz ljmp clc bound hlt and (bad) mov mov inc adc mov pusha xor loope xor fisttpl jg cmp cld popa jo (bad) jb adc loopne lret inc xor lea fnstcw cmp and mov (bad) je cwtl xor popa inc out mov jne clc ljmp out and jl xor mov sub popa mov nop cld popa xor mov xor int repnz add popf adc rolb push cld mov add push inc cltd inc push addr16 xor jno dec gs inc inc inc xchg push inc push xchg inc adc test adc cld mov int sahf push ja add inc cltd inc push addr16 xor fmull jnp push add xor inc pop fwait adc fiadd pusha scas inc adc push adc add jge mov push push inc cltd cmp pop inc xchg pop inc push xchg push inc push cltd cmovne adc xchg (bad) mov adc pop adc mov push push inc popf or push lcall jae xor roll adc test lret add inc xchg inc push inc xchg inc adc push inc popf or xor loopne lret add addr16 aaa xor aaa xor push xor dec xor sub and add popa xor popa jo test jo shll adc fmul add xor xor mov add xor popa and cld popa xor popa xor popa xor popa xor popa xor popa xor popa xor popa popa xor popa xor popa xor popa xor popa fldz adc add pop xor mov lret add inc pop mov adc inc fldl sahf inc inc cltd adc push cld mov add gs mov push stos or xchg push inc xor pop fmul add pop dec stos or xchg push xor mov into lret mov adc xchg adc xchg add cmp add inc bound daa pop pop cltd popa flds pop sahf into jge sub mov dec fcmove add push inc mov add inc mov push pop cld mov faddl sahf pop push mov push pop iret push xor inc mov lret scas add js adc mov pop inc cld mov fldl sahf bound and inc xchg adc add fmull mov lret stos or mov pop jne or xor pusha mov lret stos or mov pop mov inc push lahf adc adc add inc push mov popa fsts sahf into arpl or cld mov fiadd sahf arpl add xor lret lret mov or push xor (bad) fcmovne add pop pop popl push xchg add jbe add pop pop fwait xor xchg das push pop cltd and fcompl into lret mov or push xchg add data16 lods fmulp add inc push popf adc push push (bad) adc adc ror es inc mov push push push lods adc cltd adc adc fcmovne add pop push mov inc xchg add popa fldl2e or or xchg adc sahf adc jno add inc cld mov lds sahf jb xchg adc jne sahf adc jno add inc cld mov pop cltd add xor jae lret add pop push nop or cmp add pop jno add inc mov xor (bad) fxch add inc push nop or into lret mov push jno add inc mov pop pop cld mov add pop inc cltd aaa pop inc mov pop mov pop pop mov xor fcoml jbe mov pop pop mov inc test inc push popf add into lret mov jb cltd add mov mov inc lods adc cltd add xchg adc popf or inc dec cld mov les sahf jg scas add ja cmovne adc push push cld mov inc scas add inc xchg add pop mov push cld mov fiaddl sahf jg test aaa pop push mov push addr16 add xchg rdtsc fsub xchg into lret mov and xchg pop push mov push push (bad) adc (bad) mov lret test push xor fisttpll inc pop stos or xchg push inc xor (bad) xlat lret add push push mov pop pop xchg add fdivr mov lret movsb lea cld mov fldl sahf xor popa fstps sahf into xor popa xor xchg xor outsl enter xor mov or or into lret fsubp pushw xchg sarb test mov and (bad) imul sbb hlt (bad) xor push ss add leave les jb mull xor bound dec push inc jne pop fmul outsb icebp push (bad) mov push cmp repz mov push cld daa (bad) je xchg mov xor dec mov mov rcrb or cmp clc in sahf fsts (bad) jne test sbb cli ret je lret pop (bad) and ss cmp dec cld xchg lods dec pop mov clc leavew dec into jne daa mov mov xchg push les mov rcr xchg shl mov or jecxz imul pop scas pop cli pop (bad) (bad) movsb mov cwtl loope adc cmp fmul add xor mov add fldenv mov pop rolb push cld mov cld popa fyl2xp1 adc into xor sbb into lret cld popa xor js lret add xor mov add fnstcw or popa xor mov xor dec fxch add xor add pop in xor daa imul pusha adc outsb mov sbb mov sub ljmp ret cs add cmovns cmpsb lods das adc jno jb idiv fidiv and mov pop lcall mov push push xchg lds or (bad) addr16 cmp adc jp jbe inc in and push or (bad) ret jnp jo xchg cltd pop xor xchg jno outsb xchg (bad) lret mov (bad) out call lret inc inc sti cmpsb dec add fild fistpl popf repz pop movsl pop push sbb sarb adcl sbb stos push and sbb movsl fcoms (bad) dec icebp jo sti adc movsl mov adc lahf and push ficoml minps jns fidivr dec jmp inc and pop jno test fnsave add or rcl push or cmp iret xor add push (bad) jp and add lods arpl loope out fdivl push (bad) xor (bad) lret xchg jno addr16 inc sbb push cmc (bad) or sbb negb pop add fstpl sub cs and mov adc push scas pusha hlt jnp fcoml sbb sub pop push popl adc stos and xorl nop sbb and xchg insb cmp (bad) dec sti pavgb ljmp aam ja inc je jae mov (bad) cwtl shrb jo outsl (bad) jne in push inc aaa fldt pushf add aaa jne mov adc dec dec inc js pop mov les outsl adc dec mov addr16 jnp push jle and (bad) repnz fildll cmp cmp bound mov pop jg or mov mov sbb fnstsw push sarl stc in fstl push repz cmpsb mov ret fmull nop icebp out imul movsb jo out cmpsl nop jnp in inc addb in cmp pop mov (bad) xor pop test pop sbb dec jb jecxz nop xor sbb push scas push das imull enter movsb inc test pop jbe sbb dec mov sbb test cmp out xchg pop in mov xor inc jecxz sbb fs nop loop dec fmull shrb sub inc sbb into push jp fs divl lods (bad) mov rorb cmp out (bad) bound lock fucomp mov cmpsl mov stos out jmp add data16 xchg or data16 mov push out outsl sbb insb rolb in jl xor lds out jno sbb jge adcl mov arpl xchg xorl mov inc fs lods data16 xor not mov jecxz pop cli out sahf aad mov outsb js mov lcall mov je ficom adc or add mov dec fs sub dec push adcl jmp cmp jns ret mov mov popf subl sub shrl fsub and ficoml in mov out lcall dec scas cld push std call outsb loop mov push andl xor das enter out loope (bad) loopne insb je sub stc in cmp out mov mov aam outsl adc dec aam mov mov fnstenv mov xor addr16 mov mov inc mov ret shl rolb jge and xchg insb push pop mov cmp mov jbe and lahf clc mov dec leave sbb sti (bad) xor xchg and cs dec push push (bad) pop mov inc push (bad) pop lret cwtl data16 adc pusha sti jecxz popf inc pop es ljmp jmp idiv aad out dec or mov add sarl mov sbb dec aas cmp dec push dec fwait or push push int fist insl fs xchg mov js dec aas stos cld xorb lcall addb pop sbb repnz xor and int push (bad) push adc pop and cmpsb push (bad) nop and (bad) jns out hlt ljmp pop in into insl xchg fisttp pop mov lret cmp mov into lcall xor aam nop sub pop popf add fist mov imul ds repnz jg inc into jge adc mov aam add insb dec adc cmp ficomp and hlt cmp or addr16 dec mov cmp mov das cmp xchg sbb push popf std nop sarl cmp mov sub mov stos (bad) mulb sbb xor cli in sbb test (bad) sbb pusha in and dec mov cli cmp fistpll push ret xor xchg sub movsl adc mov adcl inc xchg call clc lea xor adc push pop mov (bad) push popf adc or and jno scas push in dec xchg mov pop mov jo pusha aas fisubr repz lret aaa andl icebp pop popfw bound je ss fdivrs aas push movsl ldmxcsr int3 push fisttpll repz jle shll addr16 or push fdiv loope dec int3 sbb xchg cwtl push inc shrl jp mov jbe faddl jge mov stos add or sub test pop data16 imul inc mov inc cmp (bad) sbb mov popf mov sub and (bad) call call cmp cmc adc clc hlt mov push cwtl insl inc (bad) xchg push push imul sti lea inc mov mov fsubrp xor jge lods adc out mov pop dec sahf fwait xchg fldt add cwtl int stos mov test iret sub rorb (bad) xor (bad) cmp lods sub outsl xor xchg mov xchg lret aas push roll mov in movsl pop lods scas pop (bad) adc rolb out xor sub js int3 dec add outsl push aas jl xrstor jno test mov (bad) jo daa sbb imul sti lahf decb push dec jae jno roll lods fwait push cwtl loopne push dec imul add iret out dec inc pop lods or movsl addl add sbb add testl xor jecxz pop repnz pop pop xchg and jge ss mov les adc cmp cmp (bad) hlt sbb rolb mov imulb cmpsl sbb mov arpl add cmp es arpl test out add nop movsl div push push xchg lret cmpsl xchg inc cs dec rcrl xor (bad) xchg mov jns data16 inc add jle iret adc and pop push sbbl imul jb jmp leave lock adc popf inc lds lea pop jns lret (bad) ja mov das bt cmpsl mov (bad) and popf hlt sub ds lcall mov stc roll add out mov jle adc xor dec xchg out cmp jle test scas mov lret pop fild roll mov addb shrl (bad) jne add mov pop pop mov mov jb xor pop sarb jmp push mov sbb xor inc idivl adc mov lods sti js out int3 add fsubr imul dec push in lock sbbl nop cmp ret aas outsl idiv mov sub and push into out (bad) xchg xchg dec mov test (bad) shr xchg or xor gs aam les sti outsb stc in imul test scas push lret jecxz das xchg shrb push pop mov push lds or lods pop jb or das and mov mov xlat popl fist xor add mov into pop xchg mov pop cwtl or (bad) loope (bad) mov inc add out loope icebp sbb pop aas add cli pop mov iret or insl jae fs jae daa (bad) mov jp in mov lahf dec ja idivl fsubrp add push imul cmovno jle bound cli scas xchg sub (bad) mov jae adc pop or cwtl xchg sub mov cmp nop sub loope call popa (bad) das es xchg or cmp mov das adc xchg test fistl jne cli xchg out push inc clc loop cmp fwait enter rorl lret xlat cmp ret clc ficom mov call inc pop jp test push loope add and out out leave xchg fs inc push aam adc call cmpsb xor xor cmp stos cmpsb push cld jge mov jnp inc mov add lret push je bound out sbb xor sbbl mov enter sarl popf jecxz jmp cmp pop aaa imul jle pop dec fsubl inc adc xchg sbb scas int3 mov lcall xor mov out mov pop movsb popa mov cmp imul dec insl mov mul dec sbb int push push mov mov jno and mov sbb mov fiaddl aaa sbb decb shr pusha adc insb or sbb mov lock mov movsl xlat test xchg outsb lock into cmc push cmp aas out jns int xor popf in in mov fcomps gs aas add in cmp sub insb je jns fldl rorb jp or pop leave dec and out sub sub inc cmp mov cmp sbb (bad) xchg (bad) popa ss mov rcrb add jl sarl lahf xchg dec xlat in lods sbb lds mov cs ja jne lahf imul in fs shr data16 xor adc aam sub xchg dec inc jp aad popf outsl test pop das add xlat cli mov mov repz aaa out mov inc scas lods mov (bad) scas xchg sahf mov shrl (bad) lods xor adc call or addr16 jae cmp test cmp adc fwait sub pop and imul mov cmp imul adc outsl sub inc sub push xor or out push outsb lea jmp ss jne out mov mov icebp jo in loope popa push sub dec sbb xchg call orl mov sbb cmpsl push dec lods cmp in cwtl stos sub fistpll mov js loopne and test hlt ja mov cli cmpsl imul xchg test clc sub in push stos pop rcr mov add sahf xchg push jg shr rclb mov lret push stc pop in movsl dec push cld in movaps cmp jb jecxz mov imul aam and (bad) mov push sub jmp xchg jecxz mov sbb or add push fimull and xor sbb movsl ss dec pop xchg sub cmp loope mov enter outsb (bad) js lods push leave adc fnstsw sub dec scas jecxz mov pop loop push insb jl ljmp cli cmp inc push pop or scas pop mov (bad) sbb sbb pop xor fiadd (bad) arpl loop cmc xor (bad) jle arpl (bad) jl xchg pop add mov jns jle loopne fist lret dec push inc jg sbb ss shr adc outsb push cmpsb ret jg sub testl jbe data16 loop dec outsb and adc pushf dec outsl sub and sbb cmp ret sub loope sbb (bad) shrb cmp ss lret repnz jge clc movsl leave push push jae add faddl rorl sub movsl mov cmp lods push jle mov cmp pop jb test jmp xlat xor jb or jmp fcomps jecxz aas inc sbb (bad) and inc push sub bound repnz jp adc jbe,pn mov mov adc dec fbstp sbb shll repz add fwait cltd int3 sub and sbb add iret loope stos cmc inc loope pop lahf mov addr16 cmp pop pop jge xor fistpl and and jb mov int dec js cwtl movsl scas or jne sahf push cltd pop sbb dec imul inc rcrb xor jp mov inc loope pop out lds int3 je sbb repnz pop out rolb mov cli sahf movq jge in jmp xchg insl xchg aaa mov enter popf stc std jbe mov push dec add call mov mov sbb js or das fsubrl jns add adc arpl jae loopne cs outsl in mov aaa ret jl push adc sub mov xchg add dec push xor (bad) in stos and xchg in dec adc jne rolb dec fsub cld cmc testl mov dec int3 out mov fwait loop cmp jp dec imul arpl test insl (bad) nop dec sbb outsl inc das jg (bad) mov push xchg aad inc cli mov inc mov pop repz cli idiv arpl stos mov cmp push adc repz inc mov or pushf add xchg std out mov repnz lret dec push xchg dec push lret sahf inc leave inc xchg push push test and inc fs mov faddl dec mov or pop and mov icebp and xor pop xchg adc repz (bad) js mov or imul or sub adc iret ret mov pushf daa mov mov test sbb cmp repnz pop jl cmp (bad) lods mov sbb out or mov fs fstpl cmc add pusha pop sub (bad) repnz in mov adc mov lds mov cmp jmp xchg ds dec inc jne leave mov mov cs xor enter jo jp sub mov dec mov repnz in stc iret das inc push popf sub cmp ja (bad) mov push mov les mov outsl xchg and (bad) push mov mov adc jmp int push in imul xchg sti movsl lea mov pop dec push outsb cld jns inc aad (bad) and aam sbb mov ljmp fwait rolb cmp xchg mov xchg jb popf (bad) jle insb daa mov xor cmpsl xchg fnstcw xorb mov mov (bad) mov sub cmp push imul int3 in inc out adc push test lods xor mov inc inc mov movsb js xchg cmp add and cmp mov punpckldq jl jo mov lea sub leave mov cmc push call xchg mov hlt dec test fidivl xlat cld (bad) pushf (bad) or push mov je movsl cmp cli fwait int sbb jo addr16 popf ljmp decb (bad) loop push ja ret mov adc jo jno popf and test mov aas imul add jg mov jmp inc cwtl mov aam sbb in lahf xchg or imul cmpl aaa inc mov aaa cltd jle scas in cwtl outsl stos hlt mov repnz push testb xor pop xchg nop and (bad) jno lret out push loop and (bad) mov mov fs insb icebp flds mov mov cmp insl ss scas sti dec inc (bad) mov hlt ljmp imul aad pushf das gs bound outsb out jecxz movsl sbbl jecxz jb daa stc push fldl and nop imul sti vucomiss and xchg pop cmp adc jmp xchg mov push cmp lret aam jae je or cmp aad add sbb mov daa mov fwait adcb es jp daa das dec in in push lods lds test pop push push cmp add or clc push ds mov cwtl out mov adc sbb icebp outsb push arpl sbb outsl sti cmp popa mov mov (bad) fldenv lahf and pop es cmp mov outsb and scas sub (bad) (bad) adc popf sbb xor pop mov dec jnp and xchg leave insb ret je xor adc jae and shlb ffree (bad) pushf xor jle ret test (bad) xor cld inc test repz data16 xorl (bad) push adc out in or (bad) mov or in out mov movsl mov ss mov hlt and and std fwait cmpsl es pop scas scas add adc into lock cwtl pop pop and xlat mov mov lcall (bad) rcrb or mul xor xchg push lcall push inc xchg out xchg int cmpsl popa cmpsb data16 outsl imul fnop shrl fisttpll outsb dec mov xchg xor jo xchg lcall mov lcall xchg enter jnp mov inc adc mov push imul movsl lock loopne lds inc cmp std lcall pop popa aam enter or push dec lds repz pop xchg mov jp cmpsb lahf les scas insl xor lret add lret fyl2xp1 cmp lods dec mov sbb mov jbe xchg and mov ja les cltd repz cmp inc sbb lahf bnd scas gs mov jl popf hlt adc pop pop pop and sbb cs sub aam (bad) pop arpl ss repz imulb mov jecxz jl lods mov jge adc cwtl test jns fs push add mov mov dec aam mov adc fs (bad) lret lcall hlt jp dec adc cs lahf sbb bound or jecxz ror fs dec xlat clc adc pop mov orb lods sbb mov push stos xor mov adc movaps (bad) lahf xor arpl fstps je sbb scas inc jl push push adc cltd pop adc fdivp cmp pop inc movsb adc test mov std add jmp mov sub or insl testb in lock imul test dec mov mov mov push sahf rorl icebp dec push mov lock push cs cs mov xor outsl ret pop in nop push sbb or stos push (bad) repnz inc insl lock push stc jl stos dec repnz adc test inc mov movsl pop xchg cmp dec negb sub arpl push scas ret mov inc dec pop jmp cmpsb fs push adc jle movb pop lock inc pop aas mov outsl mov (bad) js int3 ljmp xchg jle scas fsubs sbb adc aam cli inc out ljmp mov push mov adc push in rcrb in scas push loopne dec mov test or (bad) xor aaa xor mov lret inc movsb test sbb sbb mov mov cld fsincos cmpsb js cmc jo xchg (bad) lret das nop loop push add cmp shll mov (bad) lods jnp dec into cmc mov jns inc and sti aas sub add push lret mov (bad) fmul dec adc xchg cmp mov push pop cmc push sub jmp cld bound jnp in inc test cmp ss lret imul ret inc mov syscall xor push stos jg js stos jle jmp faddl arpl das ret std pop sbb mov pop dec lds and ret popf clc rolb aad and pusha cli push sti cld xor (bad) shll in cmp xchg les fcmove ds dec pop mov int je imul mov cli adc mov loope jae mov mov lds sti insb sahf mov ficomp xlat inc push push (bad) xor sub jmp jg push xlat call jo ja adc jle dec xor arpl cli in popf out mov sti js jns mov aas fsubrl sub bound jbe push mov aam cmp mov pop (bad) push pusha mov jb (bad) jbe xor sub sub lret sbb xchg les mov dec and fmull xchg cli out xor push push jl es (bad) jg jge jae (bad) mov insb xor daa add lea leave mov test (bad) inc jo mov sub jp pop cs pop das push dec rclb sbb das nop sub leave lahf sbbb pop stc sbb popa lods sbb nop (bad) xor addr16 je sbb jne push jmp mov es or je jmp repz movsb ljmp xchg outsb jne push (bad) cmp jae lock repnz add orl inc xor das enter push xlat pop ljmp pop inc xchg inc out sbb (bad) mov leave pop adc push pop hlt sbb sti mov dec push jmp mov lea cmpsl lds loope lock popf test pop ret cmpsb jbe bound cmpsl push xchg pop jmp in out out jno pop rolb sub popf out or xor das das popa adc dec dec out cmpsb out jb adc insl leave cs jmp pop mov mov clc xor xchg mov pop iret dec out sahf ds inc mov inc jne or sti cli jne push or call add (bad) (bad) mov cld (bad) mov scas hlt leave in and out xorl faddl (bad) xchg lock sbb mov mov sahf or jbe loopne and scas test pop inc xchg jl popf cs xchg sarb addr16 dec sub data16 in fidivrl push mov pop andl dec mov stc pushf loope roll les cmpsb dec out add add cmp push pop rcll fstps cld jecxz ds jbe lcall (bad) lock cmpsl add add lds mov test push xchg push cmc adc add xchg xchg std fsubrs inc setbe faddp sti cmc push data16 xchg pop inc sti rcll gs int ja jb popf push clc (bad) sub lret mov push int xchg add lcall mov mov mov dec (bad) (bad) iret sbb mov out aaa sbb stos aam (bad) nop push fwait inc mov mov out push add mov push loopne cmc adc add fs jge es lods or lret mov or mov scas jne sbb ret pop add cmpsb and pop fnstsw in sbb dec cmpsl rcrl add shrb pop adc mov push stos sub into mov mov loop daa xor mov push add ret movsb fdivr addr16 dec lea cltd iret jno fadds pop cmc or fbstp cwtl mov (bad) xchg pop mov mov xor jnp loop cmp mov jbe clc push (bad) loopne and out js push cmp pmulhuw cmp pop movsl and xchg jp xor cs (bad) xor (bad) pop sarl mov stc push mov adc cld cmp lea aaa enter pop into arpl ja xchg xchg sbb jae dec mov bound repz aam and shl lds aaa xchg in out hlt or pop out int inc pop pop mov or jl popf dec and sbb bound pop mov iret mov adc cmp aas lock fnstenv ljmp cmp xchg adcb lock xchg jl jp push inc push jmp ds jle popl repnz lcall cmc shrb aam add dec inc mov fiadd shrl lss pushf inc xor add (bad) fwait jbe in lea and pop (bad) and data16 pusha scas jl or sub ficomp pop popa aad cmpsl hlt fstl dec sarl jle pop fs into ror lods aas mov sub or ljmp mov jmp rcr inc in fsubrl lcall shr shll (bad) jo lock fisub mov dec cmpsl lcall cwtl jmp sub mov mov ficompl or inc sarb or xor push sbb mov iret jno push cmp sbbl jb sub jecxz lods sahf call mov mov mov sbb gs xchg mov adc (bad) adc mov (bad) (bad) xor cmpsl pop jg jne push and frstor sub jl adc cs push (bad) mov jl push out iret hlt in dec add or push iret sbb js pop inc popa aam sbb mov pop push lds xchg sub pop push pop mov ret (bad) cwtl loope or sub mov inc fldenv mov xchg int3 inc mov fnstsw and icebp add mov sub popf cld rorb int jne push jne adc call mov in xlat xchg push pop aas lea mov mov jmp xchg push sub test ljmp lcall push sbb push xor inc es jo cmp loop xor push cmpsb dec fiaddl iret out mov cmp sub cltd mov jmp inc stc (bad) insb cli cmp ret cmpsl mov inc push mov jmp push in outsb mov sbb jmp int lahf inc jmp sub sub push and jecxz push sub negl shrl add inc insb addr16 sbb aas push lret inc xchg (bad) int sub (bad) xor mov mov int3 test addr16 pop inc sti sbb aaa in (bad) fs aam mov push lcall xlat and in pushf pop and aas mov and movsb and loopne and or jb xor stos pop ja add dec lods xchg scas xchg jg xchg js rcrb movsl xchg sbb mov cmp lret jne aas lods ss fistpll cmp cmp (bad) bound jo sahf shl lods sbb cmpsb or js inc (bad) sub lret insb xor cmpsb push sbb call stos cmp cwtl test mov loopne outsb leave jecxz sar push pop xor add repz repz push fs xchg sub inc scas lods scas lret fwait dec cmp cmc out sti out push push fwait xor loop xor push and and and int3 sub (bad) inc and rolb sarb mov or mov push jg pop mov sbb adc lret mov inc inc out ret inc or mov or push sbb jl push cmpsb (bad) fucom aam imul pusha xchg sub int3 jmp outsl (bad) loop imul cli out movsb je loop (bad) xor xchg lods cmpsl add sbb sbb mov push sub xlat jmp xor sbb inc (bad) and imul fcmovne fs mov push lods mov add xchg lret mov and lods add insb push mov sub jb (bad) leave cmp inc dec (bad) out add add jg pop add dec sti xor scas sti repz and jns mov cmp jne mov jbe (bad) repz or cmp arpl xchg mov test (bad) pop jp subb in cmp pusha jno out orb js xchg sahf xchg cld scas mov pusha inc ds and mov aas loop xchg ljmp das sbb lret cmp pop sahf test das imul mov rcl push lret popf mov cmc cltd xor sub les and loopne es loope add or dec (bad) lock loop sub mov out bound (bad) xor into sub je outsl pop mov mov jne mov sub inc mov roll (bad) fildl fmull int leave rolb mov lahf es test movsl outsb fstpl dec adc cmp or mov mov scas mov and popf jl sub popa mov popf cs mov gs lret jbe (bad) push ret sbb xchg sarb loope fsubl xchg mov xor mov mov mov mov push xchg loop (bad) loop pusha mov sub sbb sub pop inc mov mov rcl jge mov add imul jmp mov inc mov cmc push es hlt idivb pop (bad) loopne out jecxz xor jg scas mov xchg push mov rclb out inc jbe jo loop dec cmp sbb in push mov push mov cli aad lret cmpsl mov frstor jp dec out push test mov xor cmp adc sub aad lock push pop xchg mov jmp clc pop pop sbb or cs lds mov in nop and jo ja ds inc ds adc loopne (bad) mov cmc scas adc lods xor lods pop (bad) fisub cmp push int3 sahf and add jb outsb jae shlb cltd mov (bad) jl aam aaa jb sarl sbb or mov out je mov (bad) xor pop jno mov lret imul repnz lods sti outsl ja cs int das std insl int sub push scas fs push push aad push cld jge repz add mov lret jle test rcr and fsubl iret (bad) rcrb in imul fimul jecxz lret testb sub out imulb cltd xchg jmp ret xchg inc pushf inc xchg mov push jge outsb int3 mov cmpsl fisub aam xchg fisubr popa (bad) jmp loop sbb jmp rorl mov ds or nop mov cmp imul shlb lock dec bound (bad) shrb and cs cmp adc in pushf or jge mov jmp add (bad) idivl cmp xchg cmpsb xchg xor inc jo data16 dec (bad) fild int push stos adc js mov lcall sub adc lds mov adc lods loop pop mov inc loop nop dec xlat adc addr16 push insl mov dec out ja leave out jbe push pop cs inc or addr16 test out pop mov into lds sbb into in and xchg push sbb je loopne and cmp insl add xor stc jge push jp inc (bad) popf adc cltd and mov xlat jle fiadd shr jmp popf xchg rol mov lea mov pop mov pop push mov xor shlb jecxz lahf push jne mov or or or shll pop xchg out iret (bad) mov xchg xor xor add negl loop (bad) enter push fisttpl nop mov cmp mov ja movsb pop dec adc mov inc sub xor insb in sbb in and adc sub fdivs pop scas rol mov add mov xlat (bad) cmc cmpsl xor jae jbe pop daa add inc inc sub push in adc mov popf (bad) pop adc mov xor ds mov adc jne popf dec sub pop (bad) push jnp and jno repz jnp pop jo pushf mov or mov test push and jno rorl pop mov aas and sub or dec xchg inc cmpb xchg add sbb pop in dec mov mov mov (bad) push inc sbb ror add (bad) je dec aad push ljmp in addr16 pop sub jno xor aas xor fcomi lods lret hlt popf mov sub out std adc (bad) add xchg and jecxz or xor mov mov into scas jnp push bound xor add lcall and test movsl xor pop add push cli shlb mov js mov lods addb cmc in insb cld cli xchg fdivrs ret xchg xchg sub or lods pop push pop insb mov adc lods (bad) leave xor aam push clc dec (bad) sbb pop jnp fbld cmp mov adc (bad) sub rcrb inc movsb xchg fucomi ficompl loope mov add andl lcall cld inc shlb loope std mulb out jl (bad) outsl sub call loope jo mov pusha cs cmpsl ljmp sti lret jle int3 or xor jge test bound inc mov imul (bad) xchg enter pop xchg or shrl lcall imul cmp in subb dec cmp (bad) test mov mov test mov arpl scas dec xor imul scas insl and fnsave int cmp pop adc (bad) movsb xchg cmp dec std int jl pop xchg inc pop xchg frstor outsb (bad) (bad) push mov add mov or push (bad) lea aaa lahf xchg hlt push lcall push jge popf mov mov lea call mov int fs addb xchg fnstsw lahf or xchg push outsl (bad) cltd pusha (bad) hlt cmp sub pop mov adc scas mov negl dec (bad) ffree or (bad) dec sbb or and repnz sbb rcrb pop xor pop (bad) jle repnz sbb arpl mov pusha jne and insb je fnstsw jmp ss push sbbb sahf outsb and jo mov push ja mov add cli inc push pop int3 mov movsl loop mov add int or push outsb aad sahf mov lds mov out fisub insb dec gs mov out inc mov pop icebp in push fs lock sub popa (bad) adc popf cmpl lcall fistl pop aas iret (bad) enter mov ret popa shr (bad) (bad) sub ret das (bad) pop inc (bad) xor pop lahf xchg and jmp xor push sub fwait or inc (bad) dec push mov mov adc lret ret testb mov cmpsl xlat repz and in push int in xor jl jo test psubsw mov sar push jl push test mov mov outsb subl and sub push push add adc mov loopne pop js and mov or jo jp mov add sbb aaa cmc mov clc sbb dec fsts xchg lods xchg push and push mov pushf test lcall insl (bad) jne and pop mov (bad) mov jb dec push sub test repz es fnsave lret test inc pop es mov (bad) out mov out sub aam mov xor mov add out outsl je jb pushf dec cmp sub mov lods aaa jecxz xor pop lds repnz mov cmp sbb dec mov xor xchg jo and inc out lcall pop mov (bad) xchg mov jb clc jmp cld pop sbb xorl lods push push mov stos outsb dec lahf push xor mov out lret push jb dec imul or cmp mov inc inc cli addr16 cmpsl jmp adc inc icebp pop add daa push and inc out mov loope loope out dec cli sub add or add dec arpl xor ret ret jno mov adc mov stos add adc bound cs jg loopne (bad) pop stc pop aad ja push push mov es dec (bad) or pop fldcw imul sub sub add dec orb testl popa lea arpl lds mov jmp jg jns (bad) push mov jecxz inc mov mov and stos mov add sbb lret data16 imul call aas hlt aad pop es rolb loopne fwait push int push and add or mov cmp mov mov cmp push popa fmulp (bad) gs inc outsl sbb lods nop cld aaa xor mov xchg sbb in jb sahf mov scas int3 dec ja inc lds inc sti inc push (bad) sub in aad cmpsl mov jnp movsb sbb dec andb mov imul movsl cwtl or fs pop mov stos and std cs mov and in leave nop loopne clc dec mov imul rcl mov cmc xor xchg fdivr clc inc bnd mov adc mov (bad) mov sahf push inc stos and leave dec push pop and rcrb das pop or adc or xor jbe outsb xchg and mov mov mov test mov test xchg and clc decb inc inc push jo push inc xchg repnz sub lds xor cmp add jns (bad) xor xchg push es arpl lret sbb xor jmp push mov adcl decl push in test pop mov mov stos push jp rol inc sub or lret cmpsl in nop pop dec pop popa addr16 xchg imul dec frstor pop add and js xor add and inc imul push lds bound es pop fadds adc mov insl jo mov in cmp inc jmp aad aaa out mov or sub sbb adc mov inc cld xchg mov cld jbe xor cmp pop movsb enter mov xchg fcmove sbb jbe lret int3 lds lcall sbb cld stc into or pop mov out leave cmc mov mov adc lcall pushl pop outsb jle stos xor xchg jns push arpl jae xchg xlat adc lods or or mov mov pop xchg shrl pop ret divb outsb jp loop cmp lahf xchg push dec push sub mov jnp popa and jbe enter sbb stos adc xchg aaa inc push js and adc pop test out incl pop xchg xchg int3 add jns les adc sbb imull icebp popa out xchg (bad) mov mov cmpsl mov sub dec adc iret loopne mov lret leave adc aaa fadds in or cmp sub sub lock adc rorb cmp jg xchg stc scas aas ja sub mov fcoms scas mov in lea jp nop and pop icebp stos sbb xor sbb push mov (bad) xchg inc pop ds cmp xchg sub push cwtl adcl sbb je loop ficomp mov mov fsubrs or rolb add add leave int3 xor xor out xchg mov nop popf lcall push lock xchg xor mov sbb cmp lahf pop add dec das mov or xchg sbb xor xor fs mov adc push outsl add repz cmpb adcl mov je out jp fnstcw mov (bad) xchg pop loopne fisubrl adc and pop dec add fidivl xchg hlt cvtdq2ps lds sub pop cmp xor sbb sbb sub cmp or subl movsl jecxz xchg sbb and popf xchg add (bad) pop cld xor mov jb dec rorl fwait inc push cmpsl fisttp cmp pusha pop cmp lret inc mov cmpl mov aaa subl movsb jp stos out lea or cmp mov mov mov dec cmc lret xlat inc sbb add loop jl cmp mov jecxz or adc jae or loop lock (bad) in pop leave xchg fwait in lds or adc call (bad) add push inc cwtl adc dec adc cmp mov lea lcall cld inc jno push lea push dec ljmp lds das pop cmpsb or dec push sbb pushf (bad) jge in mov pop cld roll addr16 add cmp adc inc (bad) into mulb stos sbb jge (bad) cmp aad mov das push out cmpsl jle inc fidivrl jae cmp mov inc mov insl ljmp mov push gs call das dec inc in xchg hlt inc icebp jmp sub lea cmp std hlt arpl es push in scas sahf cli mov dec lea dec out ss stos call xchg push fs shlb pop xor out xchg orl push insl popf (bad) out std bound and fmull sub sub insl xchg movsl cmp lahf xchg das add stos and popf fmull das dec fmulp cmpsb negb dec ljmp jns and adc adc or and clc sub push dec sbb pop ret daa rol into outsb inc mov imul and add lret fimul push je ljmp out push xlat mov popa fistl lahf pop aaa pop pop pop push cmp repnz cmp jae je negb addr16 pop dec sbb dec aam xor je daa xchg out mov pop and fnstsw ret shl loope pop xor hlt mov daa cmpb shrb xchg imul fwait fwait ret movsb mov rorb lret in je push incb mov call or hlt es inc fsubs mov cmpsl (bad) icebp jmp pusha mov jno rcrl shlb inc push push and or inc aad (bad) je xchg cld stos push push in pop in mov sbb cmp call xchg sub jmp fistpll (bad) ds fs je xlat pop popa outsb pop in rorb iret jmp jg scas xchg jle xor cmc mov sti mov mov int3 inc cmp push mov lods sub popf jmp mov adc mov or aam outsb mov mov sti cwtl or cltd push dec aaa cmp gs (bad) and or pop cmp add pop dec push (bad) into inc push and cmpsl ljmp rclb loopne (bad) push add cmp aad pop es inc push int movsl mov or add aaa (bad) mov repnz add mov and cmc test daa repz shrl rorb xor mov add cmp pop (bad) mov icebp popa test or cmp int and dec adc mov and cld adc into das lea sub and inc cmp imul fdivs adc push push scas and test pop int push cmc adc iret fs and dec inc cltd cmp dec jbe lods fs sbb popa int push mov adc pop shrb testl paddsb cmp sbb pop pop adc pop sub dec cmp insb mov cmp add pop dec xchg movb dec mov arpl mov lods sub inc (bad) movsl mov or (bad) cmp push jns enter xchg in sahf jno clc jmp push es int3 add cwtl cmp add mov test push push rcll orb mov popl lds mov jae arpl adc out xor punpckhbw adc sbb pop (bad) int3 inc daa stos sbb push cmp jns fiadd dec sbb data16 dec adc jns and or movsb test mov mov dec pop cmp fcomps xor loope xor pop nop sub enter cmc sub inc les jb adc inc js mov cmpsl movsl (bad) mov pop jne adc nop pop lea mov and call cmc mov xor test xchg es cmp push leave leave pop jns add and fwait notb pop scas data16 push (bad) pop test fwait insb pop pop popa xchg lods cmc mov mov fisttpl jne xor mov inc andl xchg jnp sbb fsubrl adc cmc in push push outsb pop xor in cwtl pusha insb mov sbb stc adc jl cmp aaa cs mov int aas insb ljmp pop mov leave fldt adc jne inc scas mov cld push int3 jno inc mov mov ss inc or into in xor xlat mov adc mov test ss pop je scas test (bad) mov add into loopne xor pop jp fisttp push jb dec aaa mov inc inc sbb lods mov fucomip adc les inc scas xchg das movsb ss lret (bad) xor mov mov sbb pushf (bad) in movsl fidiv pop test pop push cmp and popf mov and xchg inc push add pop jae fcmovu lea pop mov aad cmc jae js aas xor roll outsl rcl loopne xchg inc xchg dec xchg fstl jge jae lds rolb stos test mov adc sahf cmpb push fcmovnb xchg mov das jo add add jbe or inc fmuls jns jne lret add lods xchg mov jo or leave push jo sbb iret dec xor push or ss and cmp and call or jmp xor push in leave lods pop pop cli in cs inc enter shlb test (bad) fadds repz xor xchg mov dec rcrl inc add scas adc mov xor push sbb jb sbb or fistpl pop fdivrs and test mov jmp add orl sbb cld icebp push bound or stos push aaa jp scas mov test cmpsb lods inc jecxz push xchg mov mov jb sahf adc int3 and fisttp push mov out (bad) pop lock and mov add cmpsl (bad) clc popa sets cli push pop andl int3 daa xchg fidiv pusha inc cmp out (bad) cwtl sahf adc fdiv cld mov mov cmp or jne mov push (bad) (bad) call sti jno mov sub fst inc clc fbld mov iret das movsb or jns dec ror lahf mov fs fcomip xor pusha ror mov rorb stos int test add or mov dec scas mov (bad) mov xor jae cmc fldl sub int3 push xchg mov ret xchg cmp stos out lret nop adc into iret xchg cwtl lret mov jle inc fwait mov mov ss std pop mov fucomip in cmp stos lock in dec and mov and out xchg xor fldt sbb into push pop xor movsb (bad) xor mov adc cmp cmp add push adc xchg stc pop adc cmp adcb pop sbb mov pop pop xchg pop jae mov rorl mov mull (bad) sub mov into pop pop and cmp (bad) repnz pop hlt push aad mov push pop setp lcall std inc fdivs test xchg sbb movsl push ret dec cmp adc rcl imul push cmp in fidivl mov push (bad) aam das in (bad) push nop mov dec (bad) and add or sahf mov out pop sub psrlq ja daa bound mov fldl push ficompl push rorl in push sbb xchg in in xchg jp sub jg pop pop insl insb adc cmp dec sti xchg push in loope push jge lds in push scas and loop mov js out (bad) cltd inc (bad) cld ret inc out (bad) adc shll cwtl out pusha jl xor loop sbb fiadd jmp in pop xchg push adc or loop dec pop mov mov pop sub or inc cmp mov out pop pop push mov fcompl fistpl sbb or pop scas shlb mov lods jne lea mov test lods xor add and push insl nop imul in loop xchg nop lahf lods pushf fcmove aas jne leave inc jge cmc and dec fadds outsl dec faddp jl inc aas dec cld fwait mov mov pop sarl (bad) mov push mov cmc cmp sbb mov fdivs idivl cld add fsub adc movl hlt stos mov test xchg cmp or xor les sbb shl addr16 mov pusha inc loop popf jmp fildll lods notb pop mov xor ja inc test in xor and cli and lods xchg lcall dec in arpl xchg jb sbb pop popw cmp into pop cmc mov cmpsl das jo push mov movsb loop clc pop scas movsl clc ljmp call sub les into sti fucomip inc loope sub aam cmp or sbbl pop xchg mov popf xchg dec jge cld (bad) test mov xchg sbb ljmp pushl inc pop js int3 mov mov aad add js lock adc or push mov mov dec scas out lds jnp stos lea xchg push mov mov stc std in std (bad) scas mov (bad) xchg imul and xchg adc clc icebp test (bad) pop shr out dec dec push (bad) mov loopne (bad) je nop cltd (bad) into rorl sbb insb shl push stc xor inc inc push not lds ds add (bad) (bad) sbb jmp imul lahf jge jg and ds xor les cmp mov nop (bad) push xlat add xchg xlat sub mov cmp add mov dec lock xchg mov push (bad) mov scas ret aas pop dec dec insb mov mov addr16 add ja pop xchg sub mov popa inc and inc gs mov mov push arpl xchg inc mov cmpsl repz mov sarl (bad) jg aaa subl jo sti mov aaa or and popa stos jge addr16 dec and sbb mov dec push nop notb aas loop cltd inc addb (bad) xor test push jg es stos (bad) xchg mov and mov popf mov jl popf mov push fiaddl movsb mov pop cmpsb push stos pushf mov popf mov add sub xor jbe cld loopne mov ljmp loopne push cmp inc repz or jl push mov mov lcall dec add push xchg and jl sbb cmpsl and leave mov dec lcall aad lods push aam daa mov mov iret xor or es jmp fimul xor aam (bad) mov je xor ljmp aad mov mov mov cmpsl jo push dec mov enter and aad pushf imul loop lds sbb leave ss std xchg adc push xchg pop pop cmp xchg push mov mov js mov cltd xchg xchg fild cmpl push daa int3 push dec fldl iret xor sbb push stc xchg movsl push insl (bad) jmp push jo mov jle sub dec (bad) out xchg out (bad) imull popa inc cltd sub jnp int3 popf sub (bad) outsb push stc and (bad) fchs pop and in inc in jl mov cmp add inc pop add fs mov or pusha jb cmp dec lods dec (bad) ja sbb jb lret ljmp mov inc (bad) dec ret dec mov scas insl xchg push fdivrl sarl lret cmp pop and in dec movsl fs repz pop fcompl ja loop sub test mov lods dec dec dec jae jo jne mov vcvtdq2ps or and push sti test push cmc gs inc stc mov in cwtl repnz inc sahf sbb in jmp xchg lods xchg lea xor movsb mov int jo imul xchg adc stc add fimul shrb mov dec push scas scas adc sbb fsubs aaa in mov cmp sub mov jne or icebp pop js icebp lahf stos ss fdivrs int3 in push dec mov int3 inc or dec cmpsb test ja jmp mov lahf test xchg sbb mov jb sub xor lret ja sub sub out cwtl sub out aam mov aaa lret jnp idiv pop sahf add aas rclb outsb mov xor adc or adc cmp outsl insb test inc subl fmul or mov scas scas adc ds xchg sbb daa cmp inc pop xor data16 mov push or lret inc xchg (bad) and (bad) cli es dec mov xchg (bad) bound lea and adc or adc push test push bnd insl xor fs pushf test jp sub (bad) outsb add push sbb rol js jne or bound dec inc add stc fs pop inc mov and xlat add mov rcll imull loopne pusha insl (bad) das pop inc cmp push fcmovu mov in out mov rcrl scas fs cmpsb mov (bad) jmp ja fdivrs mov mov shll sub fs cld jle jmp mov add mov mov mov imul daa dec mov or ss fmul mov (bad) xor mov fcoml insl insb or dec push out scas dec daa (bad) or outsb pop icebp jle cmp push enter and aaa push mov dec mov and test xchg lds mov loopne out xorl clc jecxz nop (bad) sbb int sbb dec sub xor inc and adc aas out cmp (bad) (bad) mov iret fsubl or mov pop js movsb xor insb cwtl mov andnps inc lret mov inc jo das inc or jle jg aad xchg and push ret cmp add jo cmpb sbb int pop xchg repnz fldenv mov call lahf mov cmp fist xchg inc into out fstl sub mov xchg popf js mov adc push pop pusha leave out add mov (bad) (bad) mov push jmp adc rcll lret int call lahf int3 jl fdivs cmp xchg or mov (bad) lret outsl mov jne xorb mov mov xlat jbe in maxps (bad) jo or push jae leave dec xlat jne xchg cmp mov pusha cli pop lea gs add jg leave lods push and popf push jnp mov nop sti adc or push (bad) cld rcl imul js inc and dec aas inc movsb out and cmp test xchg and mov stc xlat rcl (bad) mov jmp xchg add stos out xchg jbe out in addr16 jg jb rcll push cmp into jg (bad) xchg xchg daa js fisub stos jle lcall sar imul mov cltd xchg xchg leave sarl in cmc fild xchg fisttp or shlb in jne shrb inc ja scas bound or cld hlt push sarl (bad) loope dec sbbl movsb pop and clc mov xchg cld inc mov mov stos out popf mov mulb stos fisttp cmp aad sbb pop lret sub loopne sahf xchg push pop pop add out pop orl dec stos aam adc leave (bad) scas and dec cmp rolb orl pushf dec sub movsb mov pop cmp inc add bound jge jge call ror das or push outsl fistl inc add dec (bad) xchg test test fs and dec cmpsb xor sarl inc adc push out scas push sbb pop (bad) mov adc mov sub in add cmpl pusha mov clc (bad) (bad) out int3 test dec or pop sub es sub sbb icebp or adc jmp and mov dec add pop test notl cmovae in lcall gs call fisttpll cmc aad xchg add xchg imul mov fnstcw outsl pop inc add jecxz pop test cmp add loope fdivrs xor mov xchg int pop je mov out jmp imul pop notb jl or mov es pop sub sbb aaa in mov mov pop adc scas or push bound push mov jp and push inc arpl mov outsb adc fsubrs jae mov push stos leave mov rcll jl in pop mov stc mov lds icebp mov xlat inc sub or fsub lret repnz in add pop sbb outsb inc sbb stos pushf or or test ds jle ja,pt (bad) es inc xor dec or jno lock mov jp mov and insl xchg stos pop lcall mov repz repz pop jp push (bad) addr16 push mov (bad) jbe add stos push lret mov fdiv sbb (bad) pop sub mov mov push enter fdivrs mov in push xchg and cmp add xor pop mov mov inc rcll push out add (bad) fisttpl sti lret add or lahf je lcall jne inc jecxz xor or es sbb jmp inc test dec lcall das or jle movsl or insb imul frstor test push push xchg je lods xor and push or dec pop fild (bad) shrl jb adc sub adc (bad) jmp cli mov mov (bad) push jno xchg or adc pop mov push orb dec sbbb loope inc add shl adc jbe imul call or arpl and mov aas dec into stos pop jge pop (bad) scas jns loopne mov imul mov sbb mov add sahf push cmp lds adc and gs jne and mov pushf and sbb mov xchg add inc add bound add ret jno lcall xchg shrl cmp cmc addl cmpsb stos stos sbb insb pop bound lds pop inc push xlat mov insb push xchg stos jnp cmpl pop stos pop (bad) mov push sbb pop js inc and sbb sbb push ficom xor mull fmul mov pusha xchg aaa out dec cmp (bad) or add xlat stc aas cmpsl es mov push add and fwait xor mov and les sub fdiv xchg (bad) jne hlt clc jp cmpsl sbbl or sub cld adc push test mov cli icebp es mov xchg inc data16 (bad) hlt pop cwtl cld sub (bad) mov xchg call div and sub call jl xor test mov mov repz pusha out mov sub fcoml imul pop mov cmp (bad) xchg xor push add or push ja mov mov cmp jno add mov int rcr sbb push or or es sub rolb fcmovnbe and loop std icebp mov cmp ljmp data16 outsb cmc (bad) out (bad) stos rclb sti jge mov (bad) ja pop inc xor insl insl fiaddl nop xor pop outsl inc sahf push pop (bad) adc xchg mov js mov xchg jmp sub fimul push pushf lods inc xor and add (bad) pusha lods rcrw adc stos sbb leave jo xchg out mov rorb (bad) push lds popa mov loopne pop nop sbb insl loop in repnz lahf fsubr sub push xchg dec cwtl cs push outsb cwtl shrl ficoml out dec scas test jecxz pop jg sub push or scas hlt mov pop sbb dec fldl push dec iret jns leave jno loope adc sbb jns cli cwtl cmp out mov aad je push lahf pop jb dec pop rcl push dec adc (bad) adc stos and pusha inc les aaa stc add repz and in lock sbb push and pop xchg stc pop test push shrb int push mov shll mov xchg das cmpsl adc movsl jl lahf andl imull test mov int3 push ret push xchg sub cli icebp add in aaa ret daa mov (bad) jl jae mov dec sub xchg in call add xchg mov addb xor xchg cltd inc seta jno bnd nop and dec cmpsl mov mov in (bad) in ja lds inc or push das es lock mov jbe pop and (bad) popa cmp sub add xchg pop sbb cld ret push inc push mov (bad) out xchg stos pop adc pop jmp add mov test push stc mov xor mov insl mov je or ret or xlat sbb sbb pop iret in ret fiadd mov mov push pop sar mov mov push movsl push addr16 cmp and jnp,pt adc dec repz dec pusha lret sbb jge jne add lea shlb addr16 xchg jmp (bad) jnp push inc mov xchg dec lea dec cmp pop stc pusha in enter push pop out adc pop add adc out (bad) cmpsl mov mov mov out pop scas vmread fdivr aaa ficoml cmp rcrl xor pop adc jnp test rol clc dec pop ss push pop push xor mov mov (bad) addb fiadd adc in jns pop adc jb jle pusha repnz mov push shlb add pop (bad) adc push lods xlat je dec or rcrb push dec push adcl jp test inc dec cmp push or fsubp dec clc fimul jne dec mov push rcrl movsl mov jp cli repz mov cld cli fnstcw cmp adc movsb mov and push mov mov sub stos gs fdivl push adc test add jno cwtl sub fidivl in inc mov jl and add push mov inc sub rcrl dec inc rol loope icebp or jp xor lcall icebp sbb std jbe mov bound cmp push xchg push rorl pop lds xor dec or jnp shrb mov xor neg cmp push inc add jmp sbb add fmull mov xor cwtl sti sbb sub mov call xlat xlat mov jl out push pop add jno lds xor push dec out cli ret mov je test in and inc (bad) (bad) xor mov cmp fucomi mov mov fdivs loopne rolb pusha iret lea lock in test add mov xchg jmp scas dec addl lods pop jl out pop outsl popf cmp mov jp loop jle ror pop dec hlt push js dec push dec jl repnz cmpsl mov sahf xchg arpl imul fs xor inc pop div jae inc inc (bad) dec adc dec push mov add popf mov or enter in icebp mov pop int3 arpl dec xchg inc and ret addl and xor push mov popf movsl in out mov sub push ljmp or mov (bad) insl inc in pop (bad) arpl mov sub and and fidivr int jg cmc lods (bad) jo call rorl out xchg pop punpcklbw push repz push dec or push sub lea mov sbb das dec push in shufps or xor mov lret push fstps imul out repnz jbe stc inc les sti dec or mov dec hlt into or outsl mov ja insb and mov mov and loop outsb out dec or ja nop push lahf push pop sub (bad) (bad) shrb push test or cmp aaa imul pushf loopne mov in int3 dec add dec sbbl xchg pop dec sti jns xchg jae lahf xor push stc and and pop mov ret cmpsl test dec scas mov mov (bad) push insl iret cltd mov sbb not mov ret and sbbl inc mov push push dec cmp ret adc mov cmp and cwtl pusha mov jo mov enter out push shlb call dec bound xorb inc lods xor sbb sbb div fnsave sbb mov mov mull cmp cmc pop clc fnstsw and rcrl jecxz nop inc stos gs int3 push cwtl push nop mov repnz mov jmp dec jge enter mov int cmpsl ljmp lret lcall cmpsb push cmpsb cmp mov mov stc test sbb mov mov fistpll scas aam sbb (bad) inc jne adc or mov mov add ja (bad) pop fcompl cmp lods push pop (bad) in cmp lret adc adc dec dec jae stc (bad) mov imul mov loope inc (bad) addr16 or lahf ud1 jl add mov mov pop adc pop hlt jg cmc (bad) sub jmp xor scas push xor mov cld aaa and (bad) mov lea inc mov sub jp add roll sub stos int3 loopne cmpsl jge push add mov test or cld adc in add mov aam or fstpl iret test jne stos xchg mov xchg out ljmp pop movsb pop lahf pop mov loop imull test loop (bad) gs xor add push addr16 and push jmp jge lods cmp jle scas pop outsl jle mov add cli ror pop (bad) shrb pop (bad) cli outsb cmp ja push leave dec clc fldt dec mov cmp xchg push cmp pop pop jge scas sbb stos (bad) mov pop add dec or lock stc and (bad) mov push fistp cli push aas dec jecxz arpl loope mov cld xchg fcomi jae inc and mov lods inc call mov loopne cmp sub ja das dec rcrl rorb pavgw sbb mov mov mov roll mov sbb pop jno mov mov mov push ja fcomip ret xchg jbe adc push inc sub xor loopne int ljmp out mov jp cmpsl xor or add rcrl mov std add cld xor insl out test movsb and mov xchg (bad) sti cmp lret loopne mov addr16 outsb adc pop or fmuls pop lds cmp jl mov mov ret imul and mov jnp aas in sub aam jge push cmpsl jp xor xor xchg sub ljmp test xor ss fisttp xchg xchg lret fnsave ret das aam mov out dec dec dec aas push (bad) fsubs mov inc or loope ds (bad) jo dec lret push fdivs adc iret aaa lds xchg mov fcmovu js mov xor movb xor or sub sti out mov xchg cli iret jne sahf lcall mov call bound dec jne jle or or xchg push sub test push mov insl movsl cltd stos and xor ljmp push test xchg add sub jge mov inc fs mov pop outsl out out insl and pushf mov aas roll inc and loope sub jg jmp push inc inc lods xchg pop and push jmp add adc mov push aad mov loope lock cltd mov sbbb mov mov push xchg aaa cmp jb push in hlt and in (bad) ja imulb mov dec pop push cwtl push dec (bad) mull xor push je cmpsl rorl jmp xchg dec bound mov inc jno (bad) das pop pop cmpsb jg das adc sahf mov or and stc les ret push lds sbb iret mov in pop xor cmp or mov push out mov pop insl jnp dec call xchg ljmp lea pop pop out and inc jae addr16 fisttpll xor mov pop jecxz push add (bad) xchg cld icebp mov add out push xchg fnstsw ret test mov mov or pop mov loop dec je lret sbb mov aas test arpl jb outsb ss data16 sti inc popf xor nop fdivs movsb (bad) mov sbb or inc jo fidiv xchg xor in mov push push xchg mov out jp jg stos sbb aad push decb inc push add sbb mov push sarb inc cmp mov stos cmpsl hlt repnz fiadd es sahf pop rcrl fwait xchg and jno pop (bad) xchg dec sbb inc xchg push pusha lock movsb (bad) (bad) lods inc lock inc les jns pop push xchg mov mov mov addr16 cmp mov scas adcl xlat (bad) lods mov add mov lds inc add lret (bad) mov movsl dec in push cmp mov test mov or dec inc scas loopne (bad) cmp lcall mov movsl cs sub sti out in sbbl jl imul xchg xchg dec mov cmp mov aad ficompl test pushf lods inc lds incl xor and jne inc (bad) jle lcall xchg cwtl adc xchg insl sub xor xor mov (bad) inc jne push dec in les inc rolb lods adc pop addr16 mov inc out push pushf jge pushf lret or divl dec jg sahf aam jae call test or mov je push (bad) add aaa addr16 (bad) pop sti mov pop hlt je mov arpl cmp test lea repnz mov add rcr jnp xchg dec cmpsb imul imul pop add in fsubrl mov out and out jb dec sbb sbb outsb mov pop xchg aaa lods xchg mov scas cwtl lods cmpsb add outsb (bad) and xchg inc or sub jecxz nop sbb push in (bad) xchg mov xchg adc (bad) pop fstpt call mov pop push xchg mov dec lahf sub cmpb loope cmpsl mov jb xor lods (bad) dec inc xlat mov loopne fisubr mov repz xor or (bad) scas mov push stos add out rol test stos ljmp adc stos adc shrl cli scas in mov lret pop movsb aaa pop push lock sub lret fwait cwtl fisubrl fistpll test pop mov push xchg pushf dec jno fcmovnbe insl sbb inc in inc movsb add sub mov popf xchg in mov fistpll stos lcall dec mov jg cs mov sahf fsubs imul outsl into popl add ja outsb jge mov test and popf inc stos nop xor ret fstpt dec int3 jg sub lret dec add or sbb (bad) xor and ljmp xor xor push adc xlat pusha das cmp addr16 mov int addr16 rorb rcrb cmc call and nop pushf lods xor shll (bad) cmc ret stos stc xor subb sub movsb fldt cltd repz dec xor jg mov mov shrl std ficomp insb mov cli ret mov mov stos and mov jp in xor orl mov fstpt sbbl adc adc pop sahf lret out arpl cld adc int3 lds inc push and dec fnstsw in out test stc fbld push and adc insb mov sbb xor or stos movsb sbb push and (bad) in jle lods aam out jp and push enter inc (bad) cs inc lret mov enter xlat pmaxsw enter (bad) fiaddl mov sub (bad) scas addr16 add cmpsb int insb test add stc mov in dec orb rcl jne lret xchg loopne xchg ja enter call xchg decb in scas sbb lea mov cs push mov popf insb jmp add sbb repnz push push adc stos arpl call push inc sti pop or mov pop out cmpsl pop push in es push movsb mov inc movups mov loop outsb aaa jno add pop push inc push pop rolb dec push lods shrb and cmp cmp imul jns ret xchg je data16 in icebp sub in cmp int push (bad) movsb mov pop push mov aaa aas fs stc pop mov fcompl int jg (bad) mov jle fldt dec pop stos dec mov fcomi cmpsb icebp lods push das jo clc add ret xor in fldcw in dec cmp addl icebp inc dec into sub fwait into test jg clc cmp xor xor pop fstpl repnz adc dec das mov repz sbb sbb fcomps aas lea sub and add add sbbl (bad) roll jb pop mov mov jo cmp pop jecxz jne jecxz and xchg cmp cwtl test xor jae ja and or sbb add xor xor rcll mov rorb out inc jnp fidivr lcall jns xorb cmpsb mov scas aam jmp jae inc fcomps or mov test cmp sbbl jo or xor int dec inc bound sub jp xchg pop sub pop int3 mov sub lret push fwait cs mov mov dec lahf rcrl (bad) cmc dec (bad) xchg sbb repnz stos out mov add mov addl test fwait (bad) fadds cld pop arpl jg jb push mov push icebp mov xor lahf and lods inc mov lock xchg ficompl mov mov xchg fidivl pusha imul jns mov cmp lcall push lret dec sbb add push pushf in popa subl xchg imul dec and jae ficoml (bad) jno push mov sub fidiv in or das add mov divl mov test jecxz sub inc lods mov sbb inc arpl fdivrs or mov (bad) in (bad) mov cmpsl in add dec dec mov inc sub ret loope movsl aam sti arpl insl dec popf lds adc cwtl inc sub adc jecxz lea repnz sub lds fidivr adc jmp sub pusha jecxz and ljmp imul cmp add es mov add cmc neg ss je daa scas es sbb lock outsl sub mov popf xor pushf jne pop mov or scas in dec scas jmp inc adc insl jl js pop mov in lret lret xchg lahf movsb pop mov not imul xchg cmp or scas jge xor (bad) loopnew inc (bad) jnp lods and jg jb out test pop cmp jecxz aas (bad) test jecxz pop mov jmp jno (bad) aad int nop xchg jno or je inc lret inc cli data16 les mov mov xchg test insb lds mov cmpsb pop outsl push aas ljmp mov mov (bad) dec (bad) cli fld hlt xchg pop or xor data16 enter mov mov ret (bad) fdivrs out stos sub and jecxz (bad) jnp ret movmskps int mov dec arpl jl pop mov clc and dec push adc adc call mov mov cmpsl scas lods mov cli jl adc pop pop das orl call pop cmc or aam mov push jo mov push sarb (bad) inc js cltd stc rcl ret add add mov hlt arpl jg jg mov inc dec rclb and cmp jns add xor jp jno and pop and jae xchg lcall out xchg js andl enter ja mov test ret (bad) jp push aas movsb bound pusha insl lods scas in mov xor ds pop and push dec pop push xor je repz mov icebp adc aas ljmp into aaa cmp mov (bad) cmp aas push mov enter popf or daa pop leave (bad) push mov xlat ret inc std dec adc mov mov out mov dec xchg rcrb mov (bad) test xor xchg push push ljmp and out xchg sar int3 test xchg notl adc dec lahf adc outsb xor fxch pusha pop and xchg adc movsl push lds sbb ds in dec insl sarl mov mov subl and push stos ljmp lret std xor cmc mov mov and xor pop movsb fcoms sbb (bad) push sahf cmp (bad) out cmpsb sub stos mov or sub xchg mov add dec sarl ja jo xor shlb sarl fisub int3 jo dec or xchg leave and test in sbb fsubs in rorb pushf jmp call inc pop or (bad) xchg push cmp jl push jnp pop jp cmp xchg fsub xor test sbb fstp jmp in inc and sbb aam addr16 mov mov fisubr push xchg (bad) push fstpt stos pushf add or rcl sub jecxz push lds jle sbb jg mov sub mov mov stc and push cwtl mov sti in mov push inc fucom (bad) cli and dec mov ljmp test iret test pop (bad) fldt sbbl or add sub in cltd mov imul mov adcl cmpsl sbb add jg push adcb shr sbb add mov jmp or jecxz test mov jo jge mov jo mov (bad) mov mov mov loop jge and adc xchg out mov mov subb lock add adc leave or cmp dec gs xchg (bad) mov sub lret sbb stos push fimul and loope or stos pop pop lea pop pop push in mov inc lea insl adc xchg jae cmc inc xchg ret lock adc incb mov pop ja cli push jmp nop (bad) mov aam (bad) mov mov fildll mov daa xor imul iret adc push mov les cwtl rcrb jl repz lock mov mov ret es nop cld sub aam addr16 test je or ret and add jo pop ja shrl or subl je fisubl fmul jo or adc lret push ja or push sub mov mov cli xor lret cmp sub daa aad pusha imul mov pusha in pop cmp sti mov pop dec xchg cmpl and and nop rclb inc fcmovb pushf imul aas or enter popf adc sbb sub arpl and test icebp dec mov adc inc pop cmp pop jb stos xchg mov stos das popf movsl stc push push mov xchg fild dec cltd pop adc push (bad) push cmp je jnp cmc pop mov mov stos mov cs fwait and xor call arpl fwait xchg xlat jns out (bad) imul decl add test enter jmp dec jmp xor lahf xchg xchg mov jo sbb sbbl inc popf (bad) xor lock int3 in or pusha je insl dec adcl out jmp enter add decl stos cmc push xor movsb insb mov dec cmpsl xlat addr16 outsl mov add mov adc sbb xor mov es ficompl adc sub sti rcr fcmove mov dec iret mov mov push adc std jg imul inc mov mov and xchg clc in xor xor sub fisttp or or sub xchg dec in xchg daa (bad) cmp pop jg test pop (bad) push in enter push cmpsb ss out add mov jne xchg jge inc and pusha xchg add inc lahf pop loopne or sti aad push pusha lret pop xchg add mov xor dec push and sbb leave mov xor adc testb fimull and fdivr inc inc pop inc bound inc adc xor sbb es jmp sbb ss sub jecxz cli sbb repnz (bad) aad bound mov mov jp in add mov push jno xor mov sub mov rorb mov into into fs imul (bad) push dec sbb mov aad add adcl fwait sub jns fisubr push pop jne rol inc sbb fcmovu fcompl mov fdivl out leave jb test add mov sbbb loopne mov jg test in mov mov push and sbb int3 shl and mov mov sbb std mov call inc push or mov cmpsb inc or dec scas cli cmpsl repnz aad and mov sbb into (bad) iret mov loope or mov mov mov (bad) clc in pop jl or push and repz shr cltd xor xchg roll jbe pop das leave adc (bad) mov ret lcall adc and es loopne adc pop data16 outsl xor add add ljmp sbb adc cmp ja lock jbe outsl sbb movsl dec jp mov jbe cmp adc jge xchg xchg mov repz negl inc (bad) dec adc test mov (bad) imul insb ficoml out xchg mov scas inc or rorb xchg nop pop pop inc push add mov pop sub mov (bad) lods push pop jg out jmp adc ds lock sbb xor imul out fstl in (bad) (bad) fucomip add lret mov loope push jmp ja jnp fidivr stos clc lock jge js cwtl inc mov cld mov mov in pop fwait out sbb jno ljmp adc xor add cmp sbb loope repz fmulp scas lds (bad) enter pop pop mov rcr or out mov cli int3 lret sbb xchg jmp pop icebp pusha mov mov or das push popf dec jg ljmp fcoml mov dec xor dec cs and lods xchg push addr16 xor lods dec sysret adc jno fisubr jae xchg lods inc xchg ret (bad) cmp mov nop ret mov sub sbb mov jb out and xchg sahf xacquire push mov repz push mov (bad) add jae pop or add dec sub and jno pop dec inc aas outsl push add jp xchg inc mov out rolb and cld add stos sbb ljmp int jp aad xchg les inc das out jmp jg mov (bad) jmp cwtl das test fs inc in lock adc mov inc lahf pop out and rorb or adc jmp sub adc pop or push in dec pop mov ficomp mov or aam jl sbb mov mov call pop add mov sub cmp ljmp daa jae ret mov mov or aad mov xchg test stos jbe fmuls scas or aas push xchg popa pop fdivrs movmskps cmp inc sar or fcom xor hlt vcvtsd2si cmp push cmp rcrl mov int3 iret cld push xor mov mov in pop sub add sbb sbb xor xchg push jo xchg setnp nop sbb pop lods lods inc das insl outsb xor (bad) out (bad) ljmp aad out (bad) cmc jb scas jl ret cmc movsl xchg js hlt and lds or inc pushf pop pop sub pop pop adc mov or mov sub fildl andl jle xchg mov (bad) fsubp rcl fimul push les adc in ror adc sub or jge cltd movsl imul popa in pop dec adc push sub and pop and xchg test fwait dec test lods ret lret sbb int fdivrs pop stos and and mov sub xor push movsl rorb decb loopne sbb xor push lahf mov ret dec shl ror cld sahf pop scas xor adc das in xchg scas out mov cmc loope das lcall pop push je das push out repnz pop cmp jl adc mov stos shll cmp add int3 xchg xor les sub fildll loopne (bad) mov fwait lret mov cmp xchg adc or movsl cld out cmp mov pop lret adc jbe rcr jbe or xchg movl xchg mov test push icebp mov sahf mov imul inc and mov pop fsubs arpl or sbb jmp mov cld movsl adc mov in clc sbb cmp xchg mov setp mov add add push fnsave cld insb mov andl xlat std lret fsubr mov aaa mov mov pop lahf pusha adc xor xchg movsl sbb sbb aas test xor decl test jns dec jnp or mov mov push inc push lods pop test jno adc jns faddp ja nop add hlt adc insl mov mov inc ja mov (bad) (bad) repnz js imul shl sub loop adc rolb pop push hlt xchg cwtl out ljmp movb pusha jnp mov gs rclb loope js arpl xchg fdivs inc jecxz mov std repz aaa sarl es push dec xchg hlt mov xchg mov jecxz jge cwtl test jne push mov in mov decl pop loope dec clc or mov icebp add sbb outsl in pop dec jl out jo xor xor subl in (bad) xor add adc scas xchg (bad) fisttpll stos ret test adc lods out add out push mov ds mov pop incl clc cmp shrb jg xchg je jge fwait adc cmp mov int sbb pop cwtl xlat repz fisubl icebp out cmpsb mov fimull cwtl int3 test test (bad) xor andl jno (bad) std push push lahf data16 in rolb in add pop inc or xchg jnp adc insl xor jecxz test clc sbb imul xor pop sbb lock pop (bad) adc cwtl add mov rol mov popa push repz add in out adc leave jle les repnz push mov adc push cmp mov aaa rolb out lods outsb inc sahf es mov arpl add mov rcll ss popf mull push mov cmpsb in jne aam jg pop in jns sti sbb aas xchg adc push cmp mov cwtl sbb lock push sahf jbe sub test add push orl mov cmp pop cmpl xchg popa mov push xchg xor rorb mov and dec int3 ret loop sub sbb sub dec pop xchg mov add xor mov out xlat inc xchg pop dec out and push out jp loop and loop pop xor jle (bad) jp mov shrb ss shl das out push inc std xchg sbb xchg xchg inc pop loopne aad xlat test lods and call lcall (bad) push adc leave subl fist std jle adc in movsb adc push mov and add cmp (bad) lcall lret rclb cwtl push inc lock and pop dec fs xchg mov mov inc orl lock mov mov daa xor mov loop cmpsl xchg inc and popf mov aas or out inc mov xor mov stc jl mov jg add mov psrad inc push sub xor mov inc sub adc jne mov jp mov gs mov xor shl cmp and pusha and sub cmp xchg (bad) repz int3 mov das pop dec insl push adc popf xchg outsl adc in sti test add xchg je nop pushf push inc or out push mov mov sub js mov xchg loop shlb adc dec push mov stc adc test dec pop xlat or int sbb (bad) pop cli iret pushf adc fwait mov push mov ljmp xchg jle fst movsb adc in xchg rcll (bad) mov icebp and scas movsb and jae sub inc orl int mov push adc or jg dec call out movsl popf fstp lock mov loop test jnp fist lods lods cwtl ror jmp cmp pop sbb icebp jp jns mov movsb xchg ja fsubrp fldl sbb rcll lret lcall mov call push push mov in cwtl jmp sub cwtl mov sti addr16 in mov xor dec jb xchg mov push (bad) xchg or cmp push andl notl jmp mov push pop lods loope repz stos xor and jbe xor xchg add outsl push push lock add sahf jg push mov rorb imul out jmp cltd adc adc inc mov jmp in adc rcll jle in sbb insl icebp jne (bad) fdecstp nop mov push or (bad) sub iret mov test xchg adc ret jle add xlat and push dec std pop imul rorb push xchg or sbb jg add inc push outsb lea clc jns mov and mov pop pop xor fsubl in mov fnsave (bad) lcall push loop pop push (bad) shlb fs push pop sar mov scas enter dec xor mov jne scas movsb fisttpl icebp clc jmp xor je adc aas sub adc and adc ret pop add xor sub cmp and add jl mov rcrb pusha adc shlb jg dec mov int3 push and lods xor jne aam shll xlat bound cmp aad jmp mov in imull popf repnz imul or jge jl mov cmpsl mov push jp xor xorl lods push pop xor dec dec lods pop jp rcrb shll add xor pop pop int lods mov test dec leave in or mov add bswap sub mov adc push test sub dec sub clc test sbb clc imul adc cltd lods mov jno js pushf push mov outsl test mov aad (bad) push mov fsubrs cwtl fs mov jp or lods push cmc leave cs ds push das add data16 repnz pusha daa (bad) lock push ds pop movsb dec jle fildll ja lahf jl add aaa popa nop sub cmp shrb sbb jb sub mov jns cli (bad) icebp (bad) insl jecxz cs inc and (bad) jle xor mov aad push push stos xchg mov pusha xchg sub ds and mov cltd shl push jae push out jo andl fcoml lret stos pushf out dec xchg xchg (bad) imul repnz mull and cmp repz push popf imul dec (bad) add (bad) mov cmp divb pop jbe stos lahf sahf jb fdivrs imul pop sbb cwtl leave xlat aaa (bad) fisttp cmp mov xchg outsb cmp mov roll sbb dec mov outsl dec lods shrb leave cmp mov mov add pop popa push addl xor mov and imul faddp (bad) mov jmp lods pop daa inc xchg mov call std pop sub add dec cmp fnstenv fwait pop dec mov sbb outsb jecxz or pop imul sbb mov jnp test addb xchg jge mov cmp jg cld lods repnz sub ja mov pusha mov xchg sub or jg aam test push xor sub pop aam inc imul push ljmp mov pushf leave xchg inc das jbe lea ja sbb sti test inc int3 adc icebp or inc inc mov xchg push andl mov (bad) or cmpsl mov ret sbb outsb inc jle inc mov sub sbbl data16 (bad) out push aaa mov jecxz sub test push scas or mov jp mov inc ljmp jno xchg pop pusha jns fnsave xchg daa hlt mov xor int (bad) inc jle,pn ja test mov sub or ja jb test xchg stos es (bad) jb inc call dec rorl (bad) jmp pop lcall mov or jg xor xchg or and push insb rcl sub stos in xor cmp lret xchg arpl fsubs movsb push or sbb fstl daa int3 loope mov jns jb in sahf mov into leave testl fimul stos loopne int3 mov sahf aaa sarb xor or sbb push sub add loop xchg push cwtl mov jp adc aam mov cmpsl push notl divb mov adc in mov ja pop sbbl mov jno mov pop in test in sub inc cltd inc test fsts and outsl jecxz test ljmp mov in stos je jae jo,pn add pop dec sub mulb and sub fcompl fisubrl ficomp dec mov push jecxz xor mov cs mov std jb push push adc test and cmp xchg mov out (bad) sub fnstcw push (bad) mov sub (bad) jns arpl pop xor rcll mov mov fdivrl xor adc addr16 mov mov add inc je mov andl out and sbb dec imul dec sbb xchg mov sarl xor sbb dec mov xchg int insb roll repz xchg or dec out aas orl dec ss negl sbb aas sub shl int frstor dec sbb mov das into into cli out dec pop lea adc xchg loope jbe jae pop rorl dec sbb testl inc cmpsb cltd push popf add lea jg inc fiaddl adc add and lret cmp or dec data16 fidivr and push cld jno or popa pop (bad) cmp mov jns push pop push ficom addl inc mov aaa xlat xor add jb sub mov xor aad gs in stos push notb pusha sahf lea scas dec shrl inc mov mov sbb sbb dec mov insl mov push add sub lods cmp jp push mov mov nop xchg lret adc dec int3 in inc std mov mov dec out (bad) sbb or mov add pop lret push loopne fdivrl subl or jg xchg movsl add leave dec outsb push insb ret xchg add (bad) sub lcall dec mov sbb add push cmp add jg jbe adc jl push cli dec adc jl mov xchg jne cmp xor xlat dec fwait cli jmp enter jmp addr16 sub ja adc (bad) cmp sub xchg aas xchg add pop dec cmpsl jecxz sbb sub jle push push imul mov insl or sti adcl sti je xor fwait movsl loope xor mov out bound sahf enter pop loope lea xorl adc mov pop lock lcall dec cmp testl lret push dec xlat jecxz xchg dec sbb pop loope stos ret in mov jp,pn add jnp arpl jmp (bad) jno mov lea in mov mov jns pusha scas jb xchg inc push (bad) push xchg mov cltd cmp adc mov fistpl int3 ja shrl (bad) and (bad) insb fiaddl scas pop mov jo dec clc add jnp inc bound fwait insb jge mov mov inc in icebp repz mov pop dec mov jns dec xor outsl (bad) imulb (bad) clc xchg xor xchg lret cmpsb (bad) aaa insl and mov mov sub pop mov xor repnz insb xchg push sbb or lret jno add jmp adc fisttpl dec jnp (bad) leave cmp push pop cmp cmp and mov (bad) out rol and mov out mov arpl push pop sbb daa scas mov aam push ss inc mov or cmc pop out or outsl inc xlat negl cmpsl aad cld sub test fisttpl mov lret sub pop add mov push insb cmp or lcall mov test mov push xchg xchg mov mov cs and pop out dec arpl cli cmp push jmp loope adc mov cltd pusha test pop insl fidivrl sbb lods or ljmp push mov or loope mov aad test ret pop xchg loope adc dec push js push aam mov stos test fnop cmpsb movsl fdivl xor pop inc inc insb (bad) mov mov sbb aas lds sbb stc icebp pop pop loope ja fisubr jg mov inc sahf and fmuls mov dec clc mov push loop add icebp jmp stos rsqrtps sbb xor sahf dec xchg test cli aad sbb pop pop lods add stos shll jbe icebp (bad) sub mov jl or pop imulb call adc roll fdivl xchg movsl jns cmc lcall sahf or jmp mov stos push loope cmpsl push adc stos cwtl adc lretw lahf mov mov cmp xor lahf into sbb xchg sub xchg xchg in sahf sbb pop adc pop jae dec mov popa cmp ret cs jnp sahf movsl jecxz push ficomp popa rcrl xorb dec test addr16 mov pop inc xor dec mov das (bad) mov or cs xor addb int and lahf and test scas (bad) jl and mov popa inc dec or arpl fcomip jnp mov cltd rclb imul mov push fwait dec and adc rcll add popa leave sti loop mov cmc jns mov pop imul lret dec loope pop mov mov jmp cld push dec cmpsb xchg xchg pop fmuls cmpsl jp popf xor xchg mov pop (bad) push and cmc inc dec xor (bad) jne cwtl mov pop int mov dec into jg lret fsubr (bad) (bad) das inc sbb lds add mov mov dec out fisubr mov push lods jae ret jecxz adc or jbe pop sub push iret bound dec ljmp fildll add jg or jbe cmp pop and pop notb lods pop fcoml outsb decb inc pop int test jnp inc sub test mov imul out rcr add or test cld lret (bad) sbb jmp sub sub adc loop ss xor (bad) (bad) mov (bad) in dec dec fmuls xchg inc cs lahf out fcoms in jns daa push insl sub mov mov dec aad fwait inc shlb and int3 pop js dec xchg sub mov add in gs mov es dec imul or aam dec adc mov iret jbe push mov mov pop mov (bad) ljmp into ds mov ror out orl out mov dec xlat push dec out or jl aam cmp dec stos dec mov and xor addr16 and data16 jae pop dec mov fmul add jne popf shrl out dec inc xor lds pop into movsl lahf stos cmpsb lret out out cli fnsave iret clc pop pop pop test mov scas push sub xchg jp inc data16 decl lods mov rolb xchg fisttp andl jecxz mov imul mov (bad) dec mov fsubr out sub and pop mov xor adc jl dec std xchg sub or shrl jnp push jmp xor sub sbb loope outsb mov cmc pusha das cs stc and push in adc or and push movsl mov pusha push mov (bad) cmp das inc mov jecxz div icebp xchg stos cs in jecxz mov or out mov mov dec dec jae push inc test jle aam xchg cli aad push insb dec cmp mov (bad) hlt inc jl push movsb jecxz stos sub xchg fldcw imul test push cmp xchg insl imul in and or push xchg jns sbb mov adc leave xchg mov out cs and xchg fcmovu loopne xor fistl xor dec or jnp jmp jno lds pushf leave cld es push or stos mov stos mov ljmp dec mov lea (bad) out popf ds lret jle cmp rol sbb mov mov push mov ja clc xchg movsl mov jbe cmc mov mov ljmp lods push adc jp jns jmp in ljmp inc jge lods (bad) sbb imul imul dec adc das jbe pop cld mov sahf enter jecxz cmp mov shrb sub mov mov je adc jae push loopne inc and inc andl mov mov inc adc cmp addr16 cmpsl icebp push lahf pop das push and add jge fcomps cmpsb dec push sbb mov sbb in movsl clc xchg std daa adc push mov repnz and stos push xchg daa mov fcoml mov int3 popa xor call mov nop outsb sbb xchg cli inc push xchg lret cmp lods mov xchg pop sbb in mov shr xchg test push sub outsl or push adc mov xchg add mov xor adc xchg gs arpl pop fstl inc push addl mov cs add movsb mov mov rclb xchg insb xchg push jnp pushf aaa inc das pop xchg adc movb pop mov adc dec pop jae movsb clc jae pop leave pop push pop insb hlt dec ss insl lods xchg jge sub loope inc repnz jnp dec jecxz cmc icebp push or divl inc cmp jno inc or sbb je jp in stc dec adc in jmp jmp jno (bad) pop andl outsl pop rol lahf test ja push aam jbe xchg (bad) cli or repz mov sar out loope into pop sbb repz xor imull imul aam adc fs aas sbb sbb sarl inc dec inc sub jg loopne in popa loopne outsl dec insl scas cmp lds sarb push xor mov push sbb adc rcrl lods dec add stos pop or mov cmp xchg jg xor mov out cmp fcmove add loope fdivs test add or jae dec jle popf mov fistl mov mov cmpsb stc mov pop pop and inc push mov jne aad ss mov xchg cmp adc inc repnz push cmpsl cmc hlt xlat adc dec mov cmpsl jl pop jle mov dec mov xchg add cltd jb test jp inc xchg dec pop test inc stc push fucomp loopne nop push inc fiaddl fidivl fs push cmc repz lahf or mov test gs dec jo nop mov lahf pushf sbb sub or in jle adc loop jns fstpl fistl xor test adc fildll mov and jp lcall lods mov xchg insl clc arpl sbb daa mov enter xchg cmp sub pop xchg xor sbb ret movsl int or bound xchg jmp jnp lahf loopne lods and test mull push repz nop iret iret (bad) movsb fiaddl mov test popa xchg adc mov fildl lea or pop mov cs cmp popf outsl sahf inc mov notb pusha mov movsb pop gs pop fwait dec outsl iret inc pop mov ss cmp and lcall fsubs sbb out xchg jb pop jmp add fstps test hlt jnp mov xor shl cs cs or or lods sub sbb push outsl add sbb pushf in fwait xor movsl mov or rcll sbb pop and mov xor (bad) and (bad) mul repnz fiadd xchg dec push mov lret add pop mov shrl test lds pop imull push cmp jo mov rcll cli scas (bad) fidivrl push (bad) nop add loope push in rolb inc fs inc add popa dec (bad) in jge pusha add adc inc ljmp in movsb sbb add cwtl inc xchg adc insb sbb mov int3 imul jp push xor sbb (bad) (bad) adc push lds testl sub dec stc xlat jbe sbb mov sahf fdivrl mov lea ja insb pop sub lcall loop mov (bad) lcall mov aad (bad) add fstl mov jo push loopne aas xchg mov sbb cmp push sbb push or xor or push rclb lds xor daa xchg jne pop sbb scas mov dec xor loop arpl aad pushf xorb add loop mov mov mov inc and lahf insl in jp (bad) sbb inc mov (bad) adc pop or int push les pop movsb out fildll xchg push jle outsl lret loopne fisubr es aaa xorl push scas mov mov mov out sti pop bound (bad) push push mov cld mov fisubl popf hlt xor xchg cmp popa sub mov bound imulb leavew outsl lret leave imul push xor jp cmp jmp leave inc add xor sbb sahf jns stc andb sbbl scas push inc jne adc sub push dec fwait adc add shrb push jbe xchg push xchg push mov sbb fadd insb sbb lret pop jae sub incb inc cs lods sbb cs jge mov sub insb adc sub mov xchg sbb jbe push daa cld dec in dec mov rcrl push ret ljmp cmc loopne cmpsl out and xor mov sub out fs out imul repnz cld pop lcall and inc andl (bad) loop add js xchg adc inc cli fsts add and adc push rcrb sbb add test repz fdivs cmpsb call jb adc mov xor push in shll push push xchg dec or mov mov lret lea lods push in popf mov mov mov mov mov mov mov jl or and lret call movsb loope lock loop xlat clc repz notb lret (bad) sbb jmp dec add imul cmpsl jp arpl ds cmp add dec add sbb inc in add je sar mov fist js mov popf cs mov shrl sbb adc shlb dec xchg out stos mov addr16 enter inc icebp movsb jno mov adc loope push rcl mulb movsl popa xor and cltd and mov jnp jge fwait test lds popaw jno mov or ret and out fwait cld or sbb xchg adc xchg lret out and cmpsl (bad) push ret aam inc mov cmp and xchg or and (bad) jnp fadd adc mov daa sbb cltd xchg dec ret jmp loop or jb mov sbb popf fwait std pop (bad) mov jne cs mov and mov xchg jecxz imull xor test push pop clc add (bad) lds xchg fcompl cltd pop jg orl loop sti pop sbb jmp push shr popf fnstenv mov loop std jmp cltd jno jno sahf fisubl in lods add mov inc gs mov clc fcmovne jno mov add scas sub vpshufhw mov xor adc fbld clc (bad) fistp out mov mov (bad) sti or push adcl loopne mov aaa push cmp and cmp jecxz inc pop addr16 popa lret cmp mov lods mov stos inc mov fwait push subb pop push stos cmpsb jmp test addr16 dec add popf push insb icebp push iret cmp add call or sub mov in ret cmp jg mov jge sbb mov sbb into and test imul and iret psllw pop lea adc imul sbb mov and es or inc xchg lret pop jg push mov scas cmc lock das or mov das mov aas adc test fldl2e cld sbb mov mov mov cli pop sahf adc movsb into loopne add lahf addr16 mov (bad) mov mov dec mov jge repnz stos jmp lock (bad) pop in std mov out jns cmp push pop sbb in adc arpl push and pop aam out sub inc sahf mov stos dec or dec jecxz les out into clc add pop mov inc (bad) lea call repnz jl int3 mov push jo cmp es fucomip xchg enter pop inc aaa adc pop push xchg jmp in inc sub incb hlt lods or scas dec jle xchg negb pop or or cmp mov jb pop push mov dec (bad) or jbe mov lea sub and leave cmp shlb out add aaa nop sbb or mov cld shrb fidivrl fcompl xchg jge cld and cmp ret push ja fsubrl jecxz loope inc pop pop and js dec fyl2x call sahf pop add sub imul mov sub subl mov mov int3 adc mov lret push popa xor mov or std lods xchg lret xchg and mov pop loopne add ret push mov popf mov xlat mov push (bad) jp cltd lcall xorl lahf scas mov inc sub or mov int3 pop mov dec cmc cmp mov cmp mov (bad) or sbb mov mul idiv daa and push lcall jecxz push fildll mov xchg mov int outsb jle aam push rdmsr lret pop mov jg cmpsb mov stos aaa sahf gs push (bad) data16 add je dec and enter ds lock cs loope repz mul pop pop (bad) hlt dec sahf scas push stos push xor push mov push imul xor or lods nop and push mov outsb or pop mov lret decb xchg mov inc cmp pop dec lahf aas imul push in test popa and dec jno pop mov imul add stc daa add inc and adc cmp data16 push lea je push push adc cmp dec mov movsb mov (bad) out popa rcrb loope mov dec mov mov xchg inc loopne sarl adc sub call loop iret or sbb xchg lods testb or call xchg fsubl cmp mov shrl pop movsb ja xchg ja sbb lods ljmp ds sbb xchg xchg and enter arpl mov or out lock sub sbb jl bound out gs xchg mov sub out mov leave inc cmp stos or rorl in xchg and inc repnz out jmp pop xlat mov xor mov mov call sub ss and ret jne inc xlat dec mov insl sub int clc pop xchg xchg fsubp sbb xchg inc adc cld sbb sbb test add dec jmp cs ret into xor rorl cli adc in jnp dec lds and cmp xor pop inc cmc mov lea sbb or (bad) into jae insb lret fldenv rorb fcoml stos cmc and aam imul outsb gs xchg lahf xor mov xor fcoml pop mov cmpsl add shl jge sub (bad) pop mov mov sub mov (bad) nop sub mov and ret mov lahf xor or sub jmp dec mov sbb outsb shlb mov cltd les fstp cmp inc jge es movsl aas add in dec sar jae push dec shlb and sbb xchg fdiv inc mov ja sahf add or inc or mov push cltd xor es adc lret ds mov and sub call push cltd sahf cs push bound jmp idivb rcrl inc shll jo pop cmpsl repnz pop pop pop push sub fimull cli mov mov push aam fldl testl aad loopne sbb repnz movsb cmp push dec pop pushf inc lcall pop mov cs lock xor je mov lock fistp daa outsb dec in in test bnd rorb mov nop scas or test fisub inc push adc and cmc cmp push cs shr jb mov js add mov mov fwait cwtl xchg push scas shll cmp xchg out jl ds loopew pop cmp imul cmc push inc mov xor mov xchg jecxz inc and lret xchg popl lods test mov (bad) and pop out (bad) jl stos lret sub xchg (bad) mov mov push sub dec jo lods jae flds jns cmp jns in add jb aad add xor push jg sbb hlt negb outsl call push ds lock push (bad) mull dec cmp test and rclb adc pop add inc jl arpl out or leave adcl (bad) ja cs cltd or inc cwtl fstps or adc daa xchg push xchg or inc pop jbe (bad) jg add fwait dec mov jbe (bad) imul dec std push sbb mov or (bad) lret xor push sti push mov popa xchg xor mov and and shl push jns pushf (bad) shrb xchg loope sti sub pushf jmp mov mov aaa (bad) dec xchg jp js inc mov scas xorb mov mov popa or sahf sub jae sub fstps fldl notl dec fnstcw sub xor pop in in dec data16 mov push movsb sub dec sqrtps into xor sbb mov dec rolb iret mov popf adc xchg fwait insb subb or (bad) aad in loop cld lahf call cmpsb lods rcll ds in jo das rclb dec sub aas loope dec jl stos cmp pop adc mov mov or in pop nop scas (bad) int jb dec add pop idiv movsb fwait imul xchg lcall repnz sahf sub mov es mov dec dec fcmovbe pusha adc mov jae movb sahf jg cmp inc imul mov cmpsb push ja jb mov stc jge addr16 push push pusha test sarb adc add jp lods inc xlat nop shlb cmp push xchg xor hlt inc xchg sbb shll test les imull inc add in js jne incl repz xor mov push adc stos inc dec xchg imul pop and mov insl lret xor mov (bad) push ljmp xchg scas in rcrl mov lret ret mov add mov adc and fist push cmp and divl and fs lds mov mov add fisttpll mov and arpl pop dec adc arpl fistpl in out fstps mov mov xchg dec mov lds test outsb or fistl push cmpsl les scas insl push mov xor fs lock aaa ja mov sbbb movsb mov int3 xor fdivrl or mov cwtl mov fwait dec mov (bad) mov (bad) loope push dec sahf mov mov mov (bad) xor xchg push arpl add stc (bad) (bad) mov xor adc push ret push jne lds daa xor (bad) (bad) out repz stos jns mov sub inc loop cmp mov or and (bad) mov cltd pop out (bad) fidivl leave jp (bad) xor or push jbe in mov movsb movsl sti add xor add js loope ret mov mov aas mov push push push loop pop (bad) ja pop insb and xchg add repnz scas mov jns fdivrl outsl pop mov ja nop pop in mov negl push sub inc mov pop mov push popa call or push ds aas (bad) adc or sbb or pop stos pop and inc es mov sahf inc (bad) cwtl movsl loop jnp out inc push cmp je arpl dec mov stc mov push rorl int3 in stos movb push out pop pushf outsl xlat les dec lret lret mov cmpsl cs push or cmp outsl clc loopne lcall ret xlat dec sbb jbe decb cmpsb push (bad) popa hlt gs jecxz (bad) lahf je xchg mov inc jns cmpsb (bad) int lock je (bad) cmp mov lret repz jle xor mov sub push (bad) pushf pop mov mov adc and cmp repz rorb dec rorl loope xchg fsubs mov push scas sub fdiv lods lock clc fs enter scas hlt push jb sbb sbb pusha mov sbb pop jne aad push adc mov repnz add inc jmp or out mov mov packuswb stos pop mov xchg lock push stos lahf clc fist sti jmp movsl out enter movb dec cli (bad) and (bad) lea outsl fistpl jo xchg xor mov mov and in popa out dec push sbb fisubl dec jno test cmp ret adc xchg lret dec dec je repz jb push stos inc int test adc cmpsb es push mov mov aas jecxz and mov lock enter cs xchg iret sub inc sub int add jge or sbb int3 test xor aam push sbb sbb sub stc imul insl pop nop addr16 ss daa js bound pop subb addr16 dec insl gs loop cmpsb (bad) jmp popa cmp (bad) sti pop xor add iret dec (bad) mov push fcomp jnp push dec test add mov cltd cld push movsb sbb neg xor push push xchg movsw mov push aam xchg aam rcr jl push mov repnz cmc rcrb add int3 cmpsl maxps stc adc and mov paddusw pop addr16 or and mov fdivs das ss (bad) js loop xchg test jnp cmpl ret add add ja mov out test mov test sub loop repnz xor push aas sarl popf inc jb cmp add scas sbb xchg push mov divb mov dec lds sti dec pop sub aad (bad) stos test adcb pop xchg out fmull cmpl cmp mov mov popf sti push jp sub mov adc jge (bad) jmp jp fs jnp or fnstsw adc adc add mov addr16 ss sub push jge loop sti in test movzbl shlb loopne or xchg leave dec push xor mov mov xchg cltd cld mov sub pop mov nop sub (bad) push lret add icebp jge shlb xchg mov fldlg2 push shrl loopne ror mov mov int scas xor cmp popf pop test je test mov lods sbb mov cmpsb ror mov push test and insb movsl das sub pop xchg (bad) insb sbb pop pushf call adc sbb (bad) es movsb push aam cmp jecxz in sbb mov (bad) ss jmp movsb inc (bad) in mov pop ss mov sub mov push and int3 and mov into sbb pop ret outsb lock or jg fadds inc imul jle sarl inc (bad) xchg sbb in scas les loope mov int test sbb cmp jno pop in (bad) or in add out adc mov (bad) lods pop pop rclb movsb adc pusha or jl sbb cld push aam adc mov jb ds inc add and push ljmp (bad) es jle aam push hlt pop mov pushf xor shl pop mov pop test arpl out outsl sub in aam and fstps (bad) mov adc cwtl dec add enter cmp test mov pop jo (bad) adc mov adc mov or fidivr orl imul mov push popf inc or gs push mov push js cli addb movsl push pop or lcall pushf jae call jmp jno inc aam sbb fidivrl jp dec outsl cld pop in push sub inc or mov jo ds cltd mov (bad) lea loopne cli dec stos outsl inc mov dec pop icebp out adc sbb inc insl cmp insb movzbl mov lods ror ret pop loopne sbb addr16 lods dec and dec ja sbb and enter ret xchg outsl and enter push repz mov out and xchg xor pop add mov jae pusha aaa xchg and int mov cmp loopne ret lcall pop mov mov (bad) cltd fsts dec mov das sti std jg sub or sahf sbb repnz push inc jae pop and jno jns mov mov pop push push push fisttp push mov or outsl jne data16 adc repnz roll sub flds lret push jp,pt ret cmp cmp pop (bad) aad std pop jge inc push ljmp inc push pop sbb into dec (bad) mov fdivr fstpt mov enter ja sbb loope mov out (bad) inc pusha (bad) push leave rorl mov (bad) cli add leave jmp xchg sbb in jecxz mov pop push adc fdivp dec pop insl lods inc dec and mov lea iret jo adc or mov sbb mov or ftst das dec dec mov jecxz xchg fwait (bad) dec lret and (bad) (bad) jb sahf xor pop mov sbb addr16 jp movsl jmp sub pushf pop (bad) iret jp lret dec movl xor mov sub adc dec aaa mov repz cltd std cmp (bad) cs adc or cld out xchg fnop movsl roll mov out insb stos dec (bad) icebp das xor inc ljmp loop imul (bad) mov setnp adc repz or sahf fsts jge sbb sbb adc jecxz sub out cs lods xchg mov xchg cltd imul decb pop shlb test push adc es insb xor dec push imul into inc scas inc pop js cmp pinsrw xchg divb (bad) xor add mov sub and pop shrb std nop inc aad notl inc loopne push mov mov (bad) or pop arpl pushf xor jl cmpsb push lods ss push mov hlt lods lea daa xor mov rolb xchg jp leave mov testb cmc roll push xchg mov jae roll jo mov jne push ret jno inc lods jmp jecxz xchg sbb gs stos mov mov nopl and sub inc sub gs cmp push js imul ret lods inc rcl xor shl pop cmp stos xor inc fiaddl stos sbb mov mov test jno (bad) push enter xchg and mov cmpsl sub pop je arpl or mov inc add dec lods aad pop cmpl dec mov or mov push sbb leave aas icebp js adc popa sbb fmuls mov stos loop pop fwait adc in inc mov dec push pop or add xchg lds xor mov adc lea fs icebp mov sbb lds sub fistpll sub mov neg xor pop mov xchg mov cmp mov call pop push (bad) icebp mov (bad) (bad) mov repnz mov mov cwtl dec xchg jo dec stc int3 pop and push mov add notb adc je mov inc insb push xchg add adc mov sub loop stos out mov xchg fmul jmp push ss xor fbstp push push test mov or loope fs sbb fistp mov and fisttpl cmp pop xor xor push mov lea lcall sarl mov xchg sbb (bad) fldcw pop ficom xchg js xchg push push rcrl lcall les aas lret and hlt or cltd dec adc repnz xchg push push push pop gs in mov test cli mull popa (bad) or and lahf lds in xor leave dec mov mov dec push scas push dec pop cwtl repnz rcrb and xchg push push in pop or inc xor es sub dec pop jnp (bad) xor dec imul cmp mov or push enter js mov movsb lahf push fucomip outsb cmp jp jl or out pop icebp lcall inc (bad) sbbl test icebp (bad) mov push fiadd jmp les pusha fcoml mov imul dec lret aad push lock (bad) fmuls dec mov push divl pop add add fs arpl (bad) lahf loopne inc fwait jbe mov sbb adc ss mov orl mov or mov icebp pop inc xchg (bad) or push jmp adc adc pop das nop pop mov ljmp jle cs sub cmp pop push mov (bad) adc (bad) popa jbe insl fdivrs lods iret mov lods andb jno mov movsl push test xor stc pusha (bad) cmp or push stos inc sub fisttp jmp lods sub push mov out mov xor movsl mov cmp and (bad) adc mov xchg push out sbb loopne roll icebp pop add add (bad) or mov pop pop xchg sub pop xor inc fwait leave hlt fnstsw daa push pusha pop cld cltd cwtl jnp imul push lea pop mov pushf pop mov xchg mov mov loope and inc sub test lock cmpsl (bad) hlt adc sahf sub fstpl cmp cmc adc dec pop mov xlat inc cwtl add idiv dec xchg fnop sub xchg push jo fcomps cmp cwtl rcr mov (bad) pop (bad) data16 pushl lock jmp lret dec adc out fisub or (bad) mov (bad) xor jle mov xorl mov push cwtl rcpps cs mov mov or adc add pop pop test das xor hlt mov out pop mov pop dec leave int3 clc mov shll test dec jmp sub push ss pop movsl incb out test insb or push add inc mov xlat test adcb movl xchg adc lock pop lods add fs ljmp in (bad) (bad) sbb aas (bad) mov enter jae or mov lahf or stos pop ret pop ret fsubr mov cmpb sbb mov pop or cmp mov inc xorl jno push stos ljmp das repz jge cmp inc data16 jmp sub loope mov bound adc xor and and inc pushf sbb add (bad) push lds std sti sahf mov ret mov (bad) ret iret lods iret adc jl lret (bad) lds icebp pushf adc sbbl std insl dec fwait mov push pop add jns call nop cltd and cmp pushf jg pop mov sti mov dec fisubl jp xchg faddl aaa and dec sbb push fsave xchg rorl ja,pt (bad) (bad) jnp flds lahf xor subl out mov stc fdivs push hlt mov pop pop stos cli mov add aam push add push xor lock stos cmc outsl ja sahf and xchg in pusha shll lcall lds inc sub into fnstenv push leave pop add push imul mov rclb push (bad) adc out adc jmp or jg (bad) sub dec mov mov xchg mov lahf adc jns stos xchg daa or test stos neg and cmp mov inc enter ds (bad) push ljmp nop push mov iret pop jb jp jnp pop (bad) lcall outsl xchg aam rcll dec inc outsb inc mov (bad) leave xor jb sub cltd add lds lret inc push jbe mov dec movsb ret add fs adc das jae dec fcomip lds mov popf mov jmp xor testl ja insl test lret les bound movsl leave cld mov lock push call dec xchg cmpsb out bound push scas fsubl in test xchg cltd lret aas dec xchg gs cli fildl adc into aas inc mov push pop pop idivb in mov subl cltd xor scas inc adc jb or sub push adc xlat enter insl in jmp jecxz cmpsb cmp push sbb sbb sbb (bad) fdivrs mov sub nop scas and pop shrb lcall push xor lock sub sbb shrl outsl js or es cmpsl inc push cmp lcall ret and mov mov jns sti mov or lods je xor mov iret std aad (bad) pop mov xchg dec cmp mov es addb cmpsl fucom adc xor sub mov scas xchg add test inc out addb das imul push test imul push xchg add shl shrb int3 xor out and (bad) and pop push rcr jo xor pop lods ret test and jl dec cmp (bad) out pop dec rcrb aad aaa xor bound and dec push jmp jno enter out dec andl sub imul push fisttp js inc lods es mov pop mov xchg mov in xchg sub ja and loopne push jl sbb jmp into ss cmc loope adc aaa mov sub jmp data16 dec repz mov shrb pushf jbe movsl (bad) xchg sub fidivr mov mov popl xchg sbb loop sahf ljmp mov mov in sbb lahf int adc daa imul adcl int3 aam sbb jns fsubs dec xor pop dec inc and dec inc scas in (bad) addr16 imul clc into mov dec mov (bad) cld xchg scas das mov test or aaa jo fcomi pop int mov les pop jne dec ds cmp push push sub xor clc js std pop scas push jl cltd popf pusha push inc jecxz jmp fistp mov push in push or sahf push jp popa test mov inc cmp xchg lret movsb mov push fs ret pop mov mov fmulp cmp xchg aas cmpsl add xor lods xchg pandn mov cmp iret pop or loop insl add push pop or mov ret and stos ljmp (bad) rorl and dec cmpsl xchg dec pop (bad) loopne xchg adc and inc pop insl pop (bad) push xor movsl bound jns in inc mov jecxz xor jle cltd push pop cltd jbe shrl jl push sub or inc lds loopne pushf in setle push les jbe mov push rorb aas cmp mov adc icebp dec aam (bad) scas cmp and imul loop add pop mov gs (bad) and (bad) jecxz in inc or mov ret cmove cmpsl jge ret dec mov ret mov cmp iret cs (bad) faddl or vmovaps fildl hlt xchg js jbe jne cltd sub imul xchg addr16 or pop mov mov add aam insl push adc mov or dec cltd mov aam in ss dec mov xlat xlat pop adc pop mov jae sbb and push fcomps push xor int3 and dec call in ja and add dec sbb xor push mov not movsb aas jbe xchg insb iret (bad) negb ljmp and xor adc (bad) insb (bad) jb adc in adc daa jge mov loope cwtl jnp jp xchg es pop mov enter cmp push pop ss cmp or cld fcoms push sub push scas loopne push jo jo cmp jge adc mov in and mov mov in roll js divl xor add mov adc cwtl bound pop pop push xor dec pop mov sub icebp dec mov pop jg push and clc inc pop push enter and xor movsb add mov stos rorl int3 imul xchg mov pop popa arpl jne sbb inc xchg pop test push adc dec in out sbb fcoms xchg clc inc inc inc enter in sbb mov sbb lret shl or stos add xchg xor loop mov in jg sub pop ja cmp xchg sub cltd aad pop out dec test push loope sbb bswap jne or enter jo sub xchg pushf mov outsl rclb aad mov xchg and test or movsl int3 sahf cmc sbb decl adc cltd mov lods cmpsb daa lock mov movsb into sahf je subb fmull dec inc or inc insl repnz dec pop xor imul dec pushf or mov and pop loop outsl xchg add add pop adc mov cmp test and (bad) xchg xor dec stos dec stc daa sbb lods in push gs inc xchg xor push mov xor imul jnp or dec sbb (bad) and out add popa add adc aas jbe jmp xor adc inc sub sbb jecxz sbb or fcomps inc lahf or test add icebp cwtl sbb and test insb rorb xlat js mov push jle lret and jmp and and cmp aam inc fistl xchg test (bad) adc pop mov mov jno stos aam outsb xchg jle arpl add (bad) cld fcmovnu cmp dec clc imul or dec idiv push lahf jne fld mov (bad) hlt and enter push pop and and aad mov or xchg cmpsl (bad) imul (bad) and clc adc out mov cli xchg jb pop js mov mov out sub mov ds push daa daa fdiv lret or js dec negb adcl ljmp or int lds aam ret push add and (bad) in push adc cltd jnp mov jmp test mov jmp mov jno stc test clc dec pop pop fstpt loope lods add sbb mov enter inc add add adc jp jae sub cmp cmp xchg dec fwait inc mov aaa dec fwait popf jne or mov xchg test add cltd lret leave test mov mov or or mov jb push ds sbb xchg pslld mov lea int3 repz pop lahf jmp and test shlb mov inc fwait jl or pop div lcall inc cld push shl xchg xchg mov and xchg es addl arpl addr16 push inc push push xor add lret cltd jmp sbb adc and out and daa lcall jmp push jbe push mov pusha int xlat in jne lods (bad) dec add je lea shll pop xchg inc or mov aam lret jmp cmp repz push sub xor xor pusha ss addr16 and xchg scas std lods mov add sbb push popf cmp in mov and nop jl mov fistp fstl sub fistpll jbe mov fsubrs lret mov outsb das lahf lods cmp mov repz pop cli sub js mov adc push or mov dec cltd xchg adc sub mov movsb insb mov in imul ljmp or cwtl fcoms xlat popa mov (bad) repz and dec adc rcr mov cmpsb jae add dec lcall adc testb call push sti mov repz loop cmp (bad) stc inc push sub jmp repz push aaa cli dec or mov inc sbbl xor fwait push mov arpl cmc iret mov loopne cmp test repnz pop and sbb loop out sub adc movsl gs sub int3 add cmp or rol mov stos mov cmp sarb jae add lret or xchg mov stos xchg mov dec je in xlat mov out outsl inc movsb mov movsl mov in test adc adc push inc add lock xchg xchg arpl push fwait lcall inc movsb mov mov les add mov sarb insb (bad) push cmp jno push cmp xor sahf sub daa jb xchg int3 xchg cmp std (bad) rorl addr16 adc add pop sbb enter mull push or daa popf fsubrl lods or adc mov add popa xchg mov push or sbb clc add jge lret mov mov stos mov cmc loope out fdiv jae mov icebp aaa mov xchg das aas (bad) pop inc cmp out andb mov or orb out jl mov mov pop inc loopne mov movsb lret out out ffree in in roll (bad) lock jle mov in inc stos mov leave xchg sbb clc mov mov ja clc arpl out push xorl xchg cmp add rol or xlat cmp mov out jnp jmp shlb and xlat les imul adc sub and ffreep and xlat cltd stos bound out xchg adc sbb test mov (bad) mov jnp cmp xchg stos cs aad arpl rolb scas push jle dec repnz inc xor jmp xchg call lret dec (bad) shrb adc fidivr inc jb out xchg popa into push mov shrb fnstcw jo cmp xor sub cmp fbstp xchg xor loope push adc pop pop fldl les push cmp loope push xchg pop rcrb lea pop push jecxz adc push movsb (bad) jp push and popa mov xchg imul xor lds push loope test add jo push addl xor jp (bad) scas jno jg mov dec out pop out xchg pop push push xchg inc out adc test mov ret es cmpsl fidiv mov jnp cwtl dec xchg pop adc (bad) mull (bad) ljmp aas je pop xor dec or js sub xchg or out leave ss lods dec mov pop jno fcomps inc cli dec in inc js ja jno mov (bad) movsb cmp rcll call call ljmp insb cwtl or sbb and jb nop pop frstor mov daa (bad) pop xor or add fnsave push movsb fidiv ficomp stos fwait mov mov into pop add sahf xchg sbb lock mov sub mov dec pop andb loop pop ret mov push dec mov mov pushl jnp aas stos ret out or jne jl adc fstps idivb push cmp and xchg icebp add popf popf cmpsb xchg out imul push sub lock mov mov mov xchg pop (bad) mov pop push add mov and iret popa call dec mov int3 xchg push or test jle sub or mov cmp stc jb xor dec adc jmp or aam movsl push leave push xchg pop sbb aam (bad) mov mov outsb mov dec push arpl ljmp sbb mov ss repz rsm mov stos in addr16 jecxz imul imull xor loop (bad) test add daa sbb xor or les (bad) rclb mov call inc adc push loop jns orl pop lds and mov mov fstps or mov add sbb mov test jae (bad) jmp nop iret jle add and daa mov jmp fdivrp mov adc inc pusha dec ja leave into rcr mov and shlb je sbb sub iret es and lcall sahf cmc pop scas pop mov lods push mov ss fcomps outsl cmp aam lock loop lahf mov or imul push sahf sub adc les cmp (bad) mov gs jle shrb push loopne jmp pcmpgtw bound mov jne imulb cmp inc scas imul fadd call mov adc pop pop jae push jne jno icebp ljmp (bad) cmp cmp into jge inc jle,pt in shr mov pop repz idivb add push stos (bad) fcmovnb stc or adcl into cmpsl addr16 lahf push inc arpl (bad) push inc inc insl push les lds mov icebp imul fist cmpsb sub nop dec adc jle nop jge sbb xor enter jnp into adc fcmovu dec aam jb xor xor mov lds addl lret cmp or pop lds or test dec cltd pop sub push bound fldl inc shl xor fisubrl rolb sarb aam inc push pop add cmpsb mov mov popf pop aam lds outsl inc xchg (bad) xor (bad) icebp lods jmp xor xchg imul jg pop pushf in fbld sub sub sub cld mov cmp add mov mov pop daa (bad) das push and mov add lods movsb inc rcrl jle xchg push pop and and jns sub xchg cs xchg pop enter andb fwait repnz test inc jae imul inc jnp mov mov stos das orb xor pop cs (bad) xchg iret jae,pn and popf inc icebp lahf push inc sub (bad) jecxz jno and es cs sarb daa loope lcall mov insl dec cmovge ja sbb xchg adc pop into pop xchg insl dec push jl jp js sub shrl neg sub insl jl mov clc (bad) mov cwtl sub stc push icebp shlb sahf fcmovbe (bad) aaa inc in cltd xchg xchg mov enter aas xchg test jns ret xchg out and push sti add in stos pop arpl fnstsw xchg int3 (bad) in mov mov ja cmpsb notb sub rclb jge push mov adc jle cmp ja jmp xor rclb xor sbb aad cmc jg jecxz mov mov mov mov mov scas ret cmpsb rorl jmp mov out push sbbb push inc inc loope fsubrs imul mov jecxz nop mov test jg push or dec dec and stos dec sti insl adc fistpll sti sbb pop and inc enter mov les mov mov pop mov add imul xor fnstenv add dec mov dec or cwtl pusha sub add add ror push lahf sbb in mov testb pop cmp mov xchg rorl sub test push mov push mov jp mov inc adc fst cltd (bad) or push (bad) mov mov cmp enter aam or mov push mov das outsl mov fidivr pop imul les imul push adc test jns fwait push loop mov stos sub (bad) pop lret pusha popf in enter fwait jle dec mov add mov mov repz xor aaa (bad) adc imul xchg es xor imul out cmpb outsl inc pop add mov cwtl cmp mov mov movsb ficompl cltd movsl inc inc ljmp push imul cwtl (bad) (bad) push xchg stos fstpt sbb or call pop mov fcoml outsb outsb lahf add cmp cwtl mov jecxz inc scas stc fisttpll (bad) mov xchg sub jns add or (bad) mov cmc push lret hlt pop sbb cmpsl out or shl out ret mov and adc in sbb sub fdiv dec mov xchg nop add (bad) andnps movsb push push sbb dec push inc and repnz pusha push imul mov data16 xor sbb bound hlt xor pop dec mov les lahf sbb adc push sbb outsb jno jo jne out mull mov cmp or (bad) or dec mov jns and in sbb mov mov scas ljmp pop sti in dec das adc cmp lods jae inc inc jp popf out jle mov push fucom add dec lea jo lods pop adc push aas xor mov movsb mov sub push adc or push lret movsb adc scas xor xchg pushl call mov mov push mov pop mov gs es call jo sbb ret jmp and imul bnd mov cltd fldl hlt add inc inc fs daa jecxz jge popl xchg into push dec adc ret sub xor jo popf push test ficomp add inc push xchg out jne cmpxchg mov xlat pop add repnz or sub aam jae xor roll dec repnz sub jo xor jg (bad) clc mov jl movsl fcom push sub movl js lds in push popa xchg push dec push insl bound jg push (bad) mov outsl in jo in fcomps insb sbb xchg mov je or and outsl fcmovnu inc sbb adc lret lock adc gs xlat push adc xchg pushf cmpsl sbb mov cmp dec cmp (bad) and pusha and or test pop dec mov jecxz decl lock fs pop ret sbb xchg enter inc test adc adc sub add out decl mov lods test (bad) fcomps aaa mov mov (bad) ss and xchg add faddl ds hlt add mov shrb xor pop and xor adc cmp sbb add mov dec movsl sub dec lods cmp popa dec clc push mov repz (bad) aad mov mov shll lods outsl loopne sti jecxz (bad) fdivp clc inc mov (bad) dec js cltd xor cmp es adc into jp cmp xchg nop movsb dec or dec push cmp push xor sti pop scas test mov xorb mov decl cwtl xchg jecxz mov mov pop hlt (bad) pop add add pop loope pushf out mov push sarb sbbl popf adc daa jnp outsb mov adc aad jp jl fwait add out add mov js push aad enter lret loopne xor push test test inc inc xchg inc out push iret adc sbb mov mov inc repnz pop pop xchg push int3 std int cltd jnp push ljmp popa repz mov mov inc push xlat or or repnz sarl enter mov push sbb aam mov push iret lahf stc jg jo les lret sub pop nop cmp hlt rcrb jecxz iret mov mov ljmp ror pop dec sbb fild cmp sub cltd adc loope dec pop mov scas adc mov (bad) (bad) pop xor icebp xchg scas mov mov inc shlb mov mov inc (bad) ja adcl in mov sub xor mov fnstcw rcrb dec movsb mov xlat pop stc addr16 push add iret sub lret fucomp mov jecxz ret into sbbb cwtl sar fisubrl hlt stos sub and mov and test sbb jp movsl mov sub mov sub call inc insl cwtl cmpsb inc xchg inc out lss rol in stc ss mov xor jb call stc inc inc sti daa inc xor nop cmp jno jecxz out xor pop sbb xchg jg sub bound sub sub sub aas dec cmp sti mov sbb or xor mov mov lea dec dec outsl sub out sbb ja data16 adc inc ja sbb jno (bad) lcall loopne cwtl dec scas inc push or xchg stos jns (bad) add xor repnz js jo,pn jp cmp faddp xorl xchg test test sbb adc or loope sti (bad) mov or jge aad out mov ret cmp xor inc stc push push movsb data16 mov arpl xchg cltd cltd std jb outsb and mov loopne jg repz sub (bad) loopne sahf jo aas cmpsb push xor popf xor loope lods or iret mov sti inc jne movsl lods and adc dec sbbl insl mov mov imul xchg mov cli dec jmp fdivr and adcl ficomp das or xor mov lds repz aaa xchg sub push or mov jmp sbb (bad) (bad) xor outsb lcall dec scas imul out sub repz xor cli or addl dec int3 test pop sbb or cmp stos push pop push xor cmpsl loopne xchg lea mov sub cltd imul das (bad) fmul jg mov mov test cmpsl or mov mov mov add push setp sti add repnz cmp or add out jne adc cmpsl je test cmp xchg push push push xlat cwtl decl sub pop imul mov stos push pushl rcr fs mov clc push and add mov add fidivrl aaa in addr16 cmp sti iret push adcb or imul imul mov and adc and xchg cli nop mov leave xchg test jae in movsb jmp adc mov arpl cld (bad) int3 push fldt xor sbb or hlt jmp xor loop orl mov std je mov scas dec pop pop jns lock push dec rolb mov in jne and and adc push (bad) push mov fist imul aam shrl sbb lods xchg lods (bad) or push lods dec ret bound (bad) xchg mov push je jae xor mov xor inc daa sbb sbb xlat pop jno mov inc dec (bad) aad push stos lret xchg pushw xchg inc mov (bad) sbb insb loope fsubrp xchg leave inc mov mov lods add add dec lods cmp dec jo popf lods cmp mov int sbb push hlt (bad) mov or icebp paddw add xchg xchg mov imul jle push lcall shrb and or mov leave testl cld xchg push pop sbb into shl les dec mov jmp jmp jp dec imul decb cltd sti mov je (bad) adcl lock add push inc leave xchg push jne inc adc (bad) lock sbb xor xor pop popa cmp lahf scas movb add push addr16 cmp or lret push and test fstps add sti dec jnp gs fdivrs imul fcmovnb das inc cli push enter and dec cmp ljmp pop push fisubl stos jmp lret sbb dec shrb cmpsb push mov pushl push xchg out pop fs xchg imul roll xchg and into push sbb outsl pop ja pop xchg add out fisttp adc (bad) cltd xchg xlat pop fnstsw repnz xor xchg stos or (bad) xor ss push sbb push clc andl cld adc jo in or sti insb loopne lods push cld pop xchg mov or bound mov xor xchg shrl jmp jmp or ss sub mov dec xor cmp aas pusha xor fwait out int3 mov add add xchg push add push (bad) ljmp loop inc jmp mov mov mov push fcompl aaa and cmpsl test imul mov fstl mov and inc mov imul cmp dec ss mov fs fsubl xor add sub and stos xchg (bad) stc mov inc (bad) cld test addr16 sub in and add sub mov bound data16 int xor or stc dec (bad) sahf pop xorl xchg movsl sahf xchg adc cmp jle cs inc push or in addl xor cwtl (bad) lods lds or es dec push popa cmp nop xchg push int3 ja in iret and xor incl sub (bad) xor mov jnp,pt adcl xor (bad) mov push (bad) xchg out out mov sub mov clc (bad) cltd push fucomp ret (bad) (bad) inc push mov cli repnz inc inc xlat xchg lea cmpsl loopne fisttpl (bad) fldcw popa xor add mov cmp outsb (bad) jae ss mov pop pop mov adc xchg lahf hlt xor xchg mov pop add pusha cmp jecxz push sti bound dec inc cmp dec mov sub jp lret fwait or push xor jmp lret adc lds cmc imul sahf ljmp push jb mov sub dec iret fisub or sub andl cmp negl mov shl out mov or fisttpl push mov xchg fnstenv cwtl lea sub andl pop add outsl add aas sub inc adc (bad) dec mov sbb or or inc fildll mov xchg cmp adcb push cmp sbb cli call ja mov (bad) icebp fcompp into not mov adc jp xchg ret mov fcmovbe or cs call mov jo xor loop adc add adc push and popf pop fldenv mov xor push call add stos addr16 int3 shrb dec fwait jnp jg,pt mov or fdivl adc cmpsl fadd inc mov nop mov lds jae push xchg cmpsl xor sbb ficoml jns,pt gs jmp std (bad) out call adc bound pop stc jnp dec and inc stos out mov iret outsb ja repz shrb sahf dec pop lock daa popf lea ljmp (bad) pop icebp and jno mov jne mov sbb sbb jnp jmp jb sbb gs and gs aad ss cld pop xchg mov sbb ret jle xor cmpsl cmp push mov pusha cmp xchg xchg test daa xor dec adc sbb icebp fwait insb sub pop mov mov sbb sbb stos sub push pop mov sub or mov cmpsb in mov push jecxz cwtl mov insl lods (bad) lret or (bad) mov out popa mov scas (bad) popf fstl push dec sub mov push lret insb ret push loopne jp (bad) icebp mov pop mov ret push sbb adc lea add dec (bad) cmc cs mov pop sti cmp pop pop adc push scas mov push test mov fwait push cltd jo popf aam or fldt add or jl rolw and mov fisubrl and cmp ret pop xor adc mov jne mov cmpsl adc jnp pop pop push and outsb xor or rorb addr16 cmpsl xor adc mov cmc mov adc cmp dec pop pop dec mov pop xchg xor popa stos mov adc jg out mov add cli popf std inc hlt insl loope daa and cmp xor and js xor pop fnsave lds hlt movsb sbb repz bound aaa test fcomps dec pop and xor mov stc hlt out clc pop clc outsb js cs out cltd adc mov sub js inc inc data16 mov xchg jge scas mov add dec sub ja (bad) ss mov mov into jecxz pop loop inc (bad) std sub test xchg scas lds nop scas jns or sub sub out pop (bad) pop xlat test inc fcmovnb lds xor aam and andb adc mov leave dec pop and scas (bad) outsl jno into fistpl scas xor push mov lock or push aam fwait adc out arpl popa int3 incl or push sbb mov cmpsb dec call enter fild call popa or (bad) jecxz adc js sub xchg sbb or out or andb loope std ljmp into repnz jmp test xor push in sbb int fistpl pop mov jno jle ja clc adc int3 push mov fwait dec cmc push repnz inc adc or test ljmp xchg incl std int3 cli das rcl in or int3 pushf add jo insb jp add je jge bound loop sti fidivl sbb cmpsb fs out mov mov aaa sub lcall int3 push out es mov iret and mov adc mov rorl lods sbb mov es (bad) setl shrl scas adc cmp int3 scas cltd insb xchg daa in hlt cld sbb add adc mov xchg dec push cmp cmp out or sub pop or dec das scas inc mov cmp flds adc push fimull sbb push rorb pushf lds xor xchg and mov xchg adc jl,pn mov mov or scas sub push mov pop les pop mov adc ret addl cmp gs (bad) mov pop outsb or push pop add mov fs jns ficom outsb jbe std dec lret popa int3 add mov mul add cmc and cmpsl hlt xor push adc rcrb iret stos in mov (bad) add int3 repz mov inc pusha (bad) mov lock xchg and test and scas dec in cli das gs jnp es mov mov mov adc call inc pop add inc icebp cmp mov pushf xor daa fiaddl lcall cmp mov inc mov or mov int pushf sbb cmp dec inc dec adc sub popa cmp dec clc (bad) test sbb add push fwait sti std mov in sbb xor (bad) arpl leave cmp jnp and cwtl mov pop or ror mov xor notb dec pop mov popa push enter cs mov pop insl lea addr16 pushf test jb push sti mov dec or (bad) ss cltd test cwtl push dec es xchg dec pop (bad) push cwtl pop xchg cmc sub call sub int3 jns mov dec outsl cld movsb lods pop adc adc mov dec cmp imul xchg outsb test dec cli mov jg in xlat adc inc rorb lds scas sbb mov jns imul (bad) mov add insl mov push inc int and imul leave clc sub or xlat adc lock jnp arpl cmpsb mov push nop mov nop ja jge dec mov mov je outsb ret mov mov mov sub mov adc or (bad) mov or xor push cmp inc or (bad) pop fs xchg mov cltd and rorb cs in dec lock jne jecxz push dec xchg sbb jmp lea pushf push xchg mov movsb (bad) pop cld mov int3 adc jp sub insb fisub jns cmp mov into dec jnp scas fs outsl xchg aad inc fmul in xchg push dec jae sub sbb xchg or int (bad) pop pop enter lea mov in aam mov decb repz xchg sbb js pusha and inc (bad) movsl jge mov je push inc pop jl shrl in ja and pop jge jnp out xor mov bound or and f2xm1 mov mov je pop mov (bad) jle sahf mov push fldl or dec (bad) aad mov pop mov mov (bad) dec dec push adc dec popa daa into lret jge xlat das out mov adc out inc cmp xor out jle loope mov je loopne xor xlat mov mov jle test pusha les push sub pop movsb push lahf sub dec dec test jg mov sub in ds mov mov sti adc xor push movsl loope and jle inc addr16 xor or (bad) aaa sub mov inc popf mov adc ret inc mov push fwait xchg ljmp and jmp xchg mov lock sahf pop hlt clc clc ds fcmovb xchg outsb and test lods push mov leave jg ljmp dec xchg popa mov sbb mov xchg (bad) dec mov lahf push pop rcr push and and sarl loop mov ret jge daa inc mov fbld arpl loop inc mov jb jb inc add and push out sbb mov repnz in inc loop cltd pop sbb imul sbb jp nop or cmpsb lahf ss push xchg add mov xor mov repnz daa popa inc xchg fwait mov aam mov mov dec lahf fwait xor jno mov addb (bad) out movsb std js fstpl pop xor or pop clc loopne stc out jle (bad) bound ss lock add cmp loopne lahf dec testl pop aaa pop add mov shl inc (bad) fstpt cmp loopne ja cwtl rcrl jbe imul mov outsb test jno (bad) cmpsl mov jl int3 adc sbb pushf xchg xor ja add bound mov jp or xchg sbb ss scas sub dec lahf mov in out dec aad push addl pop stos mov mov sbb shrb push dec xor sbb mov orb xchg vpshufb xor mov es inc mov (bad) mov repz cmp fwait icebp in sub aaa inc push adc loope scas sbb icebp (bad) xchg push dec xchg fildll inc xchg mov pop jge fldenv push adc loopne xchg adc cli add xchg and pop xlat mov dec dec les mov mov icebp lcall into ja loope xor adc loope xchg movb push aas mov push jmp mov and fstpt lahf movsl test call (bad) test mov add iret (bad) cs mov push aas popa add add mov pop pusha leave and pushf negl pop pop pusha mov add mov xlat xchg pop insb mov out data16 xchg pop shl push dec or mov imul lret ja mov or lods aas mov sbb jg repz inc pop fmulp push std in mov xchg lea lods test sub xor add pop jae jne (bad) push lock jns xorl int3 stos aas ret into into dec test fadds sbbb cltd or adc xchg enter call ficoml loopne (bad) mov xlat pop and dec in push and mov rorl ds loop push mov mov sbb insb push arpl push call jmp mov and push pop (bad) icebp cmc or and das inc imul scas add das or into leave lret hlt or ret xchg stc lods xchg fwait dec mov adc lds scas sahf scas mov and out lcall pusha gs mov adc pop sub mov (bad) cmp inc mov push cmp push stos or je or call push orb xchg mov fsubrl inc inc aas es incl fbld mov inc (bad) enter sub jge (bad) xchg (bad) jns mov mov out fistpl iret je jmp mov push (bad) dec jne or enter mov push push lret imul push add adc dec loope mov stos aaa adc sub mov imul notl jne je push push and xchg aad push mov outsb ret add or test push xor mov mov or sti pop pop mov add sub sub add out enter xor jp or stos xchg push dec sub lret fcmovnbe fdivrs cli (bad) adc cmpsb cltd addr16 pop jle jbe mov cmp mov inc loopnew push out lock movsb outsb adc push fcoml mov xlat loopne inc cmp ljmpw cmp mov sub enter dec sbb sub lods aam (bad) mov add sbbl cmp das add ret outsl xor scas xor cmpsb dec movntps add jne ds ds add pop aad sahf jbe xchg mov cmp clc stc and shufps nop inc jge cmpsb sub adc ds mov lds ljmp pushf mov call cmp out jg iret mov test dec loop and lods jp inc push les movsb sub outsl jecxz fcomps ret inc movb sbb dec loop adc shrb adc scas movsl mov test mov add push pop incl or or je mov rcrl lea xor out test ret dec push and das adc cmp aaa popa sti mov jb ss jb retw shlb idivb int dec lahf mov pop aam add add push rcll repnz adc add xchg push inc in sahf push pop sbb hlt xlat xchg jmp fsubrl ss bound xchg jmp cmp add cmp mov int sub push (bad) in xor insb dec int movsb enter dec mov xchg push fidiv and pop pop or jne,pt test ret sub xor mov sbb call add sti add aad inc lret int3 in shrl ss pop into adc out aaa sbb sbb test out lea out jne mov loop adc (bad) in scas push dec out ja dec (bad) fcompl pop mov jge lret adc icebp aam (bad) jns xor sub aaa pop stc movsb (bad) xor fistl sbb outsb outsl lcall mov lods dec pop mov pop out cmp data16 clc pop push pop outsl lock and cmp divb pop popf or mov xor inc rorb clc cwtl rclb xchg out inc sbb ja test je dec mov mov and insl adc cli popa insb ret lahf cltd ljmp hlt (bad) int pop push sub xchg jg jnp fwait add push das xchg enter push push pop mov mov lock das pop sub imul sbb pop pop mov das sbb call repnz icebp mov dec out cs pusha lret (bad) sti aam adc push add stos xor sub out (bad) adc mov test and cmp xor add dec test dec inc xchg outsb aam mov loop pop dec lret addr16 xchg lcall mov sti dec insb dec pop scas xor loopne shll sub sbb jns ss jecxz cmpsl xor (bad) ffreep inc push xor sar push lods add ja pop adc push cld loop test aaa jns mov bound sbb iret and pop adc pusha mov insb dec jmp sub pop cwtl (bad) pop mov (bad) (bad) loope aad mov push and inc add test fwait mov and cmp xchg mov repz shr daa repnz fs dec dec sbb imul or mov aas faddp insb sti jae add mov inc lea dec jl adc pop cmpsb xchg cli paddb inc cmp pushf bound aad and fiadd shrl mov iret movsb arpl cmp dec ficompl jmp mov jb rorl negb inc out into mov (bad) inc cmp mov and mov add cmp adc or add xchg push js je add dec adc and sbb jns,pn mov xor xchg pop arpl or nop mov inc inc cld hlt pop jmp cli add xchg lods cwtl jp fwait and lcall arpl inc and lret out mov inc inc aas add aad fucomi into icebp out adc pop cmp jge cld (bad) or and cli (bad) sbb repnz jne mov xlat out dec adc out pushf notb arpl push scas adc iret lret icebp xchg outsb fcmovnu int add stos sbb insl lret lods jnp lea fstl fstps int3 mov fmul (bad) icebp pop (bad) mov mov sub loop pop and push stos sti repz pusha jp lds in add cmp mov xlat jb out out jno ret idiv xor mov fwait and mov out xor add into (bad) mov lret xchg stc push mov lods loop or xchg (bad) pop dec dec xor cld inc xor ljmp rcll sub pop roll into xchg (bad) mov or (bad) out out mov nop (bad) cmp xchg lcall lahf das das mov sub pop sub stos or xchg xor aad lods push cmp pop inc push sbb lods arpl jg loop imul aaa sbb add lods outsb hlt or iret leave or mov inc loopne int3 jl inc cli jg pop loope push (bad) fdivl cmp xor cltd push stos (bad) mov and jne popa mov jbe cwtl ss jbe push or lods icebp jmp pop divl sbb pusha dec (bad) or ja js push out cmpsl inc cmp movsl lods mov lods push out loopne mov lret xchg sbb jnp mov addl cltd test mov scas rorl cmp shl sub xchg mov lods push pop cmp pop out or xchg (bad) mov shr pusha fmul dec xor incl icebp fidivr jl punpcklbw inc jp test daa out mov xor cmp sub aas (bad) push imul cld pop ljmp fs xor mov jbe addr16 pop movsl cmp pop aam popf mov outsb lds icebp stc or dec cmpl lods imul je xchg ljmp outsb jg pusha adc dec movsb in xor pop mov mov add jae pusha add stos sbb das jecxz neg fcoms (bad) jmp je fistpll jle scas lcall mov shll xchg fistp out fisubl or adc ljmp mov hlt xchg adc call rcr icebp mov or sbb repnz cmp es mov out ret lds add pop push and dec je ret ljmp int3 hlt add jle mov push and out push sub jmp add js leave std sbb xchg mov loop cmpsl xchg aad fs rolb dec stc jecxz cmp inc xchg inc ljmp inc sub mov xor test scas or pop mov rorb sub inc cmp or aad movsl push push mulb lahf pop pop jns push inc push mov xchg ds lret xchg mov lds jbe (bad) inc in or aad je push jmp lock loope xchg jbe data16 push push or mov xchg roll jl mov daa cwtl hlt repz mov out dec sbb test ror lods or push faddl (bad) lahf aas js movsb outsb inc adc cld ja xchg push mov inc (bad) pop and sbb dec cmp or gs notl xor xchg scas add pop or sub outsw adc xchg sbb fmuls push xlat clc es mov repnz scas mov xchg lret test cmpl ss dec in subb repnz mov pop ror fs mov cli rcrb sub or scas ror xchg xor stos lahf jno pop inc jmp dec mov andl jmp mov ret push cmp hlt hlt packsswb mov js test insl jbe or add pop cmp and outsl decl addb jne (bad) dec dec cltd push mov fist lods fcmovbe popf roll mov mov xchg (bad) cmp mov imul add insb jbe cltd pushl popa fs add mov push stc push leave cmp adc sbb xchg out mov mov daa or jecxz cmpsb push xor aaa mov xor or push and mov sti xlat xchg inc sub sub cmc push xorl xchg cmpsl repz aad push inc sti xchg test mov outsl xchg out (bad) ss fistpll jns mov sub jo pop loopne call sub (bad) lods aas mov lret adc adc stos fnop add loope ds cmc testl sbb fildl dec inc ret mov outsb movsb dec xchg test lods fnstenv (bad) dec fsubs scas push shl cmp cmp mov push cltd inc arpl mov mov adc sub mov ds dec daa loope int3 stos sub dec aaa pop jb push cld cmp fildll inc sub push xchg fildl ret pop pop xchg dec push test inc mov xchg leave adc test sbb jnp outsb cmp pop popf (bad) data16 pop bound dec rorl andb mov jmp xorl scas (bad) lods rcr rorl ja int add in out add jp pushf test cmp lds mov insb sbb jae repz dec dec mov dec sbbb add lret (bad) fldenv sbb jp mov not cwtl shlb jp js dec jno mov fadd shll xchg or lret loopne mov ljmp test mov cmp movsl sub ret pop inc or fdecstp cmp sti mov aad in (bad) das cli push pop xchg adcb test xchg hlt sub ss mov stc pop sarl loope jo fistl xchg ss dec fs adc push sti out sub loopne adc addr16 xor dec mov clc mov sti jns sbb add mov testl pop lds adc subl bound pusha or into add mov pop insl mov and push xchg pushf out das cmc and lahf fsubl dec cmpsl mov outsl xlat inc adc (bad) mov and push mov fs das mov xchg aam inc adc (bad) int ljmp or mov test addr16 inc jle stos xchg lret ret xchg adc cltd push jecxz imul ljmp xchg sbb rcrl xor mov inc movsl loopne in inc jl test cwtl sbb pop or inc dec cwtl setns (bad) popa inc mov push mov mov (bad) aad fucomip pop rorl mov lds (bad) cwtl inc mov les lea popf cmp insb pop lods push sub into pop orl sub jge push scas jo jl push xchg test adc shrb cmp (bad) inc sbb call daa add jns movsl fs cmpl mov xchg cmp push jnp push clc std rcrl repnz xor mov repnz enter shll aas push or sbb adc movsl fnop jnp leave loope jo cmp sarb cmp jle sbb and hlt sub lods pop inc cltd pop push popf mov stos xchg add sub addr16 mov cwtl xor xchg cmp mov je inc aaa pop mov jno push call or fidiv lock lcall mov std pop or gs test repnz in (bad) ja push pop push xor jecxz sub push mov dec cld pop mov lods fsubr xchg dec in xor xchg pop mov (bad) fistpll jge cli push fldl pop mov fmul rolb xchg hlt iret rcrb in cld xlat cmpsb mov je sbb je fnstcw sbb daa jecxz xchg cmpsb or inc ror std sbb push out cmp add cmp xchg mov stos push mov mov sbb aaa cmp xor jo mov dec (bad) mov jbe sbb pop push mov lret xchg sti jge shrb into aaa mov aaa adc xchg dec mov lods in inc aas jl mov adc dec aas (bad) jb push lds sbb adc jo lret jne or mov sarl mov push loop test push dec (bad) xchg ja scas fucomi ret adc jl jg imul shl in push bound (bad) aam (bad) xchg inc sub lcall push ret and out add xchg or push jns loope xor dec cmp xor cmp inc lret outsb dec inc pop mov popa rclb stos adc xchg push daa and mov je jbe outsl pusha mov cmpsb sbb int3 or (bad) or stos dec xchg aad dec jno mov jnp mov cmp mov lcall push adc dec mov loopne nop ja (bad) lods jne inc repnz (bad) mov mov sbb xor fistpll push pusha icebp out push adc (bad) bound add and xor sbb negb push test dec jo dec out push adc (bad) repnz (bad) enter imul cmc inc popa (bad) cli xor dec inc cmp sbb push mov sbb adc and sbb mov xor call dec (bad) mov stos fidivr mov sub mov pop jmp push fimul push aas push sbb jbe cli mov and jp inc mull arpl or out and xchg mov outsb cltd pop cmp aas fidivl aas lods sbb popa js add adc test ret sub mov jnp outsb jbe pusha je shrl jecxz cld mov icebp sbb or out xchg mov lahf ror test dec and cmp inc leave pop dec sarl mov pop and mov rclb ficompl ljmp notl test rcll incb hlt outsl and sub unpckhps sub mov pusha jge jmp jge popf push hlt test push cmpsl repz test lods mov sbb mov arpl or mov push int3 push addr16 mov movsl addr16 pusha mov mov aas jmp addr16 xchg cs lea push jns mov pop inc push movsb mov in pop inc jecxz push lods add fs fwait and and adc sahf aaa adc xor imull ss xchg pop lahf mov loopne fisttp orb gs sub push mov mov lods mov pop or inc cmp mov and mov xor cmp movsb pop scas mov je (bad) mov and mov mov out jbe mov mov (bad) insl arpl jae xchg fmuls push daa leave movsb fdivl fsubs inc mov aaa and repz push enter mov mov dec xchg std inc (bad) fnstenv xchg mov cmp add jmp pop sbb xor mov int fldenv push xor loope enter mov enter sbb add add outsl xor add sub adc pop (bad) or movsb mov sarb mov movsl add popf jno or jl jnp sbb inc test dec lock sbbb sub adc inc test pop test dec rolb aad repnz inc sub mov arpl dec and div and jb lahf subl ljmp lcall cmp push pop addl rol inc fs jb pop in sbb jmp rorb popa addr16 mov mov ja cmpl (bad) loop sbb iret addl ss push xor add pop movsb xor lods outsb out jne imul insl jnp jmp lea les sti je adc and jnp jg ss push adc pop push ja xor in imul jnp fidiv sbb xchg xchg adc stc in jmp (bad) xor cmp mov in outsl inc xor mov movsl andl sbb pop (bad) xchg push adc xchg mov ficoml (bad) adc push cmpsb or enter movsb lock jno ss sub pop in add xchg fstp pop push push rorl dec in jecxz jg jp pop fistpll std out cmp and inc sbb in xchg mov cs cmpsb int3 mov push nop std jmp mov jns stc mov sbbl mov xchg sbb jae push xchg or fildl dec stos aad mov push (bad) dec aas mov xchg jecxz cmp xchg pop sbb mov sti in icebp mov pop es ja xchg leave dec xor dec sub cli mov cmp pop (bad) mov cmpsb xchg (bad) aad rcr dec pop shr sbb pop inc test pop xchg (bad) dec sub xchg ret (bad) mov inc test and movsl or (bad) lret aam cmp shrb outsl push cmp mov dec cwtl mov popf sub loopne push pop jmp mov pop xchg sub pop out ljmp and call es jnp insl cmpsb mov mov test enter mov pop mov jb sbb mov dec mov xor or (bad) mov push cmp dec jecxz push outsb add ljmp in call push inc arpl or mov push (bad) js cs mov push push jbe fnstcw jmp cmp adc inc fnstcw xchg cmpsl stos mov xor xor lods jno xor rcl push xchg pop stos cld call jp add xor and xor inc fsts mov ret xchg push sub inc or adcl push out loopne mov adc insl inc push movb ud1 not test sbb pop es movsb lret sub (bad) repz dec sbb stc das clc pop and and jmp test mov push sahf cwtl scas shr (bad) jmp adc mov xor or pop mov pop repnz mov daa aad cmpsb push cmp aam pop add fcoml sub adc xor mov mov pop lcall in pop rol dec mov mov fnstcw xchg inc mov add or adcl sbb push scas xchg pop pop test push mov lcall pushf pop xor ljmp insl out mov mov adc iret jmp ss icebp inc daa jbe call sbb outsl lea and jb test repnz mov cmp mov cmpsb ljmp scas push add sub idivb push push aas aaa mov xorl adc add xchg loope data16 scas sarb cltd lret push leave frstor mov je fdivrl jo int3 push outsb mov pop xchg and cmpl (bad) sahf imul iret inc push xchg and pop sub xchg jae adc pop loopne jl xchg jo bound or inc push imul (bad) cld fisttpl test and cmp xor inc loope dec jbe jge lds pop pop in pop imul dec fwait xor jmp cmp or push pop int lahf jp or dec divb iret pop push fstps adcb jle push std xor js xchg aaa (bad) in adc mov arpl or (bad) xor mov mov pop xchg cmpsl add test lods (bad) (bad) call jmp cmp sub dec mov shl sbb xchg push ljmp add cld aad sub dec movb push mov and repnz push out xchg sbb or outsb stos xlat jae pop int (bad) movsb insb xchg jge cmp (bad) cmp pop les int mov xor scas hlt xor dec xlat inc int3 push xchg test cmp mov or aaa les and shll sub repnz mov arpl aad ljmp aas push cmp mov aam rcrb jno adc dec pop (bad) cli push sub into mov xchg cltd ja into lods outsl cmp les loop,pn fdivrl movsl xchg lea jae stos pop add addr16 cmpsl pop flds cli stos scas adc sbb pop enter roll into inc fiadd lcall jb sub push dec xchg scas fiadd popa xchg inc stc push pop out fisttpll mov incb pop mov mov sbb fwait jmp jecxz rol lods and lcall rclb pmuludq imul pop sti lods mov pushf addr16 adc and and outsl mov sub arpl cmp mov pop dec aam sub xchg in xor out cmp xchg mov (bad) xor cmp xor mov cmpsb in mov icebp lret push sbb into mov sub movsb sbb fs sub test outsl mull mov xchg and lock pop push sbb or ret xor xchg mov pop lcall jg imul inc stc mov repz or jbe outsl cmpsb popw jle testb and mov fucomp rolb jbe mov call lods (bad) sub cmp pop sub jae nop or je fwait sbb cmp dec sub and adc fdivrs and lcall push bound adc lock inc sbb jns dec pshufw mov loopne or out call xchg xor and push or inc jmp jne pushl mov push or movb sbb mov or mov pop mov ss sahf xchg pop xchg lds bound sbb push xchg xlat clc mov mov jo lcall in stc add jge cmp add pop sahf or mov fcmovne or and (bad) into mov push lcall pop mov add jg add in out sahf aas sub sbb mov xor movsl sbb test into sub in sub and and lret rcl or adc pop xchg aas std mov lahf addr16 xchg inc push fs stc add pop push aas xchg mov and dec enter addr16 adc jae stc adc xchg cmp stos mov push add mov fwait pop test cld fs lcall pop pusha xchg mov sbb sub pop xor shlb shrl sub push dec xor in xchg shl int rorl fimul push jns out and push test mull push loopne mov mov xchg in (bad) in mov dec sub gs pop mov ficom or mov jno fisubrl dec xor ja cltd or mov xor mov sbb ljmp mov roll loop cltd adc in or loop icebp popa jno sahf push lods mov pop inc test sbb es mov (bad) hlt xchg leave stos mov es push xor pop out sbb aaa imul mov out clc inc scas test mov and rol add sti (bad) fisubl xchg (bad) or mov pop adc mov and fstps enter xor fs pop inc out outsl rorl dec sbb sub into ds insl mov mov sarl sbb jmp mov inc aad mov gs push fadds test cmp cld jbe loop mov add jno andb test fcmove or and jae fwait xlat je pop and cmp mov sahf stc imull jae mov pop mov mov insb sbb mov (bad) stos mov ss iret cmp or fimull pushf clc lret enter int or mov aas popa fidiv jb iret sar and xlat fcoms repz jne andl imul xchg mov and imul add adc (bad) (bad) divl xlat sarb lret push adc movb jl fcoml jae push int3 dec sbb push and je adc out (bad) mov mov mov xchg aad into sbb mov insb test xor (bad) xchg add mov cmp addr16 cwtl std jl lret adc in lock inc inc imul sub repnz jne push mov fldcw mov mov jmp lods mov aas out ret int jle decb sub cmp lods lods and data16 inc je adc xchg mov dec cmpsb loopne,pt and jnp imul addr16 jns inc xchg dec sub lea jno pop jno repnz aas mov ja xchg mov mov repz insl (bad) out xchg insl popf pop dec aam pop mov cmp decl int3 loop push inc dec mov inc sbb push adc pop push pop push repnz insl jne aam ret xchg ret daa out mov mov sub mov sahf jge or inc fs es pop out sub jg add mov and xor (bad) fistpll jecxz sbb cli mov adc sbb mov inc sarb aad xor cmp mov test cs push in in dec int3 pop outsb cmp push mov push loop push leave pop adc push aas sub push jg lcall hlt (bad) adc repnz xlat adc sub daa push fidivr nopl ret pusha lods (bad) mov add sub jp jns out movsl or push std jecxz clc data16 fdivs shll insl push test (bad) lock mov (bad) stc mov pushf add push mov out fbstp (bad) xor jno pop fldcw stos fisttp xlat xchg stos mov push jle xorl pushf pushl loopne dec cmc xorl pop xchg imul aaa pop out and gs jno mov mov fdivrs mov shlb inc jb jb or lahf mov rcrl jo mov mov cld clc sub mulb repnz adc rorb or jmp inc sbb call mov test inc test out lahf mov xchg ja xchg cli mov cmpsb mov sub add adc cmc je sahf sbb mov shlb nop and (bad) scas mov jne mov inc jb aam scas jb or fidiv lock lods aaa adc mov mov sti jns push xchg push out repnz sahf ret pop jge push jne (bad) mov jcxz sbb fldenv push lret loopne mov call scas into aas int ret in and cmp testb out adc push sbb mov insb lds orl fnsave jge clc sub in aam rorl jbe inc cmp sbb push mov adc mov cwtl jne adc dec mov xlat add cmp fsubl push inc sub andnps fs or aad dec je xchg xchg pop sahf mov lods gs jb jnp pop add aaa divb repz or fildl cmpsl xchg lock mov pusha adcb rorl push and mov pop mov sub add mov dec jmp cltd sub dec mov push int ret popa mov mov lcall xchg push fldt inc xchg xor call cmp int cmc mov loop jae pop inc out mov std (bad) cwtl or mov xchg pop pusha xchg ret mov sub mov and aaa xchg test fdivl cltd int3 adc loope lods shrl (bad) fsubr xchg js cmp mov add mov jb push adc sub mov jg insl daa push (bad) in sbb inc fdivs xor dec dec sbb cld jmp idiv icebp pop pushf pusha stos (bad) pop addb repz in cmp in popf dec xchg sub push lahf ja (bad) (bad) out ss icebp imul jne mov mov pop lods lds out ss sbb inc xchg dec lods out cmp stos and aaa adc cltd enter xchg mov mov popf push out jecxz out fldcw mov ficompl rcr push test rcll loope add pop scas rcrb (bad) mov push mov (bad) jmp mov add push lahf out mov call or data16 lea sub ja sbb push cmc sub sbb in divb inc mov cmp jae jb mov jo jb (bad) ss push xchg or imul jecxz inc (bad) lahf leave out jne push dec jne mov jl mov and rorb outsl and sbb mov aam cmp push lahf add ljmp push xchg dec adc xor mov sti ret les ret adc cmc and repnz add jg push mov jae insl movsl cmp and jmp xchg data16 test sbb lcall dec or andb rorb gs mov xorb or pop aam push into fwait inc xchg out xchg mov sti adc repnz add js push popf pop xchg dec outsb cmpsl lds adc lret cmp outsl lret add fildll cltd pop mov jnp or testb and gs pop into adc decb adc fistp cs inc fdivrs data16 push clc in fdivrs add lcall (bad) stc mov mov stos dec cld sub ja push insl inc dec addr16 cli jns mov dec insl jecxz xlat push xor xchg lods pop cld cmpb test hlt sub out daa mov aam adc sub leave aaa sbb scas fist ror inc add pop cmpsl data16 mov jmp cmp repnz lds or or add push fadd adc inc and cmp je push icebp aad in xchg pop cmp out loop das daa push (bad) nop adc mov and int jb push adc sub repnz jbe xor inc movsl test arpl xor dec push sub adc test mov out aam sub jecxz xchg lods mov pop sti hlt and je mov aaa (bad) les (bad) mov sbb je (bad) pop adc jo out push jge xchg loopne jle inc push inc in cs in stos jecxz xor mov jae sbb xchg inc adcb xchg lcall or aam nopl adc pushf add mov adc call addr16 add stos out inc sbb (bad) out adc rolb fs jae push out fcmovnb mov (bad) mov js and into scas push fidivr cmp pushf sub or shrl add mov dec push jmp pop push mov pop hlt es std pop xor mov popf adcl movsl fwait insb pushf mov pop sbb mov in sti sub add jbe subl cs adc jg dec fsubp in push jecxz sub jo movsl aad xchg and pop je sub jl (bad) (bad) add xchg xchg lret scas faddl push insb je movsl sub fisttpll sti dec movsb arpl push jnp loop data16 aaa inc mov icebp shll fistpll leave js mov jno lcall push insb dec mov push pop add and pop cmc xchg frstor das mov test decl stc ljmp push dec cmpsl cmp loopne inc push test cwtl dec and cli lods bound enter lahf xor xor push inc adc lret mov cwtl mov rorb shll push test or sarb adc aam rcrb loop dec (bad) xor xor sub nop pavgb mov adc cmp aad lret div dec mov mov ret xchg ret add push ret adc sbb imul sti scas hlt pop mov test out or xor push jb (bad) inc fwait test data16 push roll insl scas clc pop fs movsb cmp pop or jg movl cmp xchg inc mov arpl push inc bound ret gs xor stos ja push das lret xchg int3 or ffree xchg mov jnp,pn data16 movsb mov pop incb mov jbe push dec xchg lods sbb int pushl (bad) mov daa push sub jo (bad) cmp stc daa and adcl mov jnp das loop xor hlt or dec mov in cmpsl adc cs adc cwtl (bad) xor (bad) fmul clc (bad) mov jns push mov jle pop in fs xchg lcall in xor push aad xchg mov push and imul cmpsb cltd sub push scas out sub mov outsl push pop das xchg lcall mov sahf jbe roll push icebp jb push cwtl cmc insb sti cmp scas jg jecxz and mov mov movsb pop inc data16 leave jg nop xor sbb or adc mov sbb xlat out and call sahf cmp mov adc insb dec mov add ja mov rcl cmp int3 jecxz flds jp pop aaa mov add pusha out ds pop daa jbe cltd sti adc das out rolb (bad) (bad) icebp repz in dec mov mov cmp and out cwtl adc push fwait subl (bad) outsb jl jno xlat xor adc xor (bad) mov jle push dec loop cltd sbb jo mov gs mov hlt mov and or out cmp test fs inc addr16 pop test inc inc pop pop cmpsb mov fnclex xor pop add sbb add inc pop outsb pop pop rclb add jge pop pop aam mov cmp xor xorl mov xor push repnz or scas or insb fistpll nop mov mov cmpsb xlat and lret mov sbb jmp outsl or dec mov daa notl or nop dec push pop bound ja and repnz addl les loopne subb adc loopne jl adc push pop jge outsb or mov or sub ljmp sbb mov lret and adc lods cmc fnstenv jle sub inc inc aad gs stos (bad) mov lret es ret das lock adcb or or jns sbb pop lock lods mov popa pop and and lahf and inc xchg test mov bound lgdtl or and jae xchg jnp testl dec inc sub mov jp sahf sub aaa mov dec cmc fs xchg repz loope loop pop shlb cmpsb push add fldcw jge outsb sbb inc sbb push aas add xchg ljmp test pop stos sbb add mov sahf xchg repz mov adc jg shrl (bad) call (bad) sbb pop sbb ret push fdivrl push mov cmpsb or or call jbe or nop stos and lret lret jle nop popf xchg out cmpsb pop popf aaa pop stos scas in (bad) popa dec push push ucomiss xor xchg dec push or mov pop xor adc xchg mov xchg sub ret xor je cmpl mov mov fwait or loopne pop outsl jge cmp bound ret inc enter cld mov sbb cmp fwait jnp leave repnz iret imull rclb outsb or jb lea addr16 stos cmc icebp xchg pop pushw and xor fidivl sub and js cmp addr16 shrl fcmovnu xor cld test out xor inc stos inc sahf push jno mov or loope xchg cltd sbb push adc cmp jo or mov decl fs cmpsb jbe and fs gs adc adc add fnstsw in mov fwait pop push mov sbb sub cmp iret add or cmpsl jmp pop mov movsl sub in and mov cwtl mov and mov add sarb cmp ljmp repz mov push hlt ljmp fcmovbe dec fsubrl xor fstps gs (bad) test sub jecxz dec pushf popa stc dec cmp xchg and ss jbe dec mov add xchg (bad) les aam mov dec aad jle mov push outsb outsb mov and sub outsb jmp jne inc xchg into in dec adc sub push out test mov (bad) popa jbe in mov popa inc push xor push jmp les std or out popf adc dec mov xor push loopne jbe arpl xor ret das lret int lret fistp les int3 ss xchg xor and ljmp cld or test adc jns fwait iret fimul (bad) xor mov mov rorb jno xor sbb xlat cltd adc (bad) lret fbstp add lods cmp xchg es jne push data16 cs ja push sbb fdiv rcr push adc insl ror sub cmpsb xchg ficomp inc jno dec aad into pop pop test cmpsl test icebp (bad) mul aaa ljmp xchg and cmp jmp push or data16 add jno push push loop cs add (bad) bound or out mov lods and arpl mov imul and hlt dec add inc mov jae mov cltd adc inc adc jle imul xlat je adc int3 add fistpll in push add sbb jg lret int3 lods jnp mov mov push push aas jge sub mov push ret mov (bad) call adcb jo push sbb xor mov (bad) sbb repnz aad xchg les xor xchg stos xor faddl sti push mov or jb and sub xor cmp aam scas loop cmp sbb mov arpl int sub pusha mov adc pusha (bad) lcall bound lcall sbb lret jb aad inc enter hlt jmp mov loopne cli rcrb ret jne (bad) in mov push into sub push hlt dec dec xchg stc jns in sbbl push in stos rol jo xlat loop mov dec rcrb add jo cld (bad) jge movsl inc mov mov fistpl imul xchg cmpsl jle xlat jp loop push icebp adc outsb push ret popf push (bad) rcll addl cmp push sbb movsb addr16 rolb and pop jmp and mov dec iret movsl sbb loop dec add push scas rolb mov sub adc sahf shrb sbb mov add lods mov cwtl push test jmp bound inc in cmpsl xchg cmp jp aad subb xor mov inc push je stc mov lds into stc (bad) pop das xchg outsl das push xchg repz inc xor jne subb shlb push test imul cmp ret cmp movsb js dec fildl lods mov sti push xor test outsb mov popa insb std or daa test les popf add dec sbb mov push or or out inc xchg adc push aad pop sti adc push jb fiadd mov mov stos dec sbb cmc xchg push xchg addr16 fnstcw mov stos sub sbb cmpsb sub xor jecxz sbbb mov cs xchg loop xchg adc cli inc adc cmp or jl pop (bad) ret lods xchg cltd cwtl fstpt in xchg cli xchg mov or mov shlb shrl movsl (bad) pop popa xchg dec jne imul fimul dec pop int3 cmpsb arpl in mov inc icebp jae rorl sub scas neg pop fmul cli add clc mov jp jne push cli xlat loope ret inc inc nop jecxz repnz pop sbb mov xchg (bad) iret xor and mov mov pusha lahf xchg int3 cmp data16 test fldcw pop jmp and jo,pt scas arpl pop mov mov nop pop test orl dec das stos lds sete out sub (bad) jbe fnstcw cmpsl or pop and add or jl inc jecxz loope mov add sub rcll std push addr16 fadds jg mov in ds icebp cltd addr16 dec and imul xor cmp dec mov pop int outsb sbb dec inc mov jl mov out push jge mov mov cmc xchg xlat orb mov sub pushf int xchg fadds mov insb xchg push lret pop inc pop popf outsb xchg inc or xchg inc icebp loope lret mov xor imul sbb pop cmp jns xor cltd in in xor and inc sbb arpl mov inc cltd mov loopne movb in (bad) cltd ljmp xchg (bad) test in hlt imul cmpsl inc fwait outsl shr iret jns jb sub iret add cvtpi2ps nop mov add jp in shrb jecxz ficoml xchg pop std aam sbb pop xor stc movsb and lea or push xchg enter adc and lods hlt sub xchg sarl mov fbstp lahf rcr fucom mov cmp inc or and xlat gs or mov add test scas push mov ja pop in xchg xchg (bad) jp (bad) xor imull lods loop mov inc jp jae fcmovne and cmp pop add aas lret in pop mov popf dec fidivr repnz out imul (bad) adc push adc fbld fstl mov add mulb xchg aas (bad) dec xchg xchg sahf jecxz push addl or cmp and int and jg lret (bad) test mov or daa fistl pop lods dec dec mov aaa mov or xchg jmp pushf xor sbbl xchg int3 outsl push loopne sbb and rorl (bad) cwtl aas ret and jno fbstp push jb mov shll mov or into repz mov mov sbb iret jmp sub mov aas xchg sbb arpl mov sbb push fs adc and cmp mov loop dec xchg sbb out pop decb pop stc and dec fmull and mov xchg lods jne rolb inc jp imul dec pop pop pop and inc ja das stos push dec cmp xor fcoml fdivrp ss (bad) imul sub js push cmp hlt mov imul and out or cmpsl dec rcll mov mul ret data16 mov fmull sub sbb arpl inc outsb rolb xor mov xor sar cmpsb pop dec sub addr16 nop add outsb inc aaa sahf loop clc es add inc inc pop push out loopne xchg test mov mov popa sub sub xor pop stc cmp push jle sahf mov lds leave cmpsl daa or jns sahf xchg mov rcrb aad cmp dec mov or loope shlb loopne popf in xchg cmp les daa mov xchg sbb add and in push add jne jb ja cs add (bad) outsl push ja fldcw pop xchg out loop (bad) mov pop mov (bad) mov aam add adc int3 lock cmp call xchg cmp (bad) daa sub push jmp push or inc das pop daa cmc and xlat inc sbb mov les (bad) loop iret jne loopne and mov push sub push pop cmp movzbl pop ret loopne cmc cmp xor imull je mov lret xor insb stc std inc (bad) push and push fcomi push mov (bad) mov pushf jge imul mov daa push push mov ss dec jnp mov jno incl pop (bad) mov mov dec xor icebp inc mul push add xor repz pop pop pusha push pushf inc rcrl cs scas pop xchg mov jns addr16 loopne in sldt cmp jo push mov jecxz xor add insb ror loope fstpt jle cmpsl cmp repz xchg clc shrb xchg sahf mulb jmp cmpsl aad and leave and mov inc mov xorb mov clc js cli fisubrl hlt and xchg jns fcmovnbe xor test (bad) int sub mov mov inc add and insb xor jbe inc aad ljmp sub sub jb xorl fnstsw ds sub sti inc mov hlt inc push lea loope sbb sti lds lret test mov mov mov sub push stc push pop sbb in mov inc push dec std jo sub es cmp in push mov mov cmp insb rcrb push insl push leave sbb pop repz or or mov jl and push pop test lea inc add aad adc outsl arpl adc (bad) loopne jle mov sbb fist lods mov jo jmp and leave sub fisub mov clc add push arpl inc lock lds std and and loop inc popf call out call insb or pop jno or lock pop rcrb out into fisubrl fmuls lret hlt mov xchg stc fisub (bad) lea movb mov pop or movsb sbb or jbe jl imul cmpsl mov in adc and sub loope addr16 (bad) or dec pop lods sbb call lods mov push add mov sahf push ja in fstp jne icebp rol add (bad) cmp mov or ret or pop lea jg jns add inc mov cs xchg sub dec xor imul out mov and in sub ds out (bad) loope in fwait jo in mov or jmp ret push push xor (bad) shlb push jmp jp sahf js pop xchg cmpsb (bad) inc mov ds or scas lods shrb rcl push ljmp dec popa inc out or js scas and add cs xor sahf in pusha lret mov icebp push (bad) scas add stos jne scas jne xchg push outsb cmc sbb out insl push fcmovbe or xchg and cmp mov fidivrl or fcomp stos inc pop xor and cmp mov mov mov jb aad (bad) ljmp and repz in cmpsb aaa cmp int3 in mov call push rorb mov test fistpl push mov mov pop daa pop xor aaa and jae daa daa mov xor or push jp add sbb sub xchg push dec add dec mov fsubl pop pop rcrb nop lret xchg in push outsb jb gs jo jns addr16 sbb mov xor cmp sarb cwtl les cmp xchg (bad) pop pop mov scas sbb push and dec mov sbb inc dec mov test sarl inc movsb dec lds notb or leave jns (bad) cld pop add mov in xor adc adc pop (bad) mov lods fldcw push out hlt cli gs and dec iret (bad) movsb push (bad) xchg push lea jmp inc xchg (bad) lea loop (bad) inc dec push jmp sbb ficomp push imul jle fwait jmp cmp push push sbb mov pop aam cmp jne sbb and (bad) imul add (bad) ret or rcll hlt sbb aaa dec sarb jecxz inc jmp jae leave ljmp cmc rolb movsb adc dec xchg and cmp dec fsubl sarl bound jo lea jnp dec insb pop mov inc neg jle mov cmpsl cld or xchg jnp and orl test pop cmp movsb fsubrl stos sti sbbb adc loop inc mov push test dec das lret hlt loopne push mov and mov or mov enter dec mov jno (bad) lahf pop decb adcl inc dec adc mov push out jp push repz movsb loope insb pop in dec inc mov arpl negb (bad) lcall out sbbl mov mov (bad) in inc push dec sbb inc lret (bad) leave js pusha adc sub push or xchg test ss mov insb nop enter icebp and outsl mov enter inc rorl inc mov cmp xor sub pop fcomip insl repnz icebp push ss clc negl movsb xor popf sub or push mov int3 jo cld out lcall cli sti test stos lods mov int test and mov xor rcl push cmp mov fs out rcl or or mov adc adc push (bad) or (bad) jbe add push cld jecxz fdivr cmpsl mov sbb ficom inc push arpl cs popf jae pop ja inc insb dec lods or in enter fisttp aas jecxz inc or jecxz jle cmp int3 lods xor ss lret call mov dec lock jbe and pop push jecxz mov mov xor daa sub and sbb pusha loope (bad) out mov jmp bound mov fnstenv int3 in mov (bad) dec jb test in jno mov pop out repz in fldenv sti mulb adc sub dec push lds push fidiv mov xchg push and mov sbb imul mov rcrl jnp xchg pop ficomp or dec fwait es lret cmp subl ja (bad) imulb add out lcall cltd mov bound fldcw pop out icebp xchg loope cli push jnp test out push adcl add mov test or rclb imul sti shl or ja mov je mov (bad) vpavgb or repnz push into jo test lods or ljmp mov ret jae (bad) ja jno and sub std hlt mov and addr16 outsb adc jecxz lock push mov dec push inc lcall mov or pusha test push xchg (bad) mov fnstenv mov inc jbe xchg ret jg dec mov out in mul dec cmc data16 inc (bad) leave lods or xchg xchg cltd arpl inc (bad) fiaddl dec cwtl call lods or mov mov inc stos add or loopne pop jns leave frstor fdivp les jnp leave or push fldenv insl clc adc adc cmp add xchg mov dec push mov lods (bad) jne cmpsb inc jno arpl test and pusha test leave lock mov xchg add mov add imul repnz rorb inc sub pop mov and or stc lds in dec mov mov call daa push ret or jmp std sbbl xchg das inc inc js lock sarl pop inc pusha add dec movsb gs sahf or sub lds aam data16 mov adc mov mov nop and xor cs xchg jge jl rcll ja scas in push inc lcall aas mov xlat and dec ss mov push push lret mov (bad) jl jbe xchg dec cltd sahf jb push pop stos mov cmpsb (bad) pop or nop repnz fisubrl nop xor aad hlt sbb addr16 test ds fwait leave and aad aad pop mov test clc pop ss dec (bad) xor add pushl adc lds (bad) sahf jmp cmc inc cmp jns insl dec push and inc mov jbe adc sbb xor mov lods les push je mov xor les je daa sub call int sbb mov and popa or outsb (bad) int fwait xchg inc mov push adc push pusha movsl xor movl push xor scas and notl or out lret pop pushf mov test dec pop mov addr16 inc mov clc cs xor fsubr pop and fsubrl stos dec push loope pusha sbbb add mov outsb movsb pop test mov frstor add ds sub cmp test aaa popa pop pop arpl mov xchg jmp sub (bad) test pop adc outsl out mov xor xor xlat xor (bad) sub mov fdivrs popa sbb add dec and enter imul and je mov and lods scas outsb dec mov xchg pop adc jb pop aas (bad) div mov xor rcrl mov push inc fildl (bad) ss or stos cwtl frstor or or push lahf pop insb fcoml sub push pop jmp ja sub mov sub dec imul cwtl add and fisttpll mov arpl sbb or push adc arpl movl inc dec popa mov sbb xlat sarb aam xchg pushl jecxz sub (bad) xor nop push pop in cli adc xchg enter imul or inc sahf cs sbb mov pop xor cld cmp cmp jecxz loope movsb jno cmp sbb enter or or loopne test std mov ljmp sbb popa mov (bad) lods adc mov stos cmp (bad) (bad) fstpl and or das or dec (bad) fstl add cmp and nop mov (bad) cmovbe imul (bad) xchg (bad) jno test push fldcw cwtd cmp push roll mov sub mov and es (bad) mov insb cmovge xchg jg xchg (bad) xor jge sub or dec xchg lods mov fidivr add movsb sub clc xor mov stos cmp imul out jnp ss push fildl xor pop sbb daa jae sbb icebp xchg dec jae popa aaa (bad) and xor or inc lahf fwait xchg fwait push icebp add mov gs cmp xor clc aaa sbb (bad) dec jl nop or je imul gs and or jmp ret mov pop jge test cmp (bad) mov dec in jl add (bad) gs add data16 push scas mov dec mov pop inc rolb dec inc adc test (bad) fildl loopne enter dec mov int outsl xor cltd sbb nop cltd jbe int3 das jmp cmp mov inc add insl pushf lea adc cwtl sub jnp mov sub push add jecxz mov mov cmpsl lcall jbe pop or cmpsl fisubr inc inc cmp int lret jbe jnp leave and das inc and xchg mov sub pop xlat movsl ror push mov push test push lock add adc mov movsl add scas xor aas inc fsubs js dec mov gs or jg pop (bad) sub xor inc mov xchg cwtl fdivrs mov mov or popf in mov push (bad) out pop std mov stos mov or dec inc inc jl (bad) xchg pop ret jne jbe fdivrl mov jae cltd adc fs fs les mov stos sub ss (bad) ljmp jns jb dec pop das leave pushl pop loopne inc shll loop push imul sbb dec fisub mov (bad) sahf sbb lret push mov xor mov push addr16 in mov add xor lahf mov pop xlat fwait (bad) mov rcrb (bad) xchg inc xchg insl add inc sbb bound adc fnstsw mov (bad) push cs mov sub push pop mov jbe fdivr pop jns pop dec stos insl popa mov push lret shrl stc pushf pop mov adc dec push dec stc jg mov out lcall test sbb sub leave push jl icebp es jmp leave mov jmp adc adc pushf sub lea repz (bad) les mov fistl (bad) test jbe,pt or arpl fiaddl mov loop sbb inc mov and cmp cmp insb jbe mov pop adc aas or push in sbb sub cmp jge mov jns mov fild push lds gs in aaa mov push hlt mov mov inc lods xor lret scas xchg fisubrl fs addl push mov call or test or push fbld sub loop lock gs and cmp jl imul fsubrp imul les and adc dec adc inc xor int mov push ret jge rclb sbb push add dec xor sub jb,pt out mov ja pop subl dec mov ja and fmul (bad) jae in xor mov idivb mov pop mov cli dec pop dec push or mov cwtl aaa aam sbb cmp lods daa sbb outsb push fiaddl fucomp je mov push lock and pop add pop and sbb int mov jp ljmp add (bad) and clc cld mov popf sahf enter adc and add push xchg xor ffree jo ljmp cmp xchg or or push pop mov xchg add push mov mov bound pop leave dec cmp ljmp sub cmp mov bound mul dec mov mov xchg test pop jl pop or orb movups aad aas lock in jle cli xor lods mov jmp jo mov inc jg dec in xchg adc mov sub mov int3 jae shlb jecxz hlt inc addr16 fild (bad) fcoms cs rcr xchg sahf adc test fcmovnb mov rcll fidivr jbe loope es daa push std adc das jo pop cmpsb mov mov in cs adc push je push lock js and aad and pop iret fdivl shll loopne dec push mov xchg cli push scas and or out cvttps2pi test and ret bound mov mov hlt repnz and sbb mov ficom push sbb mov in incb scas mov data16 inc call fisubl das es enter mov popa or or mov pop (bad) xchg (bad) and aad cwtl clc xchg bound sbb or jecxz jbe mov movsl test pop xor and xchg lock push jge dec (bad) std and xchg movsl lods jno cmp rcrl push pop mov push lahf shl push inc jbe out ds jnp out repz adc add pop mov fistl cs add int3 repz ja jg clc into cmp nop inc (bad) mov push mov repz mov dec es cmp push out add mov jp xor es add sbb sbb in test mov push mov inc std adcl int lods adc das add or pop int ja decb shrl cmp rorl out dec in inc sub fdivrl xchg xor add popf jns cmc mov xor aam (bad) in dec dec dec xchg stos pop pop (bad) movsb test repz mov mov xor insl dec jg cs xchg pop pushf arpl ss out jb roll jmp xor into loop fs call in into mov mov cmp enter mov ja daa sub add adc mov adc xor add movb sub insb pop (bad) and (bad) pusha loope leave in ds xor outsb xor xchg xchg sbb pop ljmp lea mov jl adc (bad) jecxz adc or inc outsb fldcw je sub (bad) ds sbb adc xchg in aam push cs fdivrl popf mov push push adc (bad) insb inc mov in arpl cmpsl mov arpl stc fwait insb mov in pop stos lods jbe or push scas aam sarb mov stc pop lds mov add jnp mov into mov pusha shr int dec int adc cld mov cmpsl ljmp sbb (bad) mov call int3 cmp ja push pop mov xor jno mov xchg mov je test xchg jmp sub ljmp mov add addr16 gs std xor aas dec jge add adc jne iret mov mov call and ret (bad) inc shl imul ljmp mov imul push mov (bad) lds aas fwait pop jo jns and or mov push jno test dec cmp in nop in jno fdiv addr16 inc fsubl dec imul (bad) xchg cmpsl jecxz sbb div jge sbb xor fildll jl in mov imul stos aaa xchg (bad) ficom in test mov mov dec test jno loop pop fcmovbe add sbb in lret divl cmp mov aad cmp and insl insl jae shll and xchg xor inc jmp icebp pop dec or arpl sti aaa mov xchg aas or inc cmp (bad) dec (bad) bswap sbb inc loope push lock push push fldenv pusha cmpsl scas xchg iret gs adc into add xchg hlt loope lret pop pop int cmc popa mov jo pop aaa nop jnp mov out jae comiss rclb mov cmp adc imul dec ljmp dec pop (bad) push mov mov mov mov lea std roll push mov jmp rcl xor cltd sub pop ret cmp js sub push add mov ret (bad) inc ja shrb insl daa fidivr mov cmp mov xor (bad) mov pop (bad) xor mov mov jmp or mov jo inc fmull aas push inc sub xor xchg (bad) scas add sub shrb les cli bound or push dec enter ret push loope les add mov dec adc rorl or fs ds jg rcl (bad) icebp in into outsb sub jo,pn mov pop cltd fstpl adc andb (bad) rcrb jl lods lret fs add (bad) mov pop imul in js addr16 test push insb incl fcmovne xor popa mov sbb sbb fldl lret mov (bad) shll xchg xor outsl sbb test aad or mov repz loopne (bad) leave mov lock xchg mov out fstpt daa pop push test sbb enter and lahf ds rcrl sub dec jmp mov push clc ljmp and movsl loopne or or cmp cmc mov imul or in into push xchg ljmp dec mov rol (bad) insl ljmp and or jecxz sbb jecxz dec jp (bad) ja sbb sub jbe hlt imul mov gs or imul or cmpsb aas aaa scas cmp xchg out mov (bad) out add xchg inc nop mov sbb loop xchg push dec out add bound inc dec cmp stc jne push push leave xchg mov xchg mov pop mov mov js pop popa add pop popf pop rol je sbb popf fdivs sbb popf imul mov (bad) mov rcrb jnp pushf fldl mov lock and sahf push sub scas in push push sbb mov or jno rol lds pusha dec (bad) xor mov jl push cli and pop sbb mov sub pop clc leave movsl rcll mov or (bad) xor sub lahf rcrl loope or mov xor pop inc mov inc add jle mov and ret xchg cli loop mov inc arpl outsb cld fdivs dec dec pop sarb and mulb fucomp clc bound roll pop shl imul stos pop xchg test pop adc sub push mov or dec or fucom sub xchg add pop xchg fs push cmpsl in fwait pop test imul inc and inc xor (bad) sbb inc imul iret lret repz das ficoml cltd lret add pop xchg cmp mov jno mov mov xchg stos sub sarb xchg mov and out insl xchg lcall out mov and inc xor into ss cmp pop jl dec adc xor dec mov or mov jo sub loopne pop sub (bad) mov sbb scas mov fsubs cltd adc stc std mov shrb sub outsl jae jbe gs bound push pop (bad) push and jnp and outsl test jnp aad lret xor aas push mov xchg mov or cmc cmpsl fldenv xor or push sub enter fnop lret fcompl ss (bad) in mov mov inc popa clc dec (bad) adc cmp jecxz xchg jge inc mov dec mov sbb adc divps xchg lds fbld pop lcall nop cmpl addr16 leave ds cmp jg roll (bad) push mov call jmp lods stc inc jp sti mov add or loop mov and mov in ret stos xor sub mov xchg js notb jnp fldl mov aaa negl mov int3 jmp push sti sbbl stos out (bad) out insl js xchg cmp testl int3 xchg es rorl ja dec imulb jmp ret (bad) mov addr16 (bad) jecxz push loopne stc bsr pop aaa xchg cltd mov addr16 xchg add cwtl mov pop fldl sar popa std and and iret jle or mov inc clc pop push (bad) icebp repnz ljmp dec sub sub xchg mov xchg adc xor iret mov inc mov or ret xor cmc mov mov inc aas pusha pop add mov or fisubl sub (bad) adc shl mov fisub loop into mov nop sub daa fdivrs pop loop (bad) mov mov daa repnz (bad) mov mov sbb ret sbb pusha in cmc xor pop jge inc in push or and (bad) iret in jg adc (bad) in es add aas jbe ja inc mov ds and push gs out dec mov jl jecxz inc hlt (bad) push sbb pop loopne xchg or fstp mov rcll mov inc push lds xchg adc dec out fcmove cmp aad cmpsl push jb fwait ljmp test sbb loopne sbb push shrb and mov test mov push dec and mov and lods sub jb pop out cmpsl cmp (bad) loopne add popf push (bad) and push dec shrb fiaddl hlt dec (bad) lock insb dec repnz scas pushf adc mov jg cmp cli movsb div push sub xchg add out fistpl xor inc lock mov mov push cmp insl mov in jbe and or es jns mov sbb popf mov sbb push pop rorl lock out mov mov xchg sti cmp or scas mov sub xchg dec jmp outsl push pop dec dec add push or push dec jmp adc scas out and adc adc sub fs lds out jae in jl lea mov cmp rcll andl ss test gs ds iret cmp shrb inc push xchg dec repz or push hlt sbb std push add and nop sbb sbb cli in xchg insl mov mov outsl das mov push and int3 insl lods and lods inc lret mov outsb es push mov add cmp xor push mov icebp mov push mov push rcrb imul adc adc aaa push or push cmp jo sbb frstor xor inc mov inc pop jne xchg das enter sbb repnz sbb stc sbb ds loop lods inc or out (bad) inc push jnp fnsave rorl or xchg mov inc jp mov mov ljmp mov inc (bad) inc adc popa loop inc jecxz arpl and das push adc (bad) jno jns push adc sbb push test sub adc ror les and sub mov rolb cmpb mov jg sbb sub insl xchg out xor lea das dec push test loopne pop pmovmskb mov (bad) xor hlt xor das or pop and xor xchg jo mov mov in in pop loope es rcl cs xlat stos repz mov dec mov (bad) rcrb pop dec (bad) test mov shrb or jnp cld cmp mov sti cwtl enter lds pop repz pop sarb add pop jmp mov bnd lcall gs jmp cmpsb xor mov sub cmp rclb jns ds wrmsr mov sub clc mov ja (bad) scas sbb jno xchg and cmp add jns mov outsl mov and sbb addr16 lock mov pop mov or mov or in mov pop mov test jno xor imul lock in jo aas add test inc leave ljmp clc lods fs xor (bad) into ja inc xchg dec xchg sti xor mov movsb push push icebp push nop (bad) popf sbb mov enter sbb sub or inc stos xor cmp and cs pop and decl lock in xchg mov das fisub mov lret push cli fidivr jmp push pop movsb arpl inc fidivrl fmuls or add mov shlb jno mov jo adc fwait sbb mov cld jecxz mov icebp outsl movsl cwtl mov (bad) xor push mov jle sbb inc and test or movsb rorl (bad) jnp (bad) push jno add xor lds dec pop add lods lods mov push push fwait dec icebp mov sbb pop mov mov dec repnz icebp inc lahf imul mov loope sbbb mov adc sti jbe pop xor add scas and leave rcl loopne aad rolb lcall fisubrl ss sbb add inc out in outsb icebp fisub inc mov movsl loope ds jno cmp push les scas bswap sbb ret loope dec jne loope mov stc and loop cld ljmp or pop mov cltd stc sub int3 ror or mov add aas loop sbb scas inc scas cmp movsl test add test (bad) hlt jno ja cmpsl dec sub push outsl mov dec fcompl sbb or int3 ret scas stos jg stos xor jg push loop aad mov sbb xchg ss cmpsb stc out out sub sahf jmp cmp cltd in inc or jb adc lods daa fmull (bad) adc or shrb (bad) xchg std mov adc movsl pop ret and adcl sub sub out movsl popf xor jns in xor mov rcrb stos xor add in and test cmpsb and push cmovs daa sub push in pop or ret dec cmc xchg jl or cs outsl xor pop jmp aas sbb repz xchg (bad) mov das or popa dec dec (bad) jne dec cmpsl insl das (bad) inc sbb das data16 sbb enter mov aas cwtl push scas push cmpsl and dec test pop (bad) clc dec and (bad) out (bad) out mov repnz sbb aas dec mov xor and dec leave je cmp bound scas insl test or js (bad) mov cld in xor sbb loopne mov dec xor dec pop xor iret js (bad) stos ret sub (bad) sub mov das jecxz lahf fsubp nop or add cmc (bad) jb cmove imul dec or sbb ficom scas and jmp outsb cs jne fnstenv fisttp fcomps test std (bad) cmpsl mov mov (bad) (bad) jb mov dec fistpl lods push fwait jno pushf sbb push pushf or ja and add push test jecxz or addr16 sub mov jnp lods inc push push sub mov push bound sbb or mov loope add push cmp fs fiaddl jae std (bad) hlt inc bound mov mov push xor or mov push add movl es add jnp pop cs stos inc mov cmp js lds aad xchg popf mov test js shlb inc cmp in or adc loope insl scas inc in bound fsubl xor aaa pop ret jle mov mov mov loope and inc mov aad sub ficompl adc pop adc inc cmp pop call insb nop sbb jp and sbb insb mov xchg into push arpl or xchg insl (bad) push jmp sub lds repz sub (bad) dec aad or cmp and add add sbb pushf iret (bad) pop std inc and mov in das cmp mov rcrl inc xorl mov push cmp idivl and lock (bad) into adc jnp mov sbb movsl (bad) cmp repnz mov cs cmp sbb or xchg addr16 icebp jle sti jo pushf or aaa fisubl out mov sbb cmpsb inc dec pusha loop ret insb lahf pop cmp xchg push mov (bad) jmp or mov mov mov mov adc notb pop addr16 js mov (bad) add pop adc dec mov inc cmp in or xor (bad) ljmp aas xchg mov sbb cs es jne dec lods xchg adc cld cmp data16 rep movsb orb dec lods movsb sub sub or nop dec push int3 mov rcrb lret setae jb fwait in adc ds mov sbb xchg aam sti cmc inc inc mov hlt dec test add test or fnstsw or inc xchg or pusha xchg jbe imul sbb fistl push ja pop push jle pop cwtl jmp lahf add leave fnstcw (bad) dec cmpsl mov (bad) xchg test (bad) xchg or mov outsb cld sub int3 out imul inc inc (bad) ret loopne (bad) xor xchg pop lds scas sub jno leave bound jp or cmp imul loopne les mov sbb xor xor xor push push (bad) mov mov add or sbb push (bad) aad xor cld in (bad) mov loopne jbe call lahf cmp sbb aas stc int cmp adc aas mov sub movsb xchg data16 div dec popa cmp mov push and pop pusha xchg lock push decl aad arpl jmp or fistl int outsl jns call pop adc lea cmpsb pop mov mov int and lret mov cmp mov aam fmuls (bad) popf (bad) xchg cmc aas sub push cld pop xor mov jp cmpb in mov outsl fsubl sub sti jo loopne push xorl mov insb repz push jb pushf or mov adc idivl mov jne mov add or sub faddl jg js add rclb add sub mov pop xor mov lea xor cmp mov into lret pop imul cmp (bad) addr16 gs loopew outsb xor bound mov test inc mov adc fidivr push mov or stc aam (bad) fisttpl dec mov out mov popf add mov std jbe in in mov jno push les movsl mov pop out adc xchg pop pop ror shrl push aas in (bad) stc push mov push inc in (bad) sub push into jns data16 in cmp shrb out ljmp xor xor push gs inc xchg fcomi test or xchg (bad) fildll les testl inc incl aas mov push les dec or ljmp mov jb sub insl or pop popa rol lcall or pop mov rol sbb push jnp push in mov xor test imul test repz cmp pop push adc shlb (bad) jg int pusha mov cmp cmp cmp cld cli xchg lods sahf (bad) jb jae fcos nop dec (bad) shlb ds adc and jo cmp rorb inc mov rclb jecxz xor cwtl (bad) lea push jecxz jp loop clc out in sbb xchg mov aaa rolb stos shll pop dec in sub ret push test sub in jl ret scas fs mov (bad) test clc dec ds sub sbb repz imull in popa or pop mov inc sbb enter insl ret cmp push inc testl dec sbb mov mov test hlt mov clc jge mov lods cld jae repz cmpsb je cmpsb adc jle cltd sub in inc jmp cwtl cmp (bad) mov inc jle inc popa or jle hlt (bad) aaa mov pop daa fldenv insl daa iret imul jne add decl pop out sbb adc push rcll or cltd jb in scas or or cmpsb mov rcl and dec pop rcl out jnp jecxz mov inc cmpsl aaa jae and outsb xor jo pop test xchg int3 xor pop jl dec jg mov inc and push push mov pop pop and movsl aaa or sub (bad) icebp dec xchg decb or inc mov iret (bad) pop sahf lea xchg in notl stos jp in push mov mov or push mov jbe or jp push test setp pushf ret inc pop das push push adc and gs pop fs xchg repnz in scas clc dec mov mov (bad) jo dec inc mov out arpl sti jbe push xchg popf out dec in add inc out and xchg sbb not sbb mov aam jnp mov push out test jg xor mov cmp das and xchg clc repnz jbe sub jmp sbb mov mov pop mov pop xchg or fwait les mov in mov jge jns into pop sbb arpl jbe cs repnz ret imul mov pop push sub stos mov adc jge stos fcoms cmp add (bad) sbb jae pop scas rolb xor xor xchg (bad) je lds jmp repz std mov test adc pop sub fistpl lret push cmpsl cmpsl mov mov sahf and insb push mov xchg fdivrl gs test into nop (bad) lcall stos inc cwtl fmull rcl adc incl (bad) shlb mov out push test fs adc sub call fldcw (bad) lock je xchg repnz call pusha mov insl gs inc ret dec ds xlat faddl cmp mov out jl dec hlt loop (bad) or loope and mov outsl and shlb mov sbb jecxz imul inc xchg add sbb mov mov cmp add dec subl cmp xchg daa add jae sarl in lea dec (bad) and push lret inc dec fsts ds in sub out jmp test hlt sahf xchg sub pop test pop push aas inc popa cltd pop arpl daa push rorl sbb arpl mov mov daa les loop mov xchg fcoms jbe lods ror mov push sub mov frstor std mov mov add test push pop arpl mov add fnstsw mov aas dec lock cs mov imul cwtl pop mov mov icebp sarl es cmp mov in cli xchg pop ljmp outsl imul imul xor mov adc sbb lahf pminsw pop (bad) mov xchg push mov sbb lahf pop sub sub test sub cmp mov aaa and adc jne or iret hlt cmc icebp xor mov (bad) lret shlb and xchg (bad) in js (bad) pusha int3 pop dec test lea mov pop insb movsb in dec jmp mov xchg adc lahf jns sub stc stos jmp jae cmpsb negb push lods es dec (bad) pop push lock sbb jno enter jecxz mov enter shll fucomip mov xor sahf inc xchg sahf pop loope (bad) les shrl cmpxchg sub push hlt push arpl or add (bad) scas test cmp pop cs lods hlt not cwtl nop fmull icebp or rcrl pusha les pop fisub sub fwait push sbb loope fnstsw loope fsubrs test scas mov (bad) dec cmpsl rcrl push lods je fild dec fs mov pop rcrb pop cmp mov jp enter ss sbb daa add dec int or adc dec jbe xchg xor mov jbe outsl stos xchg das sub push dec or xchg push cmp fidivrl daa js lods pop pop stc rcr pop sbb jge sbb mov and sbb das or aas push and or jo mov shrl lods scas and imul pop or pop fcomps jnp js xor jmp add jg sub test outsb cwtl imull out ret mov mov jmp xlat jmp pusha xchg inc out ja sbb add sub arpl loop adc mov les loopne dec or add add pop push adc inc pop inc sarb bswap repz jns sbb ljmp sbb in and cmc and div add inc push adc add mov mov and pop into ror jle jns (bad) ja and in (bad) fwait mov cmovae jbe cmp ds lds and push adc adc mov cmp pushf pushf mov and out cld leave pop and test shll push cmp add std arpl mov lods shrl outsl mov sub stc xor mov stos shr int add out xor lods rclb sbb aaa lds cmp xchg lods and xchg xor fwait mov daa imul jbe xchg lods rcr pop jnp ljmp rcrl push call iret (bad) jno in sbb mov movsl aad es xchg xor mov in or cmp xchg aaa repnz add mov rorb ret push movsl loope sar (bad) gs mov hlt pop mov xor std sbb clc and inc cs and push clc sarb dec ret call movsb jmp ds sub mov aam xor ss or test aam dec fild cmp fisubr je rclb icebp pop fsubr dec mov xchg scas clc stc mov sbb lret jecxz xor rclb icebp gs sub xor sar xchg cli pop inc mov jecxz cmp inc xchg and arpl or jl sbb fcmovu cwtl arpl jo addb (bad) aam out fwait movsl push scas cmp sub pusha inc xor xchg je,pn loope mov adc in aas (bad) cmp icebp pop jmp jle movl lock popa fdivp arpl insl xchg (bad) je and ficom scas sub dec cmp inc or cld sbb pop pop fbstp pop lods pop and cs lods add roll stos mov cmp decb sub mov mov pushf cltd sub xor cmp inc add xor cs (bad) jp out push and pop into jno cmp mov jle dec jg push out stc adc or movb stos in ror xchg or lods sub mov imul push sub sbb cmc cmp roll stos fistp xchg add ret insb int push pop cli cmp mov fsts ja std in mov cmp pause mov mov adc outsl repnz mov push jbe xchg (bad) mov dec cmp (bad) arpl ret outsb jnp adc jmp and pop fldl pop lods mov pop mov mov repz inc testl iret or popa arpl push fstp inc push push add stc inc pushl push (bad) mov dec ss jno pop or ss sbb xchg jnp adc sbb loopne mov or mov pop mov lea rcl gs hlt push jns push into rcll idiv inc jl aas inc packssdw ret xchg cmp mov ret hlt cmp inc push stc cwtl push inc add and out add ficomp (bad) imul movsl jae adc cmp iret mov mov stos jno mov scas inc pop jns push pusha mov jae dec mov lds cmovo jle sbb nop test add sbb pop insl movsl movsl out in sub xchg insb subl and popa insb mov adc les dec test out addb jle push xor cmp adc fsts loope lock pop xor mov xchg cmpsl adc call and push or lock out xor sti popf cmp and or dec lds push cwtl out mov leave jecxz lods stos sarb and dec push cwtl repz daa cmpsb stos mov push loope xchg xchg sar inc gs hlt pushf in mov dec mov clc add jg aas dec scas inc and push out mov leave scas push dec (bad) daa (bad) cmp es mov loopne adc inc push (bad) dec mov xor loop mov imul pusha sbb and xchg dec movb jle xchg mov jno fiadd std jne ja sbb add jl aas mov mov ss ljmp lret mov (bad) mov imul in repnz imul les inc repz inc movsb add test repnz adcl push cmp (bad) into mov out mov rcll jbe or mov fildl xor cmp pop jb cmpsb dec pop out insb stos js ret vcvtps2pd repz rcrb mov fld mov fcoms jmp mov movsb sbb and movsl mov sub jns mov lcall sbbb insl fcompp repnz lahf mov (bad) imul call jmp aam and pop ret and gs int3 ss dec sub inc mov test ss inc xchg mov mov call mov mov or fidiv lea or fiadd dec mov imul dec pop (bad) frstor xor sub dec enter (bad) mov fwait gs fstp mov (bad) cmp mov inc sti xchg dec loop cmpb push fwait push (bad) cmp mov adc aaa test push xor fmuls fs fs repz inc pop je dec mov and mov pop fistp ror mov rcll push in or xor je mov xor xor pop call popf prefetch inc mov xlat fsubs fs mov test mov stos movsb mov and push push sti and test dec lret shrb int3 hlt dec lock cmpsl add call divl out enter cmpsb scas inc cmpsb aas sbb dec sub xchg cmp xchg xchg ds jmp subb xchg lret movsl rcr inc pop lret pushf sbb pop cmp sbb sub lahf repz xor dec inc jo and ss repz and dec dec add outsb enter (bad) sub scas sub mov adc addr16 push jo cli cmp adc repz sub stc and in es cld lods fstps pop sub imul and stc push pop mov repnz mov roll test sub pop or sbb xor cmp dec mov cmpsl dec shlb clc dec leave mov mov loope repnz stos cmpb andl cld les mov adc sahf insb jns cwtl test in pop and mov daa ss fcompl mov rorl addr16 adc mov imulb cwtl mov cmp lcall subl in js test ficoml sbb fadds pop push inc aas mov mov and jns nop test add sub xchg sub arpl out jae mov movsl test mov cmpsb data16 pushf mov pushl sbb cmp mov es addb fcompl in mov aaa mov vpaddusb xchg dec push cmp ret push ja aas in lret add mov xchg adc test leave dec sahf (bad) xchg (bad) push stc mov mov sbb test jno xor fsubs popa in clc stc imul or sahf mov subb mov iret xchg add add xchg fisubrl push adc stc aaa jl sbb pop adc adc sarl mov fnop aaa and xlat loop xor into jge fstl stos pop inc mul jecxz dec stos mov push dec dec sbb mov adc test sub jae out loopne ret dec out mov adc outsl outsl cmp icebp iret aaa es cmp sti (bad) ja jle (bad) fldcw cld sarl cmp adc gs (bad) push pop xchg adc cmp inc lods sub (bad) rorl pusha mov aam inc mov (bad) jmp mov ds idivb mov mov pop mov movntq mov repnz and js pop pop or add hlt andb mov push push test add or push mov (bad) push (bad) xor sbb mov imul inc and pop add popf dec fisttpll jo sarb test cmp pusha testb push test popl add subps xchg adc xchg pusha xchg leave xor int push dec loopne in add in (bad) lds ret int add loop mov je fisttp mov cmc add insl dec jno (bad) push (bad) cmp fidivl cmp push jmp dec add cmova xor loopne les and stos adc mov subb xor xchg jle adcl mov js idivb aaa test xor mov rcrl flds lahf jl cmp sbbl addr16 (bad) mov test inc mov inc inc cmpb imul (bad) (bad) cmpb inc rcrb jnp and scas adc jp jmp lcall push aaa mov fwait push fstl rorb dec sub das adc (bad) mov xor xchg jle push roll imul inc aad sbb int3 jns dec das xor shrl test add (bad) (bad) sub cmp leave adc imul push add je push imul mov lret (bad) test xchg pop mov mov adc sti mov jge jnp (bad) int3 add mov jbe push pop sbb pop cmpsl stos xor test and fstl or loop pusha scas movb xor ss test scas xchg add out (bad) xchg xchg and cmp mov jb cmp sbb lds pushf (bad) cmc arpl dec jb (bad) bts test sbb in clc mov jno mov rorl fildll or pop sbb cmp clc aam mov stos call stc adc cld addr16 std add in mov ja hlt lods adc fiaddl repnz inc stos cmc jl enter add scas out jg sub jne icebp mov xchg adc lret gs cmp stos test loope cmp sbb scas ret cmp push lock and test mov mov iret ror jp scas loop xlat ret inc ret enter pop arpl mov add addr16 or ficomp mov (bad) jnp fstpl mov push mov xor (bad) (bad) lahf mov fisub add jns mov cmp cmp arpl iret fnstsw nop fld gs push shrl pop fsubl dec sbb fimul sbb pop es loope hlt xor mov lock daa dec movsl mov mov (bad) ss jo ret sbb lods push in push (bad) dec sbb dec jp xchg (bad) mov pushf inc into pop xchg sahf sarb imul in inc js inc or dec roll shl mov movsl fildl test adc lods stc add lret scas iret lock nop xchg (bad) fnstenv test fcmove mov sbb sub jne and jne inc inc pop lfs push repz enter xchg or cmp mov inc and jbe dec es jp mov sub cmp xchg jnp mov hlt dec jmp jl sahf (bad) in push push (bad) xor and inc out (bad) dec inc enter je je stos pushf cmp outsb in mov cmpsl push orb call or fcomp or loop arpl mov xchg lods adc xor lahf and push adc mov scas dec cmpsl add addr16 popa lret push or sbb imul cmp lods fisttp pushf (bad) call push jbe cmp flds notb dec mov adc outsl lds xchg loopne jle fstps xchg xchg mov mov push jg ffree push push mov daa out arpl mov push cwtl movsb dec mov push jae jmp inc cmp add jge push and adc movsb leave je mov movsb sbb dec cmpsb ret lcall out clc sbb sub mov out xchg adc lcall push jno cmpl push fdivs add pop mov mov sarl lcall faddp js push mov sbb mov int jnp mov xchg jp movsb cmp (bad) or mov push cltd push xchg test les mov and imul push push cmp lret adc mov jg pusha fstps cmp gs pusha jne fstl sahf loope jne and notl dec sbb outsb mov xor add mov inc push xchg or lds dec mov or inc sub mov std sbb popf lcall add leave sub pusha stos std push jae paddusb xchg dec popf je adc (bad) adc inc xor mov das xor (bad) cwtl in xchg in cmpsb xchg fldt hlt xor loope xlat jge int push sti (bad) adc insb cltd ret sbbb nop int in inc mov scas repnz mov fyl2xp1 mov (bad) or lret mov lret xor dec push fldl2t dec cltd cmp push inc fldcw cmpsb and fiadd cmp roll dec pop xor inc mov inc test jb add mov xor cli jae xor cwtl ss or mov loopne shlb rcrb cwtl sbb and test aad leave adc fisttpll xchg clts pop movsl mov and mov bound leave mull and js out call pop or sub enter int3 cltd ja mov add out int mov xor dec jecxz data16 adc rcr stc xchg cmp mov add cmp xlat (bad) jo jle and imul xor mov (bad) into cwtl cli push fsubrp sub jg cli cmpsl add inc sub cmp lret push mov jecxz mov mov push loopne xchg jle outsb aas mov mov mov jno aaa xchg push inc mov mov loopne pop dec jp adc mov ss (bad) and push lahf sbb cmp rorb mov addr16 inc outsl xor lret int pop jmp mov adc pop jne pop dec xor jnp push aam and (bad) push inc lods dec pop das sbb ja sbb cwtl in adc add fsubrl pop sub pusha cli aaa push sbb xlat xchg mov lods (bad) std jbe (bad) mov cmp jmp dec mov lret int test mov lcall inc cmp lret xchg mov (bad) and and cmp or imul jno mov sub and mov pop cli mov ret mov jae std aam inc and ja xlat iret inc mov ret sar lahf mov dec and pusha pop js pop cld cmp lock inc jl popf (bad) or and ja das (bad) data16 (bad) lock loope aas in jne ja xor popf lock mov out add lret imul call pushf jo lcall pushw lock sub inc mov xchg sub cmpsb jmp jmp clc mov hlt cmpsb xchg mov ja arpl fisubl ret inc cwtl imul lahf pop notl cmpsb push lcall adc (bad) and xlat jb repz pop add sub test repz adc ficomp mov bound (bad) lods ja stos push hlt cmp jecxz (bad) jo out jp fstpt push iret std mov fistpll and cwtl xorl inc push sub push fistpll dec cmp or push mov xor mov loopne jo pop push in add and mov sahf cmp mov mull daa xchg push jne adc loope in inc mov insb or sbb into or mov pushf mov rorb sub nop out pop (bad) jae mov daa adcb inc adcb or repnz lret call psubusb push pop insb lock mov xor mov ja add dec sub roll sub movsb and cmp pop lahf mov into adc rcrb xchg (bad) (bad) std jae dec jno shlb mov sub fwait imul out js push jp push movsb adc ss sub repnz lds add jecxz sarb lock aaa subl cmp cmc inc dec cmp mov stos xchg push or and (bad) je add ficoml sub aas cmpsl out adc mov mov inc add or dec mov mov (bad) mov inc popf pushf cli outsl shrl xor imul clc je stos sbb lahf inc add outsb push shl adc mov lret xchg push fdivp imul pop mov sbb sbb in movsb mov fst mov ficomp pop pop cmc stos pop mov sub fwait push ficompl js icebp or adc dec mov test movsb jno cltd dec jnp test fildl insb xlat int adc fmull add sub mov rorl daa mov scas (bad) mov sub out xchg xor andl push cmpsb add inc outsl cmovg cmpsl inc pop shrb fsubr mov in outsl fcomps jle xchg dec das pop or and sbb mov xor jge jns xor and xchg add movsl frstor pusha add mov aad mov pop pop fbstp jl arpl push sub icebp xchg xchg cltd xchg cli stc mov movsb shl into loop mulb sub mov mov mov inc (bad) and lea add mov js ljmp xor push stos mov insb cmp sbb mov add lahf sahf enter xor xchg push es ret push push insl loope lea in mov loopne ficompl dec fmull movsb out adc data16 stc cmc push push add iret xor ss lods cmpsb xor cmp xchg nop out jae jne and das outsb fdivrl imulb fildll jge sbb mov push imul sbb or push gs fs mov sbb lret pop sub out jo mov or mov cmp jbe jmp sbb push add adc pop mov mov (bad) hlt daa and push scas lcall (bad) adc jp xor ret sub mov jmp fildl leave inc push lds xor stc mov fwait (bad) int sub adc mov inc sub push subb adcl sbbl cmp or xchg xor repz inc mov push adc repnz mov xor and fs pop mov aam dec stos ret push sbb repnz mov outsl aad aam enter push mov jecxz or cmc inc (bad) movsl sti inc push mov xchg ja mov push sub mov je frstor loop repnz xor aas or push mov inc out sbb xor shrl sub in pop fcmovu sub xchg jb or cmp lret mov and (bad) sete jb shl ret lds xchg rorb cli xchg test test push push jge jmp ror and mov lcall (bad) das inc adc nop fcomps mov (bad) add out cmp cmp or cmp or loop test gs xchg das xchg cmp or xor inc jbe pushf mov cld shlb xchg mov pop stos sub cmp mov arpl sbb cmp idiv mov popf gs (bad) in mov lods adc jmp loope dec jb lods sub leave out repnz repnz cs mov xor push std ret add aad mov xor or mov inc je cmpsb cmp or (bad) xorl pop dec aaa pop xlat mov lock and scas ds sti sbb in pop pop pop adc xor mov scas in ss lea std repz cmp dec xchg jb dec jge jp pop leave lock mov and push jge or xchg sbb xchg popf and and dec into das jae sti mov icebp mov pop mov sub loop fwait (bad) (bad) out shrb sbb adc jle test or fwait rcr xor xrelease lcall add sahf xor push or loop and mov sub xchg mov in iret push cmp xchg or mov mov push inc cmpsb sbbb int cltd sub inc pop push jmp push gs out fcomip sub int icebp (bad) and nopl std adc mov push fistp subb cs in pop outsl xchg (bad) push push sbb sbb aad fwait sub popa sub mov mov ja xchg push sbb push (bad) jae out xor mov in xor jg (bad) or mov push xlat iret cmp jno push pop jno sbb jae in mov ret ret (bad) daa sub sub mov int andb add jecxz loope hlt cmp sbb sub shll pop ja push cmc mov sbb scas inc loope xchg adc jne,pn mov xchg pop add psllw add or sbb ret mov dec sub xchg sbb xchg push cmp test cmc adc idivl stos (bad) repnz push mov or fwait add dec out (bad) mov mov hlt movsl xchg loope iret or pusha dec and js mov lahf dec call mov push xchg add jp cwtl ja sahf movsb add test dec fcomps imul xchg bound out push lahf sub and stos loop inc inc test mov pop cld loop clc aaa sbb ljmp sbb xchg pop jns insb jo dec xor sbb sub mov outsb adc (bad) or cwtl mov sub cmpsb add mov ret mov into pop call fwait sub loop add (bad) sbb xchg sbb mov push add mov imul imul movsl idiv ret mov pop dec fwait (bad) sbb je cmp cmp and xchg scas cmp test jne sbb ret ds adc cmc dec lds mov loop mov jno lcall xchg adc dec imul push nop inc xchg dec dec pop inc fisubl cmp fstps loopne js mov ds jle mov dec mov mov push mov daa hlt jns jmp push sbb flds clc iret mov pop aaa in mov inc out sbb mov push dec loop sub cmp jnp sub fwait pop dec or and popa lcall sbb fnstcw push in add packsswb (bad) xchg test daa cmc pop sub repnz cmp fs jns mov (bad) mov mov cmc or cmc mull lahf vpmadcswd push mov insl lahf loop int3 jmp nop jno scas or sahf inc dec sti clc push test mov dec out aam in dec jnp xchg into pop insb mov js cld in leave (bad) xchg pusha inc mov adc iret or lret mov rorb sbb shll push jl xor cmp imul inc popf sbb mov movsl inc cs push (bad) repz jp mov jbe mov xor jmp sub and outsb dec dec iret inc dec mov xchg jne loopw pop mov add cli mov jmp cmp into inc push inc xchg jge mov aam xchg pop pop cwtl pusha hlt push aad mov dec cwtl (bad) jbe add gs repnz scas xchg sbb fwait sub movb mov and and and xchg jg cmpsl sub xchg inc or sub mov pusha or dec push outsl arpl cmpsb push fidivr fnstenv std mov fwait repnz insl push dec mov out push lea jbe enter (bad) lock push adc xchg mov adc mov dec pop icebp faddl and ja and sub sub enter xor std push mov jecxz ja mov rolb inc mov xchg adc sbb sti imulb xchg insl popf sub dec cld inc test jg push (bad) fdivl mov fistp inc daa arpl scas aas sub js aas and cmp add push arpl push icebp ds leave dec bound mov leave dec adc fnstenv inc jae sbb or add test das int sub (bad) fdivl ret or ret mov mov jge,pn das stc mov inc sub xor push pop cld mov clc lds mov in sub sbb lahf cmp in (bad) fild pop xchg call mov fsubrl and aam dec stos mov cwtl inc out sbb pop jns inc out mov call fisub inc pushf loop dec push cmp xchg and mov outsb add push in cmp insl pop xchg mov ja int mov outsl and or add in insl into in add fistl or (bad) mov adc (bad) (bad) jbe or (bad) decl in dec adc mov push mov jno pop js idivb dec movsb lcall push pop xor mov adc (bad) hlt std push (bad) loop fldt xor loop nop dec mov mov mov pop and test push fwait imul lcall mov xchg sahf xor or dec fnsave aaa add push lcall jno scas (bad) mov pop mov mov jno and call cmp int3 pop sbb (bad) and mov int3 test sbb icebp notb lds and mov or mov leave mov sub lcall cmp or (bad) jnp ss out xchg int mov mov adc pop mov dec sarb sub in jne aam jle int3 aad loopne loop mov add cmp sbb pop jae or xchg ljmp cld dec (bad) mov rcrl (bad) loopne repz or aam aam inc and mov xlat xlat (bad) mov int add inc nop push popa je pop je jg sbb imul cmp adcl xchg or movsl movsl arpl into mov fmull add push stos loop add mov jno (bad) mov xor sbb dec addl out mov mov jns inc push jle jb cli jb xchg jg cld sbb adc xchg clc jg sbb inc xchg adc test add push pop in pusha subb stc fidivrl iret je sbb pushf test fst cmp mov adc cli loopne jl mov jne int cltd call or xchg push scas data16 stos lods cmp push test (bad) mov cwtl lcall push ror cmp lahf leave icebp aad pop inc out in add lea mov cmp inc adc mov jmp or pop sbb push notb sub adcl mov push inc jns mov mov roll and jae movsl subl xchg adc pusha ljmp popa aaa in mov xchg jo pop notl cmpsl jo je xchg xor les cmpsb push test pop jl out div jp push or js cmp into push pop cmpsb into test and push pop adc inc hlt in cltd ds xchg dec or rcrb xchg fs mov scas cmp mov and out mov aad les in sub cmp xor sarb add lods iret notb jmp mov mov jns inc push add pop ret push inc adc add lret or ret mov pusha ret divl and jno bound sbb xchg add lahf jp inc cmp cmp (bad) lods cli ret or push fcmove in lret or adc push pop push cmp leave pop dec push mov cmp lock sbb data16 hlt jp sub movsl loope daa cmp je jge inc es fwait mov xor mov mov int3 test lods aad scas je std add push movsl mov pop jg es cli (bad) aam enter xchg or loope pop inc mov clc sub jmp out pop lret (bad) in sub sbb scas push popf or pop pop sub stos sbb pop in cmp pop fwait add lcall sub and fdivl or pop ret and mov lea push adc push sub push or aas xor mov mov cmp xchg xchg loope aad movsb add or xor sbb cs dec rclb pop or mov lahf pop mov pop fstpt adcl push push mov iret and jns cmp jecxz ret lds sub shl jns jo lret mov mov data16 mov movsl xor inc fdivr inc rolb call inc add ret rcll divps xchg into (bad) popf cltd movsl mov adc cld call into sti push ja (bad) dec enter sar addr16 insl inc scas icebp adc xchg fmuls ss xlat jg push (bad) adc fwait or cs (bad) cmp lock sbb push hlt repnz ss (bad) jecxz add imul lahf fistp lret mov sub adc aas out ss mov stos movsl sbb dec and (bad) jno inc fildl sub jne mov xchg lret scas ds pop or or insl adc sub mov sbbl pop mov sbb add lahf jno stos or adc test sbb repnz in fldcw outsb sbb sub (bad) mov popa push cmpl iret adc imulb bound inc jg jae cld sbb sub push inc dec or icebp call in adc pushl mov sub cltd pop jnp mov divb xchg lret push (bad) xor and aad lret inc cld imul cmp inc lahf cmc nop push push aaa inc repz dec push sbb push jmp mov ljmp sbb mov clc arpl nop inc cmpsl int sbb aas into jbe xor gs outsb sbb sbb stos add sahf sbbl std rcr movsl bound push jb jmp xor jp outsl imul mov rorl jle ret (bad) dec rorl or leave and neg sub dec fincstp je sbb ficom or sbbb push push xor sti cmp jno jae loope aam insb lods fstps inc (bad) sbb lock leave gs push mov movsl outsb adc popf and push sahf std xchg dec shll xcrypt-ctr lds push add push scas mov push dec std or pop pop inc mov adc jae add js ja sbb in test xor jbe imul xchg xor fsubrs push dec lahf (bad) mov int xor js jnp je sbb iret cmpsl inc (bad) mov pusha inc in dec cwtl loopne sbb jmp adc push das jge mov outsb addr16 scas adc push out fisttpll push or lret loop mov jo insl and fnop and insb ds sub fsts and lret ret jl inc mov out loopne jbe fstpl movsl and sub das adc leave je add jecxz lea push hlt imul fcomp or inc aas cmpl (bad) cmc mov cltd in jl inc pusha lar xor lods popa ja jmp or xor mov scas push jae inc pop jg adc mov in and push mov je mov adc push inc cli repnz bound je aad (bad) lock sbb (bad) or dec in push ja sbb jg xor pop aam (bad) jb pop and lods push dec mov movsb or (bad) adc dec sbb xchg (bad) mov mov inc in bound push inc lret xor icebp mov mov iret fs mov adc loop imul xchg xchg setno or sbbb pop cmpsl popf in jl aam iret std sbb hlt int3 dec mov push jae in (bad) inc cmp sbb test push movsb cld dec outsb xchg pop jns inc mov shl aaa dec inc push pop out lret (bad) fstl sub adc aad popf or nop insl xchg or xchg mov push shrb mov in cmpsb mov cmp std ret mov xchg mov insb jl mov pusha mov je inc sti test test adcl xchg imul imul jb je sbb jae adc lahf cmpl adc movsb scas dec rcll jo pushf mov mov sub popf hlt in sub mov mov and inc push xor push mov push push jne outsb test cmp leave lea fimull jae sub pop dec mov inc das nop in hlt (bad) mov jle xchg adc cmp push repz out push es xor cmp add loopne sub mov inc sbb cmp adc inc mov and pop push pop push fisubl sbb daa lods int dec inc ljmpw push notl insl dec mov mov cs adc movsl push pop pop stos mov aad rol loop inc xchg into xchg (bad) loop jl ds xor lock pop fadds sbb mov fist mov cmpsb jmp dec outsl push mov inc adc stc fistp xchg xchg aam mov jge bound rorl add xchg ss mov sub mov sbb repz mov out jmp (bad) in lahf call (bad) jne sbb push jno data16 test sbb rclb jle pop enter mov dec ret push aam scas xchg xchg scas stc popa jmp pop pop test shl cli and push rolb mov dec fsubs push test leave mov fidiv imul add leave into je fisttpll cmp pop js dec (bad) leave movb bound (bad) test fiadd cld ss pop sbb or jmp adc mov (bad) popa xchg je faddl adc dec stos out cmovae aaa fisubrl cmc repnz mov jnp fldt out scas sub sbb jl rclb mov xchg sbb dec sbb sub stos lret lret hlt shrl int3 ja push mov xchg test dec push daa cmpsb xchg adc stos lahf fmull loopne add movsl lret stc pop xor out hlt je sahf and push lret stos cli inc pop jb out outsl lds fisttpl add xor lcall push mov leave and pushf add xchg push dec jle lods sbb cmp hlt push rorl fstl xor pop (bad) lret (bad) dec (bad) jne in push in push scas (bad) mov stos pop sbb repz mov pop jge jnp mov push sub pop das xor cli mov adc mov das outsl adc loopne cli decb icebp cli pop mov mov xchg cltd pop and sub pop cltd or xchg sbb lret mov xor insb mull dec ljmp sbb loop ficoml xlat and jbe sahf jb cwtl (bad) sbb cmp cmp int3 push or pushf or mov xchg aam movsb sub movsl xchg xor movsb xor mov jmp sub inc int3 scas pop lea cwtl cmpsl jno dec cmc movsb adcb xorl push imul or test adc pop das mov mov imul sti inc rcll sbb or pop sbb andl xor loope popa fsubl push ror jle adc leave fs jb (bad) loop (bad) movsb addl out mov inc add inc stos inc dec in push (bad) xor lret or cmpsl mov pop jp js mov mov lahf inc push pop mov add xor iret int3 mov ret sub pushf scas xchg xchg xchg sbb aad jno cmp mov clc mov add mov push in add cld mov or rcll mov mov frstor ss inc scas sbbl xchg adc mov jns cld popf into mov mov add lahf mov jge jns test aaa gs pop fmuls nop pop pop leave pop push fisttpll ss xchg sub mov xchg xchg ss in int3 pop ds mov ds jo and jbe shl aaa add cmp out inc fisubl test mov adc (bad) nop jle dec or mov adc adc clc mov dec in testb inc imul lahf test enter arpl in or inc jmp cmp fstpt insl mov rcrb ficomp lea scas ja movsl pop inc jecxz jae ja inc adc out movsb stos lock jne push lret ffree les sub add xor xchg fsubrs mov sbb out lcall add in jb jmp test cmp mov ror mov test (bad) cmp nop pop inc adc call out sub mov jae jae adc push or mov sbb add stc add rorl clc add add mov inc cmp popf push push je outsl add add mov test add nop es xchg pop push and pop ss fcmovnbe jmp sbb ds pop xchg popf test mov inc bound inc xchg leave ror faddl repz jno ror cmpl xor popa in xor push pop (bad) fiadd and inc arpl rclb outsb xor sbb inc in or xor aam or mov cmp pop in dec hlt addps (bad) fadds xorb test aaa mov mov mov add push adc adc cwtl mulb (bad) (bad) aas aas int pop jne jmp add sbb into fsubs aas adc inc cmpsb icebp ret or sti sbb sti cwtl mov imul ficomp and push lock sbb in lret (bad) and fwait cmpsl stos sub jae iret or mov fsubr fisttp jmp or sub xchg push xchg cli push and dec and cmp sub fwait or mov jle dec jp addr16 push mov add test pop pop xchg and (bad) dec movsl mov jp ficompl adc jp mov xchg lods jnp arpl mov outsl and mov push cmp test (bad) scas in in xchg fistpl cmp xchg dec sahf xor cs or and movsb mov push or outsl mov xor sbb jp mov mov inc nop int3 mov cltd out mov dec or ret add cmpsl mov lea insb mov cltd dec popf cmp addl das mov mov cmpl jmp jl,pn push ja scas mov and xor jb ds bound push and shlb xchg sti sahf mov mov insb ja,pt (bad) aaa jle and shlb sub mov push aad mov movsb mul das cmp pop push lahf (bad) mov xlat test (bad) fldcw xor shlb cltd and insl push fldcw enter int jno push lock fdivs sub push in and ss dec cmp inc and mov pop out push or clc ja cmp cltd mov enter inc push cli push nop out pop and jg popf lods sub sarb adc jo test push mov xchg pop sbb mov pop inc gs aad xor add aam loopne daa sbb push lret and push jmp fcoms sub xchg scas rcll in jae test xor clc jns aas sbb shrb iret mov notb (bad) data16 (bad) adc repnz jbe sti push aad add mov (bad) dec movsl jmp mov xchg leave xor stos and dec movsb cltd movsb aaa adc out sub jecxz jge pop repz int3 mov cmp jnp sbb packssdw sub push sahf adc mov cld mov ljmp mov addl and das (bad) and fs adc mov jl jo dec mov outsl sahf faddl add test andl lret xchg mov and loop cmpsb dec cwtl mov mov push or (bad) (bad) ss xchg jp jae xor andl jnp in movsl jne ljmp xor cmc pop pop std xchg xchg out movsb aas loop lret push les push cmp xchg (bad) pop mov mov leave mov insl out test les lret in (bad) mov mov lcall mov sub aad mov sbb jp dec nop mov sub imul inc push fwait lret loope push mov icebp jmp test jecxz xchg sbb iret inc pop imul cltd mov mov int3 scas sbb mov outsl jb add das xor insb gs lcall inc push ljmp mov cmpsl sbb add mov (bad) pushf sub pop jg (bad) mov (bad) je ljmp dec mov dec adc inc movsb in inc in xor jle fadds mov jmp adc or les sbb mov xchg dec clc push and in sbb dec push (bad) lahf mov ficom (bad) jecxz enter pusha push outsb push adc inc xchg subl dec sbb add and mov fwait mov (bad) mov dec rol mov mov dec (bad) in pop inc scas cwtl xorb cltd xchg pop cmp push movsl pop dec xor jb out insl push movsl add mov gs (bad) jge and jo cmc pop mov push or inc test test inc mov aas push jns mov cmp mov xchg insb pop xchg aam (bad) ja add inc adc and lahf add inc jl push cwtl gs sub insb (bad) punpckhbw shll push sti aaa aam lock xor scas adc jo jbe addr16 insb xchg dec push bound icebp push add adc sbb mov or je and cmp pushf cmp les pushf inc xchg jno jne enter xchg inc mov sahf adc outsl hlt cmp fisub sti das fiadd jns lcall mov and sahf inc mov imul mov jl xchg outsb lret push inc jnp dec adc inc cmpsb dec gs push popa mov imul xor pop stc mov das lds cmp pop add stos movsl xchg mov in jp cwtl (bad) pop loopne mov pop xchg mov push sbb (bad) sarl ror jbe jne jns add sub pusha frstor inc sarl cltd inc cmp lret bound pop xchg xchg cmp shrl pop jno daa mov pop lret xor negl add sbb dec mov add mov stos aad scas test inc adc jl fiaddl xchg das dec call adc loop xchg mov sub adc call leave lods jg popf and adc xor test jae mov loop lods jmp neg cwtl in sbb loopne push and push daa dec or leave mov clc inc frstor add sub nop arpl pop aas and mov dec scas test (bad) mov mov rcr fisttpl les dec mov andl jp scas aam add dec loope mov addl stc imul adc test jbe cmpsb mov mov inc fistpl (bad) jo or clc in aam xchg iret ret jle daa fistl sub sub push fstps fistl sbb imul add xchg in push xor addr16 inc jne push stos cwtl sub inc xor ljmp out rclb lret daa mov xor mov jo sub jbe cmp (bad) repz seta xor std ds cli pop xlat in test (bad) xor aad cmp mov ret jnp aas repnz or roll push clc mov orl loopne ljmp imul push jle int roll movsl dec popa mov into push and fisttpll sbb pop sbb mov inc call dec jle mov or and aad jle cli adc (bad) cltd xchg enter scas and and bts add jecxz insb push testl sbb sub inc sub bound push pop sbb add jmp int xchg mov mov inc cmp scas xchg test lds clc pcmpgtb gs adc rorl bound or je push (bad) (bad) xchg pop aad inc sub (bad) jp xlat cld mov cld jge out sahf icebp ficomp pushf lods pop ss sbb and sub js cmc lds fwait xlat cmpsb jbe nop stc enter jnp stc inc fwait in shr sbb cmpsb jne lds faddl iret (bad) fnsave jmp idivb push and rclb loopne jp sarb in sub call mov decl push and (bad) mov in cmpsb fsubrl xchg push ljmp movb sbb and shrl mov pop divl adc lahf lret xchg es clc (bad) stc insl jo mov push jne push pop mov (bad) cmpsb push sbb inc xchg cmpxchg push in push stos dec iret xor ja lock out adc sahf push roll and in imul sbb fisubrl sub inc xor xchg adc ja sbb sbb cli fs and mov xchg dec movb mov in cli mov jae xchg inc jo mov insb sub xor or jb,pt mov pop jg inc lcall and scas (bad) notb and mov add jns sti test cwtl push movsb dec xchg jp mov cmp call (bad) or es jbe inc sbb test mov pop ds subb lea ljmp js cmp and imull sarl pushl mov in mov inc fisttpl xlat cwtl adc mov dec or (bad) and insb push icebp rcll push cli insl sbb cltd (bad) (bad) add adc xor mov mov adc jge xchg mov stc movsb pop sub lds adc mov or jns adc mov cmp mov sub frstor push sub iret jns ds dec mul push inc push loope and adc (bad) mov cmp adc and push mov fldt push dec out and mov lock mov in inc call push scas mov adc ret inc dec cs (bad) pop pop pop (bad) loope push hlt out cld mov inc mov lods mov outsl cmp adc mov mov mov mov loop fcoms mov xchg xchg or mov repnz mov in subl dec pop hlt adc sub fnstcw gs push pushf aad lds pop or arpl lret loope test fwait cmpsl cmp push test daa mov dec data16 inc lcall jno fstpl dec repnz mov inc je scas loope add add leave mov or orl dec push jne (bad) jbe inc and push lock out jo int in outsl lret lock cltd mov dec (bad) cmovg mov stos cmp jo inc cmpsl stos les and leave pop pop es popf push mov xchg xchg sub jno sbb jns push shlb sub mov mov rorb (bad) fisubrl (bad) sbb loope adc mov hlt in fdivl mov fwait xor fwait xor rorl or aam sbb mov scas test repnz gs mov (bad) cltd inc inc xor jle pop mov adc mov sbb and ljmp aas and movsw and jl cmp mov xor movsl mov lods loope mov in lods mov bound std rcrl push push shr je cmc mov outsb xchg push adc das icebp (bad) idivb xchg xchg add outsb and push cmpsb int3 mov mov and in push mov sbb adc pop das scas sarb in mov movsb repz imul push dec call scas inc imul cmp add lahf cmpsl dec push ja mov mov fwait in in (bad) daa or or or sub mov cmpl test in into test jl cmp out pop (bad) and sub imul jmp cmp jno pop aas pop add add xlat inc push and dec and lret sub dec xor (bad) fs lahf inc pop rorb pop mov (bad) mov in push sbb ja test or jns push adc and hlt add sbb jecxz adc adc mov addr16 in sub (bad) xor mov es jecxz and shlb (bad) push aam lret push fwait popa sub sti push lods jbe sub xchg push sbb ss out cmp stc (bad) push std movsl (bad) push mov cwtl cmp pop inc dec pushf sbb push rolb insl xchg xchg inc popa es xor rolb sub adc mov xor les or shr loop nop pop cmp sub lds jmp cmp lds (bad) mov mov jnp dec cmc enter in mov and mov xor cmc mov mov enter (bad) push mov adc add incb (bad) test stos arpl js mov fsubs dec aaa into dec pusha adc cmp fisub mov mov sbb das add ds insb ljmp in (bad) xor pop out pop outsb add cmc lahf leave and sub aas jmp addr16 mov (bad) (bad) and mov outsb outsb out scas mov jnp lss mov iret push add sub and mov push mov ffree les and (bad) mov rcl decb mov cli push repz fildll jl bound sbb sbb push mov icebp aam stc jno fldenv cmp mov repnz mov lret adc ds clc outsb aas ljmp dec sbb add sbb icebp fcmovnu fsub push pop je inc jp and cmp sahf cmp repz pop call cmp imul jbe std lret int3 stos xchg add faddl outsb jno fsubrl lahf cmpsl jae push icebp pop mov dec and data16 or adc bound pop mov mov xlat loope xchg inc jg popf cltd adc or cmp add test jmp out fwait hlt imul push int jmp data16 lea in inc adc fsubl out insb dec cmp sbb in mov ret hlt jl test sahf pop mov mov inc inc (bad) dec sub jmp pop xor push in aas push hlt data16 push clc insb lds test adc fcmovnu mov mov xchg outsl push jae sbb loop xlat push mov cmpsl call jnp (bad) cmp ret cltd outsl outsl adc loopne (bad) xor jg stos bound in icebp out pop xor or mov fcmovu movsb addr16 or inc fsubrs int3 cmpl (bad) xchg pop pop cld test mov xchg mov (bad) call stos int3 pop xor dec mov arpl pcmpgtb add repz mov fdivl push mov sti push adc xchg int3 adc mov fcomps pop fild jmp fmull sub enter aas fdivrl imul jnp aaa xchg lds pop les lcall frstor xchg pop pop out pop mov sub pop cmp enter sub lahf ret test xor cmp sub cmp (bad) testl xchg sbb out add stc (bad) pop xchg add stos cmpsw (bad) push mov arpl pop push mov add push int jecxz dec xor bound jl rcl lcall ljmp inc jne andb mov pop dec ss mov aas push jae push (bad) mov xor fmulp cwtl test dec xchg rclb push xchg aad mov mov or mov mov into ret pop aam in cmpsb out dec sub je or (bad) aaa adc inc inc out and xor sahf jge jmp push add xlat std rcrb int out jo cwtl adc jo out std add ljmp out push jl sub lods push rcrl push push cmp rcrb outsl enter fstps mov (bad) repnz sub adc xor outsb adc jb popa pop jge inc clc jmp fdivrl sbb bound sub sbb sti cmp jb push cwtl jle,pt mov in sub int3 ljmpw adc inc cmp sub push mov movq loop imulb xor lahf inc into rcl push incb pusha in int push sbb mov lcall push (bad) repz es adc test mov mov ret scas xor adc dec jne out adc arpl popf in or lock mov ljmp je loope ror data16 and jae cld sbb sahf push or and jmp sbb in push sub mov lods sbb and hlt cmp fnstsw push pop push cmp mov jo add rcrb fsubrp mov dec mov mov adc pushf xor mov mov popa xor adc stos mov sub out aad fildl shl cwtl mov mov adc mov push std sub push lods jb das arpl movsb dec xor popa test dec out outsl mov pushf jns or les or out xor das jnp lods dec push push push mov aaa mul pop sahf xor and insb addr16 inc xchg jae and gs gs sti xor movsb iret add out pop push mov stos rol into dec cmpsb sarl fidivl mov rcrl sub movsb xor push push push scas (bad) push mov test jne repnz jae jne int dec aam sbb aad or (bad) punpckhbw fistl js push (bad) shll test jmp (bad) jns aas dec nop sub out or lock insl cli inc call std inc push (bad) mov mov mov aam mov sti (bad) jno fsubs lock ss aam push ljmp arpl je ljmp inc ja fwait and pop lcall sti mov testb pop add clc push repz mov in push in imul neg out stos and cmp inc fnsave mov test dec xchg xor in add mov pop inc out out call and imul int3 xchg dec fiadd dec or repz jmp sbb aam stos pop fisub jne inc in mov mov sbb aam fldt ljmp sub jge jae lret mov pushf xor loopne adc lods hlt push push push divl cmp mov cmc lods cld xor sub mov cs aaa xor notb stos dec int3 test inc cmc cmc test cmp dec push or dec out xchg add mov rorb push adc imul pop pop dec jge or jb pop loop arpl mull jg into pop mov bnd cmp scas andl push testb add xchg inc xchg add in rol (bad) mov arpl mov ret sub xchg cmc adc mov or adc (bad) lock adc or dec dec addr16 (bad) into add sub cmc dec dec mov cli (bad) ja or or test or cmp add xor clc add inc dec mov jmp push popa insb add jb lea sub push out cmc enter sub jne hlt (bad) (bad) scas cli and ljmp jp loop mov hlt mov pop adc mov inc mov jg (bad) xchg ret popf cli fldt xchg push pop push mov sub push mov mov xlat xchg xchg aas push aad insb jno in or pop push test jno xor movsb push insl popf into aas (bad) call gs (bad) repnz pop mulb daa sub fdivrl (bad) leave cmp sbb jne mov sahf subb pop mov in mov adc push jmp add sub jl (bad) mov sbb push and pop fstpl sub mov std adc nop add mov mov xchg ja in ss fistl dec push (bad) popa add arpl jb fcomps (bad) adc and push dec scas jo daa cmpsb mov dec push xor ds sbb ds sub sub out in add pushf xor pusha and inc cmc dec daa jo lock jmp mov cmp xacquire inc out out repnz mov test gs loopne je (bad) and fisubl dec mov jg jne sti lea xchg cs aas insl imul movsb pop jg aas mov mov orl ja push imul test sti jle push sti es stos mov fisubr ja divb ljmp dec pop movsl (bad) mov ds movsl xchg pop sbb inc jns outsb mov ficom aaa cmpsl xor rorb pop adc mov rcrb push mov mov stos test (bad) xchg fwait lea stc inc loopne cmp mov (bad) fs (bad) aaa dec xchg add loop (bad) es insl faddl dec mov cwtl test mov enter int3 mov push sbb xchg cmpl pop dec ficoml pop int popa ret sbb or (bad) fmull add or mov fild mov imul jb js leave push sbb sub mov sub roll mov mov out iret imul cmpsl nop notl jle dec dec bound xchg inc sub mov and mov mov rcr roll sub cmpsb mov mov xchg hlt mov xacquire in mov scas mul dec dec addr16 push sahf sub cmpsl dec cli dec dec push loopne dec mov cmp add dec mov xor (bad) adc lret push out push cmp sbb xchg xor je and shll add inc jno mov out or fnstcw repnz push xor jb mov ljmp fwait test mov mov sbb aam adc cli cmp dec cmp push push lock pop sub lods or (bad) sbb cmp in test (bad) and and jmp lret push sbb mov and mov jecxz sub xor cmpsb push arpl sub jo aaa out mov clc mov fcoml push sub mov cli xor jo jbe les lret jmp add xchg stc mov sti addr16 jecxz add or (bad) sahf pop pop mov fwait mov outsb xchg and lds popa scas xchg jmp dec sbb mov cwtl icebp aam pop adc fsubs sahf sbb out out sbb xchg les cmpsl or (bad) aaa out fs hlt inc xor add pushf orl icebp mov lahf iret inc aas leave and xor jl ficoml ja jg bound lds cmp or imul or repz mov xchg add jle push push outsb icebp adc xor mov xor cmp push int3 shlb sahf xchg cmp cwtl dec mov sub fiaddl into inc mov aam in movups jecxz adc in cmpl mov push pop (bad) inc clc jne loope push mov or pop push addr16 outsb pop outsb insl dec daa into (bad) mov imul (bad) pop inc sub (bad) lds (bad) clc adc loopne inc mov jae pop jns into or inc jo xor loope int3 cmpsb ficomp in add (bad) mov fdivs movsl push fisttpl inc add pop mov sub pop xor cmp pop xchg out xchg sbb test lock pop fsubrp movsb adc shll arpl pop xor fldt ljmp inc add adc jg jns jae sub daa (bad) leave xchg leave mov inc inc sub std mov int fs stc adc in and pusha (bad) negb test stos mov mov pop push mov lret xchg mov pop test cmp sbb stos sub xchg add jg push fidiv in out popf jp inc repz push (bad) jecxz or inc imul pop mov into lret add sub leave out or jp mov or dec jae or or pop mov cmpsl and inc push dec pop jne jnp lds addr16 mov mov cmp sahf in push mov cmp imul lcall ret fcomip push fcoml mov pop inc into rcrl repnz pop inc into inc fwait pusha sbb push dec clc xlat movsb ja xlat (bad) pop test test jbe cli popa scas popa sti imul push not mov ss out inc mov imul cltd xor xor sbb ret mov pop push fcmovu lcall aas lcall rcl cmpsb dec pop movsl lret frstor mov rcrl aam pop rcr sbb or lods addr16 pop into incl mov int3 aam push pop movsb js pop xchg jecxz imul cmp add jbe (bad) cmp push movsl scas rclb dec pop pushf sub push and pop sub popf or je sub add movsl ja test cwtl jg pop lcall mov pop das xchg xchg dec (bad) pop mov mov add jno out dec and lds cmp cwtl fistpll pop dec jp cld sub xor std (bad) imul in sub sub (bad) out inc cmpsl mov out dec daa dec or pop jae imul adc xchg in pop add mov xchg push enter dec mov (bad) dec (bad) mov jno out fucomip inc cmpb mov jne mov ljmp leave js sahf add xchg mov lahf mov cmpl test adc mov sarb rorb (bad) mov xchg mov ror and pop iret sub mov or rcr inc cmp dec dec cwtl dec mov cmpsl jnp ljmp lahf jecxz dec mov inc fidivrl pop or jb mov enter sbb inc enter pop ret bound push adc rcl fldl lcall xor xlat mov xor jno in jbe,pt les pop sbb mov fildll call cmp xor xchg mov inc cmp lahf cmovne pop add mov xor mov push pop mov xchg arpl dec (bad) jge and add jg pop lds aaa jl out xchg fadds clc das jmp fs pop ret dec jnp mov dec ret or mov adc mov test mov ljmp test arpl adcl ljmp adc adc je fstl out scas sub in sub data16 jle popf push lret sahf sbb popa push out and jo push jl inc bound jnp mov jno test dec in jno cld fbstp (bad) outsl and imul aam mov add push popf mov mov sub dec sbb nop std jne push fstps rcrb dec sbb inc ja adc add fwait sbbl jle and test aad (bad) loopne imul mov iret pop cmp call push or sti jecxz and aam xchg cmpsb and xor mov loopne cs jle mov out lahf pop pop xchg dec shll (bad) fldt aam (bad) mov jae xor adc sub es pop lds dec addr16 add xchg js push add bt fldz mov pop pop sahf lods inc (bad) out mull ja push clc adc dec mov clc xchg cmp loop ss and jecxz cmp inc mov jl es inc push ret push xchg lret repnz jge or sub (bad) push stos test aas push or sbb mov (bad) dec movsb inc mov pop xchg jmp xchg (bad) gs xor sbb das and dec out (bad) nop fidivrl xchg fsubrs stos aas pop push and jo popf add push in jb mov mov sbb mov and sbb add push aas test push sub xor mov xor jbe or xor push pop stc shrl sbb stc popa pop movsb cltd cwtl inc cmp sub icebp adc ss fnsave cmp adc push fwait xor sub pop fist popa mov imul orl inc or push stos cmp mov dec xor rolb adc not in aam (bad) mov jb popf mov sbb lock push stos orb push je (bad) dec (bad) jo rcl es xor sahf inc loopne xchg stc movsb cltd in mov push jecxz arpl call int3 inc aam je imul out jbe xor dec test ljmp movsb in xor call mov lock rcl scas popf dec (bad) jmp test dec outsl mov pusha (bad) and nop inc fcmovbe insb fsubrl add fs stc adc sub lock movsb ljmp push movsb sub scas mov pop pop aad xor hlt pop lods mov inc es es xchg movl aas fcomp or push cltd add sahf rcll push jb movsl (bad) mov add ret int3 clc rcrl dec xchg push xor lds (bad) sub mov test daa jl int3 ja or imul fbld pop mov inc jno sub pop mov xor xor pop jmp out fisubrl rcrl lret push aad loope add addr16 sbb cmp cmc push test test mov ret xor pop pop lret (bad) icebp rolb stos cwtl stos pop push push adc lret mov or xchg ret mov (bad) inc sub jmp pop inc andl jecxz jbe test push and xchg add int dec test andb push add jns push xchg fisttpll fld adc popf shrb mov push push cmp and cmp mov cmp hlt andb (bad) lcall push (bad) aad sub pop mov (bad) jnp jp jge andb push jge xor mov pop adc cltd lods loope push js inc loope jmp ret jae call nop mov sub xor xor and adc outsb lret dec into jl mov jns in xor jne inc das lods add (bad) mov pop mov push lahf push pop ret fld cmp (bad) jb les in jecxz inc adc jns mov mov mov mov or sbb das jecxz inc loopne add cmc lret fidivl lods mull mov (bad) pop pop cltd ficoml add mov daa sub or push outsb mov aad cli mov inc arpl scas xchg fnstcw loopne rolb sub or xchg dec ret jo push add inc mov cld push xchg add mov mov jne pop mov mov dec pop jg mov ja jno mov clc and pop lds add push xchg inc das aaa lret push int call mov movsl pushf cmp data16 mov add je rcpps jae aaa cwtl ss inc cmp mov ljmp imul movsb mov outsb cli enter pop adcb (bad) test inc jmp add insb mov outsl sbb sbb push fsubrs inc and addr16 gs lret push loop mov sbb sar sahf pop or mov addr16 mov in or fs push sbb ds mov adc dec xor std outsl or push loopne mov fs ret sbb inc mov fidivrl aas inc scas pop in sbb inc (bad) cltd dec xchg dec push mov mov lock aas lahf scas aas (bad) or leave and add sub stos scas movsl mov sbb imul mov je iret (bad) xor sub (bad) jg fdivl fwait jne test (bad) sbb ficom outsb jae xchg and js sub adc rcrl movsl jnp mov sti lahf inc into dec bound sub push push xor flds push pop jae cmp loop sub dec xchg or adc loopne cmp jne (bad) out icebp mov jne cmp imul js test (bad) sti and popf xor jg xchg nop push cmpl lret fldt ss jae outsl pop push mov mov lds pop dec in sbb aaa lock sub movsb push adc pop xor jns (bad) enter lcall dec lea sub inc push sub dec scas mov lahf xlat aas std ljmp adc xchg enter add add scas add std stos pushl pop pusha jmp push sub (bad) mov sub dec mov jge lcall (bad) sub insb ss xor lock lret or or dec push aad (bad) pop or mov xlat into repz cmc or shrl (bad) jne or loopne xchg sbb pop lea fist jge and loopne nop add or int3 paddsw test jmp das aam inc cmp mov mov push cmp xor roll adc sub push iret fisttp rorl inc xchg and std rolb ss xor inc ret mov mov mov mov insb pushf inc aaa inc add mov mov lods mov fistpll mov sbb pop sub sbb mov mov dec xchg iret push cld lods xlat mov add inc shl into jmp inc add mov adc pop xor popf push sub dec inc ljmp mov mov and mov mov mov rol cmp pop das es sub addl insl insl call push cmp and insb sub popa pop adc ror inc ficomp push scas sbb or push adc sbb popa out js add addb jnp mov cltd idiv push pushl dec xchg out mov enter mov and pop cmp int3 lock pop daa cltd pop (bad) sarl cmpsb ljmp xor jns (bad) test and outsb mov or out pusha scas cltd insb push mov arpl pusha pop (bad) jmp popa adcb sbb ja push jg sub inc mov dec cs add xlat jle icebp pushf dec out jmp mov iret icebp dec fidiv mov jmp mov adc enter cmc xchg fbstp cmp scas dec test xchg cli or mov lahf push xchg fmuls ficompl mov test jecxz enter mov in add pop cmpsl leave mov pop xor out push les (bad) mov aam lods loop and xor outsl adcb jmp lods add cmc sbb in mov lea cwtl (bad) xlat (bad) or movq nop sub inc mov ret insl nop rorb cmpsb stc imul inc add fdivs xchg call popf inc pop ljmp ret add push xchg push mov sub mov mov xor repz mov or popa add ss sub add insb mov inc add mov jge lods or xlat push enter push cmpsl add pop fmull fdivs idivl sub imul mov lea sub sbb loop cmp test std lds (bad) imulb out push fwait cli adc int3 out push mov push fiaddl or inc lods push xor cmp cltd sar ss mov roll lea cli rorb ret divl js cmpsl and inc fnstsw inc jmp stos cmp mov dec jb,pn xchg cmc xchg mov dec cld lods add xchg push add test inc cwtl mov sbb and xor das jne dec inc int mov jg sahf out mov pop in mov movsb decl cwtl iret and jb std sbb push inc jmp ljmp popa aad scas fxch xor out and not jne pop and jo xchg orb cmpsb mov and (bad) int jb cmpl mov orl insb into lods repnz cltd or cltd loope,pt std (bad) cmp cmpsl push pop dec in rol cmc jo into mov mov push cs mov cmp mov pop lods adc inc mov cli cmpsb jbe push xchg cmp mov lret lds aas xor (bad) (bad) jp and arpl mov imul dec fmuls add jge pop adc adc sbb add dec xor jp sbb pushw mov (bad) in xchg push mov bound stc mov mov xchg std movsb ret sub mov xchg stos cmp popa mov dec jge rcl data16 mov sbb xchg mov ljmp sbb xchg and aad add (bad) lahf jb (bad) or nop lret mov pop pop xchg push arpl int3 xchg xchg mov lds or roll cmp mov or dec imul gs leave and lock or and jb in xchg and sub std ret adc mov cmpb lahf (bad) cmc mov add adc aad cmp xchg sub lods cmpsl mov pop or (bad) and lcall mov push and call daa inc cs pop cltd pop lea in mov sahf (bad) jle lock sbb popa sbb cmpl movsb das hlt into imul pop ret loopne mov cmp pop cs ret push lret mov pop lcall sbb sub push mov inc (bad) jle test dec push adc pop into add sub xchg out inc dec cld enter mov popf aad repnz mov pop ss cmpsl (bad) jp and aas mov (bad) pop fsubs lods jle and push stos fisttpl xchg jns mov dec dec adc mov and cs inc call (bad) insl test stc loop push mov sub stos sub pop leave stos push xchg push lret btr jno insl xchg jp mov cmp mov mov lcall cs jge jne sub in inc outsb inc test sub jno mov cmc rorl mov (bad) bound lcall jbe sbb jge xlat sub sbb mov xchg or scas stos (bad) ret movsl (bad) stos jl jb lock xchg inc dec push jae,pt lock in sub and dec sbb inc fidivl repnz sbb lret xlat pop mov loop lods stos icebp jno inc repz std scas ljmp xor movsl ret jmp pop lods pop es inc cli xchg ret inc sahf cmpsb nop inc jb (bad) imulb mov loop sub insb push sub adc pop repnz xchg je jp inc enter cmp test loope pushf lahf mov stc sub cli push fimul mov and dec mov mov (bad) sbb dec (bad) out leave xchg xor ret add rep sbb jbe adc ljmp inc xor dec adc rorl and jbe bound fcompl cwtl lea mov xchg add data16 out push inc xchg loope push fidivrl add pushf and jge movsl lea cmp jmp inc xor inc je imul push dec rclb xchg cmpsl (bad) xchg stc cmpsl cmp lret dec mov xlat adc icebp int jne in movups fbld enter jmp insl scas inc sub orb pop data16 xchg jecxz push mov inc push mov ss adc sbb out adc add call push cmc adc xchg inc cltd cmc loop xchg jge ja ss inc loope xchg cmp sti out and mov mov sbb mov cltd and mov and jge pop neg scas dec out push add addb ficompl sbb pop dec cs cltd lea (bad) mov (bad) cmp cmpsb outsl xor pop pop jo xor ret sbb push shrb sub xor out push xchg adc xchg xchg sub or popa fisttp xchg jb mov fild mov pop cltd xchg test sbb pop xor adc (bad) int sbb mov icebp push cmp in out imul negl lahf inc js inc das fstpl aad and jne sahf out add add pop push jmp add bound fildll xor mov xchg cmpsb xchg sub sahf and stos push (bad) push dec fs adc xchg mov or sub movl xor xor test cwtl inc cmp mov push insb mov cs loop add add loope out (bad) sar lahf or mov mov xor mov ds or mov pop or (bad) loopne ret dec ficom stos mov mov (bad) cli cmpsl sbb push in test je js jo lods bound aad loope idiv outsl shll jg js add out or push mov cltd clc frstor adc adc jecxz push cs std shlb xchg or repnz enter das push mov mov (bad) divl testl scas inc add faddp bound push mov sbb lahf push mov mov or fs cltd push mov and adc push inc fildll adc push sub adc sub xchg jno decb pusha shrb mov fcmovnbe adc adcl inc mov mov jno cmp (bad) xor (bad) int3 mov cli push inc cmpsb or jb pusha mov pop in pusha test movb jecxz rcrb xor or mov arpl jno dec xchg push mov xchg js,pn pop or mov iret outsb test xchg cmpsb (bad) mov les push gs and xchg mov inc sbb mov sysret outsl div nop loopne pushf pop into dec sbb pusha cmp std dec lcall and push js cld adc fs outsb jne fs inc jg aas stos mov push add fwait rcl cmpsl stos inc dec notb outsl into fsubrs mov test push adc xchg adcb jge insb popf push or or daa in scas or inc inc les mov sub scas push clc add frstor je xchg fsubs xor xchg test (bad) cmpsb and gs test mov in mov dec add jmp push mov aam push mov jae dec aam xchg fcoms icebp (bad) out push jo adc xchg (bad) dec pop pop (bad) lahf enter inc les lcall loopne dec (bad) cli dec out add std in mov movsl jnp push iret adc ret insb adc pop loopew inc mov ss mov push scas mov fisttp ret push adc add push stc xchg jne aas jno and stos xor push cld xor subl in adc pop adc pusha cwtl dec add daa add add or cmp (bad) mov dec jg pop jbe popa outsb xor mov push (bad) mov push lock insb daa mov jae mov sbb and adc jge inc ret inc mov add push mov cwtl or negb push sub mov xlat hlt imulb loop (bad) jmp pop jmp in sbb (bad) sbb xlat mov mov xor outsb add insb mov jo adc mov cmpsb clc pop dec (bad) cmc lret adc add (bad) sti inc and or movsb into cs push ror cmp adc add lcall repnz add stc fmulp cmp fiadd or testb sbb mov push sahf stos (bad) scas xor dec sbb test dec push shll and jno and (bad) jle fistpll mov mov cmp popf in and neg stc stos push pushf test shrl outsb popa sbb adc aas std je insb fstpl pop ret test mov sub lods fdivs ret mov fwait mov iret mov ja xor cmc xchg fstp enter push call and stos andl lock sbb inc cmp shrl inc cwtl mov push xor mov xor cld or push lcall daa lds dec and jmp mov xchg pusha inc pop push test mov loope sbb jle pop xchg mov cmpsl adc adc test daa adc out or xor movsl sbb lods mov push and loopne sahf xchg je or aaa movsl jmp xor stos outsl or xor out push test int sti xor (bad) mov jo fistpl xor int daa out dec jns mov rcll or je inc andl and hlt ja jns (bad) dec aas imul sbb adc xor stc ds xchg loopne add (bad) stc adc jmp aas mov in pop divb stc dec xor loopne cld call adc ss out mov (bad) cmc adc test js mov adc pop (bad) and enter jae scas aam loopne or in (bad) pop inc jmp test adc jb pusha cltd dec sbb je sbb ss lods (bad) cmp (bad) repz stos cmp cmp mov call cmp cld ficoml push fildll adc rcll jb lret rcr xor lret mov jns (bad) or mov imul orl cmpsl dec mov jmp enter in lret mov xor inc lods imull int daa lock rcr sbb add cltd mov mov daa lock addr16 sbb push mov dec clc lret and cmp ret shl or xchg fnsave adc jb adc xor (bad) xor sub fs jl mov adc lock aam or push in cmp push popf loopne xlat lock mov call inc loopne xor into sbb push test or inc sub mov or lret add iret fs inc xchg cmpl mov lea push dec iret scas fsubl adc xor push pop xchg mov xchg gs and push testl nop das les ja fimul push lret add add pushf (bad) pop (bad) (bad) jmp cmp sub xor sub xor mov jg mov inc hlt ja ret inc sub aaa push into fisttp adc sub mov roll mov (bad) and cmp sub cmp xchg lret mov ds cmc pop push sbb fbstp cwtl inc sub mov sub call sub push xor jge inc jae mov or mov cmp mov pop lds mov jp push fldlg2 loop das sbb push inc mov push lods (bad) inc ds inc mov mov outsb cmp leave mov fnsave pop xchg dec jge add iret xchg and sub jge (bad) addl push cmp add std cltd dec or sbb jns mov pusha cmp mov or add out imul mov enter je push jl fnsetpm(287 inc imul inc (bad) jae inc push rcrb or xor fsub mov aaa cmp inc xchg push insl mov je cmp push insb stos xor std das and fnsave iret mov rep cmc and ret mov jb cmp adc int fistpl (bad) jo cmp push cmp sbb ja scas (bad) mov stos push stc sub inc pop or (bad) fdivrs lock push pop (bad) pushf out dec mov inc push (bad) inc cltd daa leave xchg push push mov add sahf rolb pop mov das das arpl mov sub fldenv mov out (bad) lret adc push cmp js cmp into fwait addl mul jge mov pushf lret into rcll push mov mov pop jae test into push cmp add ficompl cmp mov mov xchg xchg mov out dec (bad) xor mov data16 mov and ffree enter xor test in aam adc sarb dec and cmp cwtl xchg or cmp sub lods and out cld clc mov xor adc adc aam and lret mov aam test cmp stos push mov out (bad) out cmp fadds cwtl outsl jle test inc mov int3 dec call xor aaa sub lock jmp xchg xor divb jmp xchg repnz setge lds faddp scas sub dec mov jb cmp ficomp std push std or cmp jno jl lea sbb cmpsl mov es pop adc pop xor add jmp fldcw mov stos jne (bad) jae or int push or cmpsb and into rolb cld mov arpl sbb iret in fidivl sub pop mov roll cld imul and pcmpeqb jbe mov sti jno mov jg add arpl sub push daa jne in ret mov mov mov loope push sub rcll push jp sub and adc in (bad) int3 imul dec dec xchg jno hlt imul repz rcrl in xor and push cmp lods pop movsl jbe and xchg cmp cmpsl sahf jge fdiv sub add xchg sub loope fildl fisttpll lcall fucomip lds push dec test xchg add mov pop cmp pop mov inc push out add clc jnp es in and mov dec es jmp lcall sbb inc sub or leave sub das mov sti pushf movsl pop cltd lods jecxz data16 add out mov (bad) lods clc mov cmp frstor dec fsubrl adc pop sub sbb lods ret dec xchg decb jmp (bad) sub cltd mov sub mov jbe loope rcrl xchg loopne movlps sub fwait add mov xchg bound cmpsb mov mov test xor data16 xor outsb mov stos gs lahf ret pop push jb jnp sbb sbb (bad) std jmp andl or and dec imul adc outsb imul or std sub sub jmp mov push jo das popf mov xor sub adc cwtl loop jge imul dec cmpsb ret ror out jmp or (bad) xor ss dec jmp pop aaa stc push insb outsl repnz call movd je xor cmp fnsave jmp scas sbb cld leave insb or lods insb jecxz lahf mov stc add data16 xor pop xor sbb sbb notb rorb sub cli dec push push jnp cltd sbb test (bad) les inc cmc and lods fdivrl adc fidivrl add das test mov icebp push pop (bad) out out jge cmp bound ss mov data16 addl cwtl fwait cmpsl jns es outsl mov cmp mov adc popf outsb nop jecxz adc mov add mov shll mov shrb jb jne pop push (bad) or mov icebp xchg lret mov jp movsb cmp xchg lock cwtl int3 addr16 dec and mov lea out sbb into mov jns mov sbb insb push insl rorb out inc pop or cmpsb adc and in icebp adc add pushf dec dec stos mov add cmp xor daa or mov mov fcoms mov (bad) in xchg popa cmp out cwtl scas test push sbb jle mov cli orb adc mov jge (bad) add push xor mov int3 (bad) and repnz xchg jg mov out jl cmpsl mov sub outsb in fldl mov popa sub shlb push add xchg sub jmp xorl mov jp push xor push push outsl mov pop in push push adc add jbe mov loop stos (bad) fcoms adc jne into xchg pop (bad) data16 out int call imul sub mov fdivl out pop int cmpps push inc ror mov push mov movsb jmp cmp scas pop shlb or in xor ss jnp inc adc rolb or cmp xor inc jno xor lret std lods jmp call push incb inc loope jmp jo push mov int and (bad) xchg adc rcrl sbb (bad) mov or dec cmp mov mov stos je sahf or dec test mov (bad) mov pop ss xor mov push dec in (bad) (bad) aas shld jb in out test push sub test or into push dec adc cltd stos jg movsb sub add inc stos xlat inc stc ds xchg sub movsl and inc or (bad) popf add inc gs jnp or inc and sub mov push in jg (bad) jmp mov pop sbbl or mov inc push sbb dec mov out fmuls dec ds loopne dec xor in add fs adc movsl jg shrl sbb insb test mov mov pushf push inc pop cld fildl into dec add stos mov mov hlt enter shrb shlb sub mov fildll pop aas iret aam sub inc out jb mov dec pop mov lahf hlt mov ret loopne cmp mov pop push mov shrl test mov adc divb iret (bad) pop mov out ror or inc and imul or dec sarb add fdivrl fsubl add jno sbb (bad) xor dec xchg imul in push lret test stos (bad) bnd popf sbb and inc xchg push ret mov mov push mov inc and shrb sarl xchg cmp xchg or mov icebp lds push and push cmc jecxz pop movsl adc cld jmp sub sbb lock cmp (bad) int3 repnz lret loopne fwait push stc or lahf sti jmp pop mov inc notl push xchg (bad) adc push loopne popa mov decl push jmp push in cli repnz movsl fidivrl lds inc sub hlt or add lea js mov jb xchg sub (bad) icebp or jge xor xchg sub adc loopne push sbb ret (bad) adc shlb pop mov loope and mov out cmpsl rorb das add add aad and cltd push or repz jl sub stos push jnp mov rcr sub rcll mov lahf sub add sbb mov repnz xchg aad or cmp xchg mov in das xchg jmp aaa or mov lds mov imul scas (bad) push mov cmp lock stos dec leave mov insl adc insb sahf mov sahf pop aam nop add dec lods (bad) push into rsm push invd jbe dec cwtl shrb xchg dec call adc fisttpll js xor inc cld das aam das mov or mov pop ds pusha call into in push jae,pt sbb xor out lea add divl lock mov outsb daa sub push xor gs dec fs pop (bad) jno xor scas std mov dec out stos (bad) (bad) outsb sub sbb sarl fsubp mov xchg mov dec jecxz cmp cmpl sbb dec add aad jo (bad) inc xchg fisttpl sub ret jl iret and push cs adc lea and or addr16 cmp xchg sub dec xchg ljmp cmp loopne mov cmp push sub test mov aas cmp lock aas mov cmpxchg8b (bad) leave (bad) sub add mov mov dec in jno sub pushf inc mov xchg cmp in cmovne std and sub adcb and push int pop inc adc popa jnp out fsub ja outsb ds leave sbb fcompl sub mov std insl xchg dec add mov loope test (bad) dec mov xlat lret unpcklps jbe lret or cltd adc clc jae add arpl lcall cwtl clc add sub out adc mov dec xchg lcall stc jnp sbb mov (bad) or addr16 and jnp inc std xchg cwtl push add jecxz cs repz push jns mov jne stos dec push and arpl (bad) (bad) xchg cmp test into adc cmp insl xor scas lock xor jle xchg repnz and ret and fidivr into (bad) movsb mov mov in mov rclb sbb test (bad) push movsl jne sub bound cmpsb ja test pushf sahf push sub loope cld sbb lock mov bound jae mov sti add std fiadd add mov mov out scas mov adc in mov push push or dec stc hlt aad (bad) lahf pop mov mov rolb fsub (bad) mov sbb pop xor jg,pt std mov add or lea repnz mov add shrl cmpsl fbstp test sub mov add int3 inc test jno pop xor fmuls jp jl xor add or cmpsl popf inc les sahf js outsl lock dec cmc or mov je fs adc sub add jmp cmp rorb fwait int in push lcall xor mov shll and in and divl adc dec fcom movsb (bad) adc leave sbb imul mov insl data16 adc addr16 test mov inc sub add movl pop jne push loope jg mov or mov lods mov push jg in xor dec insl imul push cvtpi2ps push dec mov loope push data16 xor cmp adc cmp add mov push sub sarb inc push test test adc jb ffreep lret push add push sbb and dec jle (bad) jne lds dec inc mov loopne imul mov and xchg cld je xor pop imul aas (bad) sub add cs and out mov mov aad out in adc fnsave bound cltd es int3 icebp imul pop lock push ja and mov push (bad) push push and lret adc ret lret add das mov das mov inc hlt test ds push pop adc addr16 (bad) outsl add dec repnz add jp sbb push jmp aaa fwait enter sub cltd icebp lret je flds sbb fisubrl sub dec ja pop ja pop mov flds aaa jge out std insl repz (bad) adc add rorl inc and jb lret mov std adc adc outsb imul pop inc xor fnop push xor test loope loop imul test iret je push movsl cmp outsb (bad) lock adc pop mov push shrb jle sbb arpl adc pusha push mov and sbbb call daa fs jmp mov leave js push mov add addr16 adc or test aaa mov repz sub out push sahf jnp addr16 scas (bad) sbb lods jno inc pop inc nop test data16 jno pusha sarl xor aam hlt stos sbb int inc neg ret mov adc mov adc shlb fisubrl xor aad and mov cli dec lret test inc jmp in sbb dec pop fadd xlat sbb mov mov cmp mov push imul jbe pop dec repz or adc lret xchg stos (bad) mov mov sub stc es or int3 int adc dec push mov insl test xor fs and jo or sbb outsb mov xchg inc push lcall (bad) jecxz adc (bad) and lock sbb ret adc jl adc test pop sbb xor xchg je push (bad) in repz mov xor cld fcompp jo xchg sub aaa in stos bndldx sbb ret aam xchg pop adc lods out sub jg xchg cmc add sub lea cmp arpl jle and insb in add orl insb ret (bad) sarb jmp pop push mov push adc outsb stc xchg jge hlt out mov jbe pop mov popf push outsl test pop or pushf fnstenv mov int aad adc add add or mov scas data16 xor ljmp (bad) jl insl test mov aas adc ja fwait lods inc xorl mov pop popf nop push push paddusw mov loopne loop mov cwtl addb stos xor mov mov fidivrl mov movsb add mul js clc mov daa or push clc shll and lcall sbb sub mov and or mov and je out fbstp jge lcall movsb popf mov (bad) icebp into push cwtl daa int ficoml dec dec cs inc jb push cmp inc lret cmpsb nop test insl movsb mov inc dec jge leave jb cltd js xchg adc sahf sbb negl sub pop xchg stos xchg pop mov into in jmp push pop daa shr sbb insl push or add test sbb mov ljmp int3 (bad) addr16 xor flds cmp outsb jl ror adc jno jge sub xchg pop sub jne push std fstl adc not inc adc inc cmp cmp xor inc and sub mov cltd cmp js pop ds sub pop add ret loope or icebp sub pop mov fsubs pushf sub (bad) js dec pop sbb int3 and nop xchg jae xor (bad) or mov (bad) xlat outsb or out adc pop std in jmp faddl popf loop xchg ljmp xchg out adc call mov incl push jo stos mov mov pop inc push push push xchg adc or icebp push sbb in aam xchg movb pop jl xlat enter shrb leave popf insb (bad) jg fucom sbb jmp fist sub mov imul sbb movsb add mov scas xor cwtl rol clc shrl (bad) xchg xorl dec aad dec icebp cmc or lcall lret adcl movsb in push enter xor (bad) stc inc fwait cmp bound aad cmpsb jecxz add dec sbb mov mov sub fidiv sub into (bad) fcmovnbe (bad) xor test sahf push les repnz in int aad mov or rcr jmp pop (bad) mov xor das jge push fs pop lock loope dec jae test adc dec lret or xor scas push cmp or lret fwait xor mov mov xor pop push add mov sbb lods mov enter push loop fisttp pop inc and xchg push test fpatan hlt mov test add jbe xchg popf inc dec aas imul mov in dec pop sbb adc lahf lods int (bad) addr16 mov int addl add sbb mov ljmp xchg pop notl divb lcall (bad) das mov cld and ljmp (bad) popf push lcall cmp inc xchg add call adc adc mov bound cmp mov psubw repz mov fisttp stc js inc mov dec mov cld adc arpl subb push fldl2e pusha bound inc addr16 jbe or lods test xchg mov or (bad) mov fdivs jb fnsave xchg loopne cs or mov in and (bad) loope addr16 jo je xchg push clc sub popa fisttpl mulb cmp mov dec jge push stos sbb std adc mov mov rcrl fwait or sbb xor fs mov mov and pop enter push push dec mov push inc outsl push xor mov sbb ret and sbb cmpsl jg xor ja inc psubd dec in xchg cltd stos jbe,pt inc idivl push enter xchg int3 cmp pop add imul mov pop rol pop xchg cli mov push sarl adc pushf xorb in mov rcll test or fs sbb insl imul push mov inc jmp popa push inc pop cmc scas inc sub fsub fisub xchg lock in nop insl cli imul insb mov enter ljmp leave push dec and push dec mov ja ret inc je cmp out rcrb out xlat ljmp fnsave xchg fstp pop lea js lock jne movsb in aaa cs lods ret lret and out jp cld es out cwtl adc mov mov out popf add mov dec push (bad) aam and cmp mov or lods dec flds mov aam xchg push fsubrl lea in jecxz xchg xor jo xchg jo addl mov cs mov or and lret jmp es or push sub push inc (bad) cmp jbe insb cmp popf ret dec or mov cmp insb push cmpsl icebp mov loope inc or xor pop mov arpl jl jb shrb movsb or push cmc jns xor mov cltd adc pop lods mov xchg xchg jecxz pop ret js push cli cmp stos (bad) scas aam mov mov stc push add idivb cmp dec mov cltd aas jl jne lret stos xchg pop orl into xor daa lods dec imul add cmp je cmc dec aad mov imul outsl push les int rorb pop scas sbb aaa mov jmp sahf movsb adc lds sub adc add mov mov mov or mov adc adc dec add hlt xchg adc mov add shrl (bad) hlt sbb mov sub add into jle xchg daa lret dec cmp andl js std outsl sbb jecxz jp outsb mull add push sub clc inc mov cmp outsb sahf pop dec xlat cmp add add pop sub push pop adc test and andl test xor mov leave xor sarb xchg cmp (bad) (bad) push dec aam mov fcomp repz jb test movsb roll scas mov fildl sbb lahf xlat sbb je cmp cs roll fcomps out outsb push inc stc adc jo sbb dec mov push xchg dec mov aam ret repz stc jle mov inc push mov sub pusha dec jle shl xchg out pop es jl fsub sub aas pusha or (bad) add xchg test repz sub jecxz dec sub je cs stc out movsb mulb xchg jle call mov fs js faddp mov push sub and push insb cmp lock jno lock jmp pop add xchg (bad) rcrl cmpsl rorb stos rcll in pop insb pushf fistl notl in mov cmpsl and xchg xchg frstor cmp stos movsb or mov rcrl cmpsb cmp iret lret adc xchg call shl jg xchg movsl (bad) mov push scas add loop sub inc adcb pop cmpl ffree fstps adc ret push add nop adc mov (bad) daa cli xor bound pop sarl inc aad sbb xchg in aas push addl (bad) scas push and (bad) insl push pop sahf dec inc mov cmp stos (bad) and nop pop shr jnp lds dec pop int3 add push xchg insl sub inc outsb jmp ja xchg or cmp mov mov xchg jno mov ljmp dec inc pop (bad) mov mov dec lods addb imul or jmp dec js add stos mov and je (bad) notl lret adc jg cmp xchg lahf mov jmp jmp cmpsb jns les je in mov add cmpsb add pop jbe mov popa imul mov sbb cmp sbb mov dec mov ret inc or sub jb jge lret cmp rcll stos iret ret call push (bad) jge and fmuls in jp add pusha jl mov xchg jnp aam incl jmp sbb mov rol sub and inc pcmpgtb idiv mov jl decl dec mov adc je inc (bad) mov xorb arpl out rcll or daa sub test std jb jge pop cmpsl xchg mov addr16 mov icebp xor push inc xor xchg mov jmp fs inc and mov les inc and mov push add sub loope imul movsl and mov sbb mov push lods jb fcmovbe icebp adc (bad) xchg mov icebp jp inc (bad) xor inc jne pop fstpt cmc dec mov loopne mov push stc (bad) mov sbb ljmp (bad) hlt cmp (bad) fucomp mov and pop or addl dec xor addr16 and adc stc jae jo mov jmp cwtl stos and neg insl pop adc mov jae outsb movsl sub out push pop xchg aas mov fiaddl (bad) mov cmp inc xchg out repz pop sahf clc gs jnp jp jge in icebp cmp mov adc xchg leave inc in or mov cmp fisubr push mull (bad) lret inc movsl dec mov movsb imul fisubrl inc fstpl jbe add imul (bad) hlt imul pusha pop mov xchg iret loope xor idiv es inc and into push cmp dec arpl outsb mov add out insl mov xor or ja loop std pusha mov inc (bad) stc pop mov push in add mov jae push and dec std and in notl lods add ja,pn pusha mov rep push in add pop pop out sub push cltd sbb jo imul xor cmp cmp scas or fcmovb movsb pop das pop test imul and pop ret in xchg adc divb icebp inc mov push mov daa xchg arpl (bad) insl xor addr16 cwtl push mov mov shrb dec out sbb mov stc xor aaa sarb push and movsb adc mov mov xchg jg jae movsb push and popa mov mov loopne inc jnp adcl rol test jno,pn lods jge and clc inc test or or fisub lret add (bad) mov hlt mov mov outsl mov mov test (bad) jg inc inc repnz or mov aam push data16 push das pop movsb dec jl lock pop repnz cmp jne mov inc push cmp (bad) out mov add dec and clc lods icebp mov ret pushf push (bad) std mov (bad) xchg sub das cmp stc cmpsl sbb out bound xor jl mov pop fwait xchg add es ja inc mov mov in and sbb fwait dec lret fs adcl leave jmp stos dec scas fnop out mov inc lahf les ret mov mov xor jnp fcoms and aad leave shrl movsb adc mov das dec jno and jp (bad) push and xchg fwait loope lods mov insb lods lock add xchg xor mov xchg push pop push jp sbb ja outsb mov jns or jo dec out decl stc push daa pop out add cli or pop xchg (bad) enter mov shll mov cwtl and and loop mov jp dec add mov js in dec in fidivrl je jne sub sub test dec xlat aam lock mov (bad) mov out xcrypt-ecb cmpsl into sarb lret sub mov sub push les nop stos pop pop sbb jp mov cmp jge outsl cmp pushf repz sbb mov ljmp inc xor adc jg shll adc mov and fwait movsl icebp mov pop leave sarb fidivl sub mov mov dec adc dec or rorl ds test inc imul mull xchg out scas ret cmp mov jmp sbb dec xchg lahf lds (bad) mov cmp add addr16 (bad) cli inc mov dec dec and test dec jmp sahf out xor jecxz jae (bad) icebp dec push jae xchg repz push mov xchg jmp ja roll dec test adc loopne cmc cmc xor aaa inc pop mov (bad) test test mov jle dec outsl shrl pop stos call test sub add inc (bad) insb inc out enter fdivr and adc repz dec cli mov js lcall lds arpl (bad) fs mov call sarb fsubrs repnz mov leave jnp xchg xchg inc ljmp dec fwait or or rcrl inc ja push movsb movsb fcompl in mov sbb push sbb adc jle push (bad) divb stos jnp inc test rcr jl xor sbb sbb call out mov mov mov mov outsb aam xchg insb ds inc mov jbe roll fdiv icebp out adc inc je pop xor add and push xlat lock mov (bad) bound cmc cld mov ss pop call mov add pop add imul aam mov in adc mov negl ret pop jp jecxz dec push xchg roll fwait pop pop int3 cmp and idiv pushf add pop lahf pusha sbb das mov add push mov sbb pop lods xchg push les mov dec lock push mov popf rolb lcall mov fucomp int3 add or loope sub or jns and pop dec mov mov fnstsw imul jne fidivl in xchg mov mov or ret push sub sbb adc gs xor popa ljmp push std imul sub add scas data16 sbb and mov nop mov lret cld decl stos test jmp push cltd xchg dec hlt out xor jl out scas cli les xor sahf adcl mov mov cmpl pushf sub inc xor adc loope icebp (bad) fldl sahf insl push pop xchg scas sub cli test lahf mov sbb mov mov adc stos outsb pop gs out xchg dec cwtl or es mov loope dec ficom daa fstpt xchg aad pop imul popf dec mov push sub mov inc in or push and push and and fnstcw pop push fildl xlat or sbb or cmp stos iret xlat in lahf push popa test fnstenv jmp sbbl inc in daa insb add test leave ljmp in sbb add data16 and cmp pop fs adc jnp xchg scas sbb or xor movsl aaa jnp pop mov dec adc mov insl push shrb into mov fldl2t adc cmp or out jbe test mov xor jecxz dec jmp shrl jmp pop inc outsl jns sbb sub xorl cld fs sub mov sub xchg bound mov movsl lahf outsl int3 (bad) mov out sub or push sub (bad) cmc push mov pusha cs sub and imul add cmp idivb mov xchg jge out push xchg pop pusha xchg mov enter dec mov fidivrl test aad or jae dec pop sub (bad) add call pop sbb xchg xor jmp xchg loop and scas pop or mov jl lret inc inc repz sub jne adc (bad) and clc inc (bad) adc push fnstenv stc mov clc push dec add mov pushf imul or sarl cmpsb mov and pushf loope lret rolb test and pop leave mov flds pop xor imul fnstcw repz push (bad) outsl push mov inc ficom fsubrs movsl pop fisttp ja cmp andl push loop mov adc fisubl push xor lods push daa test stc inc sarl popf dec dec out bnd pop and es (bad) movsl push xor imull mov jmp pop inc insl mov imul xlat cli clc mov lcall jmp xchg pop xchg xchg (bad) ja mov leave sbb pusha testl fcom inc (bad) jo and xchg inc pop pop (bad) mov sub sub fnsave loopne loopne mov es int3 movsb imul inc lret stos mov sub stc cmp scas scas std leave pop sub sbb xor adc mov jbe loopne in (bad) pop pop imull cmp lret je pushf dec rcrb movsl les or into call frstor mov jge push (bad) stos mov sub stos inc fsubs cltd cmpsb imul bound outsl data16 inc xor (bad) clc popf lds and cmp fs adc add cld imul in iret push add mov loop mov jl add loopne ret xor enter mov cmp fstpl lea arpl sub in dec xchg sub fldt pop lea hlt dec dec popa inc pop fbstp std cmc ljmp leave mov lret or jae xchg xchg or mov (bad) xor out test xor add lds inc and (bad) lds jo fst cmpsl aas dec mov add lods cmpsl cltd mov fwait sbb loop sbb scas adc fxch (bad) cmpsl mov (bad) xor popa int3 negl jp imulb inc shrb cmp jp inc cltd inc inc or out gs jbe push adc in jg dec xchg out ljmp dec lea mov int3 and test lret mov lahf adc fcomip inc lret aam xlat movsl mov inc sarl mov fwait cld test std adc sbb pop mov into shrb mov mov aaa nop aas mov xchg sbb fcomps ja test or dec mov mov aad dec stc cmc lret popa push push movsl test dec cmp fwait inc mov sbbb mov scas ss mov mov add inc pop in mov jg jne mov int sarb jl clc sbb (bad) ljmp fwait (bad) xlat sahf or out cmp xchg inc add cmp ficomp loop aam bound adc mov mov daa test push test inc lea addr16 sbb dec sahf and ljmp in (bad) sub inc jcxz outsl les inc aas add fisubr out subb sbb add adc xor pop (bad) jbe stc adc pop jge push cmp dec inc lahf scas jecxz rolb nop or adc mov popf xchg das sbb inc push test cs mov cs popa lods mov lds add and cld adc add int3 push cmp sbb lods into clc mov sbb ja push movsl loop in mov jl outsb enter fbld sub pop mov fwait add imul mov inc add and xor xchg inc xor jmp aaa mov pop lods mov sbb xchg sub fsub mov pop pusha imul popa sub dec outsl lods jb cltd or xchg mov hlt inc add lock fidivl inc push enter (bad) or mov sarb imul push imul mov lods or and cmp pop mov pop stos out mov test loopne roll mov sbb jne xor scas sbbl push add push in inc aam and inc or ds mov mov orl int3 scas mov push jp movsb mov ret ret jae int3 dec stos cmpsl mov dec adc inc ror mov (bad) adc fisubl jle ret mov xchg imul sbb lods push jle pop divps mulb mov mov std and push ret pop dec sub fsubrl js xchg mov popa (bad) push pop into clc lods sbb fbstp push inc and pop xchg xor mov sbb add and (bad) cmc mov push push (bad) jno pop mov mov sub int3 or sbb repz xor adc cmpsl dec aas insb cmpsb lret mov fimul push and mov stos inc dec les dec ficoml jae mov mov movsb jmp test xchg mov push mov aam sub (bad) scas mov fsubrl pushf mov push repnz mov mov movsb fsubrl popa pushf pop push sbb idiv mov outsl (bad) sbb lcall jns or mov mov add mov fildl push push inc sbb (bad) int3 xchg mov xlat adc mov xor mov pop fildl sub aad inc stos loopne cwtl mov push outsb jno xchg push mov sbb les sub out mov add int int3 out mov cltd jne mov test lds xor stos push mov mov xchg insb cmp or adc stos clc sbb or xlat cli cli (bad) pmaddwd (bad) loopne roll popa (bad) mov inc sti and mov fbld mov aad xor cmc jecxz inc (bad) mov mov lret popf mov push push fistpl fdivp ja aas lock or adc js dec js mov inc lret jmp xchg outsb aad inc xor push mov mov outsb test cmp movsl pop or es dec sbb (bad) leave js push in push xor daa je int3 ja cmp in push jecxz push out xchg addr16 (bad) inc jge dec loop push mov test and cmpsl sub andb or dec xor sub int cmpsl mov sarl xchg mov (bad) mov cmp xchg or ret inc outsb cli xor xor cwtl or icebp movl mov std mov dec jle cmp jne and mov push enter mov (bad) lcall mov push adc mov ret jg fucomip out pop mov repnz jecxz hlt adc push jecxz cmp movsl leave push test je push mov sub pop pop jmp adc jecxz pop lock movsb sarl mov aas shrl xor sbbb pop xchg push faddl popf test pop rclb mov xor mov push outsb imul pop (bad) cmp or into and divl jp push sub add mov xorl scas pop jnp add call adc add leave scas jle sub mov or cmp das rdmsr les add popa xchg jge fistpll dec int mov cld add or mov out xchg (bad) movsl (bad) push cwtl cs daa bound push adc xchg xchg xchg lods test xchg mov fsubs xchg lcall pop scas leave sti add out mov adc sbb xchg jl cmp stos mov ss and jns jg daa (bad) int3 adc nop push (bad) push cmp mov lret adc jmp adc jmp rclb loope mov mov out dec pop fldt inc pavgw call or mov jp movsl jmp xchg pop pop daa ret mov pop scas orl mov loopne lahf push (bad) ret jge aaa (bad) insl iret jmp cmpsl out push push subl sbb outsl sahf mov pop rcr (bad) das cmp pop loop test mov sbb mov dec sbb mov lcall cmpsb adc inc (bad) sub stos mov test cmp sbb mov add add mov ss xor fsubrs test fist lock and add jg mov into pop push or push sub inc mov cli stos movsb xchg and subb cmp loopne push mov lahf sub mov dec maxps addr16 dec das xchg mov push push adc mov pop sub mov pop jmp and push test cltd int3 repnz (bad) daa jge sbb repz jp cwtl andl sti add mov and mov aam (bad) push hlt xor pop jp jno clc inc pop sub mov outsb add cmp mov push add xchg addb xchg pop or or jmp repz loopne jbe lea mov push cmpsl jmp mov in jp jecxz imul adc iret lock ljmp adc pop xor rcll lahf lcall repnz and xchg push jecxz minps in adc and jl adc xchg iret sahf cmp ret ds bound popf enter push stos scas add clc sbb clc imul mov mov or stos test adc xchg jecxz lret adcl push xor cwtl pop stos scas dec pop pop int3 fwait aas xchg mov jecxz xor bound std mov sbb shrd pushf insl sub jno push fstps aaa cmp xor (bad) or sbb out icebp andb xchg daa repnz clc mov lret jmp push aad jl fdivrs dec lods or cmp imul insb frstor push sbb pop out stc cli scas out out dec lret loop adc test cmpsb jmp or aas jp shr (bad) mov ljmp inc push mov leave mov push dec fwait std icebp mov test (bad) (bad) in cmp es jnp cmc pop cmp sub mov aas jg popf mov adc ret and cmp lods nop cmp (bad) or pop test jp inc aaa jp or pop rclb xor icebp jne mov xchg call xchg and aas pop aam mov hlt imul sbb add insb xchg pop test popf jnp ret daa jnp dec ret fdivl push mov cwtl addr16 fistpll mov xor xchg push jns adc ja pop mov adc xor es enter mov jg fcmovnu fstpl dec popf dec out sbb sahf push popa or (bad) stc and xchg cwtl test mov mov in xchg (bad) aad rclb mov outsl pop arpl dec lea (bad) fidivr push sbb jmp xchg aaa xchg (bad) cmpsl mov jnp push lret out pusha cmp mov jae mov scas or add sub inc rclb jae adc sti aas pop mov adc movb lds leave mov mov test popa xchg mov dec movsb cmp movsb lcall mov outsl add inc or cmc (bad) xor rorl pop stos jmp lock inc in iret ror fnstenv mov loope aam (bad) fnstsw or loop push mov or cmp cmp leave lds mov data16 int3 ror jmp imul or jp popf cmpb sub dec mov xor jmp imul dec lret or lret mov sbb std cmp subb jg mov out mov aam inc xor push les push test (bad) jo push dec test sbb into cmp (bad) mov mov mov leave dec out jns push (bad) ss lods lods mov scas push cwtl je mov enter (bad) negl lret fs in jp pop lret mov daa push je mov xchg mov fnstcw xor inc aad jp and out jns xchg test lds fidivl cmp test jae insb sar fcmovu sahf xchg fs outsl jne data16 outsb and (bad) mov aam int (bad) pop xchg icebp aad inc sahf lods hlt dec (bad) inc push lahf movsl xchg popf push iret adc or test pop sbb movl std dec scas push scas jae mov orb push jb imul mov ficompl fadd mov sbb mov jecxz sub inc cmp sub je dec into adc rcr ja rol xchg push adc jmp inc push sbb addr16 adc dec aaa push xchg jb mov push lcall mov adc mov fsubs add add dec dec ret std dec clc adc mov enter fwait mov lds jbe out xchg out cwtl shlb sahf mov in xchg sub (bad) nop fsubrp out into sub cmp sbb cmp add jnp jnp mov dec adc jmp xchg fstps jae cmp out lods mov jb lock cwtl or cmpsl jnp xor xor sti and js jmp jno sub xor mov pop or or xchg jo push test cmc pop mov (bad) add jb lock ja xchg mov and fcoml sub ret arpl insl (bad) mov sbbl pop sub stc je mov mov imul push sub xchg pop (bad) jae in or mov cmp add mov mov xor mov mov sahf dec push iret pop movsl inc jno mov lret sti or cld in inc ds push push jp sub inc jb jno push dec xor popf aad pop jae mov lret jl pop mov sub xor je lahf arpl imul lret xor jl (bad) daa and lahf testb add sarb insb mov pop mov outsb cli cld and inc aas pop mov icebp push mov xor shrb enter aam jmp and inc or cltd dec outsb adc pop push cmpsb cmp fsubs das cld adc (bad) decb mov sub test loop sbb into aad (bad) in call xlat daa mov mov fldenv adc or mov in cmc mov mov mov mov or sub pop outsb loope aam push adc sub add sub (bad) or out xor insb imul lods mov dec push pop test int mov push mov out jmp movsb push rcrb insb call popa arpl mov inc lret jb (bad) add mov dec negl cmp sub cmp cltd jae xchg jle xor jl sbb mov loop sub out test daa fiadd mov push aaa adc sub mov and pushf je dec push mov rcrb cmpsb sub sub pop xor ds sbb push fwait pop gs lcall sbb lods (bad) stos call xor xchg jo imul iret xchg xchg and xor cmpsl leave inc mov push (bad) fwait imul sbb lcall pop and in (bad) int3 jecxz jmp dec in jge xlat in mov inc cmpsl idiv clc je mov scas inc jg pop jl adc adc jb xchg push fdivr imul or loop dec idivl mov and aaa pop popf pop or mov and (bad) jmp shrb (bad) jmp and pop out dec es push (bad) and js mov and pop jle sbb or dec inc inc xchg (bad) dec sbb sbb dec fwait jae,pn repz jb,pt test clc mov outsl fcompl sub out or adc push out aaa xor add sbb jge jl jns in das mov rcll rolb mov rol dec adc jg cmp iret in aaa or out (bad) mov repz add jge xchg inc js jbe pop and insl shl into imul mov cmp mov into pop and jp test mov into sbb aaa push gs mov cmp cmpsl sti xchg xchg or jmp inc cmpsl das lcall adc jmp mov mov add sbb lea jl xor popf lods adc insb mov dec sarb add jecxz mov sti jb adc xor lods mov xor inc lods cld in aad sub (bad) neg add test cltd jbe sbb lea dec jle pusha (bad) dec push (bad) in xchg adc mov mov pop cwtl (bad) jl and sbb mov cmpsl out push loope push fldenv enter xchg sub add pop cld and mov movsl push pop fistpll shll addr16 lods mov hlt jp pop jg mov in lea loop adc jmp cwtl lds sub dec inc inc arpl or inc bnd and loope aas push sbb int3 jecxz ret lret clc xchg adc cld jg sbb fwait icebp je or leave rcll scas cli icebp loopne jnp jbe dec mov lret dec adc dec jbe and loop (bad) sbb jmp fs xor les cmpsl mov sub incb lahf ds mov sub js mov int3 push adc jle push std jecxz stos ret repz loopne cld pop push fucomip repz (bad) loopne (bad) mov int3 xchg jecxz (bad) fist (bad) stc outsb mov inc pop cwtl mov pop loop dec in stos or addr16 cltd je inc add xchg sbb cld cmpsb movsb cltd outsl sbb stos ds fistl pusha sbb clc dec fsubrs insl cmpsl jnp jp sbb push jmp sbb push je imul and mov cmp jae (bad) cmp and inc push cmpsb xchg mov ret pop xchg and ret mov mov push sbbl or into popa imul jo pop mov into or sub out lahf rcrb push lock aas in or lds and and mov pop test std jne push (bad) aas sub xor roll xchg mov or sahf addb out sti and cld mov cltd lcall out int3 xchg lock pusha or hlt fsubrl jnp mov movb in dec push shr popf or xchg sub dec jge mov popa and jecxz test (bad) jb pop ljmp pushf gs dec mov jb repz iret mov jns iret pushf inc std mov cld adc xchg xchg lret and (bad) adc out addr16 dec movsb cwtl imul xchg pop jmp sub in lret stos xor in mov jnp enter cmp mov sbb daa loopne sub dec aam inc pop test or mov push and nop test inc nop repz movsbl sahf mov lea cmc rcll mov pop lods xor (bad) lods jae ret lahf push mov pop mov popa sbb (bad) int3 inc sbb adc ljmp test (bad) push sbb popf mov (bad) sbb lds and imul add or xlat repnz jb lods fisttp hlt cli iret fsubp dec leave hlt adc xor sti xchg pop aaa xor add jns and xorl mov cmpl sub or cmp out jbe (bad) cwtl inc aas arpl inc mov adc push icebp nop dec xor movsb sti clc add push mov stos push push insl adc popf jns add jecxz stc pop sub les shrl lcall sbb and ret invd or (bad) repz stos clc dec sti es or sbb push (bad) in mov aas mov sahf fsubrs shlb fisttpll xor arpl bound mov pop pushf mov inc js jge or pop fdiv sbb ret sbb sub ret or mov test out push hlt vmwrite mov xchg popf bound mov inc sbb lret mov add rorl popf inc scas pop pop lret xor imul popa test cmp or jmp clc mov out mov mov fwait sti cltd jle cwtl pusha xlat inc rol pushf xor jecxz cmp out push cs mull lds psubb cld (bad) and jmp mov mov in rorl push arpl and sub pusha push into test sub lock sub loopne xchg mulb divb xor mov in fs out pusha pushl loop imul inc pop repz leave aad int mov add and xor pop adc mov or inc pop xchg sbb call xor xchg mov jb bound shrl mov sub mov cmp jle add pop cmp gs rcrl sub int3 mov cwtl in and xlat adc mov and dec fnstsw repz test push mov mov and stc mov inc js xchg rcr mov xchg jnp inc inc inc and in out add loopne out data16 inc cltd insb cmp fadd sub fsubrs add push fwait lds in pop imul mov cmpsb test inc aaa adc (bad) jbe mov icebp xchg test push cmp ss adc ror and mov insb sub test cmp es aas and mov xor push inc jecxz fistp pop push out iret jecxz cmp jmp lods push icebp out mov push outsb inc dec hlt fstpl fsubs jl fild xor scas mov xchg mov fldcw call cld std movsl clc xchg bound in arpl nop cwtl dec add iret negb mov cmpsb xchg xchg and dec pop push test (bad) xor adc jnp movsb in xor push jne (bad) mov movb popf add popf lret stos jle and push push xchg or (bad) jle fistp xor (bad) fisub outsb push (bad) mov dec mov xor inc movsl adc sub popf dec lock inc leave loop mov imul mov xor xor dec insl pop movsb sbb or loopne push fmull (bad) leave mov push push mov in ss cmp sbb subb pop sub (bad) ja dec fcompl mov subl lret loopne cmpsl push leave (bad) cmp (bad) xor pop mov scas test rcrl (bad) ret gs imul jl cmpsb mov adc jmp pushf mov (bad) ljmp sti cmp push stc sbb aaa inc loope mov arpl adc imul mov repz inc jmp and mov jmp and lret or mov cmpsl dec mov (bad) aam pop popa ss cmc movsl into mov jg cmpsl cmc mov sbb pop cmp xchg sub or fwait dec jle pop jecxz aad scas sbb xchg fwait imul adc call sbb sahf cmpsl adc jmp (bad) and scas push cmc mov lock jns cmp pop daa jp cmp in lds cmp mov adc mov fldcw mov mov out outsl outsb push xchg cwtl test ds lret popf and shrb xchg stos dec dec into add test adc and jmp (bad) repz inc and dec popf jno pop xor cmp and adc fistpl das movsl mov sub xchg scas add dec mov cmp pop cmp mov fwait inc and hlt push sahf sub push enter push mov repz icebp idivb pop lahf (bad) out pop adc mov jnp cmp outsb daa push sbb push push mov push xor xchg test lcall cmpsb cmpsl call mulb or scas test dec mov jle jns cmpsb jno dec and pop and repnz mov loope adc and scas cltd mov sbb out push and sub sub loop push insb sbb and sbb jp or sbb ret mov call sbb imul cmp dec xor adc add stos mov lods loope dec (bad) xor push movb xor int mov subl icebp loopne fwait xchg or dec ffree add sub lea iret loop std mov jp sub daa ficompl mov (bad) repnz outsl icebp (bad) xor outsb insl sub stc test arpl pop or pusha std push xchg out bnd repz aaa shl xchg push jp adc imul clc sub bound (bad) lods mov jp enterw pushf lret jge ds leave aad add mov (bad) pop lods or cmc jp jle inc hlt sbb pop scas test fld push sti imul call or add pusha pop cmp or in jno (bad) lock pop movsb dec leave dec (bad) in xchg cmp fistpl sbb les jg mov xlat jbe mov mov das (bad) notb into or dec lock push xchg sbb lds lea cmp cmpsl push (bad) mov jns xlat mov fimul rcrl mov in jnp or jmp in (bad) dec xor dec sub adc pop das rorl out or (bad) (bad) jmp xchg mov jae push mov sbb mov xlat (bad) lods fs repz mov (bad) inc or jg pop shl stos push lods add jnp ret out pop add inc dec mov inc xchg inc mov pop popa xchg or lahf test loop imul push fnstcw es pop mull mov stos test push in sbb lds inc sarb sti mov leave inc push mov or sbb ss dec jno into or cmc pop mov das pop test adc inc push out lret subl inc mov repnz outsb addl call inc mov lcall fs mov test lea std and lea sarl fs cmpsl adc rolb shr loopne dec jmp (bad) loope popa loopne cs leave jae adc mov call sti inc mov push repz ror insl pop pop clc andl jg pop das cmp mov (bad) xor push cmp cmp dec mov sbb cmp loope and iret mov cmpsl jo rol xchg add movsl mov outsl fdivrs stos shr sbb cmp or sbb ja cmp insb mov xor mov cmp pop js and cmpl insw aaa xor dec (bad) icebp sub xor sub ds xor aaa push xor xor mov push cmp mov and inc cmp (bad) ja mov mov dec adc push inc loop sbb outsl aas ret daa inc jg pushf in or xlat lcall cltd shrl lods fisub sbb add cs cwtl cs add mov sub mov mov cld mov sbb ja jb add push cmp dec outsb push and js sbbl or clc lea xlat sti bound stc stos pusha inc mov js push out lcall cmc pop pop maskmovq cmp daa adc addr16 add jg (bad) loopne pop mov and cmp cltd push int push fdivl xor adc data16 lahf popa or (bad) cmp and pushf fidivr fs fcompl das lea push mov ja icebp repnz mov lock out outsl lods push fs sbb jge loope rorb (bad) mov adc mov cmp jbe jns,pn mov int add (bad) lcall xchg and mov shl jae jmp neg pop stos popf call ss dec mov bound dec test xor inc pop pushl fiadd cmp cmp push stc mov mov (bad) jae ficoml add insl xchg pop jg adc mov lods xor fwait sub cmp rcll mov ret aad sbb lods xor pushf loopne sub out fsubl add mulb mov imul iret jbe mov fnsave jb jnp stos stc (bad) insb (bad) jl sbb out lds sbb lahf ja ss shll add adc stc cmp sbb xor clc mul xor arpl add out xchg imul xchg daa aam lret or aas sbb insl xchg add aaa mov nop xchg repnz neg int3 cmpsb sahf shll popa in (bad) stc dec mov outsb clc cmp sbb push ret jae sbb (bad) sarb xlat fnstcw ror cmp pop inc popa mov xchg aad pop pop sbb sbb rcl add push dec cltd mov (bad) push dec cmp mov je sarb push (bad) xchg push sbb fs ret pop adcl push mov cmp mov rorb fstpt mov and lds sbb movsl fs shrl ret inc and mov cmp inc insb stc insl cmpsl adcl ja in sahf or cmp out add push xorl hlt xchg scas icebp imul adc (bad) aaa int3 dec sbb movsb mov jp jns xchg jb add cmp and loop mov mov into jb mov dec pop mov ret aam loop addr16 xor shll outsl push jne cli xor arpl fistp inc jno mov imul mov and push or (bad) and sub jnp sbb out (bad) aaa fdiv sub jg cltd lcall mov mov dec in (bad) daa push popa push xchg lock mov cmc repz xor cmpsl jne xor add xchg mov sub je xchg pop jge pushf mov out pop or rcrb insb iret mov push or sbb mov and out pop es or leave mov inc fadds pop mov inc sub les pusha fcoms pushf xlat lea adc (bad) (bad) dec stc sbb out cli cmp dec add out cltd adc bound into out lods call jbe roll lahf mov gs pop mov (bad) or (bad) cmp fsubrp mov xor sahf (bad) adc in scas addr16 outsb or int3 add mov and push push mov pop and mov sub sub inc xchg sbb jmp jge fisubr mov popf jg insl and or mov mov daa fimull out pop mov sub jo push push enter push push mov aad es jbe or (bad) hlt lods cwtl mov jbe out mov push xchg add (bad) dec in and shr cmp lret lods enter sbb xchg int3 adc rolb mov (bad) mov sbbb sbb cld sbb (bad) push push xor and lcall mov jbe inc adc dec faddl mov jmp out in aad icebp push nop stos sbb imul push mov xchg pop adc fwait pop jmp mov lret aaa mov pop (bad) inc xor lods jo insb and ficoml (bad) shll les mov loop mov adc rcll sub adc add sbb mov test push daa in jge pop sti fist sub (bad) ficompl outsl fcmovne (bad) xchg insl mov ss sbb fistl push mov xchg and scas test add or jbe cltd icebp push out pop hlt push mov pushf shr push add pop test mov out mov push inc inc push stc test test and mov push (bad) mov adc mov mov jmp add xor inc dec lcall or call (bad) in icebp mov fdivl loopne fsubrl jbe dec hlt andb and jne push xchg fstpl add sbb lods pop jnp ja xchg arpl cmp push mov push add mov sahf mov lock daa jbe and rcrl sub repz cmpl inc mov inc mov xlat xor mov fcoms mov inc jbe mov sarl xor insl je out nop mov xor mov and jecxz fldcw bound sub pop in jecxz ds adc sbbl cli cld in (bad) xor push int sub cmp mov pop sar aaa xchg or pop xor es inc inc and xlat ss (bad) outsl je in xchg fcmovnu (bad) mov pop (bad) imul (bad) imull std nop scas mov mov je xchg andl mov fmull sub or pushf dec outsl or lahf das lea ljmp or cmpsl jbe cmc xor aam cmp mov push jl cwtl push imul push mov sub dec or iret mov inc adc call stc mov test mov mov xor fs sbb mov mov sbb popf rorb insb lret cmp fisubr jb cs lahf test or in jge scas sub lods les (bad) aas hlt cld shrb popf pop in adc mov add loopne cmp out push gs push adc int jae popf jge cld fs inc pop fistp sbb sub jne xor (bad) lea xchg cmp xor arpl rcrb out std call inc dec inc push sub sub mov push adc scas push pop lods xchg or xor adc push sub test ja je adc gs sub cwtl sbb cs mov mov sbb outsl lods jp addr16 add pop subl aaa add bnd pushf xor jecxz sahf sarb div jge loope aas out (bad) mov loop repnz sub shlb iret jl sbb outsb rolb lock imul fisubrl hlt jp lds daa fsts mov mov dec xor inc addr16 adc lock mov ljmp imul adc hlt pop pop add (bad) mov test (bad) jge (bad) sahf shlb push mov mov inc je pusha mov ret sub adc out mov or cmpsb push jg pop test sub jecxz xchg out adc or clc mov adc jne xchg shlb or adc inc in cmp aaa es inc out in int3 (bad) mov lock out mov pushf cmpsb cmp ficompl push add gs lret inc test movsb mov sar leave ss out (bad) push ja daa pop cltd cli arpl clc insb hlt jmp mov mov rcrb in mov cmp adc mov mov push jmp push repz mov repz push imul mov cmp lcall pusha subb jp xchg movsb paddw jl mov cmpsl shll add or cwtl out fsub pusha lret cmp pop iret (bad) mov in jnp pushf add xorl pushf mov push loop sbb pop dec pop mov jno negl sbb push jp push iret xlat mov dec jns xor jo pop xchg mov pusha insl pop out mov jge inc xor scas arpl mov popf jno cmp fstl aam popa adc sub jnp in loopne sahf lret or push inc dec push rcll add pop test loope xchg mov mov loope mov call adc xchg sbb fwait jo ljmp aaa cmp jecxz cltd sub ss lods jns data16 mov cmpsb cmpsb sbb mov arpl xchg (bad) aas or add data16 dec adc or icebp sub lods in or movsb dec insb mov xchg fistpll lods jbe arpl inc mov pop xchg aas ljmp sub pop jae xchg testb and mov aam push es loope mov out sbb push xchg adc fistpll ss roll jns dec sbb xchg (bad) (bad) daa or jne mov scas mov pop (bad) and xor and inc or pop cmc jo mov and xchg test adc loopne lret sub cmc leave dec sahf imul xchg xor shlb sub cmp icebp scas rcll jge xchg test faddl dec and in cs je xchg sti push shrl cltd cmp sbb movntq out (bad) or loopne pushf xchg (bad) mov shlb out xor por and xor jl jae sub push adc xchg fstl mov bound jnp out push popf clc andb jne repnz jg in mov push mov mov push arpl jne jne loope jbe stos mov fidivrl imul jmp lahf popf enter push mov or sahf fwait jp mov je rorl xchg je (bad) jae mov shr dec jp mov sub sbb xorl divb mov mov (bad) mov cmc inc aas mov cld pop mov sub xchg nop pop subl mov or pop dec add inc push xchg push (bad) cld arpl push pop iret adc mov daa mov push loop test fwait test or popf jb pop adc jb push adc jo or call dec je (bad) adc xchg push clc dec sub std imul repz (bad) testb or sbb loope (bad) in pushf gs mov shrb nop inc daa in mov xchg inc or add cld imul pushf call lret xor dec cltd add dec sub mov mov adc scas inc gs outsl repz inc (bad) or mov adc pushf popa and xor inc movsb xchg mov jb lods int adc mov (bad) xor cld mov aaa mov or outsb lock push xor add outsl pop out push js jnp ret xor jnp xor (bad) mov (bad) push popa inc ret jmp fbstp fs dec sbb inc push cmp add sub xchg inc pop dec stos neg push stos cmc lock loop sbb jmp out int3 mov adc and mov insb stos lahf mov fisub xor and xchg mov scas push xchg or sub rorb xor jg push jno hlt inc mov and fstp shll cltd adc lahf or lret xchg cwtl sbb jl scas adc das iret fistpl (bad) shlb and (bad) mov adc lss nop push loop fimul repz push push mov imul and out add ret mov sub ret jno inc mov jbe xor mov pop sbb jb sub and pop fcompl cli nop mov fnstenv lcall sahf add ljmp sub mov fsubrl mov add dec sti xchg in or jle xor inc nop mov aad mov inc jle stos and cli ficoml mov hlt jmp xchg sub mov xor gs aaa xchg les add pop mov xchg lret sub mov cmp sub sub xchg mov adc dec push adc xchg ret imul jb ljmp mov mov ja push dec push in xchg test push jno dec fild add movsl or push mov push scas aas shr pushf cmp (bad) scas das mov jl cmc (bad) and aas xlat mov in fstl (bad) dec sub pop insl xchg jge push push arpl mov dec push push mov mov xchg dec test dec sbb push mov cld iret addr16 bound sub jae jae shlb pop fcmovne jae cmpl cmc ds jle hlt inc xchg or in (bad) jb adc dec mov dec fistpll xchg xor xchg inc xchg pop cmp jb das mov mov test inc xor cmp loopne cmpsb push xor mov cmp sub xchg add mov mov insb jb and in push int adc xor sub and fdivr xchg pop je mov cmp cmc (bad) das sub dec mov out adc push jle addr16 push lds iret pop push aad aas xchg lcall mov outsl cmp les push fsub dec mov xor data16 add scas fwait mov push stc mov popf xchg xchg popf sbbl fwait cmpsb stos daa int xor mov xchg dec imul (bad) and std mov lock scas sbb and xchg xlat mov mov and xchg movsl push add mov lret xor cs arpl jg and jae adc inc mov ss cmp das adc rclb push xchg xor xchg pop add test stc cmc push iret (bad) cmc adc das cli push aaa fcompl sub pop (bad) cs insl frstor sbb fiaddl test loop adc fbld cmp loop bound dec (bad) ficompl ljmp loop out (bad) jp lods fdivl mov and loop decl outsl divb mov fs cld ret add ror jns cmp mov cmp cmpl mov cltd sti test loopne lret icebp rol push (bad) in adc adc shrb mov push lods repz insb sbb movsl xchg mov fstl movsl add leave loopne,pn pop leave pop mov repz movsb out ss aad inc dec fwait pop inc and adc movl jecxz jge mov mov aaa clc push or mov ds or call mov inc xchg scas push call mov mov lods insb cld (bad) lods aad inc lret and jle lret shl (bad) mov outsb iret mov dec scas inc adc adc cltd nop mov sbbl xchg mov xchg fcompl ret fnop dec push fisubr xor jne inc insl in int3 addr16 dec mov pop adc scas dec sbb pop jmp and pop ljmp sbb pop lods lcall pcmpeqb mov pop jnp loopne pop test (bad) mov push (bad) lret pop sbb int push mov add cmp into adc test xchg cmp pop dec xchg sarl in cmp add mov into pushf (bad) fmuls aad (bad) adc orb addr16 inc xchg test dec es xchg loop sub js adc popf int3 jae mov (bad) jbe xchg arpl jmp jo std push xchg jns idiv xor jle sbb pop lea mov sub cltd pop ds adc ltr rol xlat insl fistpl pop js fldl in push sub (bad) insl test sbb jnp xchg test dec pusha mov mov xor sahf dec xchg or xchg test xor stos mov mov cmp in push in call jp sahf cmpsb jecxz and or enter xchg fnop loopne lret sbb xor sbbl cmpsl mov in mov lock fmull jns sbb ret push push adc jg adc (bad) std (bad) stc pop negl jl pop push push mov lret rclb add jns mov outsl jae data16 adc dec shll arpl ds xlat dec push mov mov sub sbb push push or dec sbb mov shll outsl leave adc clc outsb add loopne pop push xchg mov ror pop push cmp cmpsl ret ja out hlt cli lods push jg fsubrs aad xchg push push lock mov sbb or pop (bad) es pop mov test daa add sahf pop es dec jno aad test mov les jne negb mov std mov fs je fidivl push movsb fmulp inc std push repz push in jecxz dec lods pop imul ja xchg cmp mov addr16 js cpuid xor dec jno cld inc sub mov (bad) sti push ret pop jle cwtl xor add cli jne out or imulb rcll test mov leave or outsl adc sub icebp int dec popaw xchg jg inc test and add pop aam je rclb shl sbb js pop jp loopne addr16 test adc sahf mov mov cltd mov fxch mov (bad) daa imul xchg repz mov das mov rorb in and ret ss jle lret arpl pusha in sbbl rclb cmovb out lret or inc inc fild mov mov push jnp out cmp xchg jp xchg gs dec stos dec jl push call push mov cmp fistpll and data16 jno mov or push lods mov cmpsl jle movsl ja or arpl adc aad pop add xor mov cmp jl (bad) mov add mov pop pop or adc mov sub mov xchg in aaa add mov push inc scas cmp and jl cltd inc imul jno xchg dec das out test movsl dec shrl jae adc insb mov add xchg jae push lahf sbb repz dec ss out add dec lea ret aaa sbb aaa pop call (bad) xlat mov xor fcoms push cmp pushf mov pop hlt pop (bad) lret popa sbb test in fisttpl xchg scas push ret xor xchg lret mov rolb add in sbb push rcrb cmp add push jmp jae ret icebp jne sbb mov add jmp stc xchg lahf test dec ret fcompl cmpsl push sar xlat cmp xor ret outsl push and mov into or pop jge faddl insb sub aas cmp in enter fs mov or cld aas js xchg inc adc in cwtl pop fildll xchg jae scas mov adc lock and add mov out lock das test adc movntq cmp push enter xor js and negb mov mov enter add inc fwait or xor dec or adc jno jne cmp pop xor mov ljmp pop js icebp int and mov fwait loop push mov sbb mov mov ds jae pop xchg inc pop imul mov mov pop fiaddl pop cld mov in outsl sub cmp pop dec (bad) push or cmp rcrb outsb pop and add arpl or aas int xlat mov lcall add call jg ficom ds mov sbb (bad) xor (bad) lods push sub xor (bad) fimul xchg stos xor icebp (bad) enter les lcall mov dec push test jle dec add cmp cmpsb mov jmp in xorl (bad) fidivl pop xor roll push cmc dec add clc int xor iret cmp and pop ret stos cmp push jecxz sbb mov xor lods mov sub das gs dec cmp and dec jecxz mov cmpl mov pop mov adc sbb mov (bad) mov fst fucomip xor inc repz out les lret add jecxz bound jmp out xchg insl push dec (bad) cmp ja xchg xchg imul adc enter dec lock enter stos mov cmpsb sbb xor outsb out movsb ds clc popa dec cld leave daa out insl push push push dec push mov outsb mov jecxz jmp clc lods in mov scas mov aaa inc mov lods push (bad) data16 push dec lea stc mov imul test adc push and xchg mov aad xchg mov sahf cli aad fwait push pop and ja or adc xchg je xor push add test fwait jmp rcr mov lock sarl push mov mov adc into leave adc add jle das inc nop xor sub loope gs jle sub hlt (bad) adc xchg sbb jecxz or dec push pop in hlt mov xchg ja add mov pop cmc cli push add pusha mov push dec sbbl jge (bad) or xchg inc pushl cmp mov sbbl jmp iret arpl dec xor xlat mov jl pop cmp (bad) lret adc sbb xor arpl mov push repnz fistpll jne mov lods xchg aam ljmp adc dec js fwait pop xchg mov or adc scas mov inc and push dec cltd ja ret adc sub lret shrl cmpsl shrb or cltd and or sub mov (bad) push fmull sahf pop mov xor jnp fdivs and mov imull loop fcmovnb incl xchg daa pop inc pop mov (bad) jl mov rcl (bad) or sbb jno cs mov push fidivl ds iret sbb stos xor dec stos push out jp icebp xchg pop or das mov adc addr16 mov sbb xchg cmp (bad) mov jmp aas es inc dec pop gs popa mov iret mov or psllw lods repnz icebp push int dec sub mov fs leave xchg popf dec and aas pop push dec cs insl dec das scas pop sbb ljmp xchg push cmpsb xor pop or leave jle mov fsub mov ficompl cmp xchg sarl (bad) push fnstsw sti pusha or pop jp sbb add notl dec (bad) mull xlat and das adc popf mov sbb lock in int3 dec adc push mov and add inc inc mov js add dec mov pusha xchg jbe mov nop mov punpcklbw addb push js out or call adc push scas shll mov xchg mov out push add aad push mov adc push push or jne dec stos lret lock pop pusha mov enter fistpll sub roll lock mov and mov and push sub stc std ficom call imul mov cmp sub add insw int3 mov push jnp pop sahf push inc push pop xor repnz icebp pop xor push mov stos push rol sar in mov sub add notl test stc test jmp inc xchg jae fildl pop enter xchg or rorl call sbb bound arpl call jle push cmpsl push push leave test sbb and cmp hlt mul adc leave jecxz adc movb cwtl icebp int3 or mov dec inc scas cmp jnp pushf push mov call insb adc inc mov sub scas dec fdivl sub dec cmpsb push mov daa xchg sub fisubrl and addr16 test and movsl pushf call (bad) ffree or in xchg pop xchg mov pop jo xchg cmpsb and jp and sbb leave lret mov repnz fdivrp sbb das jge lret test aaa jb xchg subl push cmp loope cmp add xor mov mov lds sub pop xchg (bad) movsl mov aas add pop enter mov adc stc fist jbe shll and add sti adc cmp ret jno adc ret movsb pop inc and push adc sbb movsl std inc lods inc push sub mov jl add imul pop mov sub mov inc lds enter mov addr16 ror repnz hlt ds fisubr sbb ret and sub (bad) xlat adc push adc loopne fldenv ljmp push mov dec popf scas xor ds jl pop and sahf int jbe test idiv sub mov add push (bad) xor rclb in cld cmp aas mov sub inc pop pop cld or in fwait dec xor push cld ljmp sub in or add jno pop movsb dec lret jb in inc jno mov xchg adc sbb subl mov outsb repnz and mov je jno inc cwtl jae sarb cmp sub dec mov push and and dec or fs sub sar and hlt sarb dec (bad) divb fwait lods fsubl pusha jne adc mov xor mov xor and xor pop dec stos mov je xor insb adc pop cld (bad) enter pop mov dec pop aas movsl or mov cmp cmp je adc movsb mov sbb rcr bound push xchg xchg xchg add xchg sub jl xor repnz or and fdivl bound mov jl ljmp inc enter pop jmp leave mov add mov dec adc xchg jbe ret adc test pop imulb and sub cmp imul leave (bad) push out push xchg push cmp mov xlat cmpsb inc test in or scas cmc rcrb push inc iret imulb es jne movsb pop clc xchg sub push xchg jl hlt sbb adc mov imul xor xor int3 sbb mov out (bad) lret and daa cmp jb pushf mov ret mov add mov pusha call sbb dec movsl push aam sub test jns fstl je arpl add mov cltd mov enter xchg fist scas ret jbe out (bad) mov cmp popf xchg addr16 pop push pop aam lret (bad) repnz (bad) fidiv cmpsb gs (bad) addr16 inc repz mov pop inc xchg mov push mov and lods sbb je in cmpl pop adc inc lods insb test pop stc add ret fcmovb cli mov mov or adc xor repnz adc xlat loop pop fwait push test fdivr in in push push pop sub jnp and sarb or popf pushf cltd inc dec push mov mov jne in dec mov les xchg (bad) lods test movswl xor call pop negb ds cmpsl pop je and ja inc adc dec rcll cs bound jl sub (bad) and (bad) in popa xor cmp in fmulp in ret mov sub (bad) push pop mov stos roll stos add cld (bad) cwtl sahf push fwait add cmp xchg packuswb sub mov lahf sbb adc outsb dec sbb push jmp jl xchg add jae push push sbb rolb sarb mov sub add xor arpl pushf push loope push push push stos mov loop xchg adc fmul jl cmc inc in pop or cwtl popa popa or and ss call xor xchg ficoml popa jb fsubp cli dec lea in add mov repnz push mov pop mov jl lods mov neg (bad) adc add lods insl sti add outsb dec cli jno outsl ja or loop aaa fcmovbe (bad) jl xor fisttpl jg mov jnp jl ljmp mov xchg xchg xor sahf ljmp push jbe mov push data16 subb and mov addr16 sbb pop dec cmp adc popf pop int out mov pop icebp ss in pop cli cmp mov dec xor inc mov insb ss dec movsb (bad) jnp cli xchg cwtl dec fmul jb cltd ret jmp loope pushf mov lcall inc pop insb dec es inc xchg dec and cltd lock xor push mov mov add pop mov fwait push popa loope cmp cltd push adc sub in rcl les dec mov (bad) jae dec movsb dec adc cltd mov adc or nop insl in and mov jnp outsb adcl push xchg push fsubr gs dec fidivr jbe imul dec inc sbb sub xchg xor scas mov int lea sub outsb ja fs std adc dec add jnp jl xor (bad) fidivrl mov sbb add pop lret ret xor divl cmp push cmpb jecxz jno aaa pop inc mov sahf fist xchg shr inc or stc out dec push inc cmp pop xor xlat fnstcw cli adc dec sbb (bad) addr16 xchg jns cmp push daa xorb push jmp ja lcall and adc bound lock cmp and je push shlb in push icebp lret sar push dec xchg xchg clc jns nop adc sub xchg xor jbe call add jne aam sub push mov adc cmp lods repz jmp xor sub jmp jne repnz push add xlat ror mov aam shll and cmp mov in dec fs cld insl setge jmp or in pop sub andl fwait adc (bad) jp lret fdivr in mov movsl mov scas and pop mov lahf addr16 or imul mov sar push cmp jmp mov cs pop inc adcl and cltd test stos and shll push mulb rcrb out rcrb ficom mov or and imull enter dec out or pop jae push stc rcrl (bad) xor sub mov pop jns cmpsl sbb push cmp into ret fs mov mov mov jle enter jae mov mov cmp aad pop pushf jle popf das cli cmc push sbb lret inc (bad) jp and xchg (bad) fmul inc push or test leave jmp jbe or iret daa pusha jecxz push mov xchg inc pop outsb mov adc popf lods pushf enter mov mov xchg adc in sub scas lea cli jecxz mov push dec sbb jb fmuls ds push sbb fidiv fimul sub cmp lahf popa dec xchg ret push movsb xchg lret in fimull push jle out lea scas mov out aam jecxz cmp add popf int3 sbb lds fadds les scas pop dec popa jno ljmp out cmp xchg test loope insl jb mov push lods dec cwtl pop inc mov sti insl clc and pop cmpsb hlt sbb and enter cmp mov dec idivl rcrb clc stos xchg fiadd jecxz sub dec (bad) fstps loop dec idivl fiadd (bad) dec nop cmc lea loopne jbe data16 pinsrw fisttpl outsl mov mov xor pop push mov mov jge mov mov test test jbe mov lods out sbb cmp outsl clc idivb push into enter fcmovb or or imul repz andl clc adc lea fs dec addl sub sti inc sub das fcoml imul jae popf daa push inc imul std insl jge push cwtl xor std call jno sub add sbb push jne dec adc sub pop mov mov nop mov rorb mov dec push mov cmp mov adc xchg adc adc cltd lcall lock dec arpl jmp push push ret xor fs adc fstpt xor push imul push jb xchg int3 aaa lret mov cmp ljmp push jo insb sub pop xchg mov cld pop pop mov sti lods ret (bad) out mov jbe mov push cmp or mov and and (bad) (bad) jmp add outsl je imul add add in add pop or add add add add add inc jb jae add or inc popa insb insb outsl jae jae add pop icebp add test incl sub add add add outsb jae gs jb add pop add push jb add add or add incl sub add add add imul or push outsl addr16 insl imul add or add incl xor add add add jae imul add add outsb je outsb outsl addr16 jo jns add or das add add incl xor add add jae outsl outsb outsb arpl outsb jae add or inc popa insb imul je je add adc adc incl cmp add push adc push outsl jb gs outsb addr16 outsl jb gs xor add or je outsl jae je jbe cmp add pop cli push test add add add or inc imul xor add pop add insl jb gs add or or add add add pop add outsb imul push add outsb arpl add or or adc add add add add or push jb popa arpl jns gs add or fs je jb add or push adc add add add add pop add outsl fs je outsl outsb jae popa jo arpl gs outsb jae add or outsb fs outsb imul xchg push jp xor mov adc add add adc push imul popa gs jb arpl jae jb add or push outsb fs arpl add add adc add adc or incl xor add or add je add adc dec outsl insb gs gs outsb addr16 gs add (bad) adc and adc add add add add je gs jae add or inc imul jns je add push mov add or incl add add pop add gs add or jo jns outsl push add adc adc adc incl cmp add prefetch dec gs outsl insl gs jns add adc jb je outsl outsb popa insb imul insb jns add adc add adc add add add add or inc gs bound add or jae jb jo je outsl outsb add add or push add add add adc add jo insb imul adc push outsb arpl insl jne popa je jbe insb jns add or adc adc incl xor add adc add jne fs outsb add push add insb gs outsl jb outsb imul or punpckhdq mov incl xor or imul gs add push add bound insb gs gs add adc or xchg adc add add add add add outsl outsb imul add gs bound add or add adc add add or je imul outsb fs push add insb jne popa add or mov adc incl xor add push or dec popa insb insb gs xor add jo outsl outsb imul jae add add adc adc add add push add fs gs outsb jae add or dec jo jae push jne add or add adc incl xor adc push popa insl bound imul outsb fs add or inc imul jne cmp add push aad bound mov adc add add add add sldt insb popa arpl push jae add adc dec jo popa insb fs imul outsb add adc push or or sbb incl sub add sbb add jae jne jae fs or push arpl insb gs add adc add sbb incl sub or inc popa jae outsb outsl jbe gs add or inc jb fs xor add or adc adc or add add add add imul add or push arpl jne jo xor add or xchg or adc sbb incl add add je inc add add add inc add inc add repnz add inc add repz add inc add add add inc add (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add pop inc add (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add mov (bad) (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add mov (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add test (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add dec inc add (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add (bad) (bad) incl add add add add add (bad) testb add add cmc inc add repnz add repnz add add add add add add test inc add (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add sub (bad) (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add (bad) (bad) incl add add repnz add add add repnz add repnz add repnz add add add add add (bad) (bad) incl add add repnz add (bad) (bad) incl add add add inc add add inc add inc add int3 int3 int3 int3 int3 int3 int3 jmp mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call fwait push lea call lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call mov lea call fwait push lea call lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov flds fstps xor leave ret push mov xor pop ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call mov lea call push lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call lea lea call push lea call lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov fldl fstpl xor leave ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov fldl fstpl xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call lea lea call push lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call lea lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov flds fstps xor leave ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov push pop call mov mov mov mov mov xor leave ret push mov xor pop ret push mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call movl fwait push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call int3 int3 int3 sahf sahf sahf sahf jl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp add add add dec push add push push add bound add jo add orb add push add sub add ret add push add push add adcb sub add cld push add push (bad) add (bad) add (bad) add (bad) add add pop (bad) add add orb add (bad) add add fmull add lock add (bad) add adc sbb add adc inc adc push adc pop adc jo add add cmpb add add mov adc mov adc rclb add fcoml add add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 