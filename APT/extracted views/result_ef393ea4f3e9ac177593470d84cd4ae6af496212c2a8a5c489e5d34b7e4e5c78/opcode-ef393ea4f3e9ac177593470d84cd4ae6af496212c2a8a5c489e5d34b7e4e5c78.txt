testl icebp xor mov movd sbb cmp sar jmp pop daa or fbstp aas call mov jne lea lods inc mov adc sub mov xchg inc repnz arpl dec sub int cmp popa mov (bad) jge je pop add mov pop lcall inc stos pop or rep jns test sub pop dec and scas cmp push push lock pop outsb vsubps test jmp in popa xor xchg out mov das adcb cwtl mov (bad) test xchg adc movsl cli fmuls and xchg jg jp mov mov repnz and mov adc call mov mov mov call jle or aad inc mov daa cmpsl out decl adc rcrl repz popa into pop mov xor ja lret mov or push aaa dec mov arpl cli pop insl jmp fnstenv loop insb cmpsb faddl call dec in stos cmp sahf jae cs ja out add sub xchg mov pop and inc mov imul cmpl xor pop xor push ljmp sub mov data16 ljmp mov ret stc fwait inc pop inc xlat pushf pushf mov mov lea lea pop pushf pusha push pushl ret inc movb pushl neg jmp lea je pusha pushf test add cmp stc cmp pusha pushf lea jb bt test cmp jmp lea jne bts movsbl sub test mov sbb mov clc xor cmp call lea jne btc rol pushf mov sar test sar sub sar test bswap btr lea push sub test mov pushl popl push pushf cmp cmp mov lea ja rcl ror push rcr sub sar btc bsr bt add add inc clc mov pushf mov bt repnz pushl jmp movb lea jge lea pusha jmp lea jb push mov pushf cmpb pusha lea jne cmc movzbw bsr mov pusha add stc pusha bt stc movzwl push sbb mov pushf cmp add test pushf test mov jmp dec pushf pushl not cmp jmp rolb xlat push inc rcrb xchg jmp sbb (bad) add cmp mov nop popf lock mov and test repz lret sub cmp rorl xchg push inc (bad) sbb leave mov mov sub and repnz push scas ljmp adc jne icebp mov push in scas jo jge fildll out cltd or jnp xchg mov aam ss rcll (bad) mov push insb cli nop stos push xor ljmp adc xchg mov cmp cld xor loope cmc pop (bad) ds mull adc inc cli dec mov mov xchg add push mov inc ror mov test bt test and jge push add mov mov pushf pushf lea jmp rcr inc not mov xchg mov bt rcl test add pushf setb pushf not lea call mov setnp push inc or and cmpsb rorb lock addr16 or pop js mov loope jp popa rorb xor adc jle xchg (bad) jo push jp xor dec push dec jmp insl mov dec mov cmp adc gs daa dec test jmp stc aad cmp sbb push outsb lods hlt das inc lods and cmp int in pop inc sub xchg jb pop push adc adc roll inc pop je sar nop idiv cli lcall faddp test lods ret mov adc pop ret cmp hlt jo inc mov ds mov and cmp push mov or pop call aaa pop cmp add jmp jp (bad) ds loopne fisubr out mov cltd pushf mov dec in push (bad) mov js jns mov fsubrs pop sbb mov rorl and les in xchg push repnz je stos ret adc mov jnp push pushf mov iret (bad) mov cmpsl pop scas jg cmpsl test or jmp pop dec push in js mov xor (bad) (bad) incl aad cmp push jae jbe cmpsl sub xchg rolb inc into jnp and out inc test test pop and out out lea fnstsw xchg es sub xor fchs pop test sub jle jge xchg jne adcl leave and cmp mov outsb adc sti and mov (bad) mov adc push push mov aad mov lcall cmp in push sti outsl sbb jbe leave (bad) stos mov ss sub inc mov jnp xor stos ljmp xor push mov mov fs dec cltd cmp jle inc insb ret mov cli mov inc bound jmp fiadd shrl pushl popl call pusha jmp call dec shll adc cmpsb mov adc cmp mov sbb pop xchg cs mov jb mov dec xor out pushf shlb jl inc jp data16 enter inc xchg push sahf rolb or sahf fldl sbbl test cmpb sub jle cmpsl inc mov or jp scas or jo dec sub push xchg adc jecxz xchg xchg (bad) push or inc mov mov sub cwtl pop ret and in in jae jge mov dec adc xor mov scas or add xor jns push xchg add cmc cmpsw adc mov bts pop loopne sub adc jnp mov mov mov sub sub ret daa push sarl pop dec or imul push mov cmpsb push hlt js movsl je lds inc fwait insl scas rol inc mulb mov leave jbe in push fisttp mov in xchg inc sarb notb jp sbb bnd jle pushf xor pop xlat dec test imul lret mov jge divb paddd fadds push bound addl (bad) xor jge aas adc dec xchg in and inc mov mov pusha add push roll adcl push push cmp jecxz icebp or fs enter mov sti adc dec shrl rcrl das dec shll pop in pop xchg lret (bad) rorl ss in stos aaa mov cmp jo cmp hlt push mov out (bad) sub scas xor jl pop clc (bad) psllq jge lods imul in and fcoml add inc adc pop and in aaa sti shrb pop mov daa mov push dec add sbb mov cmpsl out or jbe add xlat jmp mov cltd lock lea push pusha call pushf lea ja pushf lea jae rcr movzbl mov sub mov rcr mov cmc test mov push push pusha sub cmp pushf jmp push jmp pusha lea jne bswap mov adc rcl cmp sub rol push lea lea sub push clc pushf sub cmp clc pushl popl clc cmc cmp pusha cmp mov lea ja pusha ror sub lea bsr add bsr mov not pusha sub ja clc mov cmc repnz pushf pushl mov lea jne pusha call sub inc add mov mov sbb add push mov pusha push call lds jecxz push inc jne adc pop cld or lods ret or (bad) out dec ficompl fisubr stos jo or and jne jmp push jb and test pop xor sbb push xchg pop bound xadd inc sti xor test mov mov aaa adc xchg mov (bad) outsl mov nop xchg mov ljmp mov daa popf adc mov pop add mov xchg xchg roll adc inc or (bad) out in push fsts push mov clc addr16 push or outsb sub ret or mov cmp add data16 test sbb jp jp pop imulb adc xor stos jecxz pop jns das mov fsts jp push aas shll cmp sub or addr16 (bad) ficompl test pushf xchg (bad) mov orb fs and lds (bad) jg imul mov (bad) out (bad) aam std push jecxz sbb push cli and fild inc or mov insl (bad) (bad) das sti stos aad mov (bad) add cmpsl (bad) adc (bad) fs jo inc enter test data16 push arpl sahf adcl xor fcoms rol jecxz jnp and push cmc lahf jmp test sahf cmp mov or lea in dec push (bad) mov fdivs lock jns pop lock pop call adc xor enter sbb mov sub (bad) ss test xchg lea ja jmp rep pushf push movzbw mov lea pop movzbw mov not not jmp add cmp cmc jmp pushf movl movb pushl pushf pushl popl pushf mov pushl ret mov pushf jmp rep lea jmp rcr add mov pusha pushl cmp cmp xor jmp push mov movb lea jne pusha dec push mov jmp jmp sahf push pminub push inc dec xlat daa pop jno das mov xlat inc arpl or fcomi icebp mov jnp pop jmp xchg popa stos outsb or mov jg mov cmp dec adc adc xchg lahf cmpsb xor jno pop cld cmp mov cwtl jae mov inc out or add sbb cld cmp test aas dec es scas or mov out lcall push (bad) cmp lods fsqrt sub ret sub dec xlat ret ljmp lock jge popa mov adc or ja lret je dec mov call sbb mov icebp dec mov daa lods cmp mov pop (bad) aam dec lods inc dec fs repz jmp mov lea jne shl dec pusha mov btc btr rol pushl mov btr ror movzbw sub sbb mov cmc mov sar sub pusha mov lea adc push mov clc bsr clc sbb mov rcr clc mov sub bsr sub lea dec setge mov stc mov aad shld sub rol sub pop daa sub and cwtl sets mov stc shl stc pushf test cmp add movb call cwtl movzbl ror rol shr rcr btr not imul add lea shr mov shrd rol bts push dec shr mov sbb mov bt cmp pushf call xor inc xchg test aam loopne out mov (bad) cli add (bad) clc cli hlt testb sub rcr push stc jecxz lock insl dec repnz mov and adc aaa leave or jp pop test (bad) push lock insl and clc sbb rcll ret pop mov push or or or sub cmpsb dec std add cmp cltd flds jne mov outsl (bad) or movb pop mov jae xchg dec lret das mov mov lea call pusha jmp call pushf setae mov pushl pusha stos pushf lea jmp lea call call call movb cmp xor jmp call mov stc mov bt bt and pusha call movzbw mov movb cmc shl test movb stc add mov call add lea clc add push dec pushf mov pusha push lea jne call movb lea jb push stc mov cmpb call sub and cli xchg imul mov sub push dec add pop jbe ljmp repz scas out es jae ljmp jns lcall rcll xor cwtl sub inc aas push imull add int inc xor bound out inc mov and lret mov mov pop xor aaa jp mov xchg (bad) sub lods movsl repz jnp pop enter lock (bad) jo cmpsb push (bad) cld fdiv push lock or mov push imul rol test cmp pusha xor cmc jmp int (bad) adc push inc dec test test or xchg ficoml mov je push lods or (bad) adc shll movb push fbld hlt (bad) or fnstcw and jns mov lea loopne addl pop mov mov sub push cmc cmp je add mov mov loope push mov (bad) sub movsl mov test push iret aad (bad) push (bad) push mov xchg ds jle mov and mov cld xor cld dec mov adc (bad) sti and add add add out inc mov xor pushf in stos lock cmp cli mov pop xor mov cltd fs cwtl jle fdivrs insb lcall push hlt mov push jns cmpsb inc mov mov push jae cmp mov test jb mov stos mov or out push mov sub cmp xchg pop sti sbb jmp mov bound or les mov lea decl xchg jl outsb mov loopne mov pusha out push mov mov mov push imul sbb (bad) call xor mov adc repnz cltd loop (bad) sbb cltd xchg stos outsb ljmp mov cmp and je pop or jg mov ror frstor jns jl inc xchg (bad) mov push andb mov or xchg mov mov pop pushf popa and push xor fidivl mov xor scas aad shlb call cmp int add stos sub add stos in or cwtl movb pop pusha pushl sete mov movsbl bswap pop lea lea lea jmp push movl pusha movl pushf pushl lea jmp lea mov movzbw lahf mov jmp jmp pop mov push lea jb lahf cmp not mov push pusha movl pushf lea jb pushf mov jmp shl stc jmp movb lea jae and pop rcl call lea jb bsr push lea lea mov cmc sub pushl pushf movb seto mov jmp mov pushf seta not lods stc cmc stc add stc cmc test call jmp lea je stc cmp test bt add cmp bt cmp call jmp ror gs push inc mov sbb int3 fadds clc jbe out adc jle push add mov lock fs daa clc sub cmp xor push int stos mov pop div inc (bad) enter add jg cmp and mov mov dec fidivr and dec and jle movsl mov cmp dec out sti es and jmp or je jmp cmc jmp int3 cmp push xor adcl cmp leave jmp sti clc xchg arpl xor dec (bad) push loope inc ror cld mov enter les out rorb (bad) push insl xchg push popf pop div xor lods cmp push inc pop mov fwait mov movsb in cmp (bad) dec pop push pop repnz cli push push inc mov ficomp movsb repnz xlat outsb jmp test and pushf xor mov and mov adcb fistp sti push hlt mov and in mov sbb and jl sbb dec and popf mov test sub cmpsl push add in mov outsl test pop jecxz fs jb btc mov cmp sar not test mov add not add pushf pushf lea setb push setbe lea movb movw jmp and not adc neg ror mov and neg xchg xor add lea pushl sete movzbl setb pushf lea pushf jmp bswap mov shr rol mov pusha add shr bt add sub adc or bsr movsbw mov call push push lea ja bt pusha pushl bt sub push push lea jmp pushf movl pushf movb call pusha lea call pusha pushf call pushf lea jae call (bad) ss jnp push inc in cmpsb mov and mov insl adc mov imul push mov lds adc ret js push and data16 push add pop bound xor ficom pop dec outsl xchg xchg or mov mov (bad) cmpsl (bad) sub arpl sub push lret fdivr adc cmp mov sbb dec mov pop dec mov cmp (bad) icebp push ret pop pop lahf repnz cmp pop mov in lea rol pop jnp in xor cs sbb pop xchg dec add ja test jmp out xchg or jg fildl call (bad) xor movsb aas ja cli loopne out sub test adc cld or jo push jp adc imul dec push int test iret out icebp xor aas dec add in inc outsl jae (bad) push in mov or pop xchg xor dec push and les xlat aaa int3 cmp xor xor in in pop mov loope cld test out pop dec fidiv add mov into cmp dec (bad) xor leave repz mov ret push pop mov sbb cmp ret jmp fiadd sarl jae mov outsl xor mov repnz inc insb outsl jae dec popa outsb fs add add push mov add pop and pusha lea jae pushf jmp sub push inc clc lea add ror shl shrd mov cmc mov bt cmp stc repnz call jmp inc inc push inc push dec xor cs insb add js add mov push sbb movzbl lahf setnp lea lahf movzbw mov pushf not pushf movw mov jmp rol test push xor cmc stc push shl clc cmc add mov test stc sub movb mov lea jne cmp push mov cmc btc bts sub mov lea xor bsr sar ror mov shrd cmc mov bsf mov or movsbw mov rol pusha rcr mov call call pushf pushf push jmp bt imul jmp btr add pop movzbw pop pushf pushl cmp pushf push jmp pusha setb pushl lahf call dec movw test not mov bt neg jmp pusha mov mov pushl mov pushl ret lea ja call call lea call pushf jmp ja pop fsubr push inc dec aad mov test add and cwtl push adc stos or fcompl and pop (bad) les fimull popa mov jo mov mov out cwtl add cltd jp lret lods iret inc adc test adc repnz lahf fwait sbb jbe inc test xchg repnz repz ficoml faddl pop jbe push insb fdivs adc mov mov clc outsl mov (bad) ret mov cli xor inc jmp enter pop xchg neg movb push mov jmp btc push xor sub lea pushf mov call xchg outsl test push inc (bad) int3 loopne hlt cmp jmp adc loopne jg cmc jo or cmp cmc and add jnp mov lcall inc lods cmpsl (bad) and scas inc leave fwait sarb adc loope int3 xchg fsts pop andl or mov mov push mov cltd (bad) fistl (bad) js xor cli cmp push sbb test call je push mov imul out mov and pusha adc loop adc js jle add stos sbb fnsave (bad) ss nop mov movsb dec mov repnz iret fwait push jmp out in popa loopne out pop cld push mov push daa lcall xchg xchg xchg adc call ret arpl pop adc mov mov test subb fwait inc rcrb adc outsl add (bad) mov push test movsl adc sub fistl or test push push mov fmul mov std pop (bad) loopne iret and pushl adc dec mov std fs xchg test push lods je inc or lods (bad) dec clc jl sbb arpl out int3 add inc jb or add jmp pushf lea call pusha lea jb shrd add btr cmp push lea jmp fild sbb push inc inc mov test sarl cltd jg repnz push add cmpsb sbb in insb mov sub push hlt addr16 mov push adc mov lds scas xor and insb mov scas inc xchg es nop inc mov out xor in xchg mov imul push cmpsb mov out push aad mulb push cmp mov mov ljmp push repnz jno lahf in sub clc mov adc (bad) inc cwtl add adc lods bound jge test fsubr mov dec push add pushf lea ja xchg not pop mov movzbw xchg pop push seto mov movzbw mov bswap pushf mov push pushf lea jnp mov movsbw lea lea bswap pop pusha pushf pushl ret adc call dec nop sbb ljmp int or test sub scas push daa outsl test dec insb xor dec lahf outsl lds ja dec sbb in mov fcmovnu loope mov fstpt cli pop out push pop mov and dec insl in adc push ljmp fdivs movsl cmp adc fnop ss cmp cmpsb lret sub pushf in sub lret mov in xchg ret sub arpl bound sbb (bad) pop rcr add pop or push pop dec jle rclb mov call add test test popa sti push jmp lods sahf sahf push mov arpl (bad) out cmp pop repz xor adc fdivrs out ds out (bad) mov insb adc movsb cmc cli loopne or in push jnp (bad) test test mov (bad) icebp fistpl gs cmp call dec imul das cmp jmp push ret inc lods mov cmc jb inc sub pop cmp and and stos add cs cmp cmpsb mov and gs in cmp (bad) jbe or sub mov arpl shll in xchg js cwtl cld pop dec xor inc add bound rcrb mov outsl out pop xchg sub sub add shrb shrb test in shlb imul push insl mov and or mov mov loop sbb outsb test jno cs jo push mov cmp fldcw test push insb mov lcall (bad) cwtl rcl cmp sub xor dec or cmp dec or adc push scas into cmp (bad) lahf sarb icebp lcall cltd xchg scas sub xchg push xor inc fdivl fwait mov rcll stc and pop xor std adc mov repz ret mov mov jnp ss xor lds (bad) loope xor cmpsb insl ljmp adc mov jo out dec sti sbb jecxz in insl adc outsb or dec jb xor sub sub xlat ja in or lcall jae cmp xor lcall add adc insl rcrl xchg mov sahf repz dec hlt sub clc out mov pop test sti std xor mov bound push pop cmc pop shl cwtl push add scas sub lods xor bswap mov call cmp bswap setns bswap lea pop mov jmp cmp sub push rol mov dec mov add call movb call mov movb lea jmp test not xchg neg rol pushf btr pusha rol bt xor or dec ror clc xor jmp not cwtl add pushf not setb pusha lea mov movb push lea call call add push mov jmp push call jae add call jb mov shl lea call add pop ret mov loop testl (bad) scas out inc and aam jnp lcall loopne inc mov divl in lods in rcll mov in insl lods jge arpl push mov sub andl lea inc fstpt je rolb sub mov inc decl or faddl lcall sub aad in ljmp cmp inc sar out inc aam int lret jl insb mov aad lcall xchg mov adc test imull rol sub mov push xchg jg jp into jno dec sarl jae dec dec test cmp xor pop std adc mov inc dec and cmp xchg fdivs ret bound add and or aas adc xchg out mov daa dec mov mov lcall aam xlat push aad addl ret movsl sub pop cmp inc mov nop jmp jle lret mov aas sarl mov xor in or lds pusha mov loope les mov scas cwtl cmc adc addr16 (bad) jae and loopne int3 sbb jle add jp pop lret outsl xchg jns adc orl xor jae adc add bt add clc pusha cmp mov neg call lea jb rol jmp lea je cmc stc call mov inc mov sub jle fcoml push add hlt and push mov js add repnz pop mov std adc dec or dec mov add jno push sti daa inc sub mov cmpsb cmp mov ja pop jmp popf pop jb (bad) aad push repnz cmp and and das aam dec jae (bad) enter mov mov lcall adc fdivrl std cmp das insl in repnz push sahf (bad) movsl inc cmp popf inc sub repnz and jne lea movb pusha pushf mov lahf pusha cwtl lea pushf push mov push lea jmp ss arpl lea add xor iret pop add sub and or cli sbb cmp (bad) in xor xor xchg sub sub rcl stos jmp mov add (bad) mov aad mov sub jne pusha (bad) pushf testl sub lock gs fldenv daa divl ret adc jo xor out popa jg mov xorb or sub stc push imul repnz inc fist or dec stos mov cs stos mov fbstp sbb dec ret insl popf icebp mov mov stc cmpsl (bad) stos pop add cmp outsb jbe outsb cmc scas dec pop xabort inc adc cli inc std lods cwtl mov int3 daa lods fwait in pusha add cmpsb or popf xor or fadds cmp push aam rcll push mov stos sub push inc jne in dec mov mov stos or pop push sbb add sbb cmpsb fisttpl daa lods addr16 dec dec jnp cmpsb or fldcw lods jno adc sbb lcall icebp xchg popf clc pop repz (bad) (bad) xor in lret xor rcrl inc cmp in (bad) ret ss fsts pushf data16 add js std push arpl std or pop (bad) repz inc sarb mov pop xor (bad) sbb loopne aaa sub adc (bad) pop lret dec fwait imul xchg fbld addr16 inc das mov and xchg rcll loope inc lret and cmpsb lret dec mov sbbl sub (bad) shrl sub or addr16 jmp pop scas in add mov cmp mov add arpl (bad) (bad) pop push cmpsb out inc pusha stc or rol and fdivrl aam push push cltd mov mov dec movsl sub dec or cmp jb cli and xchg jo rclb sbb pop jmp sti decb movsb push jbe stos sub outsb ret rcrl mov sub lods add or roll push push inc outsl add inc pop mov or dec cltd insl push aaa lock add inc dec jb adc mov mov test xor pop mov jge fs call jmp lea jl pushf xchg call pusha pushf movl pushl call lods insl mulb cld push inc jl (bad) jae jg cltd fwait add dec jg fistpll int3 inc mov sbb mov into test aaa out mov inc mov or sahf insb scas fsubr and adcl mov mov mov orb dec movsb iret push push jge pop sbb stos cli or cmc push cmp pop ret aad and adc cmc adc xchg loope fs jb js test push incl cmpsb pop ficom and das lea mov lock jge xchg adc std push inc movsl in push pushf outsb pop inc sahf pusha cs lods inc mov cmp gs cmpl pop mov pushf jp fxch xor lods push push sub insl xor cmp push popa out or xchg dec and xor mov sub pop out (bad) outsb push or cmc push lods int3 xor lock (bad) and in ficompl or fistpll xchg xchg loope push xchg cld cs inc into mov lahf in pop mov sarl in cld mov mov repnz xor jns bound fwait push out cmp pop pop insl mov aaa aad enter push add rolb cmpsb inc loop js test adc divb or rorl orl mov mov dec xor mov test setae bsf mov bt sub cmc call xchg mov push incb inc ret add and mov lret xor enter int xor sbb mov mov push jg mov bound ss sti xchg stc and mov xchg repnz repz adc sahf push lahf dec pop adc xchg adc scas out push mov pop repnz xor pop popa jno js push or dec inc push lcall xchg mov jp fnop dec push mov cmp sti (bad) xor (bad) mov jl pop scas add fcom dec cld idivl mov sub in mov dec loope (bad) push add and cli push xchg (bad) dec test stos fisubl out push pop cmp pusha mov lea jbe clc cmp movsbw sub mov bsr neg add rcl jns mov adc btc add bsr adc movl bsr mov pushf clc cmp call jbe mov push inc add jmp in in mov xchg xchg imul mov mov dec xor mov push or dec movsb das (bad) sub and pop mov leave pop fisttpll dec cltd mov jbe leave jecxz (bad) mov inc add (bad) jmp xchg and mov stos and pop stc sub xchg or add add stc pop nop lds test pop in xchg mov ret xchg ja dec rcr es inc push (bad) insb sbb xor add shl lea call pop ret jmp rol sub movzbw xor bt test sub sub xchg push setp movsbw mov mov pushf movsbl mov call mov adc jl and cli pop enter in fadds stc pop push (bad) pop jl cmp or loop into sarb lcall inc nop add jbe das sub sbb adc cwtl clc jae sub mov push das cmp ljmp ret sbb ss dec push xorl out xor sub add add sbb cmp pushf add or mov xor mov or push dec cmp movsb out int add pop sub sti inc (bad) cmp pop adc mov cmp ffree fsubrl cmpsb mov mov mov jmp fs insl ss ljmp add add sub bswap btr mov clc test shl call setge mov setge mov jmp sbbb stc push inc ret cmp mov sub mov adc mov cmc jge cs inc imul sarl sti ret sub xchg rcll sar or int3 sub lret add js push xchg icebp lods scas inc aam int3 (bad) stos pop mov jnp movsl inc lret jmp insb es xor pop in xchg mov ds (bad) mov add push int dec mov pop repnz mov jnp mov push xchg lock and pop mov pop mov mov test push fnstcw jp sub mov xchg std loop inc mov outsl (bad) jmp (bad) jl mov lea movzbw mov pop call add cwtl pop seto setb pushf lea lea pushf lea call pusha pusha push adc pushf lea jb pushf xor push push pusha mov lea jmp pushl call pushl popl mov mov movb pushl ret idivl inc push sbb add jg insl xchg xchg jmp lret repz popl jno flds lock or cld cs inc into or add sti add iret cmp xor pushf inc pusha ffreep push rep pop lret push int3 jo jb pop ljmp pop fsubrl push cmp movsb lods xor loop pop je add test sti push inc scas xor sub sub pushf movsb cbtw movb cld adc mov imul sub mov xor inc jle data16 cli push add pop incl aas out and (bad) loope add ljmp mov pop fnop xor mov sub and push dec add add lds mov pop mov sub rcrl scas jg push mov push inc and call jmp call cwtl mov lea bswap pushf push mov mov not call lea pushl pushf push jmp pushf sbb pusha lea pushf movb push mov lea jmp test pop inc aad mov in hlt adc mov adc mov push adc scas subb dec dec jle mov xor dec or mov xor dec and hlt inc xor lds jns insb jg pop pushl sti sub stos sti insl dec stc jecxz xchg movsl stos jo fnstsw inc scas push jo int cwtl dec or ficompl mov pusha push or js xchg and iret rcrb (bad) cmp lds std negb add pop (bad) adc movsb xor dec jmp mov icebp mov out mov cmp jne xor add xchg call push jbe cmp or ror out push scas pop (bad) outsl jbe insb scas mov test adc pop jge popf lds mov jle (bad) dec xchg pop xchg sbb xor dec cli cmp fimul and int3 pop loop add add pop dec jae test jle aas inc enter ficom mov call pop dec sub fwait test or pop mov mov xor jae clc and mov mov xchg loopne mov xor inc or into push add pop clc js pop inc xchg mov lcall pop popf insl pop and sbb adc push jge loope push push loopne pop decl test mov test xor mov adc sbb pop adc xor clc xchg jne push out subl dec cwtl add mov lods (bad) fdivs mov mov dec fs cmp cmp test outsb xchg out loop jns lret xor xor pop jae push inc xlat icebp mov fnstsw data16 sahf std dec and nop mov pop rcrb sub das jmp pushl stc sub pusha pushf pushl popl call lea jne shr mov cmp mov bt dec sub and rcl mov bsf shrd shld mov mov movsbl mov sar mov data16 repnz mov rol mov rcl sbb sub add rcl mov sbb shr stc shld mov rcl sub sete push bts and push mov jmp call pusha lea jne jmp mov not lods jmp bt jmp daa sar cmp cwtl push mov pusha mov pushf lea jb movzbw inc shld cmp call push lea jae and not btr mov or shr mov cmp mov call push mov inc mov lea pop ja fildll sbb jns gs aaa xchg xchg push mov loop data16 xchg stos loop xchg push clc pusha jl pop in aaa dec or cli jne lret outsb dec repz mov loope push push (bad) mov mov aad jno ret daa push aad sbb or movl sbb test and push xor cmp out insl add clc enter out pop and mov popl into fwait inc jge in inc add ret pushf mov scas adc xchg ret lds jb cmp outsl jno or into push movsl bswap push movsl or mov inc pop push xor push ret jae xchg popa shll jae outsl pop gs sbb and test gs shrb arpl pop repz dec mov or push add xor add push dec xor xchg jnp cmp (bad) test (bad) jb inc sub lahf xchg ret push aad push and std push outsb and loope imull push call push mov lods pop ret shrl es push out int3 test pop lea call jmp jmp shr clc stc cmp jmp lea call pushf mov jmp cmc mov not mov neg pushf cmc clc rol stc pushf push stc xor pusha bt bt shl cmc cmc clc add cmp cmc sub call pushf lea call jmp pushf movb push pushf lea je rcl bsr pusha pusha mov lea dec add lea rol shr call clc bt shl cmp add cmc sub call test sbb mov ror xor sub movsbw call fstpt icebp lods adc out push lods push pop ret (bad) icebp lods adc xchg mov pushf (bad) scas xchg mov and xchg stc imul call clc call add mov lea pushf movb jmp test pushl popl clc bt call call pusha lea jb push cmpb pusha lea jne add mov push cmc add push clc stc movzwl bts inc cmc not mov cmc pushf jmp add and add inc sbb jae jg inc aaa push popa pop xlat aas outsl mov int lods test inc (bad) aam mov mov sarl xchg push jne sahf add (bad) out outsb insl jb xchg mov jbe push jg inc ret xor mov stc push pop insl nop loopne lods add xchg fldl sbb jmp jge cmpl mov xorl pop cmc jbe outsl add cmc movb push pop loope gs jb pushf arpl and out dec mov mov sbb sbb sub imul mov adcl jb pop mov dec in inc lret stos cltd into push loope adc stc push cmp (bad) inc or inc sbb rcl push cld mov sahf fs bnd inc dec (bad) pushf cld int adc fdiv je stos ja dec movsl and ret sub mov jne addb fnstsw neg jge jmp push dec lretw mov dec dec push jb and rclb fs sarl pop subl adc int xchg popf cmp movl add pop or sub jnp test (bad) xor rcll pop outsb imul cmp js mov out dec stos loope cmp pop add lea ja (bad) lock sti add (bad) lock rol cmp data16 not lock sar clc stc mov jmp xor bt stc shl cmc jmp clc mov test clc cmpb jmp pushl popl bt cmp pusha call add jmp adc aam or int3 cmp ljmp sbb fcomps stos cli xor fisubr pop jns dec sahf aam (bad) xor xchg cld and lret sbb sahf into orb lods iret cmc outsb movsb into mov cmp jecxz dec popa (bad) mov xchg inc ljmp and inc sub lods ss pop pop aam jmp mov add mov and push jle in push jb test add xor push (bad) sbb inc imul cmp clc das dec imul add pop enter cmp (bad) xor xor pop arpl inc dec cmpsb mov mov std dec stos jp jnp push call icebp knotb or xor inc pop cld xchg jb shlb push mov inc jbe pop je rep mov int3 push or jmp push xchg scas sbb jae out das call outsl sbb mov bound cmp push sarb clc xchg mov push movsb inc adc mov icebp lea neg mov test jmp pushf lea jne clc add xor btc aas movzbw pushf mov jmp cmc imul clc stc add pushf lea jmp add out sysret inc cmp xchg cli and and loopne inc mov imul push das jge lds dec mov ret loopne xchg mov incl movsl fs cmc mov xchg add and mov (bad) popw (bad) push cmp lods shrl aam inc aad push sbbb pop test and cmc lea sub mov add lock jle fstpl push scas lret fisubr shr enter scas adc cmp pop or xor cli fistp dec call test call cmp stc xor pusha jmp pushf pushl lea je not bswap lea lea call pushf outsb and popa mov std icebp add sub test xchg aas xor repz cmp out cmpsb push and cli gs xchg jns imul sbb or rclb sub xchg lcall lods mov lds pop cmp hlt xchg push fnsave fwait adcl sbb (bad) dec icebp jmp shrl push fistp mov cli test hlt das inc lods xor mov daa add (bad) outsb add mov leave inc sbb pop mov movsbl add call call rorl inc mov add mov aaa popa mov inc mov iret dec mov outsl add lret movsl jge std xor sbb dec test dec (bad) xchg mov push test cmp mov popa ja decb push loop cmpsl je mov or add fisubl inc jl enter mov lret or lock inc nop push pushf test (bad) test shrl cwtl dec jnp in mov mov aas out sub rolb jbe clc ja xchg lds fcom insl cs lahf test bound xlat pop stos lods and lcall mov addr16 cltd gs int lahf pop jp adc sub jmp push jae negl push iret mov inc scas les hlt pop mov jbe jmp into in adc clc mov add daa (bad) and scas cmpsl (bad) push into push mov push dec in mov psubq arpl fnstenv out pop in jg and sbbl mov inc (bad) cmpsb xlat mov insl mov or xchg lret jb and add (bad) and or mov fdiv js or xchg ds xor out outsl (bad) push mov and jmp fwait mov sub scas fstl xor dec sub jle adc insl nop cld inc xor pusha mov ret das sbb insl mov dec ss repz pop mov inc inc lea lret push adc cmpsl (bad) xlat scas inc lock stos push and jbe hlt add leave popa das cmpsl cltd adc sbb adc or mov pop xorb (bad) sub fisttp rclb gs mov mov sbb jmp (bad) stos inc mov popf sbb aam push dec bnd fs jb pushf mov jmp call in mov inc popa sub xor xor pushf add xchg into je les mov fldcw cmp inc daa inc in pop mov ret fcmovnbe mov addr16 xchg jecxz (bad) xor push xlat fmul ljmp das lret out nop movsb les cld push xor inc out data16 lods repz cli nop jnp addr16 pop repz int3 cmp fcoml jl adc call imul sbb push adc in or (bad) mov cmp sbb cmpsb fdivp sti ret imul fnsave or jns (bad) mov and inc pushf movsb mov test xor call pop mov shrd and jno (bad) aad test insl pop stos adc adc push push orl mov loopne movsb lea jb sar adc rcl mov bt test call lea je stc sub cmp cmp push pusha pushf lea ja bt jmp sbb bound pop mov mov push sbb cmp fmulp mov movsl aam dec sub adc or fs xor sbb out xchg add mov mov mov xchg cmpsl repnz inc push scas inc test jb add adc sarb and dec inc and mov ss mov inc add ret icebp cmp gs xor nop sub sbb xlat add push call pushf lea ja pushf imul lea jle add pushf lea jmp pop stos xchg adc pop inc dec and jmp sahf push sbb sti jge mov sbb xchg (bad) and ret jmp arpl ljmp fcmovne loope dec leave or pop lods aad push in int3 cmp hlt mov ret cmp jmp cli repz outsl clc adc jg ja shrb lock clc sahf mov in mov bound mov lret fidiv dec (bad) xor mov mov xchg add xchg fiadd sub mov inc imul pop clc push cld ret dec xchg lahf test sbb popa jo addr16 pop ljmp push lret cmp mov mov mov outsl mov fstps sub popa insb test jp mov cmp fdivs xor adc aam leave push xchg in cltd shrl fistpl int3 push mov andl ret stc jmp mov push push lea jmp fstps push lods jecxz lds xor mov mov push imul inc shr test cmp imul adc outsb into gs (bad) lret jg cmp sub test leave mov xchg push ror (bad) adc call outsb xchg lret cltd or mov xchg ljmp scas push adc xchg gs (bad) leave fbstp xor mov adc iret cs mov lret cmpsl adc jecxz pop repz rorb (bad) aad out mov lret cwtl lock xchg data16 dec mov push in adc (bad) movsl mov test mov rclb jne gs xor fs insb add cmp movb mov jmp movb movb lea movb pushl pushf call call pushf call cmp mov sets mov pushf pusha pushf cmpb pushf movl lea jne movzbw bsr xor pusha shl ror pushf mov sub bt neg add rol shr rol jmp sub pusha not setge pusha mov jmp shl cmc pushf mov jmp pushf not clc test push sub movl cmp lea lea cwtl movsbl mov push pushf lea ja call test mov test pushf mov push pusha pushl lea jmp cmp push jmp push dec dec push inc push dec cs insb add add (bad) inc add adc movzbw pushl jmp rorl int adc inc push insl mov jge pop jno and jns add and or sbb shll xchg prefetch jp icebp adc sbb adc popf loop mov pop sub pop jne and mov pop cmpsb add mov je mov push imulb fidivrl rol loope arpl int3 mov out xchg push je or xor sahf cmp test mov add fistp dec stos sbb fs cmp nop mov lods enter xor push mov mov (bad) pusha xchg jmp push pop pushf mov pushl rep call and addr16 pop inc in xchg es push and mov sbb push pop cmpsl ret jb jno jp lea (bad) lahf jg xchg insl aad mov dec minps sarl xchg data16 cmpsb lcall jne jne outsb push pop es in (bad) jl cli sbb sbb inc push arpl mov mov add and std mov les ret mov std jns int3 int3 mov jns sbb inc mov pushl mov adc lahf dec inc jecxz xchg rcll inc ret mov jp loope xor xchg sub shrl or test sti adc inc movsb adc cld loopne ljmp adc jle inc dec jecxz xchg int3 sbb inc stc out dec aaa and (bad) push cmpsb add dec lret jle adc add and jp or xor int mov mov and sub hlt clc jp loope (bad) pop sti push adc pop imul mov scas sub mov arpl fnstenv rcr or lock lahf mov ss mov pop daa inc xchg mov ret (bad) fidiv dec hlt clc popa cmp sarb into dec loope ficom cmp in cld push lock nop in adc inc outsl aam jbe outsb push pop movl sbb das xchg sub out dec icebp add xchg inc scas push cmp mov jno or add dec mov mov or and fstpt xor cmp xor push mov movsb nopl lods lret sub nop (bad) push push pop cmp mov inc aas cmp (bad) repz mov cld xor jl xor inc mov in enter mov xchg sti pop mov shlb out mov dec cli add push test push ret mov stos adc inc mov and cmc shrb rcrb pop sbb out xchg popa aaa inc sub cs cmp fnop add inc xor test jmp adc sub sbb scas adcl mov sbb mov ret push add cmpsb adc sub call add imul or test push (bad) in popf movsl in movsb jp adc mov hlt push add jecxz test xor jecxz (bad) mov data16 lret lcall cmpsb push movsl xor push fcomps fwait jbe or add mov mov cmp and xor lret mov push mov ret and int3 adc push add xchg pop lods dec mov adc sbb (bad) int3 sbb je faddl and push int3 cs xchg jg and mov lds js lock mov rorb popa mov xor enter sbb mov mov sub xor inc imul ss cmp notb repz adc scas in cs in dec xchg push rcr mov pop pop mov xchg adc test aam in cmpsb out (bad) call pushf lea jb pusha bsf pop cmp push push mov call mov pop lea pop pushf movw call lea jne shl shr mov (bad) (bad) lea bsf mov xor sub sub inc bsr inc mov btc setl btr inc mov jg ror bts not mov sbb bts rcr and mov btr bswap mov neg ror mov push sub mov neg jmp frstor inc loop mov jb js fs outsb aam xchg push and data16 mov jbe sbb mov xor clc test pop nop inc clc insb sahf stc mov fs int pop ret pop lret lahf hlt add mov sahf or mov dec popf mov lahf and lds xchg loope pushl sbb popa add jecxz push push je lahf (bad) decb jl gs cmp test mov scas xchg stc outsb leave into pop cli and std xchg test mov repz sub scas into dec mov (bad) arpl xor and in fcoml pop rcll out aam ret aas and mov dec scas dec mov dec xor mov (bad) scas ljmp adcb xchg mov (bad) push stos sbb or pop ror add mov pusha icebp cwtl cltd call jo cmp dec inc mov stos insl pop sbb negl call jmp jle xor add push adc dec sahf xor inc add add sub sub add pop loop out sbb fdivl inc add xchg jae add out inc add sub sub std sub add shrb sbb nop (bad) xor add call jo xor add in loopne nop xor inc add lock pop cmp sub add sub call inc add add adc xor add test jl daa push (bad) xor add call int xor add fldenv mov inc add repnz jae int (bad) xor add call movsb (bad) xor add call mov add enter scas inc cmp inc add cli gs loopne inc pusha ljmp inc add out rcrl dec adc (bad) xor add clc sbb push sub add int dec iret fdivl add add push lea sub xor add call (bad) sbb inc add int3 (bad) xchg cmp add xor add out push loopne push push xor add jecxz mov es add (bad) out movsb xor sub add push xlat insl jno jo inc add and jmp sub add adc xchg cli lea dec mov mov add inc push sbb mov xor add ja push sub xor inc add (bad) pop in and aad xor add jno clc mov out push sub add mov sti test inc add add insb xor sub add add hlt sbb xor add call adc xor add ret pop (bad) hlt das pusha das es add add mov xor add call xor sub add xlat mov xor cmp add clc scas adc inc add nop ret sub ret cmpsl xor inc add add cmp (bad) jl xor add call mov add mov aas mov bswap bswap pushf lea call aas inc adc sbb inc xchg and aas fucomi cmc or or aas dec cmp pop xlat inc arpl (bad) jg inc xor mov dec inc and pushf lret (bad) js xlat dec mov mov dec rcr push fild lods out ljmp fiadd pushf and fwait jg cmpb ljmp (bad) sub fcoms push aas push sahf sbb cmp jb lods daa (bad) (bad) jns dec loope mov les mov or xchg sbb lret out cmp fs sub rorl and jnp mov ds into push iret xlat pop loopne pushf lea jne sbb rol adc mov not cmc mov shr or xor bsr ror cmp cmc mov mov movsbw mov jmp mov lea call lea ja jmp shr movw movsbl imul movsbw inc bt lea bts shld shrd bswap mov sbb mov xchg not btr cmp mov cmp btr ror neg mov pushl pushf pusha clc cmp jmp clc push add pushl push pushf pushf lea jmp sub ror movl pop movsbw mov test cmc cmp pushf push jmp lock add xchg sti das xlat (bad) popf jne push divl shl mov jecxz jg test stos dec cmp ret sbb inc xchg ds bound fldt xchg cmp fcoml lret stos jge xor cmp xlat mov jbe jmp lcall popa (bad) sbb and movb out mov int sarb jmp inc mov mov fmull fdivs jge xor or call mov jb pop push adc lock push sbb adc add out std outsl out or (bad) call setl rep movsbw pushf sete jmp pushl pushl lea je lea lea push pusha lea call push call les ljmp and inc jne adc ljmp (bad) (bad) mov cwtl insl sbb or into and imul jno pop pop xchg stos enter jnp jle aaa dec mov in pusha jle adc into push xlat bound clc pusha (bad) adc (bad) jmp mov hlt rep mov xchg fidivrl ja xchg add push adc ss cmp aad pop (bad) mov adc lods mov data16 xor pop sbb les (bad) aam add loope push push shl and push add jmp lea mov bts add call adc les pop inc (bad) pop leave jns addr16 or lods add scas fbld jp or stc std into adc adc push jnp jae insl mov ror add int3 jp jb xor bound push mov nop insl aad ret enter or xchg ljmp arpl inc push xchg sub inc xchg dec push jp cmp ljmp mov xchg lret push test jmp test and pushf mov jns push jg cld push fs ret pop sub xor test (bad) hlt lods fiaddl cmp stos (bad) push jle lret push test dec lods dec inc or rolb xchg dec stos and xor cmp sbb dec ret pop mov adc mov pusha push dec adc and imul int add test fdivs aad fdivrs imul fwait loope je fdivrs (bad) push and inc lds ja mov xor xchg out inc jg ds std add xchg or pop scas jle sti sub cltd add jle xchg jle into fwait adc mov fwait push or mulps pop push aas scas nop hlt cmp or idivl inc les mov fsubl pop jmp cltd (bad) ja jge mov movsb pop or inc mov bound fwait sub xor inc clc cmp or stc inc jle adc (bad) not cmp mov jmp bts bsf neg mov movzbw bt bt mov pusha xor call lea jb rol bsr mov bt test pushf sub push mov mov pusha jmp add inc gs outsl fs gs imul add mov or not pop push pushf pushl ret cmp jmp pushf lea jne not movb bswap push pushf pusha mov setb lea jmp lahf setne movzbw mov pushl call jbe sub popa cli sub loopne mov cmpsl xchg orl lahf (bad) stos test jp push xchg arpl aad cmp insl cmc dec mov inc inc lcall mov fcompl loope inc cmp xorl scas lea jno jl (bad) mov jbe fsubrl (bad) dec mov pop sub imul (bad) outsl dec (bad) fiaddl insl cltd or jne cli js je add adc xchg arpl jecxz and out jp add mov xor hlt sbb cmp push mov dec add lds push xor or push mov pushf mov cmc movb bt mov test jmp gs out in into inc mov push pop fs dec shrb dec pop dec xchg shlb pop repnz pop rclb jbe mov mov mov and popa fbstp insl push add mov mov and aaa push sub jbe decl addr16 dec pop jns rorb inc rcrl xchg pop pop daa loope sub lods pop jbe,pt in mov mov push dec cmp jb add aaa and mov mov and sti add adc mov (bad) jne lock sahf xchg rorl and lds cmp (bad) and push fcmovu mov movzbw pushf pushf lea call mov btr mov cmc lahf shr sub add aaa or and or aam call lods pushf test add cmp pusha neg jmp jbe cmp mov cmp std or fistp jmp jecxz jecxz pop pop mov push leave xchg push popa xchg mov xor jp add jnp mov push add jno add test cmc xchg jae push fwait dec adcl addr16 mov adc hlt add mov adc sub sbb mov (bad) xor mov sti cmpsl ss aaa or cld loopne xchg (bad) mov dec xor int3 clc cli mov repz outsb in pop xor aas jnp hlt incl push lea jb test clc cmp pushf lea jae movzbw push bswap rol mov btc mov jmp push lea jne pusha cmc bsr adc mov cmc add test movzwl btc mov test pushf add movb test cmc mov pusha stc test pushl call push lea je push pushl pushf add jmp pushl popl mov movb cmp jmp mov call cs adc and inc sub pop gs popa jno add mov addr16 mov pop aad fnstenv ficompl jae jnp jl pop fldt sarl inc (bad) lods idivl mov sbb and insl out push sarb xlat mov pusha (bad) icebp cwtl adc lock adcl lods int jns adc xor fwait push xchg adc sbb int mov push fidivr lock leave push mov push add or sbb nop jle daa cmp pop ds cmp ret mov popf push adc or shll cmp stos and dec sub inc (bad) mov jmp lret jecxz jecxz inc cmpsl aas testl cmp pop dec test pop aas mov les fcompl mov add movsl in inc lods aam xchg jmp jg sbb in jg mov (bad) out xchg (bad) pop mov movsb xchg cli xor dec test cmp ret jecxz std pusha adc in (bad) sar push push cmpsl jle and (bad) mov ss adc mov lods xorl (bad) or jns sbb inc mov incb pop mov js sahf jl clc dec subps (bad) cmc sub call movsbl pusha movsbl mov pushf push cwtl mov lea movzbw call mov jmp cmp neg clc cmc rol test xor sub jbe stc pusha shl pushf bt add stc test stc sub jmp call stos pushf pushf mov mov movb pushf pushf lea jmp call setnp mov pushf cmp clc and test cmc call inc pop xor shrb pop pop inc dec jecxz out scas (bad) (bad) mov jg jg inc fdiv pop cmpsb and or push (bad) clc (bad) (bad) jnp bswap int or pop leave mov add push adc stos call mov add jecxz xchg cmpsb jns subl aaa rcrb sarb mov lcall aam and dec (bad) shll cmp shl pop mov mov push add cmp cs add or insb test cmp cld sub repz and call in push or fldt pop ret jmp imul inc leave fistpl les jle pusha rep hlt fs sahf scas pop push out and add into ret mov in xor aam pop cmpsb pop sub insb call data16 fs faddp dec mov mov sbb sarl add jge sti or or in pop sbb addb mov es lahf jmp outsb sbb and es lret pusha mov or repnz or mov scas mov nop push in jnp xchg js mov imul enter loopne pop clc fstpt shrl les adc cmp movsb test dec scas xchg sub jge sahf pop lds xchg fsubl popa jge sahf arpl (bad) jne sub xchg push xchg lahf sub (bad) jno cmp sbb sbb outsl or imul cmp popf popf xchg cmpsl lds lret jbe sbb mov cmp mov mov xchg rcrb mov dec iret cs pop fldt pop inc dec inc push xchg jb inc js fmuls (bad) add (bad) mov aad add adc data16 sbb neg shrb xlat aas gs jge sahf adc out scas cmc add popf mov aad adc pop jo movsb fldt aad adc push or shrb mov cld rcrl mov push cmp sub rcrb out sbb (bad) mov adc lret fwait mov inc daa aam out icebp pop sbb es int push add aam inc test or inc fstsw jge mov mov push imul add es scas mov inc in xchg (bad) mov xchg arpl fs or mov lea jg movsbw pop mov movzbw bswap lea pop jmp sbb pop inc cs rcll cmc sub mov sbb xchg mov dec in sbb cmp mov mov pusha push push or dec mov xchg std xor aas les mov (bad) jge cmp jl inc lret dec rcr push daa imull pop inc push fldt pop movb sbb xchg sub or int3 movsb push lret arpl stos lcall push ljmp pop in mov lods lods es lahf divl (bad) icebp mov sub cli xchg push test jge test loope or inc inc fwait dec xor in (bad) dec cmc adc outsb lods pusha xchg test adc test test push insb jmp xchg xchg incb fwait lcall fcmove aad daa add das jl mov sbb jns and nop jno sub inc in pop push inc pop xchg push repnz pop cmc or lds nop out int3 inc dec add cmp add mov push add inc mov mov mov bound and scas push sub sub pop sahf mov pop cmpb push test ljmp push (bad) movsl loopne,pt insb pop xorb pusha dec pushf mov rorl jno pop mov and leave fldt iret movsb data16 adc call stc pop xchg push xchg into cmp pop xchg std or rcll pusha dec push int and outsl mov push jl cmc lea jle ljmp std and mov mov clc addr16 pop inc jae xor or sub mov jae xchg nop pop or dec mov dec pushf mov pushl mov call lea jb shld call ret lcall sbb pop inc mov addr16 jb inc sub into lods clc es mov mov imul fist inc int3 clc mov leave dec mov xchg mov cli icebp (bad) pushf adc mov xor push stos dec xor and mov movsl in fistl mov fsts jge std or sbb inc push je pop enter dec bound mov add nop sub fnstsw dec notl mov loope sahf and in xchg (bad) iret icebp xchg test adc inc jmp pushf lea jb pusha stc cmc xor pushf mov pushf lea jmp push adc push pusha lea jb pusha xor mov push pushl lea jmp lea jmp add dec outsl arpl inc insb insb outsl arpl lea jae call movb inc bts stc bts neg inc movzbw dec bsf shld not jmp cld adc and or insl popf (bad) sti jnp xchg fwait ret dec jecxz lahf enter into mov mov imul testl or sbb adc test movsl mov mov hlt xor daa mov add mov (bad) pop sbb inc mov add mov arpl jge inc mov lret jmp paddd rorl push xor mov push icebp iret cmp lret mov mov xchg (bad) sti daa sub mov stos imul push jbe lods pop enter sub mov jle add pop mov (bad) sub js daa popa jg push mov sbb fstpt jecxz scas les sahf push shll and ljmp into xchg or push lahf call push pusha pushf adc pushf push lea jb stc xor push lea jmp mov cmp cmp movl mov lea jb bts shld mov pusha call pushf pushl jmp stos pusha push mov mov lea jmp neg call mov mov rcr shr mov test pusha mov cmc jmp (bad) mov sub scas pop repz xchg or cmpsl addl and mov mov pop mov mov ret mov or je shrb lods jb push sarl jb xchg inc mov xor and adc ljmp (bad) dec fnstenv rol scas jnp mov test sbb pop daa xchg mov xchg test cmp test adcl lock push xchg mov mov aad jmp jno lret outsb incb dec scas rorb out dec rolb jg bound jle xchg sub add sbb (bad) in lods add jns add popa jae hlt push jl cld iret push jne shrb xlat dec mov out fldl dec in or jnp cmpsb mov push jl push dec jns ret test (bad) dec addr16 sub dec sbb aaa pop inc jns or mov jp fldl mov mov loopne jns ret lahf xor add add scas icebp sbb test (bad) ficoml or fcmovbe hlt jl ss out mov nop stc xchg pusha push dec pop fdivrl insl ret aas xchg inc lret inc jge mov mov mov std pop mov in add jmp iret pop sti lret rorl (bad) ds aad dec push lahf jae cmp in mov push in jle cmp lahf sbb test and cmp mov popa add xchg ljmp rcll pop lock stos (bad) (bad) dec mov cmp loopne,pn imul out sbb cmpsl pop push jl nop jae inc mov fistl call xchg xchg adc ja arpl push mov lods pop mov movsl mov mov imul and jp fwait xchg lret xchg jmp popf hlt or dec out mov fstl mov imul outsb xor inc clc arpl scas pop push push push add sub or outsl mov js out jns cmp aam (bad) or add mov shrb ret cmp cmp fcoml mov fdivs pop aad popa movsl mull pushf in subb imul mov sbb push mov mov inc arpl dec stc cs (bad) in fbstp loope (bad) loop xchg jns add nop sbb imul xchg in push (bad) inc sub push jo pop cmc test pop cmp jl mov stc movsl out aad xor jae dec mov popf ljmp jnp jne mov call sbb sub bts clc mov cmc push cmpb pusha lea jne btc sub add xor cmp sbb add rcl mov shr and sub add pushf ror sbb rol mov pusha test cmp pusha test push call add inc js je jb arpl jae xor adc cmc mov cmp cmpb jmp xor mov add mov jmp pop data16 icebp mov stc clc clc cmp cmp jmp add bt pushl test jmp clc repnz mov mov lea jne clc mov rcl sbb cmc sub stc xor btr or mov call pushf mov call mov push movw pushf clc sub movb pushl jmp int3 in in insl xor inc orb call xchg lods lds popa leave xor fistp mov mov xchg sbb dec xor push lret jb fldenv xor in insb jbe sti pusha jle mov jae jb cmpsb lods xor scas mov in jge out cmp sub addl enter add push repnz jl sbb jl jbe and jmp sbb test ret xlat adc sbb rep mov or mov jmp ret xor pop aaa cmpsb dec jge in sub jns pushf test mov cld mov push test xchg insl mull or jl or pop loop stc sbb pop or add jo pushl dec test test stc not test neg bt rol pushf pusha call lea jbe bsf rol rcr btc sub bsr bt bsf shl mov rol mov rcl ror mov add rcl test rcl shr jnp sar xadd neg mov call cmp movzwl mov shl mov cmc clc jmp adc pop inc cmpsl cmp sub and push mov leave jne or loop and jae lahf fisubl mov je add jp pop add ss dec jl ds cwtl lods leave dec rcrb push orb inc das jmp js sbb (bad) mov addr16 push mov push ds (bad) int insl mov scas push mov (bad) mov sbb mov mov jns cltd out rorb mov lahf mov push mov bswap movsbw call repnz jmp pushf mov jmp pushl movb lea call call lea ja push pusha lea jb bt cmpb pusha push lea jne bts and call call lahf imul loope out imul add andl sbb sbb mov inc push push and jmp hlt into mov sbb mov push pop and xor mov in fnsave pop (bad) jmp push test xor xchg inc mov faddl push fstl das out imul sbb xchg repnz div or imul ss sbb push divl ja mov divl out ja data16 out aas push mov in (bad) xor pop fwait pop or cs pop (bad) xor out cmp sbb push inc das rcrl push add adc call call mov cmp cmp dec push ljmp mov sbb fiaddl lcall and inc xchg push fstl fs jae popa ljmp pop push adc jmp xchg jmp inc xlat js mov and jnp push pop mov lret ret jb lea mov lds cwtl adc fidiv (bad) cmp xchg cmp mov mov push mov xchg mov jmp cmp imull and or sbb xchg cmc test pushf imull push loopne lret add inc and lcall fldenv mov ds inc xchg cli and or mov sbb test inc inc xorl add mov or dec lea fdivrp xchg push (bad) xor sub xchg pop pop mov mov imul cmp xchg or fs cmp rcrl ror adc push lds inc ret ja sbb and scas cs gs xchg lock add xchg cmc test out push or push jp push daa inc push or pop aaa cmpsb cmp test std insb nop xor arpl aad cmp xor fs jmp pusha mov pushl lea jmp stos pushl movw mov movb lea jmp push push inc push xor cs insb add neg push bt stc stc sub pusha cmp bt cmp mov movw jmp cmc jmp lea jne xor mov not or mov cmp sub movsbw mov rcr btr cmc mov stc shrd mov movsbw bsf inc mov test shl shl jmp sub mov mov movb pushl lea jmp lea je test pusha add jmp cmp inc lret arpl add mov mov or outsb movsb adc repnz out icebp cmp (bad) adc mulb push dec fwait cmp mov aad and cwtl cmp vorps inc xchg push or dec add das or divl xor (bad) jl test and mov xchg jns dec and iret push hlt sarl fildll adc pop les test orl and xor outsb mov lahf test into fwait out movsb rclb xlat jle iret stc xor fcomi xchg out (bad) cld or popf mov pushf lea call jmp pushf call pop mov setne mov pusha jmp adc jmp daa fstpt or pop lret sahf pusha (bad) sbb sbb push pushf add fnop adc cld xor pop add popf iret push movsl jmp jle adc (bad) jp xchg xor mov into dec mov mov xchg sub (bad) fdivrs push jg cld mov cwtl movsl push les or inc add dec push test add jb cmovne out jg add sbb jns or fs pop mov test jecxz jae cmp popa push int inc test push push stc xchg hlt ret sub or scas mov pushf push mov cmc stc sub pushf call jmp jmp lods cmp cmc cmp clc add stc neg push cmc bt test not movl cmc sub call call pushf jmp pushf pushf dec test stc not stc bt neg stc call jmp push mov cwtl call push lea jb inc rcr not movzbl cmc lea shr shr clc imul (bad) idiv lret lock add scas jmp mov pop movsbw not bswap mov call pop pop fwait dec cmp inc fcom mov and cltd mov and jg insl jge aam pop sub lea pop enter repz call xlat pop scas add xchg and pop out xor and add and (bad) pop movsb inc movl lods mov and ss lahf pop mov dec mov dec gs lret push pop cmp xchg imul jns cli mov push xor and aam scas ja adc sub xor jb stc lea pushf shr mov sbb not rol cmc not (bad) not jmp jmp pushf mov pushl lea jae daa rol pop stc aas pop aam mov call movzbw movzbw lods bts inc neg call test push mov lea jbe je movzbw setnp lea pusha pusha movw pushf lea call pusha jmp pushf call not imul bt lea pop bt stc bt push rcl neg push movsbw dec add mov xor mov pushf pushf cmp movb pusha pushf movb lea jb pushf adc mov bt jmp call movl pushf pushl popl pushf pusha mov pushl ret push push jmp pusha cmp jmp sub push lea jmp bt sub test mov pusha cmp call movsbw mov movzbw movzbw mov pushf setns lods cmp neg movb mov push inc push neg jmp pushf not adc btr neg setnp pushl rol shld or call jmp call pushl lea jb cmp call movhps inc pop inc and sbbl add out xchg cld hlt stc mov pop jecxz (bad) testl cwtl iret pop outsl loop jle add in push loopne lahf (bad) push out mov int3 imul out stos (bad) jno and cmp cs jb push aad cmc cli enter cmc add and dec call pop add add (bad) xor pop add adc jmp jge into mov in mov scas movsl fbld sub popa pop fnsave bound push sub and xchg dec push enter das dec insl nop ss pop shl test fist xchg leave jns ds push fs outsl add (bad) mov xor inc add sti ds loopne sub pop xchg dec fidivr push mov arpl or cmp aam cmp (bad) push cmc fmull sti incb test es in lods jmp scas mov lods adc (bad) jge pop pop adc mov adc mov cs ss test jae movsl aas mov add ss into lahf xchg dec sub lds dec loopne xchg mov adc xor imul mov sub sub rep lret and cmpsl or (bad) adc test in sub adc sbb lret mov test push rclw mov scas (bad) xchg and popf pop mov (bad) (bad) cmp aam or out jns or sarb xchg fiaddl dec scas pushl mov push bound aas pop ret xchg adc jbe adc addb xchg sbb jmp (bad) push xchg mov mov xor jg dec aas int3 rcl pop sbb xorb fidivr aas in mov mull dec sbb mov dec sbb adc adc ds fwait movsb andl mov mov sbb ffree fnstcw mov add aad ds mov es (bad) jne mov movsb mov imul adc rorb sbb cli pop sar mov insl test adc jg bound ljmp frstor test sub out inc sbb dec push loopne andb hlt sbbb (bad) addr16 mov lcall addr16 push mov into sub pop push xor push jnp dec or jo das dec scas pop xchg (bad) stos fs mov jg stc inc bound aas les jne divl (bad) aam leave or xchg jl out hlt call int push lea pusha lret fdivs lcall ret mov push adc mov lods and add (bad) dec ficom addl test aam aam cmp add stc ret mov or inc std mov push outsb sti mov rorl (bad) (bad) mov push (bad) sbb roll push xor int outsb das outsb pop cmp iret cli xchg out inc fistl aas jnp add inc adc sti dec imul lock or cwtl push sub jg sub mov mov xor ja mov sub loopne cs ds mov hlt lret ja pop or in xchg popf pop pushf addr16 inc in rorl mov js push jmp pop inc adc std andl scas enter clc inc stos aas out (bad) push lds faddl add (bad) mov orl jno out mov movsl test jecxz repnz cmp mov mov sub sbb mov out push inc lahf lods ficoml cli fidiv sub adc and int3 lea les adc xor adc (bad) mov iret sub clc mov dec nop fs sub rclb aam mov stos gs add push sub xlat lret mov mov inc adc pop pop fimul iret push lods push xchg mov mov lods std inc jno mov jge push js call scas push pop cmp cmp add insl cli sub mov addr16 pop xchg lret lods lret xor ss into push lods stc aaa pop (bad) lods fistpll clc stos sub adc fwait jne mov pop jle rorb and add stos jns,pt cmp or pop pop sub (bad) mov or mov xchg pop loop push andb stc mov (bad) fs pop cmp cmpl int and (bad) cmp lods or es jo add popw les into cmp test sbb push sub jbe lock sti mov repnz pop outsb mov cmp inc jne cmp cltd movsb (bad) adc and xchg cltd jbe subl push insb add loope push adc imul lret cltd outsb ret push mov cld pop sub shrl aam mov pop mov jbe int3 adc cltd clc iret arpl pop in inc push pop ds outsb jb scas leave orb xchg add je cmp mov mov add jne out jbe mov test or xchg mov and (bad) ss push stos mov push or fwait dec test mov sub dec lods adc inc push int jnp pop adc (bad) ja (bad) mov pop fadd sbb pop xchg cmpsb sahf in push test (bad) and jmp inc pusha mov cmp (bad) mov jne (bad) mov fs mov fistpll xor cmp outsb sub in stc adc mov (bad) or dec push cmp mov (bad) sarb jg andl (bad) or mov inc pop (bad) rcrl repnz das imul popa pop adc cmp mov (bad) ja (bad) stos xor mov mov cli pop icebp test pop push xor inc test sbb imul sbb cmpsb dec inc shlb enter aas lods jge arpl and xchg stos mov dec cmp push adc and mov jb out ror dec repz cmpsb mov pop jb mov dec lahf push fisttpll mov in cld mov lahf xchg or mov test cmpsl cmpsb sbb sub sbb sub pop popf js in fstl outsl les (bad) pop imul mov lea pop mov mov xchg sub add pop xor inc adc jecxz push call addr16 mov in mov dec xchg addr16 fldt es jnp hlt rcll xchg int3 lea pop pop push icebp pop ljmp imul lret mov inc data16 in (bad) (bad) insb fcmovnbe sub test imul push push testb (bad) adc mov cmp push push jl cmpsb fisubrl mov fiaddl call lcall negb cmpsb dec cmp or fnstsw add aad mov cmp sub adc push popf les xor pop mov inc add push scas push push jb sbb mov or mov adc sbb ss mov and das mov mov add xchg lcall loope mov dec inc pusha stc xchg push xchg ljmp mov pop aas (bad) bound jl xchg ffree xor imul adc lret aas out (bad) sbb aas push jo jae fildl (bad) fild pusha add mov mov ret xchg sahf shl stos dec mov loopne xor or in pop jp adc nop loope in or out pop add dec std mov mov jl pop sub dec mov xchg adc jmp xchg outsb inc (bad) incl add test xchg in orl pop clc (bad) mov lret mov xchg mov inc std in sahf xchg les fstl xchg jo xchg pushf add (bad) and mov cmp test push jnp notl loop popa iret call addr16 rcrl mov push inc xlat jmp xchg (bad) rorb popf sbbb pop adc sarl inc jl lcall pop out in (bad) xor adc dec mov data16 popf inc add mov enter rol in imul sub test push inc into push mov mov jb pop push adc or mov cmc test dec lods cld mov mov mov xor mov jge mov dec jge and stos fwait divps pop flds cmp lods cs lods pushf xlat sub pushf sub jmp test dec out addr16 scas fcmovb rolb cld mov movl and test mov dec push push pop jg fild imul mov xchg fwait pushf in xchg testb mov push jnp lods cmp loopne popa cmp dec inc push sarl aas fnstenv mov pusha mov adc out shlb mov and dec pusha inc daa inc ja jne and push and sbb and sub jg bound xlat loopne lods pusha adc push push and inc mov jge clc lds inc mov je cmp lret pushf in cmp push jp xchg sti bound push push orl in mov xchg sub jmp sahf cmpsb jbe je cmpb sahf iret sbb push xor or cmp pop subl aaa in pop mov ljmp inc mov push push xchg pop aad push pop lds pmuludq push (bad) out push xor mov (bad) aas sub mov mov inc cmpsb push and pop mov cltd pop sbb sub rcll add and nop mov and add test lock and xchg pop push xor mov into mov mov cmpsb jmp or pop pop cmpsb adc test sti lahf test test pushf dec jne jecxz fldl cmpsl enter sub jnp jno daa fsubrp lds out add loopne in (bad) sbb push scas fsubp lret mov sbb mov cmp cmc stos popf test xchg movsl dec adc insb push ficoml leave jg stos cmc pushf jmp xor cld daa inc cmpsb adc scas int out mov rcrb cltd js stos push int popa outsb push pushf rorb lock xchg mov push das mov stc adc sbb (bad) in mov dec inc sub or or mov leave inc mov push pop add cmp lret sub repz add ret mov pop inc popa lods jbe jno movntq adc xor adc iret orl sub popf aam std jns sub mov mov adc pop xchg test test jae ss mov arpl loop aas and sahf orb je enter insb sahf mov mov sbb pop movsl and mov daa mov jns sahf ja dec add pushf int mov (bad) sbb call push cmpsb mov add sbb outsl (bad) stos ret shll addb daa neg ljmp imul ljmp mov out call loopne or sub icebp in lods inc insb sbb imul mov pop pop xor jne jbe lea fmuls jbe add push mov mov jo les add outsb sti fisttpl or std adc cmpsb rclb adc xchg jp in pushf inc mov or lahf repz loop lds pop out mov inc aad adc pop xor stos pop jp xorl push push xor icebp ja fs dec lahf or fisubl mulb sub test (bad) add lea test xchg pop das icebp xor lods sbb xor roll aam in lret bound das and popa movsb repnz xchg cmp pop or movsl xlat inc adc in cmc inc jnp adc mov mov mov cwtl outsl inc jecxz jle insl scas imul and cli jno dec xor dec mov aaa add cmp adc imul push test jb push jb adc mov add adc mov cmp mov test arpl cld fstps orb int3 inc xchg jle (bad) rcl loopne or mov inc leavew xchg clc pop or jle scas cltd adc into inc add sahf popf movsl (bad) movsl in xor add hlt pop mov lock cmp addr16 mov lods jmp shl bound out fxch adc out adcl mov or mov jbe scas lret mov sahf outsl lods lods data16 and iret mov dec ljmp cs gs sbb xchg push dec in mov pusha pop (bad) mov xchg xchg xchg jnp sti mov movsl sub in xor fs sbb pop jb outsl dec push lahf insb adc lods and push push lock xchg xor xchg mov add push cld sub rcrb popa mov addr16 and iret les bound pop lea test scas movsb dec mov or pop jo push xor in outsl (bad) loopne jp pop rorb sub mov (bad) jbe adc imul fnstcw mov inc or inc test outsl scas es hlt add push pop test and and pop xchg mov xchg popf (bad) or movsl or lret adc dec sahf dec fisubr sbb inc (bad) sbb xor mov lds mov fist lea movl push and mov mov dec xor xchg mov popa jmp add jb pop pop or adc xchg (bad) cmc lcall adc dec out pop and stos jbe clc out cmp (bad) mov pop pop pop gs push mov sub mov push mov or in pop mov pop cs push jmp scas jb sbb or mov xchg fildll dec sbb sub and pop inc jae cmpsl out fimul jae or rcl int3 fsubr mov out add es in in loope inc xor or sbb push pop pop pop je fwait xchg test negb les stos inc push pop mov jb lahf pop es mov add adc fistpll test jmp js rcrb xchg iret ds clc pop push jmp outsb out xchg out je jne gs roll mov arpl popf rorl mov add cld into popa pop je sub data16 sub popa leave into dec cmpsb outsb cmp pop addr16 loopne js push or in dec jae xchg fistpl outsl jbe push sbb test add push loopew dec mov test lock cmp mov fcomp sbb call sbb roll jge in insb dec mov out (bad) xor cmp lret push int3 cmp pop inc pop cld stos fcompl repnz in cmp js jmp or call push dec jg cltd (bad) sahf in leave mov clc into das inc pusha xchg xchg iret inc adc xor iret nop enter pop in dec fwait xchg push pop rcl (bad) aad fldl mov (bad) mov shr popa lcall add jg sbb xlat les scas jecxz and jecxz push pop mov xor pusha pop fwait xor cmp and test and xor xchg cmpsb test add rcrb icebp sub out pop fs mov pop insb in repz aas xchg iret mov sub pop mov out lcall cmp dec out aas mov adc lds pop hlt lock je pushf jno push ret mov out mov cmp sub insl das pop add push stos jmp movsl add jne mov mov and rorb pop loope adc popa add mov sub addl scas cwtl add pop mov mov cmp or loope jns outsl jb push mov xor jne enter rclb fisubrl or push adc mov cmp xor mov mov or dec mov gs ret call add stc inc dec cmp lret movsb xor (bad) dec mov jl pop mov (bad) jns lods dec and outsl clc sub xchg inc xor jmp xor ja jl call pop pop adc loop fnsave (bad) pop dec clc je xchg adc addr16 cmpsl stos mov aas dec or out popf aam daa sub xchg pop dec cmp and fisttp cmp lock aas and rol out adc cltd cmpl std arpl pop in pop test in fidivr int xchg adc (bad) mov dec mov jl lret fs push lret mov mov mov movsb lock jnp movsl push cmpsl cmpsb jbe push sbb jnp xor roll inc insl or popa push pop push push inc sbb dec test in outsl rorb insb inc mov daa arpl mov push mov loop cltd loope sub mov pop lahf jle mov jnp inc push sub mov js fmul add (bad) fcmovu mov xor cmpsl aam or (bad) cli mov mov pop ret mov xlat push out xchg mov repz mov clc push hlt pop sub ret or popa daa scas push aad xor std cltd push adcl sti ja negl and pop imull imulb pop (bad) (bad) mov mov inc or lods pop pop fs and out inc pop dec xor xchg xchg mov pop in fucomp push enter or sub gs cwtl mov push imul in dec imul movl and push sahf xchg mov loopne push loop cld pop lcall in inc inc mov mov sarl lods adc push roll cmc jbe loop inc in xor xchg inc leave xchg dec or aas fisubl movsb fstpl inc inc movsb add mov in loop jb xchg mov pushf push (bad) cmc sar repz aad jb cld add dec (bad) je lock fucom loopne sub dec pop adc push mov sbb (bad) ja clc into roll imul dec mov push push push insl sbb je xchg lahf (bad) push inc cs sbb sahf adc lret imul inc test mov jmp and pop or jl jp aaa mov adc cld and lods mov arpl jns pushf test add paddd pop jmp dec sub enter push test jmp imul mov push lea lret cli mov mov dec mov loopne aam pop pop sbb mov inc lods loop mov lret fistl int3 push pop test test dec pop add xchg fidivrl imul push test mov cmc inc fisttpll sbb dec xchg int3 out cmpsb pop cld dec pop push dec or fisubrl icebp or insl fs fstpl sub and dec jle and lods shrb mov int3 cwtl mov jbe mov cld or mov jb lods inc add pushf adc movsb aam in aad arpl dec loopne (bad) sbb sbb inc push test (bad) daa shll dec addb sbb pop sti ds stc stos mov mov push or fstpl inc dec pop and jge (bad) in inc insb or mov popf ja inc fiaddl ja sub in inc (bad) adc mov jnp xor cmp (bad) out mov pop je push fbstp inc mov insl arpl inc sbb orl lods jg push gs loope jnp inc sub repz out pop mov sti or fsubrl mov inc movsl sbb dec dec aaa in hlt and sbb mov and mov adc sbb mov stos xchg arpl cmpsl mov xor dec lea enter jb push cmp and mov adc imulb into xchg fild cmp mov fs push dec ret cmpsl roll xchg jmp adcl scas rcr sub xacquire sbb sub (bad) mov daa inc js pop outsb (bad) repz lods or mov jge mov aad lock repz cld pop inc pushf sub int3 push mov in dec fstps add inc add sbb xchg out mov es jns mov xlat xchg imul and pusha xchg mov imul mov mov (bad) inc lods sub lods hlt (bad) je and adc in fwait es (bad) cli fdivs sbb aas adc les cmpsl jae xor sarl mov bnd sbb add scas (bad) pop cs fisttp out scas add les or cmp mov xor (bad) es dec pusha sub push faddl ret cmp fnstcw fisub popf clc cmp ds mov lds leave adc shl sbb (bad) pop aam call mov fiadd je jle xchg pop push jnp sbb test cmp xchg hlt test movsl icebp mov and leave popf dec andl and imull jns pop mov cld inc (bad) stc fstpt xlat mov or es aaa mov and lret and inc add mov dec xchg adcl jae out inc lret (bad) mov jo adc fsubrs stc ret test lret imul add clc mov push xchg add mov mov push inc sbb sub popa ret inc outsb ret push sahf mov ffree mov shlb leave fwait sub pop movb adc out add pop xor outsb das jns pop nop fsubrl jl and mov cwtl aaa or fs and enter fidivrl out test lea rcr outsl sbb sub ljmp inc sbb imull das or add pop add cmc call mov pop add sti pop adcl int3 pop push mov and lds push push cmp dec fnstsw js dec loop enter mov xchg sbb cwtl dec into (bad) jp popf cs pop clc leave mov ficoml rcll add fist xchg cmp cmp mov testl test mov aas xchg inc fisubrl add cmp (bad) fnstenv pushf pop lea adc sub cmp cmp nop cmp sub push inc roll mov fdivl aam mov cmp jp cmc aam xchg orl clc mov push cld pop xchg dec (bad) (bad) fdivs push inc out cli and imul dec testl or hlt sub repnz aaa repnz in sub and cmpsb out fmul fimul cmc data16 movl and mov test add loope cld (bad) jae bound cmp push lock xor sub push lea push xor icebp rcll cmp in pop or leave mov out (bad) inc icebp pusha (bad) outsl addr16 loope and insl bnd lret xchg inc mov lret in xorl loope enter xor pop cmp jle les (bad) js mov or or xor negb xchg or ret cmp adc les imul shr dec pop cmp idiv ss inc inc inc cmpsb cmp (bad) adc cltd imul out dec popa into push pop enter ja aas and sti xor into sub adc call dec push icebp scas imul or std pop mov test dec mov shll jle in lea and (bad) dec (bad) sub mov jne and mov iret icebp sti test lds adc inc lret push movsbl out mov mov repnz xor lock ljmp or jl cmpb or data16 daa push lods jno insl fildll sub inc push sub shll bound stc insl mov xlat adc sbb scas rolb adc push cmp sti lods repz jl test or stc xor mov or push cmpsb sbb mov push in mov jbe dec add dec pop lods cli adc and jbe adc call jno mov pop faddl cwtl (bad) insl movsl ret in mov faddl and insl ror fisttpl ret (bad) rorb btr jnp xor fcomps mov sbb pop jns sub add and cmp add mov and or jp inc inc loope daa pop add jb mov into scas pop add mulb stos jle fsts int3 jne xchg mov iret adc pop push push mov jp xchg adc pushf inc mov hlt push pop (bad) mov stc lea push pop cmpsb jbe sbb mov int or xor inc repz iret pop mov fst sub fcmovnu lds pop dec or aad js in js and sub out in rcll lcall dec mov hlt pop xor pop jmp jbe cmp push cmc sti adc sub lret dec mov enter sahf in (bad) mov ss mov imul xorl xchg aas negb ja ret adc pusha push lcall jmp int dec lahf push std or jbe roll or fist or push fs jge jns sti mov movl mov mov sbb fwait mov cld mov lock pop pop cwtl sti out push push push mov fcmovu test stc lret add jecxz aas or notb mov (bad) adc out dec dec jecxz shr pop mov fcomps push in mov jmp outsl outsl fldl xchg lds popf jo pop dec enter jmp (bad) ds and xor push fmuls in or cmp sbb xchg gs fs aas cmp mov iret xchg icebp and (bad) lock nop push jno push stc loopne and jo push insl or or mov inc pop leave sbb insb lcall pop std in xchg test cli in dec inc or movsl out mov je add fwait in fwait in cmp adc inc (bad) popa mov mov (bad) out jne pusha add jge and mov add outsb addr16 add mov lods xchg (bad) lods xchg adc (bad) fsub out xchg data16 out push push cwtl push sbb rorl mov cmp enter fwait es fcoms shrb imul jge mov imul jle mov inc int mov (bad) jae in (bad) cmp loope (bad) outsb mov scas mov inc xor xchg sub (bad) or jecxz scas jmp xchg iret xchg dec imul std sahf lods add add insl das lcall mov jmp xchg int3 push cs and sub shlb in je dec pop cli test (bad) (bad) dec mov stos cmp (bad) ds (bad) test xor adc leave shrl (bad) xchg jp mov repnz mov nop es jl sahf push pop out add sub jmp cmp push dec mov mov ds in les divb jae add repnz leave mov xchg leave mov bound mov dec jns pop jb mov mov push push lret jmp call loope mov xor pop lods push fs xor mov xor fsubp outsl pop rcrl (bad) sub (bad) mov imulb in daa push repz aad dec mov inc push adc mov or lea and fisubr xchg aas jo popa out sbb cmp scas movsb mov sti loop or xor cli les add jg sbb fidivl jno lret lcall jno fisttpll xlat and inc ret ret xor mov (bad) aaa fsubl inc push mov mov adc mov mov lret out rcl call pusha pop or mov popa and mov adc mov adc ret pop xor arpl daa sub out loope push xlat bnd dec add push mov int repz mov or stc dec daa jg sub inc lret jo loope mov lret adc jmp mov push lock test xor push pop mov mov mov cmpsl sbb and out inc xchg in repz bound pop shll adc scas aas or les and cmc insb or out mov jns mov (bad) jne gs aad bswap dec rclb popa cld mov and jge fnstcw and std popa jge arpl sbb inc push sti xchg mov fidivrl shrb jmp xchg fadd (bad) lock repnz mov sbb call fimul scas jno cld dec ret lcall add cmc inc lcall or lock movsb rcrl pushf inc rcll mov xchg jecxz popf out nop push adc xchg push cmp popf mov jb (bad) sbb xor insb mov ljmp and sbb mov aam mov stmxcsr add cmp pop dec push pop test push repnz inc xchg ret jno adc stc add cmp xor and rolb inc xchg ret dec fsubrs xchg popf ja jl xchg (bad) mov popa jl cmpsb lea adc popf lcall out sub nop stos aas gs xchg or mov fmuls pop add xchg jecxz imul sbb push popa (bad) xlat and sahf push (bad) mov push sub mov jecxz arpl fs fcompl pop mov inc mov or cs lahf pushf lret aam mov loopne lods cwtl push into lock lods ret shrl mov lods adc jle sbb jo pop imul ds sahf mulb insb xchg ds fcmovu pop rol scas adc test inc adc js jge pop aas mov fwait (bad) sarl imul fwait test adc mov fadd sbb inc pop inc add sub iret mov dec cltd dec aaa add dec jno jecxz,pt inc fildll sbb icebp roll nop add cld jle adc sub ljmp out jg or inc xchg aas push jge gs lcall mov xchg inc aad mov stos jg or ja jmp stos mov cs es psrld es sub xor shlb mov adc sbb xor (bad) xor push cmp mov je push jg pop sub pop ja fcom imul aam fs nop test cmpsl stc stc sbb fwait das push aam mov cli pusha mov inc je fstpt hlt mov adc jne cwtl lret and xchg adc ja fmull push lahf add cmpsb sub (bad) adc xor xchg dec xchg mov add pop xchg jl cmp sbb xlat ljmp mov cmc or or pusha es xchg bound sub push xchg mov lret (bad) loopne push cmp xchg push sbb pusha fcomps shlb cwtl (bad) notb mov (bad) xor add or test inc add inc push inc mov adc in xchg push mov dec dec out stc ret lret mov test in fs in mov cli mov imul xor jle rcl fiadd pop jg push xchg outsl push mov scas jno jl fcoms test lock (bad) xchg cmc jb cmpsb push mov pop sub add stos or iret push mov jnp cltd sub or cltd cmp xor popf or cs pop mov add (bad) jg test cmp sub and outsl push sub call inc inc adc fs or inc add mov jae mov out mov sbb rolb test mov mov jno inc (bad) jnp int push mov mov inc std ds into mov ja lods add jnp in ja out sbbl lea call test vminpd inc out mov ja jl push lret pop popl pushl sub popa icebp shll xor inc (bad) test adc rolb mov jp and sbb xorl push mov outsl cmpsb mov adc je push dec jne mov inc xor subb inc rorb mov cmpsb and mov add cmc divl insl mov pop xor mov push dec dec push std xchg xchg fcomps and lea pop mov mov imul loopne adc roll insl xlat lods mov es sbb fdivrl xchg aad daa lahf fisttpl (bad) ja (bad) lods stc mov clc jnp movsb mov ja mov psubq pop pop cmp jns push mov in pop push inc sub push hlt sbb and inc or cld jns gs repnz jae out and inc inc ret (bad) pushf push cs mov sbb sbb cmpsb ja pop push out jecxz xor mov in sbb sarl (bad) jne lret icebp xchg xchg pop ret xchg fsub pop insl ss pop xchg mov jp jne lock push fmuls pusha cmc xchg xlat jecxz fdivrs ret jo (bad) (bad) gs ficom test mov sarb stos out dec test mov jg mov aam (bad) iret mov imulb mov dec pop xor (bad) cld mov test lcall jecxz adc xor pop or cmp pop cli adc pop pop inc jle xor fs jnp test xchg pushf test aaa cmp mov add pop pop inc xor inc ret mov dec and movsl xchg mov pop xor adc je lret mov mov jp jg sub jb popf xchg sub add dec mov push ljmp frstor mov ds jae add dec cmp dec (bad) test mov or push add xor adc and add mov adc fst jns cmp outsl daa out in jle xchg xchg lods ror mov sub xchg and or incl pop aam repz xchg sub xor add cs dec hlt mov xchg dec out mov pop add ja inc push and cmp ffree jne clc mov sub pop mov add mov lods or pop cmp cmp cmpsb dec jge or faddp imul cmpsb sub sti dec adc mov fcomp jns mov movsb div (bad) fstpl dec pop (bad) mov (bad) cwtl cmp cs lahf push in orb jnp pop aam test xor inc or cmpsl ljmp sahf pop dec jmp sbb mov dec pop mov aad push inc repnz cmpsl push pop xor sbb insl (bad) idiv int3 adc ja pop bound or es and jg add (bad) sub push or cltd add adcb fsts (bad) scas shlb popa inc int dec mov push in mov mov xor xchg in sub sub and popf loop fisttpl int3 mov mov mov or jge adc psllw loop fld test dec aam test push xchg mov jne jne icebp inc aas push mov mov inc insb (bad) push xor mov xchg adc shlb repnz aas cmpsl ds fistp cmpsb sub lahf jnp subl add (bad) mov dec adc out sbb or dec jne jns lods xchg adc bnd and or pop xchg popf mov sbb (bad) mov pop (bad) mov (bad) sub rorb imul div cmp popf stos mov mov pop or add (bad) (bad) lock sbb mov sub aas xor dec lock pop paddq cmp (bad) lock repz mov paddw out inc jmp inc (bad) pop (bad) jmp (bad) xchg xchg test test sahf imul mov or call mov jl fiaddl cmp imul mov les mov or jnp das jge sub add add mov mov sbb mov (bad) jp jle mov inc pop mov push out push mov mov xchg iret jno in xchg ds rcrb push shrl sub push mov lds scas into out xlat insb xlat pop jbe jle cmp rcr int3 enter sub jnp lods push enter push aaa pop repz push xchg xchg inc call stos inc ja add jnp mov mov mov aas push jg movsl (bad) jl (bad) ret sti inc (bad) out add pop in xchg test jbe rcrb cs xchg adc jnp jne (bad) cmp or pop xorl cmpb jae mov pop outsl jp lret fistpll xor stos push add lods insb stos pop fidivl xchg leave cmp jmp (bad) or fiaddl sbb sub xchg add leave insl mov (bad) lods (bad) cmp or push test outsb test and cmp xor sbb cli cmpsl add mov in das js pop in xchg insl sbb fwait mov rcr xlat ljmp mov push std mov in add cmp (bad) in clc dec idivb dec sbb fwait mov lcall xchg mov cli sbb mov pop ljmp sbb xchg fwait hlt xlat (bad) cmp cld xor and dec das sbb xchg xor (bad) mov (bad) into nop adc enter inc and sbb je gs sub mov pop repnz fs out aaa xchg mov and jecxz repz imul xchg pop xor mov and mov mov adc pop mov shrl jp adc ljmp cmp es lahf rcll xchg mov adc shrl sarb ljmp cld in test cmp add das push lods (bad) cmp into (bad) out mov inc aam fsts push (bad) add xchg xor push shll lahf push imul cmp pushf inc jmp jb pop fbld leave shl lock xor cmpsl xchg out scas fnop insl stc mov lods bound hlt xlat mov outsb rcl pop movsl mov push inc pushf dec repz lret popf jne les or lahf iret (bad) xor cmpsb mov mov inc sub or and fimul (bad) xchg clc adc in cmp lret out pop aaa push xor xor repnz dec addb jl movsl jge push test pause rclb or roll (bad) inc adc bound insb inc mov push lret or inc pop cmc xchg push sub xchg pop or jns aad scas subb fbld aaa aaa scas pop pop xchg into lahf inc out push jecxz (bad) jle fstps imul mov pop cmp (bad) adc fidiv sbb aaa rcl into loope add (bad) sbb inc int3 mov stc leave or push jl and dec ja loope test mov dec or and pop scas iret pop pop or dec jmp pop test orl or (bad) jae dec jmp (bad) and cwtl dec (bad) and movsl data16 push cmovs ljmp mov or xor or fidivl fstpl pusha xor sarb pop sub jne xor mov and les (bad) scas or fistp adc or fs daa mov fcmovbe mov mov sbb adc xchg ljmp xor fisub cmp and adc sub ds push xchg cmp scas sub movsl ret (bad) and dec notb sti in cmp fcomp repnz mov inc and (bad) bound pop lea sub rcrl sahf jnp pop and mov dec dec fs pop sbb mov dec divb mov ljmp and cmc in mov das outsl aam or out dec or icebp (bad) fsubr pop cwtl fimull fldl dec ss inc mov pop mov fcmove add das fisubl hlt ss (bad) je add inc and icebp add push orb xor data16 jnp lcall (bad) sbbl mov cmp cmpb fdivs (bad) sti lret iret rorb cmpsb xor adc sub xchg pusha ficom int3 push (bad) lock jle popf xchg sahf xor inc fsubrl shrb dec inc fcmovb mov pop cmc cmp jg test pop fwait hlt cwtl pop lea mov pusha imul sbb or sbb mov dec lret nop inc jbe clc sbb jno add (bad) xchg in movsb adc scas (bad) xor jae,pn call mov sbb cmp add cli and jl test adc push loope scas sti sbb jae pop cmp je pop xchg arpl fistp in dec push and aaa js mov xor daa and pop inc lods mov inc sub ja insb fisttpll adc cmc jmp (bad) adc inc (bad) aad add pop daa mov call dec aaa pop in mov sub hlt js mov add push (bad) cmp jmp mov or stos repz insb cltd push scas (bad) xchg jbe (bad) (bad) dec cmp cmp movsb sbb cli mov add and xchg adc imull xor pop xchg scas mov inc add mov pop je cld fwait and lods pop mov sbb inc aas fimull mov dec in stos sub add int3 mov nop iret cmp ffreep dec pop sub and fwait (bad) outsb iret clc fidivrl fs ja test mov push mov nop pop xchg loopne cmp es (bad) add xor sti call mov add fidiv and outsl jnp xchg jbe sbb xor es sub mov (bad) sbb adc push idiv out aas mov jbe mov cmp mov aaa insl xchg scas out out mov mov mov or push sbb adc mov gs scas fnstsw test add js std pop sbb cmpsb push mov mov insb gs stos jae scas repz cmp push aaa frstor xlat add lods aas or sub (bad) push xor xchg sbb mov repz insl cmpsb jg pop xor and adc or push or fmulp ret in gs jnp shrl adc dec pop popa lret xchg imul jle mov scas sahf cvtdq2ps pop (bad) jo ljmp pop inc adc aam sub push pop adc int3 aad repnz insb in outsb dec rorb lock cmp jnp dec (bad) cmpsl cli sub and add jns jge sub or stc mov jno xchg test mov adc ret mov outsl mov xchg (bad) iret rcr cmp mov mov jge xchg xor inc pop dec pop jns (bad) adc mov (bad) push call mov pop pop mov pop fcompl sbb lods add scas or ss mov nop daa int (bad) fdivrs pop sbb pop shlb daa (bad) fild call repnz test mov lret push fs xchg push add shll sti arpl and mov (bad) std test sub jne pusha arpl cld (bad) fcompl or fmulp sub neg sbb mov push jmp dec add (bad) inc cmp shrb ficom sbb movsl fisubr xchg notb je aas adc pop adc xor or xchg data16 shlb clc jmp and dec imul in sub fs sahf add dec scas sbb push xor dec pop jmp adc popa xchg negl gs sbb repnz aaa std test adc stos lods cltd out inc in mov aaa (bad) dec xlat mov pop mov daa jb data16 in and add in and sub add or jl nop scas xor hlt push movsb ja sub daa mov jb das sbb loop gs mov cmpsb add xlat popf icebp xor fnsave insl inc cmp int3 les pop cmp scas or imul pop gs jg mov cmpsb pop stc and sti cmpsl xchg std fiaddl adc leave mov and loope xor mov enter jno js sub mov pop mov test test data16 sti into repz lods jo (bad) rorl mov push and jae mov pop adc cmpsb nop mov jle cmp adc sbb sbb or jne xchg add add int3 or cltd jmp xor lds pop jl (bad) mov insb cmpsl into push add in fbstp enter pop or add testb jns fcomps dec jo lcall mov mov (bad) jno dec sub lahf lret mov fwait imul dec iret xchg and int3 clc aaa jo sbb into scas nop mov xor cs lahf jnp jmp mov or std movsb popa mull cli inc out shr cld sub bound jbe dec cbtw inc adc fsubs add sbb mov sti inc mov rorb repnz xor std mov ja ret fs stos push adc dec xchg js das shll out xchg add movsl xorl or push es xchg or cmp mov jg sbb loopne push (bad) (bad) add or xchg stc jmp (bad) or dec adc icebp rcr pop dec xchg test mov sahf cmc (bad) cwtl adc lock aas adc je push (bad) enter (bad) test or imul cmp popa mov inc lret ljmp sub push add sbb out js inc cmp jmp pushf sub cmc mov sub pushf into xchg test xlat and loop push dec xor inc push add gs stos and imul and stos mov pop arpl inc mov inc ret sbb popf jno in jbe movsl pop jp jb mov cli out je xor sbb cmp pop mov mov pushf (bad) cwtl mov xchg mov adc (bad) jl gs push pop lods mov jnp fildll in aam (bad) in or rorl (bad) xor mov push add daa (bad) cmpsl pop mov scas dec mov repnz cltd mov push jae push jecxz inc imul xor sti mov jl dec es inc rorb lods in jecxz lock inc nop xor movsb es or cmp mov subl mov sbb inc fsubs mov (bad) (bad) test inc gs mov push loop mov adc insl pop add mov mov mov or xchg pop (bad) jne xor out mov aaa insl mul jae (bad) xchg ret clc dec xchg (bad) mov mov pop paddd sbb mov sbb mov mov mov fisttp sub in and iret cmp mov incb (bad) int3 dec fsubs xor test sub inc push repz mov int3 jmp fcoms bound xor mov sbb and cs or inc sysret inc jmp and dec pusha repz push bound movsb sbb pop rcr mov adc xor ds (bad) ret push test mov mov (bad) jno icebp mov dec sbb (bad) mov push xchg outsb xor mov faddl push or aaa jbe pop cmpsb mov jnp incb subl pop jmp pop in push inc fdivl lea adc mov pop or shll mov inc and pusha test and mov icebp cmp add (bad) (bad) push repz or pushf (bad) rol xchg cmpsb movsb xor loop lds ss xchg push sub lock (bad) mov sbb sbb or inc push mov in loop nop jb add and adc mov cltd mov pop mov and shl lock and in pop cmpsb mov add push movb enter push and mov add test add jp (bad) (bad) adc arpl stc fwait push mov rclb mov sahf fwait add xor lods xor in jne addr16 jmp test cmpsb inc jb add cld jb (bad) int push movsl getsec pop das inc xor sub xchg mov in cld loop fstpt dec cmp cmp xorl stos mov repnz repnz out dec dec dec mov dec jb jnp and popf xchg cmpsl dec sbb (bad) ja outsl xor sbb fisubr push pmaxub xchg xchg xor add pop (bad) addr16 add push ds cs jl lods push stos lret fadds cmp mov add jbe jmp fldz out lock call xor push aam jb and fistp (bad) mov imul je mov sbb push aaa fdivrl repnz pop cltd push add jno and ss sbb fist cltd mov dec lcall cld insb (bad) xor testb jle mov (bad) mov repnz jo das mov lret mov xchg pop mov jmp jmp xchg fs cwtl or mov stc cmp cmp int3 or fildl pop push test xor mov mov and mov mov and cmp sbb ss pop jb in add push out inc or nop je or pop or or jg cmpsl adc push pop xor loopne out cmp jae cmp jmp divl cld mov mov push dec push sub inc sbb sar fidivl int3 and sub push out nop addr16 dec sbbl incl cmp jle fs insb imul inc movb add mov push xor pop dec push aad insb and mov jecxz jmp xchg sub (bad) cli and cmp lods push aaa fsts push mov negl div aad lret sub cmpsb cltd mov pop pop cmpsl mov scas push outsb and shll mov jmp lods pop mov xchg push sti sub sub mov mov fidivrl add mov dec mov lods jno (bad) jp sbb fcom pop hlt push out pop push sbb pop (bad) or mov lcall xchg pop lods je inc inc jnp push and rorb inc mov js mov enter cwtl or subl aas xchg sub ret push mov adc and add mov and lcall sti add movsl dec push xor icebp cmpsb dec (bad) daa pop xor pop test add call pop xchg xchg stos ljmp std inc enter xor mov gs addr16 dec xchg mov movsb push xchg movsl roll insb adc adc data16 aas gs pop push mov pop push inc ficomp mov fstpl out test sbb mov pusha incl addl scas inc test mov aas pop js lret frstor xor pushf lahf mov fldcw pop movsb popf inc movsb inc add mov and (bad) fsubs lcall dec insb (bad) (bad) xor cmp sub ljmp push and js inc aam fmull (bad) std test gs pop mov push loopne mov gs ja movsl push mov dec not lods ret daa out mov daa pop bound data16 cmc inc lods les xchg fs adc cmp fxch jbe or rcrl push adc jl pop test sub add inc adc (bad) mov mov (bad) pop jns adc adc pop and mov aaa and xchg mov push out push push cld mov sub or icebp add lret fs jmp pop loopne fbld xor enter or push adc dec add hlt daa jo xchg xchg mov cmp imulb enter fistp add stc cwtl push pusha sbb sub cltd and push lods ret xchg push xlat mul pusha (bad) call sarb mov test mov xor test xchg add insb adcl ss pop push stos subl adc fwait fs (bad) mov icebp cmp out sti dec and and icebp les jb push add adc sub xor add nop mov cmp es daa mov mov or les add xor pop sbb cmc adc das and xor in mov scas adc dec jo adc fmulp cwtl cmpsl int3 mov sbb jns pop or imull mov mov lahf int3 xchg outsb add jb (bad) xchg outsl or xchg push xor sbb cld lods pop test jbe push and dec and rorl cmp pop stos push jle hlt adc inc lret test mov arpl adc lods rcrb jp pop push jge test outsb (bad) xchg push or (bad) jnp jb jmp jle ret js insl cmp adc jle ret insb or sbb push fist mov jnp jb pop decl dec sti dec insb push shrl fcmove cmp add icebp add fidivrl iret adc sub add sub adc or (bad) xchg pop xchg loopne mov add inc push sbb sbb add int3 ret push bound xor test test lcall aaa jbe jbe push mov inc clc rclb mov imul mov das imul sbb xor sub xor jp xchg fnstsw fnstsw push push in movsl ja cmp xlat mov testl jp mov and push jbe arpl pop lcall loope stos stc rcl pop pop into jno (bad) push fildl jne lds adc call xchg cld ss stos fwait mov xlat pop mov dec nop mov out jle mov imul ja xor and insl adc mov outsl fcomps inc dec mov pushf imul jnp sub lods jae ds ss jae xchg cwtl sub mov mov data16 imul push cmpsl rcrb out jns mov cmp add js xor cs xchg aam in jge jp das sub ds inc sub in pop jp shrb sub bound mov jl jbe jb xlat test (bad) test push lret push pop jbe adc gs pop cmp in sub or cmp scas mov scas lock out aas repnz stos pop jne cmpsl aaa aas daa test jle xlat std (bad) cwtl sub rolb cmp push add rcrl aam leave jp jb xchg mov jbe repz and adc mov xchg push movsl das add xchg jge cmpb xchg sarl xor leave sarb add add fmul js dec btc (bad) mov int and arpl pop or fiaddl leave sarl int lds jbe in in jno cmp lret popl cs mov mov pop jmp dec in outsb adc test mov popa arpl leave inc xor stc cmp sbb shr cmpsb jle mov movsb test or pop (bad) or mov mov iret fsincos lret mov mov loopne leave inc cli test sbb push mov les lock lods add movsb (bad) lret mov insl dec and shrb dec test mov xchg repz faddl mov sub sub (bad) rclb jno loop dec imul adc sbb and and sub movsb dec iret je loop xchg add xchg std mov ret xchg sub int3 mov enter cwtl imul int idiv cmp cmp std hlt mov inc cltd adc sarl mov adc or mov inc cmp fistpl icebp xchg dec push lret roll in mov mov sub mov push pusha jb jns dec out pop xlat cmp push xor and push sbb push addr16 jp es (bad) mov sarb dec repz lds stos insb into mov add xchg cltd pushf xor add xlat dec aad sub add imul cmpsb aaa imul imulb (bad) shlb push mov fnstenv inc stos outsl outsb in (bad) dec test jg adc xchg les (bad) adc pop jmp sbb pop (bad) xor inc push cmp add dec sti aaa cmpsl imul xor pop and cmp jp xchg jg das cld jno pop jne mov fdivs movsb inc aaa popf pop (bad) or (bad) fadds cwtl mov push fisttpl in popf lds ret pop add inc adc movsl xor adc dec hlt push cld aaa add pop push sub cmc lock out or sbb sbb xchg mov pop cwtl std rcrb fmuls mov mov je loopne mov adc dec jbe dec gs (bad) stos sarb or sub pop cmp mov sbb jns enter pop cmpsl xchg aam add xor sub fucom xchg add mov arpl es xor jne add cmp idiv sub mov shlb dec and sub dec cmp aas or jne push addr16 test jne sbb (bad) pop and ds pop loop in pop mov and xor jne pop in push sbb cmp arpl daa addb (bad) jne push push (bad) loopne xchg push pop arpl fisttpll cmc mov mov mov or out xchg push loope or push push in movsl popf mov leave and (bad) pop das xchg (bad) cmp push or sbb in scas lcall (bad) cmc jb mov lods into shr in cwtl neg xor hlt (bad) mov mov fxtract adc mov and xchg pushf xlat mov out cmp pop sub push cli mov mov dec rolb xor dec repnz mov mov cs jl or sub sbb mov daa daa dec and in iret std imul imul jl pop clc and xor mov inc add xchg ss mov addr16 add mov inc and adc dec sub addr16 jecxz inc push jge pop cmp sbb js cmp mov aam insb (bad) sbb inc (bad) lds loope aam out jmp mov lea cli out pop mov cmp mov xor or fs push xchg je icebp pop cmp subl mull ret sbb and aas add dec xchg sbb imul mov repz xchg xchg xor pop mov jg sub (bad) xchg pop sbb fwait inc adc iret cwtl cmpsb imul aad in mov hlt mov dec in js xor test sti xor jge push fcoml or mov pusha fwait xchg addl das (bad) jae clc xorb xchg leave outsl in jmp jno and lods aaa xchg test insb cmc and shlb add pop pop in (bad) (bad) cld (bad) jo andl faddl pop test add lret push xchg test into out and adc mov push int mov (bad) pushf jb xor jo xchg (bad) leave jnp (bad) sbb out rclb xchg push jle aas imul xor adc mov xchg pop aad jle add cmpb cmp xchg stos sub roll js mov jb inc push dec outsl add xchg ss pop idivl popl jmp es movaps lock stc divb pop sbb shlb loop out js lret jo in repnz mov or mov das jnp xor dec lahf xchg into imul push test clc sub mov jle movsb sti adc dec and mov jle test cmpsb xchg xchg dec lret dec pop add and sbb out xchg inc repz sbb cmc in or sahf stc ror les insl push rorl scas or jmp and insl and fwait push bound adc sbb das mov jle nop imul dec dec jle mov jbe mov or sub mov hlt push pop ljmp jge repz out pop mov fadds fidiv stc mov xchg outsl int sub cld cli mov xor jb push lcall js xchg dec mov jb push clc test pusha adc imul pop fbld push dec adc adcl (bad) nop imul lahf outsl push add mov add sbb dec adc or and outsb mov out and mov jmp test jg rcrb push hlt xorb mov inc jmp sub lea push cmpb (bad) xor adc mov xchg dec lods cltd scas pop and or adc lcall mov dec loope inc scas hlt lods loope into pop rol dec cmc jbe jp outsl sbb inc pop test (bad) repz stos sahf rorl std inc nop xor cmp push jae popa push iret icebp call repnz sbb loope push idiv mov and add cmpsb adc push movsb pop in ds aaa inc inc dec jl cltd mov jmp jne xchg jbe pop test addr16 in andb mov pop (bad) (bad) mov (bad) push sahf leave iret lcall mov inc xor das mov sbb sbb jge ja (bad) pop pop hlt cmp mov and or (bad) jecxz dec or popf mov in test imul mov push das mov dec jmp jp arpl inc loope mov mov out pushf pop pop test and cmpsl mov (bad) jb pop out jle xchg sbb jmp or shrl push gs int (bad) or popf xchg pop cmp mov lds test mov mov xchg mov ds jl inc xchg arpl daa gs or out mov rorl int push add gs sub divl xor add iret sbb (bad) mov loopne add popf dec ficom mov jno arpl xor or push xor jl xacquire jg mov loopne xchg mov out mov movsb fs (bad) iret push addr16 (bad) mov test out or jns inc pop or mov mov fnsave popa aad nop lds push mov push add dec inc imul add mov and jmp mov add fstpt lret and xchg mov inc out sarl dec mov cmpsb aam xchg sbb pop push ret stos das jnp ret mov cmc pop ds cmp fwait adc sbb mov in push outsl enter jnp and aam add inc add cmp aad hlt inc and int3 jg and js lahf stos test inc cmp cwtl std jmp add sarb test ss imul mov pop push js lahf push and jb jnp xchg insl inc out cmp mov scas push jbe inc mov (bad) xor fs mov cmp adc fstps jbe aaa icebp dec mov jae outsl test imulb pop out push push jbe sub dec enter stc mov or xor pop pop scas popf cmp push imul pusha pusha and push sbb jne cmp cltd nop aam inc mov js xor imul xor xchg jp push cmp lods mov cli pop stos jl add xor ret add sub test xchg aam mov xchg add int test repz and bound (bad) iret sbb xchg fldpi subl mov (bad) shll mov out inc and out and loope inc ret xchg stos mov cmp nop mov dec pushf inc mov lock popf (bad) adc sbb aam jbe sub dec cmp sub sti pop mov jg and rclb xchg pop sub insl adc (bad) xchg (bad) mov or in rcrb cmpsb ljmp (bad) pop mov inc sti cmpsl outsb jmp add insl mov dec outsl mov push mov push pop push or loop mov (bad) cmc aas push cltd rorb loop ss jo imul mov push loope (bad) mov push fwait arpl ret add adc out xchg sbb cmpsl int3 mov fldl cmp sub adc int3 imul and (bad) pop pop adc (bad) dec fs into mov pop into sahf jmp adc sub push xor outsb arpl aaa xchg out add loope add aad jecxz mov xor mov push out push mov rcr repnz es adc pop mov mov add rcrb mov mov and sub add movsb cmc inc mov sti xor insb test mov mov scas (bad) aam call test push (bad) fwait lods mov inc outsb mov call or outsb loope xchg cltd ljmp xor and imul flds xchg icebp test mov fimull outsl icebp or mov adc adc notb pop out sbb out add mov pop pop aad test push fsubl dec lds fldl imul imul mov dec and xchg fbstp out jg dec adc popf sub rorl mov (bad) dec ljmp inc pop mov lods ljmp scas jo (bad) mov jns pop push lods repz dec shrb mov or mov push push sbb out sahf jnp and in mov (bad) cmp jns fcomi mov scas loop dec mov pop call mull pushf test push adc inc push lods insl xchg iret push sbb imulb mov add movsl or push cmp iret out (bad) jno nop xchg mov hlt scas out pop rcrl xchg mov xlat nop popf push cmp stos leave push xchg adc cmp (bad) xor fdivrs bound insb (bad) or cmpsb jbe out pop mov mov sbb in aad xchg je mov scas cmp adc (bad) mov xor (bad) mov adc and jecxz cmp push jmp repz scas test fwait jl (bad) mov xor push (bad) mov xlat popa push xchg jp lahf outsb shll mov je cli test mov push movsl rolb sub aas lods jo sahf out mov dec popf cmc int3 out stc xchg data16 aad pop aad dec cwtl xchg push out lods cwtl mov cmpsb push arpl pushf loope je cmp jbe mov hlt repz gs add push mov call in fsubrs mov fcmovu test push out xchg out pop movsl xor xor mov movsl xchg pop sti sub fs xlat jle cmpsl cmp add adc les mov dec xchg jae add data16 repz jle or or adc movsl push insl lods ds mov fcmovnbe stc push (bad) dec mov jg jbe sbb push out ficompl cltd lds int3 add sahf inc jmp add rorl jae aaa out add push jle mov cltd xor stos sahf push push pop sbb bound loopne stos pushf and insb push lock add imul test pop adc rolb xchg dec adc lds test imul cwtl cmp pop js ficom sbb mov call inc nop xchg inc jecxz call sti push push xchg sub dec mov pop imulb mov mov insb (bad) jb mov out pop push in mov cs clc or jo jbe outsb pop lcall pop cmpsl or adc insb into mov and adc mov sbb arpl sbb rcrb and mov jecxz lods sarl push mov push push test sub mov jmp add fsubs sub in or jg sbb das cwtl movsb xchg ljmp les popa jmp jb insl sub jnp enter stos jmp mov imul sbb xor imull adc and pop lock (bad) int mov pushf xchg mov in xor xchg lahf mov push mov inc add bound adc sbb xchg mov push fs cmp mov jae sbb sbb jb sarb add hlt (bad) sub mull jle iret mov daa sub jnp insl cli into fwait es ds push imul inc cs push test pop inc nop scas xchg lret mov call js xchg insl aad in (bad) jp enter data16 fistpl pushf outsl orl mov (bad) jbe cmp lret ja (bad) ja xchg xchg inc inc mov bound pop lahf pop jl dec fwait adc push notl popf cmpsl movsb into inc jo mov pop mov push or cmp and xorl int3 mov lcall out jns adc mov ret dec mov arpl test rcll sub mov dec js sub jecxz lds rcrb mov cmovle ja adc (bad) mov lods stc jae mov xor iret mov (bad) (bad) and mov jns aad repz inc cld call mov jnp cmp sti ret cmp notb ljmp iret insb cld faddp sbb int3 push cli jne cmc ficom sahf mov aad mov cmp mov aam insb loope or mov rep scas int3 xlat mov lahf popf inc mov mov outsb in test cmp je xor xchg aad stos (bad) movsb jle xchg iret xor or xor jne xchg test pusha inc clc add insb pop pop dec dec lcall pop sub mov lret dec ss or es fidivrl sbb sbb add divl sbb mov push pop jecxz les in adc mov je arpl xor mov xchg popa dec jne push push test in jo fiadd add inc stos dec add sbb sbb ret xor mov adc fmul add and push adc mov test mov sub jae xchg scas fs imull xor fwait test sub iret fadds out mov inc hlt jp and xor sub in stos sbb inc xchg insb lods lahf pop clc mov test imul (bad) rolb in repz ss out dec lods pop dec inc sub sbb sbb scas mov fmull lds jmp (bad) mov jae dec sub sahf xchg fbstp cmpsb sbb mov inc and sub pushf jne (bad) fwait xchg cmpsb or sarl adc adc loopne xor icebp fbld jbe pop jl movaps ja leave fs adcl sti inc rorl or lea leave lds cli mov jge rorl outsb (bad) int3 pop fwait xlat sahf adc and sub xor dec movl xor mov pop test mov fcmovu cmp mov xchg fist jo insb (bad) mov cs call outsb sbb mov or addr16 push fisttpll xchg test test mov add sti dec dec leave pop in sbb scas mov imul pusha xchg push xchg and out lcall bound inc and or das mov dec fiadd adc mov ljmp lods das and pop xchg and xor inc stos cmp bound or jge sti lret mov idivb mov iret popaw mov sub xchg js mov xchg add fcomps int cmp dec stc jnp mov push push lret pop inc or dec in mov ljmp enter and movsl in adc ss push mov pop (bad) sbb jg pmaxub and ret xor bound dec (bad) push roll xchg subb outsb cmp sti std mov popa pushf or repz cmp out mov xchg inc cld test les insb xor and test jmp adc jo in add cmp sbb sub cwtl cmp cs inc out lods jmp rcr cmpsb call das inc xor test inc (bad) jb dec sbb aas (bad) jno ffreep jnp in pop (bad) pop xchg add add lret stc into lods dec movsl mov jp dec mov jl adc mov jb nop stos adc mov js das pop rcll fmulp aam (bad) ret cmp (bad) sbb cmp inc in ret fwait aas mov push mov cld pushf cmpsb lcall xor cli add cmp mov hlt pop das sar outsl or xchg xor adc testl inc push push mov adcl cmp sbb cmp inc jle pusha imul lahf (bad) adc sbb mov xchg xchg rcrl cmp lods out (bad) mov icebp or dec iret test sbb call scas ljmp in aad outsl sub mov enter sbb addr16 fsts adcb in int dec add lods or mov jne dec inc cwtl scas (bad) call movsb jl sbb cmp mov xor repnz imul mov cmp xchg es mov dec mov cltd mov mov sub add xchg sbb push cmpsl negl xor pop sbb add jne iret fcmovbe cwtl add loop lret push pop aaa push push jb jle loope das mov dec mov inc add loope xor mulb arpl (bad) in and mov xchg imul gs mov std mov sub rcrl stos and rcr int dec test popf pusha jo out out loope in jo push jl jg and ds clc mov xlat or dec out adc js mov pop inc ljmp test mov mov in dec and push insl cld or push pop mov add jo sahf and lahf nop mov ss arpl (bad) iret aad push sub mov xchg xchg dec out adc iret addl pop fs clc lds mov cmp jo,pn lds imul adc (bad) xor adc pop jle bound xor mov push jne pop es fs push inc daa bound push jne gs imul pop push out ret xor mov cmpsl pop adc push push int push loop ret push test and sub int3 int3 push daa lods inc nop mov bsr call push es aad mov push jg push pop and test mov outsl adc mov dec fiaddl test add adc xchg aas adc int popf xchg lods pop push sub int3 xchg cmp jns xchg int3 mov mov movsb fs (bad) inc jle enter mov mov jge pop xchg outsb adc push mov dec mov push push and mov xchg and cmp adc jl jb dec add lea inc mov into repz pop (bad) dec fcmove incl push add xchg sbb jp sbb xor out mov adc inc inc mov push mov xchg sahf sbb xchg into xchg ret (bad) mov add icebp movsb pop push jno or lahf loop rorb jno cld lret addr16 leave repnz jg outsl in pushf (bad) in pop xor mov mov mov jmp (bad) mov scas fdivs cmpsb pop idiv cmp xchg popf mov cs insl cmc leave pusha push pop dec stos out test jno inc scas cmp mov gs xchg mov cmpl enter orb mov mov push insb bound add push stos in fdivrl xorl std dec xor in mov push lods aaa test repnz xchg push loop dec cltd out aaa lret jnp lcall orb jg mov inc sub outsl jl das add mov (bad) sub imul xchg imul shlb dec es clc stos lahf leave ss shrl mov mov jmp fcmovne imul icebp jbe push cmp int3 das cli ja ret lcall insl mov data16 cmp inc fcoms pop js leave ja movsb pop adc mov mov push (bad) xchg call loope sub cs xor cmp jecxz bound div mov shlb push jae push sahf dec clc mov idivb (bad) mov std cltd mov xor mov mov (bad) add lcall sti js cmpl les in cmp mov clc lret jge hlt fisub flds addr16 insb or cmp scas ret insb mov dec sub ja push push cmpsl lds mov add mov movsl int3 les pop inc stos add popa in (bad) mov mov fild in or notl sbb and rcrb sub data16 mov sbb insb in ljmp jg test int push je mov fcoms ficomp clc scas add call sub cmp insl dec pop mov leave inc push data16 outsb lcall pop cmp gs mov cmp das xorb lret stos add insb fucomip add out xchg arpl xlat pop idivl fsts addr16 (bad) push ret out fwait cmp add push dec push mov pop sbb inc leave jle sbb rolw das mov jl fcmovnbe mov mov fwait inc lds lret fwait and daa (bad) sahf xchg sbb outsb xchg loop inc es xchg dec push fcoms sub cmp jle sbb or in jnp int3 js,pt pop sbb call jle sub mov idiv push popa sub inc in popf stc mov pusha fldcw mov lock inc insb jae adc fcoms jo jb lea std cmovbe dec jg pop int3 ret lret mov mov nop sti hlt lods loop inc xchg insb dec add rcrb ret sub mov aaa jle jmp xchg mov pushf jb out repnz iret movsl dec and arpl sub cmc mov push in sbb pop mov pop movsl or into jae int3 pop gs stos mov sbb jecxz mov jp test out or in test fldenv pop add jae lret imul cwtl cltd push mov out push jae (bad) or movsl pop aaa inc clc pop (bad) push pop pop ljmp jg push lea das (bad) xchg and repz out mov ss adc and inc xchg cmp lret fmul mov mov sub (bad) xor fwait inc insl adc divl fstps jge mov cli jo mov mov jne (bad) je je push inc pop inc popf insl dec xchg mov mov push addb jae arpl outsb mov sub push (bad) ljmp jl add push pop sbb out cmp fs jmp xor data16 in cmp mov popf ss sbb in and jmp push dec shrl push inc test aaa xchg mull incb mov xchg dec push pop adc (bad) mov or add or int3 mov clc xorl sub xor test xor xchg sbb iret pop adc inc and mov mov fisttpll push rcrb fild adc jg and icebp in mov daa add (bad) (bad) xchg sti jmp inc ljmp stos xor and dec dec mov in add sub mov popa mov lods mov outsl fwait mov jp xchg cmp insb jmp or test mov call sbb mov fwait in lock into mov push push fdivr xchg jo nop sbb das out test lods mov push xor loope adc pop push inc ja jle dec aad leave pushf repz or notl pop mov addr16 dec (bad) xor dec cmc and rorl mov xchg mov ret enter dec mov sbb aas (bad) es lret in xor push cmp dec sbbl loop lods xchg aam stc jns ret inc inc jb xor repz dec (bad) out xor sub jmp fisttp xor sub out dec or dec movsl xchg std frstor mulb mov pop iret bound dec xor adc adc int3 mov addr16 pushf ficom cmp insl rclb je ret jnp and sbb popf add jp cltd dec lcall dec repz inc (bad) or pop insl push xor mov dec cmp sbb cmpsl xchg mov xchg les out mov pop lcall hlt xlat fsubrs jo xchg pushf jmp inc mov aad xchg mov sub bound xor dec xchg xchg leave aad and out enter and (bad) mov jl xchg dec iret push std aam mov jg push xorl jg fs add pusha lock fcomps (bad) mov bound dec aas dec jle addr16 pop xchg or fisttpl repz scas adc mov dec mov and ss loope in pop pop imul into or pop (bad) mov add ds imul test mov in or stos fistpll or inc (bad) sbb testl fcomps jmp imul out stos aas push pop fsubrs mov fstl out nop xchg inc sahf jp xor mov sbb mov and andb in fwait clc jns xor pushf flds loope int3 dec scas and pop mov fld mov aas pushf or ffree and push lods xchg add out aas pop sbb mov xchg jnp mov mov mov adc and mov and pop ret lock inc loop adc (bad) push xchg pop cmova inc jne mov fistpl scas dec aam iret dec xchg pop sub stos popa xor inc inc ret adc js lahf (bad) pop fadds out or call out sti clc sbb or inc dec lea mov add jg lret sbb mov jecxz jl mov mov sbb nop xchg mov jmp cmp adc arpl adc enter repnz jo sbb clc push mov lret jg mov xor arpl add cld loop jno pushf mov xor inc jecxz shrl iret aas lret jp and cwtl aam rol fdivr jmp jne ljmp (bad) dec pop outsb xchg xchg and mov dec (bad) jne adc sub and push pusha and sbb xchg adc (bad) into mov lret sar enter pop std imul push mov adc in mov int push inc mov and xlat xchg test cmp mov inc dec or dec arpl mov dec mov mov rcrb xchg js scas fcomip add and xchg mov pop inc or cmp test insb dec int3 adc shrb push pop xor nop jne jge cld cmp in push rorb mov popa inc fdivs or mov cs stc fbstp scas dec dec and insl sti in loope cs dec insb in push popf pushf in pop vandnpd mov pop (bad) lock dec fs and pop and fild add push fidivr dec cld orb cmp jle outsb sub je stos adc arpl add jae push push (bad) aaa or cld mov icebp (bad) cmp and xor or test nop jmp adc xor add int3 cmp xor add pop xchg inc or pop loopne jg gs cmpsb add shlb fwait sub xchg sub and or imul cmp and mov mov into pop dec stos and or dec in aas sub inc and cmp inc cmpsl movsb sub imul loop xor inc dec ficompl nop pop adc xor mov pop stos aad mov mov not mov jmp cmp cmp pushf pushf call mov movw stc test pushf jmp bswap call movl jmp call push mov shr imul cmp jae mov mov sub shr add call clc pop ret mov mov lea call pushf pusha lea ja mov push pusha pushf lea jmp lea jmp cmp push pusha pushf pushf lea jmp neg rcl cmp rcl push or sar cmp mov inc push sar dec push rcl sub ror push clc btc jmp test pusha mov lea jg call mov mov movb call sub pop inc ret mov (bad) icebp mov xor int jmp mov adc rcrl cli cli lret out push jp ret jge imul dec mov lods pop fsubs sbb mov shrb jno cli (bad) mov or or lock pop neg push cmc not cmp test pushf sub call mov push pushl push lea jmp mov jmp dec xor das mov inc jo (bad) jmp jg iret aaa aaa dec mov stos (bad) ss mov lock mov mov mov icebp addb sarl mov leave repz imul pop jg xchg daa inc pop fcomps pop lret or lods movsl ret int3 bound and or fwait mov fdivrs mov inc cmp out or stos addr16 xchg rcrb xchg pop nop or mov adc jge repnz cwtl jno dec (bad) xor outsb shll cli and adc and mov arpl or incl mov inc cmp inc das adc popf fistl cmpsb hlt repnz testb out pavgw sub imul idiv cmpsl xor sarb push mov push outsl mov arpl push ss inc fcmovbe repz aam sub jb fidiv xor daa lahf ja (bad) (bad) adc aam int cld push (bad) mov popa xor add ljmp ficompl hlt pushf push pushf pusha lea jmp sub pusha cmc mov shr cmc dec jmp stos mov push lea jmp inc cmp neg jmp pop mov inc mov push xchg je inc stos (bad) sbb inc (bad) in ss fadd xchg pusha xchg dec and adc cmp les pop xor or inc out mov aam pop jge mov lcall xchg mov sbb sub pop fsubl sbb jle and inc nop lock iret inc in cmp jo push and pop pop xchg adc je push jbe mov cmpsl in cmc pop in cmp loop and lock cli es sahf sbb in pop aad fcmovu dec sbb cmp mov fimull and mov inc adc pushf mov xchg xchg xor jl,pt outsb outsl mov mov push dec mov fdivl and cmp mov clc stos aas insb test into imul sbb mov jnp int3 mov add mov or dec adc arpl leave mov add shl (bad) lock fucomip jecxz int3 fisub and addr16 loopne add jmp mov fldenv jae out fildl push mov mov std adc jmp mov mov insl bound pushf bt stc sub jmp call pusha lea call pushf pushf movb push lea jb aas bsf bsf movzbl movzbw stc shr bt rcl call mov stc bt shl mov pusha movb add pusha call mov stc add test cmc bt movl not cmp call stos add mov inc fdivs gs adc sub inc test sti sub push clc scas lods out mov add pop test arpl and dec idivb stos push gs lds sbb (bad) ja fisubrl inc inc xchg dec xor xchg xor or sub pop mov popa and cmp and rclb stos int3 jns xor and mov mov movsb out xchg in adc sub xchg jo sub lock repnz mov cmp ret sahf add jle test or (bad) mov bts cmp mov (bad) lock test add pushl mov pushf mov test call add stc sub jmp mov js mov inc mov fs xor pop inc cwtl mov mov push enter and mov or jge addr16 push add into (bad) out (bad) test mov add dec jmp fistpl lods pop lret test loop enter dec fisubl mov (bad) in popa or sti pop sub gs movb icebp divl movsb lods add cmpsl xlat sub ss sbb jbe daa stos loop mov push in je sbb lret dec ljmp mov and ljmp cmp cs orb add cli jb push pusha movw lea je push call movzbw mov movw pusha pusha pushf xchg movsbl not bswap movl setno bswap lahf lea movb pushf movl pushf pushf pushl popl pushf movw movl pushl ret cwtl push setle call lea ja call call jns test mov mov movsl icebp ss imul daa orl cmpsb mov out mov inc cmovge push push xor repnz out pusha add xchg dec notl and pop (bad) pushl cli cmp push mov mov lcall iret insb jb aas call faddp pop sbb sahf (bad) lods sbbl shr (bad) dec push sbb inc (bad) xor lods push mov lret lahf mov fwait pop mov mov sub ret (bad) adc dec jno xchg je mov dec stos out push sbb enter cmp sub ja and xor aam and jb inc andl pushf xor lret or jnp in lret test fisub jae sub sbb mov loope out enter push dec fs mov fild mov xchg (bad) icebp test xchg int3 jnp test imul dec outsb frstpm(287 lds cmp cmp std cli insb in xchg fsubs out stos je loopne cs repnz dec mov cli and (bad) sub test cmp pop xchg mov iret lret jb cmp aaa or jno xchg repz (bad) jmp scas adc sbb xor dec in js jno add cltd out pop pop aas mov fcoms or movsl (bad) test aas and repnz or push mov (bad) xchg pop out ljmp mov push dec movsl pop push outsb stos popl adc sbb imul cmp or dec outsl lahf xor int3 pop sti lds popa xchg outsb and jno roll and or cmp push out movsl pop neg sbb inc in push jb mov pop mov (bad) popa shrb mov sbb idiv add push jmp js mov stos fs add cmpsl and push mov jle pop sub lahf test adc mov jne xor bnd fcompl arpl into sti sbb jle cmpsl add js xchg fcoml or fistpll mov (bad) iret movsl movsl push in lcall in sub sahf lods movsb stos cmp push push sub pop (bad) dec or push sub fwait in cmp pop addr16 dec dec test jbe pop ret xchg push pop cmpsb ja rdpmc xchg popa lret cli scas xor loope rcrb in xchg dec cmp and or hlt pop fcmove xor add mov in fistp scas lock fiadd sbb outsb inc data16 pop cli movsb mov stc fisubl jl add adc dec dec pushf cmp loop inc push mov fildl lea jle stos mov push in pusha sbb dec push nop in inc and out pop push mov fcmovnu sbb mov je addr16 out hlt xor xchg (bad) lods dec mov jne mov call (bad) jmp repz xchg scas insb mov cmp loop outsb cmc xchg adc in iretw aaa test xchg mov leave and inc cmp xchg cmpsl jno sub notb pop (bad) rol call add imul xchg jb lret mov xor push (bad) add fnsave nop jo and or mov loopne popa repnz lret scas in inc add cmpl jp sti mov sub cmp sbb mov outsl dec or mov jae lods mov push iret xchg sub ds cwtl xor mov lods and mov call cwtl rorl sti das sti test add or inc inc jle lea push and jb leave into stos add (bad) lods pusha cmp cmpsl xor adc stos es xchg jno add loopne or ret bound adc rcrl loope and xor cwtl xchg (bad) or mov jp test cmp fwait cli arpl jp mov jmp es pop ror fwait into adc in rcrb lret inc xor pop fimul scas roll or mov lods adc xlat push jae sub jbe and or cmp sub pop std inc sbb aam pop cmp fcmovnu mov jecxz cs lock push shrl testl xorl and adc adc mov sahf addr16 sti sbb out cmpsb mov push pop stos es stos cmp push test inc mov psrld dec outsl imul sbb popf fwait lds xor scas add sbb xchg dec aas (bad) jp jle adc sbb out mov je in sub lods pusha mov ficom jne into bnd int3 xchg cmpsl outsb popw imul scas xchg mov imul outsb xchg add ret pop lds into cwtl jns mov mov mov sbb xor add jge xor pop fidivrl mov xchg xor mov mov mov iret or psubusb loopne in ds xor lods pop add aas and pop sbb insb and std or push push add movsl sub add adc mov jno push int xchg jle add xchg jmp push mov sub iret pop repz or test add xlat cmpsl or (bad) mov sbb cmp sub jge lods pusha bound jbe adc sbb out add xchg and loop int xchg rorb push jmp jle scas sub or jmp lret jnp test jb xchg lods std pop push outsl (bad) cmp or lock sarb push adc adc pop mov mov int and push test in sub adc ficom inc scas dec cwtl jnp sub dec aam aas jecxz inc add popf nop push mov add inc dec mov push cli mov cltd mov stc js idivl call dec or addr16 pop xchg xchg and and test stos ret mov fmul mov (bad) fbld fistpl mulb cli add and cltd mov inc or repnz dec fistpll mov dec or xchg dec jle mov dec push and mov aas and cmp add in test lds xchg adc movsb dec xchg mov cmp add sti shlb lcall scas cmp hlt insl imul pop add js mov push push add fcmove jl fstpt or (bad) mov in out sbbl jne cltd std pop mov aam insl xchg ret add or mov xor jmp ja or test sbb fcmovnu and jge mov mov inc lock jno xchg ret sub pop jae sub push addr16 adc in mov push popf push inc mov insb in inc aaa push xor out add pop loop push paddusw enter int3 icebp or mov dec lods pop std push or or or mov test sub sbb in sbb mov sbb je xor fsubrl lcall dec sub xchg out sbb xchg sbb or dec sbb xchg pop cmp push sub fwait pop sarb mov test cli add ss add sub mov push int and cmp dec out and insb lds fisubr gs ljmp jmp and adc cs test (bad) mov adc dec sub pop pop mov (bad) movsb xchg pop mov jp adc cld cltd push mov push pop xchg outsb jno pop mov mov imul insb pushf pop arpl je mov dec mov and shrb movsb or pop fnstsw cmc (bad) cmp das fldenv insl xchg inc xchg ss andl lods popa mov iret pop les xchg inc mov fcmovnu mov add mov sbb aam sbb push jne mov and test push and fcmovnu stc push ret lds jp lea sar ret pushf sarl gs dec sbb (bad) ret adc cli sbb cmp hlt addl jg add pop dec decb imul jae jnp add jg outsl push push cmpsl xchg jns and in fadds jnp add sub add lock mov ds les ror dec cmc lcall push pop adc add cmp mov jecxz adc fldenv jo das sarb jmp mov pusha xor sarl cmc pop loope stos bound loope add je pusha or jp or xchg fcompl gs idivl test lock sahf dec dec into jo cmc stos adc mov jbe jmp fstcw fidivrl jno (bad) (bad) (bad) push popf out leave out mov sbb lahf ds (bad) lret aam add jbe inc pop mov jge jns sti lcall adc into mov dec and or repz fdivrs add mov push sbb jmp add jmp fcoml scas inc mov cmpsb fadd call enter nop icebp xchg sub jo das leave mov orl mov das mov cmp inc mov mov jo inc mov fistpll lahf jo push imul xchg and fist in xchg (bad) lcall out adc lret pop sub or lahf add call inc pop xchg and movb sbb test pop xchg fbstp xlat shrb inc icebp test or cmc leave xchg sbb enter mov cmp sti push pop mov mov lahf loopne iret and insb stos jp lahf mov hlt shll adc sbb sarl push adc and xor add jns and popf fistpll sbb sti aam sbb lea jge jbe (bad) jae jo (bad) fdivr cmp aam inc in pop push outsl aas jl jnp dec cltd (bad) je sbb xor stos cld push mov jno enter test mov add icebp (bad) mulb mov loop aaa adc jmp sarl adc loopne push test fadds sub ds and xlat xrelease stc ret mov jnp mov aaa cmp cmp enter and xchg xor ds or fst cmp aaa scas (bad) (bad) divb mov jle js rcrl dec in inc sub sub adc scas mov cmp dec pusha notl insl rcl int3 sub push (bad) rcrl std add mov and xor test lcall mov outsb popa jnp out sub sub pop scas pop push jae in out xchg sub mov dec (bad) dec movsbl loop sbb in shll (bad) test insl mov das inc pushf push and push jge mov cmc add (bad) mov mov and xor mov pop je adc inc dec into xchg (bad) inc pusha xor dec xchg pusha test xlat cwtl std pop test or and cs xchg fimull or sub lds adc scas cltd mov in jge jg,pn mov jnp mov rorb adc out mov sahf push push jecxz jle cmpsl mov jo dec pop je popa cltd shr mov adc arpl inc fnop sahf mov mov jle sbb xor cli stc shrl add adc jmp sbb sub (bad) jmp pop or nop in pushf jnp (bad) sbb mov enter inc push pop push repnz jae sub (bad) in insl mov pop and jl xchg inc and std inc add mov jl push inc lods mov cmpsb or cltd repnz ret cmp pop in xchg adc jne push pop sbb sub pop jmp mov pop imul or push sbb cmc inc call add pop jmp int ret mov inc scas cli jnp jg and xlat shrl (bad) or dec mov cwtl xchg lcall xchg (bad) fs xor lods push lahf psubusw imul iret mov jmp sub daa pop popa jmp aaa pop jmp divb aas ljmp imul stos push dec (bad) pop sbb ljmp js xorl subl dec sub mov (bad) dec outsb scas jns je xchg jo ss push xchg pushf je cwtl xchg (bad) lods fildl lea xchg arpl push adc jb push stos xchg lcall push sbb testb adc stos pop jnp dec aam dec repz int lea mov xchg jbe faddl aam std ret cmp mov mov clc xchg test adc movsb add pushf leave sbb pop jg xor in bound cwtl push popa sub jns cltd hlt xor cmp repnz adc xchg mov outsb data16 jb xchg (bad) sub in es dec arpl push loop sbb dec adc add imul inc mov bound decb (bad) sahf nop insl pushf adc mov pop pushf cmp pop mov int3 push mov mov imul lea jb push fidiv and in push push (bad) jmp jno mov mov (bad) (bad) (bad) negb test imul sbb lock xchg xor mov inc test in test xchg insb cmp jb inc jecxz dec mov out (bad) shrb fldenv push sbb cmc (bad) sub jg mov push sub pop fimul push lods adc int shl call outsb pop out add push lret iret arpl sub mov imul shrb (bad) dec cwtl (bad) jge repnz adc enter jmp jnp and mov xchg iret sbb inc (bad) insl or lret cltd out sub gs test adc lock sahf fisubl push ljmp mov loopne test or adc mov jb jmp mov aad jbe or and push jl pop dec fstpl je xchg sub fisub aad insl sbb js mov cli popf push cmp outsb push mov sub jb daa rcll sbb pop fcmovnbe lret adc inc sbb sbb lret stos shlb js daa nop jl cld cmp and adc aaa outsl jecxz adc shlb cld mov inc and mov push sahf lcall (bad) loopne xor into sbb jbe pop jmp loope or shlb or mov xchg popf (bad) icebp popa das mov inc sbb outsb mov fwait mov out or adc pop (bad) in rcr (bad) fistpll push imul sub xor pop inc incb in and push mov arpl sub pushf push and mov addl jmp mov or (bad) push out loope inc push xchg push popl xchg xchg repnz test mov dec cmp add cmpsb pop push jge jns repnz jl sub rorl dec js (bad) add int3 daa sbbb sub push (bad) sub cwtl inc into pusha sar lret or xchg js jnp or jg mov in out (bad) dec movsl sub fdivr shl outsb xchg aaa subl lcall dec in mov sbbl xor jb fisttpll and sbb jo (bad) xchg loopne inc adc in (bad) mov mov ret push cld aaa imul lock clc xor sub adc mov ljmp add imul pop dec popf stos cmpl inc push and or int stc push dec add jbe clc push cmc or mov pop sub int3 arpl xor push xor hlt sbb push rcrl mov or (bad) movsl imul sbb inc xchg mov inc and mov in sbb in int cwtl add add cmp mov jecxz nop aas mov sbb and fild mov popa dec arpl in and jle dec les dec jge or cmp (bad) jae sub je and xchg stc cmpsb orl movsl es fisubrl xchg mov outsl xlat into jno mov push bound es xchg cmp pusha pop (bad) jmp mov cli (bad) fwait mov sub mov pop in or mov sbb lds jle popa lds test rorl test rcrb cwtl push or mov mov hlt cmp add lret in pop add sub jge adcb dec fldt push push xchg sahf mov push pop cmp hlt loope mov mov xchg xchg stos nop mov fnsave xor push cmpsb mov jb sub pop sar (bad) mov pop pop pop gs ljmp aaa aaa adc jno mov xor shr fldenv js dec xchg dec fsubl xchg or add mov (bad) sbb std add hlt mov arpl cmp sbb sbb rol fmull imul ret stos outsl mov and dec pop xor mov (bad) or test (bad) jo mov call gs shrl leave aad ret pop lods adc std outsl enter std mov xchg repnz out jg and inc push mov fiaddl jnp cmp xchg inc aaa sbb and fsubrl mov (bad) repz jmp mov add data16 fldt adc push xlat test scas mov lahf jbe nop dec fdivl nop mov ljmp (bad) mov or (bad) jge pop pop adc (bad) dec add adc mov insl cmp lods movb data16 imul inc mov jp sbb cmc subb je ret xchg (bad) mov loopne cmp (bad) call cmp push leave (bad) shrl add rorb mov das movsb (bad) mov (bad) (bad) cmc loop push pop cmc inc or std push pop sub inc imul ja out mov xchg es nop loope jp push lods inc push mov add xchg jne negb movsl scas icebp bound lds add xor cmp mov fildll push xchg dec (bad) outsl push pusha push outsb xchg push inc icebp cmp aas ja in jne cmc inc jge or outsl and mov push push loop cmp add xchg xchg lret dec clc bound sbb mov xchg hlt repz pop dec xchg sbb jns and ret jmp xor stos cmpsl push idivb jp jl mov mov sbb mov aaa (bad) xchg mov mov sti repnz clc mov test fadds (bad) jo jle sbb mov mov xor add pop push adc mov lock mov stos in jb push xor ds lret scas rorl jle jl aam push dec push push dec xchg iret bswap call jne add ja add and and and (bad) lret pop sub cmp mov imull cmp aam mov aad leave pop inc (bad) mov aam popf sbbb popf jnp addr16 inc movsl sbb lea dec jae xor sub sbb mov xchg lahf push mov mov into inc jmp fbstp inc out inc in aam inc int3 pop push ljmp mov stos movsl mov xor scas and stc cmp in mov xor fsubl add add fnstcw js cmc inc idivb ror lret or das pop iret jge into js in mov ss xor inc dec arpl xchg int push js (bad) enter pop cmp push sub repz mov jb imul hlt cmpsb stos xlat insb mov rcrl jns (bad) xchg (bad) roll or nopl jecxz lods cmp scas push lahf pop cld insl push arpl push std xchg dec fwait loope add std jnp data16 mov cmp (bad) jb ffreep ret mov sub or mov andl enter mov xchg push negl mov jl lcall add xchg sub xor xchg divl stos jo add sub mov xchg (bad) fs (bad) sub jg bound add pop xchg fisubl std dec into add lcall add pop es movsb js fldenv lret and push jl out shl lds daa xor mov jns popa sbb push inc cwtl ljmp sub inc icebp in test or out jbe popa or ja xchg movsb add xor xchg or std mov adc cmpsb in push arpl stos (bad) mov sahf add stos and gs push incl push mov mov stos cmovbe in clc lretw xchg insb pushf pusha repnz aaa mov sti out inc (bad) fsub sub (bad) cs mov dec jo (bad) rol push mov dec ficomp xlat (bad) lret lret jne adc inc cmp icebp enter push inc or out jge fldenv lods sahf data16 mov mov sarl popa pop mov dec (bad) enter sub mov push adc jo inc and pushf lahf sbb inc (bad) negb cli lods sbb test iret xchg xor stos jmp sti jb xchg inc jno ja pop stc aad fadds test jbe adc lret xor jo add mov hlt roll jge mov pushf bound sub pop dec ja xor jnp pop xchg adcl in cmc xor ds (bad) sub (bad) jl enter mov xchg xor fisttp dec jmp out icebp je ja push stos movsb (bad) je jbe sub sub push xchg iret (bad) jnp inc (bad) xor lock loop rolb (bad) add out gs push scas add out xchg jecxz dec push test push mov cmc cld inc adc add aad stos push jnp out inc push loope out pop and or mov clc outsb scas aad mov push aam jp ret push xorb xchg or rep imul sub mov push mov jmp popa inc push inc cld jmp xchg xchg inc scas sub imul sbb clc dec lods jb jl xor mov jnp div or sahf sbb xchg bound stos inc xlat jo push ret push jbe pop test addr16 data16 inc push mov mov je sub in in sub adc dec movsb sbb push push imul stos inc outsl lods dec cmp mov pop xchg ljmp xchg adc adc adc fldt jle mov jg cmpsl iret notb movsl testb jle mov call dec stos cmp test das mov imul out in sahf push out jge lret push xchg xor into arpl in ljmp jle lds out (bad) lret (bad) (bad) aam add dec jl pop jne push xchg push mov xchg gs scas mov adc dec or sub mov ret mov sub lret (bad) push int pop mov xchg xchg sub bound ret fwait lret mov jl pop dec es (bad) jecxz add add jmp cmp jg jns (bad) xchg mov pop pop or jmp inc pop mov sub std mov sbb xchg xor (bad) test fwait rol dec and int3 pop insb push outsb cmp pop fdivl imul push mov inc scas (bad) pop jmp ret xor pop cli sub and test loop ret inc pop or pop mov jae loope das inc notb adcb mov cmp add inc fmuls cmp cltd sub cmpsb add xor pop icebp fist loopne insl jns pop popa sub or mov xchg std push (bad) sub jmp cmp or scas mov fdivl sub mov dec jmp movb dec mov push movsl add mov stos mov fnstsw sub pop clc sti aad imul push arpl mov mov fstl nop adcl cmp jp iret mov xchg xlat adc sub imul push (bad) push mov jp lret test pop xchg dec add pop jmp fisttp pop fsubs leave dec jl test inc sub fadd test lods mov addr16 mov out jno (bad) sbb push lahf inc add xorb lods scas cmp push adc mov cwtl xchg outsl sbb xchg fwait cmp fstl test inc mov popf or mov jns sbb imul xchg xor clc js sbb sbb je subb int jle inc test cld pushf fucomp inc add jbe pop lods push es push (bad) xor jb mov rclb sbb iret testb movsl popf xorl idivl jno repnz pop call out mov push (bad) lods sarl cmp lret (bad) clc js enter loopne xlat lods jmp movsl out js cmp xlat orb imul mov ret mov cmp sub enter mov int adc and out push out (bad) lahf sbb (bad) cltd jnp ja popf movsb mov push sarb mov pop into lea jne (bad) jbe jle or mov lahf xchg mov outsl outsb loopne or lds dec inc jmp rorb mov jnp add jecxz stos popa add pop in mov push add inc pushf js inc adc xchg cmovb jecxz out lds scas dec push (bad) hlt dec push mov aaa aas pushf pop and inc add add push out inc ret jg mov add loope test mov adc mov dec inc and out popa loope jnp push and or cmpsb and xor push inc ret push cmpsl push add imul cmp adc mov addr16 test jmp cmpsl jmp and xchg ljmp lret cltd inc mov sub xor imul sub mov fwait and adc das in outsl loopne xchg jmp insl lret add mov aad mov into test add and test or lret repnz inc lods call scas int mov dec fwait test inc mov test repnz insl dec push leave shl push push xorb sbb sub nop outsl in adc outsb jl dec and adc rcll xor (bad) xor fmulp std pop inc data16 fmull add movzbl cmpb stc inc loope fsincos test fcoml ret out sbb sub xchg lret test popf jmp dec xor subb (bad) mov pop xor ds lds ficomp (bad) popl bound icebp jno sub push xor (bad) aaa addl sarb andl pop lea sub xchg mov mov fs add (bad) jbe mov cli lcall inc (bad) dec push mov (bad) and push mov je lahf clc mov and inc or pop fadds mov (bad) jmp mov lcall mov pop cmp jnp jl jp aas add jl movsl push fistpll insl or dec xchg pop dec ret add inc ja les and js jno or mov mov push jmp pop (bad) xchg pop push xor jl lahf outsb cmpsb ljmp mov jbe enter adc xor push mov aam fsubrs push mov or sti sbb mov push jl cs mov ret cld das lea dec mov push popf fcompl test xor mov xlat popf jp lock mov inc and pop test mov pusha hlt cmp pop jmp inc fcomps xchg jecxz sbb fistpll sub inc jae jl or mov pop stos add mov mov dec add test cmp sub lods fsubrs stc loop sub mov outsl xor loopne add les pop sbb sub push shlb dec loope nop xor repz add popf stc sub pusha sbb dec xchg adc insb push push cmpl mov or mov mov aam (bad) ja jp xchg pop sahf rorb dec mov int and inc test arpl test lret lahf fs and or repnz add call notb push add xor mov cmc mov daa mov popf fwait in jbe push rorl sub lret mov xor or arpl into sub dec cmc sarl fiadd sahf push out (bad) addr16 fild mov mov mov xchg int3 iret mov in loope cmp adc push loopne pop xor mov out adc repnz cmp mov bound and in sbb aam pop int3 adc pushf inc cmc cmp jno add xchg mov pop cmpsb lds loop pushf mov test test sarb fs test daa or gs mov sbb loope pop outsl mov rclb fisubl inc insb xor outsb (bad) push fisub xor adc call fstl (bad) push xchg shrb and mov mov pop ret dec idiv sub or incl out (bad) dec ficom aaa pop fldl lods test mov ja jle lea jae imul inc pushf fstl lret pop mov imul push cltd sub mov aad and pop ljmp or jp dec int3 stos jbe imul sub insl or test jne mov pushf fmull cmpsb pop ljmp (bad) cmp outsb fcoml pop clc stc mov into mov enter fwait ret clc dec and mov in jne inc lret jb jge ljmp cmp (bad) stos lret add sub jne mov add das jmp adc pop adc pop inc xor mov dec cmp mov mov mov ret or nop repz sbb dec or cmp cwtl push repz outsl arpl fimul cld mov cmp push dec mov (bad) hlt dec push lock sub cmc pop sub jg dec mov cwtl shr mov jno nopl push jnp fadds push sarl outsl jns or jecxz test jbe inc jp lcall cmc and dec (bad) decb dec (bad) xchg push bound xchg jb fwait xchg add iret lcall jbe out cltd sti mov xchg and idivl pop jecxz pop or data16 lea mov out addr16 inc add and popa lahf insb mov mov mov daa arpl jb loopne xor mov fdivrp lods js pop jbe cmpsl lea dec mov add mov decb dec pushf aaa movsb push mov aad aad fadds fnsave pop (bad) cli lahf cmp xchg and xchg js daa inc lods adc aaa pop push lods orb iret (bad) stos mov inc dec pop outsb nop (bad) pop lahf jae bound imul lcall out sbb mov xchg scas add push (bad) push cli inc cli test sbb cld adc repnz pop mov inc leave inc sub xor mov rcll addr16 fldt and cmpsl cmp mov inc or sub aas sub mov push aad je mov sahf jecxz pushf mov lret mov rorl mov cmp repz testl (bad) jo out cmpsl test js pop movsb and fdivrs outsl pop lea loopne pop outsl (bad) mov xchg addr16 pop sbb sub test int3 pop data16 mov clc cmp pop (bad) addr16 arpl mov mov push js mov jbe repz fsts lret rcll and jne imulb dec ret push jg sub aas jnp mov mov pop xchg addl add dec mov mov pop xchg insl pop sbb xchg or jae inc sbb mov adc lods push sbb inc (bad) daa and and repz jle pop movsb adc xor mov inc negb imul scas mov aam inc inc pop dec cmc mov mov icebp cltd inc ret fbstp mov pop ds aad (bad) or cmp mov adc ror call movsb loop sbb stos incb mov lock cltd lea pop dec mov int3 mov sti dec xchg fmuls cmpsb adc xchg or ret ret aas mov xchg mov pop sti sbb mul pop push xor pop and pusha int inc outsl fsts dec pop inc fwait inc rcr pop ja adc fcoml cwtl xor dec lea aam or insb add or sub push and mov sub xchg xor adc mov out insb xor mov cmp mov mov pop mov dec or out es adc dec push iret sub test cmp jge push ret mov in inc xchg rorl pop cltd rcrb lea push pop jns lcall push push aas jg inc or idivl jb inc jns add xor mov pop movsb and push imul mov pop cmp lea in pop mov popf cmc cli cmp ja push push in mov inc pop adc pop pop movsb pop xchg lret jns mov inc mov addl jno test jae xlat mov mov sbb pushf roll scas into mov and add xlat lods push insb mov dec add mov inc mov popf addr16 subl adc sbb or sbbb jp fsubs loopne cmp fs dec nop push pop cli lret nop inc cmp psubd add jp pop rorb inc test and std mov cs mov imul loop out mov orl std mov push in (bad) nop or cmpsl shr pop dec pop pusha test (bad) rorl pop add sub jecxz nop hlt pop jecxz xlat add cmc call divb inc and imul or out mov (bad) sti xor jecxz imul mov insl push xor sti mov pop sahf in imul sub mov fbstp pop adc (bad) or dec test mov aad jnp ret outsl scas jne cmpsb fsub leave adc mov pop cmp or sbb jae (bad) jecxz mov shlb das sbb aas cwtl stc test sbb dec popa mov mov lahf mov aaa mov js rorb cwtl (bad) scas add jmp sub push jne xchg in lret insb cltd pop in xor cld lret (bad) lods pushf sti jecxz scas ret dec sbb inc daa aaa mov outsb mov push call lea mov popf sub lods gs call mov xchg sbb and dec (bad) je into jnp insb (bad) jne mov push aas cmp cli and cmp push cmp mov jg add out push jae xchg cltd dec jp push xor fwait ljmp jns pop fiaddl adc jns xchg cmpsb and dec mov incb lds add mov push xor jg inc es (bad) cmp imul sub push in cltd mov mov push add cmp sub pop clc xchg adc fprem mov mov cmp mov push push aas movsb cmp xorl in or out mov in mov or xor jmp inc test in xchg subb into arpl add loopne adc popf xlat pushf dec jb sti xor outsl (bad) sub and mov shll jmp xor das js push cmovno pop insl fcomps mov in divb push or clc sbb test inc cwtl ljmp clc insb stos pop pop mov jl popfw mov test cmp jae addl lcall inc adc int3 lea adcl adc xchg mov test push adc loope push cwtl mov lret mov jge sbb rcr pop nop hlt xor ds mov and add add sbb (bad) sbb jae sti mov or shr xchg pushf pop add or aaa lahf cmp sahf addb dec roll inc andl jle in mov stos aad mov stos rcl xor imul dec sub je add xchg pop push fimull je sbb mov enter test xchg push push dec (bad) mov inc icebp ja jp add rcll dec pushf (bad) ljmp xchg rclb leave lea mov sbb push or pop push sub xchg add pop or inc sbb sub movb loop sub imul sahf adc push pop inc dec in lcall xchg lock xchg jle mov stos imull jae push loope (bad) dec sbb jle sub inc jbe jg pop dec testl or sub lds insb dec and inc or fildl setno test sarl repz jnp adc (bad) movsl rcll dec daa arpl push icebp (bad) insb lea sbb negb xor loop aaa adc mov hlt aaa loopne stos (bad) jg mov pop fnsave fist and jno adc inc push inc fdivrp imul (bad) pop fildl mov out cs dec rcr ljmp loop test cmc mov jg movl mov sub sub mov outsb dec adc ljmp jle xchg adcl adc mov pusha inc sbb pushf jg pop jg fwait mov loopne jae scas jmp in fs pop movsb cmp push jns inc sub cmp (bad) xchg or js (bad) repnz xchg adc or mov jmp lods loopne stos adc outsl das dec ds ja cmp stos push dec jp adc repnz cmc dec pop and xlat loope mov jo inc jp fsubrs inc xchg leave pop push call fiadd ds int3 pop lcall sbb loopne push aad insl sarb rorl das fsubrs aaa jne or xchg xchg in push andl and punpcklbw fnstenv mov fdivp gs dec xor pop jns cld test ret mov sar mov (bad) sbb pop dec cmp xor dec ret push sbb jnp mov adc or pop (bad) xor adc add decb (bad) mov inc jp jp or test lea (bad) jbe std adc cli inc jle mov pop (bad) pop inc xor ja or lcall lahf sbb sarb pop ret ret pop and mov roll aaa inc mov ss pop imul daa push jp call dec leave add insb pop pop adc jne incl aaa cld and ja jmp add mov inc (bad) xor mov mov cmp and push cmc fs loope fild push incl add inc push jnp idiv add pop xchg adc nop fnsave imul dec adc icebp insl jg sub (bad) mov xor in imul (bad) popa lret and icebp js and push cmp mov sti xchg pop mov scas adc aam out push lock pop mov mov fsubrl jnp xlat push pop adc mov je xchg inc mov repz into imul fsubs test ss pushf mov out sbbl pop (bad) cmc iret imull push or cmp lods repnz or mov dec jns,pt scas cld add ficompl insl xchg sub inc adc movsb into data16 push test cmpsl pusha mov arpl sbb stos mov fadd sbb inc push push adc int dec mov add xchg xor hlt dec or cmp dec push stc in inc xchg sub out xchg mov and and fisubl lods loopne std dec jge xor adc jns sub loopne adc mov xchg dec dec push (bad) pop test push cli pop ljmp outsl jle jle xchg jb data16 xor lock and sbb lahf bound cmp or (bad) out ds or sbb add push dec sub mov push push cmpsl pop out mov scas fdiv mov fmull dec test lret pop dec stos (bad) or inc pop fisubrl aam sub in ljmp flds jb (bad) mov lods std mov testl mov lret mov xor test mov xchg shr jnp dec lds or inc stos rclb or adc sahf jl mov scas int3 (bad) fisttpl vcvtps2pd sub dec out sub (bad) and and xchg xor pop das pop addr16 aam cmp mov jns add addr16 push testl pop es lret leave jbe xchg mov push jmp shll or mov push xor inc lret jecxz imulb push rcl mov add cmpsl out sahf les rcl add aas daa xchg xor sub cmp adc xor pop (bad) cmpsb xor inc bound into push xchg mov movsl add mov sbb jo push sbb mov out mov imul add push or mov ret (bad) mov (bad) fild gs pop xchg lock ss jne add cmp xchg lret or shrb les sub popa xchg ror inc push dec and sarb lret and mov adc fiaddl cmp hlt flds mov dec cmp fisubr cli sub inc xor stos sbb push jne ret nop out push xchg push outsl (bad) clc jmp jb aad xor imul ds sbb xchg or (bad) clc dec daa cmpsl inc loope dec bnd mov push (bad) pushf jge stos je (bad) mov loope (bad) ss mov out dec adc mov lods xchg xchg inc movsb cmp push loope fistpll (bad) into pop mov and mov ljmp mov jg sarl outsb pop cmpsl and mov movb js add and sub decb mov in clc sti test arpl rolb movsb fwait inc push push push fild and imul sbb ja adc roll mov adc test ds stos mov dec dec jnp adc dec lds shrl jne mov std mov loope sub xchg add jg sub aam sbb iret int3 data16 cmc push ds xor lahf sbb or pop fidivr jge lods and xor in xor add addr16 repz or xor adc push out call shrb mov pop mov mov ret inc dec mulb fdivrl repz pop pop inc xchg cmp stos mov xchg test lcall add mov xchg lret and (bad) fmulp lods je mov imul repz loopne jae pop adc stos mov ficompl icebp mov jge mov lods cs cwtl stos cld test (bad) jle lret push mov stos mov movsl push ret inc sbb mov and rolb or aam mov push mov xlat xchg or (bad) pop cld add loop stos dec adc das xchg std sbb shlb in jecxz cmc out fildl or les sub inc (bad) cmp hlt (bad) hlt cli shll stos sub popa scas js fwait rolb dec jno and call adc add and xchg rcr rep mov mov fidivl cmp pop or sub xchg adc sbb adc xchg mov sbb mov es sbb adc jge mov ja pop sub jg sti pop sbb mov test (bad) clc cli sub lods js mov hlt movsb adc inc pop add xor dec pop ret fstps pusha or in lret enter cmp sub pop test or stc sub jmp cmp shl sbb inc loop inc (bad) sahf cmp cli int3 xor dec ret loop xor fiadd fxch sub add std and sbb push adc into mov mov mov dec lods push jp movsb out dec mov stos lret imul mov lods popa shr lea cmp jns xchg rclb ret mov loopne pop idiv std add jg in movb sub sbb lds daa fmul mov pop push addr16 lock pop inc xchg test mov sub mov dec xchg test js cmp push stos dec sub das mov test dec mov jg scas jmp add adc and lods and push mov sub icebp mov cwtl mov mov pop mov mov in out out repnz hlt js inc es (bad) cmp test dec popa mov subb js out shll jbe rcl jb aad or nop aas fisttpll mov lret je push movsb lds xchg add leave mov pop andl into dec repz fdivrl dec add inc jmp out jle dec (bad) lret arpl sub (bad) jae sub sbb pop and aaa mov cltd push mov pop mov std xchg push loopne dec jp or ljmp out pop cmp mov jp sbb (bad) (bad) xchg (bad) fild nop lea dec pop icebp sbbb sbb stos sbb mov out daa je xchg pop scas lods cmp mov sbb dec scas xlat js xchg mov mov outsb jns xor dec sub xchg popf and jge sbb push adc and cmpsl sahf les ljmp lock adc lds and lahf adc inc movsb xchg nop test xor int3 lahf or mov mov pop inc jno les hlt mov popf mov cs arpl jo or testl push jae inc add je pushf xor xchg fidivr dec and fs div inc sbb dec push dec bound les push push aas cmpsb clc mov xchg outsb xchg cmpsb push add gs xchg mov xchg or and into inc jmp mov (bad) fcoms mov mov lods int3 pop sub (bad) or pushf sbb sub es push icebp and mov lret test das push pop and loopne pop inc aad test dec pop js pushf sbb pushf adc jmp call or push fildll pop js jmp dec hlt sbb gs imul xchg or hlt fidivl adc push sub mov push pop addb scas inc fcomi or sub (bad) xchg in add out mov mov inc fstpl add orb int add jns fmuls pop cmp and push roll pop test and sub popf pushf mov push mov pop inc mov ret ljmp xor mov mov mov mov add sbb xchg cltd repz dec (bad) loope popa jmp inc mov push sbb add mov in movsb dec js sbb ficompl sti sbb cltd fwait mov fwait test sub hlt mov sti psubq jmp ficom inc or outsw add jnp pop out in fdivs and dec lea sbb les jb xor adc mov xor dec adc cmp jae pop jp outsb and fsubs (bad) cmp gs xor sub jb stos mov sti or jge xacquire insb inc cltd mov or mov pop daa mov js or pushf repnz cmp push or fimul mov lcall cltd outsb cld cmpsl jl mov dec mov push lahf iret mov out push rcrb roll jmp dec xor mov sbb dec xor ja dec xchg ds inc pop sbb dec cmp std iret dec icebp mov jl in or fcmovb mov pushf cld add stos xchg in enter xchg ror montmul cmpsb xorl adc arpl xchg bound mov cwtl jmp fsubs xchg mov insl cmc cmp fwait bound test (bad) sub add repz test jb fs dec lcall (bad) mov adc loopne xor in jnp and push xor sub xchg cmp mov xor push push jns stos dec dec aad mov outsb add and bound sub incl test push mov rclb or sbb sbb movsb lahf mov and into incl adcl stc out mov dec (bad) les lcall jge xchg mov sub mov ret lret int3 push pop scas and push repnz mov scas add sbb jns inc jae push outsl jo jmp in bound mov arpl (bad) cmpb pop sub cmpsb insb bswap push andl cld pop mov mov xor add and adc push pop dec xor jp xchg dec xor pop jle or mov xlat pop insb aad ss mov jns xlat rcrl insl sub cwtl sub hlt mov in icebp jae adc (bad) ret mov (bad) sub loop pop mov shrl xchg pop popf cmpb hlt fwait push mov out inc push das leave sbb or or imul (bad) in aaa xchg fsubrp aam mov xlat sbb stos xchg insb xchg mov xchg xchg xchg dec pop fistp lahf xchg mov icebp pop pop pusha (bad) cli fs (bad) jbe bswap out les sub popf push lcall cld mov dec insl jbe scas rol outsl movsb aaa sete cmp xchg add add xchg (bad) push and lods mov es adc sbb in movsl leave cmc call jno xor jne inc mov mov and pusha xor adc (bad) (bad) cs ds cltd jp jmp out push add cmc or add mov mov test cmp test test fistl cmp jg mov xchg aam in addr16 push pop pop popa dec dec sbb lcall (bad) cmp cmp js adc inc jb ja sbb test (bad) mov cld (bad) sbb fwait cmpsl stos cmpxchg bound bound lea loopne lahf popa mov ljmp cmp sub decb dec enter jecxz pop add and push lock inc lods jnp loope cmp fmuls add ret jno mov mov pusha pop and ss add xchg lret inc rolb aas cs arpl roll out fisttpll cmpsl into inc cmp xlat and jmp fwait outsb mov shr and in enter stos and or add jmp ds scas pop xchg scas push cwtl inc test and xchg out or (bad) jne pop inc sbb iret add adc jmp fs sub adc std mov incb adc dec lahf stos clc mov xchg (bad) inc pop add mov call pusha xlat sub cmp ret out cwtl call push add inc mov popf adc inc cmp test adc dec out test pop scas stos bnd push inc mov add and and or data16 xor (bad) push sbb icebp xor xchg movsb movsb (bad) mov pop std and jl mov fadds pop push jnp mov sub xchg pop sbbl add outsb out jns xor popf insb mov sbb cmp xchg aaa jle lret fbstp xor add sbb sbb (bad) inc sub (bad) sub mov push dec jl inc jo sub adc fnsave mov ds push and or sbb push xchg xlat sub add mov pushf jmpw mov inc fbstp xchg mov push push cmp enter push jmp (bad) xor xchg add sub fildl rcll add push ret out test pop in xchg ja dec pop imul mov cmc outsl or inc push cmpsl les int3 jle hlt popf add xchg mov mov loope pop pop inc and sub lock and push pusha in sub fmul enter mov and mov pop enter dec mov out ss push test hlt mov leave cmc xor sbb imul (bad) dec cmp add fmuls nop push outsl mov adc scas das roll aad mov mov cmp aaa loop xor test push jl mov cmp xor or mov pop es out xchg dec gs dec sub js xor push fstps mov out or cmp outsl xor outsl mov or jbe popf ret rcll sub mov jmp and cmp inc pop call inc insb inc inc mov mov pop xchg mov cwtl adc std mov sbb xor clc inc push fiadd sub fbstp and cmp xlat cltd add pushf pop sub imul sub inc (bad) xor ja pop adcl gs pop inc bound pushf fdivr outsb in jg sub pop mov dec cli sbb pop add and pop fldcw adc insl pop shr rol dec movsl test push outsb int inc mov xchg icebp aam sub fwait rcr mov (bad) fnstenv jl push dec xchg movsl in sbb push jo ss mov and stos lods inc (bad) nop (bad) frstor ficompl sbb insb pop mov or dec push fadds rcrb (bad) push fdivs ret mov adc (bad) mov test xchg stc inc add in jne xor and sub test and jl sti xlat fcompl fdivrl xchg (bad) or mov sahf repz and es or pushf jecxz xor fimul sub repnz and pop movsl popf nop lods sbb xchg loopne fisttpll notl punpcklbw int3 inc fstpl aad xor jno pop inc add jmp mov sub mov sub lahf cmp mov cmp enterw ror mov incb push push syscall hlt mov int ficompl cmp cmp cmp jbe inc pop push mov and rclb decl in lock bound sub push (bad) cmp sahf pop es hlt std lds xorb mov adc (bad) mov sarb ja faddl dec andl add (bad) mov inc inc or add xchg xor mov les faddl pop stos mov in mov testb jg or push cli in arpl push cs pop add mov dec or sbb daa xchg lods es jle cmp outsb divb mov push leave mov jnp addr16 dec iret outsb xchg jp xchg xchg nop xchg add cmp xchg in cwtl jmp xlat je inc sub outsb bnd lahf jno or sti mov sarl pop dec dec mov scas jne and cmp aaa inc sub imul mov xchg orb xchg mov xchg shlb jl mov or cwtl push or scas xchg cmp mov sahf push xor fsubp aad mov cltd lods push fisubrl (bad) ljmp sbb sar push inc mov adcl mov mov inc add mov or mov sbb and (bad) sbb cmp push cmp lods test lret rcrl pop bound ret jge dec pop je shlb lret mov sub popf sub xor shll lock mov jl sub adc and pop push add insl (bad) sub xchg rcr out cmp imul pop mov add xor xchg aas sar aam cmp pusha mov inc into pushl in aam sbb and pop lcall cli xor jg leave insb cmc jo mov mov push pop hlt jmp scas jns xchg popf mov call pop push in mov test and push jb lret mov sbb adc sarb pop les cmp cld xlat enter je orb adc mov push mov sub inc nop mov sub inc add mov jno popf push push and pop popa fbld mov roll xabort xor xor push fs cmp push and pusha dec add adc out mov or popa das addr16 cwtl push es movsl rolb dec mov ss and cmp xor daa pop mov add shrb mov stos xor xor loopne cmp lods mov mov pop sbb adc (bad) adc mov mov ret sar fwait xchg repnz sub lds in cmc inc adc fs xchg push or sbb test or jle hlt fsubs pop je sti mov xchg lock xor adc mov push mov rcr mov jle adc push mov movsb in xor fnstenv leave mov notl inc call cvtdq2ps dec jae inc xor xchg (bad) std int3 mov leave stc mov ja scas inc xchg adc xchg mov and es mov lods mov int3 xchg xor adc mov push das dec shrl mov inc in lahf ret ja out push out pop aaa movsb and mov adc repz cwtl test jge sbb or (bad) das dec dec leave cmp mov cltd stos iret jge pop jnp xor or xor addr16 jp sarb into mov enter jo jmp fcmovnbe sbb dec dec push cli inc gs out xchg clc xor mov mov out ret pop jge cmp xor add ds mov mov adc stos inc cs adc es mov insb mov inc arpl (bad) xor jmp jne xor jo inc sbb push (bad) outsb mov sbb mov inc js push push cmp orb ljmp fisttpl int3 loopne pop insb test dec jae stc fwait or enter mov mov pop dec and push mov aas xor (bad) insb push xlat nop xor xor xchg cmp pushf jb into ljmp out insb push (bad) movsb mov and bound pop fwait dec incb cmovae mov adc fsubrp clc cli jae test out movsl pop adc aad dec rcrb pop (bad) sarl (bad) icebp pop jb add push add mov mov jl add ja sub bound out add sub outsb cs mov daa cmpsb in push aam clc dec xor cmc loop popf shrl jnp popa mov jb mov push imul adc push cmp insb (bad) cmp nop jl cmp arpl fisttpll sub loop jns and jb and hlt fwait aam outsb divl imull jge jae lret shll mov mov stos movsl les cmp in rcrb int mov rorl cmp test lods mov aas xchg stc and xchg dec sub jge aam (bad) stc xor loopne or nop xchg ljmp adc jg fist int3 outsb stc push jbe jo mov mov mov inc xlat push test rcrl inc sub repz ss iret out inc mov mov inc lret sbb data16 repnz out or sbb pop adc fstps std cmp test mov cmpsl xchg pusha jg leave lret pop mov mov fs sti data16 outsl xchg xor addr16 add push lock adc xchg mov (bad) cmp fcomp imul xchg push lahf mov sub and pop fistp xor jnp mov scas jb lds ja jle loop ljmp imul (bad) (bad) stos mov cmp xchg push jns inc mov out mov sbb mov dec rcrb hlt (bad) mov mov (bad) jnp adc lea popf out and add int pop out cmc (bad) cmp loop push mov cmpsl mov scas das push cltd add mov sbbb mov sbb scas mov cmpsb decl stos mov add adc sbb iret push into xchg jge or subb aad push cmp add hlt in cmp cmpsl mov lea and inc fwait pop mov inc les adc cmp je mov or out popa je sub popl pushf lea imul in xor ljmp lds mov jecxz (bad) ljmp lcall imul adc (bad) pusha xchg sbb roll sbb inc into addl push call test out fs push pop sub test pop mov dec std jne sub xchg xor add orb icebp stos jl jge test ja lret pop (bad) stos bound cmpb test (bad) mov xchg test mov xor push pop xlat addl mov sahf or dec xor stos sbb insb cwtl add cmp loop mov xor sbb xchg adc cmp movsb std enter xchg stc push push inc sub or fidivrl jo xchg jne pop arpl idivl stc jae dec lds loopne or mov lret cmpsl jg popf mov xor push nop add aaa adc lods daa sbbl add jne les test adc hlt ss imul frstor lods push lea xchg in lods popa pop inc xor sbb (bad) mov (bad) into mov es dec push xchg cmp and or push sbbb inc jge fnstcw mov lods loopne mov xor jnp repnz jno cmp ss enter pushf adc cltd sbb jle test dec (bad) in sbb add push pop cmp data16 pop jl adc stos or fucompp movsb sub push jmp stos lahf shrb mov pop popf pop push jmp fs and cmp adc pop (bad) stos in fist or or mov jecxz xchg decl inc mov outsl mov popa popl jns mov fldcw mov test inc push fwait lods aad movsb sti ja jne inc adc inc adc or (bad) dec push (bad) cmpsb push push push out int3 arpl inc sbb int3 addr16 jp pop lods xchg mov push xchg loope sbb movsb sahf mov pop movsl cmp stos and cmpsb jno bound out xor ljmp fidivrl imul add jae mov push int in imul rorl cmp pushf lret fistl sbb loope sub pop js pop inc call rcrl int adc adc xlat mov xchg or inc imul mov push repnz push testb daa push xchg xor lds mov inc (bad) adc mov push rorl jmp out sub cld gs push nop cmp cmc mov cmp mov fist sbb xchg aas cld popl and inc xchg aas push out push rorl jo xchg outsl xor icebp fnstenv int call jle sbbb sbb int3 and push jp dec jb cltd dec (bad) jno je icebp stos into ljmp mov orb lods inc cmp dec ljmp ljmp pop inc cmp jmp std pop ja lcall pop imul int jecxz bound sbbb fldenv pop xchg push icebp dec scas ficompl dec imul aad jmp jecxz scas jnp cmp hlt jno mov rcr jo sbb in jge mov fcoml sbb fsubrs xor movsb xor stos push sbb inc inc push cmp xor movb cmp cwtl ljmp cmpsl jp scas aas int int3 dec fcmovbe cmp dec or xchg es iret mov test jle xor fnstcw int3 pop lock scas pop test mov (bad) adc mov loopne push shlb fldcw mov inc cmp mov sahf loopne rorb xor inc adc cmp push and inc dec mov or jnp data16 jbe daa adc dec lods jp sbb lahf mov pop jp adc push xor in jl test add movsl mov repz add in push jmp ja (bad) seta scas push pop aad int inc mov test lcall inc and xor fs iret test add pop or in lcall ret cmp ret pop mov mov mov (bad) out pop loopne dec leave lods jno jno lock dec pop jp inc or call hlt lcall ljmp sub repz xchg jecxz (bad) jle repnz pop mov add push test push cld rcr sbb lock popa xchg mov mov push xchg daa and xchg shlb jecxz es push mov aad pop shrb repnz push test jmp push das fcom jecxz lret pop sbb inc or arpl in out fsubl adc test std cs mov dec xlat pop pop sbb mov add (bad) add fdivs sbb pusha arpl pop (bad) jbe iret pop mov mov inc pop mov inc push iret sbb jnp mov mov jg lea hlt sub sbb in jne scas ss mov ds dec sti out decl jmp outsb jo adc push inc (bad) or imul mov lcall push jbe pop imul (bad) rorb cmp cmp bnd js mov sub xor mulb mov nop daa xchg data16 mov sti dec add pop iret push dec ret xchg sub xorl xchg pop fwait dec push dec fcmovb cwtl (bad) aam ret mov xor mov fistpl sbb jge inc loop adc jg jp cld notb jo dec sahf dec mov jo jg xor cmp xor out fldl jg mov adc jne imul icebp js ss rcr fstpl stc mov lds aad push xor cld stos imul repz loopne movsl enter sar sahf jl mov cld movsl mov mov iret xor scas int sahf push and and or mov lock lock int3 cmp jmp sbb mov xchg push mov stos add push mov (bad) xor inc xchg popf xchg mov aaa nop and mov xlat insl and wbinvd inc jecxz pop mov and popf inc sbbl push push mov test les test jmp icebp shrb add dec aaa (bad) and adc or (bad) lods pop clc out addr16 dec outsb sub cmc lret push pushl sub inc imul sahf mov loope inc cwtl xlat (bad) dec fildl xchg pop negl fist push sti popf pusha xor add js rcrb pop faddl mov mov jo mov or xchg out pushf push or pop jae lods cld les and mov das add lret hlt push push sbb mov push lock inc loopne xchg and mov cld out addr16 xchg ret fwait xchg xchg (bad) in jae jge ss in repnz inc add lahf mov mov jns adc nop je sbb add fldl adc mov ret cmp mov cltd mov nop cmc mov push pop cmp (bad) notb xlat push adc or or (bad) icebp add pop in pop xchg dec mov dec sub dec sbb sar mov add out push les xchg les test inc cwtl sub cmp jnp xchg (bad) jo jb jns inc enter jnp pop out mov or sub cmpsb mov neg (bad) mov adc mov cwtl fnop loop push mov shrb mov mov bound test jge and mov or std mov (bad) dec fldcw lods ror mov hlt (bad) or cmp (bad) in leave or and jae ja into jle push stos and xchg and xor cltd pop in mov fstpt (bad) adc sub push addr16 ret mov xor or test popa (bad) mov dec aad insb and movb add pushf pop leave sub mov jne icebp aad (bad) push mov inc jbe (bad) data16 sub out rorl push push addr16 (bad) out mov mov or imul scas movsl mov int cwtl push rcr pop add jl and xor ret sbb movsb xchg cvttps2pi fwait outsb bound test stos movsl sub mov pop les mov aaa mov xchg mov jmp je sbb cmp out ja mov sub shrl inc fildl cmp lods dec imul stos jmp test jle int popf loopne loope pop xchg and add insb dec mov xor mov jmp xchg popa xor mov xor adc mov mov in push jnp addr16 jmp jns (bad) mov and in pop mov (bad) aas fcmovnu inc idivl and or and insl rol test inc (bad) mov std int3 sub cmpsb mov mov add xchg mov int3 mov mov mov fdivs ror stos or xor and dec dec cli push rclb (bad) aaa push xlat loopne out or rol loopne fs add inc lahf out adcl xchg fsubrl stos mov stc xlat mov or mov imul mov sub aas ja or test xor xchg int jae push mov pop mov fsts loopne rorl clc mov jecxz cmp js jno cmc js add stos popf scas mov mov imull addr16 jns push or push jne (bad) fbstp scas sti int adc jno lret cmp mov aas mov xchg pop out push lcall js data16 push (bad) sbb icebp repnz imul adc std cmp stc ljmp mov or add cmp int3 add sahf push movsb lods inc xlat and add loop pop mov mov mov mov scas lods xchg xchg jns inc cmpsb xchg sub xor or jns push aad movsl dec mov xchg lret jno stc addr16 ret (bad) jg inc cmp add mov mov inc sti xlat dec (bad) mov push outsb mov cmp clc mov rcr jle xchg out jno or add outsl cld push or imulb push lret mov jno enter hlt or inc (bad) repz mov mov fdivrl into mov cmp pop ds popa fs cmp cwtl xor mov adc jbe test push lret int mov aaa mov inc sbb in adc int adc pushf cmc fmuls cmpsl sub fstps fsts fwait adc rclb ja fadds in cmpsl daa (bad) out add sub pop enter pop mov neg mov add bound sub dec and out inc loop dec jle jge ss scas cli sub dec fwait push into clc xchg mov ret mov adc add lahf enter es mov push fcmovu inc test loopne int (bad) jno shrl (bad) cmp cmp js ss cmp fnstsw adc dec lods clc pop jl notb out les scas jmp dec jo sbb sti lret (bad) or out dec rolb adc (bad) aas jne sahf insl dec cmp mov adc and aas in or data16 sub add or in fnsave push adc fistl jge into xchg lock rorl push push lock pop repz jmp mov stos ss xor dec (bad) decl push loope lea push push pop jle add addr16 aam rcl jo inc mov xchg push sub dec inc cmp arpl jle addr16 sub and jge fs aam test jae movsb and fdivrl add ss or inc js divl mov mov test jmp arpl iret xchg xchg pop mov mov outsb sub adc pop sbb insb xlat mov out ror dec cli scas btr es dec pop dec adc push push or (bad) add scas push in xchg imul and imul imul cmc push enterw adc cld adc arpl (bad) mov mov or mov or xchg js in out sub push mov push mov mov adc push fwait insb add sti inc sbb loopne pop (bad) and std push jbe mov add push out pusha lret add xor pushf paddusw stos jle movsb cmp adc scas in xchg scas and pop cs add dec fdivrs cmp iret jo jl add mov lret lods mov xchg mov pop pop cltd shl mov (bad) lods ja repnz scas dec scas add mov adc popa xchg xchg loope stos nop dec stc adc loop (bad) icebp mov movsl cmc idivb push (bad) push aad lock xor lods xor xchg or int dec rcl lcall out scas xchg int3 pop loopne push loopne sub inc or mov push sbb cmp (bad) xlat stc jns pop or pop lds adc fcomps jecxz inc movsl sub mov cli xor popf lock inc arpl adc loopew sub test dec xor (bad) icebp cmp outsl lcall inc hlt sarl sbb lcall push pop cmpsl bound jbe fsubs out add ret jmp dec push test addr16 jo dec fbstp iret xor pusha push mov (bad) jle hlt loopne inc dec in lods insl aaa bound pop dec pop or ret pushf (bad) and mov pop jne inc pop adcl (bad) or jo cld in cmpsl test mov cmp xlat (bad) bound add aas outsb test add and or mov mov out ror ja andl lret test pop arpl mov inc and fbstp push sti sbb mov mov jmp cwtl das mov jb fsqrt or cli outsb xor sub cmpsb sub mov cli pop and and test dec push mov mov data16 xchg (bad) mov adc push mov insl jbe add out jp les mov mov xlat int3 cli mov pop adc jecxz adc xchg aaa cmpsb mov in or sarl sbb imul pop das ret jecxz xchg pop int3 sbb fildll hlt push mov (bad) add dec and pop sbb loop mov mov sub decl sbb (bad) je cmp add stos fs cmpl push mov and mov out movsl cli cmp and ljmp rclb loop jmp (bad) rorb jne (bad) rcrb mov pop test ror movsb jae call sub pop shrb xchg icebp enter test mov cmp jae jne fcmovne bound xchg xor jae rclb ja loop (bad) cmp jmp popf aas adc and iret lds push ljmp push cmp dec adc fs push je in jns mov dec out pop stc xor mov das xor sub sahf testb or loopne jl and les dec fistpll pop push aad aad pushf and repz mov lea push adc sarl mov enter push pop cmp sub (bad) xlat pusha push cli out jbe lds rorb mov jno jl mov pop std add lret pusha inc out mov mov sub cmc popf or and stos push and jge lods inc sub jbe sbb data16 mov lahf cwtl jns xchg push hlt pusha xor mov inc test mov inc pop or mov add (bad) jno adc mov sub lcall add mov xchg jno or push loop and sbb mov dec xor push outsl ret imul push cli or ljmp dec sti fildl pusha mov inc out xchg jb gs jg inc dec hlt dec lock inc inc in imul push inc popf rcrb push jo int3 adc cs cmp popf and imul in test push mov cmp xlat imul fldcw popf push sbb pop inc lret mov and imul and loope or out outsl icebp mov sbbb js popf inc nop and pop mov (bad) jge cmp and sub or lahf xor lock push ja sub jnp popf cmp xchg xor mov mov pop in adc add jg pop jae mov mov mov loope cmp inc cmp scas adc mov aas sbb mov cmp inc xorl out mov inc out sub mov inc mov rclb je (bad) imul xor mov cmp jp std test outsl pop sbb dec shll dec push dec mov xchg js test or xchg popf push push mov pop in (bad) outsl popl or in loop xchg scas outsb or or incb inc adc and arpl outsl cmp jp and mov jnp sub dec sarb xchg js dec and insb (bad) (bad) in cmp mov aad dec mov cwtl adc (bad) cmp enter xchg adc push pop loope mov sub daa xor enter and add ror in in and sbb or movsb stos (bad) rep out inc adc mov mov loope,pn and clc sbb fbstp aas cwtl or push dec dec lret mov xchg mov je inc cmp std xor aam add pusha call cltd mov in adc test clc mov pop roll out mov stos sti cltd sub outsl (bad) loopne pop loopne xlat addr16 pop test mov xchg ret aaa mov push jns ds sub cmp push push mov imul sahf hlt pop add cli gs in sub cmp sub out lahf test je lcall or unpcklps ja mov cmp push fsubl daa mov sarb xchg xchg add and (bad) cmp adc out xchg mov xor pop int and or add mov movsl cwtl xor (bad) sbb fsubr mov xor mov and xchg loopne,pt leavew sarb in and pop iret test cltd cld (bad) mov lock mov or insb add mov loopne pop (bad) cli inc pop inc insb aas push mov sub (bad) pusha adc xlat out xor jo push mov data16 clc jp pushf pop fisubl cmp pop jae jnp leave in shrl inc push sub push inc cmp ja xchg pushf or dec adc and push add add add mov mov lds and (bad) mov adc inc ja subl pop lahf jns sub pop mov mov sub push leave push xor out xchg jnp jecxz dec jge pop inc add xchg jle mov call subl push fimul push (bad) mov popf repz lods cs and adc nop jecxz pop in (bad) sbb not js addb xchg sbb gs ficoml mov imul cmp push mov mov repnz testb stos bound jp js je inc mov fdivr mov pop cwtl xchg mov push adc add mov cmp popf jl aad inc push push push cwtl pop sbb ret push sub test cmp fcmovnb (bad) notb pop shrb sahf daa fdivrp add mov test (bad) dec mov mov mov xchg and push add jg sub into fcmove pop push mov dec not pop fbstp mov (bad) fwait addr16 lcall or mov add fcomip sets sub sahf cmpsl test pop out sbb aam pop movsb (bad) push test fisubl xor jb inc fdivrs int3 (bad) fcoms and in dec sub cltd outsb mov in fxch cmpsb xor dec lds ja in dec add aaa xchg inc jecxz fiaddl scas mov cld pop mov jge jne movsl and data16 lret leave stos sub xlat sub bound cmp add adc repnz pop cmp or xlat jp mov jmp stos dec jmp jne lock sar shlb popf incb add pop adc add subl icebp icebp aad lock orl fwait test (bad) mov adc icebp dec notb pop push jmp cmp pop pop push and lods leave (bad) loop sbb hlt dec int cltd addr16 js cwtl sti lcall fisubl (bad) jne into in hlt cmp mov inc xchg inc mov dec cli jg lahf add fs imul pop aam (bad) cmp fnstenv pop jl add mov test inc fcmovnbe imul in xchg inc sub test loope sub sub add jge push neg inc jl insb js ljmp mov mov adcl lcall mov mov mov cmpsb test divb add mov out mov lods mov add iret mov jb test push jg int jl jle pop nop les ret sub int int add in dec sub addb pop mov inc sub sub push or fcompl adc cmp xor push sti jg mov jge (bad) mov inc dec cmc imul push push pop mov stos push push sbb xor iret or pop aas or cmpsb or push mov or int sti mov dec cmp mov insb and in jne cltd gs sub frstor mov mov and sub push lcall imul inc xor shlb jb fistpl xchg dec add add icebp xchg push xor (bad) in (bad) lock stos push inc sub add (bad) mov adc pop mov jne stos pop sub fnop dec jl ret mov sbb cmpsb in dec rcll sbb push (bad) lcall xchg out rcll iret mov sub xchg jmp rcrl jl daa fistl lea xor jo loope and outsl rcrb mov das or or ljmp stos pop ljmp cmpsb mov int js (bad) out dec mov ret cli jne fs lea fdivrs rol sbb sub xlat fnop mov insl mov dec mov pop sbb jns pop mov int3 pop cmp jmp fs cmp add xor lods cmpsb push aad mov sbb add jmp jbe push sti gs push ljmp push daa scas out xor outsl nop daa iret xchg mov shr mov lock aas jmp insb cmp push cld pop insl shrl add nop push xchg mov (bad) repz mulb mov pop pop push rorl in je inc mov fdivr xor js insb mov mov push mov lea or shll shll inc in fildl pop daa je iret aad push dec pusha or in cmpsl push dec movsb addb ss jle sbb lods pop xor lods aad ljmp arpl (bad) das or sub fsubrs inc pop popf stos es lahf sbb jmp in js sub popl cmpsb cmpsb popf cmp pop dec sbb cwtl xor popf ret fs push mov std xchg (bad) adc je enter movsl popa xor or adc cld cli (bad) aam out pop add dec ja ret adc lea or inc pop cmp out xchg adc in lods xchg shrb mov ror inc ret cmp pusha fldcw test push pop push sahf push call inc les inc mov cmp out (bad) add jae fstpl ret and stc cmp je push int ret mov neg cmp out int3 jp sub push xor push push mov fildll push fdivrl fcoml dec or push test jo pop stc inc cmp scas lock test cmp adc push lret add push adc or subl jge inc test pop jbe test dec lea cmp and scas int3 movl pop imul push pusha loop jmp lcall (bad) mov pop sbb ljmp fimul dec sarl mov cmpl out cmp inc loop je mov pop dec out dec dec sub loope mov and nop repz ds mov xchg imul jl mov pop xchg sahf push daa inc mov inc out and rolb cmp repnz mov (bad) js or (bad) mov push fiaddl fwait dec pop ret test and pop mov xchg movsl ja lret outsl mov ds xor scas shll or add out pop fsubs xchg cmp mov scas xchg es enter scas xchg and adc cli out mov leave sbb pop jb push cmc xchg or pusha jno cmp cli iret pop or push insl jbe aaa mov fmul hlt inc es test cmp jb cli sub sbb mov insb cld or xor push outsb enter sub cmp stc in (bad) repz loop inc push dec and xor add cmpsb sti xor mov mov pop push insl jb sbb jns cmp cwtl inc lret cltd xchg (bad) or repnz mov sbb push mov (bad) mov pop shrb push inc out or das shrl or enter stos or mov test dec xchg fcomps push sub mov clc aaa mov (bad) notl cmpsl mov sub and adc lock in cmc mov inc (bad) ss lods (bad) cmc mov shrl xorl and mov loopne adc fcmovne sub dec in sbb pop jp dec (bad) ss (bad) arpl fbstp sbb jmp push or mov insb test rclb cmpsb roll les inc ficompl push jl js push test shl push mov insl jne jno dec roll fldcw mov xchg push pop mov xchg mov mov fidiv pop arpl push adc or inc mov leave push and sti lods pop icebp inc xchg push test pop mov (bad) or test sahf inc and xor jmp in mov rol inc push (bad) int cltd and push mov xor arpl mov loopne dec or in sahf cmpsb or mov data16 dec and push push xor lock in adc jns xor dec jge mov cmp inc cmc popf int jns pop cmp sbb mov int inc xor sar lods ljmp repz popw pop test out mov sbb pop xchg dec push clc jno out fimull push into cmc pushf cs mov lods sbb stc out and (bad) fdivrs push cmp sub nop and add xor dec sub pop ficomp sbb push mov (bad) fsubl jl arpl popa out popf jo mov adc pop push sbb lahf clc (bad) int3 in lahf dec aas jns mov adc (bad) jno adc insl movsl push bnd mov push mov add or aad pop scas sbb inc int jg pop into xor movsl jnp xchg add fcmove dec in mov mov xor adc dec mov jae fs inc jo pop pop sub mov xor jg pop pop cmp adc bound aaa pop push je mov xchg ret push adc mov push push dec mov mov xchg jp popf mov inc in xchg inc jno mov pop aas xor leave (bad) xor orl adc cmc pop inc cmp dec shll ljmp sbb pop addr16 pop addr16 out mov add xor sahf sub add movsl lods in lret xlat sahf dec inc xchg mov or js or cmpb adc mov jmp enter xchg inc mov xchg jle pop adc adc imul sub icebp clc mov repnz mov xchg mov ss adc push jge dec sub insl lahf or or arpl mov fist std sbb push mov hlt xor sub fmuls sub jmp jo shll adc push lahf lea int ret (bad) adc je gs ss sub cmp out aam js push dec pop sbb cmpsb cmp and (bad) lret push and imul xor jb loop cmpsb jg pusha dec pop lds xor es fisttp ljmp mov sarl xchg lods mov jp push enter xchg add sub jnp callw rorb pushw and sub nop cmp mov jge xor ficom inc insb mov dec sub lret mov mov xchg pop lret inc xchg cmp test (bad) mov jbe fcoms inc jp inc in dec push sub lret mov loopne divl xchg xor dec jg mov xchg or or arpl fyl2x sbb inc insl push mov dec js sub mov jae daa add dec or ss popf mov shl dec cli sub jmp adc xor shl inc lods lods lret loope rolb cmp ret add movsl mov lods and out xchg leave leave jge push fidivl lods sub jo jge push dec test mov out cmp gs mov lcall call loop inc imul mov dec ljmp sti daa push inc icebp sub xor outsl dec mov jae loop sbb jns or mov lea (bad) out jg mov inc nop xor js fisubrl mov adc mov mov or dec sahf out lods push xchg ret pusha outsl fs outsb xchg pop clc dec in pop cmpsl sub lcall lods sahf addl pusha scas daa pop xor push push pop pushw adc addr16 mov jmp fcoml xchg mov and in stos insl and pusha jmp push sub loopne (bad) nop lds negl lahf imul popa testl pop mov aad das movsl xchg orl daa cmp push es sub dec mov cmp or and notl or mov lcall popa inc movsl leave or cwtl test push nop outsb lds dec outsl pop rcrb sub xor or jne cmp hlt jns lcall push jnp mov push bnd out and shll mov jmp int3 sbb mov (bad) loopne push mov mov data16 or dec add mov or bound jge mov mov cmp pushl cmpsl xor enter mov loope lock ret pop pop test fnsave xchg cld inc xchg mov dec lahf pop push jl cmp pushf inc stc or test iret mov xchg pop stos lcall pop jmp int3 push cwtl in sbb cmova inc push mov aad mov or (bad) loopne (bad) xorl xor in (bad) pusha mov sbb jno mov imul and xor out out test jns movsl jp pop push and imul dec adc add push outsl imulb in xlat mov in lods pusha cmp cli jl dec dec add ljmp lcall (bad) jns adc mov mov mov pop sahf loope add aad push jb and in ja pshufw sti xor and push pminsw pop cmp sarl jb mov inc icebp mov mov scas and inc adc lret jp push stos nop mov outsb xchg loop and push sub sbb imul pop mov leave es es lods dec scas das jo mov mov rolb sub lock push arpl inc rorl xchg adc mov lea push mov (bad) inc mov cmp movsb push push add loope call cld add insb push jge cmp push jp ds sbb xor divb addr16 mov nop mov mov and mov mov mov les dec xor test es rcl mov fdivrl mov xor push pop jbe xchg xor push push call or sahf clc and xchg push dec in int3 incl dec lock add mov (bad) jne jbe pop jns mov dec in lods cmp mov outsb push jbe das cmpsl inc mov shr jns mov fisttpll jnp call into fnstsw loope fadds lea das movsl rcr pushf mov faddl or mov imul pushf mov test sub mov mov cs fwait lock jo or push ds js pop xor mov xchg sub mov je xor lret call es je mov clc lret and xchg pop pop inc ds push dec push inc nop frstor popa cmpl sbb xchg fimul movsl nop loopne insl sub dec adc fcompl mov mov sbb adc jne leave add jne mov sbb mov xchg pop jmp or enter xchg iret hlt xor push mov sbb or aam jmp sbb pop ficomp imul into mov pop sub ficomp or cld pop jg inc jmp fcmove lea (bad) aaa int3 cwtl fbstp cmp f2xm1 dec sbb inc mov inc js adc test mov jmp loopne arpl mov xor pop pop (bad) insb ja jmp mov cmp mov jle aaa aaa movsb aas xchg jg movsl xchg inc int3 push out adc cmp mov push enter push pop (bad) mov outsb pop xor add inc je mov xor push lret or push push fnsave inc aam lret mov ss stos dec mov push pop jmp stc sub inc hlt nop (bad) out sbb cmp or dec inc push dec or outsb and loope sti ss cmpsl push sub push jle popa jl jecxz fwait ljmp adc jmp (bad) (bad) data16 fdivrl lds mov inc sbb adc or mov mov jp sub mov cmp scas mov shrb sub aam out aaa add pop sbb and add imul les in add mov mov xchg push cwtl push addr16 or popf pop xchg add or push aas loopne lahf push cmc ss outsl cld adc aaa fldcw ja andb xorl lcall dec mov xor repnz pushf mov xlat addr16 out repz lcall sub push in repnz lock xor loope je imul stc lock leave sub jns pusha into xchg xchg pop add stos push xor cmp shrb loop sub jl sub xchg out enter jbe sub arpl test mov dec xor cmp outsb fwait repnz adc xchg popf je icebp cmp ret icebp gs ljmp aaa jno imul push std sub or push iret push mov lea pop jge dec pop jle cmpsb lcall or nop (bad) scas add xchg (bad) xor adcl inc outsl pop sbb push rorb (bad) fildll (bad) bnd or fucomip mov or rorl mov add outsb jae add mov (bad) mov push loope pop push fistl pusha xchg js cmc mov adc sbb xor rclb (bad) cmc cmp bound mov jnp inc mov push (bad) (bad) cmp in or iret hlt repz xor sbb xchg mov push adc fwait idivl push mov and ja push mov pop cld xor ficom (bad) lds stc mov and fwait out push movsb dec or negb mov inc mov dec lcall mov rorb insb xchg outsb jne pop mov clc test nop adc jo pusha sub (bad) pop jg sub pushf jle pusha sti stos dec fdivs pop and or sar adc (bad) insb movsl xlat in jle mov (bad) push mov in (bad) adc pop (bad) cmp xchg push cmp daa dec lret cmpsb pushf xchg mov mov mov sub fdiv pop and mov fstpl imul mov mov xor jb mov lea cltd insb dec mov aaa xchg dec dec out adc jmp aam mov and push pop sub imul out inc fnop aad sub jl jae fsubrp aam rorb daa pushf (bad) loope mov lock and adc ret int3 xchg mov inc add mov pushw cmp xchg popf aaa out pop fldl xor out (bad) loop sub movsl ret xchg add push mov sub xchg loope and cld add dec jmp lret or popa xchg push pop int3 xor lock scas andb sbb aas loopne mov ret add pusha push mov adc scas pop cmp jo repz mov scas (bad) mov out mov push sbb cmp mov aas push jbe out out jne cmpsb les fs cmpsl std pop pop inc mov mov imul (bad) int3 and fs fcoms push movsb in je fldl movsb pop dec mov cltd movsb mov aam (bad) addr16 xor push ja bound psubusw imul decl or lods mov lcall (bad) mov xchg repnz dec sar xchg and jbe (bad) mov (bad) popa xchg movsb jo cwtl xor push xchg in xor jmp (bad) setbe xor sub movsl repnz ds dec outsl jae aad fstpt mov push aam fsubr inc lods mov cs inc packuswb scas aad fwait (bad) jp pop lret ret inc nop xorl mov lods out pop or mov xor pop pusha xchg repnz jecxz test int les ret sbb mov inc adc jo gs data16 push xor je inc nop sub pusha dec sbb lods lret outsl xchg cwtl add add addb loopne jp sbb int jne mov aad out add mov fstpt sbb pushf pusha jecxz xor rorb jg mov adc jnp mov cs (bad) sub sbb pop dec push mov imul out pop jmp rcrb les out test mov inc pop cmc std imul mov sbb sbb inc mov inc cltd fwait out scas (bad) lods in mov outsb pop enter mov or xor add icebp (bad) or xor mov dec mov scas sub or js mov stos cmp (bad) loope jb or test add xor lahf mov repz mov stc test sub push fsub pushf (bad) dec (bad) jg xchg fld mov ja gs imul mov sub adc gs dec ljmp jnp dec sbb lods adc mov pop pop call cmp xchg das xor nop dec hlt lret les push loop dec std out ljmp fidiv dec push (bad) aam add gs pop sbb sti inc add xlat hlt jo xor arpl cwtl xor dec pop xchg lds pop sub push xor into xchg iret adc scas mov shrb adc mov push fcmovne adcb pop ja pop push pop ret mov fwait in and lcall pop lret mov dec dec jle ds mov mov dec js xor (bad) nop repnz and cmp adc les (bad) mov adc mov cs lods add mov lahf mov cmp and xor push nop dec jne push test xor sub jo in icebp frstor xchg aaa outsb jmp inc je jb repnz jne (bad) and aaa orb mov mov fsubs mov pushf dec push mov mov sbb arpl popf jne das (bad) (bad) mov gs sbb mov or stos ds insb in lahf dec ljmp adc jnp add jle sub pop mov call loope repz jnp insl loopne out sarb (bad) dec rcl ds movsl inc data16 jmp in fsubrs daa lea stc pop imul jp fs jno add (bad) int3 aam mov or popf or mov mov subb add dec cmp dec jg enter or out jecxz icebp fs mov int3 add scas or aad rcr sbb loop or pop xor test sbb mov sbb daa xor aam mov repz mov fdivrs sti pop dec cmp xor popf jne add iret getsec (bad) lds cli gs inc inc stos add jo jle ret mov mov or stc mov sarl cmp sub push mulb jnp sub dec sar subl mov or inc mov das pop sahf fist cmp cmc adc add les add xor xor pop jle fcompl add ja cmp pop cmp mov ret mov leave mov mov jecxz xlat ds mov push jne jnp mov push cmpsl imul adc adc jnp mov enter pop gs inc frstor push insl sbb jne loop or imul jmp inc push (bad) push in mov pop sub lea shrb dec mov scas mul ja scas lock fimul out clc push cld test (bad) mov stos and stos sti and mov aaa test aad in (bad) push and adc sbb mov scas std pop inc and inc fiadd rcrl out fs xchg scas mov mov movsl xchg or movsb (bad) dec cmpl fstl cmp imul sub push fildl addr16 lret (bad) aaa mov push insl pop or lods jge (bad) xor mov pop sub lahf adcl mov push cmp mov adc lds dec and jle jg test mov outsl mov jl test clc rcr subl adc arpl jle popa pop daa xor dec (bad) ss in (bad) jno loope repz jns in scas mov out jnp jmp sbb pop es sbb mov into push outsb pop mov stos outsl add cmpsb xchg jg repz push daa subl lock mov test mov lahf sbb pop mov mov and xchg nop push jbe fwait scas xchg sbb mov mov xchg movl in sub jp dec lahf and cmc (bad) mov cmpsb (bad) sub mov mov stos fnstsw mov repz jbe mov repz dec bound cmpsb xchg push es sub cld in (bad) fwait xor dec push ljmp mov movsb push adc cmovg in xchg gs les sbb sbb pushf adc inc jae add addr16 pop sub daa adc ja mov jmp pop dec or outsb mov and xchg test (bad) cmp xchg mov sbb idivl lahf je movsl xor scas push ja mov xor sub sahf (bad) mov jae add push sub (bad) test xchg dec shr pop xchg scas scas repz data16 cmp mov pusha add and cwtl fidiv loope jl and int cli rcr lods out outsl inc pop lret mov or test mov ret jb jecxz mov cmpsl inc stos and push jge int add sub mov lock daa jno rorl test leave push pop and push arpl push jne jns adc outsb xor mov pop jb cmp mov int3 pop sbb xchg adc xor nop shrl and push pop sub std stos in jge mov ret shrl in aad ja mov sbb dec ja sar and jge pushf jge (bad) cltd leave fs loopne or scas push aaa mov jo cmpsl daa jmp fiadd add push inc jno aad enter mov fs stos scas and rolb std sbbl inc adc popa mov (bad) enter dec rolb ret xlat repz cmp xchg mov lret loop xlat jbe xor mov (bad) jb (bad) shlb add cmp pop js stos loope scas xchg js xchg popf mov add mov rcrl xor pop les cmp nop add (bad) in lea aaa int3 cmp (bad) out fldt jp cmp push shll loope inc dec arpl jo dec jo enter cmp dec cmp sti and xchg je mov mov xchg xchg out push sbb in enter dec js pop fistpll xor loop cmp movl stc ljmp icebp mov or xor icebp scas push mov mov jb (bad) jae fldl sahf daa out cmc lock (bad) dec jb je sub and mov outsb repz jno orl mov mov (bad) dec rorl xor rcl pop ss pushf incl push sub loop fnstcw sbb pop nop adc mul jae mov fdivl fidivr cwtl addr16 sbb pop jae mov push bound cmp jae repz pushf dec out imul les movsl int test mulb lcall fistpll data16 lcall pop add arpl aaa out push pop and pop mov cmp lods movsl or test push sahf sahf push pop sbb clc push push popa mov subb enter push call xor add mov sbb lods mov or aaa clc mov and pop insl pop cmp ss mov cli sti fdivr cmp jns aam pushf sbb and add test sub fdivrl add ss ss mov sti jle insb int cltd nop xchg bound inc (bad) push and (bad) lds insb dec sub cli cmp (bad) pop jb aam loopne fsubrl jns (bad) and mov pop clc outsb shrb outsl nop bswap rorl pop mov (bad) iret and sti and inc dec xchg fadd xor jle incl dec jmp adc loopne pop adc loopne jae outsb in movlps aam pop xchg fidivl inc or sbb add sub cli and mov add pop inc mov jmp sub popf aas idivb stc (bad) ja sub je lcall push xor xor cmp (bad) dec mov inc push ljmp pop scas roll dec stos js or add test add cli pop fs (bad) fidivrl xor cmc and jl add pop lcall ds jae or call (bad) stc or fmul and sbb cltd fwait test or call dec jmp cmpsb ret mov test mov push fbld or push mov inc mov xor arpl cmp sarb lods mov add mov cmp in call pop dec push js loop daa js push pushf xor pop lods pop imul addl (bad) adc cltd dec mov cmp mov or push push push dec iret (bad) in faddl mov add lods ja cmp sbbl mov jnp sub loope push aad in (bad) push sbb mov mov inc fcoms es jl adc mov sub xor scas int fsts cmp in jmp js add xchg cli pop in ja outsl xchg lret cltd je jns add js and dec sub fisub mov (bad) rcrl clc das inc fsubs xchg stos cmc out jmp aad xor (bad) cli fs sub and stc clc pop sahf (bad) dec xor lret jb push bswap jae hlt lods aad js push call xor fdivrl loop or mov mov pop (bad) ja or das xchg pop stc sahf pusha aaa cmp pop fidivr rclb cmp dec mov adc and lret std sub ret and dec xchg sbb xchg add mov mov cmc sub scas xor cmp sub adc dec push dec adc js mov pop push repnz add mov jp cltd and push mov jnp mov mov pop arpl andl xchg jae xor int push pop test shll cmc negb test stc rorl (bad) mov push xchg in mov push arpl mov pop sbb add inc jecxz arpl add addr16 ret adc cmp cmp dec add in sbb xor jmpw sahf jns stos rorl fs sub mov cwtl cmpsb (bad) imul rolb call cs and lock movsb (bad) and cmp jns stc fdivrl inc nop add xor mov les fwait pushf jo push cwtl rolb inc stos outsl outsb adc mov mov mov in xor fs mov pop push xor cmpsb popf ficoml jno add mov mov in fsubrs pop dec insl test in push mov xchg mov mov bound xchg js sbb add loope jge xor pop or repz scas cli movsl out push push fbstp push imul dec push add fcmovb pop push int3 push inc lret xchg mov jo test out push push in pop movsb xor cmp pusha push and outsb les mov push cltd leave (bad) fisubrl or pushf adc adc lock mov sub or add jmp outsb js adc out mov lock outsl mov fmuls adc dec push sbb aaa fsubrl inc pop (bad) mov fmull pop jno jp fnstenv and mov (bad) cmc cmp ficompl inc push mov xchg pop pop xchg repz xchg (bad) into leave xor hlt cltd dec and pop stos (bad) cs (bad) mov (bad) jb mov aaa sbb sub sbb push sub movsb rclb ficom and in nop adc mov arpl test insb cmp adc movsb add movsb scas jg mov cmpsb (bad) pop (bad) jae icebp xchg push push sub add (bad) fldpi or mov cmp pop push jp fidivl sub (bad) push imul fstpl leave cwtl sbb push pop cmp enter pop scas cmp lods pop out push into out (bad) repz push out js out mov adc sbb sub inc dec aas popf dec scas fsts stc pop xchg inc (bad) xor jnp mov xor call cs mov loopne lea cmp les xor insl xchg int pop mov push inc sbb mov dec xor daa dec mov push xor insb iret mov pop jmp lods in jmp rcr adc sar stc pop cmp xor mov int and lea sahf mov sbb pop int mov mov and clc dec dec insl xchg or ror fs int shrb (bad) loope sbb mov imul sbb mov cmp jnp outsb (bad) aaa inc loopne test enter push (bad) adc push jge pop mov jns mov (bad) mov out mov getsec jge test rcll gs gs add mov (bad) (bad) lret loop push push ret jge and push mov repnz xor mov dec jmp imul enterw mov inc cmc xchg pop and and call mov push push aad push ret dec sub xor aad addr16 hlt sub (bad) xchg stc popa pusha in movsl xchg das sub push xor inc loopne aam (bad) sbb dec cli rcrl cmpsb inc stos dec aaa inc insl mov jg fld1 cmp xchg mov sub or les xchg gs mov dec fdivl inc mov test ret pop bound test jle je in add xchg (bad) cs fistpl js stc or jmp xchg xchg in jns and push mov into cld mov inc scas repnz jg arpl loopne mov dec sahf push sbb outsl push int mov mov pusha aam mov xor mov push iret push push ficompl xor jmp (bad) int3 sahf aaa inc push popa mov je repz pushf insl aaa jbe xchg inc jle jno inc bound in mov push and pop push cmc scas mov fist mov ss stos xor (bad) fnstcw mov and lahf aad xchg movntq push pop rclb xor inc add or mov xlat gs loope imul push int (bad) dec inc pop sahf cmp out icebp mov xor push jge das in mov pop scas cwtl push cltd cmp push mov call lret in sarl jns and shr movsl loopne push fcoml push adc adc adc adc out adc push (bad) rcl sbb cmp xor or sub sub sub mov call je push push mov jl xlat dec (bad) lcall jnp ss dec pop ficoml aam push int mov mov lods pusha (bad) xor stos das popl es mov ss test mov subb or adc and jl push xor test cwtl dec add mov daa outsb and (bad) ja inc xor mov sbb and je cltd cli jnp scas xor cmc inc pop (bad) lcall pop push inc repnz jo cmp pop sub dec leave aad shll push xor cmp pop sti test mov cld fwait into mov sub outsl std push cmp fcomps addr16 jne sbb adc cmc arpl adc rcll fcoms push sbb cld into mov sbbb lret mov mov xlat cmp cmp cmp fldl icebp pop mov (bad) mov jno cwtl xor or movsb les sub ja icebp mov pop pop dec ljmp fimul xchg pop pusha bound inc cmpsl push and xor aam xchg sarb add jecxz test (bad) out adc mov mov adc int (bad) jp xlat jecxz mov bound popa orl lea xchg dec dec xor andl cmp and ret sub jge xchg lds mov aaa shll sbb test sub push sti and out enter pop stc mov test ret push fwait ljmp cmp push dec pop cmp mov insl push sub lret mull shlb mov lret sub or rcll icebp mov ret mov out sahf dec sub std in lgs scas cli loopne jno xor mov pop out add add or mov rclb mov xchg into mov fwait popf dec rorb pop dec mov (bad) sub les enter fsubr cmp push dec stc arpl mov xchg lahf inc lret pusha dec adcl jmp or add mov sub flds daa xchg ja fbld out iret in push jo ja xchg aam rcll and bound sti fidivr out out inc imul adc xchg xor dec clc push scas ret mov xlat bound jg mov movsb fwait xor fsts out js imul cmp outsb jg ss and add mov (bad) push (bad) xchg inc bound cmp les mov das mov mov fst mov xchg cmpsb stos scas mov loop (bad) dec xchg je cltd js xchg pusha out add add push sbb cltd jbe shll mov push mov dec hlt jle jle sqrtps push dec inc mov jne clc insl pop lret sahf ret pop ja add test mov sbb dec add mov xchg add outsl scas ss rorl mov test (bad) mov pushf mov out lret push mov and sbb dec loopne (bad) dec adc ljmp pop xchg mov jb shll or jo xlat inc nop mov cwtl loop dec xor ret sahf (bad) (bad) pop dec pushf xchg mov push xchg mov dec sub les fistp cmpl enter inc mov fcoms adc fsubrl inc add add stos xchg jns pusha mov lahf xor lods daa and rcr or imul pop sbb fcmove fcomi add and les call ss insb and stc hlt aam outsb adc xor pop or addr16 xchg jbe xchg hlt sub aas inc into aad jns je mov jnp push mov push sarb insl js pop nop pop adc test icebp imul mov fucom mov push call cmp test jmp (bad) (bad) (bad) lcall daa add push scas dec flds mov mov adc (bad) (bad) jbe cmpsb ret loopne jmp lock xchg out cli pop jl push fucom clc aad mov dec mov aas cmpb rclb or cmp xchg mov xchg popa jne movsb lds out aad (bad) jae pop insb mov in pop mov adc fwait sub je cs sbb (bad) loopne jle cmp insb or pop adc int3 mov pop mov sub cmp in enter inc mov cmp mov fdiv call lcall xchg mov cmp rcr mov sarb js repnz imul cmp add outsb mov test fldl adc pop stos sub shrb jno sub ret xor mov movsb cmp dec mov push jg and or sub in cli pop jp (bad) scas sbb fldl mulb sti rcrl or or mov stos hlt add and mov bound push data16 repnz or lret (bad) popf imul push pop mov int pop ljmp loop xchg adcb jnp int3 scas push rcrl cli cmp mov scas test push leave ret hlt (bad) cmpsb test loop (bad) mov inc popa or aas cmp add roll popf pop test adc jno jmp sahf les lahf sbb jnp jb mov mov mov mov lds lods loop and insl (bad) lods cmp mov repnz bnd mov xor adc daa into sbb and sub mov fsubrs scas dec into push and outsl push push xchg sbb int and clc mov jb faddl inc cmp sbb jae jo faddp pushf inc cmc mov pop rcll jp aaa xchg jge add dec into cmp xlat ret pop mov loop xor int3 jnp add (bad) lahf in sub mov test mov mov adc imul mov cmp popa mov xor pushf cmp sbb fsubrl cmp sbb test divb jo and jno mov stos nop popl sub lods adc lahf outsb jb or je scas mov push mov insl or jp arpl mov dec ficom inc pop ja mov fistpll dec sub div mov jo and mov xor jo cmpsb push fnstsw fldenv es dec push mov add outsl mov in cmp loopne push mov adc dec mov inc das in mov and in out xor hlt push cmpsl test jmp mov xlat sub loope sbb insb outsl nop pop or mov jmp adc cld push data16 bound cwtl imul push (bad) fstpl nop adc jne cmc xor jb test jge adc pop push jb and mov xor ds lcall loopne and mov xchg mov and lahf (bad) pusha mov das dec mov and sub jmp divb test push mov cltd inc ret (bad) (bad) xor fildl in dec out outsb bound push test lock push mov dec mov or pop sahf dec mov cmp ja mov mov loope (bad) addr16 jge popa loope into fsts or das and add ja inc pop push ljmp lods mov mov xlat out movsb out icebp or fstpl push push mov stos nop mov and adc jns (bad) jmp mov data16 sub or insl mov insl pop inc and xchg loope mov cmp stos inc cmp pop stos pushf xor push lret mov xor scas xor push mov pop cmp and dec lahf mov pusha (bad) adc (bad) xor mov lret sub (bad) (bad) movsb les cmp push sbb repz sbb jns negl pop mov fwait ret push push cltd mov les inc std inc popa dec mov loope sub clc (bad) gs pushf and mov lret (bad) jg test pop jnp mov (bad) xchg xchg (bad) jle xlat mov xor out stos (bad) fwait pushl inc lret scas cld cli aad test and push ret push data16 inc pop insl mov dec jae sbb test dec shlb cltd leave xchg (bad) insl (bad) xchg add lods ss daa add push pop fdivrs sbb push aaa out ja add and xchg aam (bad) and pop pop xchg (bad) lcall xchg lods call pop mov mov push sub in xchg shll and jbe xchg mov daa dec (bad) sub mov enter lcall lock and inc stc repz in xor imul adc jl lds adc sti std add insb (bad) ss or sub push cmpsb xchg pop (bad) cli adc pop cld cmp pop fwait ja test inc mov mov jg rorb xchg mov mov adc test mov sub add int fnstsw and pop mov or mov inc es imul aad add cmp or mul cmp pop add aas aad jns in pop jae add stc xchg pop adc cmp daa fist repnz cmc mov push stos adc sti insl icebp pop scas xchg sti adc roll ror sub scas sbb enter or cmp rolb add sarb popa test adc repnz in pop popa loopne pusha rorl jns or mov outsl adc movsl xor add or scas jle fidivrl outsb sub jb,pn mov sub and dec mov pop or mov mov add xchg and push adc (bad) fild jnp cmc adc and les stos lods shll fsubrs jmp (bad) sub sbb or xorl sbb (bad) mov jne push push fstpt cmp (bad) fidivrl clc (bad) cmp xor adc xor jmp les sbb repnz (bad) adc jg xchg jb loope bound repz jno das push mov push sti mov loop pop push and and add popa mov and lods (bad) push fstp and fstpl and in test mov test dec adc mov cmpsb mov xchg jecxz dec repz mov push (bad) imul mov mov jmp mov push and sbb push sbb pop mov pop out arpl xor inc add and inc (bad) cmp mov aaa mov std in jbe xor mov test imul movsl sub call or and mov mov adc mov test mov aad int3 xor ret pop outsl ss in cli mov sti (bad) xor test scas loope rolb cmp and cli sub je xchg mov mov jle mov mov test aas sarb dec scas mov sbb xchg pop xchg mov sahf repz sbb fisub sahf insb bound vpsraw and (bad) stc cmpsl mov and xchg out dec fiadd stos mov dec pop loopne fwait popa sbb fs jge test xchg je push insb cmovp dec in mov sbb scas and adc int sub mov aaa (bad) dec mov (bad) ja jmp flds pop sbb sbb pop sbb xor fisubr mov jae sahf jle call pushf xchg xchg xor sub stos inc push stos sar or repnz sti push fcmove rolb push repz pop in jo jbe adc out mov mov adcl mov sub push imul fldz inc aad les leave sub dec jbe xor loopne mov add push jae xor or mov test cmc jge and dec mov mov (bad) xchg and mov enter inc cmp mov in xchg xchg pop and and (bad) repnz outsb out sub pop es sahf sbbl adc stos and mov loope test and cmp mov imul fadd cmc imul sbb push jp cwtl push (bad) pop clc inc daa mov in test lea jno pop aaa cmpsl pop jp (bad) mov popa ret pushf mov jbe jecxz cmpsl out cmp into mov mov inc scas loopne xlat fcoms into addr16 dec pop push out mov outsl adc repnz movsl fdivs and outsl test xchg mov jg pop div dec stc pop movsb xor lcall jmp push add add stos xchg push adc push (bad) movsb xlat mov push (bad) inc ficoml nop xchg scas lock aas push push aad mov jp movsb mov loope lock inc xor les cli ret fdivrl lahf (bad) jle dec shrl xchg cli mov scas jb fistp inc push imul cmp push or xchg movsb adc movsb out dec mov jge mov rcrl xchg and and ret jne fldt pop add lea clc inc mov adc push imul mov call call sub shll das jp addr16 lock (bad) stos enter call mov inc push rorl sbb pop pop (bad) stos jg addr16 rolb cmp data16 push (bad) inc aam (bad) icebp cmp cmpsl adc scas lret and adc insb mov dec mov dec pop int pop stc fadd ficompl xchg push (bad) lock push adc out xchg test sti inc rcll add stos fimull mov orl inc sarl xchg cmp xorl cltd pop pop mov mov push ret lcall in and mov and fnstsw push pop das push mov mov pop pop repz mov hlt and sub lcall rcr cmp mov jmp mov add mov hlt xchg fcomp popa cld mov inc adc xchg sbbl insb mov xchg fsubrl clc hlt sti (bad) stos cmp mov mov ret mov mov jns or sarl out dec push ret xchg (bad) push std stos dec push (bad) divb mov movsl ret pop pop xchg xchg lods adc in sub cmp loopne adc push push push pop cltd (bad) sbb push rorl mov aad ret test jno mov inc mov or xchg repnz imul cmp jbe cmp cs out aam sbb jg mov (bad) ljmp adc test pop and mov add push pop inc (bad) mov cmp iret gs pop enter mov jb add test sarl inc imul jl lcall mov insl jne mov test inc fsubrs lods adc inc call test push push xchg inc gs dec in xlat outsb sti mov js and lods lds sub push add jnp cmp out adc or sti lds bound stos add mov push xchg lock (bad) pop pusha cmp push aad dec dec lock ds dec test ret (bad) xor sub mov test xchg int3 and jle sbbl mov jns and or popa js ret rep or cltd mov pushf sbb scas enter xchg xor add and hlt push xchg or insl mov mov pop mov lods sarl pop paddusw xor mov lcall jmp aaa nop add mov jae in (bad) xor sub ljmp inc cmp sbb pop add movsb scas mov (bad) lock fimull add addr16 enter repnz sbbl es jl gs mov xchg movb sbb div mov xchg or mov (bad) push notl push sub cltd inc sahf mov xchg test data16 add ds fldt mov in mov fisubr sti or in mov pop dec xchg jnp jno movsb jbe dec lods fdiv adc lods test and mov jb xchg cli adc add cmpsl push cmp test imul lds ret sub xor sub and adc imul imul push test sbb inc add xor jb push (bad) into scas push fnstsw jl dec dec int3 fcomps add mov cmc inc lea bnd jno das aaa and outsl test jp jmp push dec loopne pop sbb cmpsl jbe imul mov mov or out lcall addb aaa fistpll jae daa iret ret in iret and outsl mov sbb dec js stos push sub out mov (bad) fsubrl mov shrb and shll pop test or iret mov ss mov icebp ret push adc jmp mov leave inc fcompl pushf xorb add sbb je imul pop adc mov push sahf sub sbb test pop push adc rolb push cmc test push inc (bad) push xlat cmp clts rcll outsb (bad) leave (bad) movsb das les fcmovnu (bad) notb cmpsb sti mov fldz jo ja mov xorl xchg xor movsb jns decl cmp xchg sbb adc jbe arpl pop mov jmp movsl push cmp scas xchg mov mov inc scas cmp data16 out movsb adc inc insl xchg sub push in lock mov (bad) push add xor into adc rorb mov cltd add nop jnp mov add aad jmp das ss jg push dec lods (bad) stos mov (bad) loop add fwait ret xchg orl ss mov or aaa repnz test pop xor jnp dec add (bad) aaa sbb popf inc fidiv test pushf sub push push dec or nop repz inc add or add das add mov lcall mov les cmpsl lret mov jo pusha jg int popa pop scas addr16 mov sahf sub jae int3 cmp inc fildl loope fxch dec aad adc popf or xor in addl sbbb outsl pusha mov inc and add jp sbb jae daa inc (bad) push inc stos and outsl or ret xor xor jo ss inc pop fwait test sbb xchg stos push loopne add (bad) jle arpl test adc movsl outsb dec and mov xchg mov in jge add in stos mov stc mov xorb or sbb or push push lahf dec test daa lods dec mov pop xchg jg iret cwtl jo and lea lcall stos mov push lods or gs mov pop push push inc inc bswap push dec pop jecxz sbb aad orb adc fs fs push (bad) aaa pusha jl test icebp mov fdivr push arpl fiaddl push push adc hlt jp sbb or sub or je js (bad) mov fs push ss les fiadd cwtl or mov jne ret inc dec imul dec es push out mov test or and jns icebp push gs movsb inc subl bswap icebp test mov xchg arpl mov jmp andb xor lcall inc jae lcall push sbb mov pusha mov aad add pop bts jbe sahf cld jbe mov xor in nop fwait roll bound ds pop dec sub xchg xchg xchg leave ss xchg stos bound ds cmp xchg dec scas push fisttpl mov pop mov movsb cmp cmp sub adc dec mov in hlt cs xlat subl enter lcall ds lret (bad) out outsb inc in movsb leavew mov push fdiv (bad) leave dec push add stc (bad) lret jb (bad) or cmpsb add xchg cmpsb cmp mov pop or (bad) jb imul dec push cs andl push stos testl divb iret in ds dec bnd sbb bound jb mov in and popl jno (bad) out push cmp and sahf shrl mov push lods test iret loope and mov jp popa sbb outsb pop (bad) dec add popf aam jo into push jg mov mov test pop sarl scas lds add push arpl loopne sub stos inc cmp lea lock xchg outsl lea jae or xor out or sbb ret lock xor or jne and data16 cmpsl sbb rcrl jl xlat addr16 cmp in adc mov xchg cmp sbb sbb in daa cmp and cmp pushf (bad) and mov inc adc popa in sub lea mov adc in inc (bad) popa add pop inc (bad) mov insl adc fwait xchg das imul sub pop pop adc mov adc shr mov inc (bad) (bad) icebp adc and sub sub cmp shr fldenv test cmc in mov insl fldenv jbe mov in push adc xchg int sahf (bad) (bad) fistl sub std (bad) and popa push jno ss (bad) mov jmp les (bad) lea or push (bad) adc sub sub mov xchg sbb and mov sbb and bound insb pop clc cmp fdivs lods sub add mov push mov daa dec out cmpsb sbb mov fs repz lret mov xor xor bound aad cmpsb daa (bad) loopne fidivr push (bad) mov cltd data16 pop (bad) add cvtps2pi int cmp xor scas mov jmp popa sbb jo loopne mov cmp add repnz push mov mov movsl (bad) sbb jno test test pop scas adc pop push sub fyl2x xor push (bad) lea ret outsb push cli sbb dec mov arpl les out enter adc cmp repz pop lds lret dec push subb mov pop loop addr16 ficoml nop add lret mov inc jno nop ret ja ficoml imul xor xor xchg xor xor rclb in rclb and mov push add add adc pop push jl jmp mov jne sti jnp sub and or ss push push jge lock popf sbb or je push sti jg (bad) fdivl dec leave addr16 daa (bad) push inc jb and mov xchg cvttps2pi loope cmpsb inc mov in fwait jmp lds xchg fsubl je fldl nopl mov cli pop or sub call adc fmuls mov cmp js rcrl out stc loope sub jb and sahf xor mov out dec sbb mulb cmc scas movsb pop cli mov shl cmp mov aaa enter insb adc ret in outsl cmpsl lods lret mov pusha sub mov addl adc pop sbb xchg insl xlat sbb mov sbb imul pop add dec faddp fdivrs out or jae mov mov add adc sarb cld sbb mov (bad) mov jge (bad) sub (bad) mov es scas xchg inc iret jl iret cld jns lahf jne xchg imul clc push repz inc (bad) sbb fucomi inc (bad) xor jmp sbb mov mov sbbb or dec (bad) and lret cmp std es pop inc call dec jb (bad) jae gs push add jecxz (bad) sub dec xor out pusha stos add decl sbb add das adc jo xchg cli pop and dec add inc xchg pop sub jnp addl lcall push xchg push push outsb or mov aad loope xchg add out sub add or add add inc push xor test incl dec rclb test hlt sbb inc js stos enter jbe int3 insl push es jns repnz lret push mov enter adc or fsubrs mov mov mov sarl icebp pop adc jle mov aad loop jp cmp inc ss dec aam aaa dec subl test stos mov fistpll ficoml int3 push mov pop add stc add (bad) call ss or (bad) mov cltd push mov ret xchg insl rclw mov xchg insb mov out mov push mov in test jmp rcll pushl sub push cmp push or adc dec cmp arpl inc aas lds cmp test jnp sbb icebp jecxz,pn mov js dec jecxz stos mov ret inc mov xchg out sub and test movsl push mov std leave dec xorl push std and je aad jg mov adc (bad) fildll bound pmaxub sub int3 stos mov pop cmc popa jb push pusha adc jmp das dec adc fwait js and clc cli lret repnz loope loop sbbb jo cmpsb xor push lret in cmp test xor push mov mov adc sbb clts (bad) ja std fsubp jp xchg (bad) inc lea pop pop jle push mov test test addb inc icebp addr16 hlt adc mov lods mov jmp stos out loop sub psraw ret js add imulb daa xor or cli movsl sbb inc std repz add mov fwait dec rcrl add adc push xor sbb dec jle dec stos fwait pop pcmpeqw push mov (bad) fisubrl push dec (bad) push mov push mov mov repnz dec xchg leave push cmpsl mov sub xchg (bad) jg push cmp mov sub and xor (bad) mov out add idiv fcomp aad mov or pop xlat enter dec fidivr ss fstpt jnp mov test mov mov jb lcall (bad) (bad) arpl xrelease mov loope xchg xor sbb push clc add jmp in (bad) jecxz test enter je xchg insl mov and adc pop sub movsb test sub adc jle xchg (bad) mov (bad) pop lea (bad) add cs jns sub push fmuls pop fsub rolb mov xor xchg mov inc jbe xor inc push ss mov mov pop dec out pop outsb mov adc mov lret jl,pn daa xor cmc cmp pop out inc out fucom jp jg (bad) cmpsl or (bad) (bad) inc stos pop sti fstps jmp cmp (bad) jae das and cmp pop insb into or leave insb and lret mov fbld das push sub pop mov rol mov (bad) rcrb adc mov ret shlb in sbb mov mov pushf fisubr adc xchg pop pop sub cmpsl ja aad es sarb cltd cwtl push rorb xchg in pop (bad) cmp ss and adc cmpsb test gs (bad) xchg lods std xchg add mov mov mov leave jne in push fmul andl (bad) sub xor leave push cmp ffree xchg mov xor inc rorl inc dec repz stos cmp add sbb cmp lcall sarb repz xchg add pop imul (bad) lea cli fwait push mov stc inc and add xchg imul sub inc jle dec icebp ljmp sti sahf jle or pop xchg cwtl and push stc lret push fstpt loop addr16 notb push inc sarl popf mov addr16 popf rolb imulb add mov push jg dec pop ds mov cmp stc test sub and dec pusha aas xchg jle nop movsb sahf imul sub mov repnz test add test or dec jne stos popa and or dec mov cwtl mov pop dec inc inc cld ret inc outsb mov adc push mov ret sbb xor xor je jb fs push addr16 xchg repnz mov push mov aas in iret jl sub sbb mov push sahf (bad) notl ret push push adc fadd inc js test pop enter adc jb push inc sub (bad) or jge enter das lea jmp (bad) mov loopne push test adc iret pop fwait push fs outsl stc or mull inc iret (bad) ficoml rcrb pusha jmp push scas push mov sti gs sti popa pusha test or mov arpl inc stos sbb push or add (bad) jae ds mov dec mov (bad) je inc imul mov lahf mov jg loopne jnp mov mov in add xchg push push xor aam shl sti pop pop andl sub pop jmp aad nop lds in cmpsl lahf cmpsl sbb cmp push mov sbbb rorb push xchg push dec subl dec dec sbb sbb jmp xchg push imul push sbb jge out data16 mov sub jp shl push xor xchg rolb xchg xchg aas addr16 outsb or fwait (bad) xor push or rcrl (bad) xlat sub clc cmp pop dec pushf cmp push xor je rolb into push mull sub shll call adc push and and (bad) adc push sbb fisttp sbb xchg push sub lods lret xor dec adc jmp jmp inc push (bad) cmp test cmpsb shrl pop jge mov aam mov sti mov je and jae xchg aad add and xchg (bad) aad jno sub lds sbb pop jbe mov imul sbb inc enter jno push xchg mov jp repnz and hlt cld mov add xchg addr16 xchg fstl mov and cmp sub push stos cwtl jle jb mov push push mov icebp inc mov mov arpl sarb lea imul inc sarb orb and pop sub clc cmp dec inc (bad) ficoml out test ljmp inc (bad) xor mov mov lds ret std dec add mov out or cltd mov and cltd popf inc div cli mov dec jne cld mov xchg mov out stos jge pop pop mov mov inc ret xor inc sub push push dec test (bad) int add popf cmp and js jmp xchg call scas inc std loope repnz and xlat and mov lds jecxz xchg mov dec inc sbb mov out loop ret and out mov orl pusha sti aad mov (bad) hlt addr16 and gs jp dec fsub aaa xchg pop jnp sub repz adc pop inc aas push xor inc lret mov and dec aam pop adc (bad) and cmp or lock lret pop pop inc pop lock aam xchg mov push loope icebp jnp jns into stos pop mov push seta insb incl xchg imul dec mov popf xchg jp loope shl out cmpsb inc addr16 push mov fwait adc push fcoms add adc ror and (bad) push cwtl push mov lds repnz adc in add (bad) jno xchg insl adc mov fldenv lea (bad) add inc sub mov lods bswap divb (bad) xchg test pop inc push ja cli mov aam inc or mov fdiv push ljmp out (bad) outsl test mov (bad) xor clc rcll push fcompl (bad) sub jns lret out es xchg icebp xor cs push cmp lock lret fdivl dec dec cld inc sti xorb imul push push insl ja adc or dec xor in dec aad rclw add push pop cli aaa sti or push fmull fcomip push push lock mov shrl and icebp adc imul lods or mov add loop sub mov addr16 lods rolb sbb mov xor mov cli pusha push mov inc mov pop mov adc add jo out mov cmp and rcl push cmpsb sub cmc mov dec dec push arpl lds lret push mov mov mov out fdivrl mov jne mov push ss scas cmp stos fisttpll lahf into and mov and pop (bad) mov and pop in aam enter lods clc add out arpl adc fs xchg clc adc enter or into pop xchg xchg xchg sub cmp lods adcl mov dec mov jo in out mov push mov cmp or (bad) jle jae enter xchg push inc inc pop lods cmc inc das jle arpl incl xchg sub cmp ljmp sbb xchg mov out or popl daa xchg push push and mov lods fsub (bad) cmp or lods and xchg nop cmp in pop xor dec inc fdivl and mov imul jge xchg aaa (bad) jo xchg mov jnp inc arpl lock fiadd lcall sbb andl xchg xor or mov xor or insl ret repz and in xor pslld cmp pusha sahf xor sbb sbb adc jnp xchg inc incb adc sbb pop pop sarl mov mov xchg cli lahf test aam (bad) inc lahf mov loopne cltd daa sub out jl repnz js jnp xor jle add in jle stos int les (bad) icebp and jnp fs jmp insb icebp or (bad) or xor leave pushf jbe dec inc xchg (bad) ja mov aas push sbb insb mov push mov aaa lahf xchg repz adc pusha arpl cmc xchg scas mov pop mov xor push and sbb pop jbe out fdivr or inc lret popa (bad) js pop pop ds out jmp movsb inc sub out nop iret shrb (bad) in negb bound (bad) clc test mov pop xchg cmpsl cltd xchg in roll or lods data16 aaa in pop and mov jmp stos inc sbb icebp jno rorb (bad) jo or cmpps pusha (bad) aam inc loopne xchg sti rclb xchg dec into and ret pop push dec clc push pop xchg icebp lret adc movsl aas scas mov mov mov hlt fadds sub sub repz in or pushw nop popa push push jne cmp mov lods push sub subl push mov and ret or jne out rcr rcrb imul sbb pop inc sahf pop sub les loope fbstp mov cmc sbb push add (bad) mov add (bad) in fs dec xchg arpl test repnz push pop xor pop xchg jp add (bad) (bad) sbb mov movsb lcall and add sti outsb push xchg adc outsb imul fwait stos lret inc lods lods xchg xchg out fisubr out aaa outsb add inc inc dec outsb jno test test mov test mov inc (bad) leave cmp mov pusha xchg adc aam lods sarl add shl enter mov stos movsl and into das xchg and and or hlt fcoml (bad) xchg mov scas mov push adc mov ret inc mov or je insb (bad) in insl (bad) pop dec push cmc cmp leave test dec (bad) roll enter lock mov xchg inc and cmp jmp mov ret lds cmc loope nop or in mov pushf leave jae (bad) es icebp pop mov pop pop ret test cmc aad adc jae pushf notb mov sbb cmp inc adc lahf jge lret and push rcr mov push add dec inc add and sub inc push cld mov divb pushf add mov pop push idivl mov inc lea fsubs (bad) test mov fs enter and dec add fsubrp ret js jnp cmpsb sbb imul call add sub fs inc xchg sub insl stos pop repz pop aad sub les das scas jp xchg lret xchg sti movsb mov push or inc ret mov insl imul sub mov adc mov popa inc cmp sub xor xchg cmp iret jbe mov adc sbb dec addr16 cs mov cmp jmp sub test push add sub sub test out repnz dec jg inc pop inc negb and sbb push sbb and xor dec fmull sahf int3 ret sahf ds mov (bad) mov xor fnop shll arpl xchg inc fisttpl pop icebp mov pusha pop mov pushf popa mov dec pop adc outsl popa imul leave jns outsl sub aad pop or stos ja add push mov jne pusha lock in mov aas scas dec movsb inc lods int3 inc movsb adc fadd hlt mov inc (bad) mov or cmp push (bad) rcrl jbe adc add aas out cltd das xchg mov sub fmul int3 xchg ficomp cmp (bad) mov mov mov sub (bad) ret push dec (bad) movlps (bad) xchg ljmp cmp jge adc mov icebp aas call mov xchg jmp rclb dec and lods cs iret gs jmp sbb test in jo sub sbb cwtl movl jns test cmpsb sarl les cmp repnz (bad) adc test cmc or lret jmp jg cwtl sahf and cwtl sub and insb sub jl sub in cmp movsl inc jns pop sbb aam imul xor shlb jmp dec shrl jl (bad) jno sti or decb push (bad) push pusha mov push xor adc das out sub bsf movsb pop or mov xchg cmp lods (bad) sub iret xchg push push mov pop in adc and xor xchg jns xchg imul int3 jmp out push pop cld ja mov in fnstsw lods fnstsw add mov sahf jg mov sbb jae sub or pop fnop push cmpsl push movsb (bad) ds push je mov fistpll icebp jb xor test movl jae and (bad) pusha std add mov sbb xor loope scas mov xor jbe xchg mov mov je mov add and mov xor cmp daa sahf lock mov push dec jns js xchg fcmovbe int sub and inc fiaddl sbb jo loope ds pop scas cmp xor pop mov jg push jle mov stos sbb stos mov cmp bound ret cmp xchg jge mov cltd shrl xor xchg fsubr lods insb add out leave pushf std adc (bad) aam jl out repz movb jle inc push fildll stos js lock inc sarl xorb sbb insb sub cs mov mov (bad) leave push sub stc xor jle mov fidivr add jg cli lcall jo jb sbb pop inc push popf hlt lods pushl sub rcrl stc push call mov jnp adc fisubr xchg add les mov dec ret (bad) loopne das testl and pop inc add ret mov push scas addr16 jo lds mov lds xchg scas or push mov dec and push in out test mov sti and jmp mov cmc incl pop mov mov movsb popf and push sbb xchg fdivrs xchg je fistp rcl aaa std push or lcall jnp lds jae pop mov (bad) cmp cwtl inc sti mov lods sub out cmp cmp cmp cmpsb dec jne adc aam daa mov (bad) xchg cmpsb mov scas insl insb or ret mov xor insb pop ljmp imul fcoms mov loope push push pop ret lock cmp lret push rcrl lahf imul nop mov in push fwait notl mov dec inc test mov negb fildll (bad) mov test fldt fbstp mov (bad) sbb movsl xor sbb mov push int3 aas push jnp jp cli (bad) ljmp (bad) pop inc adc out pop push push push aam xchg or add (bad) fnstsw jne (bad) mov mov sbb push incl dec sbb mov inc jp int3 dec test int3 jge jb sub in sub sbb js (bad) clc and fs adc fwait mov adc xor push test pop dec arpl mov add mov lcall xor (bad) jbe int shr jo mov aam (bad) sahf cmp insl sbb dec insb movsl cwtl xchg mov push mov int3 insb rcrl xor sub lcall leave push xchg sahf pop jp (bad) pop jg shl js add cltd mov rolb lcall or stos and jno outsl lea int3 dec mov jns dec xor fistl xchg push lea adc push mov leave and jmp iret adc movsb push mov jp push push (bad) sbb clc andb test lea mov out jb out (bad) pop les addl into rcrb cs jne xor stos test insl add divb fdivl pop and jle arpl aad (bad) mov mov push iret cld jecxz sub imul xor dec das xchg (bad) scas loope jecxz and int3 adc aam mov (bad) jae (bad) and bound int3 cltd pop movsl or cmpsl push repnz add push or inc xchg xor aad push mov mov mov jb decb sub cld dec ficompl pop inc mov push rclb sbb aaa pop adcl sbb insb sbb xor sti xor dec icebp mov jne cmp push xchg lcall daa xor xor mov inc jmp leave aam add jns scas aam jecxz cmp mov data16 push pop out xor xor aaa push pmulhw cmp mov movsb inc mov leave sub fild out fwait daa iret jb ljmp lods jae cs add ljmp pop sub jo inc repz cmp dec bnd outsl dec inc dec or mov cs inc jno dec fmull inc call int3 pop imul rcrb or cmpsb mov in xor cmp enter jl jns adc stos test int mov icebp adc mov mov shr pop sahf dec mov into mov mov test hlt dec lods lea push push test or sbb mov rclb shll pop stc mov mov inc insb and inc xor cmpsl and (bad) or pop outsb jecxz push mov add jl jle (bad) outsb and push sarb adc cmp or dec push (bad) or fdivrp test xor or inc mov mov mov pop add mov test dec fistp mov hlt mov sbb push dec data16 jnp xchg das pop xor mov ljmp xor dec push scas cmc ret jnp test mov dec movsl xchg lock int3 call xchg jp push mov (bad) xor pop sub mov inc in imul jecxz je rcrl cmp outsl push lods mov scas push mov pop jg dec pushf or cmp fstpl pusha int push mov (bad) lret clc (bad) push inc sarl scas lods daa ljmp pusha inc icebp das inc test push or inc push jmp xchg sbb shl addr16 ret call mov idivl sub enter es adc jl jl popf pop (bad) dec cs mov inc fdivrs or imull mov or cmc cmp movsl or adc dec mov xchg adc push push or mov cli ljmp mov in jp outsl cltd mov adc lods push (bad) out mov xchg adc ds clc fxch jno std cmpsb mov and mov rcrl ret cli and repnz lcall inc test mov push stos out ljmp sub pop loope cmp fildll fwait cmc dec fstl inc andl pop push jnp xchg xor xchg ficomp les or pop fnstsw xchg mov fsubrs jno mov xorb or out xor jno aaa cmp mov lods xchg jle in sbb daa daa ret xchg xchg push and nop inc cmp adc pop lock sub les sub dec cmpsl imul int3 adc lcall mov out jecxz dec addr16 lcall add mov sti adc in xchg push cld rcrb popa lret push das arpl xlat pop mov xchg cltd inc leave xchg and and stos xchg (bad) fldt sub inc add imull loop xor ljmp add mov out outsl dec (bad) jae fwait pop xor (bad) cmp or mov frstor rcll pop (bad) cmc dec sarl les lea xor xchg push in mov sub arpl lahf and icebp sbb scas fs jne mov xchg add lock lret (bad) arpl insb lret sub push jb (bad) jnp out inc mov shl sub fistpll dec dec (bad) ljmp lret je int3 arpl jbe mov mov ss pop xchg nop pop and push popa into sbb sbb dec into or hlt out jg addl (bad) leave mov adc xlat cmp jle adcl or sbb std mov and or mov out enter divb sbb jg popf add call leave repnz add add sub cmp inc popf xchg and pop fild fcomps enter and neg mov xor mov xchg gs inc rol outsb std cmp into arpl push mov addr16 pop in ret ds add inc cmovge repnz pop pop add xor je sahf inc leave into enter jns mov push cmp je cmp jl popa mov mov mov ja iret add andb rorb aas movsb dec xor jb sub andl stos push inc aaa mov fistl stc popa dec dec xor sbb pushf iret push pop popf rorl xchg jae lds stc sub adc inc and jmp mov fnsetpm(287 mov cmp decl roll repnz neg bound sbb adcb outsb pop aam pop xchg fidivrl add mov and aas inc xchg fcmovnb in mov push nop cwtl nop sti into xor lea and mov pusha hlt pop mov es jg stos dec push in or out fnstenv and fist leave or inc insl xchg push cmc inc xor mov scas clc sbbb lock dec lods fldl stos (bad) test and (bad) ds sub push cmpsb inc mov jg insb notl in xchg lretw cltd dec (bad) into dec stc jno ss jp inc push test lahf outsb add dec ss sbb jnp fs cmp stos push (bad) pop aas pushf ss scas stos in mov out cmp lcall lea pop xlat inc cmp cmp int sub xchg xor jecxz call arpl in push aaa lods inc dec ror jno and iret insl shlb mov out icebp test inc in hlt push call jnp pop dec mov pop xor adc jg mov ljmp and jge nop divb dec idivb gs sahf mov cmp xor inc push xchg jle inc aaa ja mov fsts jno mov mov daa mov loop insb (bad) pop (bad) cli sti mov es or pop jno jecxz stos das outsl push cmp dec and sub mov mov inc ja (bad) mov or add or cmp std nop iret gs leave jge (bad) or xchg jle mov xchg les std sub and jo and ret mov inc (bad) out adc sbb inc xchg data16 ds push mov xchg pushf fmull addr16 in mov cmp ror xor aas push xchg inc mov cmpsb adc sbb repnz or pop adc mov sahf adc pop pusha dec lock arpl add cmp mov push std fsubl adc das add push aaa aaa sub mov ss fwait mov xor adc js pop sahf dec (bad) mov out movsb xchg xor fdivr mov popf and ja push pop outsl jecxz mov fs mov notl int3 call fs mov les inc movsl rorb test push movsl imul insb out into mov bound dec out mov pop jl lds adc icebp aam jle mov cs push sub mov xor pop sub xchg loopne xchg jl int3 fbstp mov inc andb inc enter out inc xor leave sub mov mov xchg lret loope cld xchg (bad) pop insb xchg mov xchg fisubr imul sbb jnp ja sbb sarb aas mov dec fimul int3 mov mov and mov pusha fmulp sbb cli mov lock in aam mov es clc lea push bound inc jbe lock es rcrl mov jmp or aam inc mov sub sbb out pop xchg addb jb cmp hlt inc popa sbb in movsl jns sub outsb jmp mov mov imul mov cmc xchg push jno dec lret jne jne and fwait mov pop fistp push jl les je adc je scas mov xorl jle mov add outsb (bad) aas imul cmp cmp call jno (bad) insb mov push mov inc push push xor arpl ja in jmp or ret mov (bad) jb cmc stos idivb and sbb pop jno dec popf insb (bad) cmc mov (bad) push imul sub push fchs rclb cmp std shll inc stos lds mov pop xchg pushw xchg cwtl sahf fcomi mov loop ret and stos es in xor mov mov test iret aas mov pop jp (bad) in out out mov inc push push int3 mov mov fild loope dec push mov pop sbb sub or cmp mov lret fsubl icebp gs test xchg dec (bad) jo and arpl and push cmc add jg cmp add sbb adc addr16 pop (bad) ja aad (bad) sbb loopne dec xor in cmpsb aaa or push in pop push lcall cwtl sub test insl or fs mov call and lret jp adc mov inc (bad) seto add movsl mov popf xor fs jnp imull sub dec inc push es mov out dec lahf stc pop (bad) fwait cmp add adc fidivrl aam les or mov sbb cwtl bound (bad) jg test lcall (bad) pop mov js adc cwtl push cltd sbb push popa fadd insb mov pop sbb aaa jp sub dec popf sbb push pop fnstenv lahf mov sub dec sarl lret cmp pusha inc int mov sub and lcall or xchg xorl or xor stc mov sbb jl ja adc or jmp lret inc mov (bad) fwait mov das xchg sub leave mov psllw mov bound pop lahf ds out js adc (bad) xchg sarl ja outsl xchg adc (bad) cmp mov fcomip addr16 pop pop (bad) or iret sub add inc inc outsl sub jg jg pop jo (bad) cmp fist sti jge mov mov push rorb ds loop pop jecxz jmp mov xor inc jge inc cltd ljmp push adc xor inc (bad) into mov inc popa cmp fldl jae pusha or fcomps outsb mov and lock mov inc inc scas pop mov xor pop push (bad) jno add mov cmpsl idivb mov jmp repz test daa pop lcall and sbb test sbb sbb pushf ljmp fisttpll xchg mov and shrl outsb pop enter jmp xlat cmpb cli ret insb leavew test sahf sub sub xor push and jbe arpl xchg mov ljmp jp test bound jmp cmp leave and clc or or mov inc aad add add xchg cmp mov inc lea test pushf cmp mov add out push push mov out cwtl add adc xor or cmp test or pop pop inc xchg xor decl sub sahf sti push imul or imul iret push inc ror sbb pop dec (bad) out lret insl imul add hlt (bad) cltd int mov test push into xchg lods inc ret aam scas add sub das out pop fidivr pushf cmpxchg lret fistl mov xorb sar pusha orb xchg lcall jns xchg mov dec cmp mov fiaddl insl jb stos test xchg inc xorl stc or mov push rcrl add mov scas pop (bad) lcall push fucom push jne push jge push or add aaa fsub jnp mov jns mov stos fcmovb mov mov mov cmp call xor xor xor sbb mov push dec icebp dec in les les xor sbb imul fdivrs les adc push sbb sub adc jecxz in lret fnop push sbb outsl pop in inc fwait inc jmp jae push imul out dec lret adc aas mov fimull adc push jg lods push js xchg cmp adc mov cmpsb add rcrl adc lods mov jae lret push mov cld mov fsubrl dec insl jp imul mov mov rcll mov add or jl insb (bad) subb inc mov xor mov add in dec fnstenv pop xor in dec dec xchg dec jle and ds dec and push (bad) mov aad inc ja xchg aam idiv mov jle test xchg inc sub subl cmp xchg pushf adc inc mov (bad) mov adc pop xchg into push dec roll xor mov mov (bad) out (bad) jno sbb (bad) sahf mov insb mov jge jmp fs test and lcall imul mov or jne call cmp scas fisttp mov xor das addl sub ss jo fadd movsb jo pop test mov (bad) mov lret mov mov xor inc pop adc or mov cli cld negb jge pop xor xor inc out xchg xor pop (bad) sub pop xchg ss fadds push adc dec push sahf out fwait leave push ret mov scas cmp jecxz xchg (bad) lahf pop (bad) pop out push mov pop jno call popf cld pop sahf mov mov repz (bad) mov sub cwtl mov (bad) sub mov xchg iret lock (bad) fsubr mov (bad) mov mov dec jge sub ja cmp fstpt pop imul push js cltd pushl dec es (bad) fldcw adc mov mov or mov sahf push orl sub outsl fstpl adc sub inc mov (bad) cmc cmpsb cmp mov jecxz loope and movsb jle int push imul add pop and je out push mov dec test and int3 lods cmp (bad) push scas adc xor push leave stos pop icebp xor push push dec hlt test stc stos inc js mov shrl frstor or xchg cmc cmp pop call test or dec imul cmp push and in push ljmp into inc mov outsl mov mov loope or jecxz xchg loopne jmp sub movsb mov dec test test mov mov dec and mov out into jecxz inc sbb mov pop mov cmpsb mov xchg push cli jno adc cmp xchg (bad) out add jmp movsb pop jb dec adc (bad) in imul test pusha aaa aam popf ds ss or mov popf inc and aaa adc push cmp ljmp push out mov mov pop or mov movsl ja scas rcl cmpsb jo outsl lahf inc lret dec and loope mov sub cmp ja push movsl fimull scas jbe movb lock sub inc push dec daa loop mov jns leave xchg dec enter inc add cmpsl mov add or jl arpl fld fidivl lret and rcrb pop leave push push fistp outsb pop mov aam ret adc push pusha cwtl pop pop cmp hlt nop in lods out xchg aas vunpckhpd and aas stos push lea inc sti outsl inc scas sub shrb dec add and mov mov int add (bad) cli jmp dec rcl popw cmp xor add lock popa inc inc sbb push jl (bad) scas les add mov (bad) fs iret arpl sahf movsb hlt pop lahf add lret aas jno add pop lea lods jp push sbb and mov sbb add fwait cmpsb mov repz mov sbb cmp pop mov jae mov xor xchg ljmp jae jb (bad) jecxz enter rorl xchg incl faddl imul and (bad) pop mov (bad) cmp mov fcmovbe lea xchg inc mov jns xor leave jnp jb fimul outsl clc dec inc push loop fcom adc jl sub dec xor sub in aas (bad) mov push adc repz jb loopne int3 out jmp test inc call test in push das mov cmp pop pop fstpt push mov bound cmpl lea (bad) out jbe jge ret lret imul pop push loope test hlt inc popa cltd adc mov in xchg lret adc push in popa lock fisttpl cmp into aam mov xor rclb mov sahf into sbb jnp xor mov pop mov dec push loopne sbb pop xchg test cmc insl and movsb mov adc lods fwait mov sarb mov sti mov pop cli repz test add lods xor test mov sbb dec push ds mov popf nop in push mov pusha jmp test pushf mov popf dec lcall and sbb jl mov cmp adc test pop or int3 adc and mov rclb jne clc push pop dec dec inc jae (bad) jecxz mov inc push inc ljmp cs and push pop pop vmwrite lods inc ljmp jns sbb or pop pushfw push aas rol ljmp js and in adc int3 lret (bad) hlt int add out div sbb jae sub in dec (bad) (bad) lahf ffreep jecxz dec push stc mov lds xchg xor adc jns dec and jne jl fmull sbb push rcl out fidivrl mov cmp adc and arpl movsl push ret bound flds jge add cmp jp cmp pop std mov stos stos pusha (bad) (bad) mov jge mov sub xchg mov addr16 cltd shl or xchg stos enter cmp lret loope sbb lcall pusha mov xor pop xor sbb cmc cwtl mov adc push mov pusha lcall ud1 and or jmp jne jmp adc mov push jg pusha xor popw test dec je jnp mov jl aas jecxz rcll dec mov testb dec test mov stc jne mov cmp sbb jbe,pn notl add in or cld xor ror jl lods (bad) xor sbb adc cmpsl mov inc dec int stos imul in rorb pop or test cld cmpsb bound insb jp shll xor hlt lea jp mov (bad) es xchg xor psubsb sub fnstenv mov inc ljmp pop in jg push add push xchg jns int3 outsl out push push jo and loop dec xchg or mov adc mov enter lahf sub xchg mov (bad) mov nop xchg popf adc sub or les aaa xor xchg incl sbb inc dec pop pop add mov lahf xchg add jge add stos mov dec xchg mov add push xchg fidivrl jno xlat pop add inc jle or mov cwtl and ljmp pusha push out pop jns mov testb push adc mov pop cmp lret inc jmp xchg std add mov rorl mov out sbb fstl cmp gs ljmp popf dec popa mov dec imul mov sub shl lahf (bad) lea icebp std loope sub (bad) mov jne sub xchg je xchg and fidivrl pop popf lahf dec cmp sub std inc jo pop (bad) pop fsts mov fnstenv out push scas sti (bad) cmc lds int3 (bad) mov and xchg sbb sbb dec xor add test je arpl pop xchg in fist enter push sbb cmp adc imull sbb mov aas fdivl sbb iret stc adc out rorl addr16 pop push mov jg or ja jns fimull scas xor pop mov imull mov mov ret inc xchg jne mov lock data16 xchg int3 jno mov and sub out daa adc bound push cmp mov in mov and cli or adc andl mov adc adc and cmp jmp jnp xchg loopne ss push pop loop pushl jbe test or test add inc push sub xlat (bad) leave inc or je aas fxtract fs pop add jns popa out fstl jecxz enter add test mov pop or jnp out cmp sbb mov dec pop lods xchg in es adc dec ret mov lea mov jmp loop sub out icebp jbe pop xchg pop mov pushf add mov xlat (bad) jne enter and movsl inc icebp and sbb cs jge aas ret adc adc mov sub jl push jl jns in and xchg push gs jg add movsb add jb mov sbbb hlt xchg rcrb int3 sub fs cwtl sub pop in cmp inc cs pop mov ds movaps jp xor xchg push pop lret (bad) fidiv test xor adc add addr16 adc lret stc mov faddp mov leave call inc daa ss mov aam sub add pop adc xchg cmp mov js mov inc inc pusha cmp jne iret fcompl cwtl xchg jns push icebp in fcmovbe mov in cmp popa mov xchg mov arpl and mov gs test daa dec mov imul mov xchg ret lea ss adc clc adc jg inc sbb mov adc xor test dec jne mov adc adc lret or outsl lods into sub xchg iret sbb cmpsb xchg imulb addr16 das sahf cmp enter arpl sbb jb inc lret cmc push sbb or insl (bad) fwait (bad) gs push push inc and test clc and cmp fs js cmc fsubrs xchg inc sahf xchg adc rcrl js icebp (bad) inc mov xor (bad) xchg movsb inc cmp lea push or pop dec dec das xor (bad) add push sbb adc pop in outsl jbe jmp imul cmpsb cmp mov mov insb adc aam imul les popf in push jle sub je insl fdivrl inc je lret das mov std sti or xor lahf loope repnz or (bad) mov push or dec adc (bad) lods out or sbb fisttpl mov push mov dec int3 cmpsb enter int adc push dec push cltd push adc add cmp fs sub movsl xor movsl das jno pushf pop pop clc out dec enter pop sub or mov pop imul movsb add mov in adc mov sbb cmc dec pop mov mov adc adc jg movsb sub mov pop inc mov push stos jnp ss dec movsb push mov dec mov (bad) mov push shrb add xchg sbb cmpsb rcrb test pop dec insb or cmpsl in dec dec lea dec or ss test or push les pop fwait add sbb mov cmp sbb mov or push pusha sbb nop jmp lds add pusha dec adc sub xlat and adc adc mov jg or cmc sbb out and mov negb shll inc adc jo out push add pop bnd popa stos shr movsb pop or fstpt ret push (bad) adc aaa cmc test mov sbb sub iret mov mov jg jbe pushf mov test lcall loopne lods xchg (bad) jns fdivrl sub test dec cmpsl xchg xor icebp in enter scas aad push cmpsl imul roll adc push dec mov adc imul mov rol out inc cmp push les xchg out loop inc pop enter insb or cmp lret push or lcall push lret dec loope pop mov xorl ret or inc xchg push sub cli ret das xor insl adc adc cmpsl mov and jne fcomps dec sub mov stc inc aas subl mov jne int shrl mov cwtl test dec mov mov dec stos adc mov test data16 popl test int push cli push in mov test cltd ret or jl shr cmp mov or xor add or xchg mov cmp dec hlt mov jns xor mov mov outsb sti daa mov mov push and fs jmp rorl sub rol sub daa mov sbb xchg jecxz sbbl mov adc xchg mov dec pop mov lcall dec push cmpsl mov inc mov pop (bad) js push and fsubl (bad) jns push mov call jge movsl xchg mov sub mov fnop dec mov sbb sti adc jge loopne rorl fist rcr pop (bad) cli mov data16 pop dec add lods lea cmp outsl gs dec sbb push mov enter sbb add lahf mov rolb std push es mov push xchg notl mov divps cmc xchg mov xor ljmp mov adc incb jmp xchg sbb inc shlb scas testl dec aaa xchg add ret pop int mov push insb pop rorb iret xchg cmp xor xor frstor popa or sub pop adc mov mov sbb out or or push sub jbe js gs popa dec xchg scas pop adc hlt dec xchg xor inc ret xlat cltd sub es xchg or sub lret (bad) cwtl mov imul sbb adc test clc shrb sub mov mov jno call mov scas test ds lret cmp fisub jecxz jne js mov ret pushf repz xor add sub add arpl jae xchg notl mov lcall and punpckhwd ja sbb inc mov dec dec pop mov dec lods add xchg sbb stos inc out insl mov repz lods (bad) adc cmp jmp lret iret push jp negl sbbb outsl inc xlat inc mov test add cmp mov mov loope xchg adc sbb jno scas outsl ret inc mov push jp lods aas lcall pop push and scas scas inc mov mov jl repnz fsubs bound movsl push jno jnp jle std xchg dec or lock xor inc inc jmp or xchg and xor popa hlt mov jno mov dec fildll sbb inc (bad) cmpsb (bad) fstl lahf ss add mov push mov mov movsl outsb sub (bad) mov or (bad) int into mov int gs das psrlq test jle loope mov xchg sbb in lcall addl (bad) xor mov add notl nop push testl xchg rclb mov or cs (bad) or jp adc push aaa mov bound dec push push xchg lcall jbe xor int3 push adc ds and stos dec dec das std pusha arpl mov inc aaa fisub aas mov inc push pop xchg adc jno jns pop cmpl pop (bad) sti ja cmpsb and push cltd (bad) clc movsb mov jbe (bad) js xchg pop push out dec jbe ret jge mov push mov add pop push sbb xor xchg cwtl jns sub pushf mov fsts xchg fisubrl imul mov or jae cmp fyl2x (bad) repnz es add inc cmpsb push jne cmp inc nop lods insl cmp xchg adc (bad) and inc mov loopne pop dec ret cmpsl outsb lahf push push dec cmp pop sbb lcall test mov add mov jno sahf addr16 bound add xchg sub insb in js or adc jge and movsb and nop xor jne (bad) aam (bad) std ficom dec jbe (bad) cli int xor dec xchg lods bound ds or push jge ficom or fisubr fldenv orl jp ljmp pop mov popf cmc out inc jbe lea cmpsb or ds inc out push cmc mov push loop xchg cwtl cltd iret or rcll data16 cld in or mov mov cmc repnz add inc cld mov dec jnp outsl (bad) int jg push inc ja fwait xor mov xor xor mov mov pop jle cs and (bad) mov cltd adc jae cli test inc (bad) out int movsl adc rolb pop popa mov add scas mov into mov inc inc adc mov adc orl mov fstps stos xor in loop mov mov daa std cwtl sbb jmp mov movsb movsb xorl mov sub dec and inc inc push cld lcall jle dec inc in test add adc lea xchg popf negb (bad) js mov inc mov xor sub arpl xchg sub arpl push and push (bad) xor xchg sbb cmp ficompl and adc cmc in lock pop cltd movsb xor mov and mov cltd subl test mov sub les sub lret cmp inc arpl insb imul arpl xchg fdivl inc (bad) xchg add dec addr16 jnp ljmp fiadd xchg das enter mov sub loop jo inc scas mov dec outsb jo add into jne push lcall shlb outsl adc jb ja fs xchg sti xor test mov in jmp mov (bad) (bad) mov xor or add in adc pop out jne (bad) mov and aam adc es and fbld out ja sub out iret sahf inc or js insb cmp sbb add rorb mov (bad) cli xor sbb inc fisttp insb into cld pop add int3 cmc add cld adc movsl add daa cmp add ja push xor pop outsb test xchg popa and xchg push xchg sbb mov add xchg clc mov push dec xor fidivrl xchg mov adc xor mov decb inc data16 mov mov dec (bad) jp or cmp cmc push fimull mov out icebp fwait ret (bad) int3 repnz fist adc clc iret (bad) cwtl dec int sbb lcall sar cmp ret out xor int3 push sbb cli and cltd es mov xchg (bad) push insb mov inc fwait sahf cmp cmp lods adc (bad) or xor std sub mov cmp imul inc jbe enter mov mov mov hlt stc or adc dec xor mov pop xchg dec push dec mov js push push stos sbb mov in aam pop inc aaa add scas pusha jg sbb loope pop dec shlb test jae sbb mov aas call jns push lds fcoml inc dec test scas or pop jno mov jnp out mulb xchg jnp inc into mov sub adc lds add mov xlat addr16 or mov sahf sub ja jno iret mov bound fstpt jp mov mov push jmp jl addl adc cmp inc (bad) jp cs sarl movsb jne aaa sbb out popa xchg aam inc mov or push xchg mov (bad) ss sahf xchg jl gs mov fdivp xlat push xlat mov stos mov push arpl fs stos js jge mov (bad) int3 mov push ja sar mov clc pop mov faddl lea add push sub jae shr shll add sti mov test dec repnz (bad) pusha lret sbb push insb cmp and push sub les pusha jg push fcmove xchg push jle sbbl lahf adc les add inc mov jg,pt bound jge sbb mov cmc lahf mov sbb imulb lods jo lret add adc sub (bad) sbb pop inc mov sti cmp jp and jecxz pop lcall into fist mov mov fstpt mov pushf cmp jecxz outsl adc fwait mov jae mov int dec gs push fcomip fisttpll pop mov call mov stc les cmp and mov mov and xchg scas inc lea sbb (bad) cmp mov jg push cli pop and cmp sub leave mov adc std sub addr16 mov test mov lcall lret daa dec pop cmp das adc cmpsl lret int3 test mov in ja cwtl cmp data16 mov movq aad xor popf (bad) push add add stc dec mov (bad) cmp repnz jae mov fisubr jne dec or scas xchg adc cmp subl jg scas mov bnd repz add ror xor add out aas adc and mov jl gs jae cmpb adc adc jge sbb adc (bad) mov inc jecxz inc leave fwait mov fimull cmp jne push hlt ds je inc dec mov xor mov ljmp stc sbb lds sti mov sub cld insb dec out ss lods movsb cld cmp (bad) jecxz push repz xor sbb sbb cld xor dec mov (bad) stc daa jbe adc add bound movsl jbe push adc mov dec in sub test dec (bad) in push bound or hlt and jo cmp pop cwtl insb mov jno xchg test mov sub scas fadds mov mov lret iret mov cltd cmp jecxz xor das sub std dec inc sub loop daa or cmp loope mov test test ds xchg adc and mov lcall test hlt fdivp push cmp mov inc sbb (bad) mov dec repnz mov sbb repz adc jg sbb xor iret rcll pop rcrl jnp lret inc mov sti xor mov lcall jmp add sub cmp test and cmp jo outsb (bad) enter or fyl2xp1 add popa jmp mov cmp add lea sub mov mov test mov aas aas fwait add int3 fsts fcompl sarb fnop fidivr cmp les jnp xchg lea xchg xchg popf cwtl add xchg shrl xchg xor mov push xchg push xchg fbld ret pop xchg lock roll mov icebp dec insb (bad) cmp (bad) negl pop in push lds xor daa pop inc xchg pop sbb ja jge adcb outsl adc jge push repnz outsl (bad) in or pop push movsb sub or mov repz nop dec movl es (bad) ja ss mov je or sbb sub out mov xor std sarb clc jmp xchg mov mov test divl cmp xor mov jge sub pushf stos cmp and call sbb mov mov sub cmp push mov rcll je scas or inc jg adc faddl rorb add (bad) mov pop dec add insl cwtl sub push lret and shll push xchg loope lret pop cwtl leave insl adc mov mov cmp lock imul jnp scas into and dec jnp mov popa sub jae xchg mov push jo pop and sbb mov sbb (bad) mov cmp push mov pop sub adc push sbbb push leave push adc gs in jb dec add ror mov pop daa loope or subb nop lret (bad) repz jecxz mov push rol pusha in sahf out out adc add fistpl add std loopne je shlb cmc lret or ret push sti (bad) dec bnd push mov push cmp mov add jecxz mov addr16 jp iret pop xor decb jl hlt inc mov inc popf pop neg in lret imul inc addr16 adc lret leave sahf shll clc adc das jecxz sub mov inc (bad) imul adc std js push gs or out (bad) dec or cs mov shll add fldl pop push (bad) dec mov dec xlat jo test mov test or pop test shrl inc lret shr mov ficomp and mov fisubrl cmp jno rcrl lea or (bad) push in adc test call mov add or popf addr16 lods push jno push jbe mov rorl mov pop rcr sub ja repnz (bad) hlt push arpl ljmp push addr16 xor cmpsl push xor imul jb xchg scas add repnz push sahf (bad) insb pop loopne and mov pusha out rcll clc push cld adc fbstp xchg cmp insb jnp stos mov ds movsl mov inc mov and cli mov (bad) mov mov fistl in test ret mov stc inc pop (bad) dec sahf shll push inc lods xor sub cmc out jmp fwait push mov push arpl lahf or dec (bad) sti mov inc push test imul xchg push jmp (bad) fldl xchg dec or fcoms cld mov aas js jbe (bad) adc sti sahf push cli loop sbb mov int cwtl adc into loop xchg cmc mov cwtl rclb mov fcompl inc push std popa jp in dec lret jg lock imul fidivrl sbb sti stos mov jo jns xor mov adc test outsl xor xchg imul adc test sub lods push jmp dec cltd aam or mov push lcall adc cltd int3 lret pop cld (bad) mov cmp mov cmp sbb mov inc ret pop int push jno mov mov pusha mov xchg push mov dec pop lds adc decl and or aas xchg lret stos xor aaa cli mov imul fwait dec notl addr16 sbb sbb mov mov imulb and sbb add loopne and mov fistp push or cltd push in cwtl push pop dec js in inc cmp stos sbb loop in lcall ja stos or jne mov push sub jmp scas aad icebp pop lret sti pop aam jmp cmpsb imul hlt fs jp int3 lods xchg iret (bad) add and ret mov xor sahf mov xlat or xchg (bad) fsubrl gs or fs nop fcoms nop fwait pushf loop push (bad) dec aad pop stc pop sbb aam sti fwait or imul pop sbb mov sbb (bad) xor popf push stc and out lea test pop stos mov pusha jg iret pop leave cli cmovle mov mov es (bad) pop jecxz push dec jne pop cmpsl sub cmp sbb and iret mov mov xor lods mov cmp pop or adc sub xchg aad arpl jmp push jp inc add inc aad jo hlt in insb in stos xchg inc loop adc jp loope in jle pop cmc sub jge adc xor js int push pop daa data16 je into fdivs shrb mov inc inc mov ret fdivl inc (bad) std pusha jle mov pop adc mov xchg push fwait jae (bad) pop arpl or daa xchg jb pop (bad) cs inc ret fiaddl iret imul cmpb xchg movsl xchg orl repnz cmp dec xor shrb lret jecxz icebp push sub fs or xchg (bad) cwtl int3 lds push mov rorb sub (bad) cmp mov xchg or scas add aad (bad) adc and loop sub xchg andl jmp jmp clc mov ret ss cli mov sbb xor mov adc sbb cwtl xchg cmp sbb insb clc adc jb dec mov and (bad) xchg dec dec mov xlat pop jb cmp push out jns call cmp adc and mov in fimull mov or in pop jb pushf mov std outsl pushf mov insb and loop sbb cli (bad) mov fdivl addr16 bound push or push mov xchg mov cld data16 or test pop outsb or (bad) enter inc in xchg in push mov adc aam ja cld popf sbb mov or jno sub xorb jp mov or and inc je push or inc jg dec push outsl jp mov mov mov sub repz lret push cmovnp xchg cmovno sbb pop push pushf subl enter into jb inc fsubr ljmp pop rcll cmp inc ret cmp fs dec pop nop pusha out in lds push mov cwtl pop out jno movsl stc loope dec insb cltd mov add jno push pop pushf std (bad) mov sub pop sbb mul mov xor sub push ret dec fdivl push mov repz fildl mov sbb mov imul cwtl mov int3 out mov pop push mov bound inc mov (bad) fbstp push push mov out in mov inc add xchg cmpsb test popf aaa inc fild popa pop arpl lret (bad) leave cmp out ss pushf push adc loopne jnp bound jno pop in in das int dec out sub sbb in addl cs roll add and or das loopne aaa cmp int stos loopne adcb sahf mov lcall sbb jo cmp or adc popfw pusha rolb mov clc xlat je jmp insl or rcrl arpl pop test pop jb push fimull lcall inc mov (bad) mov popf pop push or mov push inc mov jb mov in cltd ret pop inc or mov lret daa xor cmpsl call jmp add int3 xlat jae rcrb push pop popf cs iret hlt fistpll test mov stos mov mov rcl cmp in xchg add stc arpl js mov and mov mov fdivrp cmp dec sbb fwait enter xchg punpcklbw enter shlb sbb fistpll mov push call sbb push sub pushl daa xchg or inc stos dec jmp cmc test jmp sbb lcall add xor ds jg xlat xor jge lds pop or pop inc (bad) out mov sub and es add orl ret imul sub mov mov mov fidivl popf lods sub rcrl dec sarb push dec lock jne add cltd mov mov sti sbb sub in fs nop or fcmovu pop (bad) jbe jecxz hlt xchg outsb jmp push sub inc push inc xchg and or rcll jecxz insl add cmc mov push mov cmpsl adc lds cwtl mov xor push xor scas inc xchg push cwtl push hlt sbb inc pop das pushf imul push fisubl pop lcall imul (bad) lock scas test push push add xchg in push lret mov ds add aam inc nop jne test lret jge add loopne ds mov xchg mov and popa push (bad) sbb scas cmp mov push stos pop mov and sub daa xor leave lret dec mov add jo cmc mov (bad) inc push or adc test stos push cmc mov inc cltd xchg loope roll jnp sbbl mov nop scas ret or loope inc adc mov leave shll fistp cmpb popf les psadbw mov scas dec std call sub mov imul js js pop adc loop iret inc or sarl pop in call mov insb bound ss stos mov mov cmp lret out inc xchg inc fisubl jbe das pop data16 loopne mov pop mov xor and shll mov outsb add stc ret xchg add lods out in stos mov mov outsl and cmp mov ja add lods pop js ljmp adc cltd cmp xor sub cltd xlat scas enter outsb sbb push lret dec sub mov jae dec xor mov in mov dec jp fsts inc ret aas mov sbb jp cmp add lret cmpl dec sbb repnz push cs pop xor mov popf add mov test js add icebp and pop call jecxz xchg sbb sub push loopne cmp dec cltd dec ss mov push (bad) pop cmp jno sbb mov out into mov je push adc cmp je xor ljmp push insb jno fst xchg add and test add jp sti dec inc mov push insl in enter pop adc cmp lret pop mov adc sbb mov cld adc call jg jl jne cmc or (bad) mov daa repz xchg mov test popa jl mov sti bound popa fstl jae xchg xor imul cmp xchg xchg mov mov cli inc add push mov jbe outsl imul (bad) fstpt push ds add enter (bad) cltd or dec sbb test or sub sti idivb lds or loopne ret loopne andl rcll sbb add mov jmp add dec loope scas push dec add and mov lds sub xchg out arpl enter outsl (bad) popa mov add (bad) or or scas pop ljmp leave outsb dec call inc and mov ficom dec sub mov imul bnd aaa mov mov les (bad) jne jge xchg push divb call pop ret push mov js inc sarb or or push lea sub push sbb pusha jl pop nop out out mov xor fidivl leave lods in ret lods les (bad) push mov pop imul addr16 popa dec fbld cmpsl scas push pop xchg or jo dec jecxz xlat fsubrs pop out nop popa (bad) mov pop cmp mov cmpsb mov inc fmull push jge pop sub stos sbb cld mov mov adc jle nop mov shr push push mov imul orl jp xchg inc in aam lods iret push add sbb or xlat ss cmp xchg test or out and dec adc or out cmp pop mov mov sub fbld xor hlt sbb popa mov stos fstps cmpsl roll add inc fwait mov mov imulb inc lods push aaa repz fistpll sbb push mov das inc sub inc and mov sbb dec pushl mov or cli mov insl add rorb xor ret (bad) or mov repz inc add orb pop sti dec or sub sbb test (bad) lret push inc mov fisubrl ja lahf fisttp mov xor or outsl lret add inc (bad) xor xor push or in es pop add mov dec mov (bad) data16 dec movsl sub mov xchg mov xorl add int3 xor fdivrs or xor mov fcmovbe insl daa push xchg sbb mov out pop outsl mov pop and lahf les ret fmull push fistpl mov sub out jae into inc ret sub adc jno xor nop fisubr sub movsb mov or mov or into cmp xchg dec jno cmpsb ss or leave addl xchg jbe push lods or jno stos insl push (bad) cli out sub shrl movsl or push mov dec (bad) mov xorl or lahf sbb lods std fistpll subl (bad) xchg lahf push outsl xchg mov or and pop jecxz add and add pushl adc adc xchg pop mov jl inc in jl xor rcrb jecxz addr16 test imul outsb scas lret aad (bad) inc hlt mov ss (bad) imul sahf mov xchg lcall sub inc outsl daa ret sbb movsbl sbb addr16 jmp mov inc sbb (bad) sbb das push test xchg popa ficomp pop and xchg inc mov (bad) lea jno push nop pop inc insb dec push mov insl jnp bound adc in cli into test jb sub pusha adc mov or arpl in stc (bad) cwtl adc out xchg push dec mov mov jl and jb push jge dec arpl cld lret js loopne in mov cmovl out mov sbb mov push mov imul repz mov repnz test jne vunpcklps sbb (bad) add (bad) push pop mov out movsl xchg jbe xchg push fsubs scas xor or push (bad) ja add pusha xchg iret dec bound push ss cmpsl push xchg jnp xor insb jne lods in sarb sbb nop shl add mov or stos adc cmp nop (bad) fnstsw lcall imul pop sbb push pusha xchg fiaddl rcr stos ret cli lock std jge pop pop add sbb daa sti fdiv fisub ret mov mov pop jle pop jmp stos and loop push int imul xchg pop fwait cmc pop push cmp push popl cmp rcrb clc xchg js in rorl pop bound adc and inc mov pop dec push mov pop imul in add cli aas lret mov aam and iret ss mov test mov stc arpl push (bad) scas mov aad cmp push cmpb xchg insb xor lea adc mov clc adc dec cs stc mov jnp lock call fdiv pop inc ficomp sbb mov or imul ljmp psrlq mov dec mov xchg push xor mov jecxz cmpsb mov leave cmpsb fsubrs jl mov lahf shll cmp (bad) dec enter inc stos cld hlt xchg hlt adc bound (bad) mov xchg pop outsl cmpsl cltd mov fistp xchg adc pusha ss pop int (bad) pop xor out lock sti mov stos clc cmp jge fisubl mov ja fist out daa sbb repz test out (bad) sbb ret (bad) enter clc into dec and fsubp fistl daa fucomi dec mov cmpb xor and cld jle call cmpb push sbb xor popa sahf mov and repz push cmp gs (bad) add mov arpl test (bad) frstor push pop add in ja frstor mov push nop push push jb cmp pop subl mov dec mov mov xchg mov dec movsl mov sub hlt add arpl adc loop mov fdivp (bad) imul xor pop sub mov cmp arpl xchg jle roll aaa fist mov and dec mov and push data16 push push jno std xchg or fisttp idivb rol enter test pop push repz jle (bad) mov sbb and (bad) gs lds xchg loop dec mov faddp insl in pop cmp xchg aad cmp mov stc xchg jne (bad) fnstcw jnp mov jmp mov sti cmp lcall stos mov sti loopne popf or xchg xchg sub mov jg nop daa addr16 lods (bad) in and push inc cmp (bad) popl xchg pop and popa pop loopne sub sbb adc mov dec jecxz bound or jo decb into mov in in ret leave cmp loop shrl pop mov dec loope mov gs mov dec (bad) xor push (bad) xor mov jno mov cmp push push sub aam fnsave outsl lahf inc lsl dec xchg add or cmp pop fcmove ljmp aad loopne fstpt add sub xor sbb cmpsb cmpsl outsl repnz and xchg add scas clc pop pusha xchg mov test fstl xchg inc bound jge mov add mov jmp incl scas inc mov shlb dec aaa pop pusha mov (bad) xchg stos outsb ret sub dec jo (bad) jmp xchg mov sbb add popf adc cltd xchg pushf andb mov popf lahf cmp adc fmul out test int dec addr16 push xchg jmp mov aad imul xchg inc fdivl mov xchg mov dec push mov pop add xchg push or stos push jle mov sbb sub sub stos aas in add sub in pop lods pop aas mov bound dec push mov mov jno int3 push xchg xchg and cmp lock stc push outsl pop jecxz fstpt popf sahf push and cmp xor adc aam or pop jmp mov cwtl (bad) into (bad) jae xchg jae cmpsb dec fcmovnb loopne stos add sti ja shll mov pushf cmp mov cmp ret imul outsb dec dec mov aas pusha out jp rorb cwtl jbe out lods or cmp jo repz inc fwait orl pusha sub cmp iret test mov xchg lea arpl mov icebp dec mov inc ljmp clc (bad) pop je and dec int3 shll hlt mov scas (bad) jp xor push bnd std dec push fcoms dec out inc push sbb (bad) lret or cmp rcll or adc out fistpl std jmp fisttpll fnstsw (bad) and mov fs fdiv xchg out call mov int3 or in popf mov lcall mov jecxz (bad) inc and popf scas arpl add sbb jmp mov sarl mov popf jle out lcall (bad) add adc out sahf inc sub out jne xchg push jbe fnop stos aam in xor cmp cmpsl cmpsl ljmp or (bad) out xor sub cli (bad) (bad) add push inc dec adc or fnstsw push aaa sti xlat pop fsubp pop xor pusha in xchg pusha pop xchg (bad) lret mov pop xchg sbb stc popa outsb rclb aam xor inc ds pushf pop mulps sbb aad jle cmp or cmp insb push and arpl divb sbb inc mov adc inc adc orl pop daa in push mov mov imul xchg inc jne cmc fdivr (bad) mov fwait call mov sub mov dec inc lret adc rclb fs cmp sub nop loop xchg add js mov pop inc or jge ret xchg mov mov int3 push aaa adc cli jb sub push arpl ss in sbb pop jmp imulb mov std lcall xchg lahf or test pusha sub push in sub ljmp lods jb inc cli jne scas pop or stos jl lds push mov xchg pop push aaa xchg outsl or fild aam outsl shrl test enter movsb cli mov lods (bad) out push add xor cmp stos out xchg fadd sbb aad pop push mov pop ljmp out std cmc jle dec lret leave aaa mov inc jns sahf outsb cltd push lcall lret sbb mov push es (bad) ljmp cmp cld inc or and lea cmp ror sub lods mov data16 sbb adc in (bad) sbb ficoml jp mov (bad) negb fwait ljmp dec cmpsl sar inc (bad) adc jle test cs adc mov mov push push cld dec xor and sbbb hlt xchg shl pop stc (bad) xor mov movsb xor jns inc xor pop es mov jecxz mov mov add pop ret mov adc dec mov dec or mov push xchg cmc jmp and (bad) sarb add xor jb rcll add push or je and ret mov add mov bound mov addr16 mov adc insb test xchg push popf push pop (bad) icebp dec or mov je bound (bad) jge negb in in jp outsl dec pop cmpsl cld pop daa icebp sub les subl sbb inc (bad) or fildl enter (bad) nop ror xor xchg jp add lea jbe or mov jb mov xchg mov cmp scas pop push ret or insb adc into push cmpsl mov roll add and scas push mov add out dec mov ror addr16 mov xchg in cmc mov push jne mov bound pop mov in xor mov xor pop dec mov out jp jg mov push xor mov outsb adc and jnp mov out jno push stos int3 aad (bad) iret and sub xor add cmpl xchg out imul dec cs pop mov cmp cmp pop xchg loope push out mov push sbb push das aad mov and popa mov pop stc lret xor adc fs lcall jb xor mov cld testb imul mov mov sbb pop movsb xchg lds xchg lds push dec mov mov adc adc lods movsb mov lea add or sbb jnp std inc lret pop xor je push add xchg popf jmp test dec (bad) inc cmp data16 pop mov add jl fs frstor cmc jne mov adcl inc or pusha mov mov test jecxz dec push jne cmp insl inc fcomi push cmpsb test and sub adc push in or adcl pop jmp xchg xchg add inc mov imul sbb int3 cmpsl dec add mov xor cmp jmp sarb or (bad) lds jbe bound xor fisubr dec rcl push popa repnz adc cmpsl mov nop hlt dec rorb lods sbb pop jae test cli sub sahf xor inc inc mov fs mov lret sbb jno les stos repz mov ret into pop in int3 bound insl xchg and icebp test cli xlat or call ficompl fdivrl dec dec push pushf sbb jle sahf mov xchg adc (bad) call add sahf std cmp addl pushf ret fwait ljmp push push mov adc in ds sbb xchg ficom outsb fldcw call pop sbb call adc stos inc out sub sub lcall pop cmpsl bound mov lret fs rorb outsb lds inc mov mov loopne or xor rcll jecxz leave lods inc mov pop (bad) lock and int mov sbb test push or sbb xor rorl stos xchg push pop jae iret sahf test mov mov sarl push sub mov jp outsl sbb and mov adc jns fistp int3 mov adc pop cmc mov (bad) jl add adcl xchg nop popf aad js push test cmc cmp fs or jnp cltd sub out test and xlat inc (bad) xchg cli scas xor push out mov lods pop pushf (bad) fwait sub (bad) sbb cli cmp xlat push and add pop xchg xorl xchg and and add enter mov repz pop pop cli cltd (bad) lret jmp pop shr add dec rolb mulb mov xor lret push cli aad xchg loop (bad) pop mov std mov push sub pop push test jl inc cmp inc push (bad) xor mov out ds inc and mov and fwait jns dec sbb repz xchg push popa arpl in mov sbb xor (bad) adc sbb pop lods mov movl sbb ja (bad) dec push cli fwait mov mov rorb test into push pushf dec (bad) call cltd lock mov push push pop js jno adc in lods (bad) repnz mov jecxz dec call mov pushf scas dec daa gs lret addl ror test dec lods or lret mov cmp ljmp and ja sub lods out outsl aam bound nop push stos inc xchg cmp shr xor mov in jns scas and mov xor fnop (bad) cwtl cwtl adc mov push out push mov mov xor push mov jno fildll mov add dec jmp xor xchg adc add outsl (bad) fs dec mov add sahf pop cmp test mov out sbb bound dec sub xchg dec mov cmp iret or jo jge pop mov push test outsl dec xorl cmp push ret rcrl popf fucompp mov mov mov cmp add (bad) leave push push add or push sub cmp mov pop mov jecxz movsb mov add rcll ss lahf mov mov loop add xor xchg std mov addr16 push pop rcll orb jle jle or xor les inc scas mov inc rorb sti pop mov icebp pop test pushf ret mov sub jle (bad) xor cmp lds shrb rol pmulhw sarl cmp jns mov xor add js cmp jae xchg add add outsl lock pop nop xchg and and and nop stos es lock mov xchg xlat fs aaa imul sbb in div and sub in movsb insb xor xchg dec xor add pushf push adc lods xlat push (bad) cltd inc xchg cwtl lcall add mov xchg fyl2xp1 jb fidivl shlb add and mov add mov (bad) mov aaa cli lock aas cmp scas (bad) or pop dec cmp push cld push adc loop inc adc (bad) arpl test fs (bad) (bad) jo rcrl loop ja cmp and insb out les lret jmp inc data16 jnp std cli test inc and inc mov ja mov in and scas fstpl cmp sbb sbb test and mov in outsl cwtl mov inc push test push dec mov xchg jle (bad) push stc into clc aaa ja std sbb xor cltd dec out inc pushf sahf adc ja loopne outsl or mov test mov dec andl rcrl cli ret mov cmp ret mov push xor push movsb pop and sbb cld mov cmp jp fmuls imul ss cwtl je call lcall addr16 cmp lea test mov lret xor push mov xchg adc cmp lea pop pop loop lea add mov adc int3 cmp test cwtl dec iret popa pop mov push ret hlt inc lcall inc dec gs inc (bad) jg or lds cs pop repnz mov lea mov and adc mov std xchg (bad) mull or xchg lret js stc int nop (bad) scas lock nop imul xchg inc insl jge xchg dec (bad) out movsl daa lret mov insl mov int3 jecxz (bad) in out mov xor xchg lods mov xchg push or test pop nop js mov push push fildll gs js mov outsl inc out mov adc shlb inc pop xor lahf cmpxchg andl shll orl and xor push repnz nop fdivrp pop jge (bad) icebp push xchg or jae test ljmp movsl dec ret sub xlat clc fld (bad) ret mov dec sub leave mov sub mov jg mov imul pmulhw das lsl pop (bad) iret mov or push enter test or and jmp aam fisttpll inc bound mov mov in or mov xor sahf pop xchg mov pop (bad) or mov es jae dec int or cwtl mov mov (bad) xor ss stos shlb xchg ds loope jg das xor je out xor adc addr16 test sub jmp xor pop xor nop xchg mov xor xor mov ss loopne lcall jg ja test int3 sbb add xchg cmpsb jne jl mov pop adc push out xchg and rcll push nop jmp add rcrb int3 fwait sub das jecxz popl jle cmpsl pop sbb repz push jle shll mov jne xor mov pushf test lcall movsb cmp mov sbb sbb jle cmc test pop fcmovbe mov test outsl and adc aam jmp and gs adc lret xchg das ret inc sub and fwait cmp adc cmp popf loop frstor cmp inc push cltd mov inc mov fsubs xor jbe repz sbb and fstl aas nop neg jbe cmpsb cld js jae icebp ret push cltd pop cwtl loop lcall shr divl bound arpl outsb mov test pop xchg fnstenv pop inc mov lret adc add cmp sarb pop ficom dec fimull aam ret and add in inc pusha ficom mov mov in xchg lods and push dec jae (bad) jno dec or jne mov xchg jb insb mov mov push mov cs mov sbb and gs cmc cld je jnp push pop lahf adc imul cmp mov xor mov xlat insl mov add fldenv loop xchg dec jnp (bad) lahf dec pop xor xchg xor ja clc lds test mov xorb std dec mov movsb jno dec int3 (bad) push pop pop sub imul sub pop test adc push into push push cmp add dec cmpsl sbb pop fwait repnz outsb pop lods insb into call bound out test adc repz leave or mov (bad) mov or push or push sbb push in test lods xor movl push (bad) cmp shlb repz sahf pusha xchg rorb nop xchg loopne call test xchg add jno lret fsts mov jmp jne dec push pop cmp test lods xchg ret pop mov add leave mov xchg das lret xlat das xchg mov aas mov lret mov out xchg pop popf mov fistpl aad repnz xor mov push (bad) mov icebp push rclb lods mov cmp dec aas fisubl pop ds cli outsb jge cmp push mov inc movsb sbb popa push das (bad) and adc out mov dec mov adc inc sub lods imul (bad) jnp xor dec pop xchg scas pop xchg mov inc add (bad) push adc inc fadd loopne xor or in pop xchg xchg lea ret push pop insl sbb jbe push jb fiadd out mov pusha xor out int3 (bad) enter pop gs mov mov xchg and and push mov arpl or jbe (bad) cmc in mov outsl lcall test and inc cld int (bad) or test dec jb cmp lock ret (bad) movl ja or sub arpl aas cmpsb inc sbb xchg and in aaa aam cwtl aad mov cmpxchg inc sub add ficom decl lret iret dec out inc sbb decb adc out lea nop fistpll cld (bad) loop jnp fildll sahf pop dec fwait pop js out ret (bad) jae out jbe pop mov ret jo push pop fstps repz cwtl fcompl mov arpl sub outsb jmp sub jmp cltd cmp int push jo (bad) xor pop fwait sub add adc aad jecxz rorl jae mov cmp sbb (bad) sub scas inc cwtl jo mov jg or popa mov push jmp push ja sub ljmp sbb hlt in sbb cs push pop pop sarb adc mov pop repz and gs push adc divb imul sub hlt xchg stos sarl mov rorl fwait aaa pop xchg data16 mov pusha in mov lret push cmc js shlb dec sub mov aas jae inc sub or aas push mov cs daa jmp and (bad) cmp sub adc in xorl jmp or pop cmp sub clc popa (bad) sahf testl aad push dec sub notl (bad) jno sub adc ljmp lea das xchg adc mov mov push pop inc jle xchg or pop fnop jl pop repz pop xchg lea lock jg (bad) or cmpsl mov add lea nop cmp jns jne xor mov mov arpl stos mov in shll jbe jmp xchg ds inc imul push outsb mov xor cmp xor popa xor adc inc nop test mov lods sti adc xchg (bad) daa sbb xchg cmpsl dec cmpsl mov fsubrs inc add popf inc in scas dec pop gs lret and jne outsb pop pop sbb sbb scas in pop aaa in dec mulb pop loope mov outsb out cmp sub stos mov push pop push sub out lods add ss mov and insl sbb adc idivl inc pop mov imul (bad) insl out or (bad) dec into jne adc inc xor notl jns (bad) push dec xor pop in movsb adc inc aas fisttpll fsqrt pop popf mov xchg lods jno push pop sbb xchg push sub mov insb imul mov jb daa out roll jae inc imul fildll out and pop push jp mov xchg push adc jecxz adc xchg dec repz xor addr16 inc xlat pop cmpl jne jge and call or (bad) in jno loope lods pop push inc dec push imul movsb xor push mov nop fisttp mov daa cs neg mov mov inc lods mov mov popa daa movsl cli clc mov mov cmp cmpsb mov sbb shll and jecxz ret pop push push fcmovbe mov mov jecxz vmwrite fisttpll aaa xor sub (bad) inc jnp push push sahf stc into adc pop dec adc sahf enter dec scas jle push repz addr16 lock cmp sbb loopne cltd and popa ljmp adc les aaa and xchg lods out bound xchg mov sub sub into push iret and mov repz sub flds xor mov dec push scas sbb scas cli daa pop pop add (bad) and pop les insb sti arpl add shr jbe leave ror je mov fadds scas jo das mov in ja fsubr xor mov (bad) (bad) xor pop lea xchg push scas dec addr16 hlt cmp lcall dec sahf movsl pop in mov hlt movsb mov mov out xor mov add fldl les inc lds test xchg sahf jnp (bad) jge arpl aad fstl fnstenv add pop scas pop roll ss pop sbb cmp xor mov cltd and cmp lahf jge adc enter sar test add daa push pop addl adcb (bad) push adc pop test mov clc push ljmp insb add rol mov mov repnz adc dec jns jo pop hlt sub lea mov pop (bad) sub dec sub sbb dec sbb jns call pop mov loope insl inc and push loop inc les adcb leave fwait mov fs repnz jne in rolb sub mov or sbb sbb mov hlt or aaa rcll or xor (bad) iret inc out lea (bad) adc stos xlat pop xchg dec inc out cmp jb ficoml mov enter or pop (bad) sbb lods push inc adc or repnz mov sbb (bad) jnp mov pop sarb int cmp (bad) lss xor adc je mov push aam jle int3 call idivb push push loop in outsb mov adc dec push add dec push push aam nop outsl mov jb pop add jl hlt fimul and push test jb mov mov push imul aam mov ljmp idivb jg pop mov sar jne xchg mov inc (bad) dec xchg (bad) js or in mov (bad) inc dec loopne push xor and pushf inc cld add mov repnz jl lock mov push les test or mov roll fcmove dec xchg inc daa and ljmp cmp sub out in dec mov dec mov sub xchg inc stc insb and jnp inc add sbb int3 dec rorb (bad) outsb sub fsub daa mov jb pop dec mov sub and cwtl int push subl pushf sarl mov mov sbb stos add xor xchg lods sub out xor xchg dec cmp push pusha adc scas mov rorl in flds xchg out clc fcos pop mov ja jl bound loop push pushl pop sbb mov mov scas inc idiv lea fdiv js mov cld fs aad fsts shl pop (bad) loopne jge push (bad) xchg cmp or hlt mov pop (bad) xchg mov and inc mov daa inc xor mov mov sbb pop add dec push outsl lret or mov (bad) outsb xchg ret outsl xor inc nop aam adc pop pop (bad) push loop inc and (bad) movsl sub loop call (bad) pop and cmp push or inc fsubrs mov test cmpsb xor (bad) xchg add (bad) shl pusha lock push jl js int3 loope les xchg test call add loope out ret ret (bad) ss je pop mov dec negb jo lea cmp test mov or in lea out in test fwait mov jne mov lds addr16 pop sub aad cmp cmp testb jmp and or jo insb pushf fstl out sahf push fistl fisubr cwtl jge mov mov pop in fisubrl and xor push rol (bad) in or add xchg fcoms sbb ret data16 ljmp jne or test inc imul push (bad) das pop fcmovu inc ljmp imul test jno lahf push and imul pop sbb and and and mov test out dec inc adc leave or mov xchg mov (bad) or pop xchg inc fistpll cmp daa test pop pusha add out ja xchg push jp divl aad rcr jecxz push scas popf xor cmp lahf mov and fbstp sbbb cli xchg clc test fcmovnu rcll add ret jno scas adc call adc inc enter adc sbb mov xor or outsl xchg testb jecxz fmuls mov fs dec dec in dec inc iret jbe pop push xlat pop or cld imul cmp inc (bad) cltd ret mov sub iret lret loop add lahf repz xchg andl adc push mov mov pop dec int dec xor mov or cmc cmp adc js sub int jecxz or (bad) jmp xlat nop mov mov sub inc mov xlat and cmp cmp dec add sbb push test inc std (bad) (bad) into xorl adc arpl and es mov push or in test mov out ret das outsl shll add insb xchg mov inc repz mov ret pusha test cmp push das sbb imul popa (bad) negl jns in mov jge push xor das sub adc push jmp cmp subb push xchg popf xchg fstpl dec xchg lds mov out jl pop or cmpsb std mov and imul cmp mov out jno fild sub and pop js fidivl or xchg scas push pop cmp pop mov pop mov aaa mov pop out loopne cmp leave mov dec or mov pop mov pop xor xchg push xchg mov icebp divl pop das pop je loop sbb into lcall xchg bound add xlat mov pop dec loope mov jl int sbb xchg insb inc (bad) lea ret repnz or imul sub jnp lret negl sbb mov sbb loop push test or add push xchg inc push sbb push movsb jo cmp adc mov jmp or xor mov pop jno mov mov xor ret pushf rcrl and xchg movsl push adc fldenv je sub xor inc jge int3 pop push mov stos mov cltd rorb lods inc pop je jbe adc cmpsb popf push pop mov negb nop and mov xchg hlt imul hlt aaa jbe pop jno jmp sub fildll mov in dec orb add push (bad) lret hlt mov (bad) pop and out scas (bad) mov sarb gs push out cmp inc inc push jg lea ret jnp loope mov xlat gs cmp mov cmp jne fmull dec push movsl sbb dec dec fstpl jmp sarl cs mov mov adc icebp fdivs and mov imul mov lret mulb jbe adc bound stos sbb push dec mov dec imul mov bound fmuls dec aas out adc mov pop sbb jp and shrl cwtl mov adc cmp test int3 stc (bad) ret dec aas lods in ffree in nop daa pop movsl push pop clc mov es pop test sbb roll sbb or mov (bad) xchg int3 mov cmp out ret jnp aam (bad) (bad) push adc test inc mov loope mov sbb enter xchg aam stc mov sub stc pop mov imul add jp lret xor jns inc aas jmp (bad) or icebp clc lods adc mov (bad) ret gs test mov call pop hlt lods and scas out insb fwait jnp addl xchg lods scas dec dec aad mov adc pavgw psubw addr16 mov and lea xor inc mov jp dec push outsl sub inc lea sub cmp push mov aaa into roll popa push pushf fldenv rorb icebp mov push pop inc je mov or ljmp sti cmp lret pop dec call or in movsl pop mov dec outsb dec mov ss sbb jge (bad) cmpsl jne loop and sbb cwtl adc inc fnstcw imul inc aas rorl push or or jge pusha or lds or cmp sub and aaa xor repnz notl stos cmp je in insl pop jmp out ja aam jl inc dec pop lahf and mov ss scas sub sbb insl mov movsl lds imul insl (bad) in sbb je iret outsl movsb imul xor scas pop outsl adc fsubl into sbb cmpsl es pop adc xor movsl decb movsl mov lcall cmp pop cli andl popa leave sub in iret (bad) shll mov or dec dec lds (bad) xor gs xor pop pop mov adc testb popf dec movsb rol inc mov mov (bad) pop lahf mov mov mov push pop jp mov sbb mov icebp fiaddl xor (bad) mov adc xchg push insl (bad) and mov repnz lock inc add aad lcall dec outsb test test aam negb shlb movsl sbb sub pop lret outsl hlt adc aad paddsw sahf leave idivl fs push out js or addb inc mov ds push jl stos insl cmp and ret mov ret cwtl xchg inc ljmp sub mov (bad) stc sbb popl sbb and rorl jg in out rolb movsb xchg cwtd mov mov repnz xlat nop sbb pop or arpl pushf ljmp frndint cli push sahf or push cmpsb call push stos aam scas cmc scas mov pop scas pop jmp mov inc ljmp scas test push outsb mov aam cmp mov sub arpl and ss nop sub shlb ret arpl mov mov clc pop fimull loop push dec mov xchg mov repnz jge mov scas mov mov lret shrb push lods sbb repnz sahf in std hlt ret lods sub in mov movsb jmp or cwtl jns and imul xor adc aam mov ds daa push aam lret popa mov loope int mov fisttpll inc xor jnp,pn push jecxz dec xchg sbb jecxz mov ret xchg (bad) bound mov scas shlb pushf sub ds dec faddl in jmp adc xor jno inc push out add and push cmp call loopne nop jae jp mov dec pop cmp inc mov fsts dec mov loop ret cld cmp lcall test negb aas xor sti xor cld inc cmpl mov sub xchg out pushf mov push adc sub dec insb adc pop or call into dec aam xlat sbb and mov jecxz xchg cli mov xor xor loope repnz stos mov out jo mov xchg pop rorb sub cs les jge cli rcl lahf test sarb mov int clc inc mov sub xchg mov dec xor punpcklbw push push push cwtl pusha (bad) dec mov push lods dec xchg insb or jecxz adc xlat js push insl push jle scas xor or das add int3 daa push push mov mov push gs xor mov in aad leave dec add dec sbb ljmp lret xor aad iret push dec imul jnp cmpsb dec inc ret outsb cmc (bad) aad sbb xor sbb jne std sub lds insl mov lret idiv movsb ja dec adc out push pop mov or fs dec and (bad) pop cld sbb adc cmp (bad) xor int3 mov push test mov test xchg notl push js leave ljmp lods add cltd jb aaa xchg lea out dec fstpl adc lea sti xchg out inc and add stc inc dec scas sbb insl jecxz add mov dec add out xor jbe push insb mov inc mov shrl mov (bad) enter cmp xor rorl xchg cli jbe iret test inc cs xchg dec xor and nop mov cmc fldenv shrb cmpsl in mov sub stos es neg and sti mov mov mov (bad) dec add mov jp mov aas enter daa aad xchg movb stc fistpll pop add cmp pop and mov iret out fwait mov inc ffree testb sbb ret (bad) rcrb leave test pop cmp add daa pop mov mov leave les push test out dec xchg daa arpl sub into (bad) and cmp (bad) je fistpll dec push jge adc push lea mov pop out sbb ljmp sub movsl xchg jge loop mov fcomp mov jne adc stos or insb add cmc popa cmp insb ffree mov je std in shrb jns outsl in add js mov nop (bad) lret lcall test mov jmp ret add xor lds sbb sub xor or enter or sti mov (bad) leave insb lahf faddl cmp data16 jae out cli les push pop lcall pop adc jmp mov fidivl push inc (bad) shl (bad) jno xchg roll (bad) cwtl push (bad) lcall subl popf hlt push push xor sbb lock push and subl fisubrl inc imul test pop push in sbb push cmp sub je mov aaa push jo adc (bad) ss and ds mov or es pop inc bound leave jp repnz jbe pop lds (bad) aad mov test iret cmp push iret adc jb mov push mov push rcll cmp fs push cmc lds mov (bad) fidivrl std das push ljmp and adc in push fsubrp lock ret push enter push inc loop addr16 pop cmp mov lea clc in int3 cmp adc jecxz stos sbb popa adc sbb mov jo mov idiv inc xchg pop and pop arpl data16 lock in mov dec aas inc adc movsl lock sbb xor jno bnd xor loop sarl and mov ds arpl sub dec ja or (bad) pop push adc rorb xor cwtl add add xlat aad jmp push in cmp stos inc or std (bad) jns repnz pop rorl addb or adc sbb into loopne ds mov shrb jbe fisttpll ret sub jg dec or inc js add push adc (bad) xor dec push ljmp lods pop test fnstcw push fisubr push rcl mov add gs out lret inc mov adc (bad) sub in repnz xchg inc sub mov xchg jmp or scas xor xor push dec adc repnz test push adc dec test add out stc mov in loop push adc insl inc outsb pop add sub mov jmp rcl jae pop in and add pop cld (bad) xchg cmp arpl (bad) insl jge fisttpl out dec mov inc sub pop imul xorl mov stos or mov cltd pop aam fcoml test jnp fnsave fisttp sbb push add cs mov dec test orl out imul lret cmpb int or (bad) pop xchg sbb (bad) ja cs and and adc jae mov roll incw mov adc xchg jne jp mov sbb mov jmp inc inc bound jmp aam stc aaa or cs adc fs push or sbb sbb (bad) sbbb fcmove ss xchg rclb jmp mov dec mov or sub dec pop je mov jl inc dec cwtl into or xchg cmp mulb push mov or lock jmp and cmc mov cltd xlat stos enter out (bad) mov sbb and inc es std scas jb mov enter icebp push or loopne test outsl ret push cld ljmp pop lret xchg out mov loop popa adc pop mov hlt ja jae add push loopne aad or pop mov lea movsb je jmp lods cmpsb and xor push adc push adc jae mov fistpll mov push bound or sbb mov jmp sub xor push dec vpsubsw mov insl sbb push cmpsb pop es adc pop add shrb dec sub add add into pop inc xor ret fcmovne cmp mov neg into (bad) pop ret fistp push outsl push push or stc ss mov mov jge test pop fistpl add xchg and jns (bad) jl ljmp mov mov sti cmpsl dec fildll pop hlt enter andl outsl (bad) stc mov shrl int sub test sahf push stos mov inc fmull dec in mov (bad) and mov xor lsl pop push mov pop cli xlat loop scas xchg jge pop jp jne push ss jmp dec dec mov dec jno test mov add add out push mov and mov add xchg repnz stos cmp mov lret (bad) mov add add mov sbb xlat mov mov push arpl mov (bad) pop fist mov sbb enter mov cmp xor mov mov jne test fidiv sbb cld orb pusha scas das sub in fdiv or and cld sti dec jmp orl cmp add sbb std fdivs jp pop es aam push mov add fisttpll sbb push add adc adc xor adc inc inc pop lcall or icebp sub pop add rcrw push test sbb adc out (bad) in cmp into inc fwait add xor lods mov sub mov rorl push inc pop sbb push lock xchg add inc in sub lock adc pop mov mov cmpsb dec (bad) push push xchg xlat outsb jns sub lcall mov xchg je add jge lds cmp stos cwtl xor xchg mov push sub pushf leave stos fwait mov fcomip movsb gs sbb outsl mov (bad) or dec pop and sbb movsl in or pop clc dec (bad) sbb jbe mov fisttp and je push jp cmp jge cmpsl ja pop push pop repz insb and inc mov sbb jmp mov fwait or dec jp loop iret (bad) add jecxz add loopne (bad) mov test scas les and stc mov mov inc jl adc pop daa aaa cs sub pop ljmp cmc out (bad) cmc mov in ja jne sbb or jg icebp fstp mov repz inc mov aad sub jle shl std gs xchg jbe adc push (bad) dec xchg js fcomp mov and cmpl and mov add es jnp mov mov ja jge jo mov (bad) dec je and jno jo imul sbb fdivs repnz stos cmp aaa push les aaa sub push add jle mov (bad) jecxz gs popa mov pop add push call ffreep mov xor js cmpsb xor dec jb daa dec mov pusha std or pop andb icebp in out jecxz inc out cld xchg adc jns cs mov cmp mov mov mov aad aad jnp sbb fisubl sub in push or rcll aaa push push (bad) and or pop mov xchg (bad) dec call pop sbb aam jno lea into jns lret sub push pop (bad) into addr16 fisttp push inc push jge (bad) or jns int or mov sub fld addr16 aad xor out dec iret iret or push imul add out fcoms push xchg je nop leave sub idivl pop cwtl mov mov push (bad) fs jecxz dec mov cld sub and ret dec (bad) divl mov mov cmp adc pop xor iret add dec in xchg int3 jo (bad) in inc faddl or and fistpll aas push sbb (bad) (bad) sti dec cmpsl imul sub xor or mov mov cmp mov mov test fisubrl mov inc jl (bad) jnp mov pop and (bad) insl sub out mov aaa jnp push lods dec inc dec mov push mov pop call lcall bound jl aas mov sub pop jo in scas lods push movsb xchg ficoml cltd aam mov sbb (bad) imul enter jmp xor iret movsb es mov sti enter hlt push (bad) jo push pop popa (bad) in or or test daa test fucomi arpl imul cmp jbe cmpsb arpl xchg xchg in pushf leave dec popf inc add (bad) imul out sub dec jno imul ja sbb es fidiv cltd xchg insb ljmp popa pop jmp shlb in fildll ljmp leave mov ss jmp or in inc movsl lret mov mov je adc test pop jmp or cmp cwtl cli test aaa lea in xchg jb jno jns aam dec jo push (bad) aam cmp xor sbb (bad) push fdivs notl movsl fs dec xchg mov fisubl jb (bad) jbe ja jno pop icebp ret sbb lret mov mov cmp cs xor movsl test stc cli pop push add sub jmp jmp test xchg jl push inc push insl int (bad) sub in loop icebp xchg mov ret xor xchg sub stc add bound mov sbb rorl int3 dec mov nop nop inc ret outsl pushf adc lea imul adc mov pop shlb mov sub sub lods adc cli adcb imul inc nop add xlat mov sar pusha (bad) data16 roll jns sahf shrb xor jns sar test push sarb int3 and stos sbb scas jl push pop or in sbb movsb andb pop push cmp (bad) in jg stc xlat (bad) cmp popf add jmp popf mov mov addr16 (bad) or and lahf cs andl and (bad) call push pop cwtl dec sbb or lds clc add xchg iret sbb mov ss sub daa subl adc sbb je adc jg jne cmc mov sbb adc mov mov and push adc cmp adc mov das mov adc leave fs jp icebp mov pop pop ljmp cmc fistpl push jecxz ret aad jge (bad) mov mov insl mov loope xchg pop jle lret inc push aad bound push cmpsb cs push sub aam push push aas push mulps sahf cld popf pop push and iret dec call xlat lock stos xor jns push movsb or in fild inc dec jecxz jne push out repz dec or leave outsb lods nop mov ja out push test jp mov inc imul in pop sti nop xchg ficom xchg clc add lock push and and jno ret sbb jo jns adc out or mov pop mov pop mov xor in std pop inc nop in (bad) gs hlt (bad) xlat or push cmc inc push jno sub outsl fstps popa lret jae lds fs or cld xor daa sub pop adc xchg fs xchg push movsl lcall mov mov mov idivl xchg loop jmp imul int inc (bad) aad mov dec sbb jge inc js jmp cld inc jmp xchg cld adc lods arpl jno lods sub jne leave mov mov lods ffree in (bad) push dec in dec sub sti out aas cmpsl repnz inc dec dec jnp dec sub imul add hlt dec (bad) mov arpl stos imul push cmpsb jae out (bad) fild dec aam xchg int in outsb cmp mov enter aas in inc fwait dec ja popa mov push popa pop add sbb mov xor (bad) dec negb cmp dec popf adc jns and lods rolb pop insl add bound data16 aas and add popl es out mov mov ja sbb call (bad) arpl aaa test adc in loopne xchg ja jg loop sarb lcall js mov fsubs dec stos (bad) xchg das dec sahf mov stos sub popf jbe xchg lret push imul mov pop xor pop push adc inc arpl fstpl rorb int3 pop xchg loop lds pop dec fs fidivrl in fldt add into lds push (bad) mov push mov ret aas dec fild jl mov cmp push testl jecxz in bswap outsb inc mov push jbe insb icebp lds hlt inc (bad) loopne inc mov mov xor cmpsb es mov hlt push cmp push insl mov cmp sub int jecxz cmpsb inc mov in fxch inc imul xchg xchg popa daa push mov imul cmp xor (bad) imul inc addr16 fidiv fsubs jnp je and (bad) push jg mov mov add icebp (bad) dec mov out sub ja cmp pop sbb dec sub inc mov pop inc movsl sub cmp and (bad) adc sub xor out xor push push lahf push push imul cli gs dec jae mov adc lds mov jg cmp aaa mov cld mov pop xchg sti adc clc lock push test in cmp fidiv push dec aas xchg pop imul sti xor jb je aaa xor (bad) fwait or icebp add repnz sub aad dec lret sarb addr16 sub jb test icebp (bad) (bad) (bad) add lods pop xchg in and gs push cld adc out adc dec lods cmp pusha hlt add loope push cltd ficompl mov cmp cltd stc popa mov scas (bad) movsl xor les imul xor dec out (bad) pop data16 divb lods in push mov fimull inc loop out cmp sarb mov scas and fcompl test pop stos dec (bad) add sahf add fiadd imul adc ret fmul out in jge sub mov inc dec dec fild stos imul mov dec dec (bad) rcrl fmul jae scas cmp adc jle xor je jo fiadd fcoms jle inc mov mov lods (bad) sbb pop cmp and xchg ja lods sarb xor sbb push sti inc insl fucomip adc push cltd fild (bad) int3 dec sub in mov push ss js and cmp clc and adcl ret sbb push sbb ljmp gs fnstcw jae mov sub xor loope sbbl lods xchg jno sti ret leave clc int3 inc xchg mov into adc dec cld rolb sahf mov lds enter dec fisubl dec sub int3 xchg int push cli ret into int mov cmp cmp and aas jne lods gs rcrb push push xor imul rorl and jbe fidiv mov sub imul mov sahf jnp add sti mov ljmp jp pop cmp (bad) (bad) mov (bad) jne loope pop inc sub clc jb xor stos cmpb imulb and adc loope repz jp fisub cld push roll jg minps (bad) shll pop mov mov add lahf jae pop (bad) fidiv push in ficomp dec test adc xor jle pop sub call cltd repnz jne cmp scas test xchg repnz ljmp jmp (bad) repnz mov sbb ret adc add xchg cld ret cmp cmp hlt mov adc loopne clc jo xor xchg xchg jnp fidivrl cmc hlt sub (bad) pop mov pusha xchg (bad) ljmp and out jns icebp dec mov push push mov stc clc push outsl mov dec pop pop lret sti popf arpl imul jno arpl test add xor rcll mov mov (bad) cmp pop lds (bad) incb (bad) mov rorb pop arpl bound jmp adc and cmpsb adc xlat jmp push test push xor xor (bad) ja (bad) xchg int jecxz xchg pop mov xor fidivr sbb xchg (bad) rcl xor fistp push fdiv movb add mov add stos ret xchg (bad) cli lahf cs out ret test push jmp dec pushl mov and and cmc xchg cmp dec int3 ja (bad) ljmp pop sbb mov pop and lods mov cmp pop mov loopne pop mov stos dec mov or outsb scas xor out gs inc (bad) or fidivr and cmp cmp xor out push add daa stos pop and or insl aas add and jno stos inc int add mov arpl xchg repz sbb mov mov rcll xor call mov pop imul out xor mov test cld inc mov andl sbb cwtl fidivrl xchg jae repz (bad) stc adc pop jge xor lock adc mov jmp or dec std out shrl (bad) popa mov repz flds incb cld xchg xchg bnd sbb xchg mov inc imul loop (bad) ss std sub ret inc adc inc push fwait test push dec sbb std aad cmp loop inc pushl sbb sub out movsl outsb rclb inc xchg jecxz push dec jae xchg add (bad) add cmpsl push into mov test sub aaa flds sbb iret cmp xchg sahf test mov (bad) mov leave rcr jae test pop fisttp or mov push dec or das sub (bad) push sbb js or decl pop les adc mov cmpsl inc sub xor and out mov mov jo sub outsb pop stos jp lahf popa add adc int ja dec mov xlat push xchg lret sbb inc xor sub mov add push fwait dec push repz call cltd jno rcrb (bad) xchg xchg cmc ficom add sti stos adc ret adc xor mov sbb jp test int3 outsl pop es adc es xlat cwtl (bad) push push lahf call mov ljmp sbb xor push adc dec int3 mov test cmp int3 pop push jae and or (bad) mov xchg push inc fs dec insb addr16 repz mov add imul clc repz push loopne cwtl fisttp cmp pop mov movsl sti in sbb push push xchg sub rep mov push jp fdivl gs xor daa adc inc cmp mov ret adc inc loope dec xchg sahf cmpb xchg pop outsb insb cmp hlt sbbb clc pop pop mov int3 mov mov popf fnop test push fbstp fs push test cltd xabort cmp and dec jle push mov jo mov adc and imul pop insl in (bad) (bad) mov push jge mov push pop jbe jl dec (bad) jo (bad) aas rclb (bad) cmpsb cld lods int3 dec adc inc xor jl or inc and cmp ja cmc xchg inc cld cli lret push sbb jecxz pop scas mov sti jae sub stos pop mov mov and pusha outsl add mov sub movsb arpl int3 popl clc movsb pop out and sbb xchg add cmp xchg push imul sbb push repz imul in pop xor inc add sti jo dec lret test jb push (bad) ljmp cwtl push dec xor jnp (bad) add mov das mov xchg (bad) pushf sbb stos mov test int mov or roll fsubr xchg andb out loope in bound jle push xor negl jp pop enter aad jae adc mov mov int3 mov std stos push repnz sbb jg in pop cli jbe add adc or (bad) pop pop dec repnz dec fildl push mov dec or cmp (bad) jb xlat test cli mov lcall mov outsl pop xchg or push jmp lods popf rcrb pop xlat jo push (bad) lret cmp mov gs mov fmull cmp ret cltd add inc sub pop fdivs loop test lock loope inc stos scas xor ret loop out cmpsl stos push push fstl cmp xor hlt rcrl scas jmp movsb jbe sub pop inc cmp test fsubp add pushf mov insb outsl lods jnp lds jo rcrb jno adc ljmp mov iret inc push (bad) pop push mov aam (bad) xor xchg rcrl int add xchg mov dec dec mov xchg (bad) fdivl mov sub ficoml cwtl lods or push lock jb scas jle mov cmp (bad) pop push dec pop cld dec dec int3 inc or inc sti (bad) dec pop jne sbb xchg outsb pop or cmp pop push mov mov fwait xchg in mov stos sub jl int3 aaa bound sbbb sbb arpl orl cmp test rol lahf icebp dec jmp (bad) stc dec jle add adc pushf dec jle pusha or loopne xor mov dec jge fs in jns inc arpl je ja pop insl mov jbe dec pop mov outsb jbe or icebp sahf ret jns xor fadd les adc in int dec pop fisttpl cmp dec mov xor (bad) cmp jns iret std (bad) shl cmp out pop and dec pop stos das dec test xor lods cmp call inc pop into push lret push test push and or pop push lcall push fbld sub repnz les mov jl fldenv test icebp (bad) mov xor loop push ss stc cmp cli mov jge mov pop les (bad) icebp pop nop shl adc sub out fnsave (bad) bnd fiadd or les jae js js dec mov add dec push mov inc xchg push lret les mov inc push fsubrs int addr16 mov (bad) lds pop pushf xchg (bad) fsubl inc xchg and cmpsl dec cltd fisubr sbb or mov cltd (bad) sti mov mov pop jno mov sub pop mov xchg push popf in stc inc jnp out sbb pop (bad) push xchg inc lahf inc mov movsl or cld inc add ljmp lock mov sub cwtl in jmp mov add pop cmpsb pop lea pushf inc and mov movsl mov xchg outsb jge and xor popa adc cs push test mov pop nop adc movsb stc cmp dec inc and or cmp out pusha push jae negl mov and data16 int pop mov sbb dec out push xor push insb cmp pop and and je xchg push or iret int adc adc inc mov shlb mov inc sti xchg (bad) ja je pop inc sbb insb (bad) jb ss in outsb pop fcompl sub lds fs pop jl push enter daa mov in jmp adc iret cwtl clc push or es dec jle pop xchg mov xchg fsubrl pop rcll into not or fwait cmp leave jp mov enter push inc jbe adc pop mov mov push ret inc jle or xchg xlat lods popa xchg pusha xchg push nop dec mov cmpl test jle repnz push and (bad) pusha inc lcall insb mov and test cli (bad) sbb mov mov addb fistl roll rclb repz mov jb and bound cmpsb pusha movsb push inc cmpsl and sbb imul mov inc or and loop or out pop push addr16 cmpsl xor loopne leave and jne lods (bad) out adc gs clc cmc int (bad) cmc pop ret mov push aaa ret in (bad) lret sub rorb jne jmp ror mov mov sbb inc leave pusha push push or aad out daa xor mov in (bad) pop push jecxz insl repz repnz pusha int loop pop mov (bad) jp dec lock insl adc pop fidivl fnop ret xlat xchg push in jo lock mov add sbb pop stc mov es std je inc lds mov adc fistpl cmp mov (bad) dec lods imul mov arpl imul ret mov add add push lret (bad) out shll sub aad (bad) cmpsb add and xor fnop popf repnz mov or aad fldt mov pop inc cmpsb xchg pop mov jns pop lcall pushf ss xchg cltd mov ret cltd pop xchg xchg xor and int cmpsb loop lods jecxz jp aas push push sbb test pop lahf lock (bad) sbb or out mov (bad) add scas cmc test repz cmp xor je hlt (bad) push mov pop adc jbe mov cltd fisttpl aam push mov add jmp fnstcw sbb cmp or dec xor and rcrb cmc push test xchg dec (bad) or mov popf adc push das adc repnz outsl pop pextrw cmp dec inc call mov sar enter loop popa jecxz insb popa add rcll sarl sbb sub push lods mov cmp cmp cmp sahf lods push gs ss mov sub fmul popa lods pop xchg mov mov je mov pop nop jae shrb cmp and dec push and call aas scas imul les push and pop fs and mov cmpsl lret jg sub les mov das std sub xor or lods adcl cmp dec out ret jns sub leave sub and fbstp (bad) cli mov push add std xlat mov dec bound (bad) mov cmpsl call mov dec jl fwait insb xlat dec push adc xor test in pusha hlt jp cmpsb loopne push aam xchg pop jge xor imul and inc inc dec jge xchg or jecxz sub test in leave xor mov in sahf add loopne xchg sbb enter iret js loopne pop aad jb leave mov and mov sahf in sbb lods daa mov bound ret mull lock mov ljmp inc and and rdpmc and fmuls jmp imul insl jne out cmpsb push mov jns and pop pop pop xchg xchg scas iret xor test les jae enter test mov int3 fs xor icebp cmp add das popf cmc inc push and aam inc pop mov loop out push cmp das and fs jmp adc hlt pop xor xlat cmp jge les rcrb pop (bad) test lock cld les mov imul add cmp insb inc mov xchg popf aam icebp cld pusha popf cmp mov int3 popa or stos or sahf (bad) pop in pop sub push cld inc sti add rolb lds inc cmp pop adc mov std int3 and adc lret mov out cmp pop lahf ds pop test jg jp jl jno out in sti jg aas push test loop incl push inc sbb push sbb lock pop xchg and jle sbb adc cs out push push or jp push iret lock inc push push imul ljmp adc lahf leave and loop out sub mov cwtl les stc iret fcoms mov aaa mov icebp mov sub push adc popf adc xchg dec icebp mov and rcl mov jbe call mov pop add mov adc sbb add int mov frstor popl or bound or or jge adc push dec mov enter xor xor std rcrb sub and rorl ret jl mov xchg shrb add ret jecxz repz push fbld cld insb jne stc ret add mov out pushf not js inc outsb call cld pop xor mov jecxz pop (bad) xor out pop lret mov xchg push and into fwait cmp and mov cli ror notl into adc pop stos lcall popl push push push or xchg dec jle out test test (bad) push lret cmpsl mov divl in mov data16 insb xor and loope xor mov das (bad) into mov jle loopne and xor ss cmp mov mov xchg jbe shr xor lds stos (bad) cltd lea add push daa xor inc or scas pop xlat aaa nop aad inc in xchg inc jne xchg in out or cmp push and add nop or jbe jmp ss xor jl imul pop xchg push fdivrs inc sub add dec xor (bad) and call cltd push bts loop xchg je sub decl enter mov shll push data16 jno (bad) in es pop jae jo fwait cmp movsb dec jl,pt jne xor cmpsl (bad) push add movsb (bad) push fiadd jb out add and aaa inc nop cmp xlat rcl cli sbb repnz sbb sbb sub fdivp mov rorl lret xor daa mov addr16 add dec roll fdivl add das xchg lods int3 out je add xchg jge mov outsb popf ficoml sti out cmp ds ficom sub xchg adc test fdivr das adc sbb add fdivrl in sub cld inc inc push cwtl test cld mov push ret and dec frstor push icebp jbe (bad) std and imul ds idivl push push xchg out fs in movsb mov gs in pop leave (bad) outsl std or aam sub fcmovnu and out xor cld (bad) mov mov out daa push in xlat (bad) xchg add in cltd imul jecxz push sub and loop and mov test lea hlt jne mov mov leave sub sub fild fsubrp mov sbb mov hlt stos push leave loopne or adc jo rcrl or ret mov loopne cmpsl stos dec fldenv (bad) mov test jp jo sbb lea lcall (bad) jbe jmp mov xchg pushf jns mov add mov dec add ss push int3 and jle mov and sbbb add push orb movsb sub sbbl and cld jne mov clc adc repnz xchg sub loopne stos lock loope fisttp and xchg or add jbe mov inc adcl dec test cmpsb fwait mov pop and inc imul iret mov testl out movsb sbb cmp shr fldenv cli loope jb jp jecxz shr cmpsl and push xor idiv lock lds cmp cmp fiaddl mov fimul sub xchg (bad) (bad) inc and lret ficompl xor mov mov clc jg ja loope jle test pusha fldcw and pop mov cmp aaa gs xor mov add add push jecxz push icebp dec out jmp mov pop es ret mov mov fs jns inc lods add and adc cmp add jge loopne jl mov stos or sbb pop aam mov bound ret mov jge jecxz jns lds ds fildl sub shrb sub push mov add sti lea xchg push lea push stos cmpl cmp sub sub pop cmp movsb cmpsb pusha and jae sub pop xor fisttpll dec ds ss inc daa lods xor lcall imul sbb aaa adc xor sarb movsb (bad) xor sub outsb stos xor fisttpll push pop ret jno stos jb into fbld jmp sbb dec sub mov out jle xchg dec mov jnp mov scas jmp adc pop rcrw or inc mov push dec sbb jmp test mov jmp mov mov push movsb ret pop inc jge bound out xor (bad) sti lret push nop xlat cmp xchg and pop lret cmpsl sub int movsb loope icebp pop sbb mov add movsb insl mov push fdivs mov push lock int3 mov shr mov cmp cmpsb mov mov ror jae inc sub jmp mov repz fist dec or mov and je iretw fisubrl push and leave cmp les fstpl int insl inc and enter push les stos jae ret add cmpb mov es lock mul jbe (bad) cmc mov int3 xor popa ret sbb mulb pop es mov adc cli ret cmp (bad) add inc adc jns loopne add in loop rol lret sbb lea mov cmp sti in stos (bad) xor jmp lea xlat data16 cs enter leave test mov cmp ret addl lods (bad) jle mov out xor dec in lcall push ret sub sbb inc arpl rolb or mov cmc in jp add lds ja dec xchg sub and and out or sub rolb les pop jbe sbb movsb cli mov insl adc adc xlat pop or jge,pn add sbb pushf cmp add lcall add sbb inc mov jg lock sub nop push lahf sahf mov inc cmp adcb add fadd aam pop ss movsl sub repz xlat xchg pop jecxz lcall movsl mov xor sbb and cmpsl or fs outsb mov stos push sbb ds add loope adc test cmc add jbe push insl enter inc mov bound and into mov mov inc call jg cmp mov fmulp add push adc (bad) jne mov mov sub add cwtl (bad) icebp arpl xchg fidivr ret add dec ret xchg stc mov and sub mov mov jns,pt ret sub mov jb js add pop mov fs xor aaa out int mov rclb in cmp in jmp and and cmp ljmp sbb xlat es fadds mov and test insl icebp (bad) pusha or adc pop mov dec and sbb mov sub mov pop and add dec mov fldl dec lret add (bad) xchg and or fs inc mov stos movsb mov insb fist bound pop pop pop leave xchg iret test push loopne jnp in xlat adc cld aaa mov ficomp add fcomi adc pusha or test mov into adcb push nop push xor test sbb and sub orl cmp dec fistpll mov xchg leave loope shll (bad) mulb add js ds orl add fisubr adc mov or sub push in lea jns daa into push scas jo mov (bad) jl push push cmpsb xchg dec sub in cmp mov int3 iret (bad) mov sbb les xor pop dec xor pushf jecxz add adc fimul pop outsb daa roll sbb mov mov sub xchg cmp cmpl and popf into dec hlt pop testl repnz or aaa sub movsl and xchg outsl enter pop and je pusha loopne or xor mov pop mov push xchg push jno cmpsl (bad) dec cmp das imul cmc lcall or xchg cmpsb cmp mov mov mov mov push cmp inc cmp jmp jae xchg test ja rcr in dec test outsl lds mov inc sbb jge pop mov mov mov into xor or pop push (bad) stos add loop test test xor push (bad) ss or stc (bad) loopne les push stos jno sub aas pushf ret insl pop pusha push packsswb and loopne sbb addl mov cmp movsb (bad) mulb addb ret fcoml stos pop test pusha mov jp incl sub fldenv jge call sub and xchg insl adc xchg mov out inc add sub sbb in jg jp xchg sub sub mov or fidivrl out or in fbstp mov jg lock add sahf lret repnz ljmp sahf es lods mov xchg addl in cmp mov xchg cmp push lods mov jno bswap mov mov push gs lds test inc sub movsl iret cwtl inc jnp sbb push sbb unpckhps xor jo js xor cmp and xor jbe cmpsl dec leave jl cld xchg les ja (bad) pop fld mov enter inc sub dec sub stos push mov jl pop sahf sub push mov movsb push popf test mov rorb call popa jle or jae dec xchg xchg mov push notl push push push mov js mov loope addr16 pop enter icebp add sbb mov les or cmpsl ficompl insl jmp mov insl adc es push aam adc insb xchg aaa fwait pop sub out call push ds loopne lods fwait mov sub test inc in dec mov daa jae popf scas xchg mov jp pushf sub je jl popf dec push mov out sub cmp js add mov fidiv dec jnp ljmp mov dec mov rol gs sub add hlt sbb cwtl push insb lods and fiaddl push sti icebp xchg rorb es mov xlat aam lahf inc loop fnstenv push (bad) mov jnp or sbb stos xor scas mov cli add jo das push (bad) fucomi sub movl adc sbb jle adc nopl std ror xchg jge inc or shr and xchg mov call test js jge movsb movsb sbb cmp sub lcall notb es ret push dec adc push or mov lock push sbb (bad) lods (bad) cld icebp jnp cmp adcb insb fs int3 lods mov fsubs pop mov xchg jp xor (bad) xor int cmp adc jl (bad) pushl and nop and mov ja sbb jnp lcall cmp cmovnp mov add mov and sarb mov jne insb test clc xchg push inc sub mov ljmp adc nop ja mov sbb mov mov add imull pop adc orb pop gs mov fdivrl icebp sbb shl fnop or xchg (bad) (bad) stos mov pop cmpsb imul out shlb or cltd push std and inc ffreep loope jb lcall loopne xor and lahf and das data16 sub ret or jg add stos inc jae scas cld pop pop pop test mov inc popf (bad) xor add mov scas xor pop inc mov stos sbb pop sahf mov or out out das popf pop cltd mov mov adc dec push lock dec stc pop add inc pop or bound pushf mov jo cmp lods push cmpsl (bad) inc aam xchg aad adc dec test in xor test xchg sbb mov adc in ss xlat in into jp lods push leave lret xorb add jno rep add seta mov arpl or dec pop pop mov sbb aas jae sbb dec pop popw jecxz or popf (bad) mov (bad) xchg hlt negl push xchg cmc (bad) repnz test scas cmp pop xchg ss dec outsb jb cmc shlb mov js adc jb insl jl popf add adc cmp jae xchg mov inc lea arpl out fcom sbb repz or and xor add jp or stc rol xor mov stc lods mov sbb cmc (bad) mov and leave jo jne jl adc outsb lcall (bad) cmp or stc mov ror movsl out popf mov xchg pop dec stc test andb wbinvd jle adc mov push dec sub xchg cmp sub jo mov js adc sbb or push lret mov rol (bad) pop lock push xchg test xorb addr16 xor mov adc cmp or daa adc xlat and xchg bound (bad) repz fsubrl loope (bad) jp inc out sti popa addl lock pop jle pop fbld aas pop push pop int3 mov inc mov stos lret sbb lsl in repnz push lds or mov sahf xchg pusha cmp sub cmpsb mov xchg (bad) repz lds and push sbb movsl insl pop mov add sbb orb pop cltd sub mov fidivl (bad) fstp mov sub inc scas pop sahf sbb movsb and jno jns pop outsb jnp and pop dec xchg out sysret (bad) cwtl and xchg adc or shll stos push or clc imul mov test stc out push xor fsubr (bad) jne push arpl sti (bad) adc cwtl jg,pt adcb pop inc pop dec xor lods lcall cmp or mov mov adcb rcll in mov inc sub lock cli inc imul les dec xchg hlt push rcr jecxz push fcomip and lcall fs push (bad) or outsl push jns or jle outsb (bad) add xor fisttp or and xchg cmc rorl pop mov or mov push sarl fstps jl cmpsl add pop cmp enter mov mov dec leave daa es pop or dec aam loopne (bad) repz mov push call repnz adc dec and scas adc (bad) jmp imul mov xchg push push aad ja mov jae fiadd fldt pop andl (bad) dec scas mov lods or adc and out sub cli mov sysexit lds add mov dec js cmp push ficom pop (bad) fiaddl mov inc inc popa popf fsubrs or cwtl cmp addr16 adc pop pushf pop add xchg leave (bad) std sti jl hlt inc fwait outsb and movsl mov (bad) pop jae ja cltd inc mov push lahf aaa insb sub mull xor sahf movsb pusha cmc inc clc roll inc (bad) cmpsl mov adc mov data16 sbb push mov pop cs daa inc dec mov lahf sub sbb test add std inc sub push cmp repnz push mov jge pop (bad) cs jne push daa addl call in jl pop dec cmpsl jb lock in adc push outsl mov insl pop shlb mov mov push xor leave cmp pop inc cmpsl adc loop sub push mov adc out loopne popa int cmp movsb mov sub mov adc fnop (bad) dec fistpl dec fmuls inc push bnd imul mov fs inc lods xor and sbb mov imul cmp lcall mov push das adc or adc insb (bad) mov jb push and mov xor icebp xchg mov sbb or adc mov cmp mov pop sub fild cmp push and js sub rcll xlat add inc sub outsl sti inc rorb lock cld push push sub lea push loopne xchg mov imul mov adc add jmp sbb aas pop cltd sahf adc popf mov sub loopne fmull aad sub js pop xchg testl adc xchg mov cmp shrb icebp sbb (bad) pop mov ja ds and loopne or imul jp adc mov inc cmc jl in nop xchg jle sub jb and into scas pushf push adc and arpl lds or cmp or stos test inc xor pop icebp xchg mov sub adc insl dec ja and mov loope and mov or test adc lods sub fadd mov push mov jg jg pop cmpsb rcll inc jmp bound sbb fldenv (bad) ror movsl subb cwtl (bad) repz (bad) jne lea sbb out dec pop out cmp jno lock out push movsl mov and bound dec xchg sbb xor in fwait lea popa clc cs cmpl test out aad shl in jge xor or sub popl iret jle push rol (bad) hlt or sbb fisttp jge or cmp cmp mov mov addr16 insb daa cld or movsb ret mov cld pushf cmp stc inc bound xchg sarb add dec pop negl test push xorl sarl inc inc mov jmp push stc xor inc mov and mov or mov push push fildl sti fdivrs push dec mov inc sub (bad) fsincos adc cmc fadds xor push dec test (bad) fdivrl sub movsb jne or mov sar pop sub pop push and fsubl push xchg or mov dec negb xlat (bad) xor cmpsb shrb push cmp cmp fcomip test pushf mov jl mov mov cmp lret pop lods sahf sub sbb cmpsb mov icebp inc mov cmp adc inc fisttpll dec bound push and imul in push adc and (bad) jb push (bad) fisub jae inc pop (bad) cmp dec mov mov sub sbb push push dec in scas and xor dec dec lret jno adc pop test add mov push mov jns mov pop jmp xchg int3 insl sub sbb add mov cmp dec out cmpl fsubrp mov movsb or sub sbb sub popa dec les cmp push cmp test mov rcrb pusha jmp sbb xor popa jbe and stos jp clc bound in divl imul lock cs in push or dec (bad) aaa push xlat test cmp jmp jecxz pop fs loope mov xor jg in inc inc fninit push fadds sbb cmp shll (bad) adc std sbb add negl fmuls sahf pop pop scas push (bad) pusha mov jg cs repnz jmp cmpsb push sbb and cmpsw popa push inc add adc cmp jno testb push or scas fmul adc cmp nop cli repnz add push or pop fildll (bad) xor inc adc and mov clc aam cmp mov cmc lods idivl imulb and imul es imul popf (bad) xor or xchg dec cwtl insb jecxz xchg inc adc mov sbb mov or xchg sti xor stos jbe xor es cmpsb inc andl pop mov ljmp inc pop xorb jns cmpl or lods push jbe push (bad) imull and jae push pop cmc dec mov sar ffree jae lods sub jns mov push lcall and leave or mov and pop pop gs mov mov idivl jmp das xchg xor cmp imul mov and rolb pushf xor xchg std add pop popa adc sbb mov inc push mov daa sub fwait jp popa ss sub mov ljmp sbb jbe cltd rorb sbb inc stos mov mov add enter rolb stc jp nop cmc mov cmc (bad) xchg cmp test adc lret adcl fldcw pop lds (bad) dec push andl movq mov add popf mov ljmp fdivr rclb adc mov insl fistl imul fisubl jle jg js lret mov xchg mov rcl mov pushf cmp sub iret adc mov xor jp call into adc xlat enter cwtl (bad) pop push jg pop mov repnz pop fcoml scas scas sub add add adc jno adc mov repnz out (bad) fidiv cli pop jmp mov lret and roll sbb sbb pop ljmp or (bad) fdivrs push outsb xchg sbb in js inc test call and and dec mov pop call int (bad) jae in in sarl insl sub xchg dec sarb je mov jle mov lods and cwtl jne,pn push cmp (bad) mov xchg jl rcrb mov test pop mov sbb int3 vmulsd push pop push ret push faddl in (bad) dec or or insl mov in out scas sub dec in and mov xchg dec js push dec sbb jle fdivrl rcrb xlat cmp shl idivl push push push sbb aaa subb out or loope sbb jecxz test mov mul push dec ds jo lret cs xor daa (bad) and or mov adcl mov test popf xchg jmp sarb mov jle mov and jb (bad) jne adc int3 mov outsb add push push push add jno cs mov push icebp int3 sbb rorb add cmp pushl mov stos pop and cli jge push and mov aam sub cwtl xchg dec enter gs cmc pop popf pop xchg popf xor jb loopne cmpsl fwait add mov adc or ja mov hlt repz ss (bad) or xchg lea xlat lods jbe les or xor mov lret and sub clc je mov loop mov xlat inc push jb and mov mov (bad) mov (bad) fistpl rcr jne out pusha sub out mov mov xor jge inc fwait push pop jge fmull bts andl pop jle pop rorb sarl push (bad) outsl add movsl xchg (bad) repnz jmp xchg mov popf xor fs cmpsb movsl cmp sbb and xchg fisub jns mov jne scas lea dec cld jmp adc stc test xor cmp repnz mov sub jnp mov in leave mov adc push or test ljmp (bad) pusha sub (bad) stc pop push push push aas fwait decl or popf xchg cltd jne (bad) rolb xor (bad) mov sarb xor adc or fdivrl xchg sbb in sahf jp leave gs pop inc add movsl aaa mov mov mov bound adc xchg mov stos stos hlt jl mov shr cmp cmpsl call movsb fadds add push lock stos push test xchg xchg idivl lea or push push mov mov ja add pop push pop popf (bad) ss (bad) mulb rolb jl inc psraw (bad) ja fisttp nop xchg dec push ds clc xlat push mov fldenv fidiv roll adc pop mov popf int3 loop pop dec jmp inc sub popf call out into inc enter mov enter rcll pop fdivs cmpsl sbb scas add jae stc pop out add pop imul inc cmp jmp mov jae sub push jae loop loop inc fistp jmp cli jg popa je mov sbb xchg daa mov nop lahf lods jge cmp div mov lock call leave loope cmp or mov fmull ljmp outsl divl push jp fcoml insl fwait jmp jl cmc fdivl xor jge push mov add fnstcw xchg sub inc in icebp xchg lea mov cltd mov stc sub xor xor (bad) xor fldt add pop icebp xor cmp mov add push stc sbb sbb scas (bad) add (bad) leave loop inc xor pop mov lods xchg lahf mov inc dec insl add sbb in sbb pop notb mov fwait je xchg arpl dec mov cmp jne inc pop das jle fwait lcall insb lret sub pop adc sbb mov sbb add sub test enter pushf jb out push add inc xchg sub in xor pop out mov daa lods dec arpl jle stos xor inc sub xchg jmp sar ret mov sub cmpsl lods stc gs scas addb int3 add aad ret cs adc lret jle xchg push pushf push dec cwtl sub cmp inc add push divb adc (bad) xor sub jae loop fwait inc mov sbb pusha (bad) pusha fisttp sarb cwtl or dec stos add pop aaa pop inc mov sub dec popa pop cmpsb ret iret ljmp or dec and mov push outsl loopne (bad) jbe jns fwait cs lahf cmp cmpsb fdivrp ret icebp mov outsb mov test scas (bad) pushf mov inc (bad) repnz push and stos outsl inc xchg outsb repnz push test add jg and jnp xor push cmp cmp mov ret jg mov xor jg cmp (bad) jle mov stos test daa or movsb inc (bad) sub (bad) call in or out add fs (bad) jge pop push cmpsb cmpl inc add adc insl xchg add (bad) xchg outsl adc dec mov les arpl mov xchg xlat sahf fsubrs in popf mov stos jecxz nop lret pop rorb add sti dec ja insl (bad) je movsb shrl fistpl mov mov insb xchg xor inc and sub inc mov and lods mov mov adc sbb inc bound sbb movsl mov test add subb mov mov stos nop int3 lcall pop popa push cld jge loope repz mov sub (bad) cs xchg inc xchg out stc sbb test mov repz sub daa dec sub sbb xchg jmp push (bad) (bad) dec dec mov mov xchg rcrl mov movsb mov in push cs sbb adc add pop and fidivr mov pusha inc adc fcomps mov push jae jb mov insb jl fistpll jno mov jnp cmc mov pop jb loope lods fadds sbb icebp cmp adc add outsb xor xor jl mov in xlat or jp int3 mov stos or data16 int cltd je pop out fldt test jg popf push mov xchg imulb das mov jmp sbb mov rorl sub adc inc inc sub jecxz inc xlat outsb nop fs xchg cmp and ljmp fbstp repz notb add push into jns push xor scas cli jo mov movnti fstp sbb rcr ds jo inc jno mov pop inc into data16 das push add cwtl fist mov or jb pop bound or sahf dec test in dec lret mov and mov push imul xchg cs ret jp push pop dec sub xchg lcall push arpl loopne xchg lods mov pop mov fwait sub jo mov or xor xor jp mov imul push sbb mov outsl aaa mov out stos or push and out (bad) jg inc mov jmp mov mov pop cmp jl push sbb xchg mov outsl cs (bad) pop inc loope push and dec lahf xchg loope (bad) repz inc cmp sbb mov out sbb gs push inc stos insl add sbb xchg mov movsb pop insb mov (bad) push fistpll ret mov sahf lret dec sub mov push lods mov sbb hlt data16 outsl fldenv das lret aad ss jnp xchg push cmp push cltd pop xchg xlat pop cmp add cmp xchg cmpsb jg mov adc add roll cmp mov lods (bad) lock hlt insl xchg bound out xor repz sbb fisttpll (bad) loopne fdivs mov pop lods stos sub push dec mov rolb aam add lods addb mov lds fsubrs cmp sbb outsl andl xor pop sub inc loopne cmp add lret cmpl add push add xchg inc out gs insl add les jns cwtl imul dec push lods aad push adc cmp pop lods movsl mov cmp xlat xchg les dec mov or mov outsb (bad) mov mov mov (bad) std fild fmuls cmp decl pop pushf dec jne jae outsl cltd fcomip push in scas push cmp pushf jecxz in shr loop mov dec leave and (bad) or cmp pop jo and int cmc sub xor popa popf dec pop fs orb jns int3 scas add mov cld ss jo xchg popf push cmp mov pop fwait mov outsl xor out sub insl inc jns adc inc mov and clc inc insb pop rcrb out pop test mov sbb mov ss xlat and inc mov cmc adc sbb pop aad jl popf outsb jecxz xchg cmp fadds fildll out shlb popa ret pop and mov aam pop mov fistl sub scas ret xor sub xchg cmpsb adc rcrb dec in jne fwait fs hlt sti jge icebp into imul lret add adc icebp inc or inc adc mov cmp icebp and push mov fwait adc scas inc inc stc out sub pop or and fs cpuid sub mov jb adc xor mov cmpsb mov subb jge pushf inc add jbe sahf lahf in test xor js test aas mov sbb ficompl sarb cmp push or adc sbb mov add jb adc lock mov enter pop sbb fmuls inc insl mov rorb jmp stc jmp out xchg xchg aaa mov or das inc cwtl ja lea sti push xchg rolb push test pop js jg test xchg and xor dec lcall adc add in std fbld (bad) insl stc inc mov nop in and mov or test hlt mov jmp int adc mov rcr dec adc in pop (bad) xor mov push fstl and push fwait imul pop ss push fbld sbb movsb aaa xor adcb xchg xor fdivrl cmpsl xchg or (bad) aad xchg rclb sbb bts stos xor out stos wbinvd xchg ret xchg pop add addr16 outsb movl mov sahf stc xchg scas out (bad) cmpsl int3 insb and aaa cmp adc push cmpsb imul and sub and mov incl mov into fimull out aaa or imul dec rorl test mov fsubrp pop push out bound inc sar pop or adc or pop pop xchg push pop (bad) mov into xchg push out imul inc sbb cwtl ljmp call adc in xor push cmp jno clc pop lret sub jp les cs stc push mov add adc clc jae push sub cwtl hlt xchg mov icebp psllq xor inc and lock ret jnp mov jno mov sub sub loop pop and data16 inc (bad) repz pop push push sub add fisttpll js popf pop adc in add fdivp sub push incb mov loope pop cmp mov mov mov pop mov movsl mov and lods sbb and cli cmc mulps mov and cmp or fbstp addb lcall inc movsb imul add pop lret mov test jl adc push out jle aam dec xor aas dec in int3 loop pop sbb or imul call pop fcomps mov add into mov lods ja cli fwait sti loopne shll xor lcall xlat pop ficom xor xchg adc arpl push movsb into adc cmpsl arpl or enter out mov xchg dec ret mov sub jmp fdiv jecxz inc sti mov inc lahf in idivl xor cmp fldl cmp mov xor xchg out push notb ss mov jl push pop and cmc mov cmp xor jae pushf mov int lock jg jge inc mov cmc lret imul (bad) xor lahf stc cltd arpl int3 icebp push mov push (bad) pop fadds popa jno inc inc xchg fiadd (bad) loop sub data16 cmpsl stos xlat jbe lods outsl loope,pn sahf outsl mov xor lea or test sarb dec sub mov sub xor inc or xchg mov fimull xchg popa and adc les sbb (bad) push es mov or push sub rcll pand fs ss ret and xor fistp inc (bad) sbb loopne popa mov or leave call (bad) jbe fwait lret fdivrp mov mov sbb xor jl cmpl fcmovbe and pusha leave or outsl mov not xor sbb pop add gs rcrl (bad) mov sbb cld (bad) adc dec sub or (bad) ficoml pop pop jmp icebp push pop inc push mov jle xchg cmp sub lock insl mov add jns rol jl (bad) shrb jp add fwait push dec ljmp inc popf jbe cmpsb shll lds fldt push xchg in jp lock cmp je loope mov imul inc sbb mov and mov sub push movsl out sbb mov int or aas ljmp xchg (bad) or cmp es in aas or scas lds push adcl aad mov mov lds jle xor mov add sahf icebp frstor es push repnz mov xor fs ss xor lock scas pop push pop bound xor lods call in push sti bound (bad) sub int (bad) jmp nop das and xchg pop jns stos daa scas and and addr16 adc lcall (bad) and fwait movsb (bad) xchg test bound in enter jae (bad) push stc and xor movsl adc shl sub js fistp cltd add aaa popf jg pop mov mov sub leave cmc decb stos enter mov icebp loopne and sub push push xchg inc sbb dec repnz dec mov cmp push lods lds push iret mov push sbb out outsb xchg mov inc push out frstor popa inc cmp cmp mov inc int3 dec sbb pop xor sbb cmpsl xor fwait hlt fdivrl xchg sub fiaddl imul and adc daa ficom sahf jne and scas test shlb jne jae in pop cmp iret mov popf jb push inc insl jae dec lods sbb out push xchg or fwait dec xor mov aas dec xor les adc out jae int3 test bnd dec inc aam jp mov mov jno jnp mov dec in sub fisttpll ss add adc pop negb jb std fildl dec push pop adc and lret pop jbe sub fstpl inc push and push push outsb jle andl cmp xchg and outsb aas mov xor test jge inc fs addr16 cli imul imul lods in fdivl data16 jmp (bad) mov in jge (bad) mov arpl das cmpsl pop mov cmpsb cmp scas adc daa jecxz sbb notl ja (bad) jne fcmove add or dec cmpsl xchg or jge push jb mov and inc xchg dec js sbb mov (bad) sbb xor fldcw bound mov push repnz data16 adc (bad) loop xor mov data16 push ljmp cs pop repz sub pop nop loope mov jne push or cmp sub movsb or dec or repz mov fimull mov sub sti mov adc cli and (bad) xchg xor mov push mov vandnps sbbl fild add mov stos pop loopne xchg lahf lcall test sbb cmp dec sbb movsl loopne pop mov div outsl loopne mov sbb xchg pop mov mov nop inc fstps pop fisub scas and push jge mov sbb dec xor push mov pop mov scas popf pop mov (bad) cmc jb aaa call jne dec int lret (bad) fdivl adc xchg (bad) iret lret push scas pop daa es nop aas lret inc xacquire sub inc push pop lock sub inc (bad) out cmp pop ss pusha imul cmp scas loope pop push movsb inc insl and mov (bad) fimull sbb sbbl cs mov (bad) mov (bad) sbb aam mov sbb jae,pt sbb out jns shlb inc pop adc mov and mov pop push int3 or fdivs das push mov xchg mov dec and xor (bad) cmp push (bad) in repz ret jecxz xchg inc fwait push imul sub jecxz xor lahf cli adc out xor push (bad) xchg push cs int3 dec aam inc popf sbb jnp aam into xchg aad sub sahf cltd sbbl and pop cmpsl or xor lock rcr es call pop jle test fsts (bad) je jns out cmpsl fistl ds jmp jecxz sbb sbbl (bad) mov and les clc mov dec jbe sbb push loope jg sbb (bad) dec fbld mov stos (bad) (bad) xchg pop repnz in pop dec lret (bad) in pushf test mov cwtl cmp imul or lods test mov outsb jae cwtl push adc lcall inc inc mov sbb sbb stos sub mov mov xor mov lahf push outsb aad int lret pop mov mov inc or aas pusha mov fsubrs (bad) push push xchg movsl adc test push lods imul xor getsec xchg xchg stc adc cmp enter adc es int3 lods call les pop movsb dec push sbb jg das jno ret ret out jp ss mov aad push adc cmpsl cmp icebp cltd xor adc xchg or leave cmp adc add inc or loope push notl cltd inc fdivs push or cmpsb mov lock inc xor aaa adc cli sub inc pop mov lea cmpsb xchg mov xor push cmp jae aad into (bad) mov hlt inc fsubrp inc mov inc add cmp in pop in jno and dec sbb xchg sub inc mov add int3 stos adc sbb aaa cmpsb xor cmp fbstp lret fadd inc mov xchg push fidivl pop push mov mov xchg jo jbe push jb ret adc sbb mov xor cmpsb stc cmc shrl leave sub lods sahf inc mov add int dec dec (bad) arpl xchg aas mov xchg lret mov jb shr dec rorl mov (bad) mov adc add fmul pop mov add lcall xchg dec aaa pop lock mov data16 mov pop test cmp add jne sarl (bad) xchg sbb adc imul pusha pop mov loope mov cmpb push xchg ljmp sbb aas push lods sub mov mov inc mov pop cwtl test in cltd push xor push add jne test xchg jne mov jl lahf imul push cltd mov xchg rcl cld sti xor add ret mov and or sbb stos inc pop xor (bad) mov xchg pop dec mov std mov movsb sbb mov out adc xchg mov and and fucompp mov add mov cmp out lds out inc dec mov sbb dec movsl push test push loop fisttp jno scas in pop pop sbb fsubs leave adc (bad) notb loop sbb inc jnp sbb add cmc (bad) das je push pop inc and push fwait xor push mov xor (bad) cmp push fimull add mov cmp cmp or mov test aam sbb sbb push addr16 push pop add shr outsb inc addl decl rclb in mov jno cmp and jno and dec repz sahf mov sbb inc mov lds out cs inc outsb int3 and pop jmp pop sbb push cmp icebp sbb push cmp pop pop in fisubl xchg cltd adc xor rolb ljmp inc in or jnp mov es jl sbb push pop mov pop inc icebp push ffree (bad) ret loop out roll mov lahf ret pop test pop jae pop and xchg dec inc push inc mov (bad) ret adc add test pop add xor loopne (bad) mov scas aad fisubr xchg jne push sbb daa push imul lahf jle out adc or lods stos mov leave xor push out (bad) lahf xchg cmpsl mov lret dec cmc pop ret (bad) int fdivl (bad) mov inc in lds outsb stos andl sbb out enter bound dec out pusha in es (bad) jp sbb leave and mov mov std stos pop inc add fnstenv xlat ds out add xor dec mov xchg xchg scas adc jne mov les dec test es (bad) pop dec pop out dec ficoml xchg iret in inc int out inc das sahf aaa jge js push mov jmp mov dec dec out test popf imul and and inc inc mov stos pop inc mov out test cmpsl jo push mov (bad) lds mov stos or push (bad) pop fcom aas add ja xchg or pop mov fs int out sbb push and jno sub nop addr16 adc pop sub arpl test add or pop dec xor mov jb jae mov mov sbb mov call ljmp mov aam mov push cmp inc (bad) aaa and pop cli jl gs sub popa pop aaa and inc adc test test sbb xchg push pop add add scas push icebp lahf mov aas xor push enter mov stos jge xor mov xlat mov fnstsw add xchg aas test sahf int jle fimull mov sub pop sbb lods inc cmp data16 dec or stc push popa lock lahf mov rolb xchg and jns jle ss pop mov xchg outsl icebp aad cmc xor ljmp and fstl xor and xor fisttpl pop add pop push mov mov cmp or push lea xchg mov xor jp lret in movsb imul pop jb add pop pushf in cld jle les adc pop mov pop mov jns adc lock push pop jb fldenv das xchg fist movsb dec add pop adcb dec inc movb mov sbb call pop dec leave divb mov jb mov cmp sahf add leave inc fisttp addr16 rorl rolb clc daa bound push mov fistpll xchg jle fmuls or ja cmpsl jno push jge push pop pmaxsw mov push dec push out mov inc add (bad) lcall mov outsl or pusha cmp aas push lds fsts shr and ret das jne into jle cmp lcall push push or sub inc add jno push mov loop jne int adc jno stc xchg sub cmp jno add mov imul test imul push xor and pop bnd and ja push xchg mov sub adc lock (bad) outsl leave les jno loope ss fdivrs loope fistl or into and dec rorb sbb and cwtl jne xchg push scas or (bad) mov jmp shlb mov sbb mov add addr16 cltd xor test push test inc push loopne cli into adc pop cmpsb mov pop scas nop sub push scas (bad) outsl cmp cmpsl inc cmp (bad) jp aaa stos mov mov outsb test inc cmpsl push adc or mov xor mov add rcrl imul dec push mov xorb sbb enter push cltd sbb inc jl call incb push xlat (bad) and addr16 xchg ds popa xchg js xchg cmpsb into les ljmp or push mov add xor mov arpl add sbb xor xor inc jmp mov mov sub pop xorl orl cmc adc cmp adc push fdivrl lods iret sbb jo mov pminsw (bad) dec mov mov add inc mov mov imull sbb imul push lock ds mov jecxz push mov pusha mull jae addr16 inc jnp daa mov dec mov scas jns or ljmp jecxz out add push mov icebp mov gs jge dec cwtl rcll mov in gs subl (bad) mov (bad) xor cli adc test cmpsb (bad) jne cmp aam andl dec inc lret push test jl mov push push gs push cmp push xchg (bad) fnstcw loope,pt push cld xorb lods sub aaa pop icebp sbb jns aad sub and mov push dec popa and lret lret out mov repz int add scas jns and xlat or out pop ror pop dec mov outsl xorb test xchg push xchg imul xchg and test pop sbb imul adc mov add jb ss sub dec push xchg sbb (bad) scas mov loop arpl push out lods add dec stos add sub dec sbb jmp lods push adc loope mov cmp fldt jecxz inc lea mov sahf xor test jo or mov mov test icebp jb mov test seto cwtl out out scas add std mov and test aas insb std loopne cmp insl sbb stos imul repnz xchg insb jl mov mov dec jmp lcall imul leave je insb inc xor push mov dec das repnz mov lret sub fcomps pop sub stos in sbbl xorb cmp or inc aas jge,pn inc xor (bad) lret push and jmp sub lock test bound inc mov fisub push (bad) mov stos mov arpl mov leave cmp or jg mov xor int (bad) pop jle sbb mov sub popf or or cmp icebp lods ret fimul dec push mov loope iretw jge jne inc mov add fnstsw mov addr16 pop push mov push jno shrb out push lea test mov pop or add js mov rorl out movsl push nop (bad) xor enter movsl mov jb xor push stc ljmp sbb and fisubl pop sbb jns (bad) mov jmp imul mov cvtps2pi sahf mov sbb xlat adc xchg xchg xor sub ljmp adc lret add je addl lds push dec dec out or fidivl imul out orl mov iret sub rolb enter jmp jge pop cmc cld les sbb repnz jg push loopne lret adc pop pop add aam ja out rcrl mov pop adc xchg push loop xchg fidiv (bad) xchg pop sub mov pushf pop popf pop pop aas ret jae imul enter sbb jne (bad) mov imul cwtl or fdivrl in pop mov movsb mov mov lret ljmp mov inc cltd insl scas fnstenv test popa inc push xchg push sbb pop and sub and mov and cmp push and jmp int test sub mov xchg jae sbb xlat hlt jp jne cmp jl,pn sbb sbb mov adc int pop int3 jbe pop add sub pop xchg add pop out mov push sti and loopne into dec pop bound mull mov mov popa inc fsubrs (bad) sbb sar stos push mov call (bad) mov lcall inc add (bad) mov fwait dec push lcall ja (bad) xor nop insl jp jns jp insl pop mov imul push and mov sub int3 lock push in mov (bad) ficomp mov sbb jb jmp icebp imul xlat dec ret pop in sbb sbb dec cld (bad) fldcw push pop cli adc psubusb mov dec adc xor out js and pop std pop sbb test movsl push les rcr lret xchg mov pop lods icebp icebp cmp sbb in mov inc or das add pushf stos mov sub ja xchg cmp int xor jb add pushf push test fs insl mov fs push xor negl (bad) lods ja push sti in lahf sbb xchg add cmp cli sub mov mov loop sbb mov imul adc sahf sbb inc cmp mov sbb jb andl dec adc dec lret xchg mov into ds push and pop sub xchg mov mov in movntq cli adc inc pop pop push iret or xor lret xchg inc cmp xor xor dec sub jmp mov push mov mov jbe addr16 and test lahf push rcrl sbb test mov (bad) stc push mov jle cmp imul fwait scas sub cmp enter ss lret cmpsb push xor sti push aad cmpsl (bad) sub mov sbb (bad) nop cmp arpl mov divb add sub mov js mov pushf out fcomp scas mulb xor and xchg mov pop dec push or je ds mov loop insb inc cmpsb stos dec sbb enter pop mov jnp or insl and out mov xor or mov fsubrl sub add repz enter and push add stos or mov or fidivrl jb jge lock movsb (bad) ja iret cmpb sub mov negb mov jb mov imul push inc sbb mov shrd out push mov cmp sahf aam test xchg movl mov jnp fdivrs lcall mov shrl or insl mov push dec and movsb sub int jmp movsb mul xchg adc outsl mov or cmp pop push sub in ja addl jle cwtl add ss add loopne loop or jno jo lock in adc pop outsl add mov iret lods roll inc xlat xchg pushf sub add pop loope and test and adc ja xor jp push xchg fcoml adc les insb outsb sub sbb add pop push (bad) xchg ljmp fldl2t push cmpsb sti stos ret push dec cmp inc xchg out mov xchg add lea or aad fdivr adc inc dec stos popf fcomi pushf jnp xlat gs cltd out popf add in or inc in sub jae scas add sarl cmpsl xchg jle in sub pop push pop je (bad) hlt lret out rclb in je outsl pushf lret call jns lods and and cmpsb xor cli fsubs cmpsl push pop mov add das add rcr push ljmp loop push roll jmp repnz loopne sbb adc and jb (bad) repz imul out out clc ret adc inc and scas add arpl js adc cld xor popl es or add jle dec push in movsb push dec (bad) testb mov push inc enter mov (bad) inc inc dec mov sub lods mov mov lea and jge sbbl lret mov in lahf add iret in fistpl mov lret jmp and mov cli add or or xlat fbstp inc inc and xchg loop mov sub out xor mov (bad) fldt push or push mov sti mov lock mov arpl lret cmp lds bound les out and dec sub popa std fwait je cmp xacquire adc sub mov popa adc les nop je mov adcb push mov test mov jle dec or aas adc rcrb sub jo mov add push push mov cmpsb fdivp popf dec mov les shr sub das mov int3 and cmpsl cmpsl nop repz dec icebp js fisubr inc stc lret mov pop scas sbb inc pop xchg (bad) or cmpsb adc push cmp mov xor sub inc dec out mov mov outsb in leave push push movsl sbb out out mov (bad) shufps int inc push pop ljmp mov mov inc dec popf dec mov inc addl (bad) pop sti mov jnp ss mov pop out cmp dec adc int pop gs mov mov addr16 sbb inc sub cli pand push stc add stos sub xor jnp daa fs popl or out out adc cmp jne and mov out movsl subb rcrl loope enter out in nop mov pushf hlt inc cmp outsb je call mov push addr16 jnp or inc lods or out mov ja jnp sbb out inc jae loop fstpt add or fcompl ss mov mov (bad) leave mov iret clc jmp mov fisttp inc mov push pushf aad mov int (bad) aas mov mov nop das (bad) mov aas ret fsubs (bad) cmp mov inc lds sarb inc inc push lret inc sub addr16 movsb mov mov push mov fs cli sbb hlt xor stos pushf push push cmp dec ret js and mov leave lock hlt mov fistp jnp lods pop sahf aad add sarl daa aas sbb mov loop jl lock inc scas xor lret and (bad) xor rcrb push mov xor lods lods push inc mov fs mov ja pop add lea pop mov cmp sub std ret dec sub scas test dec addl sub mov aam mov jp das dec push xchg mov in into add repz cmc mov pop xchg mov mov mov nop inc dec das into xchg adc ret cli int in lods mov sahf in pop sahf daa push sub in mov xor push sbb xchg pop addb fldenv inc push inc add cmpsb sahf and scas pop cmp test imul push std gs cltd mov sbb inc push mov jbe movq inc imul dec mov enter lock divb pop dec lds inc (bad) jae push push cmp add xor cmp sti iret arpl sub push adc cmp inc pusha cmpsb mov flds jno pop push xchg or add sbb pop mov dec ror lahf ret fildl sub arpl sub inc sub xor sub fisubr dec pop test fnop aas pop loop outsb pop je dec push and add inc fs fmul jbe aas or es mov popf and sub sysret out (bad) lods jo xor popf cmc dec jo leave and js aam aaa push sti es or mov pop hlt mov (bad) arpl lahf jne mov jnp adc dec cld push and js add aaa addr16 (bad) cli sarl (bad) ljmp sbb push leave rolb sahf push add bound sbb scas icebp pushl lods ss loopne aad xchg inc xchg enter flds rorb pop mov ret popf mov cmpl xor inc sbb lock loopne sbb lock mov dec mov jbe and mov lods sbb daa fwait sahf dec adc arpl das aam fldt cwtl push xchg cmc insb adc add push aam push mov cli cmp stos les jnp push inc mov sbb adc mov aaa dec push inc clc fsubrl ret push iret pop cmc push inc leave xor inc jae sbb mov fiadd (bad) sub or mov xor inc je adc or call and call mov push push add mov xchg mov hlt cmc sbb sti mov cmp loop sbb or clc cld jne push sbb or mulb cmpsl add aas or mov rcll ret aas xchg mov xchg loopne lahf add call out mov repz fcmovnbe out or icebp outsb mov jbe sbb leave sarb jo xchg aas movsb adc mov xchg mov adc jmp cmc push jecxz push cmpsb adc and push pop mov (bad) lret jecxz add loope jp or mov (bad) inc jnp test mov (bad) pop cmp insb int3 int xchg xchg lods inc jb dec insb inc inc add jge xchg adc fwait mov sub or jns std or sbb fisub loopne pushf ja sub in or icebp xor fdivs enter sub sbb sub out leave mov add jmp inc xchg ds push push leave cmp fldl push stos or cmp adc jmp mov ficomp flds xchg adc mov push cli adc daa add mov pop addr16 scas or push sbb je imul jnp mov or stos sbb cmpsb test mov jnp leave aad daa add mov cmp insl xor mov xchg push xchg push jae dec (bad) pop sub sbb idivb data16 shr stos popf jp adcl mov repz jp fdivl mov add rolb out int mov addr16 js iret lock dec fcomp xor cmp dec daa cpuid cwtl pop test imul rorl in int and cmp pop lea popa (bad) testl scas xor addr16 fnstenv aaa negb sbb xor sahf xlat jmp mov inc inc cmpsb enter stos gs in add fmul dec jns pop mov mov push (bad) add xor adc sbb aaa outsl jno fwait in daa popa add hlt idiv leave loop (bad) daa shll lock fnop lods pop and xchg adc es sub aas add adc bound inc int or sub pushf cmp xchg pmaxsw jbe out sbb sbb aaa hlt in pop mov xchg xchg cli arpl push fdivrp (bad) es into call popa ret je add js push dec mov sub dec cmp test fst mov inc mov or lahf out mov into mov repnz mov mov or aas aaa jecxz jg frstor aad cmpsl sarl adc fsts je rolb or inc aaa mov sbb pop lds dec mov enter push pop clc enter pop dec adc or fdivr mov pop cmp dec sub cmp ljmp iret rolb jne and nop jge inc scas adc into rorl inc fbld outsb ja xor movsb xor (bad) in pop (bad) mov jnp loope cli pop outsb lea adc fidivl adc inc aad popf cmp xchg pop aam imul push (bad) sub dec push int3 jecxz sub xchg mov inc push movsl jg xchg pop dec sub addl out fwait jbe loope push mov xor (bad) mov imul sbb jb xchg loope or mov mov addr16 cmp out lds xchg mov lock fcmovu loope sahf ljmp in jne es (bad) popa flds mov pop in aas mov mov sarb imul dec mov cmpsb mov sti jl jno mov mov dec jbe push add lds cmpsb (bad) or jo push inc repnz adc sbb xchg stos test xchg test cmp add loope,pn lret arpl cltd mov pop add gs (bad) in push (bad) sti cmp push rcll (bad) and ljmp fmuls scas test mov inc push test sub xor or mov repz dec add pop aas aam adc sbb mov sub or adc int test lret scas cmpb gs dec jne inc shll and or cmp rol cwtl pop and push aaa inc sub push mov cld aam es xlat fisubl enter bound test call mov xchg jnp fldt adc pop adc (bad) mov iret push adc adc mov xchg jae int js xchg xchg or (bad) jl in sub sahf (bad) mov fnstsw (bad) int3 sarl test push and les pop sbb (bad) scas out push lcall adc xor cmpsl mov sub in mov push (bad) mov pusha fsubrl dec cmp mov in shrb dec imul repz pop or loop adc pop stos insb lcall push les js rorb shrb pop push xchg das (bad) int push jle xor pop mov call adc push incl sti push pop sbb data16 mov cs fiadd xor gs xchg neg clc pop leave cmc (bad) gs pop cmp in mov cs repz mov (bad) jg xor and pop jnp adc ja aad sub xchg mov inc mov xor fmuls add dec mov pop dec ja xchg out outsl lahf push mov inc mov les (bad) push loope inc xchg movsl out stos adc les mov adc sahf mov fistpll mov xchg std imul push insl push popf in mov stos and (bad) lea cmp insb enter mov mov mov scas ret lgdtl add dec and pop jne cli or js xor adc (bad) cmpsb imul mov into repnz xchg cmp sub ds leave push xchg call mov pop jg or xchg jne shll inc movsb mov aaa aaa or jns jl push rcll adc inc xor mov mov cmpsb mov jns pop adc sbb clc imul imul popl and rol mov stos imul adc pop mov inc cld adc jmp fidiv xchg dec nop xchg cmp test jmp test repnz push pop loope shlb xor jmp ret ficomp or mov les mov push mov push adc or push mov in es fldl sub sbb push lret and shrl rcl punpckhbw test mov pop sub adc stos add push add out fwait mov sub push std dec repnz (bad) jmp icebp and movsl sub jecxz stos inc push jl push push fisubl adc mov dec xchg cli imul movsl mov sti jno stc xchg mov sti ret aad lret lods push adc fildl fmul mov test xchg leave rorb xor bts pop jge jno arpl push dec pop pop mov xchg adc jl aaa mov lret mov pop stos dec fwait test fsubr pop sub dec push movsb jle test fild sub fs psraw loopne xchg ret imul xchg outsl insb cs (bad) adc fcoml add outsb push popa pop cmpsb or loope and cmp hlt push and fsubl movsb out bound jo movsb test sbb repz adc (bad) into add subl lods sub outsb in xor push movsb mov adc jne mov test jmp jns pop inc pop mov sbb dec cmpsb xor pop jnp cmpsl or adc imul arpl mov hlt bound xor mov nop lods (bad) mov in sub mov test mov out xchg mov int bound add outsl and jnp add loope cmp (bad) test enter sbb adc aaa outsb movsl divb adc js cs cli pop sarb jbe fsubrs mov (bad) xor jg outsb push push ja push arpl fisttpl out xor mov test insb dec (bad) aas lds jmp dec popf dec ret xor shr scas push popf imul shll int3 loopne dec jb rcrl jmp cmpsb xchg int out cmp in vmovntdq inc fnstsw daa rcl fsubs or push out mov popa cmp inc mov icebp icebp jmp and sub jbe dec cmp cmp hlt or mov into std sar xchg cmp adc xor cmp iret subl (bad) enter xor daa lds cs mov (bad) fnstcw and jb adc arpl stc inc stos dec ret mov mov outsl (bad) or aad sti mov xchg jecxz test (bad) push jb adc and ret (bad) je arpl lds orl in (bad) repz negb das cwtl andl xchg add mov pop int adc ret mov out cmc hlt pop lcall popa int3 movsb xchg mov (bad) movsb les (bad) sbb sub adc repnz sub lods sarl fsubs inc cmp aaa cli and pusha mov and push mov pop div adc push sub je ret stos jecxz cmpsl in fdivrl jl lds sbb jne int3 mov gs rcr rcrb gs lret lock adc in aas test lods cli testb in sbbb or les xchg ret (bad) mov and gs (bad) lea jb loop sarb insb jbe or (bad) mov push call out mov (bad) and xchg popf int3 pushf mov xchg ss or scas das pushf es ljmp mov fs xor loopne sub pop xor dec xchg push inc mov ja mov aam cmp jl xchg mov pop jmp out mov clc mov cltd shrb cs lea sub repz add xchg ss mov push subl (bad) mov mov inc outsb mov dec sub ljmp mov in es lods jge mov je (bad) jbe cmp mov xor mov inc scas xor jno out jbe outsb fildll popf pop ret sti mov sbb jge xor mov lods mov or sbb insl adc xchg int3 cmpsl outsl ja loope,pt mov aas jnp int3 cs repnz push jmp lods xor xchg mov imul in int add mov adc fidivrl fisubl jbe xchg (bad) shrl push cltd pop ljmp add cmc test pop add mov (bad) xor mov xchg pop mov push and xor out ret movsl cmp hlt inc cs mov repz lret pop dec (bad) movsl jbe xor lods shrl imul xor or stc push lds addr16 fnsave or dec or (bad) (bad) cltd into xchg (bad) add push popf leave sti aas fidivr test pop cmc das inc dec jae sbb pusha call adc add out mov pop inc repz or adc fs iret inc xor push sbb mov adc inc je test stos testb sbb mov lahf clc ss fistpl leave rcrb movsl aad push int sub in sub or mov repnz cmp stos or and xchg or std push mov cmp pusha push mov cmpsb imul inc adc xchg outsb ret xor xor or cmp test cltd fiaddl jp sarb bound dec inc fisttpl (bad) stos loop popf adc mov inc sbb mov add lret cli das lods loopne or les imul sub dec or mov push mov fstpt sub pop cmp jnp sahf stos cwtl outsl data16 mov pop (bad) sub pop mov jp pop mov cmpsl inc sti add cs icebp pop push sub aaa add fcoml and jo lds icebp cmc test popa jmp in bound pop push rolb dec add scas dec or ret (bad) movsb call je imulb pop pop fwait adc pop xchg movsb les sahf inc xor adc rcrl lock nop into ljmp add mov das sbb xchg scas es insl movsb push xchg or jp stc fcomip arpl insl pop adc test popa add pop sti adc cli push push test push sti out or sub jg mov dec les aas push shlb mov dec lods xor jae (bad) push mov (bad) out and (bad) out push lods cmp insl daa pop cli loop pop loop repz jb jne mov into iret lahf lahf aaa mov add fstpl sbbb pushf jne in cli ds xchg (bad) js stc ret jae jl mov and loopne mov sbb sub pusha jae bound inc lcall cltd or adc add sbb jle orl (bad) sti sub push stos unpckhps sbb cmpl lea std or frstor imul and (bad) add push pop add sbb mov mov or xlat inc push scas or popf aad (bad) fidivrl add mov (bad) std inc movsl call dec add clc ja lods cmp sub pop (bad) int3 repnz int jecxz ja adc inc (bad) ds mov push or push pop shrb movsl in fidivr cs push (bad) cmp ds lock push ja (bad) mov jne movsl ds mov cltd mov sub shll (bad) je mov pop cmpsb sub mov imul sbb inc in mov test inc lcall mov mov lods cwtl xchg lods fnstenv mov fs cld cmp push push arpl or leave loopne inc inc cmp push add jecxz out mov rclb cmp (bad) sub stc and cwtl icebp xor lods ljmp xchg jbe movsl sbb jno pop cmc jmp fiaddl add jo sbb push mov jnp sub sbb jne std push push aad pop (bad) lret mov gs shll jbe jle push inc push xchg in into les inc pop loop je test das add dec pusha test arpl jl,pn mov push stos test das mov mov push xor divl or scas ljmp popf test icebp pop daa jbe jo inc inc jb adc lret pop (bad) mov int dec mov adc dec xchg scas shrl fwait addr16 sbb add fcoml jo call lcall mov and push mov xor jo das xor push (bad) in insl repz pop and jge or jo or bound imul mov mov xor enter stos sbb mov hlt stos fiaddl (bad) cmc mov in shrb and addb adc adc push xlat pop das cmp cli adc mov fucom mov stos scas les mov sbb test lret data16 dec sarb pop loope fwait pushf int inc jb mov gs dec or into and ret xor mov xor mov push test test cltd (bad) stc (bad) arpl ret sahf cmc cmp fs ss adc addr16 xchg dec sub popa xor pop lcall adc out or (bad) mov lods dec jl rcl inc out (bad) push or mov mov mov (bad) adc ss leave scas sbb push adc aas or cmp ja jae cmp mov xchg jp insb xor fnsave ret (bad) ljmp es cli ja es dec cmp repnz rclb inc pop inc add das dec cld (bad) mov rorl xor cmpl aad inc inc pop clc jns xchg xor cmpsl adc pop es inc js or test push xchg (bad) xor push pop mov aam lret jecxz in pop psubsb ficomp mov iret fidiv scas xor inc push mov or fdivp test dec (bad) std add jle mov pop ret dec nop out lcall mov aad mov jp cli mov and out jl inc lds mov (bad) cmp data16 jg or out fdivl outsl and test outsb jo cltd es xchg sub jbe pop cmp mov jle adc (bad) lret mov jae cmpsw inc jp fdivrs (bad) xchg push xlat adc ja scas and xor shr test add scas mov fadds (bad) jns jl imul (bad) jp mov andb movsl popf adc insl xor in in loope shrb sbb fwait jle push pusha mov dec mov sbb mov adc jno repz dec xor adc dec mov es mov outsb dec aas clc movsb inc loope xchg outsb in insl push jg fdivp mov dec repnz in mull cmp shrl sub inc call jns das push scas (bad) jo sub or (bad) xor cmpsl shr leave inc arpl xor inc sarl sbb js push scas mov bound aam adc imul lea jnp (bad) bound xor test cli cmp mov outsb mov push dec cmp mov push loopne push rcll jg pushf jg add mov jge shll rclb popa adc pop cmp add push add lock adc test pop inc arpl jae das sbb in dec mov inc jecxz cs stos in loopne mov push test ja std in cmpsb inc imul cmp mov or roll sbb pop push pop or xor inc imulb pop push test fs push int push push sbb or cpuid jmp mov mov scas and mov imul jne stos movsl das (bad) xor pop jle cmpsl and aas pop cltd stc jno push stos rorb jmp test pop mov fisttp mov xchg inc jg scas fdivl ret outsb jge arpl popa ljmp fucom (bad) stc cwtl call xchg adc sarl pop add stos outsb mov jno mov jno pusha add sub loopne fisttp or (bad) xor push test ljmp cmpsb out ret jns lock clc dec out xor sbb xor in pop shr pop call insb outsl jge pop lea or cmpsb adc mul leave mov pop inc add mov cmp push inc mov xor jns je cmp and int3 std xor push mov inc xchg test xor insl xor cmp push dec push xor mov inc aam inc push push repnz addl or leave sub repnz jge mov add loopne int3 or xor repnz arpl mov or dec cltd mov and mov or mov lret add jp cli mov iret inc and cmp dec sbb (bad) data16 (bad) push push and movsb fcomps xchg add push and dec push lock push cmpsb mov add fiaddl xor xor aaa jmp leave dec xor lea jnp sub pop jbe test jp add aas in outsl (bad) frstor in add jne mov and mov add outsb movsl mov adcl dec (bad) push sar adc imul cmp leave orb (bad) jo or lods push insl add insb jge je mov cli bound xchg mov inc push fiaddl fsubr idivl in das mov fnstcw repz aas out mov jle jmp fildll push mov mov push fnclex mov fnstcw test jns xor scas movsl in pop jecxz lds clc mov adc ljmp push in scas mov cmp (bad) xchg cmp notl jle gs shll mov mov out xlat jb mov popa push push (bad) imul adc (bad) and inc cmp popf mov mov (bad) jmp jns xchg stc imul in mov jne push mov ds cmp push gs roll mov cmp fisttpl fstpl jg xchg in mov int xchg or mov add jmp sub xchg sub out test jmp aaa icebp gs and test and push pop cwtl push popa cmpl aad xchg pop nop or or fcomps xchg repnz loopne ret loop xchg stos mov ficom push jns out dec push sub out ret fcompl std (bad) idivb mov fsubr add (bad) rorl cmc movsl ja xchg and aam add lea sbb fwait rcl pop inc add in (bad) add fldcw stos adc rcrb rcl sbb cmpsl popf push repz repz mov xor push int je cmp mov jmp (bad) cwtl gs clc lcall push mov mov scas cmp test insb inc pop xchg mov jbe,pt push mov xchg lods mov sbb (bad) shrb decb and jne dec dec fdivrs mov and adc xchg fist xchg dec out push mov adc xor push push sub call mov (bad) (bad) in mov mov inc rorb xchg iret bound decb mov leave mov (bad) icebp push enter adc push fldt inc in dec sbb add adc mov push je lret inc int3 mov and mov mov lahf stc mov lock insb mov mov mov cli out pop jle ss jl repz imul push mov push ret adc mov mov cld jbe jmp hlt push je or mov sbb lods andl arpl jmp subb cmp data16 cmp inc sub lods xor ja rorl pop cmp jmp sbb nop mov fwait nop jge push (bad) mov mov cmp xchg insl stos sbb mov mov mov or xor lock scas fwait cli (bad) cmp and mov hlt es mov insl sbb jne ror fidivrl push dec add lds push scas and jns je mov (bad) popa pop jno sahf add andb xchg add fs mov sub sbb jae aad test rcrl add inc and inc cmp in std lods (bad) ds push leave or mov sbb test mov pop (bad) into test andl aaa mov (bad) shl adc xlat xor push data16 cmpsb pusha rclb andl cwtl mov jo arpl mov xor pop insl mov mov mov (bad) into fsubrl cmp ja je mov cltd cmp testl or imul dec ficompl jbe ljmp js adc iret xchg adc and lahf and xorl adc or out out pop lahf lods and int icebp inc gs imul xchg push push pushf inc adc das popa mov les mov mov mov push xor fildll loope jbe lcall dec cmpsl scas mov dec jne in arpl adc test pop cmp das lods cs mov gs (bad) cmpsl icebp std push push test xor mov (bad) push out popa sbb lods dec adc prefetchw xor dec pop adc test sub inc orb mov loopne js sbb fnop and mov cmp add adcb pop cwtl adc popa neg mov xlat mov and mov adc push push gs mov iret jbe mov inc xlat loope inc cwtl hlt ss lret out adc test fs aaa xchg rcr pop adc xchg dec es mov jns and mov sub jbe cltd fsubrs testl mov jle adc lea adc sbb push enter or and test stos pop ja or (bad) repz mov ret pop outsl lds adc loopne vunpckhps sub inc ret xor repnz pop lahf ds pop xchg test sub mov outsb pop fdivrl adc mov aad mov cmpsl pushf orl imul arpl sbb call add adc loopne mov ljmp mov (bad) aaa loope pop inc push jl cmp mov int3 shrb or fwait repz outsl call xor int3 clc imul (bad) cmp pop repz push mov xchg insl cmp mov add hlt (bad) dec ljmp mov gs push cmc push inc cmp cmp clc je ds outsb outsb push or mov into mov sub ja jecxz jle and mov mov xchg scas mov cmp sub mov scas pusha es push pop xor lahf test stc mov dec mov clc xchg lret add sbb insl ja mov xlat pop hlt sarl or repz jbe push (bad) pop mov daa in push js mov push cmp ror int stos stos int3 test call and cmp add (bad) mov pop in xchg xor fs mov ljmp rcrl pushf adc dec mov jle sarb inc pop cli inc lea lcall stos sub out push and (bad) aad push ret (bad) sbb mov ss scas fwait mov popf (bad) aad pop push mov adc mov xchg sarl fwait shll push mov adc dec popf mov mov mov xchg fildl insl insb mov mov inc (bad) out sti mov clc pop dec cmp mov insl xchg push mov les push add insb xorl ret cmp add push mov dec fdivs gs pop xor add (bad) popa push xchg mov sbb mov sbb mov push js out inc ljmp gs jp xchg xchg xchg dec xor and jmp mov cmp xchg xchg arpl mov push xor cltd xlat add arpl outsb cmp add and cmpsb jno repz scas xor adc fcompl fbstp add fcoml leave sbb data16 inc hlt xor cmp sub jl andl enter mov push push push rorb mov test pushf sub dec (bad) fdiv pop arpl sub and push ret out enter cmp loopne outsb lods lods cld sub sbbl div xchg mov jp scas lret test pop (bad) ljmp dec cli inc inc shll push adc mov adc jb push stos add aam cmp push enter or test jbe jg adc out dec in lahf outsl fsubr jne repnz (bad) xchg push test cld and stos pusha outsl in and dec ss jge mov fsubl lret pop outsl push sub mov mov push fldt push aad out aad leave jle xchg imul stos mov cmp and movsb and jg in mov pop lock nop enter mov mov imul in imul out jno test daa add push cs cmp inc mov lods adc fimul lcall pop xor test jle cltd lret sub cld xchg es and rorl xchg pop loop xor mov repz test mov pop jno std or out inc xchg fiadd fldpi int dec xor les imul xlat xor jb jg std sbb sbb das adc sbb test cmpsb sbb call pop cmp jno shlb xor mov cs or fistpll aas and ljmp jmp mov pop mov addr16 decl dec add bound inc adc inc sahf adc adcl xor push cmc lret xor mov ja pusha fwait lods movsb inc fucomp inc push int or nop dec call lahf or pop imul lds jnp jae data16 jl mov xor cwtl jnp scas sub or js pushf jnp popa add (bad) lcall dec cmp popf mov push mov js lret je mov xchg sbb sbb std add cmp stos rcrl in enter and cmp or mov mov int3 test xchg (bad) js repnz push jl mov repnz daa jle out add lahf int rcrl out ficoml fidivrl pop in fdivr in pop test ffree pmaxsw movsl jo aam pop stos arpl sub jae pop add cmc ret stos xor add sbb fistp mov pop test xchg push jbe jo sbb fsubl sub and cmp rolb sti inc and cmp xor xchg loopne push repnz sbb pop mov mov ret mov mov pop cltd std jge sub pop pop or cmp bnd fdivs pusha adc pop sub stos jge push cmp pop cmp cwtl in or out sahf mov xlat pop mov adc fistpl inc fisubrl xlat fldcw add cltd and and adc push or out cmp jg pop xor loope xor rclb out outsl jbe pusha dec scas in (bad) ss cmp add sbb mov gs pop or in sbb (bad) ss cli add mov out aam push in js or lea dec mov add sub cmp repz xor or fimul dec or cmp repz mov ljmp bound iret sub mov or test loop ret cmpsl ljmp xchg cwtl xor stc xor out xchg mov and mov push ret call into mov mov shrb lea ljmp adc test dec mov pop inc push sbb xor dec or test jge cmp push jns pop jp cltd mov jne and int cmpsb inc adc stos pop ja jns or repnz sub and mov push lock mov daa adc bnd (bad) stos int adc pop fidiv repnz movsb shrb pushf jns insl mov fbld adc std xchg loop (bad) cmp mov pushl xor lods movhps aad fldpi sub fimul inc les and add lods mov add out cmp pop arpl adc lds or pop add adc xchg fistl mov out adc and adc je mov sbb push push xor xlat outsl pop shrl xchg ret jl xchg add push pop pop insl in mov xchg ret jns insl cmp gs and gs inc inc es loope in xchg push fidivl mov fs adcl mov mov push sub cli lds pop jo mov ds and bound mov je push mov cwtl pop stos int outsb loopne mov pop mov test sub add out lods jae ljmp pusha mov in push mov sbb adc sbb adc enter or (bad) aad push pop adc mov into adcb add fnstenv push pop fldl outsl lahf int adc iret js pop aas xor daa and pop mov push ss (bad) test xchg fstps popa and xchg add and add das rcrb mov jg jb mov inc jle sahf je sti xchg sbb loope arpl ficompl xchg add test jb outsb mov inc add mov xor repz or mov add out pop dec ret inc xor sub fcmovnb sarb xchg fisttpl xchg imul addr16 sbb or inc fisubl jle cs cmp std out iret inc dec xchg call aad out stos push mov and mov sbb dec cmp out or push in xor mov mov inc popf mov push rcl jb bound adc fdivrs roll subl mov lods sub stos push sub lcall ret das lods nop and (bad) dec add pushf inc sub cmp mov jne sub jecxz fisubr sub dec (bad) xor inc je add pushf imul ret sub test into pushf orb shrl sar mov add lcall repnz sub adc mov or xchg xlat xchg and dec les mov stc push je cmp mov dec insl sbb adc sahf arpl es (bad) inc out xchg repnz mov mov push gs (bad) out cmp jg movsb mov out push clc cli fnstcw inc rcrb mov lock aaa in movsb lods sbb push loope std jmp sub jmp inc sub enter inc popa push pushf hlt push les and mov or inc xchg in movsb jo or (bad) test daa in aas fldcw sahf lea mov fs cmpsl repnz jl xchg daa jp loope cmp cmpsb jmp mov push (bad) and push int3 mov lods inc out outsb repz jg inc and sbb mov xchg xchg jmp push out lea imul adc and inc inc testb ret push xor mov pushf mov push (bad) cmpsl test (bad) jne adc cmpsb pop mov jle jb cltd add fcmovnb push mov das adc add add dec push fisubrl jbe js pop popf sbbb sti ret cmp push pop movsb cmp jmp mov fwait jbe bound js adc xor cmpsl scas (bad) adc pushf jno pop cmp ja inc mov sbb mov push bound fcomps cmp xchg loope sahf jb aad xchg or mov loopne jmp dec inc es lea adc push int push test negl stos mov addr16 mov mov les jnp daa mov gs popw rorl mov lret pop dec loopne pop imul adc mov enter jbe lds ljmp gs cmpsb (bad) push test pop sub add out mov loopne mov adc mov addr16 test mov dec pop rcl jle jle sub mov iret test jl iret ja xchg or jne test mov dec pop rcll arpl cmc mov sbbb bswap fisubl add mov (bad) dec pop xchg sbb pop and jp outsl dec loope sub pop and aad sub fstp push jmp movsl clc popf rcl les into jmp imul jp sub pop loopne mov fmull and cmp jp ret jbe movsl cwtl js or mov test lret xchg leave bound (bad) or bnd and repnz add scas lret jl xor aad mov fnstcw mov loope xchg test mov js in sbb out cmp mov mov add (bad) ffree sbb sti adc ss xchg in mov jp cmp (bad) ss shrl adc ret and out outsb pusha jb clc test cmc xor cmp cmp in xchg mov ja cmp mov (bad) or xchg push adc xchg jbe (bad) fs adcl xorb leave jae into jl inc (bad) inc cmp push (bad) jb iret pushl xchg (bad) xor mov sbb sbbl sbb cmp fimull pushf les jb or je ss ret mov imul out aas loopne mov aaa nop xor in lcall add lds inc insl jne clc mov movsb mov stos js xchg xchg cmp inc ljmp pop sbb sub imul xchg orl mov add mov insb fstpl sbb ret incb ljmp mov and sub lods mov dec (bad) push jecxz stos push es lret and jle inc (bad) dec outsl mov pop jmp jge dec mov cltd int mov mov icebp inc push lods cmp in push mov cmp mov xor bound mov jmp adc test icebp das nop test in fldcw iret fs pushf mov cmpsl adc sahf loopne sub pop mov pushf dec push push pusha mov stos test rclb push cmc dec lods insl cs gs scas and orl or pop inc xchg mov xor inc insb cmp cmp mov outsl loope mov jmp js mov mov es xchg fild cld roll aam stc ret and popf push rolb rorb data16 stos ret inc idivl adc jge and les pop push scas insb and mov test push mov jno icebp xchg adc fstp clc mov cmpl sbb push and jp or and (bad) js mov sbb jl xlat insb lds or fmul jp cld inc fidivrl jp neg jmp jle insl call insl lcall enter xchg fldl2t test test leave mov pop sub int3 movsl adc xchg imul fnsave xlat std push adcl xchg xlat loopne mov fsubp loopne jno pop adc xchg repz mov mov nop aaa lcall jne mov add int3 mov jp sub cmp stos bound mov sub mov cld ljmp inc into gs (bad) xor and call fmuls js xor mov dec sbb or push std stc dec movsb and ud1 hlt fwait das sarl movsl les std jae add xchg inc jno outsl pop push or (bad) hlt pop jae mov inc fbstp icebp aaa in fdivl pop and ret mov mov imul adc loopne dec adc xchg push push imul ret mov jmp sahf mov lret int aas xchg adc or das pop jle mov adc adc ficompl cmpsl (bad) ror rcll mov mov pop mov add and cmp push enter das or jns daa push mov fstpl sub adcb lods sbb mov cmpsl xchg in dec (bad) (bad) jo inc das or adc mov sub add add fsubrs mov pop dec paddw stc add (bad) mov std sbb shlb shrl xchg adc lock push jp push test push mov pop mov outsb adc popa pop and push xchg shrl sbb jmp xchg imul (bad) pop cmc mov outsl mov popf adc nop sbb mov dec jmp dec dec fwait or out add pop sub in test add add into xchg lea jns mov xlat push mov rcrb sbb pop (bad) push xor aad cmp std repnz dec pop adc sub mov icebp sub ljmp dec daa lcall fidivl mov lds stos nop inc std push stc push mov scas std mov mov jl mov into mov pop inc sbb clc mov cltd into adc into xchg push pop inc mov xchg fidivrl (bad) ja loope bnd xchg cmpsl stos ljmp inc mov inc push int3 out inc loop push mov or pop jecxz sub jp mov loope xchg mov shll mov lock dec xchg jns outsb xchg and add sti mov cld adc in or out clc pop push jmp aam iret std jo adc jno mov mov aam test sub js repz push xor roll test inc dec decl sbb and enter push nop mov mov inc sub and cvtdq2ps adc gs or adc mov add cltd cmpsb movsl inc push stc mov pop call xchg test mov cmp mov jl outsl xchg test xor cmp push fdivrs andl mov cltd ja dec sbb push adc clc gs mov aaa pop or xchg push scas int rcrb lds out int3 xchg add call push ds lea mov (bad) add in int push or jo inc loope movd cmp mov push ss sbb jecxz (bad) into cmp repz jg sub xchg inc nop inc push inc dec aam jnp inc cmp add cmpsl rcr ljmp sbb (bad) aam scas xor mov icebp imul mov mov aas dec and adc (bad) js jnp aad xor out arpl sbb sub mov push inc out or (bad) push je dec ja pop scas push jb sub push push xor repz push popf mov jle ret push cmp pop push les jmp stos inc jg xor xchg sub adc mov jae ret push jp inc jne enter or dec mov fst rolb js adc mov fxch sbb insl negb lea pop and adc sub call cs arpl stos lcall ds fs fistpll les mov add (bad) out jne xlat lret xor add inc lret adc mov fsubl pop push sub fcom inc les push mov les pop push mov sahf (bad) fwait jmp scas dec sbbb pop ja and push inc ret out inc mov int3 out sub insb sub jnp sub sbb mov push adc in mov jmp pop orl loopne (bad) mov mov mov ficom fnstenv aaa (bad) aam out xchg lret popa test loop pop jno iret or or xchg pop jmp pop (bad) ret inc mov arpl push xchg pop jle sub (bad) hlt insl mov adc mov mov lds lahf dec ret call add outsb push call or mov and xor rcrl pusha mov inc jno aam xchg inc push push inc add pop pop pushf je loope dec push ss leave out (bad) (bad) mov sub sub clc clc push fist mov jb lcall lea dec lahf jns sbb pop (bad) pop fstp (bad) jmp mov sub xchg or lock xchg push adc push loopne mov jg push sti cld mov ds and xchg sahf sbbl rolb xchg sub mov ds data16 jb jns rclb aam adc ficompl aas or xchg fcoms enter cld or in inc pop jmp out int3 mov test scas test xor push cmp or orb adc pop faddp ret inc jns mov sbb push lods sub xor push push ret ljmp loope mov mov or push fsubrs mov popa xor ret push pop push sub iret iret lahf mov cmc sahf cli bound inc jbe (bad) pop adc pop jg sub jno in adc adc lea mov dec rcrl lock (bad) cmp mov (bad) or icebp icebp cmp push je nop push inc push fistpll loop xor test daa jnp out nop je stc xchg dec gs add into pushf (bad) jno mov (bad) mov sbb fidivr xchg or fs pop sub imul loope imul and adc roll mov xor (bad) mov ljmp dec stos dec leave iret mov mov movsb add mov inc dec jns adc dec sbb xor test sub (bad) das mov add pop mov jns sbb push test ret lods hlt test popa pop jg xor andl push cwtl je inc jo mov enter cltd inc int3 pop fwait aas lds and pushf cmc fildll loop jp add xchg xchg mov mov fldt (bad) sahf cmc push push sbb dec int3 ret adc lea inc lods sub push push enter cmp push mov sbb pop fnstenv aas jl,pt and dec stc fist push jg test xchg in out cmp lret loopne (bad) cmc cltd test aaa dec jbe sbb mov adc pop jmp cmp add scas in daa imull and loopne push or (bad) scas sbb jo stos push lcall pop pop cmc dec jecxz xorl ret or push (bad) ret cld mov loop push lcall jmp xor loope cwtl push jge mov icebp jge push jecxz addl cmpsl ret cld xchg cmp or cmp xor pop mov insl dec ljmp xchg pop mov and or jo jge mov jecxz adc lods or push jecxz out (bad) int3 dec xor insb xchg push sbb nop mov jg push jmp pusha das pop inc ljmp out adc jae mov shll hlt hlt pop xchg jne rcrb fist andl xchg es sbb popa lds mov shll add push mov jo je stos test push xchg test push fnstenv dec xor lcall jne sub mov hlt mov pop inc cmp dec psubd (bad) mov and jae scas aad icebp push (bad) or ljmpw sub jle imulb inc cmp jae push xchg scas dec adc (bad) insb mov inc xor movsl int adc daa mov and inc pop aam adcb outsb movsl test xchg test lods xchg leave xor les into ret xchg jo es jmp add mov sub cmp insb inc test lods push cmp adc mov mov fcmovnbe bound lods sub mov hlt cltd or push xchg decl jo cmpsl (bad) pusha (bad) pop rcrl loopne ds push push movsl mov popa loopne or sub push cmp inc loopne jmp mov scas or sub fwait jbe ret pushf imul dec adc aas mov lahf sahf pushf mov in daa push dec pushf das stc (bad) lods ljmp mov out pop mov and test pop jmp cwtl dec pop xchg popa insb sub fidivrl shlb sti or loop fiadd push xor push lods jo mov inc sbb mov xchg movsl leave movsl jnp jle xchg inc arpl and push ss and mov lret xchg lret cmp outsb lahf (bad) lcall push xor in (bad) sti jl fist cltd add adc out xchg out clc xlat adc lahf int xor fucomip out cmp fcmovnbe adc les mov add push fnsave pop mov stos jns pop xlat (bad) mov mov fnsave mov jb cmp jecxz jecxz and mov dec push in fstpt rolb dec add and sbb xchg mov or ds or (bad) shr mov inc adc sti loop inc insb fsts pop and adc jbe add mov daa and and and jo popf mov dec adc mov sub jnp or push inc aam push add ret dec dec ja out loope (bad) leave mov sub xor (bad) gs ss xchg insl movsl insl inc lock test fsts bound jo outsb test ja cld icebp fs add cs cli and xor pop ret mov adcb xor sbb inc mov and icebp insb cmpsl ljmp jae stos data16 or cltd pop or test sbb push test xor int3 fistpll into sub push dec (bad) or push cltd dec dec pop js ljmp or imul lahf daa (bad) into gs popf xlat xchg lret movsl icebp add pop mov push mov add pop cli adc push rol daa and inc pop adcl vpmacssdd test mov fsubrs adc (bad) sahf imul adc or mov negb mov jns test xchg ljmp stc in pop test nop adcl adc jns outsb xchg nop mov ret lahf movsl dec sub ds mov inc mov jle aad dec arpl inc push fnstenv xor ret das pop movsl in es jo loope xchg jbe xchg push ljmp fdiv outsb or xchg mov rorb in lods pop lods xchg imul sbb repz mov xchg mull xor loop or sub xchg (bad) cmp out xor aaa inc inc lea je dec jecxz outsl daa insb dec aaa mov and (bad) into cmpsb sar popf into mov or cmp xchg (bad) cmc sbb movsb lcall rolb loop xor nop pusha repnz cmpsl clc cwtl dec jns push in push adc aaa or jmp pop aad mov pop sbb int3 adc cmp fcmove sbb enter mov sbb nop (bad) mov (bad) int cmp add test cmpsl fs adc jg push inc mov mov inc push in mov test out sbb faddp ja shll aad jb adc jmp lds out mov (bad) enter sbb call lock ss mov mov jo je sbb mov jmp or icebp rclb mov add cmp jbe or fprem mov inc cmp test loopne sbb jg cmpsl movsl mov pop cmpsb pop (bad) mov lods mov push dec lods sbb or cld sub lods mov cmpsb enter mov test mov jae test sub fdivrs sti loope test mov inc es into and cld sti xchg test mov adc xchg lret imul cmpl or push aad les cs out xor scas or rcr arpl jecxz or lret lea sub daa pop sti add int3 insb mov adc jecxz fldcw adc push adc xor xchg mov cmp daa test mov ss lret (bad) (bad) mov pop xorl adc push loop push int3 scas mov cmp inc adc inc mov in sbb ror pop test xchg dec cli mov cmp aaa mov mov xor test mov xchg in bound js sub cs jne stos cmp data16 xchg jne cmc fwait lahf inc pop (bad) cmp mov xchg out xor stos mov mov aas push mov xchg test pop imul aaa sbb aas cmpsb add push push lcall pop jle fwait sahf pop cs xor sarb popf jne sbb insb shr in mov push xchg jg mov in outsb sbb cmp xchg dec lret rcl out stos xchg push sbb rcrb (bad) jns add leave sbb adc movsb into push push mov outsl out adc cmp in in xchg and imul pop loope outsl data16 outsb xor xor fidivr aaa ljmp into xor aas pop cmp (bad) adc fisubl insb or cmp ffree xchg mov and aad sbb jg adc addr16 arpl ret out cmpsb jns stos rcll decl jne lods cs xor popf sub fimull lahf mov mov sub loop jns loop cmp push add ret adc in inc repz sbb clc ds fsubrp es sbb (bad) gs pop (bad) mov mov pop jle dec leave inc jo jge mulb adc hlt fidivr insl mov add mov sbbl out push call psubsw loope fisubrl cld add scas enter and ljmp test xchg dec test fucomip add scas adc adc xor aaa cld adc pusha mov sbb out push fbstp mov jge bnd fwait mov push xor fs rclb loope repnz adc dec popa int3 and pop dec adc dec xchg cs push test inc xor inc stos int3 pusha jb das test mov cltd mov mov (bad) pop jns adc push mov xchg stc fstps or push xchg test decb xchg sbb sbb iret inc jp mov sub int pop and add ja ds and rol mov jp fwait sbb or gs popf pop sub lcall orl dec sbb push rorl fs mov jp mov rorl dec pop mov out into fildll dec dec and cmpsb test and daa aam xor pop push add xchg dec pop mov dec push lcall mov and mov cmc inc bound and push aaa leave lret movsl dec jecxz fidivr ss push lret cltd rcrl mov (bad) cmpsb outsl push pop push les (bad) jmp jnp push in movsb pop movsb and jne scas xor hlt icebp cmp mov sub xchg into scas sahf jmp movsl and out add int3 cwtl push outsl lock xchg (bad) push outsb cmp and arpl (bad) mov stos lea addl in clc (bad) xor bound lock cs rorl repnz test cpuid ret int enter mov lahf aad xchg out iret mov shl (bad) ficompl js mov cltd mov jo repnz xor out cli xlat es (bad) adc xchg aaa cwtl cli je ja sbb leave movsb mov pusha mov (bad) cmpsb cs hlt mov arpl inc sbb sub lcall inc in sub popa leave fnstcw iret mov add ret inc push xor mov push fadds gs repz les push jl outsb outsl imul in dec adc sbbl jp push test jmp enter lahf sti adc xchg mov add dec mov push (bad) ja test inc (bad) cwtl cld push mov jnp lock xchg xchg lahf push push pop test ljmp clc fiaddl jp pop xor mov aas xchg popf mov jnp mov lret adc aas (bad) aaa in das out or inc sbb add mov mov push jb dec jle js add sub fdivl int stos adc fisubl fadds push xchg mov mov fwait repz movsb es or xor (bad) ret jp sub mov movsl mov push scas cs and lods loop test lahf dec jmp inc and mov mov jb (bad) adc mov lret inc adc mov aas repnz popa mov mov rclb scas xchg bswap xchg sahf push int outsl jmp jg push adc addr16 pop xchg aas and add repz sti pop xchg push fnstcw jle xor mov push inc out rorl int jne fsubl adc insl dec inc or mov out add inc push into notl test mov ud1 repz lcall pusha test cs push sub pop mov fistpll mov arpl jl arpl mov pop pop insb xlat clc jl xchg jns sbb sbb dec lahf inc fbstp xchg scas dec jmp and (bad) int3 sbb fwait inc lret pop fiaddl daa sbb fldt ret add xchg xor push mov aam jg test pop sub (bad) mov lods decb pop sahf (bad) mov rorl mov rorl (bad) jmp in jo lods je inc in and out orl mov fwait and test icebp lock xlat clc (bad) cld out popa inc (bad) mov stos jno sbb (bad) mov enter fsub mov add pcmpeqd addl sub mov xor add or adc lcall shlb mov dec cmpl mov or jmp jp int3 scas cmp out enter mov mulb push out test lret addb xchg sub sbbb sbb add shlb daa loopne and pop mov mov push dec add lds add aas movb lahf dec inc or mov cwtl jmp dec jmp cs (bad) adc mov mov pop jae inc lea xchg xlat inc ja movsb push sub sbb dec cmp xchg (bad) cmpsl inc cltd data16 sbb iret addr16 mov fistpl insl (bad) sub adc xor and push cmpsb sbb dec adc mov je mov and imul sbb sub or pop push mov ja pop stos into push scas xchg bound xchg das and jb sarb jno mov pop or lret imul imul addr16 xor es mov and stos push sbb jno inc aaa pop mov push enter lods addl out int out mov clc xor sti mov sub mov fidiv adc pop sbb scas out ror pop xchg pop loop iret xchg push ret and icebp or push fcoms push adc das (bad) push ja ja mov (bad) dec mov pop (bad) (bad) pop pop push jecxz jnp addr16 rorb shrd (bad) xor xlat jge and mov sub sbb rorl jae mov pop sub clc gs enter push popa dec shl out jecxz leave inc sbb or push mov lahf lods sub or push dec sbb push insl out fs dec or mov dec push jnp push and outsb test pop pop mov and xchg (bad) mov popf cltd mov aaa pop add jbe repnz aaa xchg sub dec ficomp mov mov dec test sarb sbb rorb mov inc inc pop scas sahf push add enter and rcrl (bad) cmpsb lret das xchg outsl adc push (bad) mov jb incl push popf pop imul test xchg pop xor add sub andl movsl stos je std stos les mov inc adc test outsl push xchg adc jns lods pop imul mov pop and and movsb dec leave xchg sub xchg push fsubr jg inc ret bound loope bound adc xchg andl xchg movsb mov (bad) popf movsl das mov adc ljmp and clc lret (bad) cmp mov adc dec mov inc add pushf cli cmp xorl fbld and subb jp (bad) sub es xchg les mov imul fidiv rcr dec cltd rcl das adc pop push and push mov (bad) cmp dec cli inc out test adc jle fidivr xor icebp lock sbb jmp inc add push cmp shlb enter repz jae push cmp lret sub push mov xchg outsb (bad) lds nop mov xor mov lcall movsb lea xorl mov in mov hlt repz mov dec fisttpl ds push adc jmp lret lock (bad) sahf push adc js outsb daa stc fsubs and hlt sahf add xchg repnz shrb pop dec test mov fcoml jno cld and adc decl ds xlat clc sbb ja sbb jmp fptan jle scas scas jecxz repz (bad) mov pop push ret push inc jecxz mov jnp xchg cmp xor push int sbb mov sbb das leave adcl sbb loop call adc inc jae or scas inc xchg or cltd sahf inc xchg adc jl mov cmp out dec (bad) push in or adc roll (bad) (bad) hlt repnz ljmp mov and call xchg mov mov sbb xlat mov mov cmp lds add popa pop mov outsl je and xor pop dec addr16 cld (bad) jp fcmove out mov inc cmc daa and sbb jmp shrb rcll in sub adc pop aaa mov cmc aam add cmp leave mov imul stos dec adc xchg iret xor pop fiaddl popf push cmp jae enter dec mov cmp sti cmp data16 stos mov mov sbb mov sbb ja ss jne test les pop les js ljmp or cs add (bad) mov cmp (bad) push movb adc mov and mov in dec fwait push je jns stos or sub aas adc jns mov pop xlat adc gs or mov test hlt hlt or mov inc (bad) sbb cmp push rol into pop pop in pop pop xor xlat shlb cmp xchg pushf in aad lods scas sub lcall mov xor fimull sahf loopne repnz dec leave in movsb insl mov loop mov arpl sub sub sbb xor push mov movsb xor pushf mov mov loope cli leave rol popf cld cmp arpl jb fcomps push push push ds push insb jecxz jnp xchg sub aas out and and dec mov or cmp ja frstor adc cs xor mov push test cld in in (bad) pop dec push pop lret cmp jmp lret cld das out (bad) in xchg arpl jns jecxz mov loop cmpsb push xorl sub sub cs ds cmp push pusha mov aas ss pop rcl dec out fst dec cmpsl inc push pop inc out and and sbb add out repnz (bad) jl das add stos sub sbb sahf jmp and inc push mov decb aaa hlt xor cs push pushf lods sub pop pop loopne or shll aad or sub in (bad) fs pushf adc push int3 or pop cmpsl dec cld xor cmp mov lret push lret leave popa mov bound cmp sbb inc adc sub push mov (bad) fistp cwtl cmc pop mov mov arpl insb mov cs in ret dec lock cmc ret inc (bad) inc sub dec adc movsl sub cli aas daa jmp add inc inc jge test lahf adc xchg add arpl sbb outsb daa push push scas mov clc pause sbb mov aaa jne sbb and vmovddup rol xchg (bad) or adc aam into mov and dec adc pushf mov lds inc mov je cmp jmp dec and fldt (bad) mov arpl mov pop fs jle mov sub pushf loopne sbb hlt fidivl imul repnz dec data16 and inc lods xor adc movsl and ja adc xlat movsl subl sti add sbb cmp lret int cmp sbb loop aad mov dec push push inc and adc inc jp rcrb mov fdivs xchg lahf (bad) jge mov scas sbb std pop cmovae dec orl call jns ds rcrl aam movsl (bad) xchg (bad) stc mov sbb (bad) xor dec (bad) or xor pushf sbb pop lret out inc (bad) or mov scas aad lahf push pop sub and xor and jp pop adc sub fsubp push inc and xor das insb lret lods inc mov xor imul dec xor aad inc mov pop ja sbb pop in das insl pop insl inc addr16 imulb jbe inc mov or pop xchg scas cli iret mov sbb xchg iret aaa xor stos xor cmp inc jmp or xchg xor and loopne out inc sbb hlt pop fisubr xor pusha mov sub (bad) test sub inc xchg jbe sbb cmp daa add mov movsl test dec seto push sbb leave sub mov mov fs lock inc add dec inc shrl mov sub (bad) je cmpsb cmc jg jnp lahf mulb pop inc loopne jns mov and jecxz mov push jbe mov or xor push push mov xor mov push cltd mov outsl out test adc mov sub inc faddl std mov in leave fadd inc (bad) out mov and nop sbb lahf jae fisubrl mov out adc sti shl mov stos cs arpl jmp cwtl sub stos testl div mov jnp and push cmp in test ret daa mov pop pop fisttp pop test das and orb mov into dec rorb add add mov add xchg jl fdivrs sbb mov aas enter mov and or and xchg xchg push cli add pop out scas adc push add mov (bad) add jl mov dec leave pushf insl adc imul bound es test xor test push ret push mov push mov pop inc and and sbb pop jecxz pop dec fcoms push dec lcall jb sbb lret mov scas jno cmp xor add push or xchg push inc daa cmp negb cmp jecxz sub xor xchg push gs xor pop cmp lods adc es test in or rolb or dec inc (bad) xor mov shr pop es sbb mov dec inc repnz push imul sti adc adcb xchg adc pop jb fcomps popa adc cli mov add sbb xchg test jnp test push mov mov pop aas jmp (bad) push jne adc hlt push out andl dec int mov and mov sub lds cmp aam (bad) dec adc xchg icebp mov sbb push xor push jne sar jns push adc cmp imul shrl or sub xchg mov stos daa inc pop gs (bad) mov sbb lret test aas clc dec lahf roll xor in mov fwait inc mov add xchg pop mov pop imul adc imull stc and into jmp scas hlt iret call inc enter mov xchg (bad) dec xor cli sbb bound pushf mov push stos xor lods mov sub cltd pushf and inc sub and inc das jl mov mov stos loop xchg add jp and xlat add mov xor loope fs cmpsl (bad) push xchg dec or popf outsb lret (bad) stos pop iret fwait cmpsl sbb leave loop or inc inc addr16 daa mov mov push mov pop and inc pop sbb stos test addb adc mov jge dec jl rsqrtps jmp jge mov nop out loopne cltd sbb pop pop into and cmc jp or add outsl jp push mov push scas or gs add cmp jp in jmp pusha les lds pop push stos xchg (bad) pop fucomp fnstenv inc xchg jg jne negb mov (bad) jbe or inc sub and xchg ret inc cmp dec into push sbb arpl inc mov pop fwait sub jmp lods pop jnp pop insl xor and add adc mov shlb daa test stos push jb loop lea push out fdivrl out mov sbb sar mov push and and sub jp adc ret cmp repnz lret jne lret mov adc (bad) in mov mov mov cmp push aas mov std subl add mov mov fidiv lods js std jne add pop (bad) imul hlt xchg inc ficompl lahf stc cld mov sub pop fadd aaa xor push cmpsl jo xor enter jecxz cmc adc fbld mov jmp cli pop mov stos dec scas test mov mov adc jmp sub add mov adc lea (bad) icebp dec je jp sbb imull movsl ljmp fimul (bad) movsl push addr16 (bad) xor jnp mov (bad) fnsave mov jnp decl rcrb pusha pop imul mov xlat daa push sub psrlw pop outsb mov test aaa jmp sub mov mov push int xor push arpl jo das and iret jp fs inc int3 push mov adc shrb push pushf xor mov xchg dec mov sub dec loopne mov ficoml dec mov sub sbb dec push sbb jle aas nop pop insb dec ja out popf mov ror icebp adc mov and pop scas pmaxub mov pusha or xchg clc jno add fdivrs cmp push jle testl repnz fnsave fldcw xor iret pop xor mov pop xor lcall inc adc insl stos outsl cmpsb adc mov dec dec xchg mov lds loope out or imul jl mov aaa (bad) jg xlat push pop pop jne and xor sti test or inc test stos xchg pop (bad) hlt xchg lcall leave fwait mov cmp mov lds sbb scas (bad) mov dec movsl lcall xchg arpl bound mov xor mov cmp add out lods cmp mov lods mov add sub add sarl jecxz mov repnz pop daa imul mov lock and push mov insl or int mov and imul (bad) out ficomp mov xor hlt les push xchg hlt cmp xor int daa mov in push xor test outsl sub sbb mov icebp pop loope out mov movsl (bad) push leave and xlat rcrl cmp sub bound es mov inc pusha jmp mov or fist jp aas cwtl sub mov pop sbb or pop pop ds mov adc movsb mov jl jg sub inc clc subl jb sarl mov xor mov fcomps lret mov (bad) or fisttp out pop test call jmp xor inc rolb xchg cmp icebp test stos jle das shr data16 iret out icebp enter jge (bad) lock fwait push and in dec mov sbb sti outsl pushf daa int3 push stos jl loop mov jno add push test add cmp outsl xchg or clc das lea or lret stos lahf add cmp pop gs xlat out mov dec dec outsb push jns mov test dec push fistp mov stos push mov (bad) and aam loope mov xor pop sbb and add dec push insl add iret data16 test sub push js inc mov xchg (bad) and jmp pop cwtl loop fistpl pop (bad) aad jecxz ljmp out pop dec ret jecxz or scas lret (bad) sar xchg and (bad) mov cmp outsl push mov lahf cmc adc lds aaa lds and movsl frstor mov mov xchg jb call add adc imul mov sbb dec (bad) loope adc mov xchg fiadd pop int3 xor sbb inc enter movb cmp loopne and add dec (bad) lds cmpsl add fstp sbb xchg sub xor in mov push int3 ds gs test xchg loopne andl jle imul mov sbb mov dec mov add cmp cmp lcall dec xor inc sub lret push iret inc dec cld in pop pop dec out xor les mov or jo dec leave aad sbb xor or mov mov xor mov mov pop cmp call ds call push add and push in push xor aad jnp imul push xlat sbb jnp jnp mov push into mov pop test xchg into data16 mov sub sbb lds lock mov insb les inc adcl cwtl and cmp mov (bad) pop add aaa dec aam fsubl jecxz fmull lds dec insb xchg stc and in add enter aad std outsw sqrtps out add pusha mov mov pop fs or lods and sub or fstl sbb gs inc arpl mov mov into add fs aaa mov push jle inc arpl mov fstl sub js cmpl (bad) jp inc test inc mov js psubw mov push int jnp (bad) clc icebp aam insl mov cmpsl mov inc mov mov into and aas fs ret mov out jae sbb mov lret out xor mov cmp out les insl push pop jb cmpsl add xor mov mov enter lahf cmp dec js js cltd push les xor ss and andl pop mov divl sbb sub and fist jmp jge repnz fiaddl dec insl out mov push div add lods rol push and lahf lea add push pushf sbb mov xor scas inc add jp lcall dec sub sbb (bad) mulb sbb loopne xor or outsb ja mov mov jno subl adc mov (bad) mov scas insb fcomi cli jbe (bad) jmp (bad) adc jge les push mov cmp xor xchg mov rorl dec mov les cmpsb sbb out sbb xchg shrl mulb imul inc jmp add sbb sbb mov out pop lcall out mov pop sub push pop sbb das push pop add sarb (bad) mov push les push pop cmp popa xchg pusha into or xchg jnp shll es dec clc movsb jmp addr16 mov ja push or inc stos mov rorb dec shll popl jle (bad) in loopne je std jae inc xchg sub aad or push shrl and push sbb mov iret mov mov push mov push adc dec push stc xchg outsb andl lret adc ja int jmp stc fldenv cli adc and out outsl test push arpl mov xchg scas cmp dec repnz add ljmp xchg daa add insl jnp mov pop repz dec mov mov pop inc jbe pop scas das push add cmpsl sbb xchg das xchg sbb scas lret sub mov fidivl dec adc sbb flds adc call mov push testl xlat fsubrl lcall and dec and (bad) clc inc lret and lret dec ja xchg insl (bad) xchg mov loopne fmul (bad) pop inc or lock test push insb or or sub xor in loopne out cltd movsl dec xor xor (bad) ja and loop sbb mov dec in rcl out push (bad) insb xchg push loopne fdivr mov push lods (bad) out in aad push jnp pop in or cmp or mov and stc xor cmp sbb xchg rcll sbb or push (bad) icebp and fs push js gs xor aaa or or and scas inc int cmp lret test fstps xchg adc add (bad) mov into push and and push cltd cmp addl xor xchg ret mov dec stos adc add mov inc push dec sub sbb sahf out cmp cmp sbb and or in jb (bad) divl loop push or or pop ss insl pusha adc arpl fdivl and enter sbb push cli sub xchg fcmove (bad) push into fildl repnz popa outsb xor ficomp inc sti cmpsl test pop push aad test sbb push sub out scas cli sbbl fucomp lcall in pop (bad) sub call aas jb push pop sub fnstenv mov jge or aad jp or mov mov dec jp push fdivl push jecxz (bad) sahf es xor dec dec inc and js dec jg ss out xor stos stc out xchg mov adc mov not lods inc shr xor or jge pop dec adc ffreep mov mov cmpsb dec sbb push out mov lods ss icebp pop out mov ret inc mov sub mov inc cmp push mov (bad) jae fucomip into jecxz test adc clc push cld shlb scas (bad) aam pop in sbb outsb xchg sbbl pop push jge imul sub pop xchg inc mov xchg enter mov cmp mov xor pushw cld imul pop iret pop les jp lods fwait xchg xchg stc in push shll fcomp cld pop popf (bad) lret pop (bad) in xchg (bad) lcall xchg pop test sbb fild fcmovu xchg pop mov dec adc adc sub clc cmc aad lcall jno sub repnz adc mov dec cmpsb movsl xor stos ficoml out mov jecxz (bad) sbb call and mov jne jns jle mov pop dec adc mov icebp mov pop fldl and and in insb add jl adc cmp movsl movsl jg jmp mov mov cli inc mov xchg jp insl inc test mov les test jmp aaa mov and rol ffreep fucomip jns test xchg int sub into fidivr xchg adc xchg out push outsl push inc add fwait sbbl call mov sbb pop aas push jae addr16 xchg nop mov sarb cli or add movsl clc cs movsl (bad) xor rclb add gs gs cmpsl and and ret lea loopne add sbb add out add mov out (bad) inc inc push adc cmpsb jo icebp cli aad leave ficompl pop and scas mov int3 int3 gs cmp aaa test sub repz scas dec and mov sti (bad) sbb je iret lea adc sbb cli lahf outsb add mov test pop mov stos push repz orl movsl (bad) xor mov inc jg js add jnp cmpsl sub cli aam push in les in sbb (bad) xor xchg icebp or cltd (bad) jmp mov inc and lahf push fnstenv inc jns in dec dec ss jp inc test fwait and sub bound rcll lcall jnp inc insb jl movsl jmp push jle add movsb scas xorl leave jle (bad) push (bad) call xchg and cmp and outsl sub icebp xchg gs and mov cmc adc aam inc hlt jp lock ds push divb push and enter in sarb xchg add pop loop dec jns inc dec int3 rcrb out insb bswap push iret and iret cmpsb xor dec xchg adc cmp cmp mov shrb xchg add push pop inc fnop mov dec out movsl sahf pop scas rclb push negl cmpsl (bad) sbb jo aas jno jno lods pop fimull mov adc push repnz shr xchg mov lock shll pushl and call insl (bad) imul ljmp mov mov loop dec sub enter inc and pop xor and flds pop push fimul mov pop sub adc dec popf xor stos cmpsb mov or mov fsubr (bad) test arpl sub add stos xor aas mov or stos cmp push cs add push ljmp sbb pop (bad) mov xorl es (bad) ss add dec lret std mov fistpl xor test adc out sub sbb mov sbb sarb stos cmpsb jae test xchg mov add cmp push cmc fistl aaa loopne scas push arpl jns adc mov dec fdiv rolb test pop jmp inc sbb sbbb adc xchg into push push mov xor fisubr pop and gs dec popf mov outsl or mov xor dec in inc mov pop add mov mov imul in mov arpl ret inc imul pop xlat fidivl cwtl fdivr xor lcall or (bad) dec push fdivl or aam xchg mov pop aaa inc mov or xchg cmp pop lcall cmp je sub enter aam jne adc imull stos jl and cmp scas dec outsl inc jmp pop in sbb fcompl fbld outsb lret fs aas cmpsl push stos dec mov popa mov sub mov (bad) cmp jbe sbb cmc out mov das imul out mov popf shld mov aas pop inc inc cmp aas or test pop mov xchg cli std and stos rcll sbb and mov hlt xor xchg mov (bad) test dec adc (bad) mov push cli mov loopne add aaa pop xchg cwtl inc addr16 fwait jne adcb ja lret loopne inc dec fdivl mov push dec sub push daa jp pushl insb or setp js inc add (bad) jae sbb push mov leave jns push popa sub aad mov cs dec adc and jecxz xlat xchg stos mov popa xor sub xor je jl sub (bad) mov gs push push addr16 jge inc sub mov fcmovnbe mov daa pop pushf jo mov xor xor stc in mov push cmc ret adc or out sub hlt xchg and cwtl cmp lock icebp pop (bad) lods pop into mov adc aas pop or push adc xchg shr shll fsubrs inc cmp test dec dec jbe scas cs pop loop mov testl or cwtl jbe in (bad) clc mov and cltd jl pusha imul adc cmc popf fisubr mov dec pushf mov lret stos pushf and add add jb cs sahf ret andl fbld cmp test jb xor or dec aad pop mov stc repnz inc test leave inc imul (bad) xor dec in inc adc cltd pushf mov xor (bad) pop ss mov out (bad) xchg jge mov mov dec and stc push pop jp mov or or add mov in and push adc push push add iret pop icebp stos (bad) xor ljmp xor test pop faddl in inc jns out or ja out lcall push in lret out fidivr aaa xchg jb adc or ficomp cwtl pop das scas loope sub mov xor cmp scas sub sub inc sbb jl (bad) fbstp push shl clc fidiv jmp mov (bad) icebp jge mov test jnp test mov cmp dec outsb adc in aam int outsl mov inc cmpsl push call loopne (bad) sarb jne push mov xor jge lods lret rcll enter inc mov fisttpl or inc in cmp mov push (bad) (bad) cmp xchg sub inc pop (bad) hlt pop xor loope pushf xor jg mov lock adc aaa xor ret jg add and or aas stc push leave les nop adc test in (bad) int xlat inc fidivrl mov lret into sub xchg lods push and movsb gs popf stc loopne ret std push aam fwait inc inc mov or push divps jne push (bad) fcoml js or icebp mov call scas lock inc jbe or cmc (bad) fwait mov push mov jno jae mov mov dec js adc rcrl jb adc xlat int xchg daa mov mov inc sbb jl (bad) lea data16 mov call mov xchg cmp out mov and clc (bad) fistl jp xor inc jns mov test addr16 pop data16 mov mov inc xchg movsl lods mov and sub cmc push cs ret (bad) add stos push sub jp inc cmpsl cmpsl sahf and add jnp popa loop or sbb and cmpsl push add jp sahf xchg xchg fisttpll pop or roll sbb test test mov pop push in or mov xor jno clc mov cmpsl jo mov sti loopne out or (bad) xchg inc sbb lahf fnstcw jge aaa out adc lea mov add sbb test dec fwait inc loopne mov inc dec mov rcl xor mov cmp sbb xchg push sub xchg outsb lret mov mov cmp in arpl jle test sub test xor outsl mov xchg adc and sti arpl icebp fcoml imul dec lcall xor in jg scas sbb btc mov (bad) repnz jge pop and aaa xchg adcl iret pop push div cmp adc arpl sub jb inc call jno and cmp cmp adc mov xchg adc add ret jg pusha xchg or mov testb les inc inc push fwait leavew scas mov in pop cmp xor std dec (bad) xor addl dec movsl mov pop mov dec shrl cmc leavew mov dec cwtl push in cli jp rorl add pop inc cmpsb mov (bad) pop lcall sbb xchg mov test pop jae cwtl pop mov loope xor pushf push je pusha fstpt aas cmp test dec jmp call and ja pop pop test sti scas mov rclb push mov inc xchg cmp out pushl cmp cmp xor fisub in imul mov daa (bad) scas test push lcall (bad) push or jne inc sub js adc cmpsl xchg add fidivr int3 adc sar pop fs or js pop jb push lds pop stc push sub stos das xor cwtl push push inc push xorb ret mov jp sti inc mov xchg (bad) js mov stos in movb enter xchg ficom inc sbb xchg adc lock out test mov pop cmc mov jle cli ss or xor int push mov mov and loopne or jg test lret pop insb sbb (bad) in imul stc sti xchg fisttpll inc jo mov enter ss ja mov mov es inc ljmp push mov push sarl sub pop (bad) imul and (bad) or fwait icebp iret pushf xor or fistl subl jnp shll les xor xlat outsl imul lds push inc inc aas push dec push loope dec cmp lods push mov mov (bad) (bad) lds std ja xor sbb mov imul scas sub mov cltd test pusha sahf lcall mov adcb stos inc add xchg pop stc or icebp sbb loope push jmp mov dec push sbb push push add test jne and pop push cmp cmpsb outsb fcmove (bad) cmp or mov sub dec stos mov repnz fisub ret push lds (bad) cld clc je rcl mov cmpsb and push xchg sti mov pusha scas mov lret stos mov push ror mov jnp adc test in mov jmp fistp stos xor daa pop ja (bad) stos push lods lods mov jmp xlat jmp in mov or adc loope aas adc lret lahf and (bad) jae cs ficomp nop test lock (bad) mov or stos into call (bad) jo mov push jb pop mov jnp addr16 sarb cmp lods xchg (bad) xchg push ss push sub jle test movsb adc out mov in xor into jmp hlt mov jbe inc mov and movsl mov inc xchg pop mov sub rorl cmpsb in mov pop aas dec test mov mov inc mov jecxz add test add loop xor adc call orl sbb jecxz fstl inc fs jl xlat leave cwtl rol les jecxz push dec inc xchg outsl inc mov outsb add (bad) xor sbb in mov cs fbld lret jmp inc mov outsb les mov xchg mov xchg lock fwait lret xor stos stc testw mov and leave pop pushf dec jbe repnz test cmp xor pop (bad) pop mov nop add outsl insl mov or ljmp pop and adc and mov es scas std push jp push dec xor xor xchg (bad) imul lret push xchg pop lea lcall or cmp hlt das out hlt xor dec sti es mov jl lods sahf test mov adc jb add stos subl aam inc aas xor add sub scas and mov (bad) xor push mov mov hlt pop xlat push enter sahf cmp dec call ret cwtl ljmp ss cmpsl xor jbe shll mov mov pop fildl daa aad inc adc fs xor xor in dec (bad) fidivrl adc or push xchg in cmp push ljmp adc jbe ss test cmpsl mov in ret mov add ja pop ljmp xchg loope test dec add cmc cmp pop xchg cmp fs sbb loopne enter adc fidivr adc push inc popa fs adc lock pusha pop pop push jns shrb jbe das or ret ljmp adc sub jle inc inc popf in shr (bad) popa cli xor jg push popf dec sti dec jo adc xchg addr16 mov push (bad) std outsl and jmp ds fstl in push es not mov fwait xchg push push fildl test mov cli cmp mov mov xchg lahf xchg adc negl icebp sti mov nop test jae lock push xchg xchg out adc dec int adc js mov les cli add cmp aad adc inc mov or mov movsl sub jb mov mov and mov add es push cmp sahf push mov xlat push popa jo sbb sbb dec es and or sub in lea mov jmp cmp cmp mov sti mov shr xor push add (bad) xor cmp pop push inc es inc leave pop add fstpl cmp daa test inc lret inc mov adc jl out movsl je insb jnp cmc and mov dec xor hlt lcall or test jl mov sub (bad) dec adc cmp sbb es les aam sahf dec add ret push into mov inc jbe sub stc into in sub adc das rcrl scas xor in jge arpl cmp icebp loop and rorb cmpsb ret (bad) outsb (bad) scas loop je push out pushf js pop inc lea xor cmp orl pop cmp cmc adc outsb and (bad) iret lahf lea pushf div or jno les stos loope adc cmp jbe shrb push pop into test push subl scas stos jg cmp fwait jp adc or jmp xchg lret inc cmp xor outsl or and (bad) aam mov (bad) imul das pop mov clc hlt jb nop fs ja (bad) nop lods sarl mov test inc out sub sub fldln2 add and (bad) inc push imul jnp adc stc mov pop dec mov imul push pop enter xlat cmc repnz add cmp xchg repnz inc jb adc mov cmp fnop mov sub lock clc xchg add jle das cmp push hlt int3 loopne cmp (bad) call and in and cmpsb and xor mov xlat sbb lret repz arpl xor cmp xchg enter push movsl mov xchg clc cmpsb je cmp sti out adc insb hlt fsubp lea scas insl mov mov loop pop clc adc out dec js cli test daa sub cmp jge adc int imul cmpl hlt sbb and adc push adc adc enter sub shrl xchg loopne lret (bad) sub mov mov or mov push stos (bad) mov int xchg xorl mov jle fimull call inc sysenter addl (bad) jns lcall repz xchg mov rorb or and mull outsb js ss jbe xchg (bad) xchg enter inc leave xchg les fstps or imul jge push lea outsl gs pop dec mov (bad) hlt rolb insl lods sbb xor bound call pop and popf into movsl out pushf jg fcmovne stc lds or aas cmpsb subl lods rolb out (bad) in (bad) xchg and icebp cmpsl dec adc fidivr call ja xchg and xor cmp xor jp ja add out fidivr xchg pusha cmp int inc icebp pusha stos sbb andl stos jo pop mov sub pop dec mov and int jne xchg mov cld inc clc mov mov sahf ret popa dec xchg aam pop pushl adc pop mov idivb pop lods addl dec mov inc (bad) push mov cmp ficom mov imulb add mov xor outsl pop repnz dec pop jmp jno mov rolb push jne xchg fidiv fwait les jecxz cmpsl jle xchg (bad) fsts or xor mov popa test adc rcrb cltd ja hlt movsl mov xlat leave dec lock mov push out data16 (bad) xor movsl rorb pop mov lret cmpsb push jmp mov push cmc inc pop das insl inc lock adcl jl jb cmp push or sub subb mov ss mulb mov inc aam adc push scas outsb scas fsubrl call cmp js and sub fistp cld mov outsl dec sub into adc dec (bad) sub pop aaa jmp push (bad) stc arpl xchg adc fdivrs sub xchg add add add cmp popf and mov aad leave cmp loopne lea mov push mov inc pop mov les push jl pusha daa in lea cmpsb int mov test mov rcrb call jge jle mov push mov xchg jl loop xchg mov hlt (bad) add dec cmpsb jbe xchg sbb fdivrs push out sub popa pop or lock mov fidivr loope loope and pop xlat pop push dec rclb jno inc mov mov dec ljmp push or daa xor nop imul clc (bad) aas movsl test push fstpt jp push and std xchg jns clc jne sbb and nop sbb jbe push add arpl (bad) cmp dec mov dec dec cs or mov and outsb hlt pop push fiaddl add mov cmp aam mov je int3 pop add (bad) jnp call xor mov bound mov inc mov mov adc fadd mov sbb mov push in add imul xlat lea inc cmp fadd enter int loope fdiv cltd jnp mov iret testl scas xor (bad) aam mov jecxz add push xlat scas insl pop orl iret jnp call adc mov rcr es (bad) cmp mov pop mov lds icebp mov dec jnp sbb inc mov pop mov sbb xor mov les mov dec xor jmp sbb loope test mov sbb push out mov fstpt xor mov scas add sub mov jmp in fiaddl mov and fwait out xchg cmp sub xor or jns xchg xlat mov xor cmp data16 push pop data16 inc cmp call or ret pop ficompl push outsl arpl cmp dec dec scas jbe sub mov or xchg outsl loope mov movsb loop lods aas push push xor out and gs adc add or and jno (bad) (bad) clc inc inc add xlat pusha pop ficom mov pop mov test stos mov stc and fnstcw dec pop pop cmp xchg call inc jno push imul and addr16 lahf mov repz mov dec clc sbb repz cmp rcll mov (bad) sub pop jmp mov sub ja into adc pop test dec inc lock and jb push jp xchg sub test int ret inc or push gs mov push inc daa jno pop mov lods mov dec lods (bad) mov js leave ds outsb outsl xchg add adc (bad) lahf cmp jnp dec dec lds pop mov sti imul mov mov scas in popa lods dec push push rclb outsl (bad) popa pop (bad) cs iret adc movl ficomp jp cmpsl dec mov out mov call ret scas xlat scas outsb push cmp ja sahf jno in pop repnz cmp fwait pop pop pop jnp (bad) sahf jne push fsubrs mov pop gs jns fs int fwait sbb popa push pop dec inc fcompl cs add ja daa in test (bad) stos add cltd fildll rcrl ss fistpll scas jle push test cltd jmp rcr out jg dec and and pop dec mov shlb loope add sub loop mov outsl or jecxz out lret push nop mov cmp pop dec lret fadds into add test cmp fildll mov adc scas inc popl in fisubrl or test adc or pop push mov adc aam dec adc mov clc xor stos jae cltd push movsl ds dec xchg mov xor dec int3 adc mov push mov mov jns ja xchg mov in (bad) cmp mov bound jno add push divl sbb push sbb mov lret xchg into test adc ds rorb bound popf pop pop add xchg mov lret adc jmp push in cli push test dec sbb fcompl inc icebp xor xor arpl xor punpckhwd cld lea ja std testl mov lret hlt scas xchg aam dec adc lods mov mov mov pop jae dec and inc add add or xor adc dec fmuls ficoml dec fisttpll sub push add inc lock popf add popf jne faddl mov dec addl xchg fwait int3 mov (bad) push hlt mov or icebp cmp frstor push out adc int mov or adc ret lods (bad) (bad) jp sub sub pop pop lds outsl ret dec lods push xchg push mov cmp cli mov mov sub xor pushf ss pop insb popa or ja pop mov faddl shlb cmovge mov mov and jmp adc insb adc enter pop cmp push cmp inc pop int ljmp pop cmc sub test mov das mov aas mov mov sub inc sub mov mov jle pop sub ret pop pop push (bad) fbld mov stc push hlt xchg loope (bad) mov mov xchg or (bad) loope sub push and push pop jle cmp mov mulb mov leave mov cld inc jb loop popf add mov ret daa outsb ftst insb pop mov mov inc hlt adc xlat pop stc ljmp xchg int mov insl push cmp out jg xchg and fwait test (bad) cmpsl sub jb in pop cmp fdivl cmp pop mov lds sbb mov aad cltd jg std shll push mov mov dec aad inc jl adc pop jmp (bad) and pop testl cmp jecxz imul dec das clc mov sub mov in repnz mov and enter gs addl aad inc mov mov mov jo ss xchg into mov movsb xchg outsb xchg imul pop sub int3 (bad) iret sbb adc sti idivb jb mov mov (bad) ljmp negb mov pop jl leave adc test daa mov (bad) push stc ror cmp push loop imul mov aaa aaa inc jge jbe mov xchg outsb lcall lods and in pop sub mov in inc es mov outsb bound jae insb add iret fs cmp xor inc xor add test repz inc inc daa int ret cmpb adc jbe aam add aaa dec adc mov fldcw in (bad) negl mov lcall inc adc call xchg xor in cmp jl pop jb fcmovnb in xchg and in jmp es (bad) adc das inc fwait popa lods cmp jo cltd xchg xchg (bad) popf push int jae cltd cwtl pop xchg ret adc out fstl inc ja mov mov out fistpll imul mov daa cmp xchg scas adc push incl scas (bad) clc lods lock sub int3 cwtl pop fidivl push cli daa push or scas dec cmp pop or add jl lret movsb adc xchg adc mov aas inc dec je fcmovb movsl and inc xchg das loope or jns mov sbb mov (bad) jmp repz xchg js sub pop aas jae sbb xchg mov cmp ret jnp push xchg xchg xchg lea cmpsb nop dec sbb out popf jle sbb push cmp push and ljmp jbe jmp jo gs mov mov push test add es shr int3 scas and idivb test lea pop popa sub aaa xor mov fstps ljmp lret stos loope push sub xchg jmp jl (bad) xlat push mov movsl dec push flds pop iret jae dec adcb mov push sub push mov sbb int3 test lods sarb test mov pop outsl sub mov push push xchg jbe (bad) jne dec push rcl adc fidivl inc jno ja xchg xorl mov sub or adc imul leave pushf add jg fstpt sub sarl rorb aaa or pop sub mov gs inc xchg pop (bad) out pop (bad) mov out jecxz mov inc ds mov add aaa mov push mov pop push hlt inc rcrl fcmovb sahf cmp dec mov or inc sub inc xor pop dec into mov sahf mov or cmpsl push jno arpl mov and (bad) cld xchg inc cmp ret aam xor cmc add xor aaa rcll std add mov in dec std cld xchg mov sub jne (bad) shrl or mov scas cmpsb cmc int3 les cmp mov imul pop push push popa push jno insl out xchg leave add rol or pushf mov inc push lret jae out shlb sub push popf loope pop lds fcoml xlat (bad) adc sahf add negb mov cwtl pop in ret jbe adc or pop lock fsin loop fdivl push mov into and add adc and mov fist xlat push imul das stos inc sbbb stc cmp xor sbb mov test mov mov ja cmp mov cli dec clc in fld mov mov or pusha repz imulb xchg jb jge cmpsb imulb daa ficoml imul popl ds adc aam nop loop out stos dec (bad) and test dec pop clc fld hlt dec dec (bad) cmc xchg mov in fwait mov shlb popa or inc std adc dec sbb nop cmp inc jb dec adc mov push pushf sbb lea daa faddl popf and cwtl mov fstpt sahf out or pushf cmp mov mov test sti ljmp paddw add and push mov and stos xchg cwtl push mov push out jb ror daa mov jns hlt cs inc inc ds je daa cmp xchg xor add sbb jp pop or fcomps and adcb aaa cmp iret adc outsl iret push jg insb movsl out sub aaa dec test cmc ficoml push (bad) mull inc sub jecxz nop add mov mov imulb mov push push insl les das ja (bad) jl mov js lret iret pushw in rcrb lods cmp lods dec lock sub popa jb mov mov ficoml out sbb and cmp ja aaa inc pmaddwd sub inc test push mov sarb aas sub es imul jnp loope or adc sbb and mov push cmc icebp xor or sub cli cltd lods dec (bad) icebp out add lcall or in ja les push outsl imul (bad) push add push inc adc or mov aas nop add mov popf mov mov leave pop pop jb fimul cmp mov lahf sti add or int3 or jmp mov sub aam int3 pop push popf outsl enter lods (bad) xor mov imul wbinvd js sbb and shl test inc lods sbb xchg test cmp cmp hlt repz mov jns xchg mov out push pop (bad) and lods movsb imull xor aad insb ds sbb out test test jmp scas mov mov insb xchg dec (bad) jge into xchg pop ffreep push push in enter lret lahf cltd test cltd xchg ja fidivl pushf jae les decl sub (bad) cld lea shrb push push enter add je push inc push (bad) jb cli push movd jge outsl sbb lods mov add adc cld jl pop mov cld jl dec ljmp aaa jne add imul push mov or jp inc xor pop scas fcomi xchg das xchg sbb bound movsb push sbb rcll push sbb push lea dec repz mov daa push pop fimul aam fistpll mov mov addr16 push icebp (bad) jnp inc sub into jae jmp and out movsl in pop or test mov (bad) rcrl mov push and out insb popl lea mov xchg add and lret iret fwait test sbb sbb lret cmp pusha sub push push outsl and xchg sbb inc shrl adc cltd adc jmp jo mov ja mov mov repnz fstl cmp scas pop mov jbe adc and or push xchg ret push mov lret inc inc cmpsb sub sar jmp scas jns jecxz test xchg sahf dec cmp push or addr16 adc stc add test add push negb xchg pusha mov cmp call hlt push jmp or js lahf xchg sbb fdivrs and ret cltd pop push jecxz mov inc (bad) push dec lds ljmp mov loopne subb icebp pushf dec pop mov loopne dec aad adc aam cmp xchg test cmp pop mov cmpsl inc in mov jae fiadd shll lret pop dec xchg rcll (bad) rclb push cmp bound addb inc lret stc (bad) xchg push loopne add dec sbb push loopne movb cmpsb cmp cmp jno cmp les sub sahf add dec pop mov hlt or sbb enter xorb fidiv pop sbb daa push fisttp stos (bad) pop mov mov nop out clc dec fwait push out add mov ret or fstpl jns cmp sbb scas pop arpl xchg std enter pop jmp dec mull outsl cmp int3 sbb pop ret mov dec stos cmpsb loope push adcl push sub cmp jl idivl mov in mov mov mov push movsb outsl or es lds mov mov sahf dec in adc inc add mov movsb jo cltd test stos sub stc xor add test mov inc les mov insb xor mov sub mov (bad) xchg or in cmp add nopl daa nop sarl inc cmp and xchg pop jbe dec orb cmp dec inc jo sbb das out insl daa jg sub and nop lea scas cmpsl mov (bad) js dec add pop loopne rolb lods sbb pop ficomp aaa pop pop mov aaa xchg bound andnps (bad) and nop push xor into repz xchg xlat notb repnz je adc (bad) sub sub push sbb cmp in mov out mov ja inc (bad) or pushf loop in xor test xchg xchg sub and repz sahf mov mov outsb lcall xchg cmp lcall stos loop lds mov pop push lret mov or popf fldenv adc dec pop popa pushfw sbb push out and loopne dec mov dec int3 push mov push cmpsb mov xor enter addr16 push push subps sbb hlt mov inc or rcrb add push mov xchg cltd inc jbe push clc popf mov dec fs ja mov mov jo mov jo inc lods jmp pushf push roll addr16 test sub or adc jmp repz jmp cmpb and bound mov or and jns ret mov and xchg stos mov mov sarb (bad) lods call sub je (bad) jns add maxps xor lds xor mov mov or fwait dec dec inc sbb leave ret test or jno cld fs mov sub sub pop xchg xor xlat cmp and imul pusha lret out mov mov add sti cmc pop pop sub inc (bad) push cmpsb and jp dec aam dec xor xchg sar mov fnstcw inc push out ret popf int3 mov je lock in movsb popf mov mov fldl addl mov (bad) ljmp arpl pop inc push mov mov jg or or cmp cs enter sub mov ja mov rcl sahf pop inc xor repnz inc loopne xchg pop mov test cmp les cwtl enter ficom push xor cmpsb in arpl xor mov ret pop jge mov stos cmpsl jno (bad) pop push adc dec mov dec into sahf mov test sub fsts das sub aas push add push mov iret enter inc cltd pop insl imul sbb sub mov mov dec outsl jae das dec sub jno xor inc das insb pop clc psllw (bad) mov mov xchg das pop xor inc mov or jp lea sbb xchg or cld and cmp or pop mov inc (bad) jo cmp sub test fsubrl (bad) outsb fs (bad) sahf add loope je pop dec add mov leave ja push into and cmc inc lea pop or outsl cmpsb scas push xor mov leave rorl mov xchg ja pop pop push push int adc xchg mov arpl mov roll xor adc fcmovnbe pop into push sbb push lock adc jle cwtl dec jns (bad) sbb sub xchg mov out mov je enter std repnz das xor push iret or add (bad) push mov push lret cwtl lea push pop sbb or test mov das mov xor imul subb cmp mov lods call mull push jl (bad) cmp call cmp popa pop lcall xlat xor sub jge jne add sar mov jns mov ret sbbl inc jbe sbb mov jmp ret enter push loop mov pop cwtl fisubr pop (bad) inc dec mov push xor mov repnz stos (bad) ja push loope mov cmp in adc loope aam mov adc dec sub push dec bound inc mov or jle sub iret dec mov test lret (bad) imul mov sti xchg (bad) mov push or pop ss int3 mov adc pop pop inc dec js xchg add push pop test xchg insl xor lock decl ja daa int3 outsl sbb or inc stos jno ret xchg jnp add add aas adc xchg (bad) cltd mov and sub les push inc pop xor fs push jge shrl jb test push data16 bound (bad) aaa out sub mov inc inc loop push ror jmp icebp ljmp pop inc xchg (bad) cld mov add leave loop cwtl out add stos cwtl inc mov pop imul popf ficom jno lea int3 jmp arpl sbb push into cs popa pop dec or outsl dec scas cld in subl jne push adc sub xor xor and je push sub adc pop push xchg pop or add jnp and dec push jnp jo lret mov xor jbe push cmp mov sub in pop sbb cs repnz sti push and ljmp cmp mov mov inc adc ljmp push jne loope test cmp adc fucom das loopne xchg cmp cli iret or sti outsb xchg and and out jne cmp sbb push and in push cs mov mov lahf jnp and jno stc movl loop stc adc ret mov mov jmp mov daa das test fistpl in inc lahf and or inc sti iret jp hlt and cmp mov dec jae pop enter jmp mov adc add add xchg int pop and sbb repz int3 (bad) dec pop pop and aad push mov mov fwait push jmp sbb mov mov mov sarl cmp xlat call push push jmp xchg inc pop repz cltd sbb (bad) fildll (bad) rcll dec add sub mov in inc pusha cmp ds jle mov aam cmp sub lea adc iret insl pushf cmp (bad) pop cmp call add sub and clc push cmpsl jecxz ss mov add cwtl pop rcrl push das fcmovnb lcall insl ja int cmp dec insl mov add push test pop movb cmp aad dec mov (bad) not jb cs fadd js jno call dec push jle jecxz (bad) int int loop lcall insb cmp sub pop iret pop sub stc lret rcl or inc cmp mov pop cmc arpl fcomp test sub aad add shlb xor sarb dec lods (bad) out leave adc popf mov add pushf test sar shrl inc jns jle jecxz aam pop cltd sbb mov data16 hlt popf sub ret ret cmp mov scas pop ret xchg push jl pop jbe movsb into fisub and int aaa imul dec fistpl idivb mov pop into mov pop adc pop cmp push lea sub lcall imul or or add push jno dec out aam cmp repz or (bad) jle ja insl jmp sub cmpsb pop stos inc pop or mov cmc imul push and cmp ss lahf jnp inc les xor jo jns and loope xchg sub pop adc int3 out mov push subb mov arpl push xlat jae fldt mov mov cvtdq2ps mov push fs fildll and test cmp xor movsb inc mov repz lods loope xor lds jge pop add mov popf pop lret xlat mov out leave test inc pop jecxz cmpsl loope xchg mov movsb pushf inc inc push mov push lcall mov push jno inc sti xchg ss jg sub or push pop xor es pusha pop sbb mov cmp inc in jle inc mov aam aaa mov cli cltd lods scas sub adc ds sarb xchg dec aam push adc jge jp scas je push (bad) xchg and mov push lret pop mov dec inc notb aas decb loop fmulp enter repz mov scas push sbb dec movsl iret je dec (bad) jbe xchg int3 (bad) ret jge loopne orl lods out pop or lods adc lret fwait das loopne pusha sub and int movsb xchg pop aam adcl cmp or mov data16 adc jb stos js rcl add loope sub jmp cwtl push add pop push or xor sti sbb push and pop in in sub adc imul imul stos lret dec or push inc aad sbb mov (bad) enter mov xor adc sahf and push mov or adc inc and jecxz add test enter cmp sbb xor loopne pop lea lea loopne inc jg push xor xchg or xor sbb jp push subl in (bad) loop (bad) mov fistl push dec mov out mov or push cmp mov ficompl dec ficoml (bad) test jae mov adc sub and outsb inc ljmp lock inc fsubrp lods sub orl pop fdiv push jae stc xor jge xor shrl mov aam sbb mov icebp test incb in mov imul lock pop dec arpl sbb sahf and xor mov (bad) (bad) pop add fild pop bound or bound mov push jo mov mov ret rol xor ret and in repz jg popa test aad mov push notb mov subl add mov mov xor push orb outsl lock fs jo push test outsb xchg adcb nop test movsb push sbb fdivl add mov fadd dec loop fwait scas push jnp mov cli add xor into sbb nop push movsl adc jb and mov cmpsl sbb and fiaddl js icebp int jmp xchg xor push xor sbb push dec stos orb fwait leave inc pushf pusha imul adc mov cmpsl adc and int mov sbb sbb imul xor fistl movl add into popa stos cmp mov or fdivrs xchg adc fidivr es jg fiadd and pop xchg sbb rcrb and lcall mov adc std adc (bad) xchg pop xchg jns movsl rcrb pop repz outsl cltd cli ficompl dec mov pop jle inc (bad) xchg fwait pop push xchg sahf jg inc orl push pop (bad) (bad) movsb sub sbb and out and mov lods mov daa xorl out push adc pop or xor fsubrs clc add adc xchg inc sbb test fmul mov xchg xchg adc push orl xchg pop gs mov nopl inc cmp push cmc mov dec lods repnz cmc cmpsb xor add test adc stos outsl pop repnz cmp mov mov ficompl pop (bad) std xchg fiadd jae xchg mov cmpsb mov cmpsl ror inc test fadds lret roll or sarl (bad) imull stos lods fsubrp cmc dec cwtl add scas mov testb fs dec cmp push popa ljmp inc push add push (bad) mov dec sbb std pop (bad) xor in lods mov subl dec xor repz mov jge pop cmpsb inc out loop psllq dec mov stos adc ret je pop fdivs adc push cld nop mov mov push cmp add xchg mov in jecxz gs fcomps pop (bad) xor sbb lret in pop fdivrl rolb lock fwait xchg mov arpl ja into stos (bad) mov insl decb pop sub scas sbb (bad) lea mov sbb push (bad) xchg incb xor push vmptrld je lret mov ret push xchg lcall test incb icebp jno cmc sub jae inc in and nop push std xchg test mov loop xchg or insb xchg out lret pop jno fimul push or sbb arpl dec int3 clc test cltd or ds popa outsl cmpsb inc xor xchg sub inc ret dec mov and (bad) imulb loop cmp push jno out gs and xchg and and int3 fdivp arpl xor out fnsave sbb or add push xchg adc dec lock idivb out mov (bad) inc stos (bad) data16 or or sarb (bad) sub push aam lds (bad) xor jmp (bad) mov bnd pop andl lds mov pop xchg jge cmp dec mov xor mov pop in jno jecxz mov pop and lock int3 sarb clc cld sbb adc (bad) cwtl jge pusha cmp lcall das iret sbb cmp xchg sub (bad) jno notl ret stc ja add pop pop xor fnsave nop or mov loop cwtl pusha xor in push sub shlb sub add out cld psraw and dec dec xor je jbe mov dec and ficompl sbb mov adc ret cmpsl gs push aam push mov push push shlb push scas repnz int jmp std cmp xor jnp insb xchg cmpsl (bad) lahf call out pop cld ss into sub xor adc dec push shlb pop fcoms aad jbe enter rclb mov fwait push iret mov and fisubr mov shl cli addr16 inc ds cmc mov (bad) pushf lahf sub enter jle and jl fldenv repnz mov and test jbe mov int (bad) into push repz adc daa (bad) cmp (bad) jecxz cmpsb cmp cs and lea push addr16 gs (bad) jne push fidivr inc cs inc xchg scas pushw mov push scas out test jbe jecxz sub xchg jge cmpsl fwait cmp popf daa lods xorb mov adc mov ret scas cmp push push jo orb mov mov call or mov mov mov pop fldcw cmp popf cwtl jno jmp and add scas repnz xor mov jecxz mov sti (bad) mov dec cmp aam mov incl nop xchg stc addr16 test (bad) push (bad) adc jns mov dec xor test xchg mov jmp lods into enter add add (bad) fiadd jo mov push lahf xchg call lds pop pop pop adc repz lea or mov mov test cmp xorl out mov aad jnp xchg popf mov jne adc cli pop mov andl adc xor loopne or cmp or fstl lret mov push in mov jg mov or ret nop das add mov lock sbb mov sub cmpsl imul jmp dec sub test mov push jae adc adc xor push out fwait std xchg jne data16 jae jle imul dec imul mov cmpsl test pushf mov xlat jns andb push mov les cli loop (bad) sti lods pop jbe xor mov push int pop (bad) mov xor jbe sub bound sub add jle push out pop or add aam mov pop sbb mov mov jne fstpl cmp xchg (bad) and lahf aas or mov or cli inc ljmp push add jmp inc xchg in pop mov js xlat (bad) in insb add push mov movsb or sbb fwait adc cs mov or xor ret push jp cwtl pop jae cmp adc test push pop push outsl fcoms pusha sbb jno (bad) push cmp mov mov lahf lea dec fwait push aaa xchg icebp (bad) insl mov icebp inc xchg mov or jmp pop (bad) push mov out cmp iret jb test sbb pop in addl mov ds push adc dec mov sub lods ja xlat inc clc inc pop fiadd cs std xchg jo inc inc jnp mov cmp jae pop sub (bad) pop mov inc sub jmp in fiadd mov xchg pusha jl pushf test xchg ds sub dec (bad) mov mov mov fcomps mov ss mov xor jno std mov cmp dec test pop mov sbb popf add push enter hlt add xchg and jge push ljmp fdivrl cwtl add sti pop cli xor in inc mov mov call pop cwtl nop lcall shrl xor data16 add fstp fs jno sarl ret bound mov inc lret ret nop or and push sub icebp js and cwtl cmpsb push out nop cmp inc lret cmp and jg test stos xchg mov bound lea cmp push scas mov loop adc cmp push leave ret mov jbe sbb loopne xor lock mov ljmp and loop in pop push movsb cmp js sahf idivl fst lret jbe mov mov push xchg sub mov pop add mov repz aad inc imul jg in jle push mov lret inc lock out cs pushf adc lcall andl roll cmpsl and out ja and jmp sti fcmovnb cwtl iret lret mov mov fwait clc xor sbb adc mov pop push inc stos lods pop cld pop arpl push cmp push mov rclb fmull push movsl std xchg xchg adc mov push mov mov jl cmp pop aas cmp xor lea mov xor nop add mov ja push pop mov (bad) mov push jnp xor cmp mov icebp fldcw icebp sbb push in jne jmp jae sbbb push aas sbb stos ss and jb jecxz and aam mov mov inc fs gs dec or iret mov inc inc mov or mov dec popf mov into ficoml mov in xchg roll mov adc das pop xor mov es pop outsb pop psubsb mov and dec push out (bad) hlt jnp and js loope adc in lock and pusha inc sbb mov pop movsl mov pop adc jo dec xor jl and cmp adc pop mov inc jne daa les (bad) sub add (bad) and fidivrl dec mov repz pop lea inc cmp sbb mov mov ficomp push arpl pushf fwait xor sub mov lds jbe xchg daa (bad) jp test dec fsub mov adc jmp outsl mov (bad) xor and leave fnstenv je jg lret fs cld or mov sub scas mov into jmp loope cmpsb xchg pop (bad) or push mov push sub jmp ja ja cmp outsb adc mov lcall (bad) aas (bad) sub ret add das insb add and orl stc bnd mov mov inc and pop pop lock insb flds inc inc sub adc insb popa gs and cmp out (bad) adc (bad) cmp push inc pop cmc dec fnop rolb sbb xchg pop out mov dec add lahf jg push pop cli jl stos sarb frstor add fimul decb mov sub add cmp (bad) int scas cmpsb cmp pop icebp lret aas jbe mov iret xor lcall xor and test lock and push fs lcall decb sbb xor xchg fucom xchg aaa lret dec mov jae adc xchg in imul shrb in movsl insl jg push iret aaa in or lock dec je jmp fdivl stc jae mov sbb jg cmp into jge daa pop jne lahf jp mov shlb add and mov scas (bad) xchg andl mov add lods or inc aam mov repz mov scas mov test xchg mov lahf fwait cmp push dec out mov dec iret jb pop add mov sub jp and jg mov sti and inc sbb call test or mov xor sbb or loopne imul mov pop dec mov xchg (bad) cmp insb inc movb sarb pop lret dec ja ret cmp push jo dec dec repnz mov (bad) mov jl sub lret inc test les mov pop pop loopne mov xchg addr16 add cmp (bad) mov and dec cmp mov add test (bad) xor jmp cwtl popa and jo fnstenv mov pop push or dec dec sbb aam mov popa push popf jge pusha std push (bad) mov mov sti in (bad) lcall add mov mov and shlb dec mov and (bad) sahf pop test push outsl inc jbe jo or inc leave mov call loop xchg and sub stc test pop stc ds push mov add das cmpsb xchg aas int3 lahf rclb sbb sub daa push fisubl mov adc call js outsb in out je,pn or movsb or ret bound add fild rcrb insb insl jbe fldt inc icebp xchg jg lcall jecxz icebp fwait jnp pop ficomp test or mov cmp iret dec cmp xor shlb or popf adc sub lods adc add mov int3 inc dec mov pop lds jns es (bad) cmpsb shrl push and jno aas insl jnp shlb pop ret divps add movsl ds push jnp pop pop ds pop add scas sub sub pop jb mov sarl pop into stc ret mov or jae test mov jb lahf or or lahf inc stos and adc inc inc xor outsl in xchg roll and mov mov jle xchg xchg xor nop push push sbb scas sub cmc xchg popf or nop mov jle test lahf fisubr adc lock divl push outsl or jns leave lahf or sub jmp add ljmp shr jmp (bad) stc xchg jnp outsl xor sub adc mov pop sahf or or push insl push cmp jns mov fbld iret xor cltd int3 hlt add add push (bad) lcall cmp data16 gs in test add fcmovne leave loop rolb bound pop in push mov jno lods and movsl fabs rcr lock push or movsl mov ret jbe xchg mov dec movsl adc dec daa xlat movsb (bad) inc jge mov je pop cli js icebp testl jg mov (bad) or call xorl repnz push jg mov mov add lret push add out or mov jne and (bad) aam loopne hlt scas mov fs push and lods test sbb or lahf test stos mov ret sbb jnp sahf mov rcrl mov xchg mov lods cmp xchg outsb outsb jae lea jne mov inc iret cmp enter adc mov mov xor or daa add sahf mov jmp cld lcall jae stos jp jmp fldcw push add jno mov aam jl sarb pop test xor jp clc cmp pop xchg (bad) or and mov rclb pop jnp mov sub mov sbbl stc jae ror js jb movsb mov shll in cmp push pop add xor sub or test hlt subl dec iret jecxz aas popa test out mov mov mov rolb int3 sahf dec adc pushf rcrl dec rol adc data16 (bad) btr jmp scas sub ds rcll sbb hlt push add sbb inc xchg and (bad) arpl pop lret mov lret nop jl mov enter js inc bound mov in jae mov in jl lea lcall mov jl inc mov push or je bound mov stc ja enter lret sbb clc or jns jle jl test sbb ds dec test cmpsb inc repz cltd add sub push push aam imul push mov cmp inc jbe jns bound enter push loope push xor aam add xlat jno inc out mov xchg mov inc dec jno std adc in sub std repnz mov (bad) sub push jg cmp fs fisttp pop pop or sti push adc jmp mov sub mov lret arpl cmpl jl jle jb scas or sub push push adc ja and rclb sub mov nop inc jno rclb mov add scas mov sbb dec mov stc push pop into aas adc pop in popl stc dec sahf mov sbb mov pop (bad) lret mul leave or hlt fadds cmpsl xor loop test (bad) into out xchg push xor out lods sahf cmp (bad) jne cmc (bad) mov adc dec frstor push inc enter push in into xchg sbb sub sbb shll movsb mov stos push fstpt mov mov mov mov (bad) fistpl outsl insl (bad) icebp loope,pn (bad) sti mov imul xlat xlat adcl sub ja mov in xor daa mov mul mov adc push pop int3 popa mov push insb cs (bad) in sbb sub or mov push sub sbb adc fdiv mov mov dec sbb out test xchg dec push inc jg inc inc adc (bad) jl inc sarb stc negl std movsl xchg add pop or out push (bad) (bad) decl push dec movl out imul out outsb cmpsb (bad) sbb jo mov lock stos lea test pop cmp ljmp sbb add mov inc pop mov mov push out rcrl xchg and arpl xor dec sbb pop mov ret fdivs inc (bad) lret ds cmpsb iret sbb xchg push les scas pusha mov dec sbb mov mov aas pushf aam mov fcomps pop repz mov mov cmp cmp mov lcall pop push aas hlt inc add repz enter das out lahf mov and ror negl fbstp mov (bad) in test push iret in inc xchg mov xor mov aaa sbb fldl xor sub jb call mov (bad) icebp push jae pop lret (bad) imul stos or stos xchg fildll xchg cmc mov sub or push push adc dec mov pushf and pop push aas lods push inc xorb dec fadd fisttpl inc (bad) sahf cli mov (bad) cli test sub push cmp into mov enter rcrl mov pushf aam outsl in pushf cld push xchg hlt adc int3 and mov and mov inc jmp cld addb stos in lret pop incb in pop mov mov pop into fs sbb adc xor jb (bad) sti jmp xor jo adc mov ja inc inc and rcl xlat push mov les xchg shlb mov imul fs push leave pusha dec loope cmp loop xor jp adc ds mov xor cwtl ds or sbb sti inc leave daa dec movsl mov jae sub clc mov es orl outsl push in xchg jmp imul loop out sub mov test dec pop and in adc xor test push or pop aaa mov pop fs or testl jbe dec xchg xchg lock mov (bad) fisubrl push jne inc mov aaa push and xchg push (bad) sub add test or sbb xor bound std add mov pop push inc ljmp jns and mov call inc bound lcall lods sbb pop adc push adc stc std outsb add push lods cmpsl fcmovu pop jmp and sub repz pop xlat mov int pusha mov aas ret (bad) mov icebp fcompl inc add fimul pop xor pop nop in in add jge push mov int mulps outsb pop (bad) pop (bad) lret not rcl or ss cmpsl fildl in sub add mov fildl (bad) and vpunpckhbw cmp imulb ja pop jmp xchg addr16 xor cmp enter rol stos shr outsb jmp psrlw push cmp int3 jno xor jl inc rcrl jl mov fs ja fstpt pop sub cli cmp pusha pop add xchg (bad) add (bad) mov and mov paddsw push ljmp nop adc int add mov and pushf sub sub sarb fidivl push roll jl rolb nop and push mov sub mov jmp testl cmp jns lods xchg (bad) rcll adcl jo jmp bound dec xlat mov dec push (bad) stc and sub mov sbbl loopne int sahf lret jp pop (bad) jne add or and pop adc mov lcall lea sub xchg mov jp imul push lods and ret (bad) mov pop loope aam jnp out mov pop dec loope pop lods mov jp ficom adcl jne push cmp jbe pop stc jmp jle lret or pop pop sub sbb sti les hlt sti cmp push pop mov dec jbe or push into adc sub xchg cmp popf dec popf gs xorl out xchg scas jg (bad) jbe stos cwtl mov movsl sbb mov add cli ljmp inc (bad) cld repnz adc jle out repnz das and push outsb imul jp outsl mov push xor and push aad mov aas pop loopne (bad) outsl insl mov fadd (bad) mov mov in mov xor popf pusha sub stos fdiv push ja cmp mov jae mov or fdivrl mov scas xor jecxz pusha mov or mov dec jle push jecxz movsb stos and dec mov mov loopne sbbl jg pop sub daa sbb ficoml dec jno mov jae repnz pop mov mov (bad) les nop (bad) mov mov popf repz nop stos lock test dec div or mov add mov mov mov mov sub ret pop cmp dec or adc fdivp into outsl push xor sub dec cmp nop fadd adc xchg push imull jecxz sub push or and and les cltd jl sbb ret sbb rorl enter repz jno xor leave or leave sbb lds lcall mov es push addr16 adc hlt inc sub push push xchg or aaa push cmp lods pop xor pushf inc adc cmp out les js jecxz cld xchg add je imul jnp or aaa nop loope test sbb jno jle sbb and test and insl cli xchg inc pop outsl mov mov cmp xchg xchg aaa add roll pop leave ljmp out mov jo or or insb jmp (bad) mov aas lret out mov sub push adc in ja sub js dec stc lret sbb in add dec data16 fcomi mov in enter adc mov enter (bad) or push jge xchg test and aas or dec mov lods mov cld sbb sbb rorb addr16 dec jl clc adc call iret imul (bad) out sti mov ljmp pusha inc pusha or mov pop popa aam mov pusha sbbb (bad) repnz jns in sti mov mov jge es mov ret xchg inc fimul jmp dec add fnstcw inc xchg or xchg push data16 jge nop test pop fcoms dec mov xchg lods and test pop lret lods pusha decl cmp sbb (bad) arpl sahf mov imul inc lea rcrb daa (bad) push mov sub add add lea imul jp lods add dec lahf insl fsubrl in mov fisttpll pop push inc mov cmc jp pop popf sbb and mov add jp adc xchg andl mov mov fabs sbb loope xchg aaa xlat sub mov jl movsl jae lret inc ret popf repnz outsl mov mov imul adc enter insl ret aaa and mov mov ljmp movb mov les cmp in sub jae sbb test andl adc pop test xchg mov xchg mov mov pusha lds enter mov xor pop jl jnp fs lock xchg inc xchg scas jmpw xchg bound rcr push push jbe das mov pop les push cmpsb mov pop movsb mov mov and (bad) xor cmp out lds inc jp pop jg test push jb vmread xor push (bad) divl mov jle out mov inc pcmpeqb gs sarb lds sar jmp test sar cli call xlat (bad) je (bad) push mov js and cld push (bad) (bad) subps cmp shrl adc or xchg ficompl rcll jle stos adcb sahf jge mov xor ret es jo pop enter fincstp insl pop mov shlb push movsb mov xor inc loope xor out out fidiv shll repz sub cmp mov mov les std xlat fcos xchg dec add subl mov pop test mov loop pop pop fld push sbb cwtl popf pop inc xchg test xchg inc outsb clc push nop (bad) push push or cmpsl pop ss pop insb or mov rcll shll movsl loopne xchg jno jne mov aas xchg xchg add test cltd xchg sbb mov inc leave cmpl sarl aad data16 xor xchg cwtl cmp jae fwait lea mov or btr les outsl pop pop or incb inc mov mov icebp sahf cmp sahf subl mov xchg dec dec in cltd fucomp into leave and mov xor cmpsl loopne out or sbb push push daa xchg mov in loopne pop iret push or fstps push pop cmp or popa mov xchg aaa sbb clc mov inc pop mov mov lea lock mov fistp mov inc es adc lds add bound mov sub pop and jno fdivl cli push fs enter es cmpsl andl or cld mov cmpsl sbb mov ljmp mov js push jecxz loop bound adc push mov inc add repz xchg aam adc inc inc add imul aad dec pop leave dec int (bad) iret mov scas scas cmp push pop jo lods call mov cmp mov cld sbb push cmp pop push dec sbb cwtl xor mov cltd and mov dec stos lea scas leave jmp scas pop inc test fs add out (bad) push cmp push nop int mov xchg mov fldenv (bad) jne (bad) push pushf xchg cmpsl arpl lods cmc push lock xchg xchg hlt jnp mov (bad) jo cmc pop movzbl shrl in pop inc in out test mov push or push cmpsb test in int jge int mov daa inc or dec js or popa mov adc mov and mov adc pop daa test int3 (bad) repnz nop jb pop add jle iret push test dec inc mov cmp xor or sar nop aaa push cli scas inc push inc ret cmpsl push sub out pop in dec test lret sbb dec cmp sti fucomp mov loopne adc call daa and jge sub cmpsl cmp mov pop pop jp and es icebp jmp cmp (bad) icebp inc sub out cld test jnp mov loop dec push xor insb int3 pop cltd cmovg push aas pop scas sbb inc push popa adc cwtl fcoml jge and mov mov xchg mov jmp and inc xor add mov xchg std lcall jp negl arpl arpl je adc fsub ss inc inc nop xor (bad) cld rorb xchg xchg add outsl and (bad) out divl cli ja jle es cmp mov inc inc fwait pushf and pop cmpl xchg rcll push mov adcl bound fiaddl lret cmp ret cmp push test lds add jns enter movsl mov lret lock lods mov ljmp pop sbb add cmpsl push lds pop daa es lahf jp mov push outsl je,pt int3 das xlat lea and lds jno out mov je sbbl aam inc gs loope push mov xchg xor daa (bad) popl roll pop push cmp add (bad) jno mov cmp (bad) int insl sbb pop and jo add mov lahf loopew jg xor into rclb out push (bad) inc mov pop mov clc aad mov mov or popa sub ret ret adc push movsl sbb xchg sub data16 fstps xchg pop jle ljmp in pop addr16 shrb icebp lcall xor mov jno inc in xchg xor lods sti or xchg gs popa lods (bad) lods and cs scas cmp dec daa insl hlt push mov xchg sbb push cmp es ret dec push ljmp int fnsave dec jmp push lcall cmp je pop pop lcall faddl or (bad) mov pop jne inc or rorb mov ljmp jmp jl ret into lahf shl mov cmpsl push inc jb cli sbb in stc test sbb jb icebp or add add push stos leave sub popf (bad) dec xor ja xchg std dec xor fwait daa cmp insb pop sbb out lock movsb push popf lret stc dec cmc insb add outsl fwait (bad) dec mov add mov ds das scas fimull sub ret test imul mov dec sub std (bad) xchg and ljmp loopne push lcall lock adc jmp adc pop loope mov (bad) jno pop cmp inc push sub mov xchg fwait add rcrl mov fistp aam repz mov sub push add push cli jns cmp jle loopne pusha enter mov shrl jb cli test jne mov mov and mov or cmp imul jo lods aas push xor jp into nop popf push cld adc popf loope add push add mov sub aam out adc insb pusha sbbl mov adc sub vmwrite or xor ret mov insl mov add pop inc (bad) xlat pop mov ror jae inc fldcw inc out adc xchg jge mov mov jecxz (bad) in mov push ror add das pop lock jl dec ficoml mov adc mov xor pop pop cmpsb (bad) cld mov jno dec xchg movsb mov mov jb cmp adc ja mov adc mov jo fs out test add dec jmp adc lea mov cltd test fs lock inc loop les push pushf inc psrld xchg fs bound pop jb sub decb jo (bad) ja lock inc sarl mov test inc pop cmp mov movsl xchg repz ficomp scas scas jecxz sbb pop aas xor fcoml in insl pop movsb push fsubs (bad) fneni(8087 movsl ret cld sbb fldcw xchg (bad) push test icebp lret push stos xchg xchg sbb push inc (bad) push fcmovnbe jnp xlat fs add and pop add in fidivl out mov and ja lock fidivl insb cmp push repz ror sbb cmp fisttpl add mul mov adc dec leave shll inc fdivs sbb adc shlb jl mov loope mov out cli iret mov out sbb ret icebp decb and ja and fs sub adc cmp decl fistl cmp and push push mov sti out (bad) idivb mov jl aas jg cmpsb insb ret sub mov mov popf fs js xor (bad) jnp loop out and mov push adc scas pop adc mov in loop insl mov lret lods pop add (bad) xlat jecxz adc aad xchg (bad) sbb add mov popf in jbe push repz add xchg mov and dec xchg js mov add inc add mov dec arpl cwtl inc pop jno stc adc add push pusha inc fisttp shrb (bad) mov and (bad) enter bound rorb pop mov into imul nop cmp inc hlt xor add xchg pop ret jnp add and adc pop in scas es into mov test lcall (bad) lds movsb push stos fisubr push sub mov (bad) and sahf mov pop dec ret mov test fiadd in jmp mov jne sub out pop lcall pusha ljmp nop rclb mov dec jmp jnp fisttpll xor (bad) push call or or leave inc sbb sahf push jno ficom or jnp xchg mov sahf int3 inc stos inc add and insl cmp sbb loop orl dec mov (bad) dec outsl adc in adc test push xchg mov xchg and (bad) mov add sbb mov push adc lcall int outsl dec dec loopne es lahf test fs fstps fimul sbb push or cli or inc pop fwait adc and test pop out ss xor lcall mov pushf and lahf lea ss fcoms ret and lods and lret (bad) add jg decb inc loopne sahf sub xor mov xchg pop xor jne out xchg lods fmuls adc jge rorb add or dec inc imul jae enter je aad inc shrb inc jns push or lret fs dec xchg mov lds sub xchg xor movl daa or (bad) mov pusha mov inc and andl mov dec cmc xlat mov jne push (bad) mov dec jne xchg xor or aad loop xchg dec test xchg addr16 iret stos mov cmp jbe xor ss sbbb or sub mov xor adc pop pcmpgtw (bad) fdivl in fidivl fisttpll bound fcmovb xor add cmp (bad) cmp lods or lds adc mov sub cs out adc mov sub pop data16 inc popf scas or inc mov xchg dec jp xchg push dec mov sub cmp loop (bad) adc insb hlt stc inc inc pop leave lds mov or push loopne test mov push iret jle or orl inc fs unpckhps fdivrp daa stos jl repz out xchg xchg (bad) jge lods cwtl outsb lahf pop mov insl lods xchg addr16 push or fstl popf (bad) insl xchg xor movsl push jne fsubrs lds add mov sahf xchg aaa inc pushf out inc mov or mov pop mov xor bound (bad) mov sbb mov loope cmp mov sbb mov cmp mov and sti pop je lret sti sbb out into jmp jle push fwait lret mov mov mov and dec dec mov push sub out jmp out lds dec mov sub mov lahf push sub out xchg stos mov mov test lea lahf push (bad) das pop pop cld jl test inc (bad) aaa fucomi add push clc punpcklbw icebp loop jbe adc cmpsb mov mov ret dec xor mov mov or imul xlat in adc xor sub and addr16 call jns mov and cmpsb xchg push outsl jl cs fs push inc dec daa cmp mov cmpsb jle sbb je addr16 rcrb pop jno rcrb adc mov fidivr sarb out dec sahf std cltd push in cmp int3 cmp push (bad) jle cmp test push stc lock or xor outsb imul add cli loop sbb js inc cmp add insb mov jle aam lds sub adc dec lahf ffree and mov js ja sbb popf xchg pop push into jmp insb sbbl cmp (bad) call push rcr mov in mov leave add mov add fnstcw dec dec ret lret mov cmp or jae cmp arpl mov inc xchg and jle aas subl ret setbe jle push cmpl sbb test pop adc je adc fs pop test inc stos inc rorl and cmp out dec push mov mov dec xchg (bad) adc imul mov jb xchg add mov dec jb test out test push xor in fsubrl mov jo jne sahf test dec lahf (bad) iret loop inc fcmovbe xchg out mov and (bad) and ret xor xchg fbld jbe addr16 cmp dec out stos xor xchg rcrl xor fbld lock in enter test or adc enter xchg pop test enter pop cltd je and cmp push mov test cltd enter dec mov das addr16 sbb test inc dec lret xor fnsave sbb bound cli sbb xchg scas mov enter push mov or pop sahf inc adc lea dec stos dec aam sub daa mov movups cmpsl add fsubrs jns push mov fdivl call ss sub jnp out out push in iret pop sub sti and push pop sub loope or into mov cs dec ss mov test jl and bound pop mov sbbl add fstpl int mov and cmp add xchg (bad) aaa jne popf popf and test roll mov fcmovnbe ds lea dec mov adcl outsl gs lods das cmp jb push hlt push xor sub inc lcall push push insl cmpsb fdivrs adc fwait dec adc ficompl mov xchg push scas inc fsts pop aaa dec mov and adc jbe sub nop scas push and mov dec sub xor mov and adc sahf xor mov ja inc lahf pop mov adc inc aam pop aam pushf inc cld xchg movsl push xchg mov mov fwait mov shlb push icebp or fwait (bad) (bad) mov xchg lea jl out movl dec or (bad) js add and sub inc (bad) gs jge pop push in cltd xchg cli xorl inc lret adc xor call addr16 xor outsl ds xchg sbb fidiv insb cmp gs mov lcall xchg cmp icebp out xor push bound add push xchg push leave push sub (bad) stos dec lock (bad) (bad) enter ja mov aas icebp (bad) mov outsb lock cmp sbb adc add xor pop fsubr sbb (bad) in mov sub or jae je mov fwait push ds adc dec xor xchg or (bad) push loopne or fsubl xchg add sub fidivr push inc je loop xchg nop scas adc andl pushw jmp movhps fnstsw pop cs loop mov mov cmp push pop push scas jg cmpsl loop mov sbb cltd enter faddp leave (bad) jae into in mov rolb mov ljmp xlat sarb (bad) shrb push iret jnp aaa cmp cld ljmp dec mov ds inc or pop pop jnp fwait mov mov out sbb cli mov inc cld out leave mov ret jmp mov (bad) push incb insl sarl or or les scas jb es daa sahf cmp daa pop out daa cmpsl xchg pop xor sbb dec jl ffreep mov cmp xchg lea (bad) push scas lcall sub loop sbb aas cmp sub sub dec xchg xchg fimul incl lcall fcompl pop out jb push int xor cmpl lret test lods sarl insb cs mov cs cmc mov push xor daa xor push jbe xchg sti cmp xor inc push mov pop fucomi cwtl les popa push jns adc dec sub leave (bad) pop lcall mov clc xor ja adc or jecxz jle mov pop sub sub jns jne out sbb and ret push out jl pop add dec cltd fwait lahf bound xor dec loopne xchg ds fsubrs in pop xor adc cmpsl or mov call (bad) ja and dec mov ret mov and mov jg xchg out pop inc and push cli popf cmpb lods xor fcoml or addr16 pushf (bad) js test xor mov (bad) aaa pop xor add mov lods jne mov les outsb dec dec punpckldq pusha push movsl and xchg pop ds mov scas das mov pop aaa sahf lea loope xchg or fldt and ja xor pop out jbe cmpsb push mov sbb jecxz jl pop and and jle add lods mov test adc pop nop rcrb inc stos dec jmp cmpsl das test mov adc sub subl mov into cmp stos pop leave shlb imul loop int cmc pop push loope dec out bound pop adc fisubl push push mov mov mov xchg add cmc repnz xchg pop test dec inc js jae mov movsl mov mov clc aaa (bad) mov mov nop inc (bad) xchg pop (bad) js enter inc jmp push mov hlt outsl ja sti sbb cli xorps pop enter cltd inc (bad) sub sub sbb cmp lret int or jno jo clc xchg mov icebp in (bad) lods add sbb test movsl lods jb (bad) lret dec pcmpeqd pop in leave xor sub mov out popa lods daa mov push outsb movsb xchg xchg out pop push mov sbbl cli jnp nop lods fs out icebp jo mov push sbb and iret mov dec cmc mov cmp lcall cmpsb xor lods push mov fisttpl out mov pop jno sub outsl xchg (bad) sahf shlb xchg lea sbb xchg lds cmpsb jns jns xchg arpl or test lds je xchg out jae add mov inc pop push daa repnz ds cmpsb test mov rcll test pop adc xor xor pop pop lods repz push sbb mov arpl aam (bad) jg pop xor jns inc inc sub test (bad) int3 mov fdivrs es lcall cmpb xchg adc lods jmp aad imul negb sbb cmp insb jbe mov pop add outsl add inc xchg into ljmp enter outsb clc adc leave cmpsb mov imul dec push cmp sub in popa outsl pushf iret scas inc sub aam mov js pop movsb mov mov (bad) fldz dec les push mov push mov push bound lods xchg inc daa dec lcall sub sub (bad) int clc sahf into jmp or or pop out inc xchg xchg pop cmp idivb xor or pop bound xchg repz sbbl sbb popl adc add lock add add arpl xchg icebp add xchg sti mov dec inc xchg fistp std std or mov jl xchg nop nop movsb push arpl jle adc adc es imul inc mov push lret jb cmpsb dec jecxz test cmp sbb out push dec push ret shrl pop scas and cwtl repnz icebp push mov dec (bad) mov lcall in mov lcall nop aaa xor xor push data16 sarl js xor (bad) popf xchg lcall ss dec bound loop addr16 pop int3 push pop test loope lret push lret movsb cwtl mov pop fidivr and out call push pop cmp mov aas xor dec sahf jge jns sbb loope inc dec pushl and or pop (bad) cmp shlb inc pop popf add out negb adc faddp inc dec ret xor cli shlb sub jp cmp add add stos add imulb test lcall adc mov sbb es xor int3 jb and (bad) or outsb pop adc mov popf stc (bad) xor es fsts add mov ja sub sahf cli adc fldt lret cmp out ljmp shl ds adc jnp or mov jg or add stos jno sbb mov iret and sbb aad dec inc arpl fcmovnb shr adc adc cmp push xor adc xor sahf jp lods (bad) out ljmp flds pop cmp popa lods or push mov cmp enter xchg test pop jns loopne sub fnstcw hlt dec xor ja sbb jl pop dec ret sbb pop push dec test outsl mov popf cmp loopne xor sbb imul pop cltd mov mov sub and push (bad) fiadd mov out pop mov and (bad) push jmp dec (bad) (bad) mov loope fbstp sahf shrl push dec fmul xor push daa pop out cmc (bad) push fbstp jns xor ja loopne mov mov bound out dec rorb ret cmp imulb push (bad) (bad) push leave push stc das mov dec cmp and lcall sub stc aaa inc mov adc xchg push mov repnz xor test in leave fidivr jno push lock pop in imul insb xor pop jl call cltd ja push inc xor xchg lods xchg sbb cmp jmp xchg push or sarl jp mov ja scas jns push mov das xor cld pop and lret rcrl lret push push xchg aam addr16 cmp adc in push mov mov push sbb mov jp push xchg mov aam jecxz leave mov push (bad) dec add aas bound test lea push jecxz mov or test popf andl sbb rolb das insb daa lret cmpsl fdivrp (bad) lcall ja cmc dec into mov test mov dec scas add pusha clc lahf out aas xchg pop dec mov cmp or pop jbe rorb in (bad) je int3 mov test cld cmp imul pop pop and jb insb out and rcr aas test arpl (bad) jno cwtl cmp lock cmp aas in jmp jb aad das mov jne data16 fs andl xor push sar mov out mov fisubrl adc pop fcompl movsl dec sti data16 int and out mov fwait lret pop dec psubusw mov call inc movsb ret aad mov mov mov rol or push (bad) inc iret pop and idivl iret fsubrl sbbb xchg sahf mov sti mov jle fimul mov or je pop dec fs sub xor (bad) in cli enter push aas adc fcoml xchg adc out sub int3 into aaa sub sete rclb push xchg mov mov bound pop mov and cmp mov push insl outsb cwtl pushf add jg jb pop add jg sarb (bad) pop sbb ror push mov xor in mov dec loope ja into mov mov cli sbb aam out dec and les sahf push mov movsb jnp mov sbb (bad) pusha (bad) hlt cmp push sbb insb fisub push das jb jnp mov scas loope into test xor xor mov xchg mov push sahf (bad) push fildll aas jmp xchg mov pop mov sub out sbb sbb rcl data16 shl add ret jns xor gs jp stc cmpsb outsb xor movb je sti lods fstps cli dec enter cmp fisubr fs stos cwtl lock sub mov cmp dec ljmp das cmpsb imul das ds jns arpl scas adc pop pop pop xchg (bad) jge xchg lahf scas stos nop push lods and (bad) mov repnz out pop jmp (bad) push dec bound sti jae push lock sbb out mov xor scas scas addb out (bad) dec shl adc mov cmp xor es xor mov mov fwait push in add mov jne ret adc push push je xchg scas pop cli cmp cs sub icebp fisubr pop lock loopne pop repz mov push xchg or dec and jno inc and sar loope push out xchg xchg mov jl xor cmp rdmsr jmp jle jo jmp lret xchg mov fimull loope sub mov cs popf or cmpsl in inc mov adcl repz out cmp aas mov ja (bad) jns cmp ss add xchg aad adc test std cmp cmc push sub pop xchg movsl xchg jb xor cmp pushl (bad) mov jae xchg fwait cmp jp popf and and enter movsb inc mov call push std mov mov ret sbb adc pop adc push cmp js (bad) imul sub adc mov lods adc sbb shrl in mov xor lea sbb push scas cmp push add cmpsl rep cmc in push mov pusha adc aas sbb rclb adc cmp sub sub pop cld cmp xor xor sbb pop mov add clc jbe test (bad) in inc (bad) cwtl cld push adc and aas cmp inc jns aas dec pusha jecxz push sbb enter bound push mov lods cmp pop pusha pop mov inc push mov or cs push ds and insb fs aas aaa mov adc fs mov mov fild repz fimull popf loope mov imul or push and mov inc dec jno int addl jle mov push sub popf in pusha cmpsb push push (bad) sar dec insl in mov lcall xchg ss jae add fwait sub xor pop and mov pushf adc mov and jns jno jne in das dec sub pop into pop ret cmp (bad) je cmpsl mov loopne push lret mov mov fwait cmpsl jge jmp jno clc fmull (bad) jp xchg inc lret ds xchg fwait in add sub outsb mov add cmp (bad) cs inc mov or and shll jb test mov test xor mov or das cmp inc ret jmp les sub (bad) xchg test into add or lods cmpsl (bad) sub mov cmp das sub push add roll hlt aas das daa mov push push jmp test or sbb lret pushf fstpl fwait imul inc and add mov (bad) fdivs movsb pop aaa ret mov dec mull and stos aad mov aaa push adc (bad) shlb ret mov ret pshufw fstps js jmp lock cmp lods ljmp cmp dec sub bound (bad) std and lods sub xchg jne jmp push dec cmpsl pop imul and scas mov out cmp out rorb and fsubrs call xchg xchg repnz out dec fnstcw sahf pop xchg out out and into jmp jg scas test mov mov inc jne dec cmp aas xchg mov push fbstp or leave xchg into mov fsubrs ret decb (bad) movsb push lcall dec fcmovne jno xchg aaa add adc dec mov aam mov sub mov add pop xchg cmp and aaa cld jae mov cmp addl xchg and iret out push dec fisubrl test sbb sahf rcrl pop jns sbb push inc in sub imul pop pushf pop jmp mov sub sbb enter insb nop movsl jbe xchg xchg xchg (bad) push jge out push lock mov pop not insb cmpsl ja (bad) std pusha je push out stc leave mov fdiv inc jle and (bad) xchg mov xchg movsb xlat cwtl jg loopne aas icebp gs lret mov stos and cmp dec push mov ret sti xor or cli and dec loope (bad) out popa dec sahf sbb xor mov lea int3 lcall mov pop push fsubr fisubl cmp ja fildl xlat sub mov jae jl out sub mov adc mov pop lret (bad) test out cmpsb (bad) jne movsb (bad) add fisubr and add add push daa pusha (bad) or xor xchg and data16 push pop ss nop in cmp or mov and (bad) jbe psubusb cmpsl jne data16 addr16 out addr16 out and inc sti enter push repz ret or les into (bad) jb repz cmp pop mov inc cmp sbb gs das pmuludq lods rol xor xor sahf pop xor pop stos jecxz (bad) mov and incb add notb adc pop cmc sbb add int xlat dec negl clc dec sub xchg sub ret jb push repz add test pop pop mov (bad) mov push arpl mov push xchg xor mov pushf cld lret add xor ja dec push daa cltd pushl pop repz insl icebp sbb orl rclb dec inc gs setnp imul pop push aaa cmp stos mov cld sub mov insl dec addr16 sbb mov sbb ja xchg inc fsubrs inc mov mov inc jmp (bad) fbld repnz out adcl pop pop sti cmp mov and sub sub xlat or jnp jecxz push hlt add jns add mov xchg (bad) jbe or pop in sbb mov inc cmpsl mov movsb or mov sbb sbb cmpsl pusha outsb (bad) cmp shr int3 jl jmp push push push fidivl js (bad) aam enter or aaa mov mov scas outsb mov test test lret rolb add sub inc adc movswl test (bad) inc dec add loope movsl add lcall lcall pusha lds pop cltd mov cli adcl pusha sbb xor es cmp bound lcall aad add xchg hlt mov addr16 (bad) sbb lret jmp repnz into add sti or mov popf push add insl pop fwait repnz into lcall aam mov and mov outsl lds test xchg mov pushf enter xchg push movsl fisttpl adc jmp push scas lock cmp ds test and cmpsb mov pushf mov lods sti mov dec mov shrb adc add imul push pop sub inc mov nop inc outsl add jb je mov push add xor lock pop lret mov cs pop mov repz call and sahf lret hlt mov push cs and fiaddl xchg mov outsl xchg icebp scas pop inc xor push dec in cs pop pushf xlat mov lcall fcoml dec jns std jp lods je movsl and sbb dec mov inc dec xlat adc std lods outsl inc (bad) cmp adc jge xchg add out test push insb fistp stc int3 ja dec lret add lret inc mov insl sbb sub mov fnstenv push pop test cmp xchg jle jbe xor xor push pop xor loope and adc mov xchg dec es or jns lret sub dec xchg sub popf stos pcmpgtd mov scas push (bad) add fnsave pop mov mov or hlt jp push sbb les jbe pop rcrb imul pop fcoms dec or jecxz into (bad) or adc notl sub ljmp push leave mov movsl (bad) sbb int adc fisubrl ret js pop cmp leave popa push pop sbb mov test decl sub stc out fsts mov pop fdivrs xchg idivb test pop ret in and mov jne insb clc inc shlb jbe xchg pop hlt mov cmpl mov out inc cmpsb lcall and aad xor add mov imul pop lahf jl cmpb sahf pop adc lea jmp pop fbld mov fs cmp mov dec jno mov lcall inc add mov cmpsb and (bad) into fwait cld out sahf and pop inc addr16 mov (bad) dec and gs push (bad) xor add pop inc outsb mov mov sahf shrb aas inc (bad) imul (bad) pop add sbb scas scas popf jle cmc push mul stos mov and cmc dec dec cmp mov andl pop mov shl addr16 pushl subb iret xor mov fist push in push sarl mov pop adc (bad) iret dec es (bad) jp arpl xor inc mov jecxz stos pop jg inc sub push mov in sub mov xor cmp lret adc rcll dec xchg int cmp xchg mov cmp jno or jo mov or mov dec mov (bad) fistpl inc sub mov pusha lods scas sbb and aad push or das dec adc dec out test inc inc (bad) inc push cli aas or subl imul call or pop sub out lret push aam lods or pop push ss mov inc and adc cmp cwtl mov add test ret pop inc sbb roll sub push pop jnp das mov xor in test cmp icebp insb mov xchg xchg nop xor xchg pushf xchg mov mov add imul cwtl and mov xor xchg mov gs scas cltd gs jo fwait in xor je (bad) mov mov pop mov aam cmp pop (bad) cmp rcrb arpl or (bad) pop insl imul push sti daa js pop jno jbe jmp scas scas in dec adc mov test mov adcl mov inc adc scas sub push pop call dec sbb mov mov mov movsl pop sbb add dec ret adc xchg (bad) jle sub lcall lret in jbe xchg stos out xchg sti dec xor inc pop xchg mov jnp fmull dec xor fs decb dec test ds and in jo ja pop fstpt jae fsts or ret add hlt jne mov jge adc dec (bad) jns mov cmp lds int or loope shlb icebp and hlt rcrl push movsl scas cmpsl and iret or stos push jle mov jecxz out push mov ljmp in xchg test sub or fstpt push adc ds hlt xchg xchg push (bad) clc mov or hlt pop mov or jp jo cmpsb cmp cmpsb fldl sub inc fnstenv mov mov ss sti mov repnz inc fistp pop sbb push push or inc inc push lcall ljmp in adc int3 cmp xchg jecxz cmp out xor in inc xor clc cld adc adc mov iret push mov aam add int3 test and out sbb add fild or arpl mov mov aas jnp jmp add push mov and xlat inc jne mov adc in insl mov pushf (bad) mov insl add sub dec clc imul push sti fsubl shl or test sub add pop adcl xchg aam and inc js adc lds arpl adc jne or xor es adc cltd loop jnp ds xorl in outsb (bad) jae ja dec pop push ljmp inc stc push int3 sbb pop push mov jmp push lcall pop mov mov arpl fidivrl push test into in daa pop xchg jo add add push adc out sti xchg dec lea cmp test mov push sbb adc and test lea xchg mov aaa sbbl pop sub mov sub jg mov inc and xor out arpl add push cmp xor in jge mov mov sbb mov (bad) cli inc loope adc jp (bad) mov mov dec cmp fcomps sbbl jmp addr16 js and stc lret xchg popf mov sbb setae and and enter imul mov xchg xchg into movsl inc adc in adc push in fpatan push inc jg add ja cmp cltd sub in push out pop out push (bad) sub lods sahf sub int inc jle,pt pusha imul test cmp or hlt psraw popf add inc insl (bad) rclb dec and cmpsb je fsincos sbb stos gs inc (bad) lcall jb mov jnp mov shrb imul mov adc (bad) and std mov cwtl inc and mov push fdivs sbb mov iret ret fsub and pop aam xor out xlat inc lret jle push or adc es cs shlb (bad) out insl enter mov fs loopne push cmp mov and rcl pop rolb (bad) outsb sub push mov cmc (bad) or test sub sub ljmp sbb sub jp cmp jnp jbe daa dec test outsb movsb xor scas ret pop sarb repnz enter mov xchg lret cmpl (bad) mov and repnz jmp gs or dec dec mov jmp hlt dec jae les nop iret call pusha mov mov fist inc xor dec push push rclb fdivs pop fcoml test out outsl andl inc stc xor push imul dec lahf and out xchg mov and loope push cmp test subl sbb mov xor jb mov (bad) ret loopne fdivl and push fs out jmp xchg dec sub imul pushf test (bad) push mov (bad) inc fsubl rcll jno mov in and sti pop mov or sub daa push cltd jno dec and sbb int jecxz or mov dec xchg push add sbb xor ret (bad) sub fmull fwait mov and sarb dec cmp cmp out divps popa hlt (bad) hlt mov lcall fldenv xchg test imul adc xchg ss adc mov fsubrs jl addl xlat xorl les frstor js inc (bad) pcmpgtd aam cmp mov ljmp aad xchg lods lret or je test jmp ja lds js xor (bad) adc test dec dec addr16 jecxz adc in cmp push mov aaa sub xchg cmpps test or lds jmp mov pop test cld jmp dec test mov jecxz loopne addl inc mov arpl (bad) or divps scas mov (bad) addr16 fistl lahf pop scas mov inc adcb add cmp push mov dec cs sbb jecxz sbb mov add pop insb daa xchg cld inc or push xor pop xchg imul mov adc mov test or test (bad) fisubr or sti push or inc pop in mov int std sbb frstor add insb push mov rorl jae das repz ja insb popa js xor dec lock jl xchg xor clc mov cmp insb out (bad) (bad) xchg std shlb add cltd xor jmp mov adc xor fwait jns push bound lret push sbb test imul dec push jb pop call stos cmp gs pop or and and cmpsl jne decb or out scas sbb mov aam imul mov sub jae mov pop test repz mov (bad) fucomi popf movl xlat cmpsb and out rcrb test fisub mov fstl or fnop mov jb pushf sbb mov jne lods daa inc xchg inc sar mov call cmp mov mov xor or and scas mov orl push jp sbb movl mov mov testl sbb fsubl dec add div jo testl popa mov add add adc int3 mov push and mov mov sub sbb sub add push jne dec fadd js out ror int3 xor ret dec cli dec or call xchg adc dec outsb jae xchg (bad) icebp dec ss inc iret push scas or adc cmp mov adc jo cwtl popf add inc sub sarb test push mov xchg xorb iret mov xchg xor shrl out jmp push fucomip hlt dec mov push or or test test ret pop insb iretw add mov push psrad ja lcall clc int3 jbe imul cmp push ds xchg fwait mov movsb push cmpsb shr inc mov or lods inc mov xor sub xchg pop or inc mov gs test xchg shrb xor ds aas pop movsl push cmp pop loop ret xor pop fildl pop dec sbb cmp ret inc or lods adc cld (bad) (bad) jno,pt imul sbb shll mov inc sahf cmc sbb adc inc fbld sbb push les dec (bad) stc add iret dec push (bad) lea dec es lcall push imul sub mov pop leave loope insb jl xchg out outsl cwtl rorb xchg mov cmpsl lret xor cmp jb pop push jne int3 lahf add call ss addl popf outsb insb cmp mov cwtl (bad) out sub inc imul call pop daa mov jp test jecxz mov lods rcrb ret cltd jecxz adc lea xorl shrb ret out fimull mov scas and (bad) xor cmpsb xchg cmp or or (bad) repz shll cmp xor sub dec cld es mov ss pop cmp iret adc jge xchg add lcall sub iret inc outsl sbbb and sbb loop cltd jne (bad) sbb adc xor add add stos xchg and jno je xchg and adc icebp addr16 fsubr popf dec adc jg jnp lret xorl mov loop pop or test xor sub xchg aas mov outsl pop pextrw mov sbb jbe sbb jle popa insl mull jl mov jne negb mov in xchg cmp inc cmp imul mov and and sbb shl and mov mov jle inc mov push add rcrl mov add or and mov cmp xchg out inc bound or cmp inc loop add cmp ds and jmp and mov inc mov ficom aaa xor xor cmp xor mov sub (bad) out fnstenv cwtl enter rclb mov out repnz addr16 sbb pop out push repz jbe cmc inc pinsrw cmp pop jge dec cmpsl test clc inc lret les cmp lcall mov mov jbe lods jp adc mov fsts ljmp lock fisub lods inc fst cmp push ret xor fxch mov testb pusha in mov in lds mov xchg popf das and push ja jmp and and push add inc or xor jo imul cmpsl pop pop lods jnp cmp cmp (bad) push add (bad) mov and lock push fdivr imul xchg std inc dec ficoml mov rcll dec adc test fisub fmul rolb xchg jb pop sub jbe shrb sub call outsb push xor sub ret mov stc aam xchg mov rolb std jecxz pop xchg pop les in movsb cwtl test into loopne call arpl mulb adcb out aaa arpl inc jno ds add es lods pop mov das or inc lods lds mov imul cmpsb (bad) jae subl or pop push sub test popa lock rorb cli fxch lods cmp push jl cmc les sub pop mov sbb out icebp and scas mov (bad) xchg test pop sti movsb int data16 mov add mov daa mov xor sarl in sub xor xorb sub cmp add shll and mov in jge mov mov push popf add je std and cmp (bad) aaa or (bad) int3 lahf sbb js (bad) inc xchg fs sub sub mov pop fwait mov jne andl xchg cmp mov mov cmp imulb mov js jl nop leave in add (bad) mov adc mov pop lock (bad) idivb out cmp das inc (bad) ds sub sub push aad fdivp jno ffree addl shll mov cmc and pop mov adc inc in xchg outsb rcr sub (bad) fdiv and std int pop icebp and out pop mov mov bound sub lods or movsl mov movsb xor push test movl sub outsl inc jb jp or jecxz pop sub adc mov cmp cmp pop mov add push push jo inc adc jns pop sar sti jge aaa lfs subb jl pop fidiv lock jne mov and fistl paddusw imul adc hlt ja rorb jb sbbb adc imull inc pop js fs divl mov in jmp sub stc mov mov sub leave test imul mov dec inc add test mov mov xor cmp les imul pop xchg stos dec sbb int faddp adc cld bound xor sahf out add cld or popf (bad) andl int3 hlt push xor mov add push inc mov sub enter ds jnp add addr16 stos dec dec fstpl scas nop or mov push inc loope add movsl sti jmp add (bad) cmc outsb jae add pop rol lret loopne mov movsl imul test in notb ja cmp sti fdivrs fadd outsl dec imull sbb out imulb xchg push out push and inc or stos call fcmovnu inc in sarb xchg and mov add les adc mov ja (bad) rcrb into push inc mull xchg cmp fwait popa dec or lcall cmp popf (bad) pusha cmp jb,pn (bad) (bad) mov jae testl inc push jle fist push inc cmpl pop out dec mov fmuls call push adc testl je and ljmp inc cmp push out mov notl test pop jecxz fwait and bound add ret fimull pop pop cmp xor push dec mov xchg (bad) fnop cwtl cmp aam into jmp xchg mov sbb mov jb int3 inc or or jmp pop xor jbe inc xor nop ficom cs mov push inc lea add mov push cmc and push leave jbe fwait mov mull push xor dec dec cmp xor loop ljmp andl subl in or stc sbb pop stc addr16 int mov ficom popf jmp fdivrp pop jns imul jae in cmp xor sub or inc sub popf inc xchg divl push cmp arpl nop ret cmp or adc push or iret adc pop arpl inc out hlt adc addr16 test sbb xor dec sub inc sahf xchg pop loope and pushf inc xor repz xor test ljmp mov mov shrb sahf mov cmp pop lret in sahf inc cmp sub loope cld xor sbb repz mov (bad) adcl push pusha insl dec leave sbb ljmp sbb rolb push in adc cmpsl jecxz lods inc or por js (bad) fdivs out in les cltd mov gs sbb pop and cmp dec jo adc dec divl jmp push or cmp xor pop cmp cmpsl call in shl xchg pop adc cmp jg popa xchg lea fsubrl push mull arpl jno push mov (bad) jo mov adc add shlb (bad) repz jl mov xchg xor dec xor mov mov nop pusha pop pop adc aad sbb mov xor xchg sarl mov xor push mov std icebp movsl push mov jmp mov push jnp jno out push in push fwait mov jbe sbb imul mov stc test pop mov add fisubrl roll lods (bad) mov sahf repz insb xor adc in adc push stc cmp popa inc xchg popf icebp xor jle mov lret mov mov repnz mov fisttp mov push sub inc cmp cmp mov jbe inc into xlat push mov lcall bound mov sbb (bad) sub iret aad push xor ja daa adc out sbb push les jmp nop sahf inc inc lock dec rorl test lea (bad) outsl add icebp cmp mov jo jle mov dec insb mov mul inc sbb xchg jae jb fs inc and xor xor inc arpl lcall adc and and sbb sub sbb cwtl sahf sti inc cmpsb sub lods jecxz ja adc fs fcmovnbe push or lahf pop jl inc sbb (bad) xchg jb add mov lock cltd pop cmpb bound cmp in xlat push push pop pop daa push cld je xor add jb xchg jb and pop ss lret or repz int3 cld stos lds dec hlt stc sti jle pop popf out cmp xchg loop test sti in imul mov xchg xor jae jp mov mov loope lods sbb ds pop pop rcrb lret mov push or (bad) dec lret rcll jno in cli push aaa pushl shrl pusha adc fisubr adc ds loopne mov je lcallw inc jg out mov xlat sarl jmp stos push mov es sub fild inc push add cmp jo sbbl aad mov mov mov push popa lea mov and sbb or sbb movsb push push bound clc mov cmp dec popf stos out std jb mov lahf mov gs and xchg call jg push push cmp jl lock arpl and rorl mov sbb push mov mov dec jns sahf out add (bad) cwtl or leave inc ror xor xor pop in jne setno lret outsl decl and shll (bad) lds psrad sub lret and or loope pop mov fist inc repz imul inc jne push rcrb sti mov cwtl push test movsl cmp mov dec rolb dec in push cld pop scas sbb out dec jp jecxz adc inc cld sbb stos or icebp sti fcomps sub jp dec (bad) pop jno pop xchg jecxz pop mov scas addr16 sbb sub out mov (bad) and das int xchg ss xchg lds xchg pop out insb stos xor pop (bad) cmp xor int3 dec pop add cmp mov xchg pop (bad) fwait popa movsb fucomp ret push jno jae adc cli mov push sahf push inc push cmc popa mov stos dec inc inc lret fisub push pop fcomi cmp sub dec pop movsb loope mov je inc mov (bad) dec sub dec adc push xchg repnz mov sti jp add or cmpsl or mov cmp (bad) sbb push dec push dec push dec cmpsb sub cmp cli inc mov xchg xor jne lahf jo mov jns popa imul cs (bad) xchg inc and inc bound rcll pop mov movsb fsubrl fidivrl jnp addr16 mov jae scas jmp dec xchg jg adc add xor out in mov cmp fidivr xchg xchg (bad) je mov dec icebp xor outsl xchg jno sub xor addr16 add cmp and fldl cmc and mov push not std sub inc loope test jle push std add bound push roll cmp andb icebp lret scas sbb rcll movsl lahf outsb aas push dec iret lods jae cmpl mov ljmp lods push jne pop test inc or dec and adc out mov fs cmpsb pusha xchg pop scas sbb jbe adc sbb mov sbb xchg mov lret mov in push mov lahf pusha cltd insb push lea dec enter push adc adc rcrb sub lcall mov push test dec dec lret fsubrs push jae fdivl jmp or popa fs fnstcw cmp mov cltd add cmp mov jno sarl out pop adc arpl lds mov fcoml (bad) xchg repz pop gs xchg data16 lcall int js pushf mov ror sti adc jg aam ret jg iret sbb outsb (bad) int data16 pop pop xchg arpl stc jb aaa outsl mov sti sub test cmp imul inc push lea roll into mov mov (bad) xor (bad) in xchg cld push int dec cs xchg fisttpll daa pop xchg out mov lret movsb lret mov inc mov cmpsl xchg xchg test leave mov pop mov insb sbb mov or xchg std jle inc xchg jne sub dec dec cli or (bad) loopne dec add fwait mov pusha repnz xchg mov mov or ss add aam ret or inc stc fbld adc inc or adc hlt sbb outsb xchg leave (bad) imul (bad) sbb movsl xchg fdivrl dec ja stc push push rorl aad (bad) mov push rol jns clc lcall idivb (bad) (bad) stos mov imull pop mov mov sub pop adc adc shrl mov dec repnz mov (bad) push push arpl push fidiv int push sbb daa pop ljmp and das rcrb cmp test dec jmp sub ja jno jno (bad) lock cmp dec push cs dec adc add sbb insl inc test xor fisttpll and or hlt adc leave hlt (bad) enter or add lock mov lret adc daa mov pop loope stos jmp cmp sbb js pop les mov push ret fs cs sub test insl aas clc cwtl dec cmpsb pop mov add adc fs inc nop enter loope pop sarb out mov cmp pop leave inc sub test push jno cli je mov sub je leave cwtl sub rorl roll mov or in jb jnp fldenv xchg adc rclb mov jne adc mov mov ja sub idivb test mov mov or test mov cltd mov out sub mov iret dec das stos mov pop pop pop icebp lret cld ja xchg cmp sub dec adc inc movsl sahf testl std cwtl mov mov sub addl loopne inc and out adc stos fneni(8087 imul (bad) jno fildll mov ret ja jae stos mov loop jmp mov int3 mov jo xchg mov arpl (bad) stos sub ror pop cld mov pop push mov push jbe insb in pop sbb and jp jle mov into inc out lret popf or stc and repnz mov pop or xchg jp aaa sbb adc pusha (bad) jg stos dec ret xchg xor push jbe loop lret imul jle loopne or outsl sub push das jl mov jno jmp xchg pusha hlt je add sarl xchg data16 iret call pop pop mov cmpsb sahf xchg nop mov dec sbb push les push adc mov notl jbe insb adc dec xchg lds movl cmp popa cwtl push (bad) cmp jbe (bad) mov les add (bad) rolb sbb dec xor mov xchg test adc mov mov jecxz movsl pop mov push lahf xchg inc cmp xchg leave jb inc in cld sub dec sub rorl and addl and pop mov decl add gs repnz je sub sarb sti notb lods stc push sbb and das add add inc iret fcmovne daa jge dec leave stos pop fidivr jecxz dec jmp rorl pop xchg xchg loope cmp sbb cmpsl pop xchg nop pop notb push cwtl pop inc push fwait aaa inc jmp add jo cmp mov pop add addl insl imul xchg stos mov cltd ljmp shll xchg movsb adc out add adc les insl daa sbb addl push xor out jo adc adc orb mov lret outsl (bad) xor sub xor xchg lcall (bad) pop ja dec movsb in dec out call fdecstp jle cmp jo in shrb mov xor mov test cld xchg xlat jns jecxz lods pop add inc xchg test jl mov dec fwait (bad) pusha sahf jmp cmc shll add fs sub xchg in add cmp test jmp mov pop pop mov mov sub call sbb jne mov jo mov sbb mov push adc push and mov ds aaa push mov div fistpl ficomp insl cmp dec mov cmp mov aam aad lret das add mov xchg push sbb pop inc mov fstl cmp roll jne or pop repnz cmp pop sub das lds dec ds fwait out call mov imul rcll or adc pusha lea cmpb pop lods jb push adc aam cs or fidivr lahf jb cmp and sbb mov outsb pushf scas cs out pop jbe sub xor xchg push push in addr16 pop es addr16 es movl arpl cmc pop les cwtl loop xor ljmp adc jmp rcll cltd outsb in lods jno and jp dec lock mov xlat lds fnsave xchg mov int3 pop (bad) ja dec lret push and jl mov movsl pushl fsubrl out xor and icebp sbb clc into or movsb ret inc ret mov push jge inc loop nop aas mov (bad) fcmovnb jo test cmp in xor ficoml pop in hlt adc mov push xchg push cwtl mov jecxz jne scas sbb enter push les add pop ds sbb push fs jge popa sbb call cmp lret lret (bad) test inc and push (bad) sbb cmp push add or sarl xchg out sbb dec jecxz (bad) sahf in inc xchg rcrb adc jne and (bad) push lret pop repz insl add incb aad jb add std (bad) sbb mov push hlt xlat cmp pop adcl adc imul and notl mov mov mov and adc loope out push dec enter jne cli add insl mov mov pop lret mov push sub in cmp sbb imul or or mov inc sahf mov pop or arpl xchg adc pop pop lods daa sbb mov dec sub add sub xor jle call xchg sub jmp movsl daa in aas (bad) lret test xchg xchg pushf push or inc jge ja jno push sti push jo push in lea stc fs sbb sbb pop add test je adc xor xchg (bad) loop xor icebp push jns std xor sbb fldt push ret sti add out movsb fisttpll or xor (bad) adc idivb rcl icebp sub fiadd popf out pop adc cmp add mov jbe jb push mov fdivrl enter repnz ljmp sub push xor cmp mov sub cmp inc je adc cmp mov pop loop xchg cmc loopne lock mov lods repnz (bad) cwtl stos push loope stc repz sub lea ds jmp lods jmp loopne fimull in cmp inc cwtl jbe fwait xor mov cmp pop adc mov out xchg adc repz lahf xor dec mov sbb sbb push cld inc sub jg ja or rclb or jge fistp repnz cmpsl loop xchg mov mov insb xchg push stos ret pop je sub in bnd inc mov jbe and out pop cmc adc cmc fs mov cwtl popf mov cltd jae push mov addr16 fcoms das in xlat lock hlt mov mov aas xchg aas popf pop lods cltd jne jb inc mov imul fucomip cmpsb and test pop mov add repnz inc dec int3 (bad) or scas mov (bad) out cmp fs or in in sbb ss mov in push out push cli mov or aaa mov (bad) sbbb lret leave aam cli daa mov movsl lds dec mov cmpsb mov mov pop xor outsl call jge sub xchg out jl push lahf jg mov in push arpl push sub cwtl fwait loope (bad) in lods addr16 in cmpsl subl (bad) movsb push cli xor lock out sbb in fstpt jmp loope adc fld jg xor mov loopne lret cmp roll fwait push repnz inc push sahf inc data16 rorl out in addb stc mov and fstl add push cwtl mov cmc or sbb sub add inc jge xor or js hlt pop mov sbb cmp push push lret imul out aaa sbb cmp pop cmp lret jne ja dec push out and push push cs aad test mov fs adc add dec sbb sahf pop (bad) mov cld ss outsl mov insb test int xchg dec (bad) addr16 in and or lret jg out and xchg roll xchg sbb fldt mov and mov shlb pop lock stc fisubrl in lock stc push adc icebp and je xlat insl push jne fwait rcll xor dec sbb outsl pop sub jae jle ljmp movsb pop test lods in add leave int3 cmpsl addb leave out or sub fiaddl dec xor ret les or test sbb lahf push push push in in movsl mov int3 mov inc cmp js out and or add inc rorb divl out push imul test mov test adc mov jns lods cmpsl mov test mov and sahf int push lock orl xor and stc sub aaa xor xor jg jp sbbb flds lcall repnz mov fwait push out jno outsb enter in inc roll inc ds ja movd (bad) pop lock in dec push cmp int3 add sbb cmp xor dec and push mov xlat jge popf mov inc xchg (bad) out and sbb sub cmc movsb bndstx cmpsb std add cmp mov std sbb je mov clc lods repz xor mov arpl (bad) inc xor pop clc add icebp add mov sbb mov xchg sbb sahf leave inc (bad) mov sbb ret sbb stos jge (bad) ja pop dec fsub rclb out xlat sbb cmp nop incb jns and mov mov in mov push sbb out notb inc arpl mov dec jl add sbb inc lods and ret loop cltd push int3 rcrb mov icebp notb push scas pop push loop mov fdivrs mov andb test lret movsl (bad) insb inc ss (bad) or (bad) out (bad) mov lds mov dec mov repz jmp std mov sub push daa dec xorl shl push inc push pop xorb jnp and or gs clc cmp and pusha test aad je popa push mov adc in jb push sub cmpsb lcall frstor mov (bad) sbb jae int3 jbe dec das (bad) and sub lret cmc adc mov cmpsb adc mov xchg popa flds lods add fcomps mov adc push (bad) mov add pop out mov pop or sbb aas lea xlat cmp add pushf sub push repnz push decb cmp xchg and and lret adc out jle add add mov dec mov add push stos int3 pop (bad) jb fsub xchg pushf (bad) jp fsubs bound arpl mov (bad) outsb ljmp aaa jne push jle fbld imul dec (bad) out mov add test and mov (bad) scas sbb jb jmp mov sarb pop test icebp add aad add rol inc pop and int3 mov inc push lcall stc inc out pushf add or jb cwtl test sbb cmp test push ret pusha jne in mov movsl and repnz lods clc mov sub mov jbe push pop jb jmp mov ficoml es pop mov addr16 test out test pop sahf cmp jno fwait cs xlat or notl and pop sub push xor push (bad) or xchg jbe add sub sti and into jecxz cmc mov cli mov mov insb or inc sbb mov sar dec jecxz and imul (bad) mov xor das jne add jg inc lcall or add in jno mov subl dec or dec ss mov dec lret push inc jne fwait out mov mov (bad) cli sarl stc (bad) lret pop sbb insl out scas (bad) push mov push jne jp adc mov xchg pop sbbl fs cmp stos and cmp stos cmp sub pop (bad) mov nop mov out xchg pop push ljmp mov lea aad mov pusha mov xor (bad) aam sbb les sub lahf mov dec cmpsl out sub stc in pop inc jge out loop scas jle js or jge pop pop add pop test loope into dec cmpb xchg int3 (bad) mov shrb dec inc sbb bound jge daa ljmp insl je mov dec or ja mov dec jg fwait add pop rcrb pushf jb push dec sbb mov push fldcw xor mov xor cmp movsl hlt test push jmp push jmp adc xchg (bad) and call movsl pop std in jp mov inc dec dec pusha adc mov dec pop lret mov stc or mov into push movb fdivs xchg xchg jo jl push xor call mov outsl add repnz and dec push fistpl jg push cmc inc inc fmuls xor adc out int3 repnz pop ficompl and leave sub and pop test enter xchg pop cmpsb ret dec and and fs mov or (bad) fadd test mov or (bad) push out loope push or pop mov jno arpl subl cmpsb idiv movsl pop addb (bad) xchg out and mov push mov mov xchg scas pop je push jge jge mov idivb int ret adc sbb mov jecxz ds ficoml pop add idivb xor lds and enter adc (bad) adc cmpsb mov mov aam aam inc pop xchg jecxz and inc lods and cmpsb sahf add xchg mov aas pop xchg push (bad) (bad) bswap cmp (bad) cmp or lahf fs test sbb push je idiv or push out roll scas cmp test cmp jb movsb or hlt fdivrl jmp add stos iret dec push add cmp ljmp mov icebp jo mov and (bad) cltd add xchg rol add popa cmc jl sbb or cmp xchg iret inc jl xchg cmpsb outsl in dec mov incb jo xchg xorl cmp xchg xchg movlps sub imul push cmpl lods push ret inc push fcmovnbe cmp and cmp sub add mov adc jbe pusha xor xor les (bad) popf addr16 jne mov ljmp inc pusha mov jge xor and or xor and xchg xor adc adc pop (bad) push cmc ds add cmpsb scas fwait pop cli sarl add xor pushl daa test pop cli out or (bad) sub push movsb xor pop inc fldt or push jp iret mov jo ret and sti popf dec and xor jb fistl insl mov push dec jbe sub xchg and jge cld adc cmp push cltd add push cmp mov sbb fisubl out pop lods adc jmp aaa loop mov push out dec pop cmpsl pushl adc pop mov push arpl insb dec seto or (bad) sahf loope mov xchg (bad) stc jo or js jb cmp sbb cli xorl not ret dec jns sub pop fs mov mov movsb xchg data16 imul gs and aas jns fstp add jmp popf andb xorl je dec sbb hlt jo add dec jmp in add inc or pop xlat jle xchg sti cmp jle out ret dec test sar xchg hlt pushf jae jmp sar mov jecxz (bad) cltd out movsb dec fwait ret rcll jne sbb ljmp insl mov push ret bound inc push mov imul outsb js lcall sti stc daa or push stos icebp outsb mov xchg xor add jnp and and push jle andb stc dec lret cmpsb addb mov lahf jle push movsl mov cmp lahf sti out pop in aad out mov jge sbb dec scas iret mov rol (bad) aad adc gs dec sti or lahf cmpsl aas and movsl jp lods out push ljmp or data16 outsb push js sbb sub add aad pop pushf xchg add mov jge call adc cwtl pop add and movsl addl dec adc shlb and out or inc shr jecxz cltd js cli lcall push push push aam fs sti data16 cs sub aam jge mov and clc enter xchg rcl (bad) je adc cmp test pop mov aaa in ljmp lods lret sbb dec xor adc dec xchg stos icebp imul test pop and stc cwtl jbe pop xchg lret inc pop jl (bad) loope and mov inc adc lcall sub and inc fiadd jl xchg adc pop jecxz (bad) dec xor dec jae stos pop mov cli cld sub xor fadds je mov mov sbb add das jno rolb imul or fildll mov dec inc mov sub cmp mov enter jb rcr leave call out push xor push inc mov and push pop outsb push pop add or loopne scas cs xchg aas das xor lret push jo push jp mov sbb int jp (bad) mov aam sbb fisttpll test (bad) icebp mov dec add loopne lret jo jge mov mov into inc mov int aam rol pusha and ret jl nop dec inc sahf int3 call lea and adc inc adc and popa (bad) in adc mov iret (bad) lret out loop enter loope mov mov int3 js mov stc ss out jp mov dec (bad) and inc xchg mov dec cmp (bad) and aam sbb popa shr or pop adc (bad) fxch cmovge mov fnstsw xor (bad) es fbstp or bswap cmp movsb adc int test sbb sub lock idiv lds test or aas adc imul les das pop movsb fs mov or insl scas jns fist pop and (bad) push mov jle dec lods pop or rcrl pusha cmpsb xlat dec scas or nop jae xchg mov vsqrtsd xlat push loop jmp xor fcmove sti mov popf sub sbb and mov aaa in scas in sbb in and dec pop inc mov xchg xchg lds popf dec adc hlt ljmp sub or push iret xor fisubrl mov daa mov push dec retw fucom push mov (bad) xor lods mov jl add mov and mov pop loopne and hlt or dec ret xchg cld mov pop mov cmp lods add fidivr iret ficom mov push sub das addr16 lahf mov push gs (bad) aad dec mov push jmp mov dec daa movsl push jp or int3 pop cli aad inc xchg movsl push mov rorb sbb cmp mov dec lahf mov pop int3 sbb pop sbb repnz ljmp (bad) cmc xchg mov scas sahf adc sbb or out jno (bad) push xorl mov fdiv and mov insb or pop push loopne cmpl aam xor inc call int3 iret jns push ret cmpsl into mov cld sbb adc mov (bad) ss ss adc sti lret dec test fisttpl mov pop test mov mov xlat jbe xor in sbb inc sbb lock cmc sub adc movsl jns stc rcll lahf addr16 leave (bad) arpl add bound or push add aaa sbbl add pop aam pop push push xor add sbb das jg mov mov imul lahf jae test mov push addr16 lcall lods mov aad cmc sti dec dec in push mov call xchg (bad) mov or xchg call fcomi dec xor add aam push scas decb push push aam xor out adc testl int3 push adc mov adc test fcoml inc fildll (bad) lock push in xor push cmp in xchg hlt cwtl mov adc sbb xchg fidivr xor inc jle sti sub fs aam repz sub mov xor mov imul test mov in inc das imul arpl push fimul rcrb rcrb (bad) mov push lret sub mov movsb adcl cld ja (bad) xor mov mov mov add pminub stos xchg fcomi push push pop mov faddl scas inc lahf std xchg cmpsl inc loopne pop daa xlat inc leave out scas and sahf dec sub mov sub mov in sbb icebp fidivrl aad push std pop mov push cmp idivb mov stc sbb ss sub gs jecxz mov sub mov push ljmp mov push nop or mov mov (bad) lahf mov out insb inc jecxz mov mov ret outsb or scas ja das ljmp cmp popa les mov shlb inc xchg sti sub push pusha ja jnp mov sahf cmpl fsubrl pop push stc enter push bound mov sub into lea sub inc test sub pop into das mov cwtl inc cmpsb mov es insb mov mov fdivrs cltd fs sub ret add lods xor pop rcrb jmp sbb in add xchg sub push pop xor cwtl jo (bad) sahf daa jno scas (bad) adc or add cmp js dec mov dec xchg push cmpsb pop test push mov std test mulb push jp arpl stc js xchg aaa (bad) lcall xor movsb push mov aam std mov xor insl lea pop jmp dec push adc sahf mov test sub push ds mov cwtl shrb cmp icebp mov ds cmp notl or pop not (bad) into xor cmpsb sub ljmp pushf jb push divb stos xor (bad) xor mov pop mov clc popf push (bad) jno lock xchg shrb dec outsb sbb movsl xor stos xchg les leave lcall push clc scas (bad) dec sbb insb adc sbb repz ss jnp enter adc mov out (bad) je outsl pushf sarl or lahf push sbb cli outsb insb test adc notl dec mov sbb (bad) cmp cmp inc pop ret or add jmp (bad) lret hlt mov mov adc repz sbb xchg sub push lea pop sbb push sahf and mov push or sahf loopne pop cli sub es lods mov das (bad) repz stos movq jb fcomip pop fsubs pop mov xor (bad) pop pushf scas mov sub lea cmp mov addr16 xor mov jg jns inc pop or cmp pop gs loope cwtl mov movsb inc cmc into xchg inc cwtl xlat pop sub sbb xchg icebp iret cmpsb mov pop test xchg jle daa les xchg lods scas cmp aaa loop sub xchg loop (bad) (bad) mov cli push scas rcll fisubr dec and paddusw outsb mov inc dec addl lods jmp pop sahf in mov fisubrl xchg xchg js rcll rol out mov xchg mov pop fild jbe (bad) xor cmp movsb js int aas jle imul movb leave nop jo (bad) lods inc (bad) mov mov stos cmp fsubrl (bad) je mov scas push xchg pop mov imul repz adc lods push xor out and loope add cmp inc inc mov mov mov push out ja push movsl fistp aaa loop adc test mov or fisubr ret or fnstcw ljmp pushf bound xchg cmpsb nop loope xor sti xchg mov or xor add pop in icebp jg dec (bad) jo (bad) outsb jecxz cmp je push fistl (bad) fbstp fwait in test std leave mov into loop pop out add jg fwait clc sbb pusha fisubrl ret clc mov pop data16 push push adc lcall daa inc fsubl mov out arpl rclb out fisttpll das mov and adc xor rorl aad jecxz test cmp jne mov sarb (bad) je cwtl mov ljmp add jmp stos test adc pop pusha or mov mov jb (bad) int call call (bad) lret inc icebp mov lret pop fisubr mov mov enter sahf pop mov ret mov xor in pop adc sbb stc mov mov mov mov jbe movsb mov xchg popa inc jp lcall xchg fisubr push sub popa int mov pop test ja add dec loop,pn xor jae rol push cmp sub mov loope movsl cmpsl jb cmp cs and xor dec mov addr16 cmpsl popa dec and mov xchg in xchg sbb in jae,pt popa or lds xchg popf icebp mov mov mov xorl ljmp movsl jg (bad) imul push ret lods jle scas or dec dec inc xor dec into or fsubrl lods in sbb jae dec push popf pop xor adc shr sub dec mov ret inc rcll jbe roll or pop mov mov xor mov cmpl fisttpl outsl fcomps sti loopne mov push js out push inc adc xchg lds inc mov and push bound iret pop cmc and pop jmp jne sbb sbb mov xor push xchg adc xcrypt-cfb cmpsl movsb idivb and popf mov outsb inc mov test inc call inc popa loope lods dec stos ss fnstsw pop dec adc xchg xchg mov push mov push (bad) mov iret dec loop mov pop xchg mov leave or push xor pop xlat xor scas dec iret xchg mov adc dec xchg or ret push mov cmp or (bad) jae lds orl pusha leave iret jo lock dec xchg sub shll je and mov mov sbb inc sahf addb xor stos insb lret mov repz std or lock jbe inc call sbb xchg or loope int xchg sbb push leave clc adcb repnz ljmp mov outsl inc ljmp mov fisubl scas in sub xchg mov lods (bad) fucomip adc pusha mov sub xchg jne or inc push ss arpl mov mov lock cmpsl and (bad) or cmp inc push and add adc aam and push sar mov pop mov (bad) divl out fcomps scas cwtl scas cmp out fbld pop push scas sbbl and imul nop mov jge loop mov mov outsl fdivrp mov pop addr16 movsl and fdiv fild and mov xchg into xchg scas sub rcl cwtl adc repnz push sbb std pop dec push rclb jo lock and push pop dec push das daa xchg jo jns loopne add jnp and loop jae cwtl cmp icebp push cmp ljmp dec fildl int3 int xchg or cmpsl add insb push (bad) inc stos ljmp add sti iret pop dec pushf jnp dec mov xchg das clc add mov popf in jno or mov ds adc add fwait xchg sub dec sbb ficoml ss cmp dec (bad) xor adc sbb jg lcall je adc in pop adc in sub push icebp push xor outsl xchg pushl mov imul dec mov mov imul jge xor mov jne,pt fildll (bad) test mov dec inc clc pop imul cmpsl jg cmp add jg mov in outsb jnp push mov jae mov out fistpl adc out sub fwait cld daa mov ja ljmp in cld push sub cmpsl (bad) adc and push mov sub clc xchg dec insb xor pusha adc sub inc push (bad) sub mov sbb sahf jnp or pushf jle rcll or or push jo pop inc jno ds and inc mov aad dec jl add ret outsl mov outsl addr16 mov fs sub (bad) (bad) jns call jae popf inc (bad) adc cmp ljmp dec pop mov scas mov dec mov (bad) mov push and pop std in pusha lds lahf shrb xor sarb sub popl lcall and dec push loope jle testb pop movsb notb hlt outsb ja dec lock xor test icebp cmp add mov pop hlt dec mov mov mov int and fmuls fcmovnu imul bound sarb aad icebp stos and je add dec push xchg popa xor jg cld ror loope pop aas mov jnp push mov inc and cmp out (bad) and lods pop sub pop movl in jp sarl repz mov inc lods pop push pop xor push cmpsb jo pop pop jnp (bad) into imul jbe mov xchg push hlt aad push ds fildl mov sub inc mov jae xor add test xchg mov out cli lea sti sub repz (bad) jp sbb dec rcll aaa xor add dec loope and idivl outsl sub test xor mov sub rcl xor aad ljmp in arpl push ss push loop,pt mov sbb fst mov jg dec movsb idiv xchg xchg cmp push (bad) jne mov pop sub outsl sti and or dec icebp mov mov insb jne inc jne aam dec fdivrs std outsl mov adc sbb adc inc out jno adc popa data16 cs test add pop sbb xor fcoml xchg das lock xchg (bad) ss insb mov mov dec or leave cmp rcrl dec cwtl (bad) jecxz cmp loop decb mulb pusha cld inc out imul mov test or xchg mov outsb fcoml inc shlb push fs test test push inc jmp inc cmp loope fdivrs lds mov lea adc push out es or xor scas jge jno in lock es push cmpsl inc add mov and popa or or es into pusha mov mov (bad) in pop jb push jmp jae mov pop ja rorb xor push cmc outsb arpl in aam scas popa pop sub mov mov insl cwtl scas fidivl jnp add fidiv (bad) push jmp sahf inc movsl in xchg mov mov lahf pop or mov and xchg and jb adc sub (bad) mov daa pop xor divb cmp add xlat sbb jge fld sub negb sub divb into fwait mov mov push mov js cmp push add ds cmpsb insl imul fisubl lods pop aad lret xor cmp pop test and mov hlt cmp (bad) addr16 dec (bad) cmp adc es andl sbb test out add (bad) fsubl dec les fs lret xor and insb mov mov nop stos aas add add jge sub pop loope ret shl xchg mov lea inc push fyl2xp1 add cmp push mov paddusb imul adcb or or or fs cmpsb (bad) aas jae and divb (bad) mov pop adc xor inc shr (bad) mov ret lcall stos dec jbe rclb adc test call rolb and (bad) jp mov movsb xlat and fcomps cmpsb aad movsb in cmc jae ljmp fabs xchg dec out push mov adc jae dec loop and fdivrl int push pop ljmp adc add out xor add add inc push loopne inc dec sub insl jg lcall lds push pushf iret xchg je test (bad) sbb sbb fidivr mov xor (bad) in xchg or adc aas (bad) or mov mov int enter loopne movsb or xor and xor push mov inc lret sbb cmp in nop jge mov jmp dec pushf jecxz or xor push outsl mov aas ret ret xor faddl je test insl sub xchg (bad) and movsb out cmpsb ja es inc (bad) dec mov aam hlt mov repnz push lret adc ds add xchg sahf inc push out sub mov mov (bad) loop push imul sbb adc test and adc lcall add stos sbb sahf shll out add int3 scas push sbb jecxz incl jp ficom dec jge push paddb xchg jge xchg jb dec push in sub stos mov std (bad) or inc lahf test sti or repz push daa pop adc (bad) pop std sub add add mov out pop ret xchg shl sbb (bad) icebp mov in ret dec stc sbb push into sub int or pop int mov sub repnz sahf fildl imul mov sbb xchg enter sbb test mov push enter cld (bad) mov call (bad) call xchg mov mov fadds sub pop mov fwait jmp aaa xor out and movsb push test sub fcompl mov xchg sahf inc aam sbb insl stos aaa cmp rcl xor and lds cmc test inc int push je repz lods (bad) pop and cli fs fwait cmpsb sbb mov fisubr das aas mov repnz push inc test stos stos scas mov ja nop mov lcall cmp jo push dec aad and daa jo imul into cwtl cmpsb imul mov clc mov (bad) int mov cld mov lcall in push xchg pop sub cwtl push xchg aaa xchg stc push (bad) iret push adc cwtl add stos fidivr cmp (bad) data16 (bad) cmp push dec dec iret xchg loopne mov data16 pop jecxz jno cmp and pushf push mov (bad) pop out sbb aam pusha (bad) xchg test dec in jno lds add test (bad) cld test xor and mov cmc inc push mov popf push scas xor ss jo dec sub stc (bad) mov in pop icebp pop sarl daa xor (bad) cld xor pop addr16 roll scas in arpl jne xchg or inc inc or push sarl sub xor mov lahf pop (bad) stc pop push insl lods movsb pop push mov mov movsl leave stos dec push jnp rorb mov pop push pusha mov and into out aaa jge mov jl xchg cmp pop sbbb pop mov repnz push push push std fsubrl and (bad) mov scas or std or rorl test mov ds enter xor int3 lds sub push add jmp jge fnsave pop mov or xchg dec out test or mov pop pusha stos gs xor and cli fidivl and fs lahf in xor mov cwtl mov and lock mov sbb out cmp mov cmp dec xchg lcall sarl push (bad) adc jle cmp cmp leave dec pop jno not addr16 jae xchg mov and aaa cmpsb int3 sbb ljmp jo inc mov xchg popf cmp and inc aas dec cltd push imul stos sub lret xchg test push inc call loop bound xchg mov inc pop xchg rolb cmp mov stos popa cmc pop lock pop lret outsl repnz (bad) xor adc movsb ljmp push mov mov jbe test inc lret (bad) stos sub test and fwait jo scas mov jne outsb sbb mov repnz pop sub jecxz mov push leave dec dec test das iret xor aas stos adc mov nop js mov push xchg in mov ds pop cwtl add xchg xor neg mov ficom stos add stos repnz add dec lock fisttp arpl mov sbb and jns jle les sbb mov push pop and outsl sub ror xchg jns mov xchg mov roll inc repz sub add hlt ror test push mov push (bad) mov lods repz mov push out mov repz int xchg test jecxz mov cmp mov mov fimull lods cs enter jae fwait push adc mov les loope (bad) mov sub mov shrb ficom (bad) insl cli subl mov mov cmp bound lret mov (bad) lcall inc inc or std xchg inc stos pop aad outsb mov and xor push adc and in dec call or mov xchg imulb adc cmp enter pusha sbb ljmp jbe ljmp add lcall mov dec add jge js push sbb sub ud2 dec sbb or xchg lahf jp test mov fdivl imul xchg scas fxch inc or (bad) jne stos mov sbb ljmp push jbe fwait xchg (bad) lock ret xchg (bad) push mov inc add aad xor dec stos rcll ljmp inc lds xlat jge xor ret fistp push pop aam inc jmp iret jl inc push jg shrw imul mov inc fnstenv testl rcll pop lock jge inc js pop push push cltd push dec scas lret fstpt xor movnti add fdivrl pop and mov fbld lahf cmp sbb push les cld test repz in dec adc nop insl arpl xlat push sub mov push jb rcrl daa jns or pop sbb das xchg pop add fstl sarl movb outsb add jecxz ss (bad) push pop cli fistpll or dec test fistpll mov ror and add ret int and cmpsb inc paddd cmp subb test mov lods (bad) or shll mov mov mov push inc loopne jbe push mov xchg scas lcall push sbb adc push add push scas fneni(8087 pop push dec aaa xchg mov or fidivl push cwtl cmp pushf cld cmp (bad) fcomi out cmp cmp add subl lds lds xchg (bad) jns inc sbbb dec mov push jnp and xchg pop fs (bad) enter xchg sbb jb arpl inc pop or (bad) daa jp inc or mov adc mov lcall jnp or inc dec mov mov pop push and inc push pop leave lret cmp hlt mov cld or mov xchg inc push xchg cld dec xlat mov mov (bad) int (bad) outsb push mov mov in pop xchg call (bad) xor imul sub push dec lock negb inc sub inc inc icebp leave cmp movb mov pop rorb pop adc xor mov push cltd sbb in pop push ret scas and in cmpsl mov sbb dec xchg jecxz jo lret pop (bad) push dec sub push sbbb cmp call dec xchg jbe pop je cmp push mov xchg mov lods sahf ljmp sub sub mov push cmpl inc add cs xor adc jns adc out push sub movsl hlt jb add adc pop movsb xchg xchg or or jge ljmp mov sbb in idivl cs sbb cmp movsb jae push fwait cmp dec dec and or test xchg xor pop lahf xor outsb jmp dec sbb leave leave insb inc dec push cmp in inc subb inc cli lcall lds (bad) sub rcll mul sbb shll add cmp dec test arpl in fiadd inc dec jmp sub inc pop pushf icebp fnstenv mov pop push mov mov out mov jo push pop movsl cmp lock jns lret stos jbe sarb shlb sub dec and repz cmpsb sti (bad) and dec enter cmpsb das pop movsbl sub aaa inc ss add into pop mov jne (bad) pop adc and dec inc test sahf jg pop subl push push jcxz mov pop fdivrl (bad) dec daa decl movsb in mov fcmove pusha insl loope cmp rcll jp adc das mov out jl push sbb cmpsb aam sbb mov adc jge pop pop fisubl or je fwait or inc (bad) xor push inc push fwait jge adc mov (bad) je cmp lret gs xchg clc arpl iret jmp inc out ss inc lods pop jae fildll push xor xchg sub call ret movl and pop push pop movsb gs cli push pop daa dec xchg mov jne xchg sbb repz pop jno fld1 or mov loopne dec loop (bad) xor fistpl nop and add int3 or sar mov cmp fdivrl popf and xor (bad) push push out rol (bad) cmp dec xor adc scas inc lcall adc pop inc imul mov adc testl jno mov adc fstps xchg jbe jmp cmpsl js out loope sub push adc pop loop cltd pop int ret (bad) movsb cli mov add insb (bad) (bad) push es and sbb and xchg stc imul pop push mov dec (bad) xchg nop mov (bad) jmp fcoml mov cmpsl pop push popa sub cmp pop scas push sub int cmp xor aam jnp push ljmp mov or mov fstl lea lcall mov xor (bad) fimul push aad jmp arpl in mov mov popa cmp aad loope lea dec lea in sbb dec pop jp mov mov mov xchg jns,pt inc jecxz mov xor and and and jae push dec fist mov or dec push ja clc and sbb lods jb bnd jmp in xor cmp or and or sahf pop ret faddl aaa push lahf in outsb (bad) aam les sub or std inc jecxz mov push lahf fs test lret movsb adcb rcl mov pop jno push xchg aaa fs push outsl push push cmpsb mov push mov push std push sbb lret nop inc das enter mov out adc and stos and sub into adc imul fs cltd pop mov xor cli pop mov jno push rcl xor ficompl or jmp mov (bad) nop jl push icebp lds fstps push les imul sub je jae jecxz xchg inc lods xor mov ljmp jb lds loope push pop in pop lahf stos or pop fiadd inc add imul aas ss ljmp (bad) jmp and lock mov inc or adc out js sbb jae es cwtl movsl hlt aas repnz js jne in cmpsb xor lcall movb or popa sahf xor aam (bad) cmp xchg clc mov or lret fcoml sub bound cli mov mov stc add lcall and mov and jl leave sub adc data16 int lahf lahf mov inc and icebp rolb xchg xchg mov gs mov call test jmp mulb rcll sbb cmpsb das (bad) imul xchg mov data16 xor mov cmp stos stc test stc push idivb dec lcall iret pop push decl xchg ret mov fldt into ljmp cltd imul aad movsb pop inc jecxz sub add push push shr rcpps jmp mov pop and les int adc sub faddl ljmp sbb mov dec dec dec (bad) shlb push add pushf cmpsl push mov gs ror jp xlat test (bad) mov xor iret push cwtl popf cmpsb push int cltd test dec int3 sbb push iret jge xlat repnz sub pop sahf rorl push mov sbb mov (bad) flds sbb ja cmc push lcall inc je jnp pop add push xor and cmp cltd sbb fdivs sbb push cmp (bad) jb add inc xor data16 xchg cmp lods loop enter dec and fsts jmp movsb cmp pop adc pop pushf add or dec clc dec test bound out dec push cld jno movsl ds and or stos dec xor pushf mov and push aas nop push (bad) xor in mov in jmp rorl push sbb mov addr16 pop lea dec nop lods cmp in lcall push adc push mov aad jne imul int3 mov test and inc inc sbb dec xor repz fcmovnu jl mov xor mov lea addl ja pusha clc stos adc cmp cwtl out gs push ds cmp jbe cmp inc (bad) dec daa outsl pop invd and mov hlt fidivrl scas popa (bad) in inc mov cld add adc subl pop ret imul pop or in xchg pop test dec pusha lea xor (bad) mov xchg fwait insl cmp arpl mov es add jge add add cmp mov fdivrs out sbb dec sbbl lret jne ds in fs sti adc ret mov pop (bad) shrb push sbb nop aaa fwait push in mov in sub incb (bad) mov or mov sahf adc pushf and push add jmp mov popa test and add pop sub pop std cmp sbb mov xor loop js clc push enter gs test xchg dec out sub pop sarb inc loopne lret nop fs fisubl mov mov out roll jl pop int3 jae ficomp mov push and out ljmp add and xor fwait es xlat or jbe sub iret (bad) xlat and mov lret pop gs (bad) punpckldq adc clc mov cmp mov pushf push sub pop movsl in enter out mov aam aaa call ret subl cltd call push push popa (bad) add ljmp push add adc lret pop cmc iret or insl fldl sbb mov xchg jmp cmp fs loope (bad) cld sub adc dec add repz ret mov fisubrl pop sub inc xor xor (bad) pop and scas sbb lock roll mov cwtl jbe ret push jno xchg (bad) mov xor mov aad inc pusha push add (bad) ja sbb jb jns ja scas push int3 aam mov pop xchg hlt cmp jmp repnz loope xchg pop xlat clc insb or cmpsb xor mov orl pop lcall enter fldenv sub into cmp jbe add push inc fsubrl push fnsave push jae inc fs lret sbb es mov hlt mov sbb (bad) arpl jmp repnz inc and jmp scas mov mov repnz mov fsts icebp cmp (bad) call and sti mov fcomi out and clc test aad push mov xor add pop push inc xchg iret das dec enter stos mov icebp push fdivrl push leave into adc xor sub nop (bad) xor das icebp pop pop mov nop out movsl push pop mov lea (bad) sub xor pop mov jmp xchg lahf js mov lods push scas insb inc leavew movsl pop lret loop outsb mov jecxz ret mov fld1 xchg cmpsl (bad) lds (bad) rol sbb xor into ljmp dec pop mov (bad) sbb mov test sub xchg imul mov fs cltd mov (bad) mov inc mov scas fs lods push xchg add or mov imul fdivrl insb inc je dec lock cli inc mov loope mov add ret mov lds xor lea arpl pop shlb lret rcrl push mov fldt xor jle mov mov mov std xchg movsb mov mov pop sahf (bad) (bad) pop push push push imul test and sahf fstl fdiv aaa pop insl cmp cmpsb lds adc pop imul sub mov inc call sbb (bad) push xchg (bad) or je and or or xchg xor in bnd add mov push jl out aaa inc jb mov mov mov sub stos dec xchg or pusha sub insl sub push or xchg ds and jnp lea int fdivrs inc or (bad) sbb sahf mov fmuls jno ja outsl test jae sbb mov icebp dec xorl push and xchg es jb outsb push movsl xchg and mov pop call rolb pop pop ss cmpsl aas xchg dec idivb or lods (bad) aam xor cmp outsb mov xor mov leave (bad) jmp lcall inc mov lret mov imul fsubrl push jns cmp sbb outsb pop push cmpsl xlat loopne mov xlat sub outsb fcoml push repnz (bad) jl push (bad) mov lret stos push cmc sbb loopne int mov jo cmpsl jnp cltd bound cs popf cmp sbb std jmp add (bad) mull xchg (bad) (bad) push cs mov push aad adc outsb scas add push mov add shl lcall in repnz call jo popa adc gs pop jns mov es dec adc test pop cmp xchg movsb jmp mov test dec push mov jbe movsl cmp or and xchg je dec cmc xchg xchg push fnstcw xchg push movsl fs or and (bad) mov ficomp fwait push notl mov jnp (bad) scas lds es add mov insl leave push sub xchg rorb shll cmpsl mov jb ret cmp insb sub xchg cmpsb mov add addr16 leave cmpsl das lods les sar jg pop addr16 adc sahf push jg ss std rolb out loope dec xchg xor jp stc inc cmc dec mov incl out iret xchg outsl inc fs add mov repz scas fisubl sub xor and int subps sbb sub arpl adc push mov lcall xchg fwait je add cmp int cmpl or xchg pop pop adc test jmp mov fstpl add sbb loopne sbb fwait dec sub push xor fwait and cltd or lahf or push fsubp lock mov cmp sbb push nop adc mov cld or or mov mov jp mov mov mov imulb rorl out mov out pushf inc pop outsb adc cmp pop push sahf out icebp adc jp push ss push xchg or sub inc mov roll sar jns mov lock add jno (bad) push adc mov jp daa in pop test cltd pop cli push popf push jle ret jbe xchg jb or outsl or nop push sub dec push loope add xchg clc jbe push lds xor jo,pt adc insb in stos pop out lret sbb inc call mov ss adc popa sub lock xchg cmp fs sbb jecxz ljmp or mov xchg cwtl adc sbb lea lods iret sbb shlb pop sbb sbb adc mov inc jle lods add xchg test fsubrl mov rorl mov loop mov ror add push pop sub or pop mov leave ret and or cmp cmpsl and pop xchg loop popa enter add adc fistpll mov std pushl movsb outsb (bad) loope pop or fs aas ds popf mov (bad) into (bad) hlt bound popf fildl add movl jle mov outsl dec pop aas clc in sub ret mov (bad) mov popa dec mov int lods and sbb inc cmp xor pushf jae cmc out add sub or add out push orl in mov adc xchg xchg xchg jnp jge pop xchg loope ja xchg dec shrb stos inc movsb loopne mov adc jl js (bad) in mov test mov scas add cld dec (bad) ret inc out push int3 in mov mov (bad) out xchg xchg das cmpsb arpl lret aad imul and cmp inc int3 dec sbb mov insl push jmp xor repz pop inc ret out aad cmp dec (bad) test xchg adc mov lods add inc aaa aad rorb inc mov xchg push jno (bad) movsl dec xchg daa scas sarl and aam push pop jb cmp fcompl jne rolb cwtl jmp popa mov adc mov pop or xchg and inc mov add jg out rolb mov sbb loope dec rcl aad mov outsb insb xchg cmc scas push sub mov dec ret out sbb sahf cmpsl subb leave pop cmp hlt data16 stc aad cmc dec sahf lcall sub mov push mov and and les aad std loope cmp int (bad) push hlt insl movsb inc push mov insb stos mov scas test stos iret repz fs mov inc sub mov cwtl or jmp jmp fiaddl dec push rdtsc fmul dec ljmp lcall xchg int3 leave lods xchg pop std aad add jb sub xchg jge jo and lahf or call push cmpsl in add (bad) jb mov rcrb inc fsubr xchg (bad) aas shrb mov fs lods in and ljmpw jp notl xor test xchg push nop jbe xor pop flds fdivl (bad) jl pop mov sahf lods cmp fwait lds inc test inc or cwtl out mov cmc add (bad) cmc and jns shlb dec call push add or pop sbb cmp cli inc iret mov int inc aad fcmovne loope js ret clc fcomi std adc lock ret mov fstpl mov test je and je ja inc dec int or into (bad) mov daa mov aam cli sub cmp mov pop mov or std add imul pop rcll inc inc jo push sbb (bad) clc dec jmp call (bad) repnz lods dec sar (bad) push lret push jno mov or cmp mov lcall push gs jno lret fsubs or outsb sahf out cli (bad) dec jo cs sub xchg and ljmp xor cmp cmp insb and push aaa icebp insb aad pop push add mov mov sahf fnstenv negb mov pusha pusha ror movsl nop cmp addr16 inc loopne add cli fs jp and int and aad jmp inc lret nop push mov xchg jo push shlb pop enter add je cltd xchg imul push test mov test add cmp cmpl mov ret imul dec jae fmull dec rclb enter push int3 loop inc insb fistp cmp mov fs ss push jg clc sahf in rcll adc adc in mov ret pushf (bad) dec lret fstl mov push lea (bad) push bnd mov cmpsl scas pop ror or or push xor in test hlt push cmp les mov sub stc movsl cmp je jge sub fldenv fcmovbe out mov mov dec icebp jb or mov call test xchg xchg aas sbb jmp mov rcrb sub inc cmc and cs lock cmp pop xchg xor jmp add mov cmpsl pusha and loop dec fs mov addr16 mov testb fisubrl (bad) fwait sarb adc push sarl inc push gs jmp in push mov jmp stc push lods push pop in and ja mov in inc adc add mov inc and daa test enter scas imul inc loope lea mov pop les outsl or push push mov push xchg inc mov repz aas out rclb xchg pop mov push out mov push mov cmp jle push add or (bad) and adc test jae sub mov outsb sbb shlb mov xchg push mov imul movsl ret cwtl ljmp incb adc movsb push cmp push test into xor sbbl scas jo cmpb sub rcl test enter mov sti mov or fcoml mov or push aaa jg xchg ret mov or xchg cmpl mov in test lods (bad) aad sub xor loop inc cmpsb xchg sahf jnp jae,pn xor stc ret push int3 jae dec and jb inc popa add push sbb jg rorb lea fsubs cmpsl in les jmp push clc mov (bad) push inc nop out push les cmpsb call inc cld adc aas inc cmpsl test repnz jle ret idivb fidiv rcr mov lock xlat rcll clc inc or pop or hlt mov add xchg inc mov add aad iret lock insb scas dec push dec inc add jecxz rcr dec sahf mov mov orl popf pop inc out gs cli notb pop aas inc sub push adc dec xor imul xchg jg xor rcll pop popa dec adc push pop insb scas mov not and jl and test push add ljmp je,pt jg pop dec cli out in or mov adc rcrb loopne adc jo test repnz inc add aas inc neg inc das clc inc sub cmp or jp (bad) mov ficomp iret sbb inc xchg sub jae fldz xor inc dec ljmp rol push pop insb pcmpeqb xchg xchg clc or pop rorl into and (bad) int3 pop stc xor js out roll (bad) ds sub add sbb sarb repnz mov scas in mov (bad) xor (bad) mov rorl mov nop icebp inc cmpsl repz dec xchg icebp jmp cmpsl enter cltd push (bad) call popa inc pop ljmp and popa out xor imull lds mov sbb jns aas push adc sbb sub mov (bad) jecxz jmp cwtl pop add or out mov inc ds and add jo sbb cmp adc push xor scas xchg outsb test mov lret inc lods rorb cmpb sub lods sti adc fmuls lods inc lds mov cmp cwtl mov pushf pop adc push (bad) jp into lds scas mov idivb repnz sub in xchg movsl je (bad) sub popa jle xchg cmp lods sbb mov (bad) mov insl inc je jge xchg xchg loop jnp insb dec add mov and jg (bad) or push jnp bnd xchg iret fstpt dec lods sbb andb mov je aaa cmp cmp loopne pop mov ret lea cmp lret or add push rclb mov push and gs out mov push xchg inc inc mov mulb ret aam cwtl into sub mov lods pushf cli push pusha (bad) fcmove aaa sbb jle lahf cmpsb add cmpsb mov and mov sub jae push aam test std daa xor call xor or cld rcll lret push je mov movsl cmc pop (bad) sti xchg lods repz push jg mov imul fldcw adc pop shlb daa call stos out adc jecxz lock gs (bad) mov add inc ja pop push ja mov lds mov rcll mov mov cmp stc push cmp std imul mov and call sub les and aam xchg mov add inc sbb add stos fidivr inc or pop (bad) out aad stc stos push inc int fistpll inc (bad) or mov outsb push hlt jg cmp scas fs jecxz aam nop xor mov out jne mov pop pop (bad) cli and (bad) push mov gs sub dec sub mov pushf and dec scas push mov shrb or cmp add lods ja (bad) or mov ss dec xchg cwtl and call or jmp jmp and int3 bound xor jg mov pop sub mov out pop mov push ss fstps add push push int3 push inc xchg pop loop ss in fwait push adc adc push clc repz js cmpsb sti out push pop rol push mov pop rolb mov sbb outsb cli int3 leave popf (bad) jmp mov nop sub pop into cmp push xor mov jg adc mov ret push add inc xor fxch pushf sub clc rcrl add xor std pop (bad) push and js fisttpl mov outsb ja in push pop mov or je int jo mov adc cmp dec cmp inc adc xor jbe fcoml mov clc in dec dec push scas mov aad xchg aas push push loope leave jecxz mov cmp and nop or mov movsl shrb mov (bad) jg push arpl jns (bad) cmp lcall and jno (bad) xor ss std inc pop int3 gs push lcall mov int (bad) push daa sub push mov popa or insb push les aaa xor std out lret fstpl cld lcall pop sbb repnz push xor ja pop loop xchg adcb cmc jle mov (bad) and mov je mov repnz popl xor sub add movsb sahf mov je mov cmp negb push sbb cmp pusha clc and lods lcall cli out iret fidivrl pushf stos test mov adc dec es (bad) xor inc in inc in nop push (bad) enter adc push cld push int3 popf popl popf jnp loope mov push fsubl cmp cmp jo ret ss mov add insb xchg (bad) (bad) fisttpl fnstcw add dec fistp cli es imul push push rolb mov icebp loope mov in fmuls fiadd and dec push pop inc mov daa insl repz jl mov mov mov mov pop mov or inc or popa xchg dec push inc jmp std and mov ja jg (bad) xor add cmp mov inc mov mov push lds lea xchg clc outsb jbe lock xor and pop xor jmp pushf int3 lea sbb mov cs mov add mov adc mov mov xchg std xchg xorl cmpsb adc lods dec mov cmc sbb mov xchg pop push scas or or pop cmc pushf (bad) imull xchg jo pusha addl aaa clc cmpsl popa les fidivrl inc jmp xor fistp stos mov inc push dec jmp xchg jle pop outsl test xor ret ret or insl ds lcall dec je rcr stos jae incb and cmp imul ja push xchg cmp bound and out leave lods in movsb dec push test sub inc fs js sbb xor mov aas jl mov xchg int3 insb scas popf push xchg cmp incl adc jnp gs mov cli insb insl sbb stc arpl add es repz bound push lods or mov pop mov pop sbb into fidivl jae rorb lods pop pop adc roll hlt mov mov fsubrs shlb inc push sub adc dec xchg out neg xor lea sbb xchg mov adc xor jg test add mov and cmp mov jle mov lock mov pushf pop mov and mov jmp cltd int jmp (bad) (bad) or adc faddl clc sbb ret or jmp mov into jle push mov popf imul pop mov mov clc mov lods fmuls test and push in idivl fsubp sbb inc mov es mov scas lret cmpsb jge cmp mov xchg pop ret ficomp push xchg mov or push lock jbe rorb xchg mov xchg out in push and add sbb out negl push fidivr hlt cmp out sub aad js shll inc inc mov ljmp int xor in push xor ja mov cmp jp stc leave insl dec test mov sub mov add push out sbb cmp adc testb test sbb sub call pop in mov daa cli mov xchg dec lods ds repnz push arpl cmp jl jbe sbb or mov aam fadds inc enter stos jns jmp (bad) mov int sbb xlat inc mov mov pop int3 test add popf mov lods out sub lret jne rcl in inc xchg pop or (bad) mov leave das pop test push clc adc xor lea dec xor in push orl leave xchg mov lret jge sbb mov js adc cli pop into xorb jecxz jae out sbb xchg xor lds ret xchg mov movsb fstl push stos loop lock sub push scas mov in mov add pushf xchg jo xchg mov call jne mov daa enter (bad) mov outsb repz (bad) int push aam inc (bad) mov inc mov es and cltd repz int stc xor ja fld fcoml sti shrb and cld cmpsl push add sub lea addr16 pop outsb and arpl sub in out ja outsl xchg data16 sarb mov lcall sbb pop xchg pop inc mov xlat lret adc mov in out lock xchg mov popf pop sub repnz jo jle test test pushf (bad) mov xchg popa (bad) add xchg jbe add bound pushf icebp inc adc and lahf add stos clc sbb movsb jg loope mov call mov mov cmp fwait loope outsl jae test cmp arpl adc cwtl push nop jae xchg push push daa pop notl mov sub mov ljmp int3 shrb sub push fdivr dec xchg jae lahf loope movsl loope aam repnz sub lea mov and sub mov dec inc adc imul cmp js xchg mov divb fdivrp and xor fwait mov fidiv cmp cli pop les cli mov rcll inc test pop test (bad) xor and (bad) xor xchg cmp mov (bad) xchg push in pop jb jg and and push test mov xchg add adc cmp (bad) fisubl mov jg es popf test clc gs stos dec lods and mov push sbb outsb push inc mov mov ja test arpl (bad) popa mov xchg mov orl mov dec adc pop sahf sub and outsb sbb mov sbb mov (bad) movsl leave cmc clc mov loope sti cmpsl sbb cwtl or addr16 (bad) or stos cli jo imul mov jecxz (bad) xor push jno mov xor loop add in and jae sar out inc mov push xchg jle fucomip xor test push data16 in add xchg ljmp xchg mov xor dec (bad) xchg push dec lret and cmpsb pop lock cmpsl les and xchg adc push jge imul (bad) pop jne clc lret dec cld cmp cmpsl (bad) xlat test ret daa repnz jl xlat shll addr16 pop lret jo clc int mov repnz test sarl mov xchg sahf push cli popa pop fisubr pop xor movsb pop lea cmp adc cmp cli add das scas cmp sbb xchg dec jge sub repnz pop xor ljmp or ss pop lcall cld insb out push or scas dec nop mov xchg lret cmp jl push cmp rcl fidivl cs daa dec pop push cmp out xchg jno (bad) xor push imul cmp int cld rol outsl test mov lods mov cmp or push lahf scas imul popa push fwait ds leave sub mov loope mov dec jg sub into (bad) leave cmp xchg xchg (bad) pop repnz ds insl sahf popa dec iret mov inc sbb ja (bad) ljmp orl push sbb fnstcw pushf mov cmpsl rolb cmc pusha je (bad) push jo das (bad) mov or sar bound les mov repz pop push add sbb lods jmp pop cld jnp lahf cs push mov xchg push jb pop dec (bad) jge cmp push mov cli das pop je lret mov dec in fnsave mov xchg push cmp pop inc pop punpckldq xchg xchg into push cmp shrl daa push mov test jbe fstpt (bad) mov xchg jae ss scas xchg into and scas add dec in test pop mov outsl lods hlt cs xchg shll lock xor fwait (bad) cmc leave arpl cmpsb into push in jo repz mov mov dec cmp xor fldcw mov or pop pop outsb (bad) jecxz sub aam mov cmp es mov xchg mov pop icebp and jb imul push dec cli adc mov gs popa jo or mov add adc sbbl inc scas repnz loopne add xor adc dec sub xchg ljmp jnp inc sti pushf push jbe les dec adc scas lcall mov cmc out dec test push or xchg lcall loope sub xor fidiv adc dec dec pop call out enter enter sbb setno outsl xor in cmp cmp mov ja (bad) pop lods bnd iret jp sbb push push inc mov into cwtl mov imul aad divl and repz cmpsl push cmpsb xor push and push sbb sahf or pop ljmp mov add movsb stos (bad) push pop mov shrd adcl movsb cli lock lock mov aas mov sbb inc movsb mov sub mov add or dec xchg gs das (bad) sbb loopne ds and fs push xchg xor scas xor jp jb sbb jbe xchg sub inc popf push add xchg fscale addl xchg in roll test (bad) pop in mov out decl scas xor and movsb data16 pop mov cmp cltd pop push inc (bad) xor push jo sub mov fdivr sbb inc mov jge (bad) jb push xchg mov pop ss outsb jmp fldcw jge push and out inc mov ret mov inc scas mov xor and jne or ret mov hlt mov pushf and or jnp jne mov sahf and sub mov fsubs sub xchg test pop jns lock mov iret pusha into sbb or dec sbb and sub dec pop xchg xchg (bad) (bad) sub inc ret add or xchg cli xchg out pop dec xlat sub push out sub incl outsb rcrb push js jo or fsubr push in adc add bound setno (bad) mov mov sub popf dec xlat pushl mov xchg movsb ret lock sbb cmp sbb inc mov xchg push inc dec cmpsb mov out mov push adc xchg mov and cltd test mov adc push es jnp das hlt cmp mov xchg loope jge je movsb jmp xchg inc sub jecxz outsl flds jno mov xchg mov pop sub inc add je push add insl movsl scas outsl addl jle int3 or pop adcl jo push inc pop icebp add and jmp and xchg addr16 arpl ja add iret mov out push out (bad) (bad) adc pop cmpsl aam lock fdivp and cld lods sbb and jb shrb inc fildll and mov ss fdivrs call shl out jns iret push (bad) mov pop sub and and mov es push xchg mov mov mov stos and dec out (bad) mov dec sub push add ja out test xor cmc int3 aas pop fisubl (bad) in jl pusha stos in repnz pop repnz (bad) cmp je test mov lea inc pop subl nop cli xchg sbb add sub imul jge jmp fist jnp push jns mov lods les cmp push iret in imul sub jge dec sub inc scas xchg dec fs in adc sbb mov add jl lea mov add mov stos imul push mov ss fwait cwtl leave push in dec mov pushf call sub push cmc cmp and ret subl mov rcl or les and scas pop mov ljmp lock movsb (bad) stos adc std lods daa pop in insl jmp mov loop test notb lods ja (bad) aam cmp mov sub addr16 fisttpll inc sbb sbb cltd outsl (bad) jno xchg or test jo inc lret lret sub insl fmuls mov push mov aad pop dec adc scas test outsl sarb into imul fist nop mov lret or cwtl or cwtl and loop fs fsts jno into cmp sbb test arpl jno dec andl das mov adc jnp bound add adc mov in sub mov pop mov dec rol in fistp in enter push lret push sub pop mov int in leave clc fwait gs aam mov mov xor dec fmuls push loope xchg inc lds (bad) cmp test lahf movsb push push clc aam mov daa push das loope sbb les sub push sbb mov and mov adc out je stos add push cmp lcall push dec xadd jb mov pop jnp cmp and sti jb in scas call roll pop mov jns pop lea test das inc pop cmp std fnop aad adc and push scas dec int3 xlat movsl cwtl pop mov lcall dec xchg inc mov rep cmpsb jb or adc push xor aad dec mov rcrl adc and fldt mov mov addr16 mov sbb aas xchg cmp mov aaa jmp add dec es in popf and cmp cmp sub xor mov ret mov ret mov cwtl mov add insl lea sub scas mov adc mov pusha ds mov mov (bad) push jl outsb xor das (bad) xor and mov push mov push ret in lcall dec dec loope sub lock int3 xor mov sti das inc rolb popa mov cmp sub flds movsl in mov imul mov add or movsl mov daa out fucomi add enter sub mov out push push jbe jp xor sbb sti xor sbb xchg adc xor daa inc mov pop jb jge mov jmp dec dec repnz add shr xchg mov mov jbe inc arpl cmpsb repz pop dec jb mov mov and sbb adc movsl andl loopne fs test push fnstenv adc subl sbb out add test xor (bad) and testl pop and aad jno stos push mov dec addr16 in test aam or ret outsb and int xchg and sarb cmpsl sbb mov and dec test fsubl mov test (bad) mov push in aaa add mov shr lahf xor rclb mov add xchg jg or lcall dec adc insl pushf fisubr push push dec call sti leave adc or xchg inc aad call addb push imul sub mov jae inc and clc popf iret mov inc xor jnp and push jne,pn mov fcmovnb aaa jmp pop lret push int3 dec lret mov cwtl movsl dec popa push loopne pop and out fs fimul mov insl bound xor jnp ret pop jne mov or add and (bad) jae mov es rorb (bad) dec adc inc pop repnz mov mov les cltd cmp in xor jns mov ljmp scas dec ret mov sbb aad dec jbe mov cmp or ja jbe subb ficom xor inc or or mov adc inc mov jmp sbb xchg out repnz mov stos jns add xor jmp mov loop jo sbb xlat xchg jecxz inc cmpsl fdivl add push in and ja (bad) push (bad) lock push rcl bound outsl mov outsb jmp test je aaa lahf (bad) icebp xchg push (bad) mov xchg test shlb mov cmc lret add sub cwtl daa mov xchg and fwait jno adc ds push lock ficoml sub push sbb ret sbb loope inc or js jmp test lcall add or out test and fwait loopne jmp jno fistl xor into fimul or cmp shrl stos aam adc movsb jno dec (bad) int xrelease lahf lock pop mov lods popa mov (bad) xchg imul (bad) repnz popa add jnp in (bad) adc inc rorb lret fildll out insl jg bound pop outsb cmp cmp es sti jl pop xchg ss enter inc enter iret fsubs insl pop daa and dec and (bad) pop rorb push stos mov sahf aam mov pop dec scas fidivr or idivl xchg cmp subl xlat pop ljmp xor or pop (bad) mov std xchg and inc scas mov fisubl fcmovbe adc and jne sbb lea in mov lods fnstcw sti scas mov cmp inc leave insl push loopne aam (bad) cltd dec sbb cmpsb lods insb pushf ss ja gs ja scas mov xchg enter xlat sti inc jbe add mov daa jle jecxz mov adc jb lret stc or add (bad) or and mov mov sub insb pop nop pop adc jg cs (bad) mov xchg or and (bad) and pop jo das jmp movsb imul ds mov int fwait add aaa fadds push inc shr or xchg xor mov (bad) sbb lahf pop mov sub test test in lods xchg mov dec or mov (bad) bound setp or sub (bad) andl mov addl xchg jl jg mov push movsb scas pusha gs dec jl jne pop es lcall sbb outsb lahf test mov lret pop into xchg mov pop aas lret rcr addb popf jnp rorl fsubl rol or push nop mov dec mov mov outsl dec mov pop push movsb addr16 nop mov cmp ret lods nop cmpsl stos or cmp xchg arpl das rcr sub imul scas in test xchg inc pop and sahf or cmp and mov ljmp pop arpl lods push dec fwait cmp es icebp jg mov nop xchg jne data16 outsb fwait out cwtl add aas loopne,pn add push aad sti or xor in fisubr std fnstenv lds or add pop add sub rclb mov push adc decb xor pop inc outsw (bad) mov sbb fmuls movsl jecxz sarl mov push fwait sub pop loop adc lock jno and jb mov lret shufps (bad) repz mov ret pop and inc lret outsl data16 mov pop adc dec and xchg movsl mulb mov loope loopne jg xchg sbb add pop push stos xchg std fildll adc in out mov cmp inc jne or push jno addr16 xchg sbb xchg cmp lcall (bad) cltd xor call xlat xchg lods inc inc ja (bad) xor lods cmc popf icebp fist movsb xchg inc gs jo aad int mull jns jecxz sub ret inc inc lret repnz cmp jno fwait lock push in test pop pop (bad) enter movsl cmp xor xchg decl cmpsl sub daa mov lock les cmc sub sub lret cmp faddp repnz bts mov and stos data16 fnstcw fmul cmc adc pop sub inc push and sbb test (bad) mov mov loop movsl sti lods inc aad hlt xor fisttpll and test adc pop test in mov mov or push xchg mov push mov mov les mov fiaddl and xchg scas mov dec mov cmp pop adc leave addl pop movsb xlat ret cmp ds loopne adc xor lds pusha or daa push push pop imul and and std sub mov adc je dec sbb enter test sarl js repnz lret push lods jge fisub mov out dec mov (bad) cmpsb inc xor das int3 jbe mov sub stos bound rcrb add push insb mov jmp inc bound xor adc jb fadd mov fsubrl xorl inc fild jp cmp mov ret add data16 jnp or aam fwait mov js insb jle push add aas (bad) xlat repnz icebp mov test jge sarl mov cmp cmp outsl dec pop std push cmp xchg mov mov push aad inc lahf cmp aad inc mov dec stc adc subl insl test adc inc or mov stc mov and rol jns jmp pop mov nop inc dec mov clc jle sbb sarl dec inc adc sub mov push xor out int jbe push hlt pushf out xchg insb sub sbb sub test stos and mov sbb and mov add pop jbe mov scas (bad) das add andb add stos jns add jge loop es mov shlb dec inc cmp nop mov stos add scas loopne iret fildll add cld sub cmpsl outsb int lea cltd fwait neg fistl push or mov mov (bad) cld cs pop push mov pushf iret stos nop test iret jp sti leave mov xchg popf int3 dec or cli fild inc inc fsts (bad) jae out (bad) and (bad) gs jle je cmp xchg mov sub mov and push sbb lret aaa inc xor cmp nop sti (bad) outsb xor jle add enter jmp pop aam daa adc loope aaa outsl inc in cwtl cmp popa cmc (bad) cmp jae adc bound sbb sarl test dec sbb movsb fucomip inc in or or sub fdivr (bad) xor test mulb sub repnz xor pop cmc dec out mov fistpl jne pop lcall cltd dec ret pop jnp xor xor imul ret cmp and pop jo push or jmp cmp inc test mov (bad) jg fldcw lock scas pop dec mov int3 fiadd cmpsl xchg das (bad) std test xchg xchg inc fidivr add (bad) aam push push mov mov popf dec sub mov jge xor sub xchg inc mov xchg test aaa sbb bswap dec ret les cmp cmpsl pop sub push fadd in call bnd mov addr16 fdivrs push cmp ss (bad) and dec mov sub and add lea adc mov in pop test and adc or daa sbb adc ret ds inc sbb lret fstl daa mov cmp jl or jae repz or jno ucomiss xchg insl mov jge jnp out pop sbb (bad) jns (bad) (bad) cmp scas lea jbe cmp clc mov rorl adc mov (bad) addr16 jae add cwtl mov loope lahf cmp iret mov mov bswap insl add jl das insl xor jecxz mov jbe in loop es and mov rclb mov in or (bad) aas (bad) cmp adc lret inc out dec mov call enter or movsl je lcall jb popa dec fisttpl and push scas jecxz add dec add push mov inc enter and aaa lret cmp lods fs popa jnp adc ja jno sub daa int3 bnd (bad) or mov inc and fnstsw loope lret adc stc push popf mov jg jecxz lock fistp repnz imul push push in inc sub cmp loop pop cmp scas jl add stos cmp xor lods loope mov pop cmp fdivrs cmpsl cwtl hlt xor test stos mov ds ficom mov jecxz lahf test out dec jecxz cmp cwtl icebp sbb push pop movsb int3 xchg int or jle mov test sbb and xchg jmp leave lahf cmp jle add inc fistpl pop imulb sub insl xchg mov jge xchg sti dec mov lods out pop cmp in mov (bad) and jbe out icebp fdiv mov call and es rorb add movsb adc sub push lods xor xchg sahf jg in xchg jecxz fidivrl roll insb cmp jo xlat push mov add (bad) mov out shll mov mov adc mov push push pushf test jns sub pusha rcr add pop stc dec mov push cmp stc push mov stos mov lcall call sub or sub dec mov cld mov inc fsubrs popa lret xorb lcall ds fcmovu xchg inc pop mov (bad) jmp loope cmp add inc (bad) dec sub mov icebp lahf sti rcll xor nop push adc dec loope cmp divl xchg sbb pop outsb lds js jo xlat rolb jo in repnz and rolb pop jae and leave cmp pop fisubr addr16 or add or mov pop daa xchg and xchg in mov xchg jno scas int3 lret aad fistl int and mov fcompl mov (bad) mov push loop pop adcb push and push (bad) aas pop bound test aad adc (bad) dec out xchg push adc dec mov inc cld or stos inc dec arpl jmp fsts cli std mov mov loope (bad) lods mov dec fwait stos pop cmp jmp or lds and jbe adcl and push fstl lahf jmp stos pop in adc push cmp and push int3 mov pop mov lcall adcl push out and aas xor ficom inc insl sbb ja sbb mov mov enter xor shrb sub pop lcall std xchg lahf or (bad) bound mov and sub xor adc sbb mov lods jno adc test push inc push pop out dec ljmp icebp out test fsubrl cmp cmpl jno sub ljmp mov test xchg fsubl xchg stos push fistp cmp scas outsb loopne jbe loop pop jae pop inc out adc mov inc adc adc pop add add call mov je xor mov loope roll (bad) or or pop add pop jne stos mov or adc imul jp aas enter loopne repnz imul gs xor mov pusha paddsw stos push xchg sahf inc in lock icebp pop adc xchg movsb push mov pop or xchg inc std sub rorb xor jp loope jg addr16 sub mov test mov rcrb std and push push push jbe js mov nop les jle leave xchg inc jl jg mov lds pop inc and and pop push mov mov sti or pop mov add push fwait add ljmp mov fistp fs mov inc jl mov les jp add ficoml (bad) pusha mov mov pop enter and and (bad) movsb dec xor sbb test xor pop out orl pop nop add (bad) mov mov fisubl inc inc call push and aas out das dec dec jbe roll or xchg mov pop add adc mov out mov nop enter jmp faddl add push jo dec pop into jo xchg mov and sarl cmp cmp adc popf rclb lret jle sahf jp dec (bad) in dec popa mov stos xor pop aam je fcmovu sbb lods lahf aas test pusha push push js pop sbb jo mov xchg xor xchg lds (bad) jns push dec pop xor sarl faddl in lods mov repz je mov sbb out mov clc jns pop xchg and (bad) in sahf jno pop and clc cld pusha movsb (bad) bound sub add jne push dec push cmp out and push xlat mov (bad) test push lods std sub not lcall test mov mov lods mov ret inc es xchg push dec lods out daa dec dec rorl (bad) fcoms pusha xor in pop into fdivrl call lahf sbb cwtl mov xor dec sbb mov das fs mov cld imul jnp fwait jmp or in xor adc mov out and movsb sbb out int3 xchg mov cltd ds roll and xor stos mov jae mov ss xchg push fs fistpl sbb dec push inc jp lret orl fdivrs movsb jb jne pop hlt xlat jle fidivrl andl ret orb jns jnp cmp xor test out mov test sub pop rclb les sub (bad) mov mov pusha pop xor in inc mov lea jecxz sbb push fnstcw push jb xchg xchg or jle ret ja int3 stc cmc test sbb mov jle stos mov xor dec cld (bad) and cmc lock pop push jecxz jns leave stc into mov inc adc das sub jle repz or insb lret (bad) loop mov push xor out push (bad) mov outsl out ljmp imul ja daa pop ljmp jb pushf leave mov or fdiv loopne fs bound jns loopne mov out or mov mov sbb shll sbbl push (bad) jmp pop aad aas lods xor xor and add cmp pop xchg inc imul or adc les inc cltd xchg lahf fcoms scas dec mov into jae imul sbb pop and repnz jmp (bad) push xor cmp jne loop aad hlt xchg je xchg xchg mov add (bad) dec and in push jmp mov add vcvtpd2dqy mov sub scas jno xor cmp cmp (bad) (bad) ficoml sbb iret add shll dec arpl or xchg aaa scas and dec ret mov sub and inc jmp push inc cwtl cmp pop pop fcomps jo pop imul cmpsb xchg sti inc in das sbb call mov or loop jnp fcmovb jnp aam addr16 call cmp out dec (bad) mov push lret cli sahf in ds stc (bad) sbb outsl adc mov cmp xor ljmp (bad) sarl pop out sub sub inc pop in mov jp js add push sbb or pop mov pop pop dec test cmpsb popf je pop sti cmp in dec fistpl or fistpll stos adc rol scas pop xchg mov aam icebp xchg xchg popf lock in push mov mov pop out push leave clc mov sbb push push outsb in sub test pop jmp iret inc cld and push cmp cld mov cmpsb lods jge jb dec stc mov gs in push and cmp (bad) mov lret xchg inc jg jge mov inc into cmpsl inc push push jbe icebp lahf loop loopne xlat adc mov adc in cmp push cmp (bad) (bad) jb sbb jae aaa cli pop add mov mov cmpb daa mov ljmp lret sarb cmp jo ret or insb aas pop mov ja push push and dec das sub std outsl imul push inc jne lret sub adc mov mov push scas pop in cmpsb mov cmp mov rcrl mov ja sub jb lock xor pop (bad) cmc je (bad) imul dec daa mul inc mov outsb icebp push dec jnp inc rcll mov iret test (bad) lret ret jno lret loop leave out sbb movsb or out dec xchg mov ret enter (bad) cmp ljmp xchg mov jge in mov inc movsb test mov mov fidivr xorl stc mov push leave xor xor jmp sub jae (bad) dec pop add lock jecxz les or xchg inc push mov in stc dec movsb clc test sbb cld jg xchg mov lahf aad jl jg cmp mov test test arpl adc add repnz mov rolb and pop addb gs xchg xchg xchg in js in dec lods push jge out cmpl inc xchg cmc stos popfw in loopne push inc jmp rclb xorl sbb sub lahf mov (bad) repnz mov push xchg or clc inc andl sbb (bad) loopne jnp mov pop mov mov mov stos and mov or dec icebp jp stc data16 adc sbb test xor push or lock int fld or in mov enter mov push jg jno or and iret stos inc jmp lret cmc sbb jnp ljmp mov cmp les pop incl mov or imul scas dec xchg pop cmpsb and pop in and icebp lret pop bound mov movsl add and mov sbb add (bad) dec inc or in mov insl scas push fnstsw mov or mov outsl addb inc mov popf and stos push fnstenv popa dec adc ret jns pop enter (bad) jae adc dec ret inc jmp mov (bad) stc xor test scas lret pushf mov mov inc mov incb mov adc or jmp mov add decl jg cmp sbb es out xchg inc lahf push inc cmpsl add (bad) xor pop sbb imul pop scas inc adc popf je lods push lahf int jo (bad) aaa aas and xchg insb inc xor mov cmpsl or and jl ja sbbl inc jmp mov lods scas dec cmp cmpl pop ret aam shll push jns aad and mov clc adc dec mov call movsb mov xchg jmp les gs movsl rcr mov arpl dec mov icebp sub shll jbe js (bad) xor lock jns scas stos outsb aad adc fcoms mov pop sub mov mov scas call lock and movsl push (bad) (bad) mov or jl dec fstl pop stos mov jecxz mov add cld ret cmp hlt test push inc lea or cmp push fidiv repnz jnp or pusha jecxz es std pop test lods fmul movsl jno pop cmpsl daa (bad) (bad) xor mov dec divb mov imul rorb jo cs movsb push add out jne mov jae ja xlat pop inc mov jg shr leave lret mov ljmp cltd sahf std jecxz inc lock fwait sbb outsb loopne movsb jns faddl dec push test (bad) imulb inc outsl push sub fwait test push lods add add outsl inc scas in jbe sbb jae pop aaa or mov sbb and outsl mov mov in in aas aam aad sub fwait jge cli enter cmp adc mov mov mov sbb sub xchg loope push pop xor arpl inc add pop xchg mov aam mov sub loop insl xchg mov lcall xor jns mov cmp jnp fimul mov (bad) daa mov loope outsl ljmp pop into dec add pop cmp fwait fs ret xor adc call movsl popa jecxz pop shrb push add jb lcall mov cs iret xchg movsl or pushl fiaddl arpl pop sbb fcmovnb sahf hlt (bad) mov xchg out dec scas push jle mov div rol je lods movsl adc sub test sub stos into inc fwait popf cmpsl mov mov adc cli sub mov mov sbb lahf std sbb mov das mov (bad) faddl mov stos fsts leave mov repz or insl imul popa xchg add clc and aaa pop data16 test mov addl out imul cltd mov dec adc xchg test test xlat xchg adc ss mov outsl jle adc push popa outsl divl lret ja or fimul push push in (bad) outsb fwait stos pushf push les stos cs jns imul repz sbb imul lds push pop insl out pxor mov mov sbb mov insb loopne cld mov das fdivs arpl push ret int3 ja cmc sub push sub dec dec (bad) dec lea out xchg dec push adc dec cmp (bad) sub push sbb sbb push add mov nop aaa (bad) mov jp inc aam inc aam xchg cmp mov mov in jmp mov repnz mov jmp inc jnp out imul gs aaa das icebp daa inc jp mov jo lcall adc (bad) (bad) and lods ficoml xor inc fucomp fwait in (bad) sub fadd dec lret idiv arpl mov jb popa jmp or rorl mov sarb lods lods mov outsb adc int push cmp xor movsl ret add (bad) loop addr16 cmpsb (bad) lods add push (bad) lods sti push je sbb inc movsl je mov iret jecxz xchg xchg fstps push mov enter dec shl mov out inc test mov xchg xor stos out out xchg pop orl jnp,pt ret mov jle cmpsl inc jns fdivl fnsave ljmp inc popa pop mov imul addr16 push outsb bound ss nopl lods jp xor push mov pop xchg ja add lods imul int3 jecxz int loopne movsl push pop (bad) adc rorb push sub data16 imul mov push add adc mov add test iret std lret shrl (bad) insb int3 dec sub das loop push mov mov push push sbb push push dec adc repz and push pop or jo scas loopne das dec inc dec sub in inc pop fdivrs cld sub inc (bad) fnop xlat jg leave bound loop daa fisttp js movsl sub dec adc lds sub mov mov mov aas aas mov xor push jecxz add inc and insb pop inc or lods aad push jae rorb pop xchg (bad) iret push inc push fcomi mov (bad) in sub shll inc mov cmp mov mov enter sbb jmp fwait rol xchg push mov mov push sub pushf rcrb jbe push ret mov aad push movsl (bad) mov imul sbb add std dec ss inc rolb pop test jo xor dec sub sbb xor loopne push xlat cmc je jb mov jecxz and push out aam test or and stc int das ljmp push push sti loopne gs mov xchg mov mov or jge sub inc fbstp cs stc sub (bad) arpl repz xor sub cmp or out das mov jecxz xchg in or pop repz add rorb rcll sbb mov dec lds mov jne push lcall push call icebp mov sbbl lods jmp push mov xor repnz enter movsl xor pop xlat out dec ret aam dec in xlat lds incb adcb sub fwait imul pop cmpsb pop test sahf movsb daa icebp inc and sti ret inc arpl sub push enter stos and jb in (bad) stos adc idivb fsub js jb mov div pop test cld push adc cmp xchg jl out pop jno or gs scas scas xchg stos cmp rcrb pop cli fldt pop sbb mov popl xor xor testl sti adc les jae aas xor dec cmp rolb bound cmp xor loope std or mov addr16 sbb mov mov mov outsb lret dec cmp adc sub add push rcr subl dec xor (bad) outsb sbb shlb adc dec aam imul hlt in mov inc jle xchg das push add mov fcmovu pushf call andb dec push adc mov xchg adc pushf cwtl add out cmp lcall sub pop cmp clc call lret adc (bad) (bad) out jmp jo je lret aam inc mov or addr16 xor inc cmpsb push out xchg iret mov dec push or inc jl stos pushf push fadds jno inc push dec pusha inc out das (bad) mov jne outsl sbb test mov or add in lock pusha popa or or xor movl mov pop sqrtps movsb jo adc bound fdivrl cmp xchg lahf sub pop movsb jmp mov scas inc adc cwtl lret push fstpt adc cmp roll test mov lods lahf fstpl pop fistpll icebp sub lcall lret xor cmp daa loopne push push jns ret pop push icebp loop mov sbb lahf mov inc sub lret jbe jb cmp ljmp addr16 arpl push fmull imul mov fsubr shl or dec dec jg lcall lock icebp shrw jp cmp movb mov (bad) push inc jl add mov adc sahf addr16 test jmp insb xor mov adc iret lcall addps lcall cmp inc or cmpsb xor aas cmp pop lods and cmp inc and fstl fldcw in ficoml cmp leave test stc jl inc inc or xchg xchg fcoms inc mov jae cmp ja outsb mov cltd int push ds pusha inc bound imul jmp mov adc adc inc ss les xchg xchg pop cs xchg (bad) or test or lcall nop or cwtl repnz mov and add push lods movsl cs popf adc xchg (bad) (bad) or loop jl mov insl pusha sahf mov imul pop push insb popa push (bad) adc icebp mov pop int3 sub add loopne in jmp test mov sarl jmp dec stc jl adc mov mov inc xchg out push cs push stc data16 inc mov shrb or cmp or pop mov (bad) data16 pushl xor sub mov mov std sbb add push aad adc xor rcrb dec shlb adc xchg mov push scas aaa xchg gs rol and (bad) cmc fnop pop sbb mov fisubrl dec xchg fld dec cmp test xor lcall push lcall mov cmpsl or add mov jae lock lahf jno or and mov aad stos pop push jle cmpsb and insb addb adc test push cmp xor fdivs mov xlat stos mov push jns dec xor dec test lods imul inc lock inc adc imul pop jne test jmp sub push sarb or cmp xchg or xchg adc jnp jmp cmc fcmovnu adc sbb lock rorl push mov jo ret insb ss xchg lock addb dec cmpsb xchg jnp adc mov popf sub xor dec xor adc push push sbb push int out popf pop cmp push adc mov sbb jns sbb and lahf movsb mov jae push (bad) mov and iret sahf jle lea mov pop mov out sub jno push (bad) jmp fmulp sub mov int3 adc jge pop loope jbe icebp popa inc loope sub and fimul stos pop dec imul push fdivr pushf fmul pushf enter mov fistl leave pop in cmpsl cmpsl inc xchg or lea mov mov or les dec or mov push pop mov (bad) faddp jle push inc aad scas cltd (bad) scas mov (bad) xchg inc scas in push pusha loopne loopne add add out pop mov add sub cmp pop call sti add je xchg fwait sahf sub jb mov mov loope sub xchg sbb jp fbstp mov inc mov call dec pmaxub cs sbb lcall test mov push add lea (bad) xor xor popa scas xlat cltd sti add pop cld or andl xchg mov sbb mov sub xor pop cmp lahf dec cmp cwtl into cmp xchg mov mov or dec xchg ss mov std fldcw in sbb repnz arpl mov psraw inc sahf outsl sbb cli sub mov mov bound out cmp xchg (bad) dec inc sub outsl mov lods cmpsl add pop cwtl mov xlat or sbb (bad) and imul or aas mov addr16 xor daa mov fs xor xlat das mov in add arpl dec pop fisubl mov pop movsb pop loop pop lods stc test xlat repz divb in shrl pusha push xor ja test xchg adc mov push xchg xchg divl cmp jle repz push push jo xor sahf idivb rol shrb inc jnp adc mov cmp sti xchg cmp adc and xchg xchg or push bound mov or jbe pushf sub rorb push cs scas xchg adc mov bound mov push jmp roll xchg sub idivb cmp xor or add xchg rclb nop mov subl sub insb (bad) or push (bad) push inc fist std add xor sbb sub (bad) mov lea cmp jb icebp and cmp sbb or mov cmp inc pop sbb popa sbb pop lds mov inc push nop cwtl push ss sbb gs aam push push jns jae popa incl hlt test add xchg rcll ja pop incl xchg mov enter xor outsl mov (bad) daa leave sub push (bad) sbb xchg dec mov sub cwtl and push add and into mov aaa sub xchg icebp push outsb dec stc mov in addr16 inc sub dec pop add jecxz xchg pop int cltd adcl test data16 xchg fsubs scas xlat jp mov inc bound mov les mov add out ja mov movb enter idivl xchg std mov cs xchg jl or ja xchg arpl cmpsb scas gs shrb inc addr16 xchg mov mov or jo jbe pop pusha jnp icebp fwait sar ja int aaa (bad) jg jge jg rcrb sbb sbb stos cmp stc xchg sar sub imul add fwait add (bad) out dec scas sub jmp mov pop cwtl mov add pushf and out xor mov loopne xchg pop addr16 and clc mov in lods mov mov mov mov pop sbb jnp in push inc sbbl pop adcb ret xchg mov pop in cmp lret dec addr16 cs popa (bad) aad imul jg out mov les mov inc push dec or cmc icebp or clc orb lea mov sahf into sub mov pop push mov in cmp pop pop jmp or xchg and cmp fs mov mov mov inc sub scas xor push pop and pop jb jge in sbb test jno adc add add pop (bad) or xchg loop das fild in adc or out mov in pop adc inc pusha (bad) js test add mov pop ljmp (bad) inc mov push jno addr16 dec fisub and outsb mov add cmc (bad) cli les int3 jb js pushf and inc imul pusha lret rol cmpsb in (bad) pop jg xor fisttp or outsl sbb es xor pop or ljmp scas or adc mov adc xchg test test push sub mov mov ljmp (bad) mov dec or mov mov xchg add cltd movsl rcrb repnz push (bad) dec in lock (bad) jg pop loopne in int je,pn xchg lahf jg fsubs adc mov push mov lcall (bad) adc fsubp repnz andl mov repnz mov aad movsl popf cmpsb aas sbb fcmovnu mov scas arpl cmp dec add stc scas sub xchg fcomps out outsb adcl sub cltd inc enter pop clc aam insb mov inc dec std jne mov jp push ds mov jecxz mov fldcw mov sub (bad) out scas inc andl and idiv test mov dec loopne inc mov inc and add inc movsl (bad) dec mov jle mov test repz fmulp lret addr16 adc adc xor push fldl jb (bad) imulb sbbl dec cmc or out xchg test fisttp hlt fisub inc shrw ja mov int es lods in or xor xor jge popf loop jecxz mov inc pop insb adc pop fisubl popa push jae pushf test lret rol pop xchg jnp and cmp add cmpsb or popf jne mov js add cli and push and xchg jb pushf hlt add aaa sets mov scas cmpl lret sti popa daa (bad) repnz dec dec push mov fstpl rorb cmp push jge push ljmp cwtl (bad) sub pop sbb xlat push adc cmp cmp lods xor test sarb cwtl mov outsb sbb and mov pop push stos mov les adc xor repz mov mov (bad) dec das repz mov outsb push sarb cwtl xchg movsl push cmp ret and xchg fcmovne add push jmp jbe cmpsb popa test scas pop xchg jp std (bad) test mov lcall mov out mov sub sbb xchg push cwtl adc fwait call sbb cld aad fimul pop cwtl imul add push dec shlb jp xor jmp cmp sbb inc inc push adc xor mov push cmp sub lock stos inc out lods xor inc jbe cli test sub data16 into lea lahf and sahf cmc push mov icebp insb pop jle shl sbb cmpsb add inc sbb sbb loope (bad) sbb imul dec daa sti jg push push arpl ret out (bad) mov int3 adc aaa pop mov scas fstps inc jne stc enter mov or add sbb ja test add pushl lcall xchg in aad sbb sbb aad pop xorl leave (bad) jb outsl imul incb adc xor dec push jne jns ffree es pop rorb out inc rclb stos jle cwtl push shl paddw xor jo jecxz dec dec loope stc cmp test int subl xor sti mov mov and loop xchg aam jb bound jns cmp pop adc mov int3 jb ss test cmp je add xchg aam (bad) scas daa mov (bad) out bound (bad) mov sbb xchg pop adcb jge popf mov dec sti (bad) jb sbb pop addl inc jp in or mov jae mov mov mov pop (bad) mov mov mov pop cltd jmp sub pop jnp imul pop mov pop fs cmp sub cwtl je mov adc xchg cmp xlat mov ret pop mov into pop pop jno mov jp ret pop cmpsl leave add adc lret xchg addr16 into xchg rcl xchg iret jg dec negb push int3 dec fdivrl mov fidivrl scas xor inc mov out push adc and out ja mov (bad) xor pop mov lods mov xor lret xor sub test outsl pop sbb lret pop loop cltd xchg xchg lea test icebp decl stos out xchg adc mov xchg leave pop stc fadd pop pop std xchg push cmp mov add adc jmp jge dec popf ljmp movsl daa ds popa cmp push popl mov xor lcall inc cmpsl incb xchg repnz mov cli push stos xorl sbb sbb push and xchg inc xor repz push mov adc sub icebp cmpsb mov xor or dec xchg jbe std stc mov pop pushf mov jge lret add sbb pop or rcll push bound cmp jae cmp outsb movsl neg push sarb lods dec in cmp jecxz and fcoms mov das add cmp xlat popf xchg jmp jbe daa aad and pushf pop (bad) mov inc jae sub jns loopne pop (bad) (bad) or orb push mov push call test jle lock xchg aaa clc sub dec mov jne add (bad) pushf cmp icebp mov push imul ret jns pop add into push test (bad) jge jge mov lds xor xor dec fwait popa cmp add cmp ljmp mov sub (bad) (bad) test (bad) push adc push adc sbb jae jmp pusha mov jo xor lods movsb inc and test imul stc popa lods mov sub xor das and in mov mov xor repnz clc lret (bad) xchg ret mov mov inc out mov and fcoml movsb sub xchg stos je mov jp xor adc jecxz inc daa scas pop push inc andl gs dec or pop es icebp fs out addr16 push pop mov andl and call jae xor loope pop cli cmpsb (bad) xor mov jmp insb les inc fmuls push dec lret push ss mov sti loope inc cld pop push cmp leave mov mov in sbb rorb (bad) loop xchg sahf hlt push int pop in cmp inc dec addb mov cwtl xchg mov imul inc mov push enter and cltd fisubr and dec inc adc test pop add movsl jns fsubrs sbb pop mov dec sub rcll and add or mov fwait popa ja mov cltd jne outsl xchg xchg int3 in push or iret stos xchg pop mov cli (bad) (bad) fiadd add xor ja adc pusha (bad) mov leave repz jle sahf sbb mov stos mov orl and inc subb xchg adc adc insb scas outsl xchg stos int test push mov cmp outsl ds out addr16 out fcompl and leave dec fbld out out fildll and ja pop xchg pop lods push mov lahf in sbb pop pusha (bad) stc mov adc inc cmp adc jae push stos xchg mov cmp adc out jmp outsl lods scas jle cld (bad) mov xchg les ja pop adc (bad) in sub scas add cmp jg push cmc mov or setns ret cmp fisubrl adc popf add mov ss stos sahf cli xchg or cmpl loopne addr16 lret loop mov adc imull xor shrb add jne push int3 mov clc fldt mov clc adc (bad) or xchg inc aaa popa sbb mov mov inc (bad) sub cs push int roll cmp loopne iret rcll push mov sahf xor int3 xor popf cmp dec popa dec jp inc bnd lcall pop inc xchg adc push sti imul lcall cmpsl lock xor jo pop inc mov (bad) mov mov (bad) jge mov mov mov lea imul xchg (bad) sahf xchg cmp repnz add dec xchg dec (bad) loope inc adc and mov std imul (bad) popa je in gs fcomps sbb sub xchg jo push xor loopne push sub mov bnd bound (bad) cmp pop xlat dec xchg and cmp cmp cmp insb insb lahf pop aad bound adc inc cs dec pushf jbe and xor out add push (bad) in stc cmp mov ljmp mov lea cltd fmuls mov mov cwtl lock cltd xchg es enter and mov xchg sahf xor enter sub stc data16 mov cmpsl movsl fwait jbe loopne loope jg,pt in pushf ja or rclb mov fsubrl shll sub jnp adc dec mov or (bad) rcrb jnp dec mov adc orl inc scas dec pop ljmp cmp push cmpsb push rorl xchg ficom in mov sub cwtl xchg nop add and outsb stc lcall inc add sbb ret jp push dec (bad) mov loopne inc outsb add popl scas scas call xchg push lea aaa xor fsubr lds scas sub inc jb mov mov out fwait ljmp outsl and repz cmp or add mulps (bad) std call lcall loop adc out (bad) xor push push add mov ret pop inc mov xchg das jp push push sub mov xchg andl sbb cmp pop (bad) addr16 xchg pop outsb mov in enter pusha (bad) pop mov fwait cs movsb andl sarl cld lea (bad) popa fisttpll push jnp daa push icebp jno jno push jne adc and xlat push or xor es sbb lret lcall data16 cmc jnp sbb adc cmp mov lea pop or rorl nop push int3 mov insb scas arpl xchg jns (bad) fmuls push (bad) xchg adc (bad) xchg mov dec jp sub enter aam orb bound negl mov push fisttpl clc push mov jl jns sub iret and jo mov mov hlt lods sub pop cmp xchg sbb or sbb inc sub sub or push or jg xor dec jnp cld jmp test or lret lret sub mov sub push pop inc inc mov dec fnstcw mov or pop inc jb lret (bad) mov mov shrb out jno pusha outsl movsl sub (bad) scas loopne mov and or (bad) std push (bad) enter mov jo mov xor out jp inc add cmp add test cmp rorb ret arpl and imul add mov jg pushl xchg fild das add dec cmp fwait sar or mov or add roll popa repz jecxz inc jge ljmp jbe add xchg dec mov std or cmp dec sahf dec stc mov dec mov jp ror lods xchg add dec xchg daa subl into in push out nop ljmp out xchg xchg sbb test mov cmp cmp pop jb cltd call or sbb add lret mov pushf sti shrb and jb pop jge ficomp inc xchg (bad) xor pop push xchg scas mov push pusha mov imul mull lret scas sbb ljmp fldenv push mov pop or xchg xchg sub int3 shll daa mov cmp mov inc aam cmp cmc out sbb mov pop cmp add (bad) mov cltd dec xor jl (bad) dec mov push and push aam sub enter movsb fnstcw mov mov int3 dec and jns pop dec push pusha xlat sub cmp dec mov inc stos push clc xchg movsl icebp push adc ljmp (bad) into or cli sbb adc jb dec dec xchg mov dec imul mov lret mov ficompl jmp push cltd jl in ja dec push sahf aaa and push int or dec aam or nop out add push test fistl movsb mov imul push jo xlat test das rcl dec dec fnstcw add xchg out arpl pushw mov dec add and lahf insb add out sbb fdivs or cmp inc roll fisub jae add hlt jle adc popa add cmp jbe mov mov mov scas (bad) stos push jmp rcl jg in lret fisub mov push sbb cmp out incl mov gs int3 pop dec sub ret pop pop loop aad daa incl retw pop pusha mov inc sbb test xor and pushf inc leave xlat sbb push iret das aaa xor mov flds loop cmp jle jae pop xchg xor pop xchg lret sbb mov mov cmp pop gs movsb mov xor leave jge in or sub jbe imul int dec cmpsl and mov outsl mov clc mov add push cld cmp jns popf push or and lcall mov jmp or mul sbb push cli pusha inc loope rcl mov adc push dec pop inc xor xor xor jmp dec mov adc cli daa pop pushf mov arpl push inc es mov (bad) xchg dec lret mov stc rcl in pop lret ret mov cmc add sbb dec jmp cmp into pop movsb pushf repz mov xchg daa adc lahf xchg fs lock out dec cmp negl into xor rcr sbb and scas push repz imul pop and xlat loop call je pop aaa fimul push add bound mov iret mov xor in cmpsb push aam shl (bad) sbb and ss pop insb cmp test ret sub mov ds mov lea xchg mov fistp (bad) out or mov mov xchg mov dec add push add or jae push sub dec sub jno xchg add jns out stos insl xchg (bad) mov or sbb pop testl dec das es int sbb rclb adc sub fimull dec je fnstcw (bad) jge pop je mov add sbb cmp loopne mov (bad) cmpsl in mov lods pop push sbb int3 mov fstpt cwtl or jg cmp fsts aas js jae ret out xor sbb popf cmc mov jge fisttp aam aad pop pop pop adc cmp pop inc movsl repz movsb lock mov stos mov popf cld cmp icebp adcl dec xor jae pop push sbb dec add sti jmp mov rolb sbb iret insl (bad) dec and out xchg ds pop lds mov (bad) in adc iret data16 push in inc mov addr16 scas push jns jnp adc sbb imull std jg jmp inc in in and add cmp popa mov jae push sti xchg add insb iret pusha jge sbb movsl stos mov cmp cmp mov pop pop dec (bad) in out imul cmp enter clc dec and inc add stc lret stc mov ret add and imul pop dec jp mov idivl stc js sbb repz lret pop (bad) mov dec mov (bad) add xor fs and sbb pop popa push cwtl dec fistp stc lea pushf pop pop add fwait pop inc dec les push jno xchg jmp xchg (bad) pop push lcall ret sbb rolb sbb jbe cmpsl inc mov jmp movsl mov push push xor pop add lea adc orl or clc popa lds cmpsl mov xlat lcall adcl add adc pop mov mov add pop mov push xor arpl cmc (bad) in call xchg dec in push test add fimull and add mov mov jb inc mov inc jns adc lret mov cld xlat push cmpsl mov adc mov xchg cmp adc lock push or jne,pt xchg pop (bad) lahf bnd scas dec (bad) or and (bad) mulb push roll mov pop xlat aaa lahf sub insl cmp shrl outsl inc push mov iret out push sub mov sub scas sub fisttp add push cli cmp pop es cmc shlb push hlt fisttpl fistl xor add push lahf psrad lret arpl add xor test add inc sbb cli dec mov call sbb jge mov (bad) frstor adc aas mov push int3 mov jmp ja dec pop inc in outsb movsb sbbl and sbb cld sbb (bad) iret daa and mov push mov cmpsb and mov pop or lcall jle inc cmp and pcmpgtd (bad) cmpsl xor sti bound in cmp add push add pop jo mov xchg rcrl adc xchg inc movsl (bad) mov sbb sub jmp lret les adc adc jns jecxz dec and mov push cmp fcoml xchg and xor mov bound scas jo xchg and mov lods fildll mov adc out mov (bad) hlt sbb cmpl mull jae gs cltd xchg sub movsl out sar push insl ret mov mov xchg xchg dec repnz pop inc test xchg (bad) scas xchg jmp cmp xor test sbb fwait jl mov xor call sub push stos inc jbe mov mov (bad) adc inc aam sahf in loope mov icebp int arpl xchg fcos rclb mov sbb ds mov dec (bad) mov pop in aam (bad) dec jnp inc rcr mov enter int fisub xor shlb cld das push lret dec adc pusha pop scas cmc mov aad dec enter jns stc adc test pop imul int fwait lcall rolb xor orl popf lahf (bad) inc push inc (bad) xor aad (bad) cs or arpl inc js imul push jae fnstcw fnstsw maxps xor dec mov mov mov dec leave push (bad) lret aaa sub pop ljmp nop jns clc mov xchg jb fdiv scas jle push mov jmp hlt mov loope xchg lds mov das fildl jb lods push jg stos pop sbb dec int3 mov pop std add xchg xchg xor fstpt movb push mov add mulb adc push cmp test mov mov mov fcomip mov or xchg clc push (bad) jae mov jne lret clc adc mov test mov es scas pop xor ds sub leave and dec ljmp lods fbstp daa shlb loope cmp cli or test push (bad) (bad) stos xor rcr cmp push arpl fdivr add rcl sbb mov push sub (bad) cmp sub or pop push mov sub in adc je fwait push and jbe jp into aaa jge cmp push dec mov scas push or pop insb or adc xchg outsb xor mov aad cmp jae lahf (bad) or loope and (bad) mov or or sti fimul rcrb shrl mov mov xchg mov jbe scas pop or pop mov push notl xchg int3 stos mov inc sar sbb sub repz sub cmpsl imul xor ret xchg data16 mov mov sub paddusw push dec movsl sbb xchg shrl mov sub (bad) iret into repz push lret addr16 or xchg sub fwait hlt or rcrb ror fldcw dec jns,pt addl shl and int3 insl jg sub adc add fs into xchg mov cs sub mov pop pop mov bound fs in pusha cmp xchg scas in out xchg xor in call xor cs lds lret xor lahf cmp mov adc cs daa out jmp mov push fs (bad) lock push and pop inc inc xchg mov adc and mov mov mov jae jbe out push call xchg push lret xor jne cs lock repz mov push sahf lea repnz push (bad) xor jle (bad) jecxz pop dec jg mov mov arpl mov adc or push mov xchg andl repnz dec dec sbb dec inc mov mov daa cld pop arpl insl lock cld inc xor mov mov or pop mov adc xor lock inc aas and inc mov jne addr16 sbb mov (bad) mov into in enter add or out out mov fimull xor std mull mov mov push push ror inc fcoms popf das mov sahf cwtl mov push push daa dec pop jge rcrb sub outsb ljmp stos cld jp int3 push aam pop mov in sbb lcall or push cmp push adc stos mov shrl jp sbb add jecxz lret nop adc daa cmp or xor cmc popa xchg inc popf push int (bad) je popa adc leave ja aaa add dec aad in push jb sti addb orl jmp sbb mov and aad fnstcw fisttpll mov lea pop push jae sbb push cmp (bad) hlt add mov (bad) xor xor xchg test int3 jo push mov cmc sub imul aas jge mov xchg ret ret cs call mov lret repz js xor mov ja cwtl lds xchg inc adc xorl movsb mov mov ljmp stc or jnp,pt cmp mov nop test out add jg push call int rolb jle lods jb push jnp add int repnz mov dec insb pop push in aad cmp pop sub xor pushf and out inc xor in dec lods loopne popf ficomp les mov inc mov movsb stos or jbe mov push cmp sbbl addr16 and stos mov mov stc pop pushf pop lret pop lds jge pop adc xchg pusha js dec jae add outsb cmp jmp mov push cli adc scas add jecxz popf jns test lods add mov stos jl popf xor xchg sbb fsincos push mov mov jl lods inc repz mov or enter sub or ret mov mov sbb loop or add adc xchg jl sbb inc imul fs jae stos clc lret sub cmc jns xlat in mov aad mov ja cmpsl subl js and aaa inc orb mov push add pop mov cmp into sub xchg fidivr (bad) and inc dec mov jp arpl inc pop jns test xchg xchg mov push movsl ret lcall in lahf scas in mov mov js sub dec add adc (bad) sti test leave hlt mov jle mov leave add insl push jecxz cmc div fisubrl inc stos je xchg repz mov adc pop adc dec pop ret pop rolb fimul push ljmp arpl mov arpl int mov jno adc sub xor aas imul sub call insl (bad) lahf or inc adc inc ss pop xchg sarb mov jno shll ret fwait jge mov jns int3 cmpsb mov adc dec stos inc arpl lcall add psubb fdivrs inc mov aad xchg mov mov (bad) ret fucomi pusha sub lahf cmp clc pusha mov loope inc sbb pushf sbb loop adc pop xor xor int3 sbb mov xlat mov daa fstp imul mov adc imul cs pushf inc jmp fsub inc mov mov mov xchg cmp mov out fdivrs sbb outsb fcomps xchg lcall add aam lea sti std icebp add and rcl mov dec pop mov cmp pusha sbb in out pop adcl add mov cmp adc movsl jbe lret jmp mov and fcoms add popa add leave repz dec push dec cmc cmp jns push sbb loopne stos imul imulb es push pop add (bad) out xchg (bad) shll popl shll ljmp jo sahf cmp jl gs adc sub xchg aas and push scas xor mov xor insl pop and (bad) mov jnp pop in das imul std aaa mov shll ds mov mov jne adc cmp das mov dec js sub push fcmovnb or imul jp push lret add (bad) ss sbb add and (bad) hlt add jp call and push pop dec mov test pop in jge imul fwait dec dec push fdivl popa outsl popa sbbb mov and (bad) or dec xor ds cld pop inc je repnz adcl xchg adc ror mov push cld push mov pop push and notl es mov aas mov mov mov fadds js xchg aam and mov jp outsl (bad) jecxz xor push adc mov loope adc jp or movsl xor add out in movsl and and (bad) mov adc or hlt dec fwait xchg orl lds xchg cmpsl jnp pushf dec mov jo dec mov (bad) je mov inc negb and nop loope pop or mov lods out inc stos inc dec imul sbb sub push outsb or imul (bad) data16 sahf mov dec or bound repnz pusha (bad) stos xchg mov mov xchg fisttpl inc test mov (bad) sti mov movsb addl adc jle test push xlat push rclb fnop pop jno cltd loop nop mulb outsl sahf mov (bad) mov xchg cmpsl sbb mov sbb fwait pusha push out pop mov or addr16 add sub (bad) sbb fild rcl movsb out lds lret rolb loopne or mov int3 jl mov pusha jns imul insl stos stos into inc repnz or bound in inc and std in sub ret int3 shrb iret aam push mov xor daa aas out (bad) dec mov jns jb xchg jne or mov std lret cwtl cmp fildl scas adc inc mov maskmovq notl jp sbb lret in dec into inc loope (bad) outsl mov push adc pop bound mov lds adc xchg jg mov mov xor outsl sub in out adc inc jge jne cli data16 fnop pop insl leave add cmp insl xchg enter xchg out or addr16 add outsb stos or add xor cltd rcl push int adc movsl adc fcmovu sbb jne out pop insl push mov mov lret repnz or mov fwait inc les test out xchg in outsb pop push test mulb adc sub imul test jle adc daa xchg (bad) pop adc sbbl and xchg sbb dec cmp push adc idivl iret popf mov enter or mov in jge sub inc lods xchg adc addr16 sub adc sti push add sub lods mov fistl aas into pop scas or pushf pop pop sbb cmp and cmp or push fldt push nop gs fs or pop dec adc movsb femms mov das jmp ljmp inc popa or inc sahf cltd and pop stos bound jnp es or mov add sarb cwtl in mov sbb sub out sbb jg pop rorl or mov push mov cmp out push (bad) loop cmp loop fcomi sbb push inc mov cld nop push js pop lret cmp sub or xchg lock insb insl loopne call icebp inc mov adc rorb daa cmpsb icebp jae mov icebp test and sub int3 mov repz inc xor sub xor test sbb ja out jno jo jns lcall add out jecxz pop dec sbb jge jge test mov xchg or mov mov aam outsb outsl iret fcmove hlt sub stos mov cld cmp jge and mov popf or test lcall mov cmpsb mov push or imul fisubrl sub push out cs addr16 push push ror xor push fldt mov hlt or dec ljmp jge (bad) or xchg dec push sbb sub mov sub (bad) xor jge adc adc cmp mov pop daa xchg jb sub (bad) xor adcb nop jge mov mov adc int3 clc cmp or cmp cmp sub xorl pop in das xor push jecxz jae iret popa add aad enter xlat cmpsb imul pop push mov cli cmpsb mov push std adcl je jmp movsb add out out cmpsb cwtl inc repz (bad) rcpps xchg fcoms movsl outsl std mov dec add fucomip add add mov call insb aad lea inc xor mov imul xor jecxz,pn jo inc das xchg mov push lret decb stos ffree lea jno flds faddp cmp mov dec mov scas add call dec pop icebp out lods popa pop ss (bad) fistpl jae dec sbb lods cmp xchg push ss es int dec (bad) enter inc xchg fisubrl mov sbbl dec loopne push cmc bound push loopne test sbb insb sub loop sub adc push mov add (bad) fildl lahf dec les push ret push mov xor sti mov andl mov sub lds je pusha into jle pop popa mov bound clc ret sub cs stc sub add popf stos sub xchg add sahf jp sub cmp test mov adc bound enter (bad) fnstcw bound out pop mov out push add or mov imul ret mov mov adc sub inc sub inc push lcall xor mov mov sbb inc lahf lahf repz sarb add int adc pop sbb rcrb pop lret or sub lahf popl xor push (bad) mov push stos in int sub jmp mov (bad) int inc (bad) xor jecxz popa pop pop std fisubl sub stos pop jno push xor xchg or pusha (bad) je xlat mov xor or es call push (bad) adc sub mov scas mov or (bad) mov inc adc mov leave mov test (bad) mov test add jnp dec popf jmp (bad) xor daa sub fimull mov lret jg jle (bad) jecxz mov (bad) subl imul addr16 popf push aaa notl outsb dec or daa fisttp lds ss xor mov xor add fistp jnp lods mov and in out mov xchg jb in mov cmp mov js sub iret repnz lret mov mov mov mov mov pop adc sahf mov lcall jecxz pop mov xchg dec xchg mov mov outsb cmpsl dec push push mov stos jo scas or mov in mov sti aad push jb fsubr in fldcw pop inc shrl pop jb (bad) pop xchg sbb nop imul into sbb addr16 dec cmp or (bad) outsb aad ds outsl cmp aas cld shll outsl fdivrl pop mov cmpsb es fmull jp fiadd xor insl sub outsl fdivrl stc sbb jecxz in pop adc ret pop adc out ljmp mov mov subb and int push mov dec xor in or mov inc hlt arpl lods ja cmp cmpsl into pop addb jp mov jns or cmp addl (bad) mov movsl pop mov xchg outsl lahf loopne ds pusha scas or push jmp cmp mov cli int pop xchg mov movsl push dec push inc push adc xor xchg sbbl scas scas xor in or pop push mov fisttpl sub push sub jns mov lods pushf add test push (bad) push movsl icebp daa (bad) or or (bad) mov mov sbb xor mov std clc test ss int3 jae adc lods decl cmp push add in insb inc push inc das adc mov (bad) iret and (bad) jbe out mov and xorb dec dec push or aam in add and jbe and xor call sti pop aaa push fnstenv imul push cmpsl lea lret sti add shrb insb xor xchg inc mov in push leave (bad) fwait mov dec sub push ja fmul sbb out adc xlat sbb punpckhdq ret adc cmpsb jge lahf xor out jge and es mov push scas adc sti jp pop sarb (bad) (bad) dec dec fs pop jnp lahf jmp cmp fcmovb dec jne in xchg pop add xchg and cmp ss sub sub stos add orb mov iret lahf in sub push xchg cltd and dec inc scas outsl sbb sub xor fs out xchg ficompl push (bad) jae fidiv mov sub push inc mov iret push jmp jp push push (bad) mov cmpsl push add cmp push pop xor rcrb addr16 push mov pushf ret adc inc add (bad) xor xor test lods mov mov fistp hlt push stc push sub xchg imul pop xchg lock mov cltd loope inc fcmovnb or mov imul repnz pop cmp hlt mov fnstcw dec sbb sub aad cld (bad) and std sub pop sbb sti jae lcall les lcall jb cs mov add xlat int3 leave fstpt mov popa inc mov xor fwait loope mov jl lfs push pushf mov je mov mov cmp out and ret imul and push sbb xchg mov aaa cmpsb sub jae cli sub adc clc mov mov out jg cmp (bad) mov (bad) push rol mov push mov cwtl mov orb repz mov mov rolb sarb (bad) dec or mov into test into mov (bad) add loop daa sub inc push jmp (bad) movsb xchg in mov movsl or inc lahf push adc sahf inc in in xor addr16 into adc test shl mov xchg inc rclb je mov dec mov bnd lret or or scas (bad) inc sub inc imul add cmpsl inc pop sbb aad sbb cld imul test iret cmpsl test sbb (bad) and inc ja xchg ficom clc lret dec js in mov add js (bad) mov add nop pop call sbb jb adc dec gs cmpsl push orb mov cmp or jl call repz push repnz jnp cmpsb pop push mov push out inc pop out cmpsb xchg pop aas push dec cli add in adc cmp sbb lods push mull popa rorb inc negl adc xor mov out int or sub aad jg ret scas out mov int3 add loope mov sbb or pop inc mov add cmp (bad) xor add int3 pop inc jo xchg (bad) jb pop inc xor inc mov push cmp insl or sub pop push cmp out sub lahf jle push ss mov repz mov mov jb decl in cld push dec movsl sub push (bad) jo jne pushf sar pop xor push (bad) push jbe lahf mov sbb cmp cmc ss add mov divb adc (bad) jl mov or and adc (bad) mov ffree fsubrs addr16 adc pcmpgtw lahf xorl ret mov loope pop and sub sbb mov jg fdivrs inc (bad) pop lock xor pop std cmp xor das in xorl (bad) hlt pop mov sti stos insb xchg stos nop fiadd and call cmp rorl mov push push cmc (bad) aam pushf in adc inc jns data16 xchg push adc sbb popf (bad) insb dec push dec (bad) pop cmp or lea mov xchg test bound or mov sbb pusha mov inc les cmc cs (bad) loope inc outsl arpl nop pop add xlat repz dec push out xchg and sarl sbb mov lock push sub pop rolb xor lock mov aaa xchg cs mov inc out xor add mov add cmp aad adc shrb test out lods (bad) faddp xor data16 es lds das cmp test pop pop dec pop movsb sbb data16 push enter jmp in sub in int3 pop fisubl test aam std pop sbb or mov mov mov jl sahf sub (bad) fs xchg push mov sub dec jb lods lahf push shll pop jne push pop and imul loop jle cwtl jo es arpl scas (bad) lds jo leave mov pop fs jecxz mov cltd lods call push push xchg sub (bad) repz inc int3 xorl aad mov jae movsb lret daa pop mov in aad mov bound cmp sub lret outsl add dec cmp mov jecxz sbb jl xchg outsb (bad) (bad) loop pop in cmp add pushf mov shll daa outsl pop mov adc lret (bad) sub push dec fnop in sahf dec cmc jae lods out pop adc stc jp cmc jne nop and jae xchg out sbb sub or cwtl or cwtl mov fstpt jmp mov jne (bad) loop popf cmp cmp into push sbb movsb into (bad) push cmp fstpl push mov dec fs mov stos pop mov out mov test and cmc jecxz (bad) dec fbstp outsb lahf jge fisub movsb movsl repz lock pop add enter xchg lcall pop subl jp daa inc mov pop push out outsl icebp push roll xchg test rcr mov or jmp int inc ss sbb cmp xor dec inc jp pop test mov stos sub test add adc cmpsb mov int3 es fisubl (bad) std sbb mov sub dec xchg mov ret insl dec icebp aad sti aad daa jb or aad add sbb cltd push addr16 jp jno add test mov and popa lods cmp jnp int3 mov push (bad) and mov inc mov cld mov ss arpl or jae das add in std dec loop jmp push ffree jne sbb repz mov imul pushf jecxz inc lods inc sub inc pop push adc jp shr call push fldt mov or (bad) sbb push mov inc mov lods cltd je lret call push imul jne cmc pop sbb scas fdivrl mov adc mov and jb and rolb xchg add (bad) pop xchg fcoms int jbe (bad) js dec xlat fidivl mov mov and pop jns (bad) loope adc cmp inc jnp lods push in xlat outsb jo push cmp scas xchg mov insb imul mov shrb mov add cmpsl sub stos loope cs fisttp lods out shr stos out add popf inc adc mov or sub repz or adc dec loope cmp cmp in lock fstp lcall pop pop scas mov xchg ss repz push xor rcr sahf int ret mov mov cmp in jl mov push mov mov and aaa inc pop in imul inc rcrl and scas mov xchg inc sbb inc pop test and shl rcll fsubrs loopne iret jae and pop push dec adc jmp push xlat sub xor mov push pop push fcmove xor es cmp push or and mov push cmp cmp pop dec in (bad) mov inc fildl add mov fisttpll push sbb dec mov sarl xor dec dec shrl dec mov pop imul js movsb lock inc mov mov dec clc cli lea imul sbb cmpsb lea sbb jbe sbb mov es jno pop cs and mov pop or call inc xchg sbb mov (bad) mov lcall outsb pop mov imul sbb dec fidiv mov or xchg cli and out cmc jnp xchg cmc dec stos add push xchg andl mov mov xlat add inc mov (bad) or mov push jge in push int3 xchg push jo jmp mov das xchg push mov orl punpckhdq jmp pop xchg lea lret mov pop or xor lret lret xor mov mov into sub int add xlat cmp add sti pop adc popa decl sub sbb adcl pop pusha add (bad) loope and xchg mov mov pushf in mov xor stos shrb (bad) xor dec dec into (bad) in lahf and jnp jge mov pop hlt movsl pop outsb ds xor (bad) aad scas negb add jbe mov sbb shl lods es jne rorb and mov push in cld pop sub sar insl (bad) pushf mov je or dec std lods pushf ss push xorl xor cmc push jl push adc adc negl push (bad) xor pop dec je jne leave enter add ds mov xchg dec or daa mov in push jbe or repz xchg ret mov xchg push sahf mov pop jle rcr push pop cmp (bad) jbe xchg pop lcall stc and lds rcl les push push pop add push (bad) pop adc hlt inc call mov dec mov addr16 dec aas addr16 frstor and mov test jp repz sub add cwtl xchg pop mov (bad) lock or cli (bad) jle ljmp or mov in int3 sahf or jnp xchg int3 enter ja mov (bad) aas and or lahf pop xchg sbb icebp ret enter adc pusha jo cmp repz add xchg cmc dec add inc jo push daa xchg andl jae cli dec pusha push adc add push xchg add adc aaa push adc out dec or inc sub imul pop sub orb cli push fstps sbb lcall jl mov inc movsl ret loopne dec dec fidivrl push inc mov outsb (bad) mov pushf out xor addl (bad) sahf es xchg sbb add inc aam lds xchg stos sub cmc lea lea jle nop and jl out jecxz stos scas repnz xchg fwait shrl in loope cmp loopne add mov shrb js push adc aas mov dec pusha dec fstpt (bad) adc xor daa or sbb bound arpl cmp pop mov sub cmc dec xchg pop dec popf jmp outsb lods mov pop inc cmpsb jb inc ljmp or mov and lcall out ficomp or (bad) decl stos sahf add mov inc push bound mov (bad) mov lcall push push xor (bad) pop outsb je fs ret lea push into jae out adc (bad) fisubr inc sti and lds add xchg or dec cmp hlt lock call inc add out dec popf out and clc loopne decl sub xchg sahf add push jle cmp rorl xchg subb adc adc adc cwtl fwait or pop scas push ljmp dec mov mov mov jns push cmpsb inc in negl mov int3 fdivrl daa andps cmp xor and mov cmp sub test cmp mov es or out repz mov popa or arpl ja (bad) pop lret pop and adc cmp mov jb lcall int xor cld ds jmp add push mov scas loop and (bad) dec imul sub mov test loopne push (bad) or mov sub mov js cs ds jge cmp loopne sub jge cld push cmp adc aaa in ret pop into sub dec lods ret loope dec lret aas push xor out cmpsb jns or test cmp out sbb (bad) jp cmc or cmpsl inc (bad) out aad pop inc add push xchg and popa xchg inc mov cmp push sub mov pop sbb add cmp lock sub jg stos adc in mov mov pop cmp cmp xchg pop dec iret jecxz in subl mov (bad) pop das sbb or mov sbb cmp cmpsb cmp daa xor mov add and sbb cltd imul push add fidiv sarl call je jmp cmp adc repz sti repz sbb pop in inc imul xchg xor mov stos xchg out fcoml mov adc mov or stos stos in fiadd lods mov mov cmovnp add xchg mov xchg dec cmp iret movsl in jne jecxz mov adc push sub xchg dec daa int3 push push shlb js daa adc cmp dec pop out xchg and or int push loopne xor push xchg adc and cs sbb popa add dec (bad) adc std es insb jb adc xchg inc imul decb call test lea leave nop aaa mov movsb or fbstp cld push dec cmp call leave in negl and sbb add in jmp push sub lods push sbbl scas pop push lea dec jae mov sbb fwait xchg xor stos dec (bad) lahf push push addr16 outsb xchg insl daa xchg test inc xchg adc sub loopne pop dec in fcmovu xor lods cmpsb push sub jns negb sti add pop xchg (bad) (bad) dec adc iret mov aaa (bad) incl sbb mov aad outsl enter or adcl iret mov xchg xor ret push push (bad) sarb jne xchg lods sub pop push adc pop pop or push sbb xor and sub rorb push daa sbb xor aam lods cmp jmp mov or pop jp (bad) loope lock ficomp aas pop push leave mov xchg mov dec enter aad sarb mov and pop adc mov dec jb mov lret sub xchg mov sub cmc movsb mov mov and cmp jo mov lcall js add repnz (bad) pop fwait jne xchg js push or mov out push mov (bad) mov jle jg,pn imul sbb mov in or mov in call push lds mov scas js test mov fdivr dec xor dec xor mov (bad) jb mov gs orl fucomp push mov cmc addr16 fistp int3 jp loope repz int3 stc push add pop popa or testl sbb cmp fimull lods mov inc inc sbb imul add mov mov movsl test jae jp add inc in xor scas push aaa (bad) repnz mov fiadd pusha lret mov sti lahf dec test xchg rcl cmp pop ss dec mov in adc je add mov fistl mov outsl hlt mov add loopne sbb adc les mov int (bad) mov add (bad) mov insb (bad) into sbb stc adc jg mov cltd inc dec cmp dec gs jbe xchg aam dec xor push ljmp mov aam mov push mov jp push mov add std jecxz dec and sbb mov (bad) jbe je xchg xchg jbe mov (bad) icebp int std lahf das xchg push repnz addr16 fwait arpl adc decl std push sbb loope or fmull sbb in mov jns xchg leave gs out je scas sbb test (bad) jb std push das pusha call mov mov int jbe jle jge cmp push bound das inc cs mov pop mov imul fdivs fistl sar in push mov frstor dec sub frstor stos mov jno gs push adc mov xchg rcl shlb mov test mov lods cli mov xor sub xchg ljmp push mov insl add mov out int pop cmp dec lcall lods cmp cld rorl mov mov inc fstpl xor ja pop add (bad) mov adc sub lret and pop out mov lods std insb xor fistp push jl add push xchg jg bound and mov push outsl fnstenv pushf std pop dec sarb sbb adc push jne mov dec aam dec jg jmp mov ret out in fsubrl jmp xchg cltd jno cmpsl push js mov push or ret insl ss jbe ret je out jmp jbe int3 stc xor roll nop pop inc lea fcomps or or ret mov mov loop lea stos fabs inc mov bound xchg xchg outsl mov test pop push mov out (bad) mov and mov pop dec push loope xor jno pushf test push cli sahf outsl rol repnz test inc mov inc loopne xchg stos xor aas push jge arpl mov dec xor or out push hlt in popl adc xor icebp (bad) jns pop test adc push js sbb or rcl outsb cwtl fs rorl (bad) sbb mov or jle les (bad) cld mov jmp mov mov cld test mov fist in (bad) aas jae lea mov (bad) pop mov cltd imul mov leave cmp mov fbld pushf pop std ret dec iret fcomi mov add arpl aad inc mov cltd out lds je test (bad) data16 (bad) out xlat mov and sbb hlt sbb push test dec jno test sub pushl fwait loope rclb xchg push cmpsb iret fdivr sbb mov jnp sbb das xchg dec jns inc shl sub fs arpl fs or rorl je insl mov das lahf adc mov sbb jl ds and push push dec inc mov xor daa insb mov andb xor adc pop imul gs push fisubr xchg insb adc in push sqrtps mov add mov mov repz xchg lods cmpsb dec xor xor movsl push hlt loop addl fnstsw movb sub jecxz into xor cmp xchg jp xor hlt inc and mov mov (bad) pusha sub jbe or push rcrb xor adc outsb pop mov jp out cmp mov fdivr lock and mov stos lods adc mov sbb xchg fldl pop push std jbe and stos (bad) cmp inc jae shr clc js xchg adc mov loopne push push scas cld push hlt lds xor std ds jge mov test cmpsb leave xor jo icebp les addr16 adc push push sbb andl mov jne repnz fcomip icebp mov pop popf ljmp cwtl inc ja add mov sub (bad) (bad) xchg addb add mov push push jle jnp jg dec sarl dec sbb sahf out mov popf test jl sub data16 xchg cmp and and mov movsl dec xchg add mov push pop adc sbb and jle mov push xchg insl in sub xchg inc inc sbb test cmp mov mov rcr dec sub imul or mov pusha mov dec jb shll insl nopl jo adc mov jl xchg xchg pop or xor cli dec loope jno cmc (bad) sti mov stos sbb flds dec xor cmpsb add mov clc push enter jns xor mov pop push pop cmc cmc cli (bad) ficoml xor pop xchg push lcall and lock mov das jle push (bad) xlat xchg jge bnd push nop ljmp call xchg and and inc hlt outsb inc enter cmp inc inc call push mov rolb xor sbb leave das inc ja cmc leave (bad) iret push mov push mov adc mov xlat xlat enter arpl and add pop add aam es in rcrb adcl mov add mov lahf and lahf xor stc dec adc into and jnp inc les mov jns cmp dec mov inc (bad) test cmp shrb mov sub cmp dec jne or fsubl push add adc sbb cmc mov jecxz,pn sti hlt push fisubl stc in (bad) push aad adc loop cmp icebp push mov sti push xchg inc in dec cwtl sub jp adc icebp int or stos sbb add idiv jo popa cmp pop fcmovb stos jne aas sahf mov ror or xchg leave scas loope push jecxz nop jl mov and sbb xchg sub out lds xchg mov cs mov mov test js add outsb sahf (bad) imul pushl cmpsl add add stos sub insb adc loopne repz (bad) pop cld mov xor pop sbb push and mov das movsl aaa or mov and xchg in pushf scas clc icebp mov stos inc xchg mov jl cmp pushf icebp in int3 gs add inc mov xor or mov dec jnp adc mov mov adc scas shrb lret dec add pop outsl aaa popf mov push je cpuid pop dec inc xchg pop sets popa cltd lret xchg in outsb add data16 xchg (bad) mov addr16 ss ss cmpsb and or or xchg push pop push xchg fs shll inc add fisttpll repz enter repz pushf lret push push movsl mov xchg fdivp inc dec inc adc inc leave or xor adc mov jecxz xchg jecxz xchg bnd mov push and cmp dec sarl ret das cld cltd loopne ret xlat xchg mov and inc mov ss pushf (bad) in sub fsubl fistpll cli movsb or and mov xor or movsl sar int push mov pop pop es mov ss cmp push insb jge jb cmc dec into stc sub stos in xchg fist xor loop lcall lret mov inc push mov inc test cmp sbb xor inc add and pop lock xchg mov fbld out sbb push cwtl dec mov addr16 data16 lods jnp daa mov mov cld (bad) rcrl loopne addr16 aaa in xchg test repnz lret mov mov cli pop fs lods outsl inc in inc les adc cmp push scas sbb mov lds xor in daa aas or add add loop mov sub pop in not mov mov adc mov imul cmp cli movsb popa jne rorb scas sar test pop mov dec (bad) and insl dec adc dec adc es or pusha add adc mov or or add xchg scas adc hlt xlat or xchg jmp bound (bad) jecxz or fmuls adc lcall or rclb js fs xchg sub in sub add xor fstpl (bad) sbb repnz arpl pop push push leave pushf pop shrb mov movb and lcall (bad) repz out cmp jno sbb inc cwtl inc jb ret data16 add cwtl mov inc out or stc lds std sbb out mov sub rcrl push and or push lock fwait imul xchg add xor lret js jle inc mov ss call mov fsubl adc sbb lret int int cwtl mov sub lret lcall leave mov orl sbb lret mov and push ljmp sub shll push stos sti int3 sub fwait xor xor test push outsb fsts xor dec aam pushf outsl iret mov cld movsb imul aaa enter push add movsl pop popa (bad) cmp pop mov mov ficoml mov int push fnstcw and adc cmp repnz ljmp xorb jl and popa adc cmpsb movsl mov add scas sbb dec das sar into repz pop mov pop popf mov test xchg push ja sub shrb arpl outsl pop pusha cltd insb cmp add arpl insl xor pushf fidiv fs (bad) or fcoml sbb pop (bad) addr16 cmp out cmp cltd inc lahf pop jl roll fmull xchg dec outsb mov movsl sbb cs psubw repnz jmp push and jo addb adc xchg xor mov mov xchg pusha mov or and in mov dec mov popf jg push xchg negb adc out testb lds jnp sub pop pop push in mov out icebp (bad) leave xchg lcall (bad) fild and and cmpsl cmp lock jecxz popa lea add aaa cwtl xor or pop (bad) lock push pop frstor adc push in ss stos arpl adc popf prefetch or lods (bad) enter lea scas subl out cmc push (bad) push enter arpl and int3 test fbld into adc jecxz jo mov stos out cmp lods shl mov pop out and jecxz xchg inc fwait xor test fs iret mov call gs jns insl rorb out add (bad) (bad) not pop outsl jo push inc addr16 cli add lcall cmp jp cmpsb test jg push mov nop sbb out cwtl (bad) xor js adc or and xor inc fnstenv test aaa enter out lret hlt add mov shlb dec jno test add icebp or cmp faddl cmpsb int cmp fisub sbb ret (bad) or shrl (bad) mov ficoml jno sbb push dec rorl jns push out in mov sbb cs mov imul mov push adc pop jae push mov and xor cmp mov mov fsubl pop push xchg mov jg jb cltd add clc jo cmp cs push push std cmc (bad) dec fdivrs mov hlt (bad) dec xchg fsubl (bad) sbb xchg and in or jne (bad) adc lcall pusha jo inc and fsts jne aam add out xchg loopne hlt xor and adc mov push data16 test sub cmp stc xchg pushl pop add imul lret add xchg test sub mov (bad) hlt movsb fldpi push (bad) in ja sbb xchg sub js rcll stc mov pop aaa dec xor xchg aaa ret and les fsts imul and sti fdivrs les sub pop xchg into addr16 mov xchg pop (bad) mov and lret or sarl mov std xor decb fistl add ja std xor mov xchg leave movsl nop pop inc dec pop mov or sbb in lea push cmovns push xor mov popa xchg pushf enter push lret movsl xchg adc jnp test cmp lahf (bad) lock fst mov jp pop jb pop addr16 enter adc sbb es leave fstl aam popa sub or sbb mov xlat sub mov hlt inc mov pop push lret mov mov jb mov loope,pn jne les pop imul xlat mov inc ficom scas xor adc inc js inc in pop test mov adc imul nop jns sbb loope pop mov cmp imul cmp hlt gs dec sub push adc mov sbb (bad) dec jae imull aas mov or adc cmp adc or mov cmp or iret mov jb pmaddwd lea or loop jae aad leave push and je xor jmp mov clc bswap adc mov cmp test stos add mov mov rolb add aas fidivrl push mov fs out add xor je push in (bad) jecxz fcompl insb jecxz jns or dec shrb jo jb mov mov imul in mov jnp push xor xchg mov fnop mov mov xchg decl sbb loope aad clc adc leave mov dec les pusha sub (bad) jbe pop lds mov repnz pop call jae loopne and (bad) hlt cli pop aas scas lds jae out sub int ja add lods dec xor mov and out sub test inc push or sbb fildll loope mov sbb sbb and inc mov xchg mov dec loop in pop popf (bad) dec xchg aad and test lcall test push lret or aaa mov std in dec rorb jns mov stos jb pop jns mov mov xchg ret lock outsb enter inc stc or push mov cmp inc xchg push add lds hlt sub push push sub enter stos pop aam jge pop mov (bad) push add test bndstx dec adc fstpl add iret mov (bad) mov loop outsl mov sti inc xchg jae shrl add xchg popa inc aaa dec cmc mov sub insb cmp stos call clc out mov fdivl xchg icebp in ljmp sub (bad) addr16 pop sarb int fsubrs dec adc fist lock movsl test adc xchg sbb sarb hlt movsl sbb add rorl adc ds sbb sub push jmp lods movsl sbb arpl outsl dec pop (bad) pop inc int3 mov fpatan movsb mov and loop push enter sti adc outsl stos (bad) cwtl faddl dec add (bad) scas outsw mov loop pop outsl je mov pusha mov ljmp (bad) cmp push xrelease push aad mov cwtl dec test out inc mov dec mov pop push mov movsb inc sub ss cmp es dec mov imul iret push dec repnz jno xorl jp jo mov pop call repnz mov inc mov mov add sub or inc rolb jmp repz inc cld sbb int3 mov mov icebp jb (bad) jne js xchg push and pop and movsb in pusha pop test sahf aam mov in mov mov mov inc and fs adc mov jo lret adc inc lret push in repz jne push pop and loop sbb push mov addr16 and outsb ss xor add push fdivrl shrl aas push mov cwtl mov xchg imul or push push jp mov push and jnp mov lret fiadd and je mov and jb lret or jp (bad) sbb rcrb cmp mov mov jmp lcall cmp or inc add inc (bad) xchg fisubr idivb sbb xchg mov xchg add outsl dec push rcll adc sub jns cmp pop xor faddl stos dec sahf xor in mov mov inc adcb mov loop dec aaa inc jns dec or mov dec push or mov cmp jno push xor outsb movsb in pop add je add in mov dec dec daa jl mov out add xor pop dec sti fstpt pop inc jg in (bad) popa lret inc jae pop aam sbb mov cwtl dec xchg in cmc call in fiadd dec push cmp sbb mov cli movsl pop leave cld cld fs xor clc enter push jbe outsb xor push enter sbb cli xor or dec pop movsb pushf outsb push dec push mov dec jno call movsl (bad) pop shrl mov inc enter jno int3 pop inc fwait icebp and jno pop mov pop push fwait lds bound fstpt mov sbb xor test data16 mov clc andb std dec pop rolb sbb out lcall js dec jb pusha adc shrl mov movsb in aas mov imul mov lcall cmpsl sbb fmuls xchg out sub push pop push mov (bad) mov sub pushf or imul roll mov fs cmpsb and or mov sar ds add movsl mov mov mull dec push adc ja cs and and pop cmc adc cmp repnz mov jmp nop and push bnd std inc push dec lahf sub int3 jae lahf xchg clc mov call dec adcb movsl (bad) cmpsb mov cwtl pop xor mov pop xchg iret clc mov std stc addr16 scas xchg idivb ja sbb fisub push adc clc sbb xchg pop sub ljmp lock nop wrmsr cmp xor inc cs xchg cmp loop pushf mov mov inc sub outsl dec pop jo push idivl ljmp shrd out add sub mov xor mov loopne and xor cltd popf sub xor pop scas ficomp ja icebp shrb rol lahf sub cwtl outsb pushf push mov jmp lcall adc and hlt icebp mov mov add aad dec outsb in in mov int push push xchg pop test roll nop ja fsubrl out mov mov inc mov rclb xor ljmp mov dec loopne or lock in cld cmc cmp les je push sarl mov leave mov jns sbb in gs jge push mov mov lea test pushf dec popa xchg stos out in push and mov je xchg mov xchg or mov jae icebp adc testb xchg add lock or mov mov cmp mov cmc add mov cli inc dec (bad) xor sub int3 mov dec in aas es pop test mov or jbe push pop ffreep jg rclb out mov aad jo mov inc inc es movsb mov jmp xchg aad popa mov or (bad) mov fidivr add es psubb pop lods or rcll mov pop jg dec (bad) dec out gs dec das cmpl sub (bad) ficompl jmp out std in push icebp add dec jae outsb das ret and in jno xor loope jnp xor push mov in pop cmpsl idivl and pop and dec imulb cmpsl jge inc popa cmpsl addr16 sbb lahf stos push jecxz sbb cmp dec into lds dec sarb fwait (bad) icebp adc test ror mov fs dec les pop fdivr cwtl (bad) jg fiadd adc in shl mov inc pusha in jnp adc lods mov sbb imul pop divb push mov pop mov aad icebp add je loop xchg notb test loope in rorl call pop repnz adc and repnz je xor popa mov movsb aas adc or mov daa les or (bad) push imul cmpsw jl (bad) push stos fdivr cmp in adc cs mov jns (bad) adc xor mov mov add out popa cmc cmp pop mov bound mov popf in fdivl xchg mov fstpl mov aad mov or mov jecxz outsl xor and ret (bad) lods cmc mov lret pusha js cs lods out and das add pop cmp sahf cwtl lea jne jmp jne and in mov xchg das jae lret cld lods outsb mov push mov adc (bad) out or pop lahf dec pushf jmp xor (bad) sbb mov push dec jne ss out inc mov or scas fistl sub cmp idivl mov cmp inc inc aam inc jge pusha pop inc ret cwtl cltd mov xor insb xchg add popa mov daa xchg js push lods sub out imul dec fnstenv ficoml adc mov inc arpl call push lea push xchg cs add cwtl data16 jno cmpsb push sub ja outsl fsubs lret aaa enter sbb pop loope xor fcmove fcomps or or mov pop mov xor push les add mov scas inc mov loop dec ss movb jg sub mov leave add jp or xor not jnp mov xchg jbe jmp adc fldenv mov mov arpl lods (bad) and aaa mov push test cld ret fmull pushf or sub out cmpsl push mov push or sub xchg mov cs jl dec lods ror cmp sub pop mov or arpl pop push arpl mov vpavgb and stos cmp pop xor or mov inc (bad) mov lods in pop jl adc shll in nop mov fucomp mov push xor inc or cmp inc cli ret xor jne fnop and outsl test mov xor pop pop out iret mov and pop shrb push push mov push add and ds aam stos pop add add lea and cli fwait dec xchg or lods or mov pushf lds add pusha push dec push and (bad) in insb (bad) push and lea ss xlat jnp or pop sbb mov iret pushf push int3 xchg cmpsb dec in cs pop sub data16 mov das cld xor pop mov (bad) mov ret push sbb cltd mov fnsave xor fdivl push test iret pop inc ljmp (bad) xor and jbe inc jecxz cmpsb sub adc dec enter lret movsb mov jp mov sahf int3 int mov mov mov fsubr push push iret jge mov scas mov cwtl fcoml popa push jl pop cmp imul fucomi cld jecxz mov mov push push lods mov adc pop orl int3 add xor fcmovb or movsb mov icebp subl xor jl sbb popf sbb sub pushf sbb (bad) mov fdivrs shr mov adc in lds repz es aas lods cmc movsl ds fs add in pop out stos sub mov sub out dec rclb test mov xor lock in sub sarb dec inc push enter xlat jle pop pushl mov jae lret sub es add mov inc jmp xchg loop shrl loope sti push movsl or and mov xchg add pop (bad) cltd lret das cmp loopne scas pusha int3 arpl scas mov push xchg push repz xor pop in aas mov fcmovu pop shlb add push lods sub mov scas cmp jl fwait rcl adc pop lcall stc inc xchg jbe testl sub idivl jp mov dec cmc jle faddp fisubl and sbb mov repnz sbb cmp ljmp hlt in push (bad) push pop push mov xor in imul push xchg jmp cmp outsl aas lret lock imul push addr16 roll dec pop jae adc nop pop movsb ret leave jb lahf xor fisubr shr stos xor cmp sbb sbb jo jne xlat push adc dec adc jl lret or or dec adc adcl rclb or xchg (bad) icebp mov push xor cmp jl outsb hlt stos andl or sbb enter lahf pushl sub stc lret inc fbld lock push mov out push (bad) pop out lahf std dec enter wbinvd je mov jmp dec xchg jle lret daa xchg test mov mov mov cs in mov pop ret mov mov lds add mov mov mov pop loop or test jne adc sub mul cmp repnz mov test add iret cmp push jb gs inc cltd pop mov cmc in test arpl push sarb sahf mov dec lock int addl cmp jmp dec call xchg or mov pusha pushf add inc jp stc (bad) popa loope lret jmp bound xchg pop movsl sar fimul sub icebp mov scas lret push lahf push sub mov stos movsb out cmp and inc imul jne (bad) mov mov iret push outsb and hlt aas cwtl div add adc clc lock jg lds and dec sbb cmp popa jp push aam lcall sbbl jns movsb (bad) xchg jbe sub pop fild sub cmp or repz mov test shrl jne or pop bswap jmp and cwtl leave pop fs scas xor pop cmc inc cmpsl mov ja,pt dec sub dec inc mov or movsb clc test pop sahf dec inc mov or add inc fsubrl or mov jnp cltd popf and cld je repnz or out and scas psrlw (bad) (bad) sti and leave pop pop movsl hlt rorl (bad) push xor pop adc pop getsec inc push sub cmp jp or mov sbb jp popa cmp sarl jb scas jle sbb jns popa cli arpl gs popf mov jg scas or test and dec lcall mov addb add pop mov leave das arpl xchg lret or inc push inc inc cmp push outsb jo pop cmc jno addr16 ss inc jmp mov mov (bad) cmp cli out push mov mov mov pop push and dec stc lahf mov in mov jb inc outsb xor xor pop xchg mov (bad) dec jnp insb out pop xchg or cmpsb rcrb fidivl cmp xchg add into ss fstl push (bad) out jmp je dec mov lds imul leave xor dec shrb ret (bad) fildl jl,pn movsl pop pushf lret mov mov push lret sbb jp sbb mov inc sub or and mov scas fisubr test cmpl idivb xor imul mov shrb jge fs daa or mov cmpsb bound xorl dec aam adc cmp mov aaa pop (bad) sub push xchg aas out fsubrp pop sbb arpl add fcoml push xchg (bad) jno outsl sahf insb xchg push mov add loop imul out jp repnz aad dec mov out aad jbe xchg push add fdivs popf scas xchg insb mull cmpsb les gs or mov xchg sbb lods pushf mov fldt dec popf leave push mov jb jmp sbb inc in (bad) jp lcall and sti cmpsb xchg gs mov push (bad) ja,pt loope fiadd pop rorl mov js movb adc or lret ds test popa cmp (bad) lcall enter pop out fnsave lret mov les mov xchg pmaxsw addr16 fmull clc jno pushf divb cmp imul add orl clc cmpsb hlt xchg or xor aam ljmp ret xlat pop in jg jl sub inc jne inc jl mov jns pop pushf mov js rcll push jecxz arpl add xchg jnp enter jle xor aaa or stos adc or jp (bad) mov push jg stc jge mov dec in mov mov pop decb mov mov js jp es stos mov pop pop js push repnz jno loopne icebp inc jbe lret inc or and js xchg jle adc rclb addr16 fs add mov out xchg (bad) dec stc sub mov sub scas cmpsb (bad) dec mov inc push popa pop push adc inc xchg pop stos (bad) mov cmp insl or dec pop imul and mov repz adc sbb scas int pusha add ja test jne scas into outsl push jo shrl lea stos mov push das add pop push inc mov popa sti mov dec cmp mov add mov pop jae push out and (bad) into daa (bad) aam lret rclb mov inc int xchg mov outsl inc fisubr rorl jo into xchg mov mov adc xchg cs insl inc loopne test std or aad fsub (bad) fcompl jns mov imul inc xor jae add lods pop arpl rorb into stc repnz mov dec mov jo mov sti js dec orl jge cmp mov or data16 mov add add or adc xchg fprem push fisttpll (bad) jb xchg lods pop xchg jae loope adc inc mov jb es movsb in adc (bad) xlat cmp clc jl sbb xchg mov mov call insl ret lods aas pop fs in sti pushf rcrb mov daa (bad) fadd pop push sti dec push inc jo pop out inc (bad) mov inc mov mov or ss pop mov lcall inc sbb fdivr (bad) push jae fcmovnu dec dec dec and add jns mov addr16 repz cltd enter or movsl scas int pop (bad) out pop cmc enter loop pop xor fisttp stc scas jnp fmul xchg xor ds pusha mov mov push jb ret stc fxch stc sub push scas mov (bad) push cmpsl jg aaa push sahf pop iret addr16 es cmp std xor push mov push mov mov pop movl stc sahf or sbb jg jmp or inc (bad) stc rorl and dec ret sti xchg cmc sahf ds stos xchg imul pop lahf push outsl jno push jns cmc push test lahf (bad) and or js sahf dec into enter stos fcmovu dec (bad) (bad) roll fsub fmuls aaa stos ficoml lods dec popf push mov ret (bad) adc jmp inc mov hlt inc inc lods ja push cmp jle insb xor cmp add (bad) aas je enter xchg push mov inc sub (bad) and jo mov test das sub sbb push sbb in pop sub cmpsl mov in (bad) aad pushf sbb fisttpl push or rorl push xor dec ss in jne push mov mov sbb cmp add arpl in mov int3 nop adc jo dec cmp and mov repnz mov and daa jl mov (bad) push sti push scas adc or ja xchg mov mov sbb int in scas lock inc push mov pop mov xchg pop mov or dec pop mov ret jg jecxz sub jbe pop out in add pop sub pop scas movsb sti out es dec scas out mov lods rclb pop cmp dec mov jg inc xor push inc xor sysenter aam push imul pop loope out (bad) cwtl sbb sbb cli mov push jle pop push add sbb cmp xor cwtl fstl cmp add hlt outsb sbb xor (bad) insb jbe inc sub lock pushl enter lea addr16 mov in push xor cwtl jbe dec outsb mov fcmovnbe add aam insl insb xchg dec (bad) xchg (bad) aam mov imul mov jmp pop ljmp enter pop jne and mov rclb and adc in fnsave nop icebp mov xchg and cmpsl pop and jmp push test pop bound in out leave xchg jmp sbb or mov xlat dec ja enter lds lea adc out lcall cs or repnz enter test push loop negb xor jae cmp call lea cs ss add push fstps cld mov icebp and (bad) pusha or ret dec adc mov push call imul pop repz testb (bad) xchg loopne in xchg or insl inc leave sti int3 outsl dec aaa je push mov xchg scas (bad) stc mov movsl imul (bad) jl fistpl xchg aam sahf aas leave cmpsb (bad) add fstpt sub push sahf (bad) nop iret dec in mov aad movsl sti rorl scas inc mov jl popf push pop lcall mov aam in mov push into aad inc push loop sbb std inc adc int inc push push push imul pop cmp cmp lds cmpsl mov cmp insb jg dec imul lret pusha mov sbbl sbb outsb adc cvttps2pi ja outsl adc pop stos push mov dec mov sub stc sbb adc mov outsl adc fmull pop dec cmpsl inc jge push rolb adc das lcall jle cltd xchg sub fmulp jb sbb rorb ret int3 sub pop sbb sti cmp fprem1 sti adc sbb mov lahf xor add or fdivrl bound cmp or pop sub sbb pop fistpl hlt arpl or aad imul sbb adc dec clc out adc idivb cltd sub xchg pusha jge inc and sub mov xlat mov mov dec jp rcrb sub or inc sbb cs sahf ror mov insb or fwait ret cld lods mov pop loope jbe cmpsb movsl iret mov in pop popf jl sub sub mov fcmovnb frstor lods cltd (bad) aad push adc xor sbbl loop sub sub jo mov push dec push test test jle xchg lahf push daa jns pushf test pop inc jno pcmpeqb cmp mov dec ret imul popa xchg pop and jb daa aam sbb add movsb xor or repz pop cltd push je inc aas mov iret xchg cmp sti loop es pop in lock das insb add or fs sub sbb stos sti es pop adc test jne repz jne repz lea mov jnp mov cmp inc jge insb push int sub insl add pushf mov jb cmp repnz xor mov pop jmp mov push loope,pn pop xor (bad) add push and xchg mov orl ret outsb addr16 add cltd outsb jmp lods xchg mov fwait mov jecxz pop test stos out xor xchg arpl popf (bad) mov pushf adc xchg lea adc sub mov sbb xor jbe xor or jb fldl fldcw mov mov cltd leave sahf add push or cmp pop mov pop jecxz sbb aad jmp push les test loope ret pop push mov mov and fiadd or mov mov data16 push adc xchg fadd cmp push jl xor xlat int3 pop (bad) je push aad inc inc repnz xor xlat and add sub (bad) pop mov add dec cmp jbe xchg leave cltd fwait mov xlat add or jbe jne xchg or mov mov cmpl clc mov ss inc repz pushf gs mov inc int loop inc rolb and mov cwtl dec mov mov unpckhps sbb adc jp mov in jno lcall mov cltd mov lahf push bound call add inc lret push dec shrb mov add dec lret mov and mov sbb cmp scas jbe cwtl xchg ljmp out fidivr fwait movsl pop sbb cmp fsts sbb sub les mov ret pop xchg xchg pop movsl mov into mov orl lret ret inc dec inc test sbb add jge imul inc aas (bad) in leave movsl jns jbe adc push into popf mov push scas fcmovne mov cmp nop push mov xlat and mov jl jne and arpl lret outsb sub sbb inc add jno push sbbl mov dec push sbb jne cmp push fs scas cmpsb pop (bad) and jp pop test loop bound mov rcrl ss lahf sti scas stos in (bad) and push xor xor jl xchg bound cmp call sbb stos mov push mov jbe jl movsl xor xlat mov xchg test repnz lcall pop jo jge in and mov cvtpd2dq fistpl xchg jg bound fwait cmp and bound test push lock inc imulb push sbb mov inc shlb leave add cmc jns into sbb sbb popf pop pop pusha push cltd cmpsl arpl sub mov (bad) (bad) cld in ljmp jg data16 clc ret stos mov cmp sub push movsb inc push bound out (bad) hlt mov pop add jns imul notb lock inc clc xor shrl mov icebp dec insb xor test pushf mov sti dec pushf inc cmp arpl cmpsl push scas mov fmul out enter nop mov pop pop and test pop and (bad) cmp fs mov pop arpl sbb lret push dec and imul cltd idivl bound test jo adc pop pop aad mov fs rcll imul call adcl mov jae cmp fs jmp inc sub push lcall in stc cwtl or test mov inc faddp sub push mov mov stos or push dec inc sbb outsb pushf dec jle jnp adc or or rolb rcrb (bad) aaa decb data16 sti pop adc andl cvtpi2ps out push rcrb jb jne xchg push ficoml xchg xchg xlat pop dec and lret add xchg dec dec es dec fisubr xor mov inc nop mov test adc pop jp sbb sub xor xor push sub mov push (bad) push cmp dec dec ds dec adc sbb adc in sub lea inc xor inc int3 aas (bad) xor add lahf pop scas popf add inc lret jne xchg leave inc add push insb cmp mov dec insl jg pop push es rorl mov add insl push pusha and jno inc ss addr16 and jmp xor jo std sub mov xchg mov inc pop jl jecxz rclb xchg ja inc mov xor mov aaa movsl inc sub add lcall mov adc dec pop push mov lea jae push imul lods sbb cmpsb jbe push push mov js out call push xor in sbb rorb stc mov js stos js lock pop leave pusha jmp inc fnstsw lahf or (bad) (bad) xor pop dec or and imull mov sti jno mov sbb add jbe sub add sub ficomp pushf pop lret ja cmp add stos dec divb adc jl gs sbbb scas pop sub sbb sub adc mov insb es data16 scas aad aam or push dec push pop sbb daa cli dec (bad) cld adc xchg mov inc pop shrb mov lock or mov pusha int3 cld inc test bound insl jmp pushf js push jb add pop xor push fdivs mov cmp mov test or js mov out (bad) mov je rcrb jmp neg push cmpsl sbbl pop outsl fldt cli jnp pop mov inc or push mov in sar jo sub ja add nop into adc lahf sbb dec rorl mov cs aam mov or inc leave addr16 mov and es cmpsb add pop xchg xchg movsl cmc repz sub imul mov (bad) lock addb and jecxz lret enter xchg dec xchg fildl add mov dec mov mov or popf ljmp xchg js or or mov xchg jecxz lcall repz bound lea mov stos addr16 sub hlt js lock lea mov push nop xor cmp leave cld pop das (bad) xor sub (bad) jmp inc xchg lea dec fmul enter xchg jge push push addl cs jnp dec xchg (bad) idivb mov pop ror dec sbb sbbb in add rcll add into inc jg lods fcmovne movsl hlt xor add mov jmp std jbe ljmp inc ds sbb sbb movsb test out fisttpl mov sbb jle fs scas fs and pushf ror pop mov cmp jmp stc iret xor nop xchg mov inc addl sub rorl test or sbb mov cmpsb data16 cli lea mov cmc adc mov jmp ja xor or in pop xchg loopne fadds fwait stc inc sub adc lods popl dec adc adc sub xchg test out pop sbb push jne enter sub mov and fucomi xor adc dec pop into jl mov adc sti popf xor pop mov and mov inc or lcall add xchg pushf mov inc aam sbbl mov adc imul out pop insl jecxz fidivrl xchg rol outsl cmp je pop and mov adc jno sub or mov call push mov push add xchg xchg jecxz inc dec push inc and pop std sub lods and cmp daa inc rorl jl dec lods les frstor cmp repz mov inc cwtl or inc popa lds xchg fistpll or lea pop inc and xor mov ds sub mov inc aad dec in mov (bad) (bad) outsl repnz mov cmc mov sub inc lock ud2 popa mov dec jne push outsb jg xor test mov (bad) xor iret inc sbb scas cmp inc cmp lcall mov loop in mov (bad) xor push std push mov mov mov cli jecxz fcomps mov pushf and rclb das daa dec movhps inc (bad) and sarl fidivl xchg out pusha loope stos jno arpl out add mov lods sub xor mov sub gs imul in and push and (bad) js or jns jbe fsts pop jns hlt les adc imulb xchg das inc mov xchg adcl std pop sub ljmp aam cltd fldz jp or sbb sub mov ljmp sbb xchg xchg pop cli cwtl ret jmp push pop in add and arpl push or and sbb dec js (bad) pop mov in xor xchg sbb push cmp je (bad) ja pushf inc or pop inc idivb popf mov cltd es jnp pop fst and int pop cmp sub pop bound cmp cwtl ret adc or and mov iret popa sbb dec paddb ja sbb push adc add lret popf cmpsl in sbb fidivr jne scas lds sbb loope in mov and and hlt jb les and jbe push adc call insl pop and hlt mov inc pop xchg jmp je pushf mov inc push shrl ss mov rolb sbb addl int sbb mov cmp (bad) repz gs les jecxz jle fnstcw lods mov div xchg ret mov pop adc inc iret mov fdivrs pop jbe dec mov pop ret cltd arpl aam mov add into das fisttpll scas test shrl inc insb outsl hlt les adc sub sub hlt aaa add shlb in sbb mov push js sub jle lret inc mov pop sub out scas stos lea popf inc xchg and pop cmpsb or inc hlt les and aad jle cmp clc add inc sbb jl jge cmpsb pushf mov lods loopne (bad) rcrl in ja pusha mov pop fisubl in pop pop es or mov fldl mov popf call inc add sub and js or and dec push sbb dec sub fmull cmp adc dec insb xchg add push jo sbb ja outsb decb ja adc int andl das into ljmp fbld jno (bad) (bad) dec jb cmp (bad) ret ret xorb fldcw push out sub lcallw add mov call test out sub cmp pop push outsl nop add pop pop sbb mov in mov inc (bad) mov dec imul pop popa pop pop loop xchg repnz cltd mov mov lahf mov inc (bad) inc (bad) cld jl fild ds mov mov inc push mov inc lcall mov nop arpl inc mov mov xchg or repz sbb bound out or sbb xchg insb add outsl mov inc add mov out outsb jb add (bad) stos jb add call dec dec loop in xor mov in stos popa (bad) dec mov ds ljmp mov (bad) flds pop aaa out cmp clc jl inc movsl sub lret sahf mov rorl stos mov adc jge out xchg push xor fisubr sar inc (bad) cwtl test add je inc stos cmp mov orb xor adc adc iret xchg jge and test xchg mov dec test push ret mov or ljmp xchg push dec and xchg adc aad cmp leave mov inc mov (bad) lret mov adc mov pop cmp push fbstp bound dec daa es adc int3 dec roll mov xchg arpl sub iret dec addr16 lods inc movsb in lcall or push mov sub test leave (bad) movb in add scas and mov ret mov mov xchg gs or sbb or test sbb and leave js or xlat cld sarb inc dec rclb and inc jo sub pop push aam add aas aaa lods dec xor mov mov inc sti mov or out dec in cmp lcall pop aaa cmp or add mov cltd stos cmp mov scas (bad) pop ss pop cltd fisttp fdivrs mov push ds jl jge scas adc inc dec jb fsubl test jo repnz lea cmp test dec cltd xchg push aam inc sbb jecxz out (bad) notl rcl push inc sub cwtl in lahf fwait (bad) dec sbb push loop push lods jge cmp and jl push ss lods sahf pop mov lods xor (bad) repz cs lods mov jns lret push xchg repnz negb dec movsb cmp jno mov jl inc ficompl cmp les lcall xor push mulb push (bad) ja cmpsl popf pushf jne inc daa cmpsl sarb mov stos (bad) int3 out mov scas test jmp enter dec jnp mov add (bad) scas push imul roll push (bad) movsl dec pop lret mov ds jbe icebp pusha (bad) movsl jnp (bad) cmp lret notl adc mov dec in dec insb jae fwait and fldl in je xchg push push cmc xchg push subb hlt lods cmp rorb fistpl leave ret xor ja mov nop daa jecxz push sbb popa lods icebp inc data16 sub xchg push enter mov iret lea rcrl test pop sbb ret sbb (bad) repz push push cmp pop cmpsb test lea sub outsl dec in pop and outsb pop jb jg lock cmp pop int jecxz xor cltd fistpll dec mov lahf test inc test push cmp xor das jne mov addb cltd add sub mov cli sub aas mov adc xor mov add pop mov add inc sbb cmc lret outsb scas and lock mov es xchg movsb cmp mov outsl cmc xchg mov cmp lcall and push push mov fldenv push imul add xchg cmp dec xchg jno das mov xchg lret into add out adc jle pop subl repnz mov call enter cmp mov or fdivr (bad) enter outsl push data16 mov insb jmp cwtl add jp add fnop cmp pop xchg sbb test icebp push add adc sbb insb imul ljmp inc mov ret and push or call pop (bad) sahf dec roll jnp sbb mov sub xor and and cltd and pop xchg outsb loopne in jns out fnsave bound pop jne xor leave jl jbe add push xor dec clc jb and lahf in rorl fs adc pop cmp ret orb mov or int3 sbb push ljmp add test in ljmp mov (bad) jb mov ja mov jp add xor rol mov sub sbb je mov mov sbb popa pushf inc and ret add xchg jmp ret lahf into frstor and sub ret mov xor sbb cli and pop mov mov call in out test jbe mov outsb pop adc sub mov cmp stos ja sbb push cltd rorb mov daa sub cmp xchg in cmpsl popa mov mov xchg in hlt repnz and testb popf jno (bad) out nop icebp mov adc xchg mov leave push fnop dec add rol mov xor daa fs in (bad) push outsl mov aaa and repnz mov roll adc ds jo cmc imul insb testb sbb inc cli lods ficom sub dec insb dec idiv jne sbb popl aam jecxz xchg (bad) stc insb dec imul scas dec dec mov adc daa sub push aad inc rcll mov les pop cmp jl ret xchg hlt cmp xchg or stos adc jnp fcompl (bad) mov mov and movsb or add aam daa add add adc lahf icebp jne dec jl test cmp sub jnp jmp mov and rep jg pop mov add cmpsb sbb jl leave lock addr16 cmp imul repz xor arpl (bad) sti fwait ja push sbb int3 in ljmp cmp push jbe inc mov adc add cmc loope pop pop xchg mov jbe lds pusha or dec inc inc out adc (bad) sub inc ret test lret mov pop mov pop sbb aas mov inc xchg aam leave cmp xor push dec mov or pusha and jae mov mov out daa sbb and and dec test inc dec pop inc pusha xchg js cmp jae das es push inc xor aad fild (bad) xchg mov loopne in xchg ret sbb mov addr16 jle out push in lret jns rcrl fnop test fwait add addb clc mov mov int3 jb sarl sub popf in jl dec jne lock mov ljmp lods mov sbb js stos xchg add lret cmp (bad) int cmpsl xlat gs lds lcall scas in add lret and outsl sub lea rclb data16 imulb mov or repnz jmp add pop test pusha xchg jns sub ljmp cmpsb jecxz cmpsb mov xchg adc mov inc sub out mov push repnz hlt cmp xchg push cmp push pop or pop enter (bad) mov call add sub test inc std sub orl push stc cld push mov test adc xor les xchg fdivp jbe xor mov mov fs aas pop jo cli adc dec mov mov jl push and clc out inc jge ficompl mov shrb or stc mov push (bad) (bad) int fdivrs scas xor jmp mov out push cs dec stos and cltd test mov lahf xor dec arpl aam (bad) repz aas add (bad) popa fdiv jle fiaddl cmpsb pop jae movsl xlat jne push dec dec lret and fsubrl fbstp jle or (bad) leave clc outsl cmp mov mov inc cmpsb fwait xchg dec inc jo stc fsubrl loop out lcall xchg adc and in call adc sahf adc out sbb lods test push mov ficompl mov push inc adcl pop ficompl dec adc xor sub lahf gs fstpl xor stos jb insb xor popa cli mov xor sbbb xchg dec (bad) mov sbb inc fbld add cwtl cmp sub aas es test bound in (bad) test dec cmpsl lock xor cwtl ret pop int3 (bad) test xchg push mov jle push call cmp pop dec sbb iret xchg mov jae je mul jbe and pop sub lahf dec xor xor xor add mov lods (bad) mov (bad) mov dec (bad) pop xchg leave adc xchg push std push jl nop cli arpl xchg lods psubusb pop shrb lea adc pop in cmpsl xor rol and jo pusha push sub or out push (bad) movsl div test add push aad scas popf insl faddp cmp mov sarb lock ficomp enter sbb mov sbb das adc mov incb scas fstpl inc jae mov xor in out push pop enter cmpsl sti cmp dec jns popf lahf add push push xlat (bad) adc rcl jp or lcall push inc std mov inc loope sbb sbbl inc sub leave or icebp out inc dec xadd insl push xlat jp out rcr or xchg inc (bad) mov adc sub bound das dec (bad) pop cmpsb ljmp or shl dec fisttpll scas fcoml (bad) mov cmp inc mov bswap jge sti mov add les mov jbe lods xor clc dec push repz lock xchg dec cli (bad) outsl lret sbb pop call push addr16 aas mov mov xor out push sub cli jp mov and lock and int3 (bad) jp pop rclb jns ror fidivl pushf lea dec or mov repz xchg leave mov xor (bad) mov pop cmp mov inc stos sbb repz jne movsb fiadd xchg add xchg notb out xor sbb pop cmp cmpsl jle cmovle ds shl int mov adc cli cmp daa mov inc cmp mov push jmp unpcklps cmpsl test cwtl xor les sub xchg sub test test dec pusha scas in cltd mov clc mov lea cmpsl popa (bad) adc repnz call xchg aam pop xor sbb xor (bad) int3 mov cld jp arpl mov xchg ds sbb in js push fisub mov out xchg add xlat xor xor (bad) in iret test imulb shrl lds mov int xchg sub into xchg sbb dec loope lcall imul mov call cmp and out fmulp test jecxz (bad) (bad) mov adc cmp (bad) in jecxz inc xchg fcoml sbb xrelease out mov sbb das ds lret cli mov std (bad) sub push xor (bad) les xor popa out jnp,pn or sub (bad) cltd rcl lretw shrb mov mov sbb mov mov cld repz fdivp xor and pop or xor int3 lods fisttpl xchg mov mov lock xor jo mov rcll sbbl mov adc retw mov xchg cs data16 rcrb push cs jle fcoms cwtl mov mov pop rclb cmpsl or mov pushf sub repz outsl xor rcrb cmpsb jo push insl mov rol aaa cmp mov stos lcall lcall cli add scas jnp and mov jb mov inc lahf sbb imul ffree mov xchg out xchg lock mov xchg leave and or (bad) sahf xchg std lret sbb inc imul pop push push loop test mov (bad) xor pop test dec pop lods cmp dec push sub test clc rol repnz push fistpl xchg push jns mov xor mov fwait push xor sub loopne dec out xor (bad) mov push xchg jbe (bad) pop sub dec mov lret shll jne mov loope fdivrs out leave add add out push jge ja rolb rorb (bad) adc cwtl dec (bad) mull sub neg pop dec xor dec mov jb jno pop jne lret push push lock sub xor adc push mov (bad) mov loope std leave cwtl ret int mov pop arpl std leave outsb iret pop push cmpb dec push mov xchg jg in das cs out or and push pop iret sub inc loopne push inc lcall cmp movsb dec (bad) stos icebp xor sub mov lods pop into lods cmp mov cmp xor aaa adc stos jae push fcmovnbe je push add push push mov (bad) lock out es add (bad) jo sub lret or shrb jmp (bad) leave inc mov push leave adc dec mov leave test popf imul lea jnp push inc call ret jo dec push xchg pop sbb shll movsb (bad) cmc lret sbb mov ljmp jo sarb aad push cli sub out and dec sbb pop nop pop into outsb jb in dec out inc addr16 frstor addl sub ljmp and mov notb and sbbl loopne nop or mov jmp repz insb push adc repnz inc and inc iret cmpsl mov add lea das rcll repnz dec mov cltd (bad) and fldenv xor xor scas leave or jmp sbb cld xchg jnp push dec push and movsl mov sbb and sti inc aam adc inc dec scas mov fs roll dec mov out adc push xchg inc push adc inc scas mov scas add ljmp mov shll out lods dec sbb push jp test cmc pop mov sti sbb and jns mov mov inc xchg xlat adc add xor cmp test loop nop scas push es cmpsl out dec xor in push in push sbb inc outsl stos ret insb icebp nop xchg (bad) sub mov add and arpl (bad) xchg leave shrd lods push mov (bad) xor mov mov test sub test and inc mov xor push stc arpl out or mov test sub cmp notl gs adc xchg fxch daa aaa enter mov lret cli int call imul out sbb inc aad pop push jbe sbb xchg jns dec push mov cmp pop dec rol add sahf lea out mov xchg add into mov or jae cmp push (bad) in pop shl mov pop pusha enter pop cmp nop fcoml sbb loop in mov gs pusha xchg repnz mov cmp repz movsb lods push mov mov and int3 out mov pop lcall fnop sub ja mov and dec fcoml sub mov push sub aad push sbb xchg mov orl notl inc sub mov cmp add js leave mov testb jne (bad) in push arpl mov outsb cmp push jno lahf inc inc sub and inc aas repnz push insl mov or pop icebp dec mov mov je ja add mov ficoml jp and dec mov push dec mov and mov adc fldenv loopne (bad) (bad) or (bad) (bad) stc and outsl repz push and and stos aam rcll pop dec fstl mov mov lds es mov xor inc pop ffree (bad) (bad) xlat mov into or push xchg sbb jo lret mov and lahf add push inc pop stos roll inc daa hlt jae pop fstp test push or push push adc jmp mov mov (bad) outsb dec jns jbe fstpt test rcrl push inc pop out (bad) gs lcall insl adc mov xchg in jno mov xchg sti icebp adc mov insl fdivrs int3 aaa mov bound ljmp rorl sub sub mov push cwtl rorl (bad) jbe into int inc outsb or pop adc inc mov pushf mov jmp add or mov or fdivr push aaa xor push dec fidivr xchg inc mov (bad) fidivl mov xchg inc mov push dec pop push movsb mov pop in clc inc mov les add sub or push pop popf mov frstor xor dec mov mov mov aas aaa inc pop inc sbb loope das stos call ss dec lahf dec cmp or push jbe jb and in inc sbb pop push mov repnz test sub cmp gs cld fmull sub dec inc addr16 lock add push repnz jne xchg into out mov xchg in lods repnz adc pop adc pop mov fiaddl lahf sbb cmp aam mov out jle adc ljmp fdivr or loop fcompl lret add and sbb idivl xchg mov cmpsb aad test mov repnz imul (bad) jne adc aaa les je mov sbb neg imul test andl inc sub mov out jge push test mov adc and pop insl xor add jb mov (bad) nop rorl ljmp les sti cld cltd cmpsl cmc imul sbb test push in or loop in addr16 mov rorl dec stos push jno xor (bad) popf jno and cmp into fmuls frstor test int3 mov or and sahf aaa jnp pop cmp push enter test mov jmp mov ret push pop adc les jmp (bad) add cmp test mov call sbb je (bad) hlt pop pop cmp arpl pop xor lret imul sarb daa dec out jge mov or mov jmp fistpll lods jbe ficoml scas jne negl push pop or cmpb cld mov (bad) push ror test insl xchg mov inc jbe sub test mov loop (bad) (bad) lods mov in fcoms xchg loop push cwtl pop xchg pop mov sub jb (bad) mov dec push (bad) arpl mov pop ja out mov arpl in pop or insl jg push bound pop xor xchg ret sub ss dec mov ljmp mov mov push push fsubrl sub stos cmp adc imul test fmull add add jbe mov or sbb push xchg pcmpeqw insb frstor adc inc mov mov or pusha fdivr add orps popa push push popa (bad) out leave (bad) mov pop cltd pop (bad) cltd out int3 mov movb cmp gs pop cmp nop/reserved sub cmp dec popf lods cmp xor mov mov jbe hlt add xchg jmp mov push dec bound xor adcb jmp mov adc cwtl or cmp xchg int3 mov out ret out sbb hlt out adcb and adc insb pop jbe or scas in fisubr insl xchg ljmp push mov aas mov dec xchg sbb das out std pushf je cmc push (bad) dec stos lahf xor adc lds inc xchg inc push or sti jp insl mov sub inc (bad) in mov mov (bad) sub add inc inc push push xchg inc mov lahf xchg inc rorb push xchg sbb jmp out imul add imul fwait cmp cmp sub jns push fistpll leave lock xchg stos mov imul jecxz inc mov nop rcrb jno mov test (bad) push aad jns in js pop test xchg jg insl icebp sub pop sbb leave inc inc jbe dec ret es daa fisttp pop ss jbe dec popw inc call mov and negb mov mov test mov mov pop sub test pop or mov mov and pop loop ja sbb lahf fwait das iret push not add adc ljmp in addr16 inc inc cmp (bad) call push push jbe mov imul negb repnz (bad) nop add out xchg mov cmp mov sub dec or mov pop mov jmp adc sub add inc cltd dec xchg jle push (bad) sarl mov pop add jne add cmp inc mov scas outsl or imulb js movl mov cli pusha leave cmp aaa ret cmp jo test faddp into jle arpl sbb es fisttpll jmp sbbb rol push js push sahf mov sub dec stos inc xor pushf mov clc lds xchg and and fcompl jnp mov cmpsb mov mov inc mov std inc mov lods fs repz repz inc and pop aad mov imul arpl cmc add (bad) mov ja mov mov ret shrb lock (bad) cli cwtl or xchg or out fbld pop sub outsb adc xlat (bad) (bad) dec dec in aad movsl push ds leave fiadd stc lods xor inc xchg dec out inc push ret clc xchg pop int test je mov sahf sahf mov mov jg scas fld xchg test ficoml adc jg pop rcll pop mov dec enter inc (bad) mov loope in dec jge xchg stc xor nop pop jmp inc mov xor and pop xchg dec mov jns fdivl fs cmp in jge jnp push js sub push sub pop repnz sbb jne pop jno stos repz movsb and add scas inc and mov push sub mov std mov aam push repnz xchg jno rorb stc cwtl fs adc adc incb inc test push out or sub in sbb in and push ja fadd loope cld lock mov jbe push jle cltd add sub inc or call inc sahf ja in mov sub les xor mov test pop pop cmp les cmp cmp xlat mov dec sbb test (bad) out les arpl jne,pn call iret (bad) cmp test scas pop jecxz sbb (bad) fldcw mov es sub imul sar mov lods or xchg inc sar js mov jle or movsb movsb fwait outsb inc mov mov xchg (bad) popa inc mov push jle push fldenv jmp sbb repnz cmpsb je int mov push mov jl test sub pop pop scas or xchg aad movsl mov sahf cmp xchg adc std negl pop aad sub insl dec fstpl sub das fwait and xchg test push fdivr fmul cltd fldl imul pop aad pop or sub pop or not mov cmpsb imul (bad) xor cmc std xchg xor inc fild inc pop outsl lret movsb lds leave add inc inc lods cmp sbb pop mov jns mov lds push ja icebp add dec in fdivrl and ljmp lcall lahf into mov sub xchg xchg insl push pop inc mov fidivr add dec in pop daa mov mov add fstpl jne scas jecxz pop jle jle lock test pop leave (bad) pop or mov and fs adc mov dec pop popa out sar adc test jns scas xchg push sub pop or (bad) mov inc mov mov insb mov or loope push sub sti call cld or or mov imul push das out or aam mov idivl and dec sbb lret inc lods fmul sahf jbe (bad) or iret imul mov (bad) adc call mov sub movsl (bad) push lahf xchg mov mov cmp dec pop jg push decb dec pop add sub imull sbb (bad) mov insb mov dec add push jmp pop int dec inc nop out adc stc xor stos jp jo test lret daa or orl push and lcall add cmpb pop fwait insl cmp insl ja sub imul pop leave (bad) in xchg add add mov lock add dec add je (bad) into sbb ss lahf mov mov fadds pop dec test mov inc jo inc es ljmp pop or sahf jp into enter pop cmc bts inc mov jg xlat icebp (bad) sbb mov and xchg or push inc or aas out sahf fwait ret in mov mov stc stos imul test movsl pop mov (bad) mov sbb pop pop rcr jmp movsl xor dec repnz add shll jl inc clc repnz add sub aaa out and cmp sbb cld scas adc push std fnop nop jnp jg jae lock out test mov icebp cmpb pop jmp enter xor imul lahf dec add daa movsb bound (bad) xchg movsb (bad) mov (bad) and jg fiadd dec icebp and push pop dec or mov adc les mov negb inc jmp (bad) ss sbb addr16 arpl outsl arpl lock mov adc mov xchg jg xchg ja jae insw cld xchg (bad) jle lods jge or arpl push shrl sbb add repz mov mov bound add ficompl movsl cmpsl and and adc fsubrl adc popa or (bad) push cwtl add mov adc ficoml repz or xlat dec fnstcw adc stc je mov (bad) icebp scas ljmp or imul adc fbld push sbb push inc or leave out mov and mov jmp inc call mov lods das (bad) or test push add stc dec pop xor stos sub movsl ficomp xchg add lret shrb push rcrb jge cmp pop lcall (bad) add ss loopne (bad) fcompl mov xorl fdivrl and add adc sti add (bad) lock pusha enter movsl mov iret mov (bad) test xchg xchg jg xchg bnd in call pop lods lock dec dec movsb leave xchg cs in pop sbbl out mov pushf shrl ret imul ss push mov xchg roll sbb dec cwtl inc popf dec xchg dec addl pop outsl cld loop push mov shll or mov and fsqrt xor and inc lahf imul cmp pop scas jnp ss pop adc ret out scas outsb insl jecxz cwtl pop sub imul push in mov cmpsl pop or je (bad) call mov inc jl,pt test cs fbld inc in (bad) stos mov ficompl out mov loope dec (bad) push pushf outsl out popa inc pusha xlat sub lock loop pop adc inc loope ljmp mov or nopl inc dec adc aad outsb or and adc out jae mov push jno dec popa jg enter adc fs loop adc mov (bad) add xor and lea xchg fisttp or fiaddl sahf outsl loop test mov mov hlt pop pusha jecxz or mov push cs xchg and jle loope or jne add pushf pushl lret pop mov sub pusha jp movsl (bad) cmc ficompl stc into sbb mov cmp mov bound sub cmp fcoms imul and mov mov inc out bound repz repnz daa mov outsl ret push rcr and idiv jl lock imul and cmp les and mov popa mov mov jmp inc cwtl cltd xor mov popf aad (bad) nop pop insb mov inc loopne stc cmpsb es rolb out or lea js es mov adc dec fimull outsb jecxz cmp fadds pop loopne cwtl fimull test cmp jae,pn jge js dec into mov cmp and jno dec pop pop je test hlt movsl dec push call lcall xor enter (bad) iret jno aam or xor push aad push dec add test (bad) mov pop rcrl pop dec pop int3 movsl mov and push and pop stc out mov repnz pushl lods jbe inc cmp int in jecxz mov inc (bad) movb stc das jbe cld out adc inc push push icebp cmpsl push jg les xchg jg sub lods fdivrl mov pop test movsl inc xor mov bound aas pop jge ja imul xor pop dec (bad) mov dec fcomps cmp mov int leave dec mov sbb repz push or movl push sub (bad) add adc pop sbb or or cmpsl dec add lods sbb mov sub fidivr xor jnp mov add dec imul bound fstps iret pop icebp lea mov mov xchg adcb lret je sub or mov fldt jae sub mov add dec lret mov sbb test fidiv mov push mov int3 sub fisub lds jne dec mov add mov dec mov xor test into inc sbb leave mulb lret inc mov rclb ja mov rorb fisubl push das pop push fildll test mov add je and xchg (bad) mov push push adc dec fs xchg inc cmp lock and scas push mov xchg punpcklwd xchg cwtl inc mov adc into imul pop mov f2xm1 push ja fstl int3 inc bnd inc divb leave lea xchg std adc fimul in lret push xchg and jno and sub sti jne adc lret and out xchg out jbe xchg fcompl sub popa scas pop cmp movsb sbb add sub adcb daa ja rclb dec orb push or je pop xchg mov cmp mov push sub mov out inc dec dec jp lcall jmp dec pop mov (bad) sub push pushf inc (bad) push lcall and cwtl and mov cltd mov lret cs fucomp xor into and dec or xchg and out push xor jno es sub sti (bad) and popf imul and sbb dec xchg sub ret sub push jmp pop adc xor jecxz mov mov outsl jle jle arpl mov gs out cld addr16 xlat push subl mov lock pop xchg shrb lret dec pop iret xchg test aaa push cmc add adc ds ja nop out fcomps jae addl jge mov and aam mov fcoms hlt dec jle fmuls cld (bad) dec mov pop cld (bad) pop pop aad in xchg pop jno sbb dec xlat xchg add dec xchg mov clc loopne int3 mov lcall (bad) icebp pop pop mov imul dec (bad) and xor sahf stos and push fcmovu inc arpl cmpsb fild mov andl popf out rep jmp sbb les adc (bad) decb xchg add jecxz fldl mov xchg sysret push xchg in mov shlb sub in imul xor dec out (bad) lock xchg and iret fiaddl ss mov xchg (bad) or push insl sahf mov popa xchg mov pop hlt xchg (bad) jno shrb mov adc xor stos mov repnz or mov sbb mov test mov sbb test aam dec in (bad) cld lods adc mov insl je push jae jno cmp xchg stos popf call (bad) hlt dec sub ret stc movsl push in and jl jae test adc add leave cld (bad) sbb addr16 fsubp xchg mov add movsl out push sbb sbb andl mov dec xor test sub in fnstsw faddl enter mov dec inc popf sbb sahf fs cmp and sub (bad) jb mov sbb mov jmp or dec mov repz popf jns fldl hlt xchg popa (bad) int pop sub mov nop out fs mov test jns jmp sub fdivrs mov jbe outsl mov sbb (bad) xor xor (bad) decb outsb adcl add (bad) dec push add cmp daa lods ljmp sbb int mov cs imul dec test cmp mov push mov mov fs mov stos inc mov iret addr16 insl lea inc xchg out sbb cmp lret pop in xchg cwtl xchg lds loopne test xor je or addr16 cld xchg xlat adc and add sbb add push adc dec cld add (bad) fs fimull mov fidivrl je (bad) imul xlat int3 imul xor pop rorb (bad) adc lods (bad) jae xor mov mov iret xchg sub mov jnp hlt icebp push cmp cmp mov adc stos iret bound xorl outsl js hlt imul pop adc ficompl in xlat mov sub cmp add add mov dec hlt adc leave fdivrl out adc cmpsl dec push or pop jle push push jp mov jnp adc lea in icebp ds js mov mov or daa xor imul cltd adc fucomip sub add push (bad) lods (bad) pusha sub in sbb mov pop mov cmpsb sbb sub xchg rorl divb aad jns pop divb loopne decl jge aaa sbb mov cld xchg jmp fs into pop xchg and (bad) push and loop test add dec push mov fisubl cld ss add or and xor xchg lds push xchg adc jne inc adc popa jo and push dec js and xor or lods and sbbb inc xlat or cmp clc mov shr adc ret int nop nop or out fcomip insb sub and or xchg (bad) mov add outsb (bad) push jo pop call insl and popf xor fldt push dec aaa pop and pop frstor lret sahf jge out adc popf or mov sub dec sahf push (bad) push mov push std jmp inc cmc pop imul (bad) add pop (bad) or faddl ret xor fcomi push xchg test jns mov xchg xlat pop xor loope andl (bad) icebp iret sbb mov jne jg ja mov sbb scas jmp addl in sub or mov xlat xor ds mov cmpsl inc ror test and addr16 push movsl bound jae fisub xchg loope in outsb add and mov outsb ds int3 jnp push mov imul add inc push je jo icebp dec mov in ffree dec leave jecxz int jb cli dec sub xchg mov jge mov ds push orl xchg insl or inc mov rorb loope add xor sbb fcmovnu push push lcall cld jmp mov cmpsl add jle ret cmp jmp dec xchg xchg stc push in iret icebp (bad) (bad) cmc or shrb in arpl test mov mov lahf sub xchg (bad) pop cmp mov mov pusha mov sbb loope movsl xchg or jnp cmpsb cmc insb ja (bad) (bad) popf adc xchg lea movsb cmp mul mov mov jl mov out insl dec je idivb subl fwait lret cmp sti mov add inc pop sub sub outsl sub mov mov adc mov push rorl fdivrs pop push (bad) divb xchg das pop pop mov pop fistp jae or fisttpl idivl mov inc aaa mov rorl xor fnstcw cmpsb movsb out cmc insb dec and inc xchg pop xchg push aad lcall fldcw stos out mov dec scas push iret cltd dec jnp inc lds dec (bad) sbb (bad) ds fild xor inc mov (bad) mov je xor (bad) xchg mov mov rcr adc and add jnp daa inc aaa mov les (bad) pop cmp xor int3 xchg sub jo push pop or mov mov mov movaps imulb jb push jo lock repnz mov add xchg sbb fnstsw test test mov mov cwtl repnz pop cltd adc xor or hlt adc cmp rorb pop inc fcos (bad) jae rcrl add and and pusha mov sub cmp push cmpsl xorl cmpsl jecxz aam scas int cmp int add mov jg jecxz das loopne scas sub ja cmp xchg xchg int3 movsl mov faddl aam xchg mov pop inc hlt fnstsw xor inc push es leave addl sub rclb cmc mov lods sub lret adc sbb xor mov add lahf insb cmp lods sub scas lock pop xor or cmp adc add add push sub insl jl (bad) js jae (bad) pop mov and jmp insb push outsl mov insb xchg or lret or aas xchg sbb (bad) xchg pop (bad) cld ljmp mov mov lret ds std ret jmp fistl imul ret (bad) inc scas jae int3 test dec nop xchg mov fdivl fisubrl je sbb dec cs leave push sub push cmc add xorl cmc cmp mov (bad) mov ss aas jbe,pn fnsave std scas popa out xchg adc pop inc lret test daa cli cmc mov adc or js inc mov jmp rorb push (bad) in in scas or push ljmp pop pop stc ret in and mov pop fs sbb sub sti rcrl (bad) lahf or or pushf sbb nop lahf jne popl xor pushf adc (bad) std repnz das mov adc daa mul into xchg out and xor rep fbstp jl sub cltd aam jno in pop (bad) push aam mov (bad) xor js dec fistl mov ss aad dec popa aas inc dec push mov inc lds jae in mov stc push imul or (bad) ficoml fnstsw xchg xchg movsl xor clc js xchg xor or dec fcmove lds mov fisttp cmp xchg dec fwait and push (bad) frstor adc and mov sbb xchg push add cmpsb or xor xor in fwait movl or and ja pop (bad) mov lret push iret mov ret lods or dec scas shr add test pop lcall (bad) rcrl fmull pop jg mov adc cmp (bad) xchg ds mov mov fildl mov repz lea jge sub mov std ljmp jae test test icebp add repnz mov ja add (bad) loop push mov (bad) cmc mov inc stos loopne int3 cmp push rorl lret cmpsb loopne adc push add sub fnstenv pusha jge outsb xchg out add stos mov int xchg popf adc lods cmp mov xchg fs or roll mov jge mov pop adc sahf stos mov js ret push mov fistpll (bad) movsb sar insb (bad) jmp hlt ljmp mov or sbb xlat leave dec mov into (bad) aad hlt ja push aam out pop outsb les lea repz (bad) into pop loop (bad) cmp lds mov rcll adc test stos shrl es or mov mov dec jne gs adc enter push js hlt push mov pop js push dec and adc cld loopne lahf int into dec insb inc sub xchg lahf aas xchg in sub xlat jne push ljmp (bad) sub adc mov sbb or or idiv cwtl pushf rol xor outsb sub test out or push jg mov add or jb rcrb lcall loopne sub lahf inc scas jo,pn pop pushf or jno adc mov xor mov jge inc int3 jp (bad) xchg or push pusha insb cltd xor lcall ljmp in mov mov and adc movsl add cmp mov mov stos pop jne call dec sbb xor jmp mov or out enter ja aam add mov into mov push cmp clc addr16 stos mov push sub stos push add mov mov into fist cld or outsb mov and push mov (bad) cmovs push push (bad) pop pop lods jp imul sahf mov in cmp ljmp mulb fbstp mov andl xlat cmpsl mov test cli jbe push mov mov pop jne mov (bad) out stos stos sub (bad) test movsl xchg repz js pop push cmp jecxz xchg in addb xchg roll mov enter std cltd mov bound mov fstps mov push nop pop sub adc test addl inc pop cltd adc jl (bad) fdivrp xorb outsb arpl bound push cmp sub jne mov dec push adc jge scas adc mov imulb sub cmp jge fldcw (bad) std gs xor in mov jnp jbe enter fmull or ret sbb mov in pop and xchg lret in jne cs and outsb (bad) cltd fist int3 xor jg sub cmpsb and ror repnz shlb ss ds gs push movl inc loope std pop mov adc cmp jg xchg dec subl add fist lcall push (bad) aaa aam inc mov and dec add jge mov sub stos cmp clc or xor sbb and stos out test jb cmp lods ds pop lahf aad or addr16 iret cmpsl adc aam lock sbb adc lret and leave mov pop adc sub ffreep lds xor (bad) push popf iret dec cmpsl dec js sti sub jp mov add add (bad) roll cmc mov mov lock adc leave (bad) clc sbb fsts sbb repz out xchg lcall orb lds mov lahf jnp mov fadds adc push shrl xor add or insl movsl insl fwait mov xchg hlt (bad) dec push sbb sbb insb ds cmc fstpl mov mov and jbe and shrb sub cmpsb pop stos in in das inc jmp sub mov (bad) aad xor cmp cmp popa rcr cmp xchg enter or in jg out gs insb sub and inc in push sbb inc dec pop push sub ret and addr16 popf (bad) and or mov mov sbb mov fdivrl out mov lret jne mov xor jecxz dec push roll xor rcl cmp push (bad) mov xor rolb (bad) pop mov in xchg dec pop or call lods iret jp push outsl cmp pop es jb add pop mov pop cmp das sub in xchg mov and sub popf scas and lcall xchg cmp stos lret and movsl test add xchg push pushf (bad) jle inc jb fcomps cmpsl inc dec cmp arpl mov inc pop mov xor jne lret adc outsb and push ds pop stc es mov inc cltd aam cmp dec jg enter jp adc adc dec iret (bad) lock scas loope rorb mov (bad) sbb dec iret rcll (bad) mov jns push xor int3 inc adc push repnz mov or mov aam jg mov std lea push imull arpl xchg mov les popa mov cmp ds add jns pop lds adc mov or push les jns cld pop push call (bad) rcrb pop sbb js dec lret notl mov inc mov or ja cmpsb sub lret insl (bad) adc adc (bad) mov aad adc mov or loope test dec inc (bad) jb jno out mov sub jnp inc xchg rdtsc ss test mull add push mov insl popa add xchg repz ja xor cltd scas test mov inc or add inc aam push xchg or ds negl xchg xchg leave lea cmpl cmp iret pusha inc cmp scas or lret lock call rcr test mov in fucom mov aaa mov fidivl dec aas mov sub ret aas popf xor ljmp mov lods jmp pop mov add inc mov jge xchg pop cwtl mov mov cmp xlat fistp std pop lea add ret or dec xchg xchg js jecxz icebp mov dec adc xchg popf push or rcrl dec shlb mov add ss push inc mov call lret xchg (bad) enter in ficompl add cmp jns and sub pop pop int3 lea data16 test lock call rorb sbb sub jge mov in xchg fwait cli push pop mov daa movb out in inc ja inc daa add and clc sub hlt mov popa mov sbb xchg out inc out daa sbb sbb push enter lock push mov (bad) daa idivl (bad) xor mov pop repz lahf repnz xchg mov fdivrl pop out mov stos aaa faddl sub push inc pop pop in inc inc mov jnp outsl jecxz mov icebp pop je mov mov cmp arpl scas das mov outsl arpl xor and sub sub dec push inc mov test js pop inc dec xor xchg mov adc pop cmp leave in rol and xor xchg das and imul or xlat and push cmp xor jbe call les clc sbb fucomi mov push lods and mov xchg push scas jg mov add lret sub loope jnp aas fisttp push push push (bad) cmpsb in jge inc loop stos mov outsl add mov lea mov sbb push lods bound inc jnp mov and scas xor (bad) jns xchg dec insl dec mov inc cmp dec pop push dec dec in scas xchg pop je test mov icebp into mov inc loopne bound mov test (bad) in in (bad) sti cmp jae lahf jle cwtl repz rclb push sbbb fistp sub pop dec aas mov aaa dec pushl aaa adc mov repnz dec inc add lock jb inc outsl icebp repz mov fist (bad) icebp mov mov xor ret jecxz dec push shll and sbb lret sbb in mov add fwait jns fcompl ret inc and repnz sbb aad xor das pop nop lret test shlb pop sbbl fldenv shlb fimul stos inc mov xor lea js test (bad) adc jbe call mov push shr rorb daa out popf or out cltd lahf jg popf xchg out mov jns add and xor sti and or add dec pop or push pop loopne mov incb pop inc ficoml test clc repnz jb fiadd push mov jb adc (bad) in jg js,pt jl sub xchg js hlt pop scas pop cmpl lea in std scas mov pop stos cmp and cld pop in sub sub rcll lds sub jg or aas fistpll daa int mov jnp popf pop push sbb shrl fs rolb aas (bad) clc or fucom movsl xchg stos insl gs out stc test push cli insb or xchg aas sub lret dec fildll pusha out push test cmp loop xchg pusha xor push test and mov push push pop inc cmp xchg pop inc (bad) aad dec jnp add mov call pop outsl clc push push mov mov pop dec xlat sbb sbb (bad) jg aam ja popf pop cmpsb mov pop jge and loopne ljmp mov mov imul fstps lods or add scas pop adc les cs aam add pop int3 sub pushl lret std incl sub in add mov jl out insb sahf mov jno call pop xlat cmp insl sbb rol jg jb gs insb xlat lea cltd jne xchg andb jp or xor xchg incl rclb ljmp adc loope hlt iret xor scas mov mov mov out push xor clc adc sub repz cmp inc lods das inc frstor inc (bad) pop loope repz out sbb sub aaa lret jne xor int dec cs mov mov ds frstor mov movsb jmp into xor cmpsl jge shrb into jnp inc or xor (bad) cltd mov icebp loop,pn dec sub xchg mov sbb xor pop inc rcll pop popf sbb aaa add push nop mov fildll lcall (bad) cmp add add sub leave sbb dec in mov push sub fnstenv or pop mov bound mov cmp fs push jnp xor mov jp xchg mov incl outsb pop mov in sbb cs enter mov add and xchg shlb (bad) leave and movsb xchg xchg inc (bad) movsb pop sub push dec pop mov aam (bad) dec push jns inc faddl lds (bad) adc loope inc jae adc mov stc (bad) jne nop mov adc sti cmp push jmp xor sbbl mov mov rclb (bad) mov call add sub cmp or mov mov pop sbb xlat test fsubs ds and fsqrt jle sbb ja cmp or mov or add fimull dec cmp bound xchg test out rcrl mov mov (bad) mov and outsb add fimull fisttp sti add (bad) sbb cwtl jl pop push sti ret test (bad) fisubl jecxz outsl loope jge add (bad) jns lahf mov sti pop in xor mov lcall jmp and (bad) cs push sub add jp lret gs aam push add sbb nop insl cmpsb lcallw roll cmp jb lcall clc inc out fwait dec dec cmc mov fadd rclb cmp adc js test mov insl push mov cwtl mov das mov mov xor or (bad) add es adc mov xchg sbb in pop stos xchg sub mov sbb rclb imul jecxz cmp cwtl mov mov test or xor das mov stos jb sub jg jae mov das test in mov out jbe (bad) mov lret movsb adc es out stos sti inc (bad) inc mov fisttp fidivr arpl out and out out loop jo inc adc (bad) je sbb mov (bad) jno jg pop lret iret jle sub cmpsl inc iret push ljmp xchg jbe in stos push and es pop insl cmpsl iret repz add sti sahf mov jo popf aas mov pop xor mov pop xchg popa insl pop lar jge and dec jge sub mov imul sbb andl mov pop lahf stc dec sbb cmp cmp jl xor push push inc ret lcall jbe dec mov pop ret call loope int mov and jne add fdivrs xchg cld jmp fildll out mov xor je xorl je in int3 mov jnp and push repz enter push pop or dec movsl xor lds mov xor cmc jne mov lea stos lea mov nop stos jae (bad) mov lahf int3 sarl push repnz call popa pop loop mov fwait push out add fwait xor cld and lret or xchg sbb cmpl fisubr or mov jae je xlat rorl lock rcl in push push xor sbb fisttpll negl jge push xor leave pop stos aam pop (bad) mov rcrl in mov mov sbb inc push out lret pop cmp push mov aaa push mov mov inc jnp inc cmp addr16 add pushf outsb mov repnz cmpsl xor out push jmp pop dec mov jl mov or jmp aas int sub cmpsl aas imul subl out sbbl pop and dec notl dec push xlat (bad) fmuls js push dec int fimul loop cwtl and pop aas inc lds shr sbb cmp sub arpl lgdtl dec mov xorb sub test cmpsl mov pusha add lock or lcall xor data16 ljmp jge jns adc outsl adc or ja aas jmp cmp fwait lcall pop sub scas jo inc push mov sbb push jne xchg loopne mov or push jl inc mov fimull add movsb insl xchg rcrl add rcll dec arpl push fisttpll clc std scas mov in jmp outsl movsl sbb iret movsl xor outsl test mov jo add jecxz xorl sbb sahf xchg add jmp aam daa pop out push push fs (bad) jg test sub jns repnz rclb sub or imul test cmpsl dec mov lods lea sti mov test jbe orl mov sub (bad) add xchg cltd cltd mov add js sahf sbb jmp icebp out jp dec xlat push iret movsb aad pop daa jle into xchg stos ja fldl jge sahf pop xor movsb add inc mov jnp fwait pop sbb add inc or inc cmp push mov inc jno scas push inc push lea or sahf aaa xchg fdiv xchg popa roll lock pop loope (bad) jno jmp subl ficomp jns adc sbb mov sahf xchg mov arpl xchg mov xor cmc mov insb jo inc (bad) mov ja push test inc dec xchg xchg negl inc stc loop fstl dec adc stc xchg adc and out (bad) push mov outsl cmpsb shr sbb inc or push inc mov loopne jmp xchg lock xor outsb or mov jge in ja aaa loop clc jle stos fild pop pop cltd or push sbb pop xchg pop aad sub xchg rorl data16 sub mov ja add pop pusha ficom xor les xchg sbb mov dec inc cs int (bad) jno imul mov pusha xchg cld fldt sar pushf ja inc cmpsl cmp lea out outsb mov dec int inc notl movsl mulb pop mov cmc adc pop scas fwait mov xchg shll adcl fsubr sub bswap fcoml movsb pop adcb inc jbe dec out imul add mov dec jno pop popa and neg fldln2 mov jmp insl pop add add xchg fwait jnp jo fwait leave loopne rcrb push clc addb xchg or jl fs xlat push mov movsb adc mov lds mov mov mov mov faddl fsts sub dec cli clc xchg lea jo xor xor push test inc mov pop jg and mov push jecxz das in push xchg jmp and pop mov jmp inc dec dec sahf jg imul rcr inc hlt xchg ja mov leave inc xor call jnp xorl aaa dec insl insb mov adc cmp (bad) call mov sbb cmpsl add ja sbb xor and ret cs popa in xchg pop pop out in cmpsb sub jnp cmpsl sarb call cmp or inc and scas push pusha inc insl outsl testb popa mov jg push adc test icebp scas shll pop pop or and cmpsb xchg leave std lret fprem ret psubusb cmp out push int and arpl mov dec xchg add push insl fsts aad sbb pushl movsb or or xor sbb cmpsb and add bound daa jo lds or mov dec mov idivb lock pop jmp mov sub mov sub push dec pop sbb in mov mul pop add inc push mov mov xchg sub lcall stos mov mov add inc pop and test dec addb jns mov btr adc or daa push cmp dec inc and loope inc daa repnz mov ficoml mov inc sarl push cmpsl xor push ret dec mov subb xchg sbb mov xor cmc sbb push popf pushf cmp cltd sbb outsb inc maxps repnz push jns mov ret into (bad) xchg jecxz les cltd push add adc sarb cmp out or in movsb addr16 sub (bad) lret mov cld mov pusha fincstp sub aaa mov push pusha arpl sub enter movsl or iretw bound icebp (bad) push push les movb inc imul lcall pop addl sub repz aas sbb and sbb test xor or mov inc loop push loopne xchg adc xchg pop and jb or cmp or ljmp enter notl cmp add jp fwait cmp fiaddl jbe movsl xchg mov aad js mov lods xor or inc adc lods or adc sbb rcll lea lret iret adc bound push movsb cld add xor test add movsb jmp cmp or pop adc outsl cmc adc inc push cmp fwait outsb mov xchg lcall js jl adc jmp xchg (bad) ret test inc jns inc sbb mov gs loop xchg lods mov insb subl cmp ficompl fsubr aaa fldenv cmp out rcll xchg and xor adc or aas in (bad) cli add lahf das pop imul loope fcomip cmp test push xor nop cld or jl pop cmpsb (bad) imul push mov in pop aad jecxz cmp rcrl dec sarl jge add test mov call jb orl pop out or adc mov add addr16 inc sbb jnp dec sub mov fidivr mov jo jecxz repz popa and sub adcl cmpsl xchg add inc jge jnp pop inc xchg or push sbb inc pop gs inc pop jbe mov adc lcall scas sub fisub jecxz shll sbb mov into fnstenv sbbl jno ljmp inc lret cmp cmc loopne sti mov cltd lret imul push loop in push sbb stos mov cmp sub sbb std or (bad) cltd push or pop out adc orb cs in cld mov mov les mov xor sbb hlt (bad) dec decb mov mov dec mov std jp bnd scas pop pop and sbb cmpsl cmp std movsl dec xorl mov jnp out jge mov mov roll dec xor lods clc sbb dec mov push push add mov stos test fildll xor testl in dec cmpsl popa jb test das and xchg pop mov icebp std push sbb je mov pop mov ljmp add arpl js jle cmp (bad) xor jb cs aam ja inc stc jg scas mov arpl mov inc jp outsb sub sbb and jmp rorb popf push xor dec arpl insl push cli jecxz dec xchg cmp jno pop fs or cs xchg xlat mov out push push test int push inc sarb std fsts jne push (bad) rep push fsub repnz and call mov or cmpps fsubrl out xchg insl data16 xchg pushf xchg push lahf or jg mov jge loope inc test push lret js inc addl in sub mov and lcall lods push adcl std pop ret test pop into mov mov sub cmp cwtl popf sar (bad) arpl or xchg jae lret imul out das sti lods jns cs ret imul pop cmp das lea movsl fiaddl fsubrl arpl mov add push pusha out fisub testl ja int hlt mov xor xchg pusha push cmc pop lret push outsb pusha push dec xlat jae dec jns hlt jmp rorb scas push aas jo push push aam xchg mov push lret xchg inc (bad) add add out lods shrb and in dec xor mov mov xchg lds fsubrs je xchg jmp (bad) roll out fbld (bad) pushf jae xlat pusha adc dec lret dec shll mov sbb mov mov scas scas test hlt cs sbb fisubl negl sbb sub daa mov push (bad) imul mov inc push orb test sahf (bad) adc in lds shr mov insb mov push pushf rclb imul sti and loope and mov ret stos fist in jbe or imul push adc imul loopne ret in add lcall jge dec dec nop insb inc mov xchg sahf fwait iret cmp in ficom sub test cmp ljmp call push mov pushf (bad) mov sbb ds je in aaa out sub lods scas cli mov pop add addr16 xchg cmp mov add sbb dec adc cld jle das pop cli bound (bad) aam adc lcall jge aam sub adc sbb jb imul jl out mov sbb daa pusha or jmp fisubr js sti add imul xchg daa aaa subl pop push inc lret out imul pop fidivr sub xor xchg push cmp mulb ljmp or sub fldenv jge xchg pop push sub ret scas clc mov mov fwait cmp jge nop (bad) test mov pushfw ret loope sbb rclb repnz fistpll cmp iret cmp outsb and dec fldenv hlt ret and cmc xor add push into loop push pop sbb insb shrb int3 faddl bound mov dec (bad) ss inc gs and xor xor xor aas decl add les mov pop mov xor popf loop ret mov fst mov test cmp jmp jecxz gs sbb mov mov fs imul js stos xchg pop push inc repz push pop push (bad) mov jb sub cmp adc inc fcomi int3 jg aam mov jnp mov out jl mov and aaa gs and push pop sbb adc lods enter inc push lock popf cmpsl push or sub adc mov xor xchg dec adc mov and incl or sti out cltd dec lcall mov fisub test ret xor lea fs icebp and out sbb pop in ret jp hlt cltd pop in cwtl mov fsubrl cmp push cltd add lahf hlt mov pop jg mov gs adc in test cmp insl movsb stc mov (bad) insb mov add gs outsl cmp cmp adc or push in repnz cmp adc dec movsb mov sub stc stos js ret sub cmp inc cli pop pop add cltd push (bad) mov xchg fstpt xchg fwait outsb cmp add loopne icebp scas and test ljmp jecxz lods and push push adc pusha push neg push or cmp out or or fisub (bad) cmp cmp fdecstp jns ret xorb cmp andb pop in aam mov mov or stc xor xor outsb add or mov inc addr16 popa scas test mov dec das pop add loope gs cltd push gs fiaddl pop mov cmp das lods cli lods orl outsl push lods es sbb scas test pusha jne and jge mov les test adc cmp jb repnz clc imul leave push scas push push sub fcmovnbe sub ror lret aas les push loopne lea in jne mov aaa sbb fidiv out dec xchg aaa std add cmp and jg pop xor cmp fs dec add mov lahf or shlb cmp js ja ret mov mov xlat inc lods ret dec add into mov cmpsl pop add sbb test dec and jp ss stos or fcomps xchg out imul push fdivl loop test push sub nop jle sbb cmpsl icebp xlat sub test icebp out sbb lahf out dec ljmp js mov push xchg jb mov sub and in fisubl xchg ss xor mov sahf (bad) mov lea mov shlb adc movb sti js push dec loope mov push (bad) inc adc ds jp fildll adc imul dec mov pop inc movsl xchg negb mov xchg pop and xadd and xor or and jnp jle or dec xor or lret int dec fstpl fstpl fidivrl xor mov sbb je mov daa nop call cmp mov pop daa call out hlt mov lods and cmpsb jle add (bad) dec mov insl enter or sti sub arpl movsb lret (bad) jecxz js sbb test jae loope in repnz (bad) jp inc in rol jo or (bad) icebp mov div lea push dec enter jmp mov sub mov xchg in jno add cmp dec sbb jns es push and out adc jle outsl inc mov push stos lret mov iret (bad) test pusha loope fwait stos jmp orl cmpsl (bad) push push mov push push imul std cmp xchg insl or add daa fcmovnu inc lahf stos mov loopne add lahf sub scas and test stos adc ret mov pop cmp cmp cmp or push aad mov sbb icebp ja,pt popa loope push mov or es push fmuls ficompl movl jno cmp out aaa lahf aaa mov (bad) scas mov sbb fistp rclb sub aaa das aas xchg add scas ss movsl jae repnz rcrb gs ljmp xchg fildl xor (bad) (bad) cli loop cmpsl jbe jo adc ret pushf fdivrp cmp test ror mov or lods jmp or test scas aaa pop leave jo xorl adc mov out popa dec mov notb jno mov stos loop dec outsb nop pop mov and cmp inc loopne jb mov test sub rclb or out mov iret add int add mov push cmp dec mov xchg mov cmp or pusha daa aaa mov lock pop shrl push add and in push inc mov sbb jge adc push imul sub dec or roll andb adc mov dec pop lcall sbb inc add bound clc cmp and and xchg inc xchg and loope fimul dec xchg cmp test cwtl nop jle add mov fdivl adc in pop pop loopne mov xchg xor fldenv inc push xorl shl dec in jno adc jmp mov and jl gs jbe out or stos jmp xchg jno in jb loop adc inc inc mov xor lret xchg push add roll and mov mov adc aad add add xchg flds stos mov or lds dec cmp xchg cmp sub inc out push call cmc dec or fidivl stc lret insb stc jle int sbb or sbb (bad) (bad) fcomps sbbl pop lahf sub mov mov dec fbstp test adc and jge je fildl popf inc fwait mov or cltd push imul in ret sti int3 jmp add (bad) lds mov inc xor or sbb and loope lods cwtl mov and adc aam jp sbbb push aad dec out and mov pop adc add (bad) out pop outsb dec add pop inc mov leave ficom imul xchg ret in cmc out stos cmp lcall loopne sahf sarb loop lret sbb xchg lret or (bad) into mov mov add out sbb sarl xchg or xchg dec xchg int3 xor lcall ss arpl popf pop divl imul mov add cmp jmp and xor pop movsl xor mov outsl mov outsb pushf test inc mov loopne push fcomp or rcrb daa popa addr16 sbb xor jb mov js loop dec popf push inc ja pop test xor fstl or add scas das cmpsl (bad) xor scas xchg rolb cli jg shlb sbb fisttpll ljmp or cmp mov fmuls clc (bad) add mov scas loopne adcl adc pop lret hlt out mov mov ficom push (bad) xchg arpl cmp pop sti cs roll cmp pushf (bad) and dec push mov popf sti and mov push sbb sub and mov mov lahf push sbb cmpsb fistp xchg dec call in push mov xor mov ret mov cmp cs (bad) adc call adc imul (bad) sbb add imul test jae cmp mov push arpl repz (bad) scas mov push pusha hlt add lods cmp jg sbb (bad) mov and cmp dec jb rol cmp xchg fildll pushf (bad) pop dec add pusha jmp jp gs jg ret pushf cli or or mov enter push negl ret pop pop cmp cmp cwtl sub push xchg ja lods shlb (bad) out sbb or jl jb adc mul cwtl lret repz add inc test or clc sub popf test or mov sub cmp cmp jp push sub aas jge popa push sub fsubrl sbb jmp in and in out lds adc into loope int3 (bad) mov push add insl ficoml mov pusha aas xor mov movb scas adc pop and pop shll jle ffree (bad) test xchg adc js outsl push dec mov jo add outsl pop push pop mov jae push imul roll test (bad) dec sub or mov and xchg mov push add jecxz jae,pn mov inc mov or inc sbb and push repnz jle mov mov jb push jp mov stos and jns test mov sub push jns adc mov (bad) jo jno mull out or test pop outsb mov mov arpl add nop xchg push adc inc xor inc stc scas mov lcall dec adc sub enter insb js pop xlat pop sbb bswap xchg lahf outsl stos nop nop insl invd lcall nop cmp lahf icebp (bad) lock aam and pop dec (bad) sub adc stos push mov roll in jmp addr16 push add inc clc cli dec clc mov xchg cmp out mov jmp in ljmp inc out stc fcomps sub testl push push xor scas dec in out push and adc repz jl pushf notb call rorl mov cmp xchg mov fldln2 pop push mov lods xchg dec xchg sbb fistp incl (bad) or inc and jno in jle adc mov out in sub push inc sahf xor push pop orb mov je pop (bad) pusha bound imul xor jp shll cmp in mov push mov xchg lret mov mov add mov mov sbb movl cld inc add loop int sbb adc cmc orl int pop lcall mov jae faddl push push enter out push popf sbb jmp or add test xchg add pop divb test mov xor mov jne add cmp mov pusha pop push or dec lret arpl mov sub cmpsb pop and or sub sub lods dec rol jecxz ret lahf insb rcrl sbb hlt call (bad) sbb jns jb xchg xchg test (bad) mov xchg insl inc (bad) jbe outsl lea xchg shll mov push inc (bad) mov push stc aaa pop mov fisubr pop pop insb movsb adc cmp sbb scas jmp xchg test shrb loope repz push mov inc cmp xchg ljmp jnp mov decl loop xor and sub xchg in jg and push pop orl test push call dec xor pop and out jmp mov xor and mov sbb push mov enter iret xchg sub cmp hlt loop (bad) stos arpl icebp and fs (bad) rcrb xchg mov jge cmpsl pop je nopl dec (bad) icebp pushf out pop mov std test pop fisub addr16 lods pop xchg mov aad cmp insb and jle sar inc push arpl pop movsb mov outsl (bad) mov pop push je fdivp lahf fs adc lock lret jp call mov js loope ja repz idiv mov cwtl push dec push hlt in cs mov push sbb mov jmp add add ss dec xor fsubrl out dec pop fs lock jecxz dec push repnz cmpsb mov lcall ret mov fiaddl adc mov mov test push jb add scas lock scas push xchg daa and cmc push mov push and imul or inc dec out pop testl add gs mov xchg jmp dec adc pop inc cs cmp dec jnp xor xchg jge scas int or fwait dec pusha push int3 ror pop mov mov jb pop or xchg inc mov stos shll jmp (bad) jbe push mov or xor or jle pop cmc and jle adc rcrb jbe cmp cmp dec inc mov je sbb insl push insb (bad) mov pop movsb out inc fidiv xchg mov xor xor rcll cmp lret jae (bad) hlt sub ljmp mov mov dec gs add ret rcrb rcll aam jle mov cltd mov ret jbe jbe mov fsub push xor mov dec out loop call xor pop sbb mov mov jno out stc inc lods in dec add cmp inc loopne and xor cmp es cmp mov aas int3 cmp cmp adc lret xchg aam pop mov adc xor jo mov addr16 mov nop pop orl sbb shrl arpl jmp pop mov xor cmp jns push and call xchg cs loopne push push fidivl inc stc (bad) pop fldt in clc xchg dec cmp imul pop sahf inc sti xlat outsl adc shrl pop rclb and xor cmc cmp mov popl cmp popa lret test push sbb mov jle push jmp dec jecxz cmpsb sbb in jbe cs out aad loopne inc sub cli int3 mov push xchg insl movd outsb jmp into adc pop mov xor add jae jle and (bad) mov pop adc cmp mov icebp push lcall xor jmp add in clc mov mov ljmp int3 mov jbe push dec xor (bad) fcmovb (bad) in jmp jne lahf sub rcll ja mov pushf inc fcomip scas mov das xchg cmp dec pop or sbb xchg jp movsb mov cmp jae scas fidivr orb mov mov xchg jp mov (bad) fsubrs lcall pop jae and enter jo add add (bad) sahf add or dec mov out push out shrb mov cmp pop mov addl inc pop and or push ss mov (bad) fwait ja jl decl movlhps dec push mov xor test mov cmpsb scas negb adc inc cmp insl pop fnsave and cmpsl mov test or arpl imul int3 orl mov mov and adc push aas and negl movsl sub jg orb shlb xchg subb add or movsb lock stc test push push jp or push or lods jnp adc add mov inc xor cwtl pop sub mov cmp (bad) pop lods lret fsubr jbe pop addl mov and movsb mov ficomp jae stos (bad) fisttp sbbb mov mov or xchg ret in lea jno jnp les out cli ds fwait cmp dec or pop push scas mov sub mov stc (bad) call mov xor fwait dec int dec inc aam sub or ret (bad) les subl scas xchg pop rcr jae ja js cmc mov add orl sbb adc and cmpsl lea xchg dec pop or movsb enter mov rcl sbb popf adc pop add mov sub mov cltd pop outsl ret iret sbb inc cltd std lock or outsb out sbb push nop push ret inc push lret imul jp sbb xchg daa push bound xchg cltd es scas inc jnp add dec test push cmp sbb add test pushf loope mov add fnstenv lock push lods push pushf outsb std dec shrb push call test xchg or add jmp dec lahf or pop addl dec sbb jmp xor jl (bad) pop cmp sbb daa (bad) and movsl repnz test imul mov dec dec mov aad mov out iret cmp imul mov pop pushf or inc mov and leave lcall fs icebp cmp nop mov pop pop bound fadds ljmp mov mov jmp and inc adcb sbb push cli jecxz ret xchg in aaa clc inc mov jmp test jno jl mov aad push lock push sahf test out gs push push xor outsb push xchg in or inc push jecxz sbb ds ljmp mov gs add mov mov rolb mov cmp in dec mov out mov aas cmpsb or loopne sbb sub leave cmp adc push mov (bad) cs (bad) mov movsb ret dec fistpll push mov xchg sub mov insl mov sub ljmp aas loope in out jg cmc xchg iret jecxz push mov push pop fcmovne add pushf mov jl cmpsl add add adc clc (bad) lock xchg push mov das mov xchg (bad) insl movsb xor mov dec sahf insb ljmp push or fisubr or lods testl push rcr mov adcl inc lods ljmp sub fisttpl cmp or push les lret mov dec out push cwtl popf aaa cmp sbb xorl lods or popf ds enter sub (bad) cmp fldcw call sub push jl jno xor ja or push inc cmp fistpl mov bound hlt popa dec xor cmp adc pop mov call leave or add dec fidivl sbb pop fldcw push jp or aas xlat repz sahf push rcll aam push push in mov cmp push dec mov mov push movsl and lods test dec push sarl hlt jmp and jne shrl je negb mov bound sub popf and mov test fwait push mov pusha sti dec rolb adc jbe pop in jb pop rcrb xchg jmp sbb std mov addb scas push sub iret xor gs push jno pop (bad) inc repnz pop mov mov lods add jbe hlt outsb cltd push loope insl dec fldcw aam inc dec jns inc xchg clc or mov mov dec xchg sbb mov mov xor pop adc fisubl jg out fs loopne pop sub dec lods or mov aas (bad) sbb sahf stos in or cld sub (bad) pop dec shrb mov add fwait gs fwait add and repnz sbb sub stos pop in fwait cwtl xchg adc or les adc sub sub test jp push lret lods out jmp fdivl pop in dec outsl aad fwait cmp out (bad) and push sub lock (bad) imul nop pushf in push xlat fistpll cmc les push jo cmp cld xlat les mov stos adc arpl (bad) mov adc ljmp pop or int3 and add or popf cmc dec fidiv (bad) xchg hlt bound pop loop dec xchg pop cwtl push enter test in inc or cmc push les (bad) scas aaa dec jl cmp lock loopne xchg jmp testb test xchg or inc inc mov rcr xor loop xchg movsl or cmp fmull ss cvttps2pi inc loopne push outsl fsubp mov scas imul adc mov sbb lcall ret push xchg pop xchg loope notl icebp and or je test adc js pop jl test stc js scas mov adc and mov test mov push (bad) repnz call dec test icebp cmpsb stos fnstcw cwtl jae cmp ret call cmp imul xchg mov or repnz push mov sbb hlt cmpsl jp inc cmpl fidivr das pop adc cmc mov sbb mov dec andl push (bad) adc ds (bad) xor pop sbb push shrl xchg mov sbb outsl test in sub out mov jo xchg xchg leave mov mov sub pop addr16 inc add lahf dec leave mov sbb jbe or outsb lahf fsubrl out sarb in xchg (bad) xor or stc jmp in push push rcll lahf enter std ljmp sbb pop call pop lcall adc pop mov pusha adc imul or add repnz pop xchg imul or jecxz xchg bound andl aas mov jecxz push cwtl pusha xor stc aam dec fs pop insb int3 push pop sbb adc mov or jge mov add xor xor ds sahf insl in les jg movsl movsb insb sar mov adc adc imulb insl out ja sbb and mov xor sbb sbb or fdivs or sarl neg mov sub push or push and xchg daa (bad) dec pop int pop ds test sub repz stc sbb mov movsb jne popa mov sub jge jae xchg inc mov xor (bad) adc push in js sbb mov mov inc lods push out or rorb xchg adc rcrl adc jle xchg jge dec push daa in imul mov cltd in mov cmpsl pop dec daa dec sub lock std or xor push cmp clc xchg lret dec lock (bad) (bad) jge push in lahf out out insl dec cld push mov jp mov out cs mov ss mov or push (bad) xor insb mov mov sbb and out hlt inc leave sbb and xchg outsl jo pushf neg add mov jno inc sbb xor xchg add out rclb inc scas loope or aas arpl or and xchg insb cmp dec xlat and rorl pop pop adc test sbb and (bad) in mov rorb daa gs hlt pop int aad cltd outsl push insl sub or adc push sub jl pop enter mov sub pop dec scas or jecxz or jmp inc adc icebp repnz lods stos inc jne adc je in ret mov or cmp adc mov bound movsl adc or (bad) or or and das pop in and adc fstp in push testl sti stos test xchg aam mov fwait sub test idivb or pop pop insb push mov add jecxz sub push mov ret pop push jp pop sub icebp sbb inc dec mov adc ret fisub adc clc into movsb call pop aam sahf push notl (bad) fwait dec push (bad) mov out cwtl jnp mov imul push fsubp dec sub pop pop rclb jno dec cmp int3 iret dec fs ds push pop xchg test mov xchg push shrl in movsb push pop rolb fnstenv add (bad) das dec mov push rorl jg aad cmpsb add gs fdivrs push negl std sub jnp loopne mov cmpsb je cmp cmp mov cmpsb fwait dec cmp scas pop ret mov sub and adc jecxz jo push ret and jl cli xchg push (bad) outsl lcall cmp jns cmp xchg popf pusha test push int3 sarl pusha scas out movsl (bad) fisubrl or js pop data16 daa fs pop add or ficom mov pop dec iret iret mov pushf mov dec jmp sarl insl dec mov and xchg pop ficomp push push paddb pop outsb sub push orl cmc sbb and leave pop xchg mov dec cmp lock cmp (bad) fistl ljmp inc mul jno and xchg inc add xor inc sete add bound jmp cltd sub or dec popf call inc push lock scas ljmp (bad) mov xchg rclb push mov sbb out pop sbbl push dec daa and mov das lahf cmp add mov mov xor lds dec inc pusha movsl xchg popf stos es adc mov rcrl shl mov mov and sub xor scas lret test test mov mov cltd repnz mov test jb xchg sbb xor ljmp adc push loop (bad) flds in test pop imul inc imul jle sti inc loopne sub out and fimul (bad) jecxz cltd dec int3 mov sub jl sub sub imul into jle rcll cmpsl inc sbb std test hlt outsl cmp sub jl punpckldq xchg iret pusha push loop lods xlat xor insl cld mov pushf and lods xchg mov (bad) shlb ftst and cmp dec fcomip not push sbb push inc mov pop or add int outsb flds lea iret or xchg rolb jbe xchg add lods jecxz rcll mov (bad) fildll lock nop fs jo ret (bad) inc push mov lock sbb xchg fs rorl pop push in insb mov mov inc stos sub add aad sub imul pop sub enter es push dec (bad) jp inc jb xchg dec mov pusha ret (bad) lret ss insb pop nop sti fistpl sub pusha mov punpckhdq push movb mov mov lods test add rorl test add cmp xbegin push test dec xor cmp aas push dec sbb sub mov imul imul mov data16 add insl jns jne adc pushf cwtl repz lock sahf ret inc in lahf and sbb mov rorl sti dec shrl push lods xchg mov and push pop push sbb (bad) sbb and fnstenv xor pop add test aad orl loop dec (bad) mov or jmp inc inc (bad) dec xor dec xchg push mov inc sub and or ret pop add aaa or pop es xlat mov fildll addr16 rcll gs pop rol sub push movntps jne mov sti (bad) fwait repnz adc cwtl nop sub (bad) xor sbb pop pop popa mov or nop les mov je cld fbld mov test cmp sub inc pop pop jmp ja fcoml mov xor jecxz cmpsb inc lock (bad) jmp xchg sbb jno sbb sahf cld imulb dec ret add jbe sbb push out out movb mov pop or cmp add into stos sbb add cmp sub shrb sub sub or or stc sub push addr16 shll or pop cmp and xchg pusha pop jnp scas movsb ss js (bad) enter ljmp adc add sub mov add out cltd or cli fidivl gs insb scas and dec cmp xchg mov fdivs in (bad) ljmp dec xchg push inc (bad) icebp add xchg in pop test xchg aaa ss push insl jo pop mov sbb add and arpl jae cmc ljmp xor fs inc jnp xor dec cmp jno add mov lret cmc jne in or push lahf mov fimull cltd mul movsb cmp (bad) push lods pop es jge arpl in and inc xchg imul xor adc pop add outsl idiv dec in jge pop and roll push cmp ss adc push mov iret mov pop cmc dec call stc je das mov mov add dec dec sbb jge push lret insl shll clc ja mov dec xchg out das jmp or cwtl xor mov add leave test sub cs popf push insb mov sub xor out pusha test in pop (bad) loop adc out ret lods or sarb jae pop sti addr16 fcoms mov jnp movsl ds mov imul rorb push xchg fsubs call (bad) xor pop dec cmpl inc repz lods jg cmp leave loope mov adcb jmp mov pop lds rorl inc add hlt cmp repz movsb mov rcrl and sub loopne and popf rorl in sub push fsubrs inc or ret (bad) jbe sbb out xlat jmp xchg cmpsb push inc add jecxz xchg cli cmp popf call fldt stos mov or xor pop jne aaa movsl ret push dec fisubl sbb inc inc mov rclb xlat and iret mov test clc ljmp cwtl inc ss cmp scas cmp ret out xchg shlb (bad) roll jnp inc bound enter cmp push dec sub xor pop iret test jg sub mov push divl dec arpl inc dec cmpsl push aas cmc mov cmpl inc leave add repnz or adc adc sarl js insb fdivr test sub movsb sbb add sbb nop push (bad) and stos add push cmp mov aam lea jp lret mov lods jbe jnp nop leave pop xor cli adc aad aaa dec lret aam mov push push adc hlt pushf push push mov mov dec jmp fnsave add push popa int xchg jl popa and jns cmp aam jns (bad) (bad) lret push nop mov popa aam xchg (bad) xchg std rcll xor mov test test ret (bad) sub jle adc shll fidivrl adc jmp and pop push sub test jae xchg mov mov push add test iret or sub fiadd xor dec fiaddl shrb repnz mov lock scas imul sarb inc icebp and or inc xchg into push cmpb cmp loop jne mov or xchg jnp test and addr16 imul fild les imul test iret jmp xor sbb sub xorl push aaa into xor jle cwtl fnop cmp frstor (bad) push ljmp fs pop lea fucomp sub out add inc push xor iret cld xorl mov scas lock pop call call or test jo inc fwait insb in xchg outsb es outsb rol aaa nop inc cmp pusha pop div shr pushf cs xchg cmpsb mov jne dec and lahf (bad) xlat dec jnp jo cmc scas mov test xor push mov jge loop,pn test stos cmp adc iret rorb push pop pop mov jmp shrb sbb aam adc mov popf int add pop jns inc dec jecxz sti fldenv setp jg movsb (bad) push (bad) popf test (bad) or jb sti loope mov jmp mov xor jmp adc aaa pop cld lret dec iret push jecxz or movb into pushf ja mov cs lahf pop pop xlat shll out push mov fildl sbb push inc in cmp repz adc xchg add add stos je mov test pushf cmp jle fidivr popa addr16 and stos (bad) or popf mov ljmp rcrl outsb mov inc sar (bad) stc pop lods loopne push (bad) mov out js mov jbe mov dec je xchg xor sub out lcall (bad) dec inc fs push les std push rclb or lcall push fcompl mov add push (bad) es jecxz mov (bad) jmp loope movl pop jno es cmp aad cmp push dec loope xchg inc je jae (bad) cmp shl xchg sbb push movsl lds sub ucomiss icebp add push (bad) push xchg ret sub xor and addl test pop out inc add xor fwait xchg add push cmp and lahf inc xchg inc push test cmp xchg pop sbb push popa outsl fwait arpl add sbb pusha es or mov data16 daa fnstsw adc or add aaa adc into sub push (bad) enter inc mov pop ljmp repnz xchg pop jp cmpsb inc mov into adc das cmp jl movl jecxz stos pop sbb jns xlat sub or sub adc dec arpl fisubrl push movsb mov repnz fnsave lods into dec aaa inc xchg hlt in ss xlat sub repnz sbb or and pop lcall xchg adc jno es stos mov pop mov nop cmpsl into lods xchg xchg sbb dec gs lcall mov xor adc gs call stos lods mov sub ss aaa sbb js push or or push jmp dec inc cmp inc cltd adc out fist sub iret dec push adc cmpsb ljmp xor (bad) dec adc test aas mov sahf lret push lods in adc mov push dec adc movsb outsl cli subb mov in dec mov xchg push dec sub (bad) xchg mov (bad) fdivrl mov in imul movsl xchg push arpl and popf js or xchg xor xlat xchg in jae push sbb nop add push mov xor sub aas js sbb dec loopne in pop xchg inc push roll (bad) xor cmp cli daa add pop adc xor (bad) aad xchg std cltd (bad) mov addr16 jbe xchg sbb xchg pop (bad) pminsw fiadd dec movsb cmp mov mov mov smsw bound (bad) cmp int3 cmp mov in or unpcklps xchg gs inc or cmp fidivr and cmp out jge sub inc mov lock pushf dec jo scas mov stos insl lea cltd jb (bad) cmp dec test inc pop xor cmc inc pop sub testl or inc loopne das cli jecxz push mov pop decl std jg (bad) fadds push test addl xchg mov jmp inc push cs (bad) xchg notl xchg dec pushf inc mov xchg inc dec sti shrl test inc movsl hlt stos lods les dec lods sub stos xor or xor lods sub or fwait adc hlt scas cwtl hlt mov es int3 test cmp iret jge lock test std push push ficompl mov dec fmull mov xchg cmp sbb push push sbb arpl sti mov xchg or mov (bad) shrl test inc or mov aam and pop out mov lahf insb cmp popf and mov lds mov fs lea movsb fsubrl adc ret sbb mov pop outsl push pop inc outsl ret push xor (bad) divl sub hlt sbb sbb pop fwait pop int insb paddsw mov sbb cmp lods call xor mov and (bad) outsl mov jbe xadd jmp cmpsl sbb fistpl stos inc sarb sbb outsl xchg jo mov mov stc pop mov pushf insl addr16 adc imul mov addb test adcb rcrb pop jle call lret js cld ljmp jmp jno popa add movsl and add pushf and mov lock dec aad outsl xlat sub sub out push lcall cmp mov gs les popa pop push xchg in shr andl dec repnz xchg dec sti cld inc xchg insb scas push out fimull out mov adc sub std ss mov push jp jnp out aad lods jno xchg push adc cmc enter jl (bad) std cmp jb jne xorl insl and push mov inc shlb mov loop push fimul mov movsl push cmpsl out pop js test add dec jb (bad) dec dec cmc mov out xchg gs cmpsl ljmp push popf cwtl test sub and adc in mov push inc and popa sbb add adc and sbb arpl (bad) and push fisubl fwait or pop sub pusha cmp popf dec mov (bad) sbb aad sub or sub push push out mov repnz sahf test fs lret and pop cmpsl mov icebp mov clc test cmc inc cmc test push das adc mov mov repnz sahf xor outsb push es inc js adc fldt jnp les mov inc mov rcrl adc mov lock push sti xchg sti test jne push sub sub fist call push enter fistpll pop add mov push (bad) jg jns jo pop xchg xlat push xor ljmp pushf imul data16 rclb sub inc shr xor lods cmp (bad) xchg lret test pop adc lds mov jge lock dec adc and shlb jno mov push aas fcomp sbb and daa xchg fcmovne jae cli sbb jmp inc dec mov clc inc pop pop push test adc out lcall lret sti rclb std and (bad) jbe sbb jl jge sahf jl scas lods mov inc xchg adc pop out xchg popa gs movsb nop lods cmp push scas repnz (bad) lcall adc je stos int xchg sar or mov xlat int adc inc cmc fsubr jbe xchg xchg or add mov in pop cmp jno push mov nop or mov lods push cs cmp jmp pop pop mov rcl xor jp push and stos push mov lea or les lahf sub bound adc jl addl imul mov push mov adc sbb (bad) adc fldl and mov mov push sarb (bad) sahf pop loopne,pt xchg jb dec xchg cmpsb push mov xchg xchg sub xlat xchg enter push sbb jnp rol pushf add push xchg mov lea sbb jbe add pop or and cmp nop and fsubrp xchg push xchg push and mov cmp xor loop data16 and xchg jns in cmpsb cmpsl (bad) mov pop scas fwait insb pop out loop dec xor push lret push int3 jge push divb xchg jno rclb jl,pn adc mov pop mov fisttpl mov mov ljmp rcrb cmp push lret stos xchg dec pop leave xchg pop mov pop jnp mov sbbb ljmp cli orps mov stc lahf fisubrl mov fmull in gs fcomps imul aad addl ret out or mov dec aaa stos repnz ffree push mov mov sbb (bad) mov pop jns scas (bad) das popf add lahf daa iret inc repnz sub (bad) repz cmpsb mov movsl (bad) cltd mov mov cmc fs push cmp lahf xlat addr16 jbe fsubrs test in push pusha mov dec rorl sar sbb mov lret jge lret pop stos dec push pop xor ror bound mov insb and push mov cmp loopne aad repz pusha imul jle fnstenv cmp rol inc (bad) and in mov or popf and jmp hlt repz out xchg sub push clc mov idivb mov popa jg sbb jecxz ret jge jae inc and (bad) gs rcrl jp icebp addl xchg jnp jle fdivl xchg sub nop in jecxz dec bound std cs les aam cmpsb lcall pushw jae ss int3 call out cmp imul sbb xchg lods (bad) pop pushf stos mov adc dec (bad) add pop sbb or mov mov or (bad) int xchg and (bad) les negb stos mov pop stos test nop shrl or pushf int3 cmpsb add inc add (bad) xor mov lret cmp push js cmp arpl pop push sbb add mov push push adc mov test stos leave xor inc mov jbe and dec mov xor pop ds push div dec cmpsl andb mov cltd adc add sbb mov mov aaa sub (bad) dec xchg jle push shl dec (bad) lret sub mov clc adc sahf (bad) lods adc aas stos sysenter xchg mov stc (bad) pop add imul mov es cmp pop ljmp cmp xor and xor xchg nop ret in sbbl dec loop bound cmpsl lahf imul cmp outsb push enter insb adc adc outsl push adc sub into add lahf push jge xor sub push sbb adc mov aaa xchg pop adc pop dec adcb std cli push cmp aas mov imul jg rclb rcll lock fsubs int and outsb shrb xchg shr sub rol fwait mov stc xchg xor jmp sub aam mov dec out dec imul pop lock cwtl sti mov and jg ss aas bound (bad) lock cmp mov xchg jns cwtl mov addr16 dec jecxz lret sub lret add rol adc popa inc std dec nop inc adc imul imul and pop adc pop lock fwait sarl sub es (bad) (bad) arpl xor dec xorl mov adc xor or pop (bad) fiadd call bound stos andb sbb dec bound mov daa jge (bad) jne add aad jge pop push cs pushf call pop lahf popf popf add jp popa in cld push or iret lahf adc xchg add push aaa movsb or xchg clc jno adc add into dec int3 loop dec inc outsb mov push cmp jns subl lods es dec lahf popf and sub lret test nop add frstor push movsl add sub orl lock (bad) bnd pop arpl push mov push mov pop jecxz add sbb inc test imul mov subb dec mov mov std fcmovu jle xchg dec add and test push cmpsl xor fmulp dec jecxz dec push xor mov in mov call mov mov dec mov adcl mov (bad) cmp stos stos (bad) sub fs xchg add inc pusha xchg mov dec in icebp addl ljmp push popa (bad) adc insl push cmp or dec sub mov movb loop insl test dec out clc mov fwait adc pop jbe pushl cld cmp mov jl inc lea dec or add xchg dec mov fdivrp pop out mov stc add xchg hlt and es bound mov test pop xchg mov lahf lea fisubr mov clc lret mov and add jl mov mov scas and xor hlt cmp lea popa lods (bad) mov adc ja push in insl sahf repnz pop stos mov jle push in test push push in test mov cltd movd cs ds shlb (bad) cli adc enter xchg call adc and cmp lcall das or cmp bound xor aaa xchg in dec addr16 nop mov pop dec fdivr xorl ja jl add sub adc xchg jg xchg and fildl (bad) push push test mov jg js (bad) pop mov cmp sub (bad) scas jns ljmp ret loop repz sub pusha jnp jno ja jmp sarb push mov loopne cmpsb mov test lock fist add in out mov (bad) or cmc push or pop hlt repz ljmp dec xchg daa add xchg das push out sbb test add stos or adc xchg push xor fdivs adc jle call jecxz and dec in adc insl loop push ret xchg out xor mov les pop xchg andl xor popf inc sub jne loop das add loope cmp jl inc lret adc mov cmpsb push or movsl xchg inc mov rorl mov hlt add and sub dec test sti sub lock aaa ljmp fwait stc adc out mov es cmpb mov out outsl (bad) mov gs test fdivp sub dec leave adc pop xor mov xchg inc stc mov adc mov push mov lea mov in int jmp sbb push popf loope ret inc jb hlt mov and cmpsl mov imul or add sbbl sti adc pusha in jl lods mov push mov mov pop pop es (bad) mov sbb dec cmpb and jb or (bad) mov or jns mov loopne loope add (bad) cmc push add mov jg mov (bad) loopne push insl cmp mov dec cmp loopne invd jecxz adc sbb lock (bad) cmp hlt pmaxsw scas fdivrs push mov or ss mov clc (bad) pop daa notl cmpsl std std aad rolb ja cmp add or push lock lea fsubrl in jl rorb sub jg mov pop mov into add adc lret ljmp test inc adc cmp add lods dec push (bad) aad je je out (bad) lret dec (bad) (bad) mov lods repz es leave sbb mov jnp mov in jg mov stos sti packuswb imul out sub mov insl jge or sub js push adc add lahf outsb movsb aad mov xor scas ja dec mov fbstp inc mov cmp repz fmulp add cld ja xchg mov and pop inc loope mov loop push mov fisttp dec int3 adc pop pop jge jle xor push adc pop frstor cld pop gs inc rclb clc cmp rcll xorl mov leave mov push mov call mov ds pop bound mov xchg mov inc fptan mov (bad) leave daa (bad) mov loope jl (bad) mov xlat push sub or (bad) fs std es icebp es inc loop push hlt or mov push popa (bad) repz push dec dec cs orb inc je bound mov jg push stos xor xchg pop pop daa cmp xor dec jmp ljmp cmp cltd jb and jg adc mov xchg inc repnz jge outsl lea aam pop faddl mov movsl daa das jmp sbb push push js rcl mov sbb loope (bad) idivb and stos lea and inc and push cwtl jmp repz mov movsl dec sbb pop dec out sbb pushf cmp add outsb pop pop push pop fmull popf inc in aad mov push data16 outsb sarb sbb lea fsubrl scas adc mov ja jne cs popf push push push outsb xchg cmp cmp jge push cs stc das mov orl mov dec daa movsl decb lds jae mov pop cltd popf pop mov jp loopne and stos int3 ljmp sub jno xor mov sarb mov push pop shlb inc int3 ja inc out (bad) lock daa lods cmp movsl sbb cmpsl stos dec loop,pt cmc test scas cmpsb lahf (bad) jae pop pop inc mov (bad) mov sub xchg adc out mov repz xchg dec cmp data16 push daa inc outsb sbb loopne jp xchg movsb pop dec iret cmp in mov and mov sbb decl rcrl push cmpl daa test add sbb (bad) inc in repnz stos sti pushf fiaddl inc jg cmp and cmp xchg gs lcall jae xlat sub pop sub cmpsl push adc mov jb xor xchg cli lds inc jp xchg mov repz mov lds cmp stos and rcl in clc sbb jp pop pop mov imul out ss xchg xchg popa push mov imul jle adc lods in insl sub fstps ds jp scas xor into dec ja ljmp bound jb jle hlt xlat stc xor xor mov sub orl and push pop aas mov cmp movb callw dec popa mov shld jno dec test mov repnz lcall mov push push push and pop fbstp mov rcll xchg sahf fimull jb fwait insb jb insl cmc or push divb sbb mov pop add add lret xchg (bad) jae xlat (bad) dec sbb xchg sub scas lea popf cmpsl mov pop mov ret pop jnp cmp jo,pt and or rolb ja nop ljmp int outsl cmp cwtl fnstenv adc push xchg inc ja sahf test es out sub out cmp pushf repz pop out jnp and shl pop ret test cmp cmp adc stos xchg sub mov mov cmpsl and or and int cmp cltd inc mov jecxz enter add pop aas inc push mov cmp and or mov pop ret cmp push enter push imul adc pop pusha cmp imul aad sbb cli ret sub ss lret add mov rcrb push pop dec dec out mov push lods aaa pusha and mov dec push out cli mov jo cmp sub aam sbb rcr in das adc mov inc aaa out adc int mov pop cld add cmp jge js lret das scas jo test es mov jns in fdivs lds push fstl std pop lock pop int3 cmpsb xor dec dec mov sbb xchg adc ds ret lds aam in aam xchg xor (bad) (bad) enter mov stos sti and mov pop les lret and xor pushf lods adc in or adc into mov movsl test xor push movsb xor jg and xor prefetch or fistl pop ret xchg jl addr16 les lock insb jle sahf mov push cmp sbb cmpsl mov dec jecxz cld pop and nop lret into rolb jns daa jbe inc idivl mov xchg mov xchg xchg aad (bad) jg push addr16 fstl cmp ds mov or sti or inc cltd add adc sti add cwtl call (bad) xor pop pusha push mov jecxz sarb lds xor push sbb adc mov and (bad) out push movsl xor lret call inc lret in and and jmp mov popf fwait jg mov hlt adc ja sbb lods push jo (bad) lahf frstor mov std jge mov imul sbb popf lcall sbb pop jle lods pop in rcrb shl jns mov lds xchg in xorb cmp insl jge,pn cmp (bad) xor imul mov roll daa out cmc aas cli fadds ret jnp mov stos fdivl in frstor fdivs mov and sub roll dec mov pop pop in xlat test test mov outsb (bad) rcl ja sub popa jmp pop lret jns loopne es and jmp mov sbb call jg jo std dec pop cs pop sarb in ds dec hlt cmc mov mov imul mov sbb gs lahf outsl sahf pop rorw repnz fdivrl in enter idivl ja push xchg aam push lock push call push pushf mov inc jg movsl sahf stc sbb add cmp push or cmc bound xchg mov mov pushf xchg sub ds sbb xorl mov fisttpll dec adc mov xchg xchg mov sub and test out nop push leave aas imul (bad) jne sbb stos cmpsl sbb rorb mov shll pop push movsb les jp rcl pushf cli cmp pop pop xor pusha xchg loopne xchg (bad) in sti outsl ss jmp mov push out sarl push lock jbe lret (bad) shlb adc iret sbb into loopne cmc loopne jnp in sbb push cmpsb push xchg std push rorb xor mov cmpl add scas pop jbe,pn fmull xchg pop popa push jmp and add ds fcom adc push ficomp rolb std and add arpl xchg push inc jg in sub mov pop mov dec and sarl sub cmp ss into cli ss stos clc hlt bound fdivl lea roll int std mov adc jnp pop add mov cmp into pusha pop adc jae mov aam jno add jnp and lea push inc xchg test popf fildll pop int popf sbb fs mov mov in std loope mov and mov imul lds jle pop fnsave aad sub std jbe pop pop loop lods mov daa mov cmp pop add sbb test jae test dec jecxz mov fildll jb cmc pushf xchg loopne xor test sub cmpb and data16 cwtl cltd loop (bad) pop (bad) xchg cmpsl imul (bad) jne sti sub jle adc pushf cwtl cltd loop sbb cmpsb fdivp mov jno pop iret idivl outsb out call add cmpsl inc test cmp or adc in cwtl pusha es cmp negl pop mov in jns push add cmpsb jge xor iret cmp mov xchg and fwait xchg pop add jae,pn fisub mov sbb mov addl lea ss sub cmp ret fs je push push aas xor sub lcall pop nop loope aam inc test mov in sahf lret pop cmpsl xor test add sub repnz mov (bad) repnz enter test popa sbb es test lcall popf cmp xchg pushf fwait push shrb cld (bad) pusha jb xchg inc lds scas mov (bad) lret push push ret mov shrb mov mov cmp rolb push stos mov push orb test mov sbb imul mov stos and xor dec movsb adc test pop mov outsb xor out sub and xor jmp jns inc ret call adc out xor (bad) push outsl dec daa out sub cmp dec fstpl inc adc mov icebp mov jp push jne mov (bad) fcmovb data16 int3 imul xchg mov bnd ret hlt arpl vandps pusha cwtl cmp sub icebp xor xor hlt shr mov jo scas and inc arpl in mov jecxz ds adc mov dec mov adc sub cmp inc jae mov inc dec dec (bad) scas pop or pop pop mov movsb mov lods data16 push pop dec sbb add arpl add push and mov cld decl push jne nop dec jmp inc mov hlt mov (bad) adc and sbb iret jo and (bad) mov cmp (bad) sub sub lret hlt cs lret xchg mov and xchg mov loope nop inc sbb jl fisttpll ret fcompl in xchg mov mov leave sbb push cmp push aaa or ret (bad) negb pushf cmp loop rcr mov inc xchg cltd inc in (bad) lret dec repz sub cltd sub sbb mov out cmpsb adc sub sub xchg in and call sub mov mov popa iret sbb jae dec adc sbb mov lcall mov std cli pushf pop cltd sub pop sti sahf and dec sar push in pop fstpl cwtl pushl pop xchg (bad) sub insl int3 scas aad das sbb or ret or lods mov outsl dec xchg add lea dec fmull jae cmp dec leave sub ds jbe test dec xor cmp inc fnstenv xlat add mov and adc in fstp mov jb jo mov adc pop ljmp imul jmp test add cmp stos inc push inc mov loop jmp inc test aas mov (bad) mov shll jmp mov mov push jl pop jnp int sub gs mov sub stos popw sbb pandn shrb xchg pop mov cmp jnp mov loop js les add repnz daa add sub pop pop scas aad mov ffree (bad) or dec imul and popa pop lcall jle lods js sub (bad) lods pop mov mov (bad) push and (bad) mov and push dec fcom mov xlat out (bad) cs and push jp cs xor or (bad) adc sub sub (bad) xchg fstpl and pop mov inc cmpsb std out sbb enter and cmpsb mov test scas out push sarl xchg lret sahf outsl in dec shl adc loopne inc mov xor out stc inc lods mov lcall xor test lcall jae sub mov mov imul (bad) out incl aas sbb sub mov cs pop pop sbb sbb sub or xlat xchg and loop (bad) xchg push xor inc into rol dec dec push dec ss ds xchg pop cwtl or add or fsts aaa les mov int3 sbb cmp out mov (bad) in add dec stos fidiv push and pusha jmp xchg and enter int out dec popf outsb pushf mov out (bad) fs jmp int stos xchg insb loop lahf sbb movsb push movsl jns cmp and cld test pop pop (bad) jge cmc arpl data16 xchg xchg movsb loop mov mov cmp subl mov sbb and or in pop xchg xor push movsb jae sbb cmp jo (bad) xchg or xlat add push lcall fisttpll bound ror fiadd cmp jmp aam sahf push clc cmc (bad) jge fiadd out dec std aas jno dec stos or sub cmpsl mov add dec pop scas and enter cmp push mov incl or cli cmp inc add dec add add jecxz xor lahf sbb inc aad insl lods aam popa mov das insb jnp int3 push jp dec scas fsubl subl lock ficompl cld add ficomp push arpl test (bad) les stc sbb out rorb ficoml dec dec add outsl in faddl inc insl ljmp or jnp clc xor pop inc (bad) (bad) sub cmc cltd je xor xchg sbb fadd (bad) mov js pop aas mov les pop mov les or or push test rorl icebp inc pop or sbb icebp inc mov push repz lods popa addr16 test rol jle xlat and imul mov pusha stos js and loope or push pop inc xchg je lock push outsb imul mov mov in das sub loopne xorb mov mov mov adc (bad) iret fs push std jb inc test sbb push int3 repnz mov push pop jo jg dec xor std xor (bad) ss lret jecxz pop cmc pop mov sub jle add mov lcall outsl and push inc int int3 enter outsb xchg cmp pop fldcw cmpsl iret inc push mov sbb out sbb lock push xor adcb sub adc jl sbb and xlat inc mov mov mov in xchg (bad) dec jmp jl pop push adc adc add test and pop mov insb pop cmp hlt lods sbb sub je (bad) aad dec and add xchg ljmp fs les sub push xchg aaa jecxz stc pusha mov push xchg jl mov (bad) jbe push xor add into cld push fistl and adc mov inc insl idivl sahf pushf xor lcall stc push decl mov cmp xchg cmpsl test jns (bad) jns fdivrs lds push or add xor test fisub add dec cmp das mov movsb mov xchg out jge scas std repnz jecxz int cmp mov sti sti sub mov sbb pop push in mov add add or or cli dec test sub dec inc jmp or cmp mov xchg and sub xchg pusha mov dec dec imul ds mov and mov push jo xchg fnsave outsb mov mov sub xchg mov out cld and sets into mov cmp sahf js xchg cmp mov xchg jno aas push in test pushf sub or ficom push dec movsb or cmp mov mov sbb test cwtl jbe (bad) xor cld fs inc cmp or mov imul sub fs aas roll sub adc rcrl fstpt test lcall adc pop mov inc lcall jns jge push jae lret aaa mov xor and cmc imul mov ss mov push or testl loope ret jecxz ficompl mov addr16 xor dec mov out hlt pushf test in mov mov mov aaa in out sbbl mov lds push outsl sub or pop fidivr dec ror mov cmpsb aas ficoml sub bound mov and jg std mov xchg and test mov ficoml push cmp in mov out jns xchg lea sti fs inc adc fsubr sub sbb (bad) fsub das loop scas lock adc (bad) outsl or cltd mov dec lock dec ljmp clc and mov mov jge mov inc mov ds test and lcall into adc push sub popf es pop out in adc in mov jb (bad) negb add test stos pop daa lahf idivb mov mov adc sub test dec loopne leave sub xor mov xor cld jnp jnp adc lahf dec xorl fimull lods out lret test lds adc movsb popf push pop sahf mov or adc int3 js dec and xchg movsb jbe outsl imul gs or (bad) es pop dec and idivb mov adc (bad) sub leave clc (bad) mov (bad) test push aas negl inc dec mov movsb aam cmpsb adc xorl pop (bad) ja,pn pop mov xchg adc add repnz mov repz inc pop jecxz pusha fsub inc cmp ss sbb and cmp pop add or pop jmp rcrb push pop ss add aam scas lods call sub pop cmp test mov in pop fadd into ret cli inc and int3 outsl (bad) les mov shrl push in jbe fnstenv xor shll dec sbb das or jbe inc jle push shrb or movsb sub imul pop cmp cmp mov xor add and xchg in hlt rep cmp mov add add (bad) test aaa popa pop clc pop push test mov cmp xchg add jecxz cld test imul and mov jge pop sarl (bad) repz mov (bad) cld pusha lahf stos cltd into rcr je dec mul sahf sarl popa imul (bad) sbb sbb dec pop mulb push incl adc outsl mov add loopne xchg mov in cmp jmp adc outsl in and cmp or sub cs subl jb aad in fsubrs inc mov add cmp mov adc mov jb sbb das sbb sahf ds xlat jo dec add xchg loopne adcl jb cmp add imul add pushf mov out mov dec inc cmp mov push sub jb enter xor mov add mov icebp into jnp (bad) jmp outsb inc mov cmpb or stos add sbb idivb xchg xor push test jge addr16 push ljmp (bad) mov mov xor leave pop outsl ja cwtl lret imul daa cmp subb les hlt jno pop paddw adc icebp dec adc clc mov addr16 das mov es or mul sub fsubs push pop mov mov fcoms dec mov lods inc adc ds mov xor add jno pop xlat sub dec mov adc shll js jmp sarl lret jmp sbb pop cmp or lahf or push lcall push lcall js and mov sbb xlat mov pusha pushf mov or or pop xchg pop inc shlb lea clc xlat and mov mov rorl imul je out call mov dec cli leave adc cmp inc mov ret xor cs inc pusha pop sbb aaa sbb pusha and sbb fcompl cld leave iret inc dec adc bound or repz fnstenv xor fistl lret cmp mov and cmpsb repnz xor push movb sub mov cltd mov and xor jb gs cmpsl aad das fwait and sti popw insl cmc push aaa imul jne shl or push lods hlt (bad) mov sbb jae add jo data16 sbb push ficomp sub dec int pop or jb pop sbb sub and and and dec push adc les push xchg mov inc mov cs loope stos pop or mov push inc mov sub stos xchg jnp xor push push (bad) jecxz popa loope cmp sub jge (bad) in xor int pop jl lods adc or push mov daa xchg popf xchg cli insl mov test push mov test jecxz decb jb fistl ljmp into sub mov test mov iret pushf hlt pop leave std push cmp mov or jp ljmp dec pop sub movsb sbb loope,pt sub pop cmp push pop bswap add in scas lret lret js push xor in xchg adc pop test jmp pop aad jg gs popf or mov sub adc mov fcmovb fiadd fimull repz pop dec out int loop dec (bad) rclb mov adc sub test push pop loop jl jb aaa mov lcall jb mov imul cmp hlt cmpsb pop add pusha pushf xor xchg xor stos bound clc mov je cmp inc call sbb dec xchg sbb add sub shr ljmp sub (bad) sbb sbb jne hlt dec push in inc daa push pop or pop ret xchg cmc add sub push les pop (bad) dec mov das push pop mov (bad) jg in call in insl inc leave out outsl ss pop loope scas fwait add add inc cmp jg mov mov xchg mov imul inc popl push adc pop xorl cmp fcmovu dec ret rolb push and mov xchg lcall dec lock add pushf aad aas cld faddl (bad) jns pop push in push test sbb pop adc adc (bad) cmp mov (bad) push fs add mov jb mov (bad) (bad) rolb je mov or mov jo or dec test cwtl xchg inc adc pop (bad) inc icebp cmc ret push xorl icebp sub inc mov and repz fidivr jle movsb scas mov jno cs or mov stos imul stc xchg inc hlt or xchg mov mov mov xor xor sti xor jmp inc lret loope das dec sbb push leave mov and push pop pop je sub push stos xchg es cli sub das push mov pusha xor movsb (bad) pop adc sub incb mov enter cmp imulb aad xchg mov xchg js loope aas add and pop pop fisttpll loop xchg rclb addr16 inc jno add (bad) leave aam in sub test inc (bad) mov mov (bad) test and lahf pop fstpt je inc repz xchg or xchg mov movsb repnz aam cld ret jl xchg sahf cs aas push push push aad (bad) aaa mov sahf pushf bound mov cmpsb jnp (bad) aaa or out loope adc lods in (bad) mov jle lahf mov xor jmp sbb popa fstps fidivl (bad) out and sbb jecxz xchg (bad) lret push (bad) mov stc jle sbb mov cli pop cltd jmp imulb rcr test sub adc dec ror dec push inc scas mov cli add xchg cmpsl pop test xor xor lods xchg repnz scas sbb inc out sub push sub int3 cmp cmpsb andl loopne loop jmp aas cmp jbe dec or mov lea and dec lock push es jp sub int3 mov loop sub or (bad) rcr out mov outsl fwait sub push mov jmp jae frstor incl movsl in push add pop adc inc mov ss sbb mov or out inc mov cmp gs into and mov fcmovnu lret arpl jo int3 fdivrp fmull jecxz test andl push mov or push and xchg jl or push fidivr fnstsw pop insl test int3 mov xor jecxz loop push and mov sbbl add or jge mov mov (bad) loop ja addr16 inc jle jbe notb jae push out stc ljmp movsb leave cmp sbb xor imul inc out insb je lock add std out cmp repz (bad) jb js in jae jnp push movsl sub xchg cmp xchg cli lea xchg add cmpsl adc dec jo mov test pop push xor sub je scas or lea inc sub or (bad) cmp add adc fadd add scas movsb xor cmp dec push rolb sahf dec pop icebp imul nop fldl pushf insl jmp mov push cmp mov push xlat (bad) pop pusha mov jae out xchg aaa adc cltd sub pop std jmp pop push jge mov jp xor shlb gs mov ret and test jmp movsb (bad) jge inc mov push fsubr (bad) cli paddb dec and les int xor xchg jp out pop sahf cmc mov dec out push sub and xchg jae (bad) (bad) jmp ss mov xor lock icebp or xor iret or repz movsl or adc lret pop adc mov dec or popf mov daa js sub inc repz xor mov mov add daa lret dec dec loopne cmp mov cs icebp sub adc lret scas lods fsts into mov lods or pop add pop push (bad) and (bad) jbe mov lret sub gs sbb mov test fdivrp nop pop out xchg mov in xchg test mov test das ficompl movsb dec mov jo dec lods inc mov and cmpsl inc (bad) aam dec fimull xor cmp (bad) stos mov shlb ljmp fdivs pusha cs add and (bad) (bad) cmp xabort inc mov push inc popf ljmp cli jge xchg mov std mov cmp inc mov and xchg cmc es outsl stos popf lret roll pushf sbb xchg jb,pn jno negl dec sbb pushf test or adc xchg jae (bad) and std jns mov xor xlat cmpsb mov mov xchg in int (bad) mov push test ljmp push sbb outsb neg fadd xchg xor sti adc in fnstenv in movsl and dec adc ret lods inc ss add xchg mov rorb cld (bad) inc loop adc adc jno xlat mov jge jae jbe loop add jp mov dec loopne push push and repnz pop rolb nop push and test fwait lret jo sbb or push out lds test (bad) dec adc and cmp in jnp jae jne ja mov jmp popa mov iret fist mov dec cltd push sahf jl rorl call fwait iret ret insl lods notl js in adc (bad) mov push mov mov rorl scas dec lea lcall andb or scas sbb jg push and and sahf scas test add fwait ror jge into mov cmp lea pop stc sub inc or inc push mov push mov lcall jmp mov mov adc sti inc cmpsl popf je push mov stc sub nop cmpsb clc jge lcall mov cmp test out js daa dec add xchg clc jb push or push mov movsl ds pop clc push xchg cmp test jecxz mov out cmp lret fnop pop jns jb mov ja das jge xchg add jae mov mov jmp gs mov cmpsl sub lea xor in lret mov (bad) add pusha jb jno iret iret mov adc mov addl scas xor outsl loop dec push loope mov sahf ror aaa outsb outsl lds in test call popf mov lea in push mov jbe push iret in (bad) xor sbb sbb scas fldenv in and insb xchg nop adc pop cmp insl in xchg inc (bad) sub mov daa mov jg stos mov rcr nop jl fstpt lahf test sub fnstcw mov out dec add inc or sub jge mov stc or jmp inc int loop imul mov outsl and cld cmpsl dec or dec xchg push int3 fwait stc aas sub lods cmp sti jg mov ucomiss test in nop insl xor les mov mov push adc out ret test adc mov xchg or push xchg (bad) lret jb mov push ficoml fstl mov aaa stos (bad) icebp adc notb repnz mov inc xorl (bad) jo mov and andb jmp xor inc xchg and loop pushf mov adc jl (bad) adc nop sbb adc das add add fstp test jge decb notl pop jmp fdivl lods inc lock xor lock fs in pop (bad) popf insb dec sahf add andl adc enter jnp (bad) ja mov loopne loop xor xor clc loopne xchg mov pop sub xchg fs movsl jno cmpsb loope (bad) arpl pop gs dec dec flds add dec lret int3 mov or lea movsb mov out cmp xor in jb outsb es adc pop sub in dec (bad) sbb out xor ljmp xchg cmp xchg loop sbb iret sub mov lea insl (bad) pop repz loope cmp push cmpsb and push adc sub mov pushf mov mov pusha inc mov adc and aas sub ret lea pop dec ja (bad) sbb test and sbb lcall (bad) jge or fwait xchg fdivl popf insl in push mov sub imulb movsl jmp mov pop in dec inc in loope mov int mov inc stos cmp push add xchg pop pop jle sti leave and or out out pop mov sbb push insl mov mov loope xor inc jp pop (bad) jns fiaddl test fs jae adc jl fs jo push inc aaa enter inc mov and fmull mov xchg js jle xchg pop lods mov inc scas and cwtl cmp outsl gs cmp pop jmp sbb mov cs jg fsubr inc and jb xchg xchg arpl mov loopne jle minps in enter pop aaa insb lea or movsl mul lret mov xchg cs xchg jl fstp mulb jno sub fnstcw mov lret movsb in (bad) mov pushf xor lods and pushf or orl pop adc das leavew test xor hlt pop jns dec xchg jne in add clc xchg mov jg sbb sbb cld pop adc inc push xor push mov mov in cmp lea (bad) daa push or xor mov sbb repnz or aas push push mov ja push je adcl adc push data16 xchg leave add add jg add push xchg scas mov add xchg (bad) arpl mov lcall inc stc insl push int3 xor and pop test pop cmp push mov daa mov mov dec out lret add iret mov ljmp mov xor jb mov jnp adc mov mov and jne xor xor pop shll mov mov mov leave lcall push cmpsb (bad) mov sub jl bound xor xchg mov mov and setbe addr16 push loope subl dec mov fdivrs cld and push add sbb test lods sub fdivr pop jns add (bad) xor pop hlt mov scas mov pop (bad) xor xor cmp test xchg std (bad) test inc adc pop gs mov mov inc xchg sub into loope mov inc mov jo push and push cmp fimull popa sbb jne mov push mov mov jmp addr16 mov xor adc pusha jno mov dec imul xor jnp xor or push cmpsl mov popa mov mov push test lret sub inc repz sbb fdivrp pop out (bad) repz lahf cmp xor xchg out mov in xor mov mov leave mov in out popa jl xchg lods loope std inc xor repz aas pop movsb jle jns test aad xchg xorl push jmp dec sub jnp mov nop fcomps int in popf jns xchg mov or std push xor adc leave push test inc cs cmpsb push push push add rol ret (bad) es mov mov fisub pop mov test or loope lcall in mov mov imul mov dec adc xchg ret push daa or mov xchg push popa adcl call repnz daa lcall sti and inc push jae (bad) xor lock inc mov jbe movsb gs scas (bad) inc dec out rcll cmpsl fdivrl call rcl xchg loop adc into (bad) movsb fs arpl xchg mov inc pop das and mov sbb pop cvtdq2ps fcom fcoms sahf mov push and xchg pop mull fisubrl data16 es sub fcoml popl xor int dec inc popa xchg inc flds lahf cmpl mov cmpsb es lds mov jle dec nop push data16 notl xor push dec jg mov dec lock ror aad shl bound pop repnz mov sub jecxz xchg adc cmp xlat jae out mov dec pop push add lret xchg subl dec (bad) pop push data16 hlt arpl dec lods ljmp xor shll std imul jge add clc lahf jmp test xchg ret cs outsl repnz rcl ret daa cwtl xchg inc mov adc and push cs push xor js pusha adc xchg jp cmp adc insb movsb xlat mov mov cld (bad) push dec dec xor dec shll fcmovb rorb or aam pop ds jg pop push xchg out xchg or xor mov stos sbb popa cmpsb push repnz popa gs (bad) gs sti fdivrl and and movsl dec pop cmpsb xchg mov je rclb fwait repz pop popf jne dec fdivs popf dec orl xor and imul idivl fisub adc push outsb push imul mov leave or ror mov inc int3 lret daa aad aas call pop mov int3 mov sub test je xor and loop sbb pusha mov xchg cmp icebp pop pop out cwtl imul push fldcw xor cmc mov iret pusha in xchg sub outsb scas negl inc push leave cmp hlt shrl xchg mov sbb dec enter xchg or adc add cmp mov mov pusha popf xor (bad) jae inc sub and (bad) cwtl dec fwait ud1 aam adc (bad) rcrl pop xlat adc cmp insb add arpl and push subl scas ret push cmp fisubr scas mov jmp jne out and das ret xchg and jno hlt notb stos mov inc (bad) dec cmpsb pop lahf jb das jmp add mov mov pop idivb or test jmp aam add rclb lods inc or lea ja cmp fwait mov and scas cwtl and outsb sahf mov mov jl in sub or or mov daa sbb icebp cmpsb testb and jns dec movb mov mov mov ds and jecxz sbb imul jae divb movsb ret nop roll pop pushf inc or push test fidivrl mov xor jecxz aad xor std fdivl sub xor xchg push add pushf in inc push inc dec loop pop xor dec mov dec fimul push mov pop inc ljmp into mov mov push fcoml je add pop inc cmp loop jns repnz into xchg xchg cmpsb lea push std outsl loope inc jp leave les xor into mov xchg sub insb fcomip dec mov jge mov imul daa fimul repnz lea cmc cmc shll and jne shlb push cvtpi2ps into cwtl pop lcall ret out lahf (bad) cli insl cs mov lahf dec lods pop out sbbl jne jae aas add jae leave test in sbb inc fildll stos push ljmp xor icebp loop push std cmpxchg out leave and xor aas dec fsubl inc push and fsubs add pop jle out int3 jb (bad) cwtl scas xlat push test dec into out sub sbb sub fldl add inc sub xchg call push fstps and test das subl movsb pop sub cmp popa sbbl push gs cmp dec dec ret and jne loope mov dec (bad) dec ror sub lcall pop inc jb dec push insl bound add inc jae jo out mov es push push push data16 hlt pop dec scas mov frstor adc dec nop mov lock hlt rol fwait sub push xchg bound or das mov cmp xchg xchg jns (bad) call xor push pop ret mov int3 adc xor mov and adc in jae adc movsl adc jae dec in addl xchg (bad) xor js cwtl mov jp (bad) stos and sub loope mov add mov dec in cmp std sbb movsb push sbb fwait sti repz movsl cmp and (bad) xchg cmpsl add adc cmp test fildl sub jb lods mov mov movmskps inc xchg inc mov lret push pop or and mov mov push pop into mov (bad) aam imul adc pop cld dec pusha cmp cld push aam pop loopne (bad) push pushf xor pushf jnp imul shlb out push ret mov push aam cli loopne push dec push pop vpshab ss inc arpl leave (bad) lock mov jl dec aad sbb xor jae push cmp out repnz cmp fwait lods jp in sbb adc mov das xchg fmulp dec stos adc jl sbb or stos cs mov sbb loopne adc aaa mov std push or xchg das adc push bound movsb xchg pop stos ss push add aad loop scas fisttpll int3 pusha rcr mov lret dec jmp and mov test xor jp in push or cltd fcmovnbe inc insb push (bad) cmp pop jns xchg jle push cmc add into insb fstl mov nop fdivl jns into pop (bad) mov or xchg dec dec loope push xchg sbb mov jae fidivrl bound pop ret (bad) xor cmp xchg daa test push mov inc sbb add push adc aam scas fs sbb vpaddb jecxz sbb jle test push lock mov and int xchg test dec mov stos aam jmp leave xor aas cwtl jmp sub xor jns ja xchg stc sub sbb pop xchg inc out push iret mov dec out inc or ret loopne,pn mov scas sub ret push sub push addr16 dec inc sbb outsl mov lret push xchg jl dec (bad) cli xor fistl movsb or pop jecxz pop mov push inc subl repz icebp sbb js aam nop dec cmp and cmpsl nop xchg (bad) lret push inc and out pushf mov push jle push cli push push pop sub movsl or sbb mov xchg inc cmp adc and (bad) inc movsl pop cwtl jae jl bound jg iret mov fiaddl fdivr jge pop fxch gs sbb adc cmp xchg (bad) sub cmp dec and push mov jo ss jge push pop aaa aam fdivrs mov aam cmp adc and sbb mov ror aad orb cmp push fsin xchg stos test fisttp adc pop jne js icebp test inc ja and repz ja es and sbb orb ja push bnd and or fs repz cmc cltd xchg jnp mov xchg rol cld mov pusha inc pop push (bad) icebp (bad) cld xlat mov push int3 outsl idivb and mov xchg sbb xchg inc in fadd push sbb and xchg fmull outsb push adc push mov imul in add jne fs cmp mov ficomp mov lcall xchg lret push xchg lret lea push (bad) call aad sbb or add xor mov aam mov ret sub rcrb adc (bad) imul pop out and fist jp (bad) xchg push fildl test jb mov sub xor in pop daa out sub cwtl jae sbb lods das or ss (bad) imul sbb add gs inc imul icebp js,pn stos add jecxz ja adc push scas in jp xchg or xor loopne jge sarb out xchg cwtl jl or mov xchg fild in cld sub testl mov loopne inc shlb adc xorl inc push or pop dec or push pop xor fcomps sbb shr push inc adc dec jne in sub sbb inc sbb and mov push stc mov pop arpl mov insb inc and pop mov mov sbb lods adc into sbb ret push lods gs outsb or push sahf adc fsubrs sub (bad) mov and jnp aas cmpl sbb xchg addr16 xchg into sti test cs aad in sbb cmp jno pop movsb xor (bad) cmp test jo je test cmpsb mov mov mov addr16 add ror pop decl insb (bad) movsl stc std sub aaa mov loop pushl mov pop sub in aad jne dec in mov or inc (bad) xor leave (bad) mov pop sbb fwait aam lcall cmp movsl addl adc pop sbb out fdivrs stos inc sbbl cs inc xchg pop movsl mov ficomp call xchg jne mov sbb lret cwtl mov push bound cmp out inc loop push inc ficom mulb or fsubrs mov repz out and add mov mov sbb aaa and push inc mov jo mov lock adc push inc add jp stc jl jle mov aas ror dec xchg mov nop imul repz jne test rclb ret pop xchg jg dec xor addb mov pop push jmp (bad) xor pop pop sub sub outsb or adc leave (bad) pusha cmp scas xor dec mov cmpsl inc incl or mov pop pop in ljmp dec imulb push out sahf dec loop aad xor test int3 push or inc add xor ljmp push push bound adc aaa data16 (bad) sti pop dec scas pop pop scas ror xor jns push iret addr16 xchg scas adc or adc (bad) ret adc imul mov push add jo popf pushf (bad) lret insb fnsave jns mov stos in popa mov (bad) hlt stc add pop (bad) jl int ret (bad) xor js (bad) dec sbb jl scas dec enter inc jmp fsts xchg fimul xchg add fwait outsl cmp into pop rolb or jb int3 push or arpl (bad) cmp fbld cmp loop out icebp jbe xchg xchg jb movsl loop cwtl mov mov pop inc sub push or ss mov in fs loop pop in js mov and int3 iret adc pop mov adc insl xchg push js inc out mov mov fs in pop sbb popf and pop pop push popf movsl rcrl in inc lret push lret sbb lds mov ret ljmp je out push fsts stos inc cmpsl xorb addr16 aaa cs cmp sti cs cmp jl mov stc daa pop jnp dec adc lret jae dec rolb add aad stos xchg loope lcall inc outsl xchg or push or imul sub aam dec mov and imull or mov call mov push sub insb test mov pop sbb jae mov add int3 in cmp in push mov sub fs (bad) icebp mov and add mov lods aas dec dec ja ja jbe hlt push in cmp pushf push cld sbbl jmp cmp cmp xlat sub mov dec sbb inc dec or mov pop adcb sbb aad push mov mov or ss rol and adc sbb and or add das scas jmp sub mov mov mov mov xchg mov icebp les jmp int3 jmp mov in cmc xorl imul jnp repnz xor dec jns out movsl test mov adc sbb pop cmp mov dec sbb adc adc scas movsb in and sbb xchg adc ret jo pop ror ja out cs sub xor xor jp dec or insl pop push out (bad) je fldcw xchg mov jne pop cs icebp xchg and pop mov pushf adc sub push sub inc int3 leave test cmc pop fdivp ljmp ss mov or in loopne nop dec mov pop outsl mov (bad) repnz and movsb pop cmc inc hlt or mov jecxz mov mov mov mov aam imul scas inc pop xchg or sub fcomip mov jmp aas jge loope dec (bad) in xor test (bad) push stc pop hlt sub or sbb push ds mov jbe xchg adc sub adc mov jbe inc add adc aad xlat movsl into xor stos mov push cs sub popa dec pop repnz dec pusha icebp push inc or mov ret stc sti and scas iret mov sub xor lcall lret dec icebp add je aaa stos jne push les push add xchg fisub add popw (bad) xor adc je pop jo sub outsl xchg rcrb xchg daa and shll adcl aaa xor (bad) dec ficom mov insb xchg arpl sahf adc les loopne sbb lock (bad) hlt xlat clc in mov push outsl mov fmul cli push std (bad) add hlt and cmp mov jbe daa daa add pop pop movsb pop pop mov notb scas (bad) out pusha mov cmc jl loopne lds add mov adc adc popl cmp jmp in pop add popa sub jecxz mov adcb sub sub int push repz shrl out adc mov test or dec cmpsl mov xchg sbb dec xlat sub roll or mov in dec ljmp dec rol or jo jle jp and and xor in or inc movsb xchg and xor push xchg mov inc and add in mov scas pop pop sub dec push call push mov vmovq jae push jno ljmp lods leave popf and or push adc jne lods popa mov cmpsb (bad) fildll cmp sahf bound loope popf test adc shrb rorb sub adc and mov rcrb enter jbe add (bad) mov sub inc sub cs cmc mov add mov xor movb add adc push out out mov shll (bad) int mov mov push push cmp test sbb inc outsl sub loop inc fsin pop movsl into pop sub pop ds idiv sbb adc imul sub push or addr16 fsubp movb fs inc cli das arpl and enter dec push sub add xor sub mov (bad) mov pushf mov (bad) fdivl dec cmp or jecxz int add ret je ret ficomp int3 xchg jge xlat js push dec inc in cltd divb aas cli sbb insb mov int and add repnz jmp sub pop addr16 movsb xchg adcl lock jno push sti add (bad) mov adc pop mov mov xchg iret repz mov push xchg jo xchg lods in xchg inc pop in inc or aas jo mov mov jp repnz or sub mov ja add jle push adc sbb xchg cmc pop sub cmpl xor xchg push xchg xchg sbb push add jg out lods je in mov stc pusha push mov inc cs mov pop mov bound sbb dec jp mov insb xchg jns icebp jno popa fdivl dec cmp sub leave sub daa and imul pop lods sub mov xor push mov pop push mov xchg pushf jno xor pop shrl inc (bad) jge sahf pop and adc or push popa xchg cmp pop mov xchg jns pushf cmp lods mov push stos xchg insl fnsave xor icebp lds or pop inc or adc xchg mov and or in imul sahf push jge js pushf adc enter pop iret add adc addr16 sub lds lcall dec mov loope imul pop jne scas mov popf pop fsubl sti out adc xchg and sub insb (bad) jnp push sbb mov push mov sahf mov cltd dec or jge pop pop jmp mov fdiv out pop lods ds mov in out jl rcl jbe inc adc into lcall push popf mov fs jle mov das adc dec lahf sub aas inc imul and pop das inc mov lahf in pop (bad) jnp xchg mov dec leave sub ret (bad) mov rcl mov sub and jae pop daa out mov into scas frstor std add lret and stos adc sbb inc stc out push sub adc cmpsl es pop xor test clc cld adc dec in lock pop and aas int ret add enter test pop inc mov leave and xor mov mov mov leave cmp mov scas fs mov cmp mov rcr push inc scas call int dec hlt lock and outsl lods mov xor adc negb pop int3 out lods add outsb fstpt std add outsb mov cltd (bad) dec decl leave jl mov rolb scas std push or push movsb or mov jns jno mov sahf punpckhdq rcll cmp aad push add out add or xor int3 mov xchg insl test testb xchg stos pop xor push jp jmp and negb xchg or jb dec inc or push out mov xor sub xchg adc cmc call mov insl cli cmp sub mov (bad) mull mov cli or pushf int test sub icebp (bad) nop das sbb leave sub es push sub daa aad pop sub add sbb cmp movsb mov rcl ret or add or cltd fcmovnu lods (bad) xor mov push xchg lahf mov jecxz fldenv stos jnp xchg jmp test jl sbb nop aad and mov icebp cvttps2pi test add lock fbstp inc sti push pop xchg adc shld inc repz loopne in jne ljmp add jo adc lret mov iret jge hlt outsl push mov insl pop and enter hlt adc pushf sahf dec shr sub fstpt das xor and stc mov xor or test into and into sbb aas lock iret cltd push cs ret jp popa or mov iret loop repz les xlat xchg mov push call mov cmp pop ja xor mov out loopne ret in xchg push push out arpl nop mov pushf sbb imul lea aas pop cld out pop xor add loop cmp mov daa fisubrl icebp cmpsb in aad les pop movsb mov cmp and ror fwait add xchg push fsubs inc cmc ret push pusha jae pmuludq dec dec xchg jmp dec push das bswap adc out push gs cmp data16 decb xchg xchg push mov add sub push (bad) ss fcoms ljmp test xor jae bound add dec pop dec movsl mov in pop push inc and cmp out ja cli movb shr mov jmp movsb cmpsl repnz dec dec cmpl stos cmp pop lahf loope mov in imul adc jg dec mov test mov lahf and stos adc pushf sub push fwait mov aaa fnop (bad) xor xor pop sti and rolb add fwait xor lret mov daa mov or xor xor ja dec jb adc inc repz stos sub cli push cld xchg sub (bad) mov and testl (bad) mov sbb and fcoml inc fwait jle jae xchg mov iret mov mov lret xlat pop jp jno add (bad) loope setae (bad) out cltd xchg cld add out xchg or gs sbb xchg cmp jb xchg scas ljmp in mov movl arpl (bad) outsl mov inc mull clc jg pop les xor xor mov cmp pop mov cmp inc or pop jne push xor mov or scas ret jp or xchg mov or push xor jle lods call add jge add jb adc push sbb ror shl push orb sub repz dec push jecxz insb add popf (bad) jae fcoms imul jno xor fmulp push and mov xchg popf sti lods mov cmc jo jnp cmp inc movsl jmp mov data16 mov aaa fwait rorl mov lcall lock add cld imul mov sti or addr16 sbb aas cmp arpl sbb leave (bad) loop mov lret ljmp lds dec imul jmp aaa movsb mov sub and push sub repnz hlt or push xchg sti sub inc jle mov addr16 in jo insb dec push in fnstcw test mov sbb dec mov xchg cmpl inc sti lret rorl xchg adcl push cld sub add cld sbb xchg fistp outsb daa rcrb jecxz jge push hlt repz ljmp inc dec xchg int3 mov cmc (bad) icebp ret or sub cmc xor pop pop inc les dec mov scas (bad) daa or and push idivb fstl cmp mov mov sbb mov xchg aad lea fisubr repz pop pushf xorl xor sub lock aam imul rorb jae popa aam fiaddl fwait xlat (bad) xor ret or pop fs push mov cli std out das mov mov sbb (bad) movsl cmpsl adc jl mov xor pop lahf scas pop mov dec lret das addr16 stos (bad) dec xor in xchg roll mov sahf mov decb jmp cwtl dec insl sub (bad) adc jne push negb mov pop push xchg xchg sub iret mov sub (bad) adc mov mov lret (bad) fs inc lret rcrl xchg outsb (bad) sub jne sahf mov dec jne jmp pop inc inc push sbb inc pusha push dec jle sub xchg aaa push xor mov into sub push cmp pop mov and jg jne bound mov cmp push out sbb inc xchg and movsl subb xchg dec inc lret mov cwtl aad sbb push pop out inc ret fcoms mov mov or xor mov in sarb jmp int3 into insb (bad) ljmp je xchg jb mov cmp popf push xchg add mov dec repnz (bad) scas popa dec adc jp or call out sahf loopne int3 repnz push clc jg inc mov into outsb inc or rclb jns sbb rcrl xlat enter add out jmp popa sbb rcll (bad) sbbl push fiadd jl xchg fwait cmpsl sbbb add arpl fxch add in ljmp push (bad) mov jmp push lods jae and cmp ret mov inc cmpsb cli sti scas ljmp data16 lea arpl mov rorb dec mov lcall push push out (bad) and mov sbb mov lcall add icebp inc (bad) push popa in sbb mov adc dec cmpsl fdivl mov add sbbl clc jo shrl imul fist movsb roll inc fstpl xor mov les push xchg in mov sbb call cld mov add mov data16 mov mov xchg cmpsl xchg mov imul cmp xchg or xchg loop mov ret xchg xchg jae je shrl cmp out clc ss les jp stos inc aad test stos out scas jg push xchg test or adc lahf jae int mov rclb xchg iret ljmp xchg inc loopne popa fwait stos xor sti aad call negl push dec dec sbb jle xchg sbb outsl ret shl sbb xor xor jmp imul js adc jmp rcrl adc ljmp jl add fmull push xor sbb push arpl mov adc mov fidivrl mov inc jle clc jne xchg push push pop mov pushf mov inc test cli pop sar jo (bad) mov sbb jle icebp mov xchg lret jae test hlt ret pop dec mov mov aaa jmp (bad) dec jp into cltd jmp xor cmp mov dec js or xor pushf stos fsubrp jmp sbb sti push xchg mov mov push cmp neg in or aaa jnp or nop mov jnp jmp xchg ret mov push jle repnz nop pop in lret add pop push add xchg pop cwtl lods add pop jne,pn xchg adc cmp jle pop das mov lahf pop out jb or aas or adc lea fucomi inc sbb adc hlt rol jp out rcll cmp out xchg insb push mov (bad) xor inc cltd lock clc lods mov xchg aaa push push aaa mov cltd jbe repz test sbb cmc or jge sub add cmpsb xor dec mov mov scas xchg dec out mov sub (bad) aam ljmp pop xchg int3 lea xor addr16 mov test jmp hlt aaa jns lret lcall call push add in push call and lcall fcmovne and pop sub imul bound movsb xchg mov scas cmc (bad) or aaa aam inc lds loopne cmp insl ret xchg jo scas ret mov or and xor adc (bad) jns xor hlt inc jge (bad) sbb push inc inc cmp dec scas or jmp sub lds dec sbb les mov lret cmp inc test jne xchg or dec aam xchg or out xchg pop inc lods in xchg scas fwait jge (bad) and or stos push jnp daa (bad) sub and fs mov push dec cmp xchg mov in mov dec xor in jg (bad) out mov dec (bad) lahf mov imulb pop cmp idiv lahf cs dec xor int3 (bad) jmp mov scas add or mov (bad) aad in jg xchg cwtl stos adc movl movsl push or add insb sub sbb call (bad) dec inc fwait adc xchg sub fldl mov lods rcr clc (bad) popf cmp xchg inc jno xchg (bad) shll les bound data16 dec das sar pop pop adc notb mov leavew push cmpsb loope mov bnd js aam (bad) lods pop call add xchg or push imul xchg out push mov cs (bad) repnz in push or test aam (bad) fidiv aam and dec jns adc adc cld scas ret jl fwait outsl push push inc push bound stos add movsl inc aas cmp adc cmp pushw xor dec shll pop into push xchg test pop jno mov push jno xchg cmp dec pop push bound ja int3 repz lahf daa cmpsl idivl lods test out idivl fnstsw pop mov fs fnop je pop adc mov stc jmp shlb loopne (bad) (bad) fisubl mov call movsb add jge hlt sbb and sarb cmp cmp mov push das xchg mov popa push movsb leave jmp xchg cmp xchg xor cmp rclb bswap mov push movl xchg add sbb sub xchg pusha (bad) xchg ds cmp push jb (bad) cmp rcrl jecxz (bad) xchg fsubl xchg sub or clc mov (bad) pop or jae int3 sbb and jnp out mov jecxz sbb gs push pop fildll and (bad) dec mov xchg mov xor xor jmp xchg lods and add sub sahf ss insl into aas cltd jecxz dec idivb (bad) push loope jae out sbb sbb loop dec xchg out fwait lock and int3 inc push fidivrl lahf sub mov fstpt xchg and jmp loop push sbb lret xchg adc xor add adc popf inc jge iret pop ficompl prefetcht2 mov lret notl out mov (bad) out xchg ja addb xor rorb jl lahf push jge jl cmp cs adc test test sub mov (bad) movsb push ss push jg cwtl dec mov (bad) aaa jns stos insb add int repnz data16 dec pop insl shr xchg fidiv in cmpsb mov add sarb addr16 (bad) push and xor hlt addr16 pop sbb fcoml xor test sbb inc pushf xchg rcrl jnp cwtl arpl movb aam gs mov (bad) rorl dec xchg push and mov les xchg fistl repnz dec inc dec adc xchg rclb mov jb push (bad) mov mov dec add scas xchg inc repnz lcall dec cs or stos xchg (bad) out popf pop rcl sbb cmp or jp ja (bad) jns adcl xchg xchg jecxz out dec adc xor fisttp cmp jno add jns lcall (bad) and test outsl pop inc fistpll jne dec inc ja mov add addr16 and mov sbb pop stc popa rorl sbb dec movsb sti icebp sbb imul aaa xchg dec mov xchg stc xchg jl iret xor push xchg (bad) fwait xor pop scas xor inc (bad) mov cltd mov std pop adc outsb lds fstpl aas cmp (bad) dec shrb and add push inc jne rolb aaa cmc add loop pop push pop mov (bad) jp xchg and sub cmp xlat and xor insb pop int3 daa mov xchg inc mov into in sub test adc imul call nop xor fs icebp sbb pop xor or ficoml pushl or negb std insb bound std sbb loopne aad fs iret pop mov jbe out test pop adc imul (bad) ja mov xchg daa gs iret sarl out cmp fptan out ljmp add pop lock fs jns es cmp cmpb adc pop rcrb bound (bad) jp ds push jp xlat scas aaa pushf add push mov pop cltd jp test insl inc cmp loopne ljmp imul in mov adc lret std push addl or xchg push ss xlat mov aad xchg out cmc call loop jp mov jmp stos hlt add inc fist or dec xchg mov call (bad) mov add mov jmp mov dec cld mov es aad decb inc ljmp lcall jnp xchg cli adc add cltd jp jecxz cmp pop xor jbe and stos cmpsb out and inc lahf cmc mov pop add mov fwait mov rorl in hlt test gs (bad) push in fs mov xchg xchg push mov sub cmp jbe sub mov push cmp pop and stos push js xlat (bad) xor testb pop mov mov mov push lahf cld cltd mov roll out xchg movsl cmp mov cmp shrb test mov push test or mov adc fs xchg out xor mov loop inc sub cmp movd aam add sbb (bad) xchg js push mov sbb xchg outsb iret mov rorb outsb aam shlb pop movsl jecxz lcall test lret push sub fldl pop ret xor fsubrl jnp mov int3 fidivrl lret jmp test push jnp jge popf sub mov push int mov (bad) cmpsl lds push loop adc dec icebp in jae (bad) adc dec std jecxz add loope push loopne push pop xor push sub lea cltd shll out mov or pop insb popa lock out add inc lods rorl dec mov dec movsb std stc cmpsb sbb inc mov jno push inc addl push mov or mov fwait dec push or and push outsl and pop cmpsl mov push add xor cmp ret (bad) ja jae xlat adc lock stc and jno mov int dec in mov mov or mov (bad) loop cmp inc adc pop push mov mov hlt stos mov (bad) ss movsl int and addb sti loopne cmpsl inc out es icebp dec lret mov sbb dec ret imul rcll dec pop (bad) mov daa test push lea mov (bad) jno into adc sub cmp pop outsl cmpsl and out int dec in pop dec or xor and dec in add insb fimull decl cld mov xchg xchg xchg inc mov adc stc enter cmp ljmp add pop add or sbb mov mov (bad) pop lock or sub aas js pop mov add (bad) (bad) pop aad xchg outsb negb mov pushl push xchg iret (bad) jmp repz mov sbb roll mov adc mov (bad) mov cli shrb ja fsubs cmp mov push imul in (bad) mov insb ret fwait (bad) ja push or push movsl pusha scas pop cmp mov int adc nop stos int lock in lcall orb or (bad) aam hlt xchg mov jge mull fisttp cs in jp mov mov xor jb cmp ficomp mov mov jae movsb test int3 sbb sbb faddl jb ds xchg lea or mov subb scas xor lods push mov mov sub and inc imul sub add push cmp or cmp push push insl xor push or pushw and cwtl adc int cwtl pop inc dec mov jbe inc test je bound jmp in les test cmpsb adc imul repnz sti mov (bad) mov fbld pop (bad) ss mov xchg dec ror add mov repnz pop fldt or mov pop mov sub xorl fxch bound stos sti xor inc jo sbb jbe cmp jns (bad) (bad) push fisubl mov push sarb mov lea fdivrs push jge cmp sahf fisubr insl daa incb push lods fcmovnbe mov (bad) xchg mov int3 mov scas test cmp xor pusha stos leave or aaa aaa sub push out sub mov fsubrs repz lret add fistpll loope sbb pop in or push (bad) ss and (bad) xlat mov push repz jle jl popa xchg repnz lret jge out stc lods push push daa fdivrp pop enter push push daa dec popf xor popf xor cmp rolb lret sub aad cmp mov sbb out outsl test xor inc add jae cs and add outsb aas push es cltd xchg out sub roll stos cli add xchg (bad) fidiv inc or xchg repnz sbb js mov imul fldcw sbb nop push stos stc cmc adc popa outsl cmp rclb fsubr in dec arpl in mov arpl jns cld sbb or fild test xchg add fs addr16 adc aad or or push test jae xchg (bad) mov jne sub lretw and push cmp lock mov push and imul dec dec jg pop iret sub sbb push adc lea pop cmp in lret push pop scas test push mov int3 lahf fsubrl out sti add sbb inc and xchg imulb or dec fcom clc pop dec enter jns mov fs loopne loope cmp or in (bad) in jmp xlat push adc sbb and dec jge ret jmp sub rolb (bad) movsl js sub dec adc inc sbb fdivr (bad) sbb push push movsb inc mov jecxz scas fiaddl movsl xchg dec icebp pop movl fidiv ret ja push scas xor imul sub push mov xchg mov popf popl test mov sbb pop adc and mov popf lods xorb lahf cs xchg mov arpl mov jle cli rcr add pop (bad) sti mov clc lods sbb and jbe dec mov hlt in sbb inc les cmp add aad imul pop mov loop les iret fstpl push bound (bad) insl cmc sti enter int3 jp nop jge add push dec nop add fldenv inc ss in popa fucomi push int3 cmp xorl shl jb mov jl mov push add xor mov xor aaa xchg jp scas call (bad) and cld lret inc xchg repnz sub mov je and roll (bad) ja dec push pop adc sbb int3 jmp es jnp and mov bound adc repz push lret sbb push inc lea cmp repnz dec jno pop test pushf in cmp cwtl mov pop xchg pop adc aaa fidivrl sub dec lock ror push int3 fwait arpl aaa add rclb ss into pop lret out sbb jg mov add jnp or adc movsb jb cli push cmc lods in inc hlt inc sar adc mov lods icebp jno pop dec xchg mov mov fistpll xchg push xor push dec or cltd in fisub ficomp pop (bad) push jnp imul aad mov aaa lds clc ficompl and xorb xor cs mov dec adc and jns aad jns,pt or adcb mov dec sti dec lds mov stc mov xchg xorb idivl loop inc lea xor cmpsl dec mov pusha xchg aam push inc push lock adc popf add dec cltd jmpw jecxz clc add nop ja fsubrl mov add sti aas (bad) xor les cld fisubr lods mov mov adc cltd jo inc das inc int3 push mov insb ja mov mov pop jp inc int xchg xor mov insl roll fdivs out out mov inc fwait data16 movsl and jle adc lret mov shrb xchg mov leave sub fidivl push mov adc push lahf dec prefetcht0 or fcmovne lods ror push (bad) (bad) in sti jns mov in in pop xchg in es decl jno inc fist or mov jl cmp adc sbb loope xchg leave sbb mov lret test fimull xor mov adc bound call push cmp jecxz sbb in insl call xor and inc iret sbb mov xchg jno jns sub pop sahf (bad) mov pop movsl aam (bad) mov js sbb scas and test and and cmp aaa add xor xor jne movsl int3 nop mov mov pop mov mov lods cli sbb ror add inc out pushf mov lods add pop mov and xor pop xchg mov pop (bad) es roll popf fisubl inc or jecxz pop push int mov ficomp pop jl aaa fiadd mov cld xchg push mov fiadd push lcall cmp inc add fidivl sub jmp adc es cmpsl dec mov sub inc ret mov fldt mov mov out int3 lcall cmp mov xlat or mov push add xor ret pop dec mov sbb and imul shll dec stos das stc popa and pop add ljmp dec orl jo add mov (bad) fisubrl jp mov dec cmp xor lret aaa lahf inc adc mov lock add ljmp sub adc inc js mov out inc mov adcl div mov fldcw shlb fldcw mov adc lock jecxz adc sub fdiv sbb dec btc mov mov cmp inc les scas push jmp xor jp dec xorb cld test aas fldt or push imul lahf push inc inc int ret adc mov gs xchg or mov aaa cmovs cltd cli enter cmp adc jo xchg jg push in shl cs data16 push adc pop (bad) (bad) std lret sbb or jnp pop test pusha pop cmpsl adc lock (bad) push stc adc cs xchg movsl (bad) jb imul pop mul lahf hlt inc cld test insl negl xor or ss jecxz cmp mov call insb pop jb xor or daa je cmp mov rol lret icebp push cmp std popa sub push scas push mov sub ja sbb jb mov rorb mov es or int dec outsl jb jp xlat pop add clc fcomps sarl (bad) nop (bad) mov jns adc sub jne ret int3 push aam lcall jns inc dec out pop ds js mov mov ret xlat xor jnp leave inc cmpsb aaa xchg pop dec out popa dec outsb and mov scas cwtl inc jp or mov jns inc push lret mov push and cld mov div pusha or mov pop cmpsl and inc xor (bad) inc mov sub les mov sub (bad) push adc sahf neg decl xor push push popf adc (bad) xchg mov xchg adc int3 dec dec lret ret adcb xor lret jle pusha loope jb xchg dec addb mov out inc add pop pop into add mov ret ja mov adc outsl push sbb mov sub jae test mov xchg sbb push popf dec scas in xchg lods xor mov mov icebp push cmp jg adc outsb mov lahf repnz dec or mov mov fmuls mov mov mov mov push cltd sub nop test cli add mull ret push cmp aaa sub cmp xlat jnp lret (bad) in movsb pop pop addb xor adc jmp mov stc add mov mov lahf cmp aas or out inc xor jo mov jmp roll rol mov xor test xor std hlt ror pop pop test fstps lahf (bad) mov sbb aaa lret enter lods adc icebp popf in ljmp cli fnop fstpl pop push lret mov std mov adc jno leavew lea scas mov jg dec pop push xchg jae sub lods mov mov add jge sub sub stc xchg mov jmp mov jle cs arpl jg or push popa ja mov xchg add mov lds pusha notb mov mov decb and sub or or push dec fs je sub pop mov xchg and movsb push andl loope xchg or mov sub lds jns adc (bad) bound jmp les sahf popa xlat fistpll repz mov or inc cmpsb ret cltd cmp stos mov dec xchg push inc dec fwait sbb or push scas orl lds jp mov iret xor dec shrl fmulp test scas es aaa mov orb and jne out xchg xor and sbb pop jbe jo or mov arpl xor mov loop repz fisubr or xchg mov mov sub pop or sarb xor sub bound dec inc xchg cmpsl sub sub ficomp xor sarb scas dec mov insb lcall rep or xchg aad push push leave inc sbb loope push mov push leave pop in imul in or push jae inc mov inc repz lretw mov mov mov jmp jo adcl int3 insl dec cld xchg stos sub in push call scas inc daa data16 call cltd jae cmp js jle push je out in js dec data16 in lods sahf sub pushf test jb inc xchg int3 sti xchg cli adc and fwait xlat dec lock andl adc cmpsl lea (bad) xlat add aad in aad xchg pop xor push xchg pop test add ja xchg push push iret jle xchg push inc mov stos call int mov adc push sub or stos cwtl (bad) dec scas test (bad) int3 js,pn and or or das fcoml je sub scas xor pop mov cmp insl adc fildll ret and vpslld sub mov scas cli sbb xor lods icebp adc jp or lock adc iret (bad) mov movsb pop int3 sbb dec mov pop popa stos mov jb adc sahf aas dec sahf pop je out adc add or imull (bad) mov loop out xor orb pop stos aaa fs cld and or jmp cmp fisubr pop lods sub jns lds (bad) adc and data16 push adc dec add jge test arpl arpl adc (bad) out adc iret jl lods (bad) xchg lretw sub xchg jecxz mov xchg ss sarb adc call add bound movsl fdivrp int notb dec movsl xchg test pop and mov jo jns jo cmp xor pop icebp out lea pop sbb mov (bad) jge pushf sbb dec addr16 sub int3 sbb jge or imul add loop ss dec jns dec pop je fldenv (bad) sarl (bad) (bad) lret and jo sub test push in es inc cld outsl rol fs dec jp inc adc fsubs push nop push mov out aam push ret pusha movsb movsl loope test aad mov push ret std adc xor cmp jb push lds cmp mov scas cmp rdpmc sbb fnop (bad) lret add xor xchg ret dec inc pop push adc aam push mov arpl hlt loopne arpl mov pop push pop out pop in lret movsb rcr push icebp in mov aam xor jno icebp ds ds roll outsl pop pop out out push cmp iret cmp addr16 adc negl gs pop (bad) pop lret sbbl sub fcoms adc jecxz cmpsl sub das cmp sub outsl cwtl pop aas mov add test fsubl jb xchg insb sbb in shlb push rol aad lret fwait test enter cld adc loop inc jne adcl das pop cmp push or (bad) rorl (bad) mov mov mov push xlat mov dec lea xchg push imull mov into cs inc int (bad) call or inc xor test pop cwtl pop ss pop xchg inc push scas inc add dec xor (bad) jb inc inc insl push test jbe push inc arpl pop jns add insb cwtl ljmp cmpsl mov mov mov or aas xchg and nop (bad) aas xchg fwait dec out bnd es outsb lock push (bad) push notl xchg add lods repz inc fwait rcl sbb adc adc xchg hlt loopne cmc jg ret dec loope addr16 and and jmp pop lods or xor ljmp mov xchg je inc sbb push shr out push pushf sbb std sub sahf lods popf rcr mov les xor arpl jb or rcll sti fwait lods xor orl rclb idivb dec jp sahf daa sub ja int arpl pop jo pop push pop jno sbb xchg jns pop decl inc adc inc adc sub and (bad) sahf pop lgs lret stos ss mov push jnp mov xchg cmpsb out push push adc sarl add mov mov (bad) fs leave sti movsl movsb movsl repz pop lahf jbe jno out (bad) mov int mov xor xchg fcomp and scas mov xor into pop std test and sub dec hlt mov xchg mov push xchg imul xor pop cwtl (bad) push pop jg cmpb (bad) mov mov faddl pop mov cmp push fbld rorb sbb movsl lods jae cmp inc pop push rolb mov sub jne and (bad) push rcll push enter pusha or cmp jge icebp mov (bad) mov fs sahf jae (bad) inc (bad) out mov scas inc test ljmp or xchg dec dec adc cmc add lods sub and (bad) outsl lods addr16 iret js aad lods jle add or add push cld push mov add into inc pusha cmpsl xchg sbb ljmp lret out and in push fldcw or out out test mov mov mov imul mov add ficoml or jne fstl push mov fildll ljmp cmp popf cltd je stc pop in add mov push mov mov and loope lahf mov lods (bad) jbe mov xchg or sbb gs dec (bad) scas mov pop xor icebp dec jle push sbb or out xor xlat imul cmpsb add rclb xor xchg mov lods xchg xor repnz es aam xor lret push adc imul adc std imull mov in jecxz mov jnp arpl popf add mov pop int3 inc fldpi scas xor popf xor in jecxz or jge inc cmp sbbl stos inc fsubs jmp popl arpl inc bound push (bad) aaa cmp fadds inc push test mov loopne push dec xchg ja add (bad) or in in mov mov dec or jge xor mov xchg stc insl test icebp mov jp sub cltd outsl cmp lock add push xor pop sub inc mov sub lods lret push ja sbb add mov xlat (bad) dec mov ficompl pop sub insl popf stc (bad) xchg xchg das loope mov leave je test rorb pop (bad) pusha inc add ss xchg push pop fnstcw outsb rcpps pop jg push add arpl mov add or sub hlt rcr test mov cld adc and jmp icebp push mov shrb out add imul enter xchg xchg dec imul je clc mov std out xchg adc cmp jns outsl push pop es mov jbe push sarb jns ret lahf inc out cmp rcrb or jp jne mov mov xchg mov dec (bad) inc inc inc jo leave (bad) xchg in cwtl mov push test jb (bad) clc fcoml xchg aam sbb sub sub mov popa (bad) movsb insb stos (bad) imulb (bad) jno cmc sub jne pop popa sahf lds insl rclb sahf ljmp les xchg loop cli jnp cmp xor aam xor cli mov das pop fcomip sub test pop and lods xchg jns sti xor jnp add adc mov lock and adc rclb lret dec (bad) sub rcll add cwtl clc aad ds mov jle lret push data16 inc dec aaa rorb cltd or lods pop jnp (bad) movsl outsb sbb (bad) ja sub or ficompl mov cwtl xchg adc jne and shlb sub pop test test out movsl arpl inc jg inc ljmp add mov cmp push sbb or rol rcr gs stc sbb dec add aad pop enter sbb jp ror mov pushf mov mov out adc pop dec ret fwait jg inc hlt cmp cmc movntps (bad) xchg pushf pop sbb es or cmc or aas jmp mov mov jno dec and or dec lret add mov pop sub (bad) mov cmpsl outsb lock push roll and dec pop ret lahf div cltd movsl test inc mov cmpsl hlt clc mov jns test and inc push mov pop jmp loope lcall stc test push nop (bad) xor sub xlat ss dec adc xor pop cmp call mov (bad) adc cmp jo in push jns push xor sbb sub pop movsl imul add cs mov (bad) ja xchg or pop test out mov inc and mov mov insl (bad) idivl ret mov es js call jb cmp fimull ja adc xchg adc dec push xor and retw xor add movsb bound mov imul in lea and lahf stc mov jle lea pop xchg and and or push outsb mov sbb jg mov in stos (bad) jbe ds adc rcll xchg jno jecxz ror cwtl hlt lods xor aas pop xlat xor out pop (bad) (bad) shll out sbb and or (bad) call ret mov sub mov lahf pop xor rclb or lcall xchg dec mov stos sub pushf fwait lds mov (bad) or addr16 pop sbb ds sbb mov mov cltd add fistpl jbe jl xchg in mov push fisubr scas or pop jne mov inc lret jo scas psubsb aam leave out push mov cmp aam mov mov dec cmpsl stc arpl outsl inc or push push ja mov divl fmuls xchg mov outsb add daa sbb lret and movsb loop inc shl adc pop test imul push and push add xor mov outsb scas xor mov test lcall cmp gs ss or int lods mov mov xchg pop clc mov jo cmpsl adc in inc test adc addr16 mov or push in pop inc mov divb adc lret mov adc dec inc mov outsl pushf push pop mov in ret xor js and sbb out jne call scas repz (bad) cli inc lret dec cmp movsl adc mov lahf xor and dec lea out pop jge push cmp jno dec pop mov loopne scas jmpw pop cmpsl push popf mov inc and cmp test enter add addl mov pop (bad) int3 lds cmpsl xchg cld mov push pop test pop mov iret cmp clc into mov outsb adc add sbb fadd jg imul shr fwait lret jae das add inc dec popa sbb iret dec imul inc es in insl inc cmp pop rcll xchg and loopne enter stos dec xchg fmuls mov mov push mov imul pop lahf mov gs sbb inc adc jno mov (bad) into cmp insl and mov push inc fdivs imul sub dec jp jmp push inc mov ja rcll adc mov shr ja inc ljmp inc cwtl dec dec inc fdivrl (bad) xor popf mov push and js mov mov cmp mov (bad) dec dec lahf ret dec ljmp lcall xor ss out scas pop arpl int mov mov or ljmp or fcmovnb pushf (bad) repz call mov xchg mov (bad) pop cltd out dec xor mov scas enter jmp out mov cmp cmp jge scas cli or (bad) sbb das xor imul mov fistpl mov sbb fnstsw mov nop test cmc (bad) adc lahf xor sbb in ljmp and sbb mov dec das out testb js sbb (bad) dec push pop mov jg pop dec js cmp cmp pop mov mov mov mov or stos or mov ss and pop cmp and and lock jle (bad) mov or sub into mov sbb xor scas add cmp outsb lds int3 and sti cltd pop and lahf sbb fstpl (bad) adc fs adc mov arpl lcall or rcl fisub jmp adc repnz lock je (bad) mov int mov push or cmp push sub mov ds mov mov loope xor dec lods jle stos das dec push iret cmp and rcll mov std or xor jmp aam dec push ret cmp or sub jmp lcall loop out repnz inc fs lods (bad) (bad) cltd lret and aam sub mov jnp cmpsb fs loope cmp jmp jl jecxz aad add jecxz inc jmp data16 popa jge sbb cmpsb pop fiadd test push test inc insl inc sti sbb lcall or mov push jecxz dec insb fucomi lret dec outsb cli sgdtl in xor loope outsb xor mov (bad) pusha inc aaa push lods mov push rclb stos mov pop sti es lds lret mov ja (bad) rcr testb cli adc inc fdiv mov outsl ret mov sbb and mov in inc (bad) mov cmc inc inc jo stos (bad) ss movsb adc iret dec mov ds push pop and lcall les aaa mov mov (bad) imul test cmp mov popa test mov jno in jne (bad) dec fnsave jne subl jge dec movsb cltd inc jle push dec pop mov jg inc stc or adc jp test call lock jns lret mov aas jg arpl mov dec icebp sbb jns sub cmp test addr16 lods sbb inc in xlat clc cwtl lea mov aad scas lods push xchg rolb ljmp (bad) lret sub push mov push popa mov sarb ljmp fs ja pusha mov ret cmpsl sbb aad repz adc and and cs dec fs jl pop int fstl stos test lret add js xchg xorb xor dec scas mov adc xlat push fsubp stos std bound add push jne enter nop ljmp mov pop in sbb (bad) (bad) cmc (bad) sbb clc sbb (bad) in xor (bad) insb mov mov fldz in pop add pop cmp fdivr mov loope jmp bound xchg add mov pop sub jg test pop and stc mov jb pusha xlat or and inc cmp lcall fist movsl bound adc add mov add int dec hlt (bad) push mov fwait inc movsb xchg xchg test inc pop and pop push lahf and lea movsl cmp arpl sbb shrl add jo sub imul cmp sub sub fnstsw xlat add js sbb cmp pop aad out lods cmp mov xabort pop repz lock notl je enter push or pop push enter mov stc xchg xchg adc into mov mov adc dec mov and xchg mov mov movsl fisttp jmp mov out iret test push pushf cmp sub movsb lds (bad) rep (bad) jle mov add arpl pop dec sti jnp jmp call bound cltd imul xor inc rcll sahf sub (bad) fsubl and aad mov (bad) jmp xchg jmp mov jno outsl inc push movsb pop lods jnp jo jle inc push repnz add jns mov dec or xor arpl (bad) call cltd xchg out mov js cmc or rcll js lcall inc sub or mov mov sub xchg push rcrb dec lods arpl repz adc xchg and mul stos sub (bad) mov or mov dec (bad) lret out rcr (bad) mov dec pop add lret pop sbb jo xor subl icebp insl mov xchg lret push (bad) and popa fsts addr16 mov negl xorl pop adc xorl hlt arpl jg mov jno pop push fildll inc or (bad) (bad) or mov mov jne repz scas jb sub cmp lahf sub pop jnp lret mov mov in mov adc int3 pop dec add inc jne cmc cmp stos mov ja loope ljmp sub xor pop arpl decb sub or lret lcall mov loope lahf adc and or inc adc xlat ret aas mov mov add push mov mov xchg mov enter mov inc inc test loope cmp cli adc stos or xor lods cli cli and cmpb fadds es ficompl mov aad lret inc lods daa push cwtl orb mov sbb lret mov dec cli cmp setge pop xor inc adcb xor or mov dec jle xchg cmp pop mov int3 xchg lea setne jnp jmp push push push jmp pop sbb add mov stos xor pop jge rcl (bad) jmp fstl cltd pop popa cmp les fmull push pop out mov mov mov fbld jno fwait push dec or or stc jo sub ret add aas or mov mov pop test and push jl sahf xor aad cmp add push mov xor scas js jecxz cmpsl (bad) out rcll in sete add cmp leave daa sub pop pop data16 mov faddp fcoms cmp in mov aas inc mov pushf jle mulb push arpl nop insb push insl (bad) div xchg mov mov jp mov loop aad inc push aad cpuid addr16 fs add ret dec out jle divl lret jo,pt aad gs or push dec int mov popf xchg jge popf scas je into fwait mov inc movsl push fucomi mov loopne movb out lahf and add push dec dec sbb sub inc pop add cmp pop cmpb lcall loope cld cmc cmp lods xchg cmc enter xchg insl enter clc inc test pop stc lret xor rclb xchg xchg xor xor mov enter sbb (bad) repnz mov sub sbb jmp push inc scas push mov jp sbb int3 in add jmp aam sub dec push je pop mov daa mov pop lcall dec (bad) (bad) scas movsb nop lock add test push push outsb (bad) rcrl lods jp mov lahf dec add call fldenv scas bound int mov add cmp jg mov fsubs loop pop mov sub and (bad) sub pop in stc inc in sarb icebp inc rcr xorps jae and pop (bad) adc daa mov sbb in sub xor scas cmc movsb and mov dec sti and pop jns lock outsb movsl xlat (bad) lcall push mov dec or sbb arpl std xchg dec xchg std stc in mov sub int3 call jne sbb lret shrb nop or jne repnz insb cmpsb mov bound dec test mov out out inc (bad) pop mov push ja mov (bad) sti push jl (bad) jo mov mov mov dec jo mov mov ret xor roll imul jbe dec jp cmc loope cli stc std pop clc sbb cmp mov jmp dec loop mov mov mov out push and or add insb daa sub mov jo ja jns add pop xchg xlat mov inc jae cmp fbstp mov lods int adc jae stc add test xchg in loopne cwtl or jo outsl pop or adc es js ljmp push ljmp iret pop cmp add cmpsb cmp lds ret adc push xchg xor shrb jle adc sbb or shl (bad) lods mov lock sbb nop mov dec pop mov xlat scas or (bad) shll add xor dec pop icebp js cmc sbb jl (bad) mov scas adc adc and movsl pop xchg gs aaa sbb out psubq enter lret cmp adc loopne jnp stos repnz jns ret js sbb mov test ss (bad) jno mov pusha adc (bad) je punpckldq sub (bad) push insl movsb fmul std push js xchg loopne lret rcrb add int sbb adc mov xchg pop adc xor sarl xlat sahf sub (bad) dec push sbb cmp pop test (bad) es push repnz packssdw pop push dec adc lret int3 xor lret frstor cmpl pop fcmovnb pop movsb inc das pop mov ret push or dec out cld fdivrl mov xor ss inc fdivr (bad) fwait push and imul or popl ss jmp test repz lret cld sub mov xchg inc mov das bound xchg rorl push sahf mov movsb xor adc add rorb sahf (bad) xchg push cmp adc jnp fistpll gs (bad) push mov pop mov cmp (bad) xor (bad) in pop push leave mov vcmpss lods xchg mov jmp xchg or icebp mov sbb arpl xor insb cli push and leave popa mov pop sbb sbb (bad) dec inc decb testl add mov mov xor jbe jae popf decl adc rorb arpl aam sub (bad) xor fs imul rolb mov das js mov mov sub aad test test push fidivl pop fs cs insl imul cmp jne dec cld scas mov out mov stos mov inc push js (bad) pop (bad) cli lahf pusha movsl xchg repnz aaa ret out cltd (bad) in sbb sub jecxz adc mov ret les daa xor push cmpsb or sub push inc jae sub mov pushf mov js sub cld leave fldl jl je notl mov push aas ret pop push lret xor mov incb mov push js push pop negl cmp and xchg outsb (bad) pop inc data16 mov xchg fcoms popf mov and cmp fdivs stc aaa mov movsl jns rcll leave sub fidiv lea (bad) add lret icebp test sbb mov dec xchg add hlt and mov stos pop push sbb pusha inc jmp lds mov and jmp pop cmp xchg or loope adc and loopne sbb nop pop cmp insb movsb mov stos fwait arpl in cmp (bad) ds std add (bad) jb sti xchg mov jp mov jo and mov mov (bad) fst test stc imul hlt sub daa mov sbb sbb adc (bad) adc stos mov roll stc ja mov pop and (bad) rol aad pop push mov jle lahf faddl fiadd fdivp aaa lahf inc aam push pop jge mov pushf lods fisubl fwait or das and mov mov fistpl jns adc stos jbe sbb pop push push push rcll (bad) or sti dec aaa xchg pusha mov adc push inc inc cmc mov or repnz call fidivr clc dec cmp push xchg test pop les out orb fs aam push (bad) cmp push jns pop ficom mov push insb daa decl add or (bad) cmp aaa mov pop sub rclb fmull xor mov loopne add and add xchg mov clc or sub insb xor push test xor cmp add outsb mov xlat inc lcall xchg xchg cwtl or jp sub mov mov lret js dec addl lock in sub sbb mov cmp push leave lock neg dec test outsl stc aam int (bad) inc stc cmp or add outsl (bad) push icebp idiv dec and mov dec clc cmp push ficom xlat push pop xor in ja movsl cmp out lods xchg cmp addl inc cmp lcall rcrl push lahf mov or je push inc pop push push les (bad) mov or inc enter insb and out xchg dec fiadd aaa mov xor lods int sub or mov das mov bound jp xor pop sbb js lret in out xchg ss inc testb test jo imul das sub movsl cmpl in pop pop sbbb pop mov xor lods cmp mov pop popa data16 push orb mov push test lea xchg cmc fs or mov std insb sub jo aad mov push push (bad) mov dec aad push jmp aad stos cmp iret lret adc ret fcomip mov ret push mov bswap pop cmp jp xchg pop outsl (bad) std sbb fwait xchg cmp dec mov fiadd loop dec inc testl xlat or fsts int3 cltd cmp sbb add jecxz pop loopne (bad) ja pop inc sti xchg add push (bad) mov test mov sub jmp cmpsb sbb dec mov icebp nop mov inc sub mov mov pop push (bad) push mov loope xchg (bad) xor cld icebp dec in inc sub stos cmc cmp int mov hlt dec push pop xchg (bad) iret adcl sub lret pop and mov jno test mov mov jmp cmpsb xchg mov int3 xlat rclb sub fdivr in shlb jnp lret push jbe into mov inc lret xor xchg test dec jge mov add jo lcall mov mov int pop aad dec xchg or aas add es xor or mov test fldenv mov ret idivl imul push fwait (bad) jle int cmp and mov das mov or pop inc add cld jns inc push mov push arpl jo lret mov jecxz fisubrl xchg std test in or inc pop mov sub push fdivs mov xchg imul ja loope dec push mov cmp xor jbe sar sahf xor mov inc fisttpl cltd (bad) mov fsubl adc cmp outsb xchg mov incl sahf mov cltd pop dec in ret sub sub cmp and cwtl lret mov aad pop xchg mov xchg enter mov fistp add loop mov enter mov inc cld das in cmp xlat leave jae xlat test (bad) ljmp fwait adc (bad) jbe imul div cmp add mov das sub loopne hlt pop outsl sbb pop popa arpl and gs mov es fcompl mov scas lahf fisubr gs xchg leave or add dec dec bound push cmc rol popf inc and cmpsl xchg sub inc mov popa and arpl (bad) cmc mov (bad) jno in mov dec jp dec fsubrl mov push or sbb add nop ficoml prefetch mov dec ss js sarl dec and arpl mov cmp pusha ds nop pop (bad) neg and mov mov jg sbb iret xor xor pop sbb mov jae xor jne mov add ljmp out adc inc dec loop repnz xchg sub mov xchg in aaa leave xor mov fstpl add push inc popa outsl add rcrl pop mov sub popf jle sbb jecxz aaa fcomps mov leave lahf (bad) lcall in cmp push pop jno dec out aam shrl push jp xor fmuls imul sub aam inc cmc xor and sbbb mov push scas loop add jb inc push pop ja pop sbb mov pop pop shlb lea dec lds outsl outsb pop mov (bad) out pop test pop sahf aad cmp mov xchg nop jbe iret daa jo inc (bad) mov adc test das mov out dec or xchg pop sarl mov sbb pop inc fwait cld sbb aas shl mov push or popf inc arpl ret imull stos lock lods movsl dec je mov mov icebp loopne (bad) in sarb cs push cs in (bad) sub xchg sarb or xlat and pushf lds popf outsb mov jns mov adc test adc inc (bad) or fstps fdivs xchg xlat adc push xor xor rol lahf or cli rcl rorl sbb clc mov push dec add push sub mov push jbe daa jae leave push cmpl inc fdivs stc (bad) gs jl out mov mov (bad) pop into cltd pop rcr mov lock (bad) cwtl test scas sub je mov std cltd lea add sar lret mov push inc test push call dec ficompl daa pop mull push pop out lds pop jno imul imul arpl (bad) loopne add mov test outsb add cmp add or mov sti leave sbb and iret cmpsb or pop push movsl or loop dec xor mov arpl cmp lock imul xchg mov sub push into push mov jb xchg xchg or enter push push enter and xchg ja push aam inc jns jge xor adc xchg loopne xlat insl and repnz cmp sub inc xchg mov insb loop mov sbb out jle sbb xchg sbbl xchg and test push in ljmp stc inc inc and test addl jecxz rol and mov in cwtl mov jg sub pushf sbb xor and mov xchg sbb std mov lea lret pop cli into sbb mov mov cwtl cli js out fnclex int3 leave shrb or add jb in mov hlt mov popf pop jp jg sbb pop mov in adc adc insl cmpsl sub or std mov int jne sbbl fmulp push repz sub push mov or sub mov addb ret cmp sub inc movsl fwait mov iret push adc adc and pushf icebp push orb jbe je add fwait push xchg fdivrp popf mov (bad) je pop repnz jmp sbb jae push and lahf xor xchg andb jnp adc cmovne xchg xchg data16 lret nop popa fsubrl inc lret mov mov dec or repz xchg sub aas push jmp mov (bad) pop (bad) rorl mov leave imul aaa push cmp ret xchg leave and imul lret outsb aam inc jle mov push inc jne jle adc adc pop js gs cmpsl pop mov popf mov jo repnz sar jmp jo jle bound cmpsb das pop cmc cmp lahf mov test push repz mov jns pop lods fimull mov xor fdiv push and ss (bad) js std pop iretw mov sub push jno xor dec (bad) aaa test in repz sbb dec faddp inc scas (bad) fdivrp or (bad) or cmp mov add call js ud1 in inc sbb xor add mov cli out adc mov xchg dec adc out lods inc test pop jl movsl in sbb js cwtl adc lea adc push insb mov sarl jbe shrb adc cltd lods ds jmp out jnp mov in out sbbb pushf (bad) xor pusha lods out ret stos mov leave jg pop jmp pop mov or std inc pop in (bad) aad fsubrl int3 outsb push mov xor add adc jge dec ja sub jge jecxz loop mov shrb mov (bad) jbe jne cmp mov in arpl lock popa jnp push mov jl cltd pop sbb lea (bad) test out fisub pop sub mov (bad) (bad) and and mov xlat outsb (bad) out mov mov cld push fbstp push popf aaa lret call repz mov jb xor adc shll inc add inc adc inc (bad) cs lret sbb push add loop cmpsb and cltd jle iret shll (bad) cmc ljmp or rolb and mov pop popf imul push popa mov je shl mov jns or adc adc adc dec or dec jbe dec and lods fdiv outsb cmp sub fildl adc aad andl add mov cmpb in (bad) fisttpll xor mov jmp call das jbe rcr inc lahf aaa adc push xchg mov xchg out xor add and push adc lods mov xchg lret jmp lods lds stc mov out pop les sbb mov pusha mov jns clc loopne mov out or cmp mov jo fistp ret sub imul cmp adc cmpsl insl test jecxz mov jo testl lret cmp pushf jmp jne xor sahf cmp bound mov test xor imul repz popf fdivrl xor jno clc pop pop add push inc cmp repz adc into add mov pop mov fimull loopne (bad) mov test cmp or or adc pop xlat (bad) fwait jno push pop gs sub test loopne cmpl les in enter or pop shrl push mov ja lods mov add andl or pushf aad mov les outsl (bad) adc xchg inc mov mov mov dec stos adc dec and dec sbb cwtl rorl into sub in push jle loope pop fsubr jnp lret add imull push test pop cmpsl jmp fdivrs inc mov push sbb sbb cmp sbb pop lret stc arpl mov frstor xchg mov jne fimull pop mov xchg adc jp stos fnop jo outsl sub icebp mov mov sub outsb cmpsl mov mov or inc mov mov test push and mov or fisubl pop shrb gs adc mov mov mov and dec pop (bad) (bad) jmp jne dec jne stc push andl dec mov nop mov jns not jle repnz mov imul movsb cmc pop sbb cli jnp inc jnp or es ljmp cmpsb outsl xor mov (bad) stc fcoml loope jge hlt popf inc mov cmpsl test push in pusha jecxz mull out int3 mov (bad) sahf mov repnz push xor mov int lahf aaa and lods popa test loop xlat or adc pop add adc mov mov es mulb jbe push (bad) jecxz ret inc scas push (bad) jne dec out and and xchg out adc add dec pusha add lods xchg lret push xor mov rorl xor or mov mov mov pop push push sbb ljmp pop adc cld ss test xchg xor test ja enter xchg mov andl fldl repz data16 addr16 or fwait push data16 pop jae cmp sahf repz std stc xlat adc outsl pop iret fcoms (bad) jno test sbb out lret adc sbb or fwait outsb test xchg mov ljmp popf mov and xor sub mov xchg test outsl mov loope jecxz je (bad) ret xor lret (bad) sbb lock dec sbb fdivrs fs mov test jnp repnz aas fcmovbe into lret clc sbb dec lds in mov mov cmp or mov popa inc clc cmpsl xchg or divb in dec push data16 aas add ss and mov mov adc ret xchg mov nop sbb or push or rep pop shll fbld push lcall test lods xor inc push int3 push sub inc dec mov adc icebp out mov int sahf repz out cmp cmp pop repnz cmp xchg jecxz dec shrb call mov cmpsb stos pop ss mov test outsl push jle push in clc or sbb hlt imul dec sub test jns xorl adcl ds test push dec rcr (bad) cld jnp cs es stos adc popf or push insl pusha mov scas lahf in push inc inc mov rcrb xor (bad) mov sti cmpsb jae mov ret jecxz adc push aam dec cli add sti or mov (bad) nop xor push add (bad) dec loope mov xor mov imul rcl enter sbb hlt pop xchg jnp arpl mov jle jb outsb (bad) in lock stos scas gs ret ljmp pop mov jne or push ja ret mov cmp lds pushf test jmp inc adc sub (bad) popf mov jae or dec add test lahf stos call sahf mov mov enter pop mov xchg stos pushf pop cmp cmc sbb addr16 or lods fnsave into pusha pop mov pop mov stos cmp (bad) ficom outsl ss scas inc shrl push adc ret xor jge out inc fidivrl mov dec sbb xlat in jecxz dec sbb pop aad mov fs hlt lret je pop (bad) leave loope mov mov adc sbb loopne fiaddl (bad) pop mov bound push jbe mov cmp inc pop es jp adc push adc jo lcall fisttpll rdmsr leave push dec lret add dec mov sbb pop adc repz sub into push fdivrl or mov lcall std push inc subl iret test inc xchg packssdw adc std mov jne or arpl pop pop loopne xchg sbbl or pop adc in lahf in stos jl jge addr16 push jecxz vpmulhuw cwtl jmp jb scas fwait jns xchg and sub dec (bad) cmp xchg pop subl arpl (bad) cmp out push mulb pusha mov pop xchg or inc shll cmovs mulb daa adc inc data16 or in jns icebp jp and cld insl xchg fidivl or sbb mov lcall leave or stos fist ficoml out adc mov add jne cltd xor hlt inc ss js int icebp push xchg sbb mov cli gs es sub inc push fcomip jb stos aaa enter xor sahf shlb sub std cltd jae xlat mov mov inc rorl clc push xchg xchg imul mov dec js pop mov cs hlt ret fcmove sbb sbb jmp sbb push call add xchg xchg dec sub (bad) xlat cmc pop lods lods sbb jecxz arpl mov jl cmpl push jge call sub push and inc ljmp push mov js ljmp lcall push movsl add jnp ss dec mov fs inc pop (bad) fs mov fmulp fmuls ftst sbb dec and (bad) push mov cmc fs and mov fidivl es fcom jb mov pop xor movsb sbb sub in mov xchg xchg mov cmp pop push mov loopne out repnz add jno dec test inc popa loop add sub iret pusha sub jmp fxch insl push sub testl push inc xchg je jns cmpsb movsb ficoml ss jmp nop in call cwtl in outsb lock push cs lret push fs and pop rcrl push iret xor mov push jae daa rcrb testl mov jnp sub repz jb je fist push mov adc std mov adc and xor pop inc stos sbb lret faddl rcrl lret mov int3 movsl sub mov into popf jg mov rclb fsts xchg sahf insb and xor movsl scas jmp add mov (bad) sti repz pop push fidiv out lret iret cltd cmp adc test mov sahf add add popa gs adc das dec sub int push sbbl lcall mov ret int3 incb inc adc cwtl cwtl aaa mov jns into cld jmp pop loopne stos fsubrl dec mov inc repnz ss gs jb sub jnp fcmovnbe jbe addr16 (bad) hlt pop push push sub nop mov pop test push xchg jo (bad) sarb out jne test jne mov mov movsw (bad) in sub and pop xchg inc rclb push sahf lock clc and movsb lods mov int (bad) dec je or mov pop mov movsb jecxz repz ficoml cmp fcoml lcall mov out mov jp movsl lea stos lods inc gs in out rcrb loopne hlt rcrb aad (bad) aaa in testl xor cmp (bad) fs das dec dec fcmovne sub cmp std dec loop clc notb push js dec or fist iret mov mov xlat cmp fdecstp xchg enter test and mov push inc mov fcmovbe stos popa mov arpl test cmp add movsl subb loop sti insb out pmaddwd mov pop add in cmp in addl fistl repz icebp aas mov lea add adc repnz sbb in test mov sub orl lahf push repz jne mov test repz (bad) and shrb xor push and out faddl jbe mov xchg jne fistpll (bad) sbb jmp sahf inc dec bound or sbb repz dec out and add mov pop out pop stos hlt gs aad xor aad xchg ljmp mov fstpt leave jno dec ljmp jae mov add (bad) repnz push or add stos and mov mov mov mov xchg aam and xlat fsubrs jle and cmp rcl aas jle jg aas lahf iret (bad) mov divb cmp mov pop ficom xchg test mov lret xchg xchg (bad) mov sti or jbe outsl jno outsb mov sub inc cld call jmp mov rclb stos inc cmpsb jecxz jecxz enter imul pop arpl sub inc inc xacquire sbb rcll jmp and addb fimul pop pop loopne cmp xor push call push mov push cmc mov inc cltd cmp (bad) icebp popa rcl jae xchg dec sbb stos cmp insl and stos sbb mov xchg in sub mov pop scas jmp mov dec imul xchg or (bad) fstpt jnp jl aaa scas jg xor adc or inc pop inc scas push mul fmull ror and das and fwait lods fcmovnb daa nop call int xchg shlb dec or mov or add pop clc roll outsl mov rcrl and mov mov sub pushf xchg xlat jp sub hlt dec sahf xlat dec cmp jle mov movsl add push sub test addr16 clc xor pop cmc cwtl mov (bad) push mov cwtl adc adc mov and je sbb les dec lods add addr16 les icebp pop or lods fsubrs clc or rorl (bad) fdivrs lahf repnz pop enter or jp sbb xchg andb ss imul xchg loopne pop pop mov xchg fildl xor int jmp std jmp push (bad) xchg cmp mov pop addr16 in sub dec cmp jge inc mov or mov ja loop xor (bad) pop inc (bad) pop repz sub push mov out push fidiv into sbb sub push pop imul insl or out or xor in popf xchg xor ljmp jns dec inc out iret addl fstpl js pop test sbb cs cmp cmc insl cmp cli loope xrelease mov mov mov push pushf push and pusha sti mov cmc enter xor ret xchg dec in ja leave popa cmp mov pop cmp dec scas push cmp jbe dec insl (bad) (bad) fildll or repz jle jo roll cmp xchg push mov xchg pop addl sti cmp sti out call jle test loop (bad) movsl or mov loope jns lret scas xchg pop cmc js mov sahf cmc push add lods es cmpsb mov (bad) cmp in sbb jno dec popa sahf subl cmp and subb sbb jmp jno ja mov xor scas jbe cmp mov iret inc jecxz cmp and call imul (bad) jmp cmp scas je pop cmc out mov sub sub xchg daa mov mov adc int aaa xor jb leave jmp int mov imul jp imul fsubs out sbb enter outsl lock call es adc sbb mov mov add lret push inc mov lea xor pusha lds mov push adc in ret aam fcom into repnz xchg jg cltd jbe add inc and fcmovne mov sub nop in xchg (bad) inc sahf lcall in pop pop mov out out repz enter pop out int in adc push ror sub jmp addr16 mov add ret test fistpll inc (bad) iret cmc inc call test mov pop jo or dec add sbb loope sbb xor mov mov fwait aad add pop pop mov or insb pxor dec sub push xchg mov bound rol mov jl mov cmpsl inc push mov jns jbe cmpsl add add popa inc or jle bound add xchg push in pusha ds hlt movsb or cmp pop inc sub pop sbb jo repz jecxz add cmpsb adc rcrl jne push pushf mov mov addr16 enter fisub out cmpsl cltd sahf mov push add inc sbb rcr das rcrl addr16 gs xor (bad) cmp pop inc out leave mov outsb inc jae int xor xlat add xor fwait dec ret test lods (bad) jne js (bad) or inc xor lcall lods mov inc xlat (bad) jge (bad) jp ret jle ret pop pop jmp (bad) mov lret repz out dec lea sti pop fcmove mov popf push lds or mov mov mov inc mov out push or inc test out push mov lock int cmp out cld mov xor fadd cmp fimull repnz test fdivrl fbstp mov hlt outsl jecxz js test in rcrb cmpsb lret inc add in icebp adc movsb mov inc pop cmp in mov push jl std xchg mov icebp lcall int3 inc jg mov les stos sahf (bad) jnp mov push pop in (bad) xor adc mov pop mov repnz cmp push aaa mov loope pushf cmp mov (bad) enter push ljmp lock das lea data16 sub or rcrb adc sub mov aaa (bad) test push and daa jle lds aad lret push push adc push movsl insl fsubrl std push pop enter enter test mov out xlat (bad) mov outsl aad push mov xor and pop lret lahf scas and sub ret and jae scas int3 addr16 shr dec (bad) mov mov mov jne (bad) mov cmp mov pusha fnop cmp push cmpsl push daa inc lock fisttp out mov mov push jno arpl lock fcompl xor inc mov inc aam mov and outsb sbb dec fistl inc int3 sbb or and mov imul sbb movsl xchg pop sahf imul sbb stos lcall dec repnz incb clc imul or push adc xor adc ljmp cltd ret add jg xor sbb cmc cmp addl adc dec test loope jp mov jae outsb lods lds test pop adc aaa punpckhdq mov out inc sbb adc or jmp test dec pop sub mov andb mov mov test xchg sbb mov pop pop push xor or nop je dec mov std cwtl js test std fs call jl push scas sub push or and xchg xchg jecxz enter mov sbb movsl mov xchg in sub xor pop popf xlat loop mov inc jmp rcrl mov jbe outsl cmp mov mov and (bad) mov lods mov jb movsb add sti fwait dec jg (bad) or popa push in and ret mov inc aas lock bound lods jge decl mov mov lret and ljmp xlat add push xor int mov mov sbb jle inc pop fsubl popa fimull pop nop dec fisub in jmp call sbb jp dec add push and popa test arpl push jmp or sahf cwtl adc cmp pop aad and orb cmpsl pop cmc pop (bad) mov pop cmp loope test fstl jb push cli fdivrs mov cmp cmp cmc mov xor adc pop aas sub push out es sub lcall cmp test dec adc iret outsl dec mov xchg jae (bad) lcall adc xchg mov outsb mov ret (bad) out ds rcrb sub sti add sbb sub pop sbb or lea cmp pop cmp cmp leave pop insb push movsb xor shll jg add mov jns test cmp push pop rcrl into mov mov insl mov mov or fistl stc jbe (bad) sbb stos hlt fldenv (bad) add xchg and mov adc cmpsl inc imul inc pop das mov xchg lock mov add hlt (bad) fiaddl dec (bad) cld frstor inc inc pop subl add fs out xchg mov and add cltd mov ret mov (bad) sbb cmp popf sbb push sbb test ja mov in fisttpll jmp or mov sahf adc or mov (bad) popa repnz out (bad) sbb mov ljmp gs loopne jmp xor out jb pop popa out jmp xchg inc insl mov es ret sub pop pop fcmovb dec pop fs aad mov orb xchg mov pop lea adc call jg insb std decb ljmp mulb or jo fldcw pop sahf jge not out mov fdivrs fdivrs push lret mov xchg jb imul and les (bad) adc push xor add pop shrl dec add xor ficomp mov and (bad) add push mov push stos dec pop dec imul cmpsl push clc (bad) jae push aaa movaps push (bad) mov out sahf pop fcmovbe arpl push xor and cs sub call xor rcll shrb sti cmp dec sbb push js iret mov xor bound stos push cmp cmp dec dec xor dec test xchg scas mov fmulp xor push nop jnp xor scas stos das dec je xor jo jl adc jge pop pop into xor repz sbb push cwtl icebp pop cmp test mov data16 xchg lcall pop add loopne xchg addr16 sti cltd ror sbb mov es cmp data16 mov sti dec lods aam cmp push push jmp sbb into aam pop cltd dec daa xchg lea ficom ficompl or push (bad) std cmp cltd dec mov fsubs push jb mov inc or inc sub xchg sub mov push push imul out and sti lahf stos pusha jnp mov iret movsl loopne pop test bound test cmp addl (bad) leave jl sahf mov hlt mov lods repz dec ja sti notb mov arpl stos call sti ss lcall cmpsl mov addr16 inc stc aas cmp mov lcall outsl fadds (bad) int iret testb pop testb cld imul test pop pop cmp aad in (bad) cmpsb int3 movsb sbb jno test ja lds incb or jbe add es inc mov mov jg das mov pop stc push xor jg pop sbb cmp cmp xor cmp adc sub cmp gs jp imul repz xor jb lret mov cmp negb mov ss jb pause push int sti sub jb je (bad) call sub mov add clc pushf or push cli jo sub lock dec adc fisttp jg int and sarb add fs lahf jmp test hlt dec (bad) mov sub or dec rcr lods rorb arpl fdivl mov aaa clc push lea repnz mov pop outsb cmp xchg push (bad) rcll sti scas mov mov pop ret add sbb sub mov sub push test cmp fwait cli pop mov repz test bound nop outsl fwait jns jbe stos xchg cmc xor das in insb (bad) jne fcoms rcrb arpl push pop mov cmp ret inc iret (bad) sub pusha fstpl loopne enter mov loope call mov or sub rorl lret adc int inc sub movsb test es jae nop movsb or mov pushf dec adc mov and jl cmp xchg call cmpsb sbb and push jge and popf dec cmp arpl orl pop sahf inc test dec push sub mov in (bad) stc push xor rorb dec sti inc lcall adc enter adc push push pop loop mov cmpsl pop movsl push lds orl arpl mov imul fisubl jns or and xor or out shrl xchg dec ret xor ljmp cmp add inc imul (bad) int insb in jnp jmp add pop lock xor mov push mov mov xchg int in idivb lahf movsl (bad) divl mov not insl sbb cmp outsb mov pop or loop xor push rorl fldenv sub adc dec jge wbinvd xchg outsl test ror fcomi scas in push inc out rcrb enter xchg push and adc rcrb inc dec lahf xor mov or cmpsb (bad) mov dec inc (bad) in rcll and sbb add adc jge fnstcw xchg fldt push adc push das mov adc dec int3 out rcrl fstl and lock push add push lahf or push out inc inc cmpsl lret clc mov sub shrb xchg cmp xchg ss insb mov adc pop rorb clc mov dec adc mov mov mov stc out movsb sub test sbb push dec iret jae jp dec dec out or (bad) push push in or testb iret or sbb add mov sub enter jp movsb sahf icebp scas mov popf sbb push add jae add popf jge lock mov sbb mov push mov imul out jno mov jns sbb dec push pop adc add frndint out mov sub cltd or loopne jno xchg mov lds out gs xor jmp and inc push movsl add add ret repz lea shl lods std push gs mov mov inc test rcll pop jo int xchg dec or fst cs in or fistl push xchg aaa push pop push fcomps mov add into cmpsb mov sti shrl outsb mov fidivr insb cmc loopne push std popa or mov adc xchg sti or or mov adc sub xchg and mov popa int xchg inc or insl lods lods xor in pop das sub and (bad) add dec imul orl (bad) fs orb inc sbb dec sbb push jae in insb (bad) in ret cmp loopne test cmp jno xlat adc pop mov call xor xor mov mov and or add sbb movnti cs push cld xchg xor cmp mov or pop aaa fidivrl mov xchg jae jmp jbe mov (bad) mov jns loope sub dec aam outsl (bad) xor xchg mov fst inc cmp or sub xchg xchg ret iret jmp lea dec xor or fs (bad) icebp xchg sub cmp push xchg dec and lock sbb adc mov jbe sub cmp pop sub dec outsb stos push jnp cmp push (bad) cmp and pop mov push mov insl sarb out sub dec hlt ret fadd fwait ret xor xchg jmp insl mov sub cmpsb mov loopne xchg add or dec fcmovnbe jne sahf insb jle aaa and add clc test xor clc out or or stc mov add adc cli fdivp imul jmp mov push mov (bad) aas jge push in sbb or pop jle jg in punpcklbw insl das jae push jge adc pop mov pop inc iret imul leave rorl std pusha or dec xor imul pop inc leave xor fwait xor adc jb inc bound in mov jge dec setb cld inc add push jae outsl std add add push dec pop hlt adc aas mov popa icebp push test add lods mov and jnp cmp in xor sub inc mov or lods add aas xchg jg scas push push xchg out mov jge out xor sub and (bad) push lahf movsb clc push cmp xchg inc popf push iret in sahf push (bad) jmp and add rorb jno inc xor stos sub fimull scas (bad) mov mov mov cmp ffree stos mov cmp int adc or mov das mov push jae ret and ret pop adc xchg out (bad) fmul sqrtps mov scas (bad) daa sub movsb cltd in pop insl sub jne data16 push or call lret mulb xor mov icebp js lea lods and jecxz fprem1 sub jb out mov jl fistpll rolb sub mov mov jae fcoms jae or sbb jo xchg lea lods (bad) and lahf das mov push insl dec dec push daa js fcmovne (bad) mov (bad) lea sbb pop sub out push sub into mov or xchg rcll sbb mov ja mov popa jle adc inc lcall inc sub sub xor into push (bad) sbb movsb xchg cld mov mov stos push add test dec pop jg outsb imul push push sbb mov xchg xchg loope jbe lcall insl pop fbld jg dec adcl repnz fwait andl mov insl push add mov aaa cmpsl das call loope aas cwtl mov dec inc mov lret or push ret pop or mov mov rorl add adc cmpsl mov jae jne and loop scas cs icebp push xor mov add (bad) add and dec inc int dec mov jle aaa pop lds loop js repnz jecxz stos mov jae xchg mov outsl (bad) in fldenv or or std in stos in xor sub cmc pop test push lods jge jno inc jle lret push (bad) push movsl fsubrp cmp sub sub xchg lds ret mov mov push xchg inc xchg pusha cwtl cmp aas cwtl jp fwait pop mov out sub ljmp mov add xchg push stc mov xor jecxz fsubp lods movsl sahf sti sahf call into pop inc lret fcoml aam pop sub push fisttp repz pop enter add mov inc pusha outsb movsl and push pushf pop idivl inc add dec fidivl arpl pusha outsl or outsb add xlat or mov pop adcl mov xor or jg loop dec push in push mov adc xchg loopne stos dec inc stos mov fsubl inc mov imul push movl lcall cmp fldcw lcall push (bad) out into jbe sahf shll inc neg dec xchg xor xor shrb push mov cmp adc imul dec leave sub in sti xchg (bad) dec rcrb repnz nop jnp scas jne cli scas cmp lret cmp add (bad) arpl rorb vphadduwd popf xchg (bad) xor dec ss jl sub mov lahf add fisubr cmp cmpsl push aam imul push push push push add jae stos pop and sbb inc cld mov inc pop pop mov adc add fcomps xchg and jge and xchg sub push into xchg cmp mov inc pushf test push inc cmp daa dec lret cmp mov mov out mov mov aaa aad es movsl adc addb inc jb ret cld aam lock xor fdivrl (bad) adc sbb rcrb popf push mov lods test mov inc test ljmp cmp push test push sub or mov sahf cmp pop les bswap pusha xor sbb es popf aaa pop bound dec cmpsl (bad) in aam dec sub sub nop sub dec xchg outsb cmp cmp rolb add fwait push mov stos jne dec dec stos es and repnz jo cli je jmp popa aaa sub push test jp mov cmp or mov mov imul and mov push or loope xor outsb add and (bad) pop push leave xchg pop cmc jmp int push out jmp push pop test cmp cli sub add pop insb stc pop jecxz shll lret mov mov dec push ja jmp push cmp adc add fadds jp jge mov xchg sbb stos jnp addr16 push push mov fistpl sbb or test and fsubs push pop pop movsl fcmovb jnp push in divb fucom mov lahf jnp push cmp or in sub inc and addr16 sbb lret pop icebp or in (bad) pop inc sbb add insl and jle pop in push (bad) fstp mov scas cmp imul (bad) jmp cmp inc add or push mov mov rolb add adc test fcomp push sti ret dec inc ret lea test jge aas xor push dec and fisubrl cmp mov mov out inc dec or stos mov stc (bad) ljmp ret lret xchg out jae test cltd adc add jnp cmc (bad) clc fcomps mov add or insb jns add and sub cmpsl add mov add jecxz pop (bad) pop cmpsb jmp or lcall push in sub test ffree and (bad) pop inc xchg pop sub cwtl and inc cmp push (bad) out mov sbb in cs les pop lahf cmp imul inc es jp lods xchg int3 insl mov jecxz insb lcall xchg add out lods pop fadd dec mov mov mov sub lcall outsb cwtl xchg cmpsl dec ret push jbe out stc mov dec mov iret pop push leave pop aam popa sbb or push add push mov cmpsl jne add jl push mov sahf lock shrl clc fist push idivb fxch dec mov cmpsl test push pop jge cmp inc add jg jns rcrl leave add pop stos jns (bad) adc and call clc enter xlat cs inc movsb sub or insl out pop insl jl xor xor sub xor pop xchg repnz cmp out jae dec jnp sub dec cmpsb or call jmp dec loop pop jmp or sahf push adc push and dec addr16 push repz cli sbb jne (bad) outsl xchg pop inc mov (bad) xor inc es mov push sub (bad) jno or lds out cmp subps jnp jns in mov arpl xchg sbb testb xor adc faddl fldcw rol dec pop fstpl adc pop adc shrb mov fwait into aaa xchg scas in add rcr mov pushf test fstps cmpsl std sbb mov imul andl es andb mov iret das cltd adc mov xchg inc dec adc sub push push mov int3 mov loope lea test sbb sbb (bad) adc inc and stc cmp and sahf daa jge js aad fisttp dec xchg mov fistpl ljmp jle xor pop inc push mov cltd lcall push mov mov mov cmp fsts repnz mov xor and in mov jecxz xor jg jle push inc jno mov or jno aam out push (bad) arpl sub xor subl pop push stc add adc dec shlb ror jb and pop or pusha adc mov dec enter sbb faddl ss lahf arpl mov jecxz pop jg out js mov lcall mov pop adc mov add lahf mov or jle ret fiadd and or lahf cltd cmc (bad) sbb aaa jmp fwait jbe xor inc cmp xlat int ror notb (bad) sbb shll fistpll div or pop mov daa or jbe out ljmp xor lahf jo or icebp into outsb push imul inc jae dec push (bad) pushf inc test push int pusha es adc adcl pushf lods push les jge repnz ret mov lods jge popf (bad) ja lret mov addr16 push jb flds adc repz and xor gs cmc cs or js jnp out pop push (bad) loop rcrb cmp pop pop mov sub mov stc dec out addr16 and mov or test mov mov mov cmp lcall mov mov pop leave pusha cmp sub add adc jge jno mov cmpsb mov in fdivr or fwait push add jbe cli rolb popa insl bound jne adc mov xlat es jo inc and add or mov (bad) sbb sti cwtl fmul and mov fs es (bad) inc pop insb clc cltd adc dec mov hlt push adc cmp leave (bad) push nop xchg fs and aam mov xchg js inc jp inc notl popa or fisubl jl pop lret bnd mov out ja pop ljmp jle push (bad) and sbb inc push sub int loop out xor jns sarb push enter ret cmp cmp push rcl (bad) out sbb mov fisub icebp fcompl push lahf dec stc pop addr16 fisubrl lock and imul mov jns jmp (bad) cwtl aaa mov adc xchg xchg cmp test (bad) xor test (bad) aad mov enter int pop or push lock (bad) add sbb jno cmp out shlb mov (bad) out sub inc mov adc sbb lods lock inc test push push test rorb add or stos pop ljmp jae lret push sbb or xor fcmovb inc mov xor sub mov mov mov popf xor sbb mov cmpsl scas outsl dec push xchg iret sbb xchg and inc gs xchg (bad) jecxz dec sub test (bad) fdivp dec scas sub push sub sbb idivb rcl (bad) out jl pop lods notl hlt aad jge push das sbb cmc xor repz adc sar adc inc scas mov shll leave cltd popa mov jne (bad) cmc inc jmp pop xor push sbb inc les test mov xchg stos fwait mov lret add sbb inc fcomps (bad) jo dec add dec xor or sbb clc or sbb stc int3 fwait movsl imul add add jmp loop pop in cs loopne pop iret fsub in dec sub mov xor arpl mov stc xchg fstpt pop lret cmp cmp lret loop cmp xchg sbb out lods sbb xchg in ret cmp rcll add popf popf jecxz daa mov add fsts outsl pop or mov popf dec pop call ss xchg mov adc mov js sbb (bad) into add (bad) cltd jp xor cmp add mov mov jno or mov adc aaa aas inc jle mov inc sub jge inc push mov adc mov imul mov daa jle sarb inc fadd loop (bad) out sbb cmp aas scas mov hlt arpl das xchg or push data16 pop aas adc rolb push je sbb cld inc insl dec leave cltd cltd jg xchg pop andl cli lret mov lahf mov imull sti inc push insb and sbb movsl xor cmp (bad) or or scas jl pop inc sbb inc pop and int mov push in sub bound push xor sub xchg rcrb mov mov xchg movlhps je jmp sub out dec pop (bad) or mov mov fwait mov mov mov cmpsl js adc (bad) int enter (bad) and pop xchg test sbb inc push stos je push hlt lret dec aad lods jmp jle push and arpl out data16 (bad) ljmp sbbl iret or outsl imul lret pop outsb xor dec icebp les jo call hlt andl cmc mov ss repnz dec fsubr sub cmp sub aad lcall push inc xor jp out and xchg sbb xor jne xchg dec sub notb push cli fs ss sbb mov loop icebp fcoml cltd data16 sbb sbb int dec pushf and pop or test sub mov mov sub fwait insl mov (bad) and in stos out or mov add xor adc push cli out push xor push and xor lea jl div mov add cmp and jae ror cltd es mov test cmpsb sub (bad) cmp out mov ljmp ret cmpsl adc loopne xchg dec inc push xor xchg xor cmp mov in lock cltd xor dec xchg push jnp sub insb mov loopne dec movsl rolb mov pop fdivrl mov sbb setns pop xchg mov lcall cmp cltd lahf in cmp push cltd mov clc rcr negl mov cmp cmpsl je mov rcl jp push mov adc jecxz inc in std lds mov test jecxz add adc test push xor pop aad and in inc or mov imul add sub dec push sarb xchg jo add arpl xchg mov imul xlat push mov leave add jb adc fisttpll cmp mov jl sbb mov lcall cmp cmpsl xchg sbb mov aas pop mov arpl mov jg nop xchg xlat add dec sub dec les and ljmp (bad) call mov inc cmp lock xor sbb mov icebp fs jb out or add and jns sbb sub add scas or loopne or and sub fistl mov inc sbbl sahf mov loope (bad) in adc xlat clc daa push in mov aam push cmp add push ret pop jne sub add imul nop addr16 add mov pop or (bad) test mov mov add jnp pop clc daa and add lret jle and inc enter fwait xchg jae lea or push xchg adc jo adc dec decb jno push mov ljmp lods test dec out sbbl sbb adc decl fisub pushf xlat es xor adc mov pop icebp in lret ss and pop mov (bad) xchg mov push push cld sbb add mov je imul lahf clc fsubp cld cmp cltd adc lret xchg jle inc stc push dec (bad) addr16 or sub push aas arpl pop int3 mov data16 out pop (bad) ss push (bad) xchg lret inc dec insb popf aas sbb mov cs rolb loop sbb pinsrw pop inc js lock fsub stc cwtl jmp push (bad) mov xchg mov cs jg add mov dec shlb mov rcrb popf mov cmp push (bad) mov outsb movups loope push div in pop adc aaa inc int3 loope rorl dec dec fsts (bad) cmp cmp cmpsl xor (bad) xchg cmp int3 add jmp shrl mov cmp into pop dec mov lods les out jns dec stc sbb and fwait jnp btc insb movsl push xor sub fwait cmp imul inc mov fsubrs dec or adc sbbl out stc xor fmuls cld sub inc sar push shlb adc add in sahf pop movsl cmpl repnz xrelease inc cltd push cltd (bad) cld popa sub or xor mov js xchg (bad) int3 push (bad) jmp cmpsl mov in mov adc pop mov je scas mov rcrb dec or jno mov jae orb in xchg mov popf data16 or cltd iret mov outsl jbe or imul push sar sbb mov rcrb mov bound mov and or sub addl push gs fiadd sbb sbb xchg xor std pop sti stc lcall repnz adc dec pop pop ds fidivr loope cmp std cltd pop xor popf dec cmp cmpsl mov cli pop jne nop sbb add (bad) mov dec insl sarb std sub sub pop fldcw add xchg jl mov mov xlat jle push inc into js pop xchg dec pop lea test sub adc and sarb mov pop inc fcomip sbb lods add (bad) cmp lods cmpsl add in sbb add push leave out in shrl push out inc mov dec int mov hlt mov int fdivrs push stos mov fldenv into cld sbb mov ljmp xchg test arpl aas ljmp (bad) fisub push scas shll es hlt inc test xchg jns pop cmpsb or adc inc add gs push jae or aaa xchg mov imul pop hlt sub xor dec daa daa (bad) pop subl in dec fdivs and and push dec ret inc push das fist data16 bound pushw outsb pop cld sbb out inc data16 sbb push call repnz sbb push lods in das nop mov (bad) cmp sub mov js flds cmp data16 mov mov sbb scas xchg dec leave lea dec mov scas xchg sarb aaa push cwtl lods mov cmc ss pop inc and enter and push hlt in pop pop add jno push rsm and fs mov sbb dec dec mov iret cmp movsb jo (bad) (bad) jmp rcll aad pop xchg push or adc sti xor ja daa xchg stos ja dec xor imul (bad) cld xor pop mov jnp sbb mov jb jecxz adcl (bad) ficomp rcll and or int xor sub pop shr ret lds adc jecxz push enter xchg pop ficomp sbb das js and inc sub pop xchg xchg push push aad sbb xor lock jo andl adc cmpsb adc jo dec push push or cmpsl inc leave imul fldl stc push or sub loop mov popa test mov and mov mov aas inc mov dec repz out hlt dec imul lahf mov dec cmp mov sbb cld inc jmp push cmpsb pushf lds stos push adc push cwtl cmp outsl (bad) insl movsb mov mov ret add (bad) mov fidivr popa inc ds sarb push sub mov mov lcall cmpsw out shrl fisub arpl sbb xor jnp out gs lcall or mul paddsw or add cs or std loope imulb fwait pop cmp pop lock cmp adc inc div jne inc dec mov sti pushf push loope mov and fadd dec pop out dec and xor js lods sti outsb ret mov pop iret and jl dec in sub cld dec test into loop xor jge or (bad) outsb lock out cwtl push sbb scas cmc test ret or out into lcall and xchg cli cmp scas loop lcall ljmp jnp jge lret loop inc sub mov inc jle fbld insl and cmp stos sbb (bad) iret adc and rcr sbb jae inc sub pop mov icebp xchg add outsb jb adc and sbbl nop repnz mov fwait cwtl adc lret push out push ds negl adc clc sub cmp mov push pop dec loopne inc mov popa jge mov mov sbb loopne mov (bad) rcll xchg jle lea jmp pop je push jle jl adcb push insb es scas movsl xor sbb movl xchg iret outsl (bad) pop int3 xor sub cld out sti jbe js and or push cwtl std sbb jg mov stos xchg ljmp jo dec sbb fwait data16 test dec (bad) scas sub cld jae xchg insl fidiv or sub inc mov hlt std (bad) pop lret push sahf aad outsl loopne inc cmp (bad) outsb xchg imul push cli fisttpll das pop cmpsb xchg cmp pop gs stos and stos mov fs inc or sarl add sarl add daa pop inc pop lods mov adc (bad) mul push push push faddl cmpsl sbb lcall jmp inc jo,pt dec leave inc xor out xchg or addr16 in push arpl and (bad) cli mov add and adc scas jge jno xchg popf pop xor xchg test cmp outsb inc xor and or pop lods mov inc pop push imull mov jle xchg cmpsb call scas push pop dec push push (bad) loope mov push (bad) xor cmpsl (bad) jno fadds push cmpsb pushf fstps test fidiv adcl and mov repz dec fildl add cwtl test push mov rcrb jge and or repnz ljmp jg push sahf je sarb mov cmp inc popa movsb sub pop xchg dec ja das mov pop ret jo icebp or shlb aam and jo and adc push and adc (bad) ds movl add push cmpsl mov xchg push fdiv movsb lods fstl pop pop push adc or fmull jg int3 incb arpl cmp jecxz push bound mov mov xchg dec std outsl xchg loop add pop or int3 ja xchg dec imul lods repz call pop aam pop push cltd (bad) ljmp inc xor or dec imul ret test add in cli lods and shll xchg scas inc add mov bnd pop push aam das inc fnsave out pop cmpsb or shlb scas inc xor dec xchg icebp mov inc dec push push sarb inc xor pop and or cltd fdivrp stos insl push mov arpl mov jae xchg fcmove push pusha cs sti push jge lahf xchg push pop xchg add mov hlt xchg add or fs bound mov add lds out leave sbb test ljmp inc and aas or adc inc sarl insb mov jg data16 jmp fidivl inc cltd mov xor (bad) jne sti and push xchg movsl aad push imul mov cmp inc or or mov outsb insb inc xchg in orb mov (bad) shrb (bad) mov mov ds cltd or mov sbb inc jmp pop jne jge pop sbb out cmpsl add lahf dec add orb xchg push cld fsubs jb or mov pop in lahf enter mov lods mov sbb mov mov fstpl sub push mov or sub and sub push call into (bad) or popf or jb (bad) (bad) call fldt xor arpl int add adc test jp pusha fld fldenv xor fcompl ss mov xchg jge jns dec ret enter cli xlat aad dec adc pop sub jp sub lcall pop stos dec add push mov sti adc pusha outsb jbe or sbb and cltd fist into (bad) mov ja (bad) jbe mov mov je push rorl sub (bad) cmp jge push sbb adc imul test into ss aam xorl mov lea jno mov jle scas imulb repz ljmp mov aas jmp inc xchg adc mov ljmp lods (bad) cmp dec int pop ds pop ret mov je (bad) rcr cmp cmpsb and mov lret movsb sbb pop push push xor mov dec push fs (bad) mov or pop in roll ja inc iret sbb fwait orl rcll add and or xor addr16 fidiv jp clc aaa inc sahf sub lock clc nop inc pop dec fwait add jns add dec rcrb fsubrl test jg orl sub lcall pop jo jp xchg fild sbb data16 push inc test clc movsl xchg push das adc fwait test mov outsb (bad) nop inc mov jl fistpll les imul lahf daa cmpsb sub xchg mov add cmpsb popa (bad) pop out sbb jae fnstsw mov out adc cmpsl xchg test ja mov mov xchg sahf pop aas and push lods and xchg pop pop cli ss jne inc fcomip in in cs popf push dec into fmull and mov stos push sub lcall jae push std imul xchg notb pop aam popf mov sbb out pop inc test test pop ret xchg sti jo jns mov mov sbb dec add pop xchg stos push xchg fidiv pop push add pop fwait das ds cmpsb xchg ret js sub inc add fcmovnb mov inc xor xchg rep icebp inc call xchg cmp ljmp lcall aam or cwtl add rcl cmpsb inc and mov push or in (bad) das fisub stos xchg jne fs push mul mov add insl adc sub popa cltd jb xchg xchg div jae mov mov pushl push add lds cmp jge lret leave out and and sub add lock ljmp inc rep in rclb (bad) clc loopne push scas mov jns inc mov sar loope mov imul xchg xchg mov adc ret dec jns in inc mov inc lcall adc ret test add jbe imul jl pop test dec in xor fist inc mov or fs repnz sbb out or push inc push lea dec leave and mov lcall repz das jne mov ffree xor and or imull aaa loopne push into mov xor aad xor sub mov mov mov jne int fwait movsl daa in dec pop stos repnz xor mov scas out adc test jo shr add lea mov repnz push movl aas in pop xchg xchg in jns lret xor mov outsl push or pop stos cmpxchg dec and (bad) (bad) jl clc add push push xlat call or push jg cmpsl repz dec enter lods mov sub add and pop imul cmp je or test adc mov mov dec (bad) leave and xchg (bad) mov lahf rcl mov jle xchg push loop xchg gs shrb ror aad dec data16 or push xor iret ds xchg iret jp mov loop xchg pop xor in (bad) adc push push xchg ss or sub sahf loop push sbb inc dec pop mov sub sbb fbstp pop jp lds std mov lods in decl sti mov ljmp or (bad) ja jle mov pop imulb lock add mov sahf or call add mov sahf (bad) fadds popa cmp cs cs sbb lock jns pop sub push inc push xchg (bad) cmp xchg dec cmpsb lahf lret stos andl outsl add cmp xor sub lds push jmp sub mull sbb mov mov mov sbb pop daa pop cmp jo sbb xor bound inc xchg notl ja jmp adc cmp xchg in push mov js outsl pop xor pop fdivp push jbe insl push pop ljmp (bad) mov sub mov or push dec mov mov in sbb push jo (bad) icebp cli jae dec xchg pop jnp test dec cli aas lds neg pop test mov sbb leave mov out mov mov ficompl cmp add xchg jmp add sbb test das les push (bad) mov mov mov mov in addl fcmovnu pop in mov repnz adc (bad) fidiv notl (bad) shrb ljmp (bad) aaa xor jg dec push sbb stos test out jmp movsb (bad) out rorl mov inc in fidivrl testl pop xchg or mov jl roll sbb push in dec cmc fcompl addr16 dec insb xchg ret sbb (bad) dec or dec mov aaa jmp dec nop mov pop cmpsb sub cmp idiv out in lods jmp std (bad) jbe fldt loop and (bad) ds jmp fistl sbb frstor dec and stc mov loope pop sub xor inc xor dec xchg mov daa jmp cmp leave test adc push add dec arpl mov js out cmp cs jnp loopne adc jmp xor jns loope in mov mov xor movsl pop mov cmp mov xor xor or pop ljmp push loop leave cwtl mov test lock lahf dec push sub call mov pop push xlat push cli adc push adc and sub adc xor rcrl or jno (bad) mov insl pop out jge xor std mov icebp pop add push and cltd nop loop rclb mov addb jbe mov es data16 push int fs and and add das cmp cwtl rcrb jnp mov es fwait daa movsl lret or dec fildl sbb rcr das inc inc xchg stos and and jne jle pop sbb pop jle pop fidivl add and dec sti mov test mov incb in sahf jmp cld in dec push pusha add pusha pop mov and in inc push addr16 pop idivb adc sub sub lds fbstp lahf mov mov adc pop xchg call push pop mov in mov dec push and mov inc popf sbb cs adc lret in scas ja pop repz decl icebp jmp (bad) push loop cmp cmpsl ljmp jns aam pop push hlt or cmp push (bad) mov push insb int3 adc cmpsb xor shr or hlt scas inc clc push data16 lods in lods ret pop push pop mov pusha loopne mov in mov sub aam and sub and dec (bad) lock fcomps mov cld das loopne inc fisttp sub pop inc push pop vshufps push std mov xchg jmp add mov xlat movsl pusha aad movsl ss sbb add pop fwait lret gs sub sbb icebp in sar movsl or mov dec cltd movsl or or js dec add mov aad insb repz mov cltd and sbb mov xorl sbb xchg dec out mov outsb jmp scas xor adcl aaa pop lock (bad) int adc lret rorl cmp in xchg or outsb (bad) jne fs sub jo ss jmp sub jns mov pop sahf fcomi orl push add pop daa cld cmp push or pop pop jle mov mov lret test test xorl (bad) jg adcl or add adc lds adc adc jmp je rcrl xchg lock lds mov rolb lea sbb es jge sbb cmp add pop outsb cmpsl xchg push pop aam shll cmp dec lahf out push fiaddl pop xor push xchg jmp push or sub mov pop xlat out add inc mov sub xor pop fs shl or mov cli daa mov jno dec (bad) iret pop in shr (bad) xchg push push push leave inc jns jno push (bad) sbb into in cli (bad) mov mov jns imul aam jns xchg pop sub add add push adc dec xchg push int sbb insb fnsave (bad) out pop imul xor and ja sbb les inc lret repz (bad) jne cmp push dec push mov push jmp xor mov push je xor repnz insl enter jae push std add cmpsl mov out les lret or in mov adcb es mov movsl sub jge cmp and add ss insb xchg cmc lret push push imul adcl out aad cmc out jbe lcall xchg lret push ja enter icebp mov in daa in cld fwait pand pushf les mov leave jnp nop stc sub enter (bad) out lret negb push das test xor add iret pushl add loop cmp adc ds dec sub pop negl xchg adc imul insb out jnp jg xor sbb (bad) fwait pop insl clc loopne,pn or mov jnp out add inc incl adc mov pop pop or cli ja jns (bad) out dec mov push pop rcr outsl sbb flds loop sbb movsb add popf inc pop test (bad) adc es jne jb jb mov sarb rcll lock jl push sub cmova sbb cmpsb jo cwtl shl cli andl sub inc mov neg mov gs out into aas mov cmp out add (bad) fst push cmpsb mov pop xor xchg out adc stc dec adc jne xor pop jnp sbb push fstpt mov scas push incb in (bad) frstor mov adc jecxz out push add scas test (bad) loopne xchg mov cmp pop mov adc xchg movsl xchg test fwait dec cmp xchg add dec cmp lret divb stos add add xchg (bad) cmpsb sbb push loope adc cltd (bad) push sbb std movsb mov mov mov mov mov repnz loop and shl adc adc xchg (bad) mov mov xor or cmpsl mov ficompl cltd repz or in cltd push dec fnop loop mov pusha int sbb adc in insl sar add push adc pop ljmp dec in roll aaa out dec lods (bad) loope jl cltd pop (bad) mov adc mov add mov stos dec jbe cmpsl sub sbb clc xor (bad) jbe pop pop xchg mov sub cld cli movsb (bad) fcomp mov (bad) dec dec movsb sbb or mov loop ja sub mov in loop cwtl add mov fcmovne inc or mov mov in push (bad) dec fcoms adc (bad) jnp daa pop jge pop mov jl or push (bad) stos inc fwait out xchg mov or fsubrs repnz (bad) xor iret and cmc fmuls vmread cmc scas or repz shlb adc mov lcall movsl test mov and fdivrs xchg mov fldl jb inc incl divb cmc pop jbe out rolb push rcr int jecxz jbe pop mov xor mov push mov mov movsl and inc addr16 cmc sbb jecxz stos ficoml xchg (bad) aaa fcompl test ja gs mov or jne rorl jns add fs or or cvtpi2ps jmp stc fidivrl mov nop cli ss es in adc into lods cmc and mov inc js xchg push (bad) stos cmp and mov cmp scas adc in mov inc mov cld pushf mov jae scas dec cmc add aam or push fild insl xor mov clc rol cs int ss outsl mov sub outsl mov push cmp inc lcall xchg push test jno push xchg aas clc add in sub repnz ret pop in lods loopne call mov cli arpl je dec clc mov daa dec sbb and clc xchg ret dec mov imul not fwait add loopne push adc dec mov adc in add push xor mov test pop shr cld sub out in std roll push and enter or sahf test hlt sahf sahf mov lret into and mov xor dec mov jge sub xor dec jnp mov mov mov insb enter in mov (bad) test pop push icebp daa (bad) ret mov xor dec test dec aad movsl jmp jge inc in jns das dec adc xor cmp dec jmp jg mov mov jg mov push ficoml pop xor jecxz push mov fwait loopne adc out push push lods mov out mov pop jl jmp imulb inc and mov adc xchg arpl test int3 or insb jmp xor das sahf push (bad) lds mov jnp dec xchg jnp (bad) pop enter aaa mov popa push inc dec call mov enter stc jbe roll pop leave repz addr16 cmp loope fildll mov jb rolb cs xchg inc push and adc cmp sbb adc xor xchg xor and push (bad) (bad) cld mov aad in mov test jg call lret orl xchg cmp fs xchg ret push ficomp and sub or push or cmpl lret jp mov or pop jne mov movsb xchg imull xchg fcoml das jecxz jecxz dec ficom imul fwait sub or xchg push sbb and hlt adc movsb incb push add push leave leave ss lea pop enter fistp cld out sub xchg movsb mov daa (bad) adc jge sti dec mov push popf nop popa dec cmpsl adc mov inc popa in jne mov mov call test out icebp jno pavgw sub mov push lcall jo pushf xchg in es clc repnz in jl outsb cld xor mov in mov fisttp mov dec ja cmpl xor mov dec jl xchg dec arpl cltd add cmc pop leave cmp je scas xor push jp (bad) int lahf or and aam stc arpl imul ss mov xor stos stc fcmovnu jbe les sahf notb ds mov push fcompl aam repz pop mov xchg out movsl mov jno cmp jnp loop xor push or adc stos loopne add fisub pop sub lods ret mov or mov push int3 pop mov add and inc cmp mov test aad test das (bad) in insl bound sub cmpsb cwtl jnp xor js inc mov test jns movsl in outsl loopne sbb lahf es xchg (bad) stos dec xchg fs enter arpl mov add dec cmpsl fwait arpl mov imul (bad) test js stos orl repz inc inc lahf mov mov adc lods aad xchg lcall pop lcall cwtl (bad) jo add inc xor popa xchg cmpsl pop adcb (bad) jbe shlb mov movsb fsubrs or rorb inc adc fs pop lcall xor in mov fisubr andb xor int jbe add into fmuls sub add pop in ljmp push add ja cli push paddsb mov mov sbb cld xchg arpl and jo arpl (bad) sbbb loop adc sar sarb (bad) icebp (bad) icebp mov sub jp mov xchg jo and push mov out cmp inc adc add mov daa int3 mov add jo jecxz pop jb rorl insb scas sbb inc fcoml add inc sbb (bad) int3 dec fdivs cwtl jmp pop leave insb push xorb jmp insl jecxz aaa adc cmp jmp inc (bad) or in stc push push lahf movl xchg test pop xor leave and xlat xor add push imul and (bad) cmp int pop push mov push mov mov leave adc imulb les dec cmp inc sub sub dec je xor jmp mov add adc lds mov fistl clc cmc mov pop divl mov fsts or or icebp dec xchg int push out mov pop xchg test and push push adc xchg xchg ret push in mov dec cmc or jbe mov mov js or mov push (bad) mov pop sti aad cs mov lods (bad) icebp ja sti pop xor xor rcr addl jae nop fcomps push (bad) lds in lea lahf pop mov (bad) cwtl adc lss cld in dec pushf pop pop (bad) push sbb jnp mov addr16 (bad) in popa mov mov lods jp (bad) fcmovnb mov in test jno lcall ret pop repz xor fdivrl jbe adc push (bad) icebp insl jbe shrl lret cmpsb or inc cmp mov dec xchg jmp stos mov cmc scas dec bound xor push add xchg sbb push inc out xlat inc fiadd mov xchg dec cmc lods repnz pop jle jae mov insl or jecxz pop mov rcl mov sbb sbb xor jmp add daa mov outsl scas jne loopne lea xor or add push push (bad) fs (bad) fdivp inc jbe out das ds push mov shrb fxch fldenv push insl adc lods pop add push insl clc pop out or rcll je mov mov add stos push mov jnp xchg fnstcw pop push add loopne,pn das push mov pop mov ret ret fldenv push pop cmp (bad) dec (bad) dec dec sub pushf mov sahf mov mov cmpsb stos mov stos mov mov outsl dec ljmp pop sbb cli cmc fistp jae xor cmp and xor cmpsl pop movsb mov insb popa shl inc iret push cmp pop mov inc rorb push stc bound das push cmp mov mov fsubrs lods sahf push movsl test ret fcoml jnp lock fcmovnb in hlt shll fisubrl adc repnz pushf dec sbb aas daa test (bad) outsl inc call jnp shr iret scas icebp xchg decl and pop dec (bad) pop sbb ret test push xor add dec imul add push push cmp daa jmp sbb shll pop sahf lahf push cltd adc jb xor enter xor lret aad inc js sti cltd ljmp or and and (bad) sbb gs stos (bad) clc or iret inc adc push mov loop in in push ss xor add and lret jecxz mov pusha sub add xor hlt push or inc (bad) out cli enter inc (bad) dec jmp in lret rorb lahf fildll xor addr16 mov dec sbb fbld add sub into or pop jbe push pop or or sub or fstl push or ds les cvttps2pi mov xchg fwait add mov xchg jge leave sbb push cmpsb (bad) sub fiaddl add bound roll sbb enter add outsb divl adc mov lcall sub aad test loopne pop (bad) jg push lahf push cmp pop addb xchg outsb outsb mov adc imull pop cmp mov pop sbb ja pop adc xor and (bad) jae push roll in (bad) aas add mov aad inc jle or sub stc jmp inc lea jmp or fwait aam sahf push pop icebp lcall negl (bad) mov xchg inc push int pop popf dec lock jmp push and dec insl aam inc movq lds mov iret lcall dec dec (bad) ja ret jnp jno outsb imul dec mov (bad) cld lea pop ss je in mov adc ret mov hlt xchg les into xchg insb cmpsl pop std nop pop mov fyl2x (bad) push in cs inc shl inc jecxz and and mov loop mov cmp in mov ds mov jge fmull inc cli ja (bad) lock sahf pop and push or dec dec mov cwtl xchg pop arpl jge sbb or inc and inc mov jl test imul ss pop fs aam stc mov sub xor inc ds xchg mov push xchg rorb leave and movsl adcb inc sbb out and and mov inc cltd or jl sar push mov and ficom insl imul adc jns jl jno popa aaa xchg mov scas scas xchg pusha or nop jno sbb mull lods inc dec stos cmp je mov ds ret out mov dec js fstpt sub push ss mov pop mov sbb into dec mov imul dec mov dec adc repnz and out mov sub les cmp and dec mov aad push in jp dec jge add iret push dec and or outsb xchg lock repnz stos cs mov neg mov inc pop lcall out inc adc mov aad mov mov push fldcw mov xor mov inc sub sbb sub dec nop push imul push cmp dec mov nop jb xchg imul push jno mov call add mov mov fnstcw xchg push rcll add rcll xor jae mov faddp jge push in jmp xor lock int3 out inc xchg ret pop stos rcrl lret dec sub fdivr add (bad) icebp dec and pop stos mov mov lcall push loope push dec movsl hlt sysenter out cmpb adc xor xchg std inc push stos mov cmpsb adc xchg jo vaddss loope flds call cmp inc xchg sbb int xchg out dec xlat (bad) adc cmpxchg mov cmp mov mov inc repnz or test mov add cwtl lods mov repz scas xor ror in cmpsl mov sub sbb cli push cs add (bad) mov mov mov jbe out stos push mov enter out sub mov in dec mov pop aad adc add sarb mov or jg push mov adc fcom adc loope and sbb mov lods mov jmp rorb stos pushf cmpsb and pop (bad) fisubl sbb imul sbb mov inc aad shrb xor and push jecxz jo rolb jmp sahf mov mov scas (bad) and hlt xchg popa rcrb les in xchg dec not cmp mov call mov mov stc jb insl mov out or mov (bad) ljmp sub (bad) cmc push andl in insb mov dec leave sbb pop mov push fisubrl sar test test jmp jb mov lret loope dec jno stc jg test bound test cmp (bad) mov push xor int aaa jp jmp push mov mov dec add jo jmp xchg mov (bad) inc shll cwtl lret xchg mov je out dec gs push addr16 vpsubq (bad) jecxz mov mov test inc mov lods pop xor adc push mov add (bad) cwtl push lock pop lea mov xor ret xchg repnz push clc adc stos push adc int je jmp rcr cmp xchg in xchg jns sub mov sub ret shll repnz jne mov daa daa loopne cmc imul cltd jg repz mov outsl dec inc dec je xor or and jb or cli mov hlt fwait add inc cmp pop (bad) or ret mov imul imul bound incb into sub lods pop out clc cmp hlt pop scas loopne adc cmpsb pop push xor sub test and sbb cmp imul push push ss push fwait pusha rorb fcmove inc fisubrl adcl sub push fisttpl pop (bad) push daa (bad) pop mov dec sahf mov pop shrl mov cmp mov xchg aaa pushf mov imul push add movsl push sub pop sub cmp jmp xor push cmpsb adc je outsl xchg cltd scas push xchg push jmp pop dec sub in rcrb jns shr xchg shll arpl or rorb es out das into inc data16 fsubrp sbb out dec pop sbb or sbb push aas lds jo dec lods cltd and push add sti test fidivl jbe add fyl2xp1 ret call fdivp sbb ja fwait shl lea adc sub dec mov faddp mov sub adc (bad) scas xor xor xchg (bad) mov fwait dec mov bound and imul push inc mov sub cmp push int js into lret xchg push sbb pop sti cmpsb ja inc xorl not iret dec ret test aaa sub das out (bad) cmc jmp mov pop xchg (bad) repnz sub adc ror dec sti sub out jnp jmp xor inc sub jo cmc and popa push cmp imul out pop and mov push pop stos les shlb jle inc ss lods inc jae inc orl inc push addr16 and sub lret xor les pop fcoms lahf outsl test stos stos hlt mov out negb fsubrs adc mov add add pop notb cli in mov lret cmp cltd adc sub fs aad mov out lret push lock movsb insl adc and jp das sub fwait adc cwtl dec mov adc insl movsl sub push add sub call fwait inc test push jo cmp push scas rorb scas aam dec hlt sub je mov out jmp xchg std loope rcll test cmp push jmp mov sub dec lods popa pop int3 or lret hlt cmc add add sub adc add adc cmp (bad) cld inc mov cld add mov push mov cmp adc lret iret icebp ret and (bad) (bad) stc repz cmc stos mov jne andl mov std call mov push add xor xor xchg mov mov imul lahf lods out cli sub leave je or stc cli hlt jmp cmp inc loop mov bound inc fcom pop xor push (bad) jae pop test or or mov pop les test aam add into fwait call icebp xor out pop testl mov fist or sub stos repnz dec rcl jae (bad) xor sub je sbb clc mov ds add pop add addl jbe fucomi lahf xchg decb movsl out xor decl pop sbb inc dec mov mov mov fcomip and lods out pop outsb (bad) dec (bad) cmp ss cmp jecxz jbe dec gs mov jle scas fildll daa dec mov cltd mov push jmp out push jle push notl sti fcoml mov imul sbb xchg pushf movsb adc inc push es sbb scas imul (bad) xorl std xor mov mulb ljmp dec popf cli sbb sbb test fmuls sbb enter clc ljmp negb sbb mov and shrb setl test lds and push scas jnp (bad) repnz std setae jns clc shlb loop add xchg ret adc add xor mov push xchg cmpsb (bad) rclb and imul mov outsl enter adc jecxz imul xchg jns push nop sahf adc cmp push add mov imul and fs jo dec test jecxz mov pop int sub push inc mov call or loop xor push cwtl insb jae es sub popa and ss mov repnz lcall fcmovnu icebp rcl sub mov test pusha and rorl adc sub mov adc loope dec dec lret insb clc data16 xchg dec inc inc mov and clc mov outsb push movsb xor jo jecxz sahf push (bad) sub stos mov and cli xchg pop stos das enter mov arpl in push adc mov inc pop inc daa les ss imul cmp inc mov insb (bad) das test lret xor iret into lock outsl dec pop ja push mov sub push push imul xor adc push rcrb inc or mov mov or inc jge sub mov pop pop jp xchg adc dec (bad) cld jge fsubs fstpt cmp mov inc mov lods xabort clc dec sbb repz int3 scas repz imul loop (bad) inc mov or jl (bad) push pop mov mov lcall xchg daa sub pop sbb xchg or sub clc push mov push mov xor mov or out or sbb js xor push scas pop inc mov fcoml cmp mov or jnp bound and push stos mov push sti push sub rolb pop push push (bad) ds sarl into sahf (bad) mov add daa repnz insl sbb and push mov out (bad) bnd (bad) or mov dec (bad) dec rorb mov lret and outsl or cmpsb mov (bad) mov gs push inc mov mov loop adc adc dec jle inc pop add pop insl xchg jne push addl lahf cmp and loopne or es data16 hlt xor fimul out (bad) pop jmp cmp jp sahf pop js call in mov es sub and es fcmovb out push xchg int push bound jb negl xchg clc outsb (bad) mov pop imul mov dec cmp inc push outsl shrb arpl push pop inc int3 data16 or hlt aas (bad) pop adcb test inc cmp cmp mov lcall rorl lret aas xor hlt dec addr16 cmp out adc aam test add mov push add jecxz xchg add cmc es pop into pop mov xchg sarb sub pop mov add rol fisubr dec into and imul add outsb or nop fldt (bad) cli fmuls pop cld jmp or pop (bad) not inc xchg and sub cmp repz gs (bad) xor stos fwait mov fs pop or cmpsb pop sbb lcall fnsetpm(287 xor mov fdivrs out mov xchg sub lahf or call or ret or sbb fs or fwait test or push or iret push cli daa lcall cmp notb adc jle pop lret test mov clc dec mov push leave mov or xor mov and das insl pushf sahf vpcmpeqd (bad) shrb dec push stos xor inc (bad) std dec fyl2x lahf insl cmp jb mov sub movsl outsb jo jnp cltd pop call imul xor xor cld aaa into bound push dec ret int3 cmp fistl mov out sbb sbb jo notb out ret repz xchg mov and repz loop mov sahf popa idivb dec fildl out jae,pt ficoml pop mov or lea dec (bad) and or mov fdivs in shll adc movsb call mov pop jnp shr dec jne mov mov sub in mov loopne xchg xor jns arpl fist (bad) roll lods sbb ljmp lret (bad) push repnz in push push dec sub mov inc bnd mov loop inc inc xchg fsubs mov xor or out cmc (bad) xchg lea in push xor jl arpl outsb or inc mov cmpsb ljmp xor sub mov sub inc call shrb aam sbb aaa cmp sub arpl insl sbb or aas or mov add pop rorl jg pop mov xor jnp lock orl rorl ds movsl lret jecxz cmp fistp pop jecxz sub int cmp orl add xchg addr16 inc jbe (bad) mov push insb cmc in (bad) mov pop fildll aad repnz jge sarb aaa lds addl pop cmp aam cs pusha lret sub mov stos (bad) aad outsb test js pusha movsl sbb nop dec lea (bad) adc xchg je call jb xor xor mov cmpsb cmpsl sarl and pop sub cmp push jl (bad) pop iret adc adc adc sub lods push or mov arpl inc mov and ja push in jecxz in daa jecxz popa in cmp test repz call scas adc pop mov mov xchg pop mov sub pop fadd data16 inc movl mov aam sbb sbb push mov js loopne mov jbe xchg in hlt fisubl push cmp pop xchg subl aam push pop or nop jmp adc mov jae (bad) fs sub dec cmp sbb fs js push inc arpl gs dec push sbb or ds mov adc outsb aad mov lods xchg clc cltd or (bad) imul push pop xchg scas xor and fidivrl rcl lods rcll nop sarb bound test or enter pop xchg add dec mov and into cmp lds adc pop xchg cld aas stos inc add mov scas mov cmp sti out in push push mov lret adc scas jae out rorb fstpl xor pop jp pop (bad) cld lahf xor hlt (bad) pop push femms adc in or out mov push dec je lods testb lock hlt pushf mov in push sbb roll popa adc (bad) pop adc pop push lock ljmp lea jge xor cli mov ret jmp addr16 lods cwtl fmull mov test shll jecxz sbb add les push jl pushf mov cmp (bad) inc dec das pop xchg xor dec or roll xor xchg adc lods addl jge xlat push jl je leave test sub bound std gs push scas xor in scas sub scas outsb sub scas inc fwait push stos sub adc movsl adc sarl data16 mov or mov xchg pushf jmp jge pop es dec push insb cmp xchg push imul pusha push jge or pushf (bad) popl xchg repz pusha lret mov lods movsl mov in sub mov pop hlt sbb stos adc pop mov push stos sbb jg insb (bad) cmp jecxz add add daa push cmp add cli in pop das je mov ret sub (bad) pop adc fldt lea dec or in sub mov push cld outsl bound outsb fcomi fsubs jle and fildll mov pushf ret xor gs jnp jbe shlb sub mov and (bad) outsb xchg ffree in lret pop sub ret out sub mov loop icebp jbe fbstp mov (bad) lods subb dec cmp ret jb mov int in push xchg movsl (bad) leave xor push lea aad out cmp out jecxz and sti mov iret add shll pop xor iret pop test dec int jge mov add shrl xor jle in inc hlt cli cmp stos ljmp lea cld sub dec jl or mov ret test ja or xchg jle pop jle sbb popa jb cli push out add (bad) daa ljmp inc mov aas jecxz xor negb inc sarb mov movsb dec dec xchg mov (bad) cmp pop and outsb lret inc dec sub jb lret xor add (bad) sbb jg addl mov pop ss incl cmp (bad) xor add xor add cmpsb push adc dec test pop adc arpl leave repz ds dec push bound mov sbb scas push imul pop jae inc scas cltd in jecxz insl adc add adc and mov mov (bad) in in dec (bad) mov in inc les ret fs incb addr16 push lods rcrl mov mov test fimul aas cmp in mov std into mov inc cmpsb loop inc inc (bad) call mov cmpl pop mov add sbb in ja pop mov or sub in cmpsl (bad) jle (bad) lock push (bad) or int mov call out sti jmp out mov mov dec pop jno mov add mov and jae lds dec (bad) sbb sub es and inc iret xchg mov xor into pop cli xor int jbe (bad) scas inc mov xor adc xor mov imul scas fidivrl mov addr16 mov push aaa mov inc stc and push notb and xchg (bad) mulb bound mov stc sub cmp cmp inc lods add sbb jb inc push sub mov xchg aas fidiv (bad) ja mov int3 xlat daa or fwait (bad) popf xor arpl adc pushf (bad) mov inc mov push sbb cmp icebp ja xchg cmpsb out jbe adc push mov xor lods int sbb idiv aas fsubl mov aaa fwait mov sbb test adc in push std xor bound lret int push inc adc out jnp mov das mulb lods xchg inc out fidiv ja outsb aaa jbe arpl pop movsl fdivr insb add fmull xlat jl popf push outsb insb mov (bad) in sbb inc shlb aam and pop ficomp mov aam data16 stc mov bound and pop sbb mov pop enter (bad) lahf andl jp bnd or outsl int in cltd xor jne mov lea mov ljmp pop jmp add mov je dec repz mov test ds jge push gs inc (bad) movsb or jg std push lds push mov sbb rorl insl sahf inc mov mov mov inc sarb fnsave jbe mov dec jle sub arpl shrl cmp mov cli pop xchg cmpl ret aad cld cli (bad) pop cli adc stos out stos lds mov inc mov inc call in and dec (bad) mov call mov fs stos xor jp adc cltd or jmp movb loope cs push or fdivl jmp xchg xchg fsubr adc cli loop pop jo stos mov jo idivb sub sbb mov fcoms je jle push xchg xchg shrb icebp sbb mov fcomps lret push xchg fdivp mov cmp jb iret mov (bad) and or sub repnz pop loop xor sbb and pushf mov rcrl cmp std les dec inc (bad) cmp lock (bad) fistpll icebp (bad) loopne lods ljmp leave (bad) mov test fadds insb sbb push cmp addr16 stos lods ror arpl xor fimul mov imul cltd gs mov lea sahf popa sbb cmpsb enter inc imul xchg sar pusha call cld (bad) mov movsb and xchg out pop (bad) jns adc or sub add in or sbb pop rorl pop pop pop nop or mov mov push jb out insb inc mov sub xchg clc (bad) (bad) idivl push shr push (bad) mov jg movsl and pop jo nop jmp adc shrl popa icebp dec sub insl andb mov call xchg lcall push adc mov roll mov arpl int adc cmpb push add push insb outsb shrl dec xchg mov jae pop outsb (bad) cltd or sub daa loopne (bad) xor mov (bad) rorl cwtl scas call xlat shlb xchg in je repnz nop push sahf xchg cmp enter push (bad) out jae fstl or cmc je std loopne mov movsb adc add jbe inc mov cmp test out (bad) mov je sti int dec sbb xor pop cmp bnd inc cmpsb push or ret gs fbld lret inc aaa jns cltd jns cmpsb in cmp mov mov pmulhuw int aaa int3 cmpsl sub hlt ss pop mov jo push cmp inc popf mov ret push sahf in in lea loop sbb fcmovbe cmc es inc dec mov push loopne xchg cmp and pushf mov (bad) jns fsubs lods mov jg jno sti sub (bad) push jg loop outsl cltd in xor inc inc mov cmpsl cmp shrl cmp stos or (bad) ja mov cltd test dec add xor ljmp jae sbb push add (bad) jae in stc mov sti push leave add cmp jle adc call jp pop cmc hlt mov mov or mov adc xchg sub dec pop repnz sbb or cmp push fildl out or outsb add push and lahf in aad mov fnstsw enter push mov subl jg ror mov out mov jne mov xor push lods inc sub inc sahf lahf and add in cwtl repz jne sub orl iret jb aad push push mov inc sub sbb xchg aad aam (bad) mov in dec imul jno adc movups xchg (bad) popf pop adc sarl lcall jnp test dec lds jp add fidiv dec lods ret ljmp divl fsubrp add imul test xor inc test sub test jg adc into fisubl sbb (bad) push aam pop cmpsl rcrb icebp test jae addr16 jb in fisttpl and dec aas hlt call mov fcomps adcb xchg push dec jns fdivrl fstp and jnp cmp add into jno adc pop cltd cmpsl cmc jae lods push hlt rorb loope pop push mov je dec out sub sbb add and enter dec jl dec push into pop push mov loopne push xor outsl sbb das xchg push aad (bad) pop sbb sub fidivl mov mov pushf rcrb sub mov out lret push cmc scas sbb pusha xor or cli addr16 xchg subl cltd fldt and (bad) loop ja fldt jge into hlt pop rcll js sub mov test dec sub cld sbb pushf imul dec loope dec or (bad) (bad) out add jae leave daa out int3 fisubrl (bad) dec pushl or call push lea xchg push in sub inc inc insl fimul pop cmc mov int mov jp (bad) mov fwait call fcomi mov lds mov jecxz int mov or dec in sub jnp jb mov lret fdivs mov xrelease xchg jae cmp sbb mov cmpsl sub jns ret pop fistpll out mov lds jbe mov pop add or insb inc ljmp cli sub icebp out out mov fcoms mov int jbe and sub push dec inc jmp xor repnz fisubrl mov aaa fisttp adc outsl popa fnstenv mov mov and int subl movsb mov jb enter adc sub insb mov xor xor dec inc mov add dec iret xchg cmp dec jae (bad) push jl pop push add push lcall pop loope stos mov mov sub int jae and inc xorl inc inc cltd sahf lds add pop pushf ss in push or adc add rcr mov xlat fnstenv lahf sbb movsl (bad) leave lahf cmp mov daa jecxz xchg cmp and divl pop arpl movsl mov push jne or imul jg cmp or ret lods mov hlt outsl pushf shrl mov jge leave std (bad) frstor ss mov insl lds loope fbstp add mov stos push das fdivrp push dec cmpsl nop dec ljmp xchg mov lret popa cmp (bad) arpl addr16 lret fcmovb add stos aam enter sub mov or pop jne jo pop insl sbbb mov test push test add je,pt sbb es dec sub insl dec jle jmp pop outsb out adc into roll jns dec repnz xchg push ljmp mov fnop sahf test pop mov lret stos imul (bad) or mov aas xchg sub mov sbb popa add call mov (bad) insl cli jl cmc outsb (bad) lea mov sub sub sub cwtl adc mov test add aas xor dec rcrb popa mov sub dec pop (bad) adc mov aas sti fnstenv pop cwtl sbb imul jae frstors or mov dec cmpsb push cmp sti js out call loop je aad cmp pop mov sar (bad) iret (bad) mov fdivs sub repz xchg fwait sbb rcr loopne or sbb pop inc movsl popa cmp (bad) int loopne xor xor jae js fstpl push jp mov fdivrl xchg adc aaa mov ja cs inc add xchg shrb (bad) icebp adc test add stc pop xchg into mov pop ret adc jmp sbb (bad) fldcw push jns shlb xchg popf cltd add xor les repnz clc (bad) aam push inc or into or pop imul and fisubr add sub jg out inc dec idiv out fbld xlat dec movsl pop imul das clc scas sbb add adc dec in xchg jno xchg pop in add jp or test stc mov lods cld jmp push dec fisubrl leave data16 mov or daa jp lcall aas mov std ret sbb stos push fstps repz push ljmp aad adc sub add test call adc mov mov xlat xchg mov outsb pop adc pop and movsb xor xchg mov xor mov cmp jl pop mov (bad) push cmp push clc loope sti fs inc shlb mov out inc cmc ja sub xchg bound pop add add daa bound lret cmpsl xor jle sub jg add adc dec pop test add leave inc mov pusha lahf mov mov pusha jmp sbb lock mov scas xchg iret testl and mov mov dec sbb cmp cs pusha dec jmp ljmp arpl int addr16 aam jne mov movsb sbb sbb (bad) mov add mov outsl lret adc cmpl rolb jne mov jne fisubl int3 fdivs adc mov push push dec (bad) xorb les mov push loopne jae sub sbb scas sub adc lret popa adcb mov jle add in pop jb jmp stc scas adc pop in test jns push rcrl mov sbb sub movsb loopne push enter loopne pop sbb push sti cmp mov xor das repz or orl or push addr16 xchg stos xchg test (bad) sbb lea jb stc cli jp ljmp or push and pop or fs ret inc jnp loope lcall lahf es outsb mov sti mov push lea mov xchg loop pop loope pop fdivrl loop mov lea cmp les xor out lret or xor inc dec adc jns aam and mov pop inc es lds (bad) xor (bad) jne adc ret mov cmovne sub cmp rolb daa movsl inc cmpsl xor gs rcl aam sti jp nop repz mov scas add fdivr in addr16 icebp xlat leave push push lock mov popa aas mov orps cs std fistp mov lods iret push cltd imul (bad) cmp jae adc add pop js jg imul adc mov lret pushf pusha xor mov call inc notl mov cmpsl mov in xor cld popf inc xor add jg mov sbb xor fwait pop jns pushf jo dec jecxz nop xor test cmp pop pop or cmp fcomip lret cli xchg lahf sub jmp lahf cmpsb mov stos inc lea push mov inc ss push mov push scas lret sub fstpt xor cmp inc ja les xchg ja jns mov sbb mov and mov test cmpsl and mov add hlt roll fmuls scas push shlb mov fisttpl mov in gs pop inc call pop add dec sub ficoml jl and sub (bad) pop jge inc adc xlat aad add xchg in (bad) daa pop (bad) icebp jmp pop pushl mov cmpsl mov add les ljmp sbb sar std rolb (bad) dec fwait jle popf fmuls push cltd mov stos (bad) and jno sub jp test test pop cmp or orl cmp inc lds sub xchg popl mov cmpsl inc mov xor mov mov ljmp push mov loop aad mov push push (bad) in mov inc aam rcrb pop sahf fwait pop jne xor incb fcoms roll mov rcrb incb leave js xchg cmp cltd sbb inc and mov jl dec pop lcall pop and jno scas insl (bad) imul js inc sbb in int xlat js lds or pop stc test xor jnp xor push std lods and loop dec xchg imul mov std cli inc in mov (bad) loop dec mov pop pop xchg (bad) mov dec mov inc xchg or out nop popf lods mov jg adc faddl gs (bad) xor movsb les (bad) jae dec cli iret in stos mov dec sbb mov icebp cmp cmc lods sbb cmp cmp inc imul and repnz xchg inc xorb and (bad) push cmc ljmp cwtl mov dec lds imul inc loop xchg xchg shr sbb mov add inc sub sti xor push sbb and mov mov and mov mov cmp push pop or jle,pn mov sub data16 lcall mov addr16 mov adc in mov push shrb pop bnd test div popa or icebp jae add ljmp mov xchg inc jge out push pop xchg xchg lods mov leave cmp mov sbb dec cmp lods push (bad) stos test mov jg mov addr16 push aaa jbe out testb test loopne mov (bad) mov mov adc mov shlb mov xor mov mov sub mov push xchg outsl cwtl cs mov cmp test mov and push cld xchg pop cmp int3 push cli cmp or sbb enter xchg int3 pop out mov jmp mov je les fsubl cmp pusha sub push mov push clc das mov out xchg add shrb popf mov or das shrb cli fnstenv insl cli mov pop aaa les adc push es cld (bad) insb lret lods push stos test xchg sub sahf cmp cli jne inc push fcoml xchg mov jb and mov inc add mov mov add shrb das push pop mov push mov test (bad) cltd loope cs std xlat mov aad jno sub aam push or mov pop push pop sbb sub in cld in or dec test jbe pop mov cltd sbb jae (bad) mov lods data16 in addb jge out sub jge mov ret (bad) and add fs pop insl jno mov lea or add inc xchg out inc fnstcw (bad) dec add movsb imul or xchg xor xlat fsubs aam cmp arpl (bad) stc (bad) xchg aam (bad) rolb (bad) push inc mov mov and jo jbe in dec mov push xchg testb xor jo sbb stos xor imul push mov push ffreep mov fwait xchg int3 out movsb and out sbb (bad) (bad) pop enter xchg in mov mov aaa ss jb mov imulb inc pop mov ja pop push mov idivb in ss push sbbb inc sbb mov sub and mov push add mov xchg imul call xor bound jnp lcall cltd inc lods mov cmp fdivs cli push out push aad xchg pop movsb mov push sub push pop cmc aaa inc lds out fwait push mov and mov mov fidivl pop loopne notb dec sbb cmp xchg aaa sub or mov aaa and test sarl pop pop xchg push mov lret repz sarl scas mov pop dec call push sub sbb cmpsb mov sub jmp addr16 movsl ljmp jnp dec mov adc in dec sbb cmp loope fsubrp idivb leave das fs jmp xor (bad) xor js mov mov cmp inc mov call adc adc data16 mov sahf rcrl aam push and fucom jnp cltd cmpsl jne inc cmp call sub pop shrl mov pop mov imul sbb sub jo push rcrb ja jmp xchg sub lock xor test push or cmpsb adc push sbb movsl and mov fldl gs sbb rorl out xor ja lcall imul movsb nop fiadd dec jecxz mov pop dec fs pushf pcmpgtb imull int3 push xchg cltd mov xchg mov in pop push cwtl ret out pop lret pop stos push cmc (bad) xrelease mov mov mov adc iret popa loop cli in inc pop icebp push add add lea mov leave cmpsl fstpl mov jecxz icebp imul xor imul pop scas pop inc leave sbb adc ja pushf push or xchg fsubrs mov or jl repnz jecxz pop inc inc mov fcmovb jns or fcom push sti test lret pop dec (bad) out push xor jnp test sbb add add inc dec adc and dec adc nop add and sbb stos sub iret (bad) jmp jp out or dec pop inc mov out enter lcall sahf or cs jnp pop sbb xor arpl mov popa xchg sub repnz cmp icebp fs or test movsb out outsb ror (bad) (bad) outsb aas clc sahf icebp sbb xchg cld std pop push pop les xor xchg and notb cmp dec sti stos pop xchg popf inc sub lods mov push jb push out in push cmp sbb sbb mov fsubrl adc push loopne cs test or daa stc inc jne cs lcall mov stos mov cmp out rcll and outsl or arpl dec mov arpl imulb es les dec push movsl push pop aaa sbb jae test jl or sub mov out xor notb lahf jb mov sub xor cmp sbb imul pop dec add adc sbb cwtl aad stc jno in fwait xchg mov mov push insb dec pop lds stos mov dec adc lods int (bad) mov xor cmp mov mov bound icebp repnz cltd jae into lcall sbb arpl les incl jle (bad) cltd xlat push loopne mov inc mov push (bad) lock mov aam sub add cmp jb mov jns mov jbe lahf ljmp aaa ret (bad) popl fs (bad) mov rorb mov or and xchg popa ret out jl lea mov ds sub sub inc imul push jmp cmp ljmp pushf (bad) mov mov push inc addr16 orl inc in jmp nop fisttpl ja fstpt fdiv adc call jae add lret or sbb imul or xchg push or fstps hlt aas dec adc aad test popa xor and cmc ss add cmc cld sbb and add fwait jnp lods jecxz sbb mov xchg inc test jmp mov sti repnz ret mov xchg cwtl cmpsb dec jle cmp push aam je,pt bound clc push frstor dec lock loop pop es push pop pushf xchg jb stos xchg nop jge fisubl fs dec ret jg lds popa scas scas into adc mov xchg out in pop int sbb xchg jb pop (bad) inc pushf cld adc out in pop lods lock imul mov mov or test lock int sbb pop scas repz or (bad) lret cmp add test pop out dec or mov rcrb xchg push fwait rorl or lea enter (bad) leave fwait mulb repz cmp fsubrp jg mov cmc fist popa and xchg cmpsb push add cmpsl push mov dec popf cmp and push xchg cmpl pop push and cmp fdivrl ja jmp and mov loope xchg subl adc mov xor ja adc mov mov cmp dec pop sub les cmpsb and inc pop cmp jne imul (bad) into in mov es sbb ljmp xchg fsts leave into repz inc xor test cmp (bad) into into cmc ficom jg lret jmp add sahf adc add mov mov add cmpsl and sub stc aaa sub andl xor rcrl cmp insb gs mov sbb shlb in mov mov push mov addr16 push mov jne xchg ret loop notl xchg decl pop mov and dec lea jge mov adc out addr16 push mov push shrl ret ja jge pushf xor dec rol inc push mov cmpsl mov scas add addb xor ficomp or int3 out sbb std jno sbb mov test cmp adc pop movsl xor push enter ja mov mov test jg int clc movsb mov push or ja dec inc push sti push cmpsb dec fs arpl and fsubrs add jl in in sbb (bad) les mov lea fimul mov dec test ret orl aas jno fwait xchg shll inc jmp sahf cmp fwait ja aam cmp jp (bad) js pop repz pop or cmp adc scas insl (bad) mov xor pop outsb adc int3 bsr mov fldcw mov stos fisttp and inc popa out xor outsl sbb pop or sbb inc push daa cmp leave idiv push jp push lcall adc fadd and mov xor sbb and in js jne xchg add dec (bad) fsub push jb popa inc das scas les cmp push js cmp and (bad) mov or je inc xor jno adc je cmp scas imul movsb mov mov lea pop mov jb mov (bad) inc sub jl imul mov cwtl xchg repz xor clc or or xor pop lret icebp dec out ss xor subl data16 mov mov add adc jne mov ds insl sub addl pop test xchg les arpl (bad) jp rorl mov xlat mov pop ret mov sbbl cmp mov cltd lahf mov jb add mov lret mov lret push leave fs scas lods xlat sub or popf pop xor pop nop jl (bad) mov stos sti adc dec mov mov mov sbb add adc pusha pop repz push dec jnp nop sahf pop jl popf push ret popf pop rclb mov (bad) pop dec sarl add dec and mov in sbb test add imul mov mov pop push fwait dec cmp sub mov push sbb lock sbb icebp cmp inc lds add jg mov in jne loope or out pop lahf inc pusha pushf (bad) jnp lcall mov fs jne xor int3 stos inc jmp add push pushf push stos fnstsw mov sub test rol repz sbb repnz mov mov leave fcoms ss jge lock and sub cmp or xchg outsl bnd mov nop pop fldl inc les stc fildll fs (bad) mov jg rol dec or sub aaa (bad) sbb daa stos sbb mov jmp adc xchg dec and fsubrl cmp int mov data16 inc cld mov popa fbld cmp jmp mov sub pop pop in or (bad) test mov sbb in push movsl xchg ljmp int3 iret outsl je nop fstl lret fsubrp scas (bad) hlt (bad) mov ja cmp mov push inc bound lcall fninit sbb outsb ret iret add add or (bad) (bad) xor mov pop adc mov popf or jge test pop (bad) cli cmp and orb xchg inc jno fist jmp lret in aas (bad) or repnz movsl stos xor adc jns pop (bad) lock and mov inc mov divb xchg (bad) rcrb jnp rcll lret xchg lahf addl ficomp mov push cs mov stos jge push sti xchg loope idivb mov jmp movsb inc lahf push (bad) xchg push and add aas addr16 lcall cli sbb add and rolb or mov out (bad) sub jae call mov imul lret xchg imul cmpsl mov push ret lods adc mov (bad) ds imul addl outsl sbb and loope sbb mov lret cmp std stos or inc inc pop pop jg aad sub addr16 iret sub inc inc pusha jge xchg cmpb mov fs xchg aad jb lock jl adc (bad) fninit mov sub mov mov out stc jns scas insl or push push mov frstor cmp test add xchg and sub push pop test push sbb es jp mov enter andl imul xor fs xlat in out or or daa pop sub pop push outsb inc push subl pop std lock fldt loopne jns out imul push aaa or xchg mov das aas xchg jl fsubl iret rcrb jp mov mov ds lods pop clc add mov or lcall repz ss mov adc jecxz lcall mov into mov (bad) (bad) mov subl popa mov adc into cltd lods dec movsb imul mov push clc sbb int3 repnz push pusha testl js pop icebp loopne icebp add (bad) or inc pop lds mov addl cmp mov pop roll xor lock test roll dec push or and and push rcll gs imul pop and stc lret (bad) mov sub pop mov inc mov ljmp adc lret loopne sub cmp lods or push ljmp (bad) mov int dec or mov movsl mov sub jo sbb sbb sbb push rolb jae jle push cld lret dec insl sahf xor push test jb std cmp inc repz jbe xchg dec or pop mov adc and sub aam fsubs ret leave and mov movsb mov fdiv ja sub out add sub fadds ds call lods push dec je into fcoms or fcoms add rorl add cs sub push pop popa or cmc push xchg jp movsl aas lret sbb pusha push sub aaa ljmp mov dec or les fsubrl test mov push imul lret outsl bound into fsub sub movsb and mov fucomi leave xor data16 jl popf xor add mov mov pusha sub adc std lods mov lcall adc sbb lods or sbb inc push in jb fldlg2 jmp and insl mov cmp idivl sub out add inc movsb pop xchg adc jno push int3 cmp sahf push cmp sbb addr16 cmpsb add xor and outsl sub mov in cmp call sbb lcall mov sub daa ljmp or lods dec stos lock arpl lcall mov and lods fistpll inc cmc das lret fdivs jle xchg (bad) repnz xchg sarl mov push mov dec cltd (bad) sbb test inc push pop or xchg xchg jmp and sub insb dec ror test inc add xor cmp mov dec or and lock or into xor popa loope mov sub mov inc dec popf jl push cld mov pop push ficompl cmp fimull daa cmc sbb jb repnz xlat popa mov dec repnz jo sub aad xor and pop outsl cltd mov idiv loope mov push xchg add subl out cmpl je inc pop xchg and and and pusha or xchg leave pop loope mov inc jo out adc xlat jno lea xchg rcrl in cld xchg mov int3 xor xchg daa mov sbb test and xchg fldcw sub pop (bad) rol rcrl subl pop (bad) pushf out and push push cmp add pusha and scas mov iret ljmp xchg jno cltd jns mov out test mov xchg lahf ss (bad) repz ret aad pop xchg paddd mov adc xor cmp jb mov pop cmp xchg insl and dec xor scas cmpsb mov fwait mov mov mov fnstsw adc and inc outsl rclb (bad) gs cmpsb and loopne test xchg (bad) lea xchg cmpsb jo nop movsb daa pop (bad) aam mov flds mov cwtl push sbb inc mov jne jbe xchg gs mov jnp leave (bad) dec mov jecxz and or add repnz xchg add mov out data16 mov jns int cmp mov sbb cltd popa jecxz stc mov and mov dec add and outsb inc push mov push call mov test shll mov loope push stos xchg out jno loope js push fimull dec movsl sbb fcoms lea mov movsl push cmp adc pop add dec subl pop ljmp rcl inc dec sbbb dec xchg jmp xchg stos popf dec xchg inc loop cs inc lods sbb cmp mov xchg mov push pop adc ret push fnstsw pusha dec jb mov mov jp nop cmp (bad) icebp or cmp inc dec popf inc aad sti scas push test stos inc gs mov xchg (bad) mov add in push nop out xchg adc idivl sbb sahf hlt push cmc xchg jl push add mov push mov cmp push cld pop adc xchg int push sbb adc lret scas push ss out and pop pushf gs push mov ficoml dec out mov add add (bad) popf (bad) in ljmp loopne xchg mov jb outsl xchg add hlt push std stos cmp or xor pop xchg popf std fimull mov test sbb or (bad) test insb lahf cmp popf dec (bad) imul (bad) int3 dec or cmp dec repz ds jnp push jb inc sbb (bad) pop mov fstpt pop push push rcrl aas and (bad) push aam jns cs addr16 pop xchg lds sbb cmpsb and sahf loope dec ss dec das sub sarb and jbe inc fst and mov aaa sub lds jecxz in std mov call adc cmovb xor stos test notl lcall std pop aad jne scas mov mov adc pop ret aam and sbb push lods cmp cmpsb std xor call ret or cmpsl sbb decl aam (bad) into push jge sub push jg adc jl loop or cmc mov cmpsb jb cmp lods rcrb jne test (bad) out imul or fisubl xor or (bad) adc jno push imul jg inc pushf movl cmp nop mov lea fadds iret (bad) xor or loopne cmp or push and cmp mov xchg inc sub addr16 les aas dec ds sbb clc sub push daa test cmpsl push ljmp mov cmp cmp out cwtl mov icebp add push sbb add notb aad mov cmp pop mov mov insb sub pop xor or lcall ret rcll mov adc adc decl add add jns inc inc ret add inc jno ss add arpl das or cmc setge fbstp pop lods sahf ret sbbl test sbb rolb sbb jmp cmp lea xor mov iret push or dec mov sbb dec iret or repnz int3 outsb lods mov imull popf lds mov jnp lret push adc shr sarl rorb fs mov les je jmp ficoml jns mov data16 test dec or sbb lds fidivrl sub stc jle out sti inc dec lods lcall mov lods stc sub push dec mov pop dec cs sub in sbb lcall cld div lock or xchg add fisubrl sub push in cmc push lods cs sbb loop xchg and jmp xor xor dec out mov cmp ljmp xchg cmp je fnstsw jbe or push jne mov lret sti jg pop lahf stc cmp subl and mov lea and testb xchg add gs dec outsl dec jne cld mov mov mov js inc xchg ret xor cmpsl sarb xor jp or cmp mov mov xchg mov daa inc and aad stc std lahf adcl inc icebp setbe call mov stc or ret mov jge mov and shrl into adc aas ja pop sub sub js pop and cmpsl call lret adc (bad) lods jns dec xchg mov cltd pop dec repnz jns jmp pop pop lock push aad mov mov mov mov rcrl inc push cwtl cmpl lahf inc xchg lahf mov sub mov and jle pop mov fwait bound roll cmpsb push shl and jne int call push jbe inc es daa cmp jmp aas icebp and cmpsl jo incb imul and (bad) add shlb sbb mov bound lods outsb or call mov popa mov sub (bad) clc out (bad) in add jae inc mov movsb sub jno movl lea sub (bad) out sbb mov sarl sbb cltd lcall mov stc rorl data16 jb cmp add lret xlat cli int3 xchg stc push cmp rcr stc xor or jp aaa ds stos xchg push out mov shrl cwtl add int jg ret (bad) sbb jmp and lods repz inc stos jl in add jns (bad) hlt fcoms jno push sub or jmp inc stos stc nop ret imul xor or cmpsl adc xchg mov mov and jl imul adc jae faddl xchg ja scas or in dec xchg jmp dec (bad) inc push rolb sbb in idivb ds mov lods jecxz jl je push pop push cmpsb lods stos cmpsl adc push pop fwait je lret dec mov mov icebp pop dec mov and out pop xor pop mov out mov scas imul loop xchg in jge es fdivrs sbb mov cld fistl push dec jne mov cmp and stc and xchg and mov fisubl mov add add lods (bad) fisub int int imul in cmc jne jg jno jbe movsb into jae cmp add jbe ljmp (bad) sub repz jns popf mov jg push out sti jle in in ljmp mov notl bound adc xchg adc sar in in popf sub push (bad) jb push scas std mov imull jae pop push jle into scas in pop push ds jmp mov or and or jp sub movsb mov (bad) nop push dec inc loop lods mov outsb add sahf popf data16 fmuls mov out push cmpl out insb sub mov iret mov add flds cmp inc xor jns sbb data16 and cli and adc icebp inc mov ror xchg xor inc scas outsl push sub xor jmp js imul js int3 ljmp repz dec and add ret insb fwait sbb clc mov mov outsl and pop xor dec cli adc (bad) js cwtl lahf mov xor imul inc pop mov (bad) lods mov pusha pop xlat xor mov insl and inc lret mov add lods pop sti movsb lcall or mov mov out ficom lret mov jbe push scas fidivrl faddp cli push faddl jno sbb cmp aad (bad) jne pop mov movsb loopne ror mov outsl xor and shll lods sub (bad) cmc jle (bad) (bad) xchg xor push in out xor inc jnp sarb xchg push dec insl or sub and fstp xchg mov rcrl cmp push adc pop jmp into cmp lea dec popf xchg cmp inc pop or push sub pop or sarb sub ret lret pop mov call push ret int3 or jmp or inc (bad) mov mov xchg lock add sti rcll mov movsl outsl div sbb mov mov daa mov dec (bad) sbb cmp push fnstcw jns mov decl or jecxz test jp adc cmp in repnz sub and clc dec repnz xchg sbb sbb repnz sbb sbb sbb mov test cmp push jp lock out mov mov cli jb aad jmp xchg dec add arpl nop ljmp arpl mov hlt addl cwtl mov and push test hlt adc cs fsubp push mov adc fnsave inc int ss jne add dec push stos cltd testl cltd loop int3 or jmp jp arpl and ret xor int3 dec popa sub loope lcall sub mov jnp push adcb fisub mov notl push inc add pop fadds stc push ja xchg neg push mov sbb sbbl repz mov jecxz xor sbb insb arpl mov mov lcall in and add out mov mov pusha cmpsb test pop xor ss mov lock jp fnstcw push xlat andl fist mov aam ret mov popf loope inc add add (bad) incb pop and std sub dec cmp or scas fucom (bad) jae or cmc add mov mov popf inc pop mov mov es leave (bad) sub pop (bad) sub inc imulb add movsl xor cmp lret stos (bad) repnz mov fmul mov fisttpl jp test lret adc call pop jmp mov or pop movsb pop pushf loopne ljmp das cmpsl dec leave add sbb sub nop scas xchg push pop jecxz cvtdq2ps dec popl stos loope jb jp pop dec gs cmp repnz div (bad) sbb dec xchg frstor outsb movb jnp xchg mov xchg (bad) fnstenv xchg negb fstl out xlat push xorl xor push movsb test clc cvtdq2ps repz jp dec sbb ja lock mov (bad) enter outsb fidivr sarl lcall (bad) cmp fucomp test mov aam mov xor inc stos dec push scas pop movsl rorl and inc fisubr scas xchg mov jl xchg clc xchg sbb in cmp rol jno lods (bad) mov or outsl (bad) pop ret sbb jge inc in or jno xchg sub scas xchg sarb pop sbb jae cmc sbb loope mov sahf ds adc dec fstpl inc icebp std lret fdivl jp jo in sub xor cmc lock sti dec mov dec push mov dec test into lods pushf mov push sahf jl lret fsubrs roll popf loop cmp pop cmpsl sbb jae lds bound rcrl fmulp push jecxz jl insb and push out mov push mov pop fbstp lock les int3 sbbb imul mov imul pop cmc jecxz cmp mov les imul mov insb cwtl fldcw inc pop in outsb (bad) daa jae loope into inc shlb mov mov mov (bad) unpckhps inc and test pop cmp mov in push sbb jb push adc lods aaa dec fldcw stos xchg test test jmp lock pop nop mov cmp xor clc out test stos sarl push pop jno lcall jle mov and ficoml divl fildl sbb cmpb scas jo inc stc mov lret fs imul jp mov popf lods xchg sub inc or mov inc sub ret pop mov js cmp jnp xchg loope add test push mov sbb mov adc loope pop push in sbb mov cmp jbe iret xor ja lret cltd mov out shlb leave std nop cmpsl xchg lods pop mov cltd push lret movsb jae test loope cmc and push or or and adc pop push xchg mov ss repnz push in es push or mov rcpps divl into mov xchg leave inc imul (bad) mov mov mov pop enter jmp mov mov xchg shlb aam hlt xor mov push mov adcb icebp aad insl cmp dec cmpsl mov lret push and gs cmp outsb (bad) movsl je repnz dec das mov test adc stos or pop inc mov stos jbe jl xlat addr16 lea test sub and push outsl push mov xchg cmpsb sbbl aam (bad) sbb add fadds sub in jg jmp std or aas mov xor push dec pop push mov jmp pop rcrb or pop insl (bad) and test icebp xor scas push xchg adc das das out imul (bad) fimul add mov roll ret push cltd adc mov cmpsb push fisubrl mov insl mov sub or inc xchg adc adc adc mov lods js dec stos lret insl and out insb outsl jp pop repnz inc and enter ret and hlt dec xor out cmpsl leave xchg aas cmp push movsb lods movsl test jbe sbb pusha in pop cs or xchg jns mov enter sub xchg clc cmp cmc mov inc push mov fcmovne cltd sbb pop frstor call dec loopne rcrb push sarl mov xchg push pop push repnz mov popf mov mov orl bound pop repz int adc push xor xor jns add jp inc in movsl fld (bad) mov mov adc add jecxz sbb vmaxss add stos test inc bound pop in mov push jmp test cmp pop into xchg mov (bad) lods (bad) push lret (bad) xchg mov or test mov xchg push cmp pop popf and aas adc adc insl push out sub push push aaa lds cmp stc dec cmp adc or cmp mov test xor lds aad xchg ret push popf sub mov enter mov out lret pop pop rcr fist cmpsl enter mov mov mov dec (bad) mov cmpsl inc xlat or jbe aaa or unpcklps mov or sbb cmp loopne mov sbb into sub mov jp lods pushf out fsts pop mov andps jle int rcr inc add nop lahf sahf mov add cmp dec push and sbb test xchg and dec setbe push cmpsl std sahf mov cltd cmpsl insl ljmp enter shll ret push aaa mov cs add fistp mov xor popf mov xor rcrl in dec jmp add push and cmc leave push std push push stos xchg (bad) out mov mov iret push loope fnstenv popa cmp movsb and xchg test inc (bad) sub xor pop (bad) xchg push cltd in ss sahf stos lret xchg jbe call push int sbb inc mov sub or mov int adc adc in mov fist popa sbb adcl push mov xor xchg cwtl stos addr16 bound (bad) cli push mull add mulb mov inc and or scas cmc jecxz fcomps cs dec jne in sar int3 aas (bad) adc lret rorl cmp mov dec cmpsb outsl cwtl sahf ss dec inc (bad) xlat loop dec xor push out push out dec push ret subb lds inc jno and mov mov ja xor scas (bad) shlb xor cmp imulb rcrb xchg sub push loop pop or gs jge sub cmpsl js cmc adc in or adc popa mov dec lods jbe data16 or pop out fs jle js subl rcr les mov cmp shlb pusha std imul adc pusha push cltd pop test rcrb sub xor inc popf cmp sub sti cmp ret xor mul std sub stos push add inc push inc call cmp fcomps cmp pop mov popa lds ss (bad) js out add fisttp insb enter nop xor jne push xor arpl (bad) jp cmpsb dec in (bad) stc out lods mov mov (bad) std mov pop mov jbe cwtl (bad) push out fbld mov sarl fs (bad) fs lods mov loopne test test or pop pop lods ss dec dec std sti outsb out sub mov jb lods loop mov xchg push (bad) sbb in test cli idivb mov sbbl lock call lods lcall icebp adc mov xchg in adc pop and arpl mov shr fs andl cwtl push pusha xchg andl xchg add movsl addl pop push mov push push add addl test and repz aam or push xchg xchg test ss jl jbe imul mov hlt mov shll in cmpsl shr shr pop ljmp cmp lods push xchg pop fisttp loope pusha adc out or aad mov add pop loop jns (bad) add or test fisttpl push push xor inc cmovb sub cmpsb or mov push mov push jg sar xchg push jno out jl insl pushf pop fnstenv xor mov subb push xor and mov lahf dec outsb js nop sub inc lea pop add mov xchg aaa daa adc adc aam push out push scas pushf pop cmp aad xchg xor fucomi xor xor xor sbb mov push in dec jno imull pusha aad xor es mov mov daa adc and cmpl adc stos pop sub cli lcall outsl inc popf pop xor inc out outsb int3 faddl fldcw imul add repz mov dec sbb jp jbe mov xlat push mov repnz movsl rcrb lret adc xor (bad) xor in mov cmp inc mov sub mov add mov negl mov mov aaa addr16 jo push mov cs mov inc lods or insl (bad) ja xchg outsl cmp cmp lahf jns loopne pop outsb cld fcomps (bad) fwait jg xor (bad) add scas mov cmpsb ret or or or out jp movsl or popa test rol aad test out in addb pop or pop cli mov pop lahf xchg sbb lods ficoml xor xor cmp inc xor dec pop das popl test subb stc mov lods mov dec in sub dec lret mov aad push jae dec mov xchg mov nop mov mov xchg adc lock push inc adc pop daa (bad) cltd jne or popf lahf jmp push es adc inc lods (bad) popa les dec sub sahf jns xchg pop pop cli out push seto and cli shl inc test push rorl sub jb iret adc out sub push inc dec fdivs jns jmp lret xor test stos test mov daa daa ret cmc cmp pop lcall dec cmp mov lock mov loope adc cmpsl stos inc xor push je lods inc dec cltd into clc mov fdivl push mov jne cltd push sahf stc xchg popa adc sub int3 sub arpl out cmp ja cli inc in pop dec nop fsubl or sub test sub (bad) push sub dec fmul mov iret or jb add xor cmp mov add xchg dec loopne and add add push aaa enter jne ret mov sub xchg jnp ss test fimul cmc leave in loopne lahf loop sub leave scas dec xchg rcrl push popf push sbb cmpsb dec repz mov enter clc pop mov fimull mov ja xor add rol adc adc push push rcrl jle out cmp mov jnp dec dec cmp inc inc mov jno and mov and aas jecxz sbb jnp call test (bad) sbb adc xchg ja leave xor xor jo aas inc (bad) pusha sarl pop out lcall fwait inc mov sub mov pop sub lods int3 add inc bound repnz ljmp pop js and push dec dec daa scas hlt stc stos clc or push daa lret jae sbb sarl inc pusha jno popf cwtl sti or popf fstpt mov fistpl call repnz xor add jno mov cmp pop fidivr (bad) push sbb adcl add jo inc jb (bad) sar addr16 gs pop into pusha jg movsb ficomp fwait mov popf xchg or xor add imul push inc jmp cmpsb scas jle test and faddl adc vpaddusw stos imul sub cmp xchg mov jne inc in test pop stc push sti subl push push dec sti jb icebp dec mov pop mov stos jmp hlt mov enter dec fidivr adc pop push mov sub xor mov cld (bad) xor dec cmp data16 cs test orb scas sub and test add scas aaa sub pop arpl or jmp cmpl clc call rcll jbe push or mov ffreep iret cmpsb pop mov popf pop test test jb mov xor xchg inc jo and mov fidivr leave add aas or sti imul mov push stos cltd push push mov test (bad) test inc stos mov cmc lcall push mov (bad) adc push cmp cmpsb aas jne mov or mov adc inc jno mov aam aam leave pop leave js mov int inc inc andl icebp rclb fsubp sti mov ja cmp test or jo xor adc cmp pop mov push xor hlt imul icebp (bad) hlt sub dec mov and movsl mov dec jb (bad) lcall int sub cmp int3 sub outsb push out xor lods ret repz push cmp pusha ss lret mov and mov in push push jmp add int sub jo scas mov (bad) jne jns adc jb or jge jl fidivrl xor pop inc shrl sub lret sbb cmpsb into dec and adc adcl sbb mov loopne outsl imul push push xor bts inc pop xor mov in popa es mov adc fwait xchg outsl jle or add ja inc out mov icebp dec mov sbb jmp rclb inc jge pop mov mov jbe (bad) jp xor inc dec loope lret xchg mov cli js sub addr16 sbb stc rcrb hlt dec add fisubrl imul jg ds inc das out mov push jmp or add unpckhps fwait adc xchg mov rcrl mov and scas mov mov adc iret or pop dec sbb push pop jns,pn xor jb xchg leave fmul push add out push call jne cmp out scas fild jae and leave std cmp or xor movsl bound and jl enter fisub xchg js inc or stos mov xor mov lods cwtl adc mov fmull movsl lock add jns ja test stos hlt sti dec stc pop jmp movsl xchg ljmp in ljmp lods mov jno push dec ret (bad) push xchg (bad) div mov test cmpsl in (bad) xor cld adc aam mov mov and add push lret rolb pushf adc and idivb sub jge dec fs in in xchg pop (bad) repnz dec arpl mov jl pop mov mov inc mov cs (bad) insb jecxz mov sbb sbb mulb sub int3 mov add addr16 rcpps cmp (bad) dec and jns mov ficom fst inc out stos xchg jp sahf nop neg repnz inc movsl xor push sub push lahf cltd int mov cwtl cmp out cmp shlb ficompl push add sub cwtl inc sahf xchg jg repnz mov jmp lret jmp fdivrl cld fistpl or outsb fldcw fnsave shrl and jle pop loopne (bad) fnop cmpsb adc mov out bound mov clc addb push inc pop ds xchg inc xchg cmp mov and enter call xchg xchg hlt jg mov aam or pop ret leave dec loopne roll cmp (bad) xchg push test jecxz xchg int3 sbb add (bad) movsb cmpsb mov scas orb inc jle mov (bad) enter js aad pop rorb or into and jno stos inc mov jle (bad) lret (bad) push clc call push pop movsb lcall out add xlat inc stc mov inc cmp loope jge xlat jo ret sbb aad mov jb (bad) gs out enter cmp adc and mov sarl sbb jne aam stos and adc mov push enter addr16 ds mov push pop and fbstp or and insl daa and pop and incb test hlt and (bad) aad xchg or aaa stc sbb (bad) int3 ret xchg cmp cwtl das adc and test or xchg adc xor rorl sub sbb lods andl jns mov or mov mov push push mov xchg push xchg mov mov jecxz inc jae lods out jne aaa pop xchg mov push nop aaa in leave sub shrl iret out daa lods push cltd jp mulb fimull movsl push dec mov pop lea xchg shl (bad) jmp pop cmpsb or icebp inc add iret in jl pop jne jns fmull cli ljmp xchg or inc ja scas push xchg sbb push icebp les sti clc mov int jmp cs sbb (bad) loope and mov popf xchg stos sbb (bad) push mov je dec xchg cmp mov xlat inc sbb inc cmp pop jl pop mov adc loope out push andl jge sbb (bad) pop sar shrb sub cmp jno lods repz (bad) mulb or daa pop or lea popa cmpsl call push sub test lcall jns popa in inc cmp loop test mov add rclb xor pop in pop jnp cmp cmp cmp sbb pop enter std adc and and sbb in mov inc popa clc or fistp pop push push xor mov fimul or mov dec adc dec push xchg repnz jecxz mov dec aaa pop (bad) cwtl cwtl or pushf dec dec fild ja scas into test push rolb ret lock out push adc cs out adc imul ja insl sub jg ss add jno pop bound mov pop lcall daa sahf pop mov xchg mov and ret fnstenv jb shr cmp add outsl sub imulb push sbb xchg adc mov sbb push sbb mov inc mul jnp add sbb mov push pusha jne sub sub negb mov arpl xchg test sarl push into scas push aaa ret jnp (bad) mov pop cld cmpsb sbb push ss arpl lcall add mov pop pop sbb dec scas adc push icebp pop ud1 and roll jb cmp inc pop or dec adc dec mov mov adc mov sti jno test mov dec push jle,pt push and mov sub xor adc paddsb and (bad) fdivs dec sub xor push stos push in loope push dec add mov mov nop das mov or rolb insb aad fdivl mov push mov xchg dec mov cs mov sub add dec and ljmp add cmpsb shrb add push aas dec cmp jp adc adc push out or mov pop xchg sbb fsubl aam mov cmp iretw xlat inc popl sub jl dec cli pop scas test sub imul out push (bad) aaa testb mov movsl sub xor cvtdq2ps lcall mov push out cmpsb or cs sub cmp add out int3 inc add pop or inc stos fidivl aam daa icebp mov sub and mov sahf divl rcrb xchg and sub push insb push pop mov faddl mov mov inc fildll sbb mov add sub push jecxz cmp stos pop pop push fs and jne inc adc sti outsl sbb dec jecxz imul jecxz mov mov and sbb adc mov mov xor das aas lods and in fs cmpsb add sbb mov mov mov pop mov stos out inc push call pop mov pop out push lcall jo,pn addr16 in or cmp pop adc movsb insb push test sub pop lods rorb stos inc lock push enter and mov aas in mov cld xchg lds (bad) mov lds mov mov adc inc mov pop jns lret iret jae idivb hlt insb cs dec mov gs jns dec cmp inc sbb sbb xorl dec xchg es xchg push pop int3 adc outsl or adc out cmp xchg xchg pop rcrb xchg cmpsl rcl jns adc out test and clc out in in cmc push mov jb insl push dec fnsave repz hlt shrl xor sbb (bad) xor cmp mov xchg imul fisttpll imul or push sub out pop in addr16 test jb and fnstsw lret ds leave xlat xor mov mov imul sbb js lods push jle or lret dec int3 mov loop xor inc nop jns adc sbb in xor orl pop inc sub cli adc push inc dec dec mov test mov sbb push (bad) addr16 movsb inc dec mov mov cmp je xchg adc jecxz mov cli cli pop cli les imul adc scas or popa clc lea cmp popa xchg push xor mov es js pop mov sbb test mov lcall test mull loop sbb movsl cmp loop sbb outsl ret adc out loopne nop in out inc daa popl cld ds inc and int jge or scas in in inc loope mov scas pusha arpl sbb cmp mov lcall cmp mov rorl aad xchg in xlat cmp daa pop cmc stos mov daa xbegin xchg iret fsubr add mov cwtl cs and mov push jne test out mov jbe into shrb push dec (bad) mov pop push lods pusha jmp cwtl notl (bad) xchg mov hlt mov cmp push sarl into xchg daa push jp loope cmp fistpl lds inc lcall fisttp mov pusha paddq inc mov mov sbbb loopne mov dec loope movsb repnz adc in jnp sbb stc push jne xchg in fstps adc jbe mov mov sub int3 pop mov (bad) cwtl adc and add pop push adc xor inc jb adc daa or pop cmp jbe dec and xchg cli xchg adc gs inc adc sub dec jo mov jle arpl outsb sbb int rcrb orb mov mov in jmp xchg jae dec subb dec sbb mov adc mov jmp xchg negl loop frstor int3 dec mov test lea int movsl dec jne ljmp or or or cmp mov sbb leave sub xchg mov lret gs popa fmuls push negb jg aad xchg and mov in gs out jb xchg sbbl jb fcomps aas cwtl inc jg mov add pop mov das pushf pop add out icebp mov cmp out imul add inc xchg adc sub xor lods pop sbb clc ret notb loope js inc (bad) das push data16 (bad) rol shll (bad) dec loope outsb jnp cli vcvtps2dq push aas dec shll dec test sbb (bad) jnp xlat jae fist pop mov scas jo pop cs mov pop fiadd ret dec ja in mov jecxz lods mov repnz decb insl std leave ficoml fwait cli in aas jmp in ret in mov movsb imulb xchg andl xor dec pop cmpsb xchg cwtl xchg (bad) cmp or lcall push rolb jne pop cmp jg mov fnstenv repz jmp inc jmp cltd cmp notb mov out xor dec test mov push stos pop mov jo mov lahf shlb insl dec cmc cmp lock mov (bad) pop sarl sti rorl adc cmp mov jno and xchg sbb fildl jecxz or xchg std scas mov ret sub dec mov leave mov or jae xchg jmp adc idivl mov arpl out pusha ficom jg shrl test sbb (bad) dec push dec jb push ljmp cld xor stos pop xchg xchg cmp js sbbl xor mov es testb test icebp or and or push cmpsl outsb mov adc iret out mov pushf cwtl inc loop aas cmp push pop inc and xor sarb shlb gs mov test stos popa out add hlt jbe rorb fisubrl ljmp lock xchg sbb jmp push imul lock push adc xchg add push jl iret gs cmpsl pusha mov sbb inc push cwtl loope push js sub xchg push jg into fidiv mov xor jecxz ret jnp push (bad) mov or insl in jl fcmovnbe push lea in stc push and dec or aaa push popl jl repnz or adc xor popa adc (bad) inc shll sbb or and mov aad cmp daa cmpsb in xchg cmp dec cmp call (bad) xor jmp cwtl or scas es or sbb out mov pop xchg jecxz mov call cli sbb int3 je push fstps xor inc aaa mov inc jge sbbb mov push aam subps lds cmpsb mov sbb jg rorb scas xor js jle inc adc mov fsts roll xor movsl xlat stos jno xchg loop shl in mov mov std lock fsub insb test cltd or and pop mov jge jp and mov push inc sbb jnp and jle mov lahf test gs push or (bad) sub out enter sbb sbb cmpsl push hlt aas (bad) cmp add mov pop fwait in mov push mov test inc sub xchg in std cmc or lods mov orl add clc out cwtl cltd dec insb dec jns push ja mov out sbb sub test mov push sbb jbe,pt arpl shrl mov mov sbb clc bound xchg sbb cmp mov (bad) mov jecxz lar cmp push add out push jo cmc jns adc sbb mov cmpb les aam lcall sbb insl and pop (bad) lcall sub mov xchg repnz stos xchg bound vmovsd dec mov imul pop lds pop jbe sti jo test (bad) sbb xor mov shll pop or mov and mov sbb push dec icebp pop push pop jae sub nop in std xchg dec mov bnd clc ljmp mov test and mov xor inc mov adc inc shll mov int3 add adc js or sahf and (bad) jb push cmp lret inc adc popf or movsl pop (bad) pop popf test hlt subl push mov add cs test pop cltd int add jp sarb adc shlb jmp loopne sbb test xchg or adc jp pop push je aad push push push iret mov loop add imul mov test pop fisub lods sahf scas stos arpl sub ret adc jno pop mov in js out jmp pop lret push dec adc push mul adc and cmp lahf pop mov repnz xchg sarl or jle mov adc mov sub rep jb ficoml test ljmp mov enter in daa mov dec cmpsb dec push jp je,pt mov cmpsl ljmp rcrl jne leave adc xlat jp adc pop fbstp jl xor adc out add lcall and pop (bad) stos adc repz cmpsl and lahf dec inc mov and xchg jae xor jle (bad) mov sbb shl cmp sub rolb adc mov mov (bad) das xor jl inc mov imul pusha ljmp cmc in xchg xor and sub aaa test mov aad dec jl subl sarl ja xor lods (bad) fld mulb push insb adc pop mov scas jno xor dec push adc mov fmull cmpsb lret lods std test lret movsb jecxz lret cli jb les jge add mov les and dec mov mov pop test xor jb push (bad) cmp aaa xchg bound add gs pusha pop xchg (bad) jle lock lret add icebp jb movsb ja cld fbstp enter das mov in repnz pop into xchg out or sarl cmp xchg out xor call xor push data16 outsb cmp inc iret aam mov cmpsb or leave (bad) jmp int3 jbe lods jae xor sub mov sti dec clc shrl rcrb ficompl xchg sbb (bad) or sub jbe mov mov cmc (bad) xor push jecxz sub (bad) icebp pushf push pusha sbb push xchg pop sbbb jmp pop es mov es nop clc or jmp imul out pop pusha jo adc outsl inc popa (bad) iret inc out out cmp lock and mov je or lock into in xorl mov std repnz (bad) aam dec adc aaa dec xchg nop mov jbe lcall mov rorl mov sbb icebp push leave xor xchg leave sbb ss stos mov pop int3 inc mov andb lret cmp or mov arpl dec fdivr cli (bad) mov mov push aad lahf das (bad) fcoml pushf sti xor and push mov (bad) mov xor loope sbb inc adc test jge int3 adcb add aas adc sub in mov sbb popa xor scas jp jl out push test enter in and inc sbb repnz cld xorl mov sub dec inc out push mov xor aad (bad) hlt (bad) out sar test inc push enter mov aas popa daa add mov cmp sub ja mov int je ljmp insl movsb movsb xchg xchg call xchg js test xchg leave inc mov jmp mov xor shr sub outsl sbb push sti ja push jecxz mov xchg mov (bad) adc icebp call in or cwtl lods fiaddl ror mov (bad) dec dec cwtl sbb xor int3 mov add sbb fisubrl xlat cwtl decl cmp negl (bad) push sar movsb call clc (bad) incb orl aaa stc mov push lcall arpl sub cli (bad) movsb jg pop (bad) daa dec jl jmp inc xlat jb cmp add push jne fcoml mov xchg jno jecxz cmpsl add cmp xor xchg add inc mov pop negb add jge aad inc pop xor xchg in dec faddl jl xchg fistp sbb inc rclb push iret push addr16 fld das lods (bad) cmp out push mov rorl sbbl push lods hlt jo jo inc lcall mov mov call adc xor cli (bad) loope pop jbe movl arpl push fs and in call dec subl (bad) movsb lock shrl add shrb decb xlat xor cld sbb pop insl lcall jp js fcmovne xor dec sub mov jns sbb lods (bad) popa in nop bound sub xchg and inc stos aaa in jg mov mov js test pop xchg sub xchg popa les sti test jl movsl cmp pop hlt cmp mov mov xchg push out pop (bad) mov pop data16 mov lret lcall sti adc imul jmp out add jmp xor pop add jl jmp insl jl xlat sbb jo fstl jb iret inc jmp lock mov sub push ss pop mov (bad) mov push (bad) fs or mov mov cmp inc dec or (bad) or cmpsl adc sahf jmp lcall rolb ja (bad) jbe pop cmp push mov pop mov cwtl arpl pusha aam fdivs mov lret inc cmc dec int cmc xor adc rorb pop pop test mov or mov mov (bad) insl not or data16 and jb mov out mov xchg (bad) pop rclb adc jne push push and inc jmp inc pop stos out or push cli popf lea jmp scas aaa jb jo push rcrl je jb in gs push mov cltd not ret movsl stc add movsb or jb jge js lods pop out adc and xor and sub (bad) sahf das lahf xor mov fidivrl jbe inc lret adc mov pop fstpt rclb leave add xchg lea mov jno cmpsl dec in je sahf iret sbb xchg push in sarl mov inc cmc out xor inc pushf inc xor ret jb or sbb mov push jne popf dec push adc push pop jp pusha inc test lret jle mov push jge pop adc mov fcompl in jmp aaa jp jl push icebp or xchg jmp add cli rcrb mov xchg ficom imul jno (bad) cmp ljmp sub les mov ss pop xchg ds mov into (bad) ss pop je mov adcl sub stc cmpsb push std push jmp (bad) int add sbb popa pop inc out sbb pop std mov std ljmp fidiv pcmpgtw ss jae insl or jo pop insb jnp or imul push hlt clc sub lret rorl sub movsb pushf dec mov mov dec nop cmp jo ja rcll or sti add xor lahf js sahf mov pop xor xchg or push fnsave jo push mov sbb mov fdiv imul inc imul sub lret sub (bad) fwait dec mov xchg and or add push mov lds cmp pop sub dec pop test ljmp jne je movsl jp rclb in test je xchg (bad) push js jbe shlb je and cmc subl sub mov enter jecxz xor push out jl mov mov inc sub scas jb pusha movsb out sub and inc sti mov xchg and out stos (bad) jo and mov and mov mov xchg insl movsl sub mov lcall bound inc fwait scas and pushf in add movsb addl sub in mov pop fwait jmp adc lcall (bad) cmc or or and push std adc divl outsb mov mov pop das lahf pop ljmp dec icebp dec add dec call push or test jle (bad) loope addr16 repz test mov shrb jns orl test jb fwait add add sub mov (bad) stc cmp in outsb daa dec ret mov in mov and cmp cmp mov loopne add aaa cwtl mov aad repnz xchg bound insl div mov pusha pmullw nop dec pop int3 inc in mov lock mov cwtl mov dec fadd adc mov and push pop outsl xchg aam jg cli sub (bad) adcl jo scas fwait out jge mov cwtl pushf xchg mov les lret loopne shr push push sub adc sub adc nop mov push xchg pop shlb inc fmull cwtl loopne sbb inc mov mov sbb mov or in (bad) fcoml repnz frstor sbb push inc mov pusha mov arpl jge lods push xchg call jmp mov xchg mov xchg sahf aas dec sbb iret and pop (bad) fiadd mov sahf fcomp add lock mov (bad) jno outsl or mov test push (bad) mov cmp jbe push in mov add es lahf lods movsl sbb mov adc aam fcmovbe jecxz int3 sbb push fisttpl divb out mov pusha sub repz sbb test xor (bad) sbb cld or inc mov pusha (bad) pop push (bad) xchg adc pop cmp mov clc (bad) (bad) scas clc xor dec sbb test mov leave (bad) dec mov arpl mov jb std sub push cwtl (bad) cmp mov xchg lahf mov or std clc movsb jge pusha inc in xchg dec sti mov mov sub adc adc sbb in in in stos mov or stos jns pop inc or ja add push rdpmc cmpl sbb adc push popa mov mov inc jp mov inc test lret dec rorb add cmp enter or ja dec push (bad) lea and xchg (bad) xor pop cmp pop in cld les iret xor fcmove dec pop jb fcompl sbb pop cmpsl hlt ljmp cli add pop or xor add lock jle xchg test mov inc negl int push les iret sub ds sti outsl jg sbb xor push repnz cmc mov jae cmp mov jo dec int jne pop scas cltd test outsl imulb push (bad) sbb test mov mov lods movsl fmuls and xor and push jmp mov lods (bad) mov aad push jne (bad) mulb jae jmp call lods int adc out sbb lods sahf xchg adc idivb fcoml jecxz cli ficompl inc gs or adc sbb lsl cmp (bad) jns insb jno roll loopne (bad) mov in mov out inc pop ljmp shlb xor out das sub insl sub dec (bad) pop push ss sub dec jne jg jnp xor pop dec pop test adc repz popa (bad) mov fwait lock insl inc lret outsb lahf lock ljmp icebp jecxz into push inc loope mov loopne xchg add fs jno and pop mov push imul inc int3 dec hlt sbb fwait pop iret pop jle rol addl out adc stos inc or ret pop sub lret xor jle mov sbb (bad) adc xchg movb imul fwait sub orl nop test lret gs inc dec out (bad) pusha aaa (bad) repnz xchg addr16 mov dec mov xchg repz mov inc insb (bad) addr16 fisttp int3 repz outsl sbb cmpl test lock adc fisub sub insb notl outsl jge add cmpsb adc inc jo push repz push pop inc inc mov repz mov adc inc popa ficomp loope cmp pop jp aad loop dec mov mov cltd fdivp (bad) cmp add and jg jp mov inc ljmp mov add (bad) or mov bound cmp fstl mov in adc sub sarb int popa mov mov movl sub popf insb jmp inc mov adc xchg ljmp inc fbstp mov xlat sarl divl and pop pop stos addr16 push sub pop pushf test add int3 pushf cwtl int3 mov test aam and int xor pop dec lods and icebp insb mov (bad) add loope jmp pop pop aam push jbe jg (bad) dec fwait subb loopne daa mov decl adc lcall sarl dec mov leave and sbb xchg and add pop sarb leave add lcall add mov insb jae ret divb out push jecxz cs xor dec aam movl movsb inc dec fwait sbb cmpsb jle ret loope jmp lret call (bad) test push or and xor lock adc push (bad) je add dec cwtl pop mov push icebp je stc cmp in std sbb fwait mov (bad) ljmp fisubrl aaa mov das (bad) fdivr into lds rcll arpl adcl neg icebp lcall sub and repnz dec cmc movl xchg fnstcw leave cmp sbb push imul inc dec lret std mov outsl ret icebp ficoml cmp cmp dec jb push xchg cmp jbe clc shr inc sahf in jns out cmpb mov in lret cmpsb stos out push iret mov repnz out nop fimul scas fs popa xor sub cs sbb ss popf or shl (bad) (bad) repz jne cmp mov sbb adc mov loop lods mov dec mov adc jge mov jle sub pop gs push dec sub or aas in and adc js xor das jno pop and orb leave dec adc add xor mov mov push xor test jg movsb inc push call pop dec or sahf xchg jbe push sub cmp (bad) sbb push cmp adc jl jl push rcrl cmp jp in sbbl pop sbb mov cmp mov daa daa stc gs lret mov push push stos fiadd inc mov pop jle test cmpsb pop dec jg in pop mov cmp add arpl sbb in rcll call test and gs in mov or mov scas push and push icebp pop aad data16 cmp cltd mov ljmp or inc mov sub jns or xor xchg sub test aaa and sbb add pop sarb cmpsb ret mov std dec pop jo rcrb xchg or cwtl into jmp adc imul mov (bad) push jg out cmp jae xchg push fmulp dec call ljmp push pop iret pop mov scas xchg xchg pop sbb cli std cltd mov iret repz or push in js lods mov mov sbb cmc lret cmpsl or test sbb xchg push stos sub sbb daa repz pusha jns roll sahf mov jle les xchg cmovno lret xchg mov add and mov mov pusha sahf xor lock push clc test test in imul movsb clc ret mov xchg subb sub nop pop outsb iret push mov ret mov popf mov andl outsl jmp fwait loop fs (bad) add and clc mov gs addl cmp sti sbb mov jle fstpl pop xor xchg sbb or cmp jne fisttpl xchg cli xlat inc pop mov push ret sbb stos adc test jg xchg inc xchg cli mov push sub xchg iret (bad) in push mov jle mov jbe sub in popa cs out je into out sahf push (bad) jo xor pop popa jns cmp add out push ja into jge add cmp js repz and mov pop push xor sar push inc int mov cmpsl xchg ret fimul daa jae jne jp shrl test sub (bad) mov jnp fldcw inc fcompl inc out xchg popl in testl jbe mov inc popa insb dec ljmp xor mov and (bad) sbb fidiv and (bad) xor loope (bad) hlt xchg mov sbb mov push jbe xchg jg les or mov lds mov sub jl add fbld jmp out xchg js iret out aad push insb notb cltd mov push mov pop mov sbb xchg int jl in mov lahf (bad) imull (bad) sub mov fisub aad (bad) mov or jae sbb int and mov lock mov test rolb mov sub shrl rcll daa (bad) ss bound jge cmp or ljmp icebp imul lock aaa dec inc or fisttpll push xor loope cmp iret test test (bad) (bad) rcl xchg pop nop jns and or js out mov jle ret outsb orl fwait test popa inc mov out dec and push outsb sbb sub fist stos push daa lods add in and sahf movb adc mov imul int repnz adc pop pop es loop xlat adc push (bad) pop pop push cmp jmp sub mov push xor mov or js lahf fwait cmp (bad) stos mov xlat push lcall or std stos push sbb js int (bad) in sbb (bad) scas fisubrl inc aad mov push sub lahf jge in pop adc scas sbb ds fsubrp dec loopne mov and sub test lret push cmpsl inc xchg jge cltd or pop or or pop imul mov add or xor push or bound mov xchg cmc lods xchg sub or int pop sub adc adc push push aad (bad) xor sbb inc andl imul fsts lock cs mov stos push or push fsts cmpsl pop enter pusha mov notb lds mov lret and lret (bad) out push ds ljmp dec shrl and mov and sub enter lret sbb mov jns addr16 dec cmp cmp testb pop xchg dec les arpl (bad) sub imul or mov fisttpl dec icebp or add lods cmp mov es cmp inc pop mov add fisubrl cld sub out sub cmpl push (bad) sti dec xor mov mov jne mov cmp les imul ja mov or sbb jge mov lods pushf sbb scas push dec jne call pop jmp adc aaa add call adc scas into or pop or push imul fisttpl xchg xchg leave dec fisubl push test xchg test sub push push sbb lret test xor lods out add push and xchg sbb mov cmc mov clc data16 cmpsb xchg into imul push aaa mov lds out mov addr16 mov jb out mov add cld icebp movsb repnz lods cli push lods repz lret and fimul or push inc jg pop mov das adc and sbb int mov add jge pop jmp xchg dec popl sub adc fwait cmovle das data16 sub outsl mov stc cmp jmp movsl mov inc adcl rorl sbb push mov xchg outsb int3 aas fist fstps push inc out pop dec insl pop test cmpsb mov into movsb push fidivr aas popf in push fcmove jbe subl movsb out mov fcom rclb ss fdivs loop add fmul repnz mov lea mov inc mov les sub push and jno cwtl (bad) add xor lahf (bad) cmc scas mov dec pop jno cld js cmp pop pop and bound pop ljmp or adc push xchg lcall push mov test imul mov negb mov adc inc push insl (bad) mov push xchg push mov jne lcall add mov ljmp int3 divl icebp lods mov sub mov and mov adc inc dec (bad) mov mov repnz xchg mov pop (bad) ficomp sbb les daa insb in cmp pop fisttpl mov push xchg mov push outsl lret sub mov not mov mov stos or inc or pop (bad) jecxz out xchg xor cmpsb js fnsetpm(287 sbb rorb sub and (bad) lock sbb mov adc insb pusha jo xor mov lock and loop and repz scas cmpsb mov jge inc push xchg mov adc (bad) mov test lds test mov adc mov dec lods xor mov push ret jnp test shlb ljmp add mov and adc or sbb cli enter pop inc insb daa xor mov in add lods push add push (bad) cmp data16 insl mov and push jg lret fistpl mov in or movsl xchg xchg pop lret xchg cmp cmp and jle or jno mov les mov insl mov xor jb stc mov enter loope icebp std adc popl (bad) (bad) cli inc movlps dec xor cmp cmpsl push mov cli lea (bad) mov pop cs push jne xor or sar sar mov dec dec rol icebp aam or or mov xor mov mov pushf mov mov xchg ja stos sbb loope mov jp sub xchg sub repz rcrb pop xchg daa inc out call int3 lods mov dec pop pop int3 int3 add cmp push ret inc sbb or cmpsl mov fdivl mov in nop adc lods jle jle dec jno lods pop out pop jae mov mov sub fistp and xchg xor push in jmp add add dec xor pop mov mov jmp dec mov sub in adc mov jle or add into cs mov icebp cs movsl (bad) jo xchg rcll pop mov dec (bad) out mov out popf push xchg cs and mov daa data16 pop idivb and mov pop and mov shrb icebp in loopne rcrl rcrb popa int3 push inc lahf mov cld jp xor pushf repnz mov out sub mov push sbb dec lds sbbb and add stc cmp mov (bad) aam adc add mov cltd fnstsw je xor daa (bad) xor pop jb mov inc sqrtps sbb addr16 in fdivl cmpl flds les mov cmp in xor jb or pop (bad) jne push dec sbb push add dec testb bound push or cli std jge mov out push out jp (bad) or ret scas hlt aam mov cmp xor pop pusha inc adc sbb (bad) jbe mov add insl or idivl cmpsb xlat adc sbb gs aad int jmp sets inc pop xor or push ss cmp add push (bad) daa mov sbb gs pop scas cmp push pop (bad) mov stos xor faddl mov xchg xchg mov push sti in sub xor (bad) or push int3 sub repnz hlt jge insl lea xor xchg xchg inc clc pusha push test pop adc add std inc repz jb test test or scas mov and sbb loopne pop js aam dec sbb sub cli mov aam xchg (bad) call ret call pop push cli in fwait adc inc ret outsb cmc or in in sbbl insl mov mov mov push js and ret mov das in loope cs pop cmp dec pop xor mov and int3 sahf push bound or mov lods lret pusha cmp push xor or scas sbb fist push cmp inc repz dec adc es adc popf jbe arpl pop sub cmp push mov dec fwait lcall clc jmp lahf and cli lcall sarb repnz bound shrl pusha jnp xchg lock jne push cmp inc dec adc stc mov into push mov jne push out mov mov pop movzbl xchg xchg insl fcmovnb xor out or lods add fadds pop pop lcall mov stos mov jmp movsl push inc pop xor push xchg js test mov stos (bad) sub in pop pop mov pushf adc ds cmp pushf push fmuls jb push mov mov pushf into xchg sbb xor loopne inc lcall mov sub push lods fisubrl mov fs stc adcb jno insl xlat data16 dec sub shlb lock xchg insb sub das add sbb mov (bad) sub (bad) mov ja mov mov sub sbb dec cmp sub xchg xchg push aaa fs aas push jle mov orl dec inc (bad) mov and mov or mov adc and subb xchg push push nop inc dec imull add or cltd add mov scas dec push dec call pop movb jne jno cmc mov stos xchg fs xlat mov push movsb pop sbbl nop cmp out sarb adc add popa sub pop jg inc mov neg xchg cmpsl stos arpl or cli add mov xchg push rolb ret in loope xchg push mov lea ja out xchg lcall pop mov jmp stos (bad) xchg inc (bad) mov scas and (bad) xorl mov push mov stos sub fwait add lahf sub push pop xchg dec mov (bad) int3 dec fidivrl xlat and xchg in sbb mov mov push cmpsl dec mov test test lock add and les int iret jg xchg add rcr outsb xor insb and mov out outsb mov jecxz sahf loopne ds dec into in sbb pusha and int inc (bad) testb cld sub (bad) cmc stos mov xor repnz pop out cmp push jnp cmpsb lea sbb jl jle and popf rol cmpsl pop imul cmpsl dec cltd pop (bad) fsts and jle xchg fbld (bad) inc iret or (bad) lea movsb rolb dec and sub rol add jae scas pop fmul pop jae cmp inc xchg call jo fnstcw paddusb out mulb (bad) push aas inc scas in mov insl dec das fidivr inc rcll and stos push pop loopne insb out rorb xor add jae rolb inc lret mov push scas loop jno cmp cmpsl pop cltd (bad) inc inc out ds fdivp push and push mov pop outsb leave fs sbb push mov cmp xor aad out xchg fistp into lahf xor mov cmpsl sub imul mov mov stos dec mov orl mov cmp sbb nop inc insb ret and mov icebp and mov ss jo aam outsl cmpsl pop insl outsl fcmovb test add mov pop sub mov pusha stos jg jecxz mov pop push adc or fimul (bad) dec mov lds icebp xor aaa mov xchg sbb pop mull into or sub sbb jg add cmp jecxz pusha mov xchg or test (bad) or icebp mov ret lock xchg loopne mov fcompl andl cmpl or sbb sbb jmp movsl lds mov xchg leave mov hlt iret int stc xchg cmpsl adc cmp or xor loopne xchg mov fist out and fbstp mov fwait xor insl addr16 xchg dec hlt aas (bad) xchg test mov inc or sub xor enter and sbb sbb es fiadd xor pop inc mov jle cltd pop out sub and popf stos lods cmp mov push adc dec cmp push std cmp sub fistl add pusha add xor aam test xor dec mov sbb imul repz stc rcl movsb sub or (bad) lahf mov cwtl mov pushf xlat cmpb cmp sub movsl aam inc daa xor inc lods popa xor dec adc pop sub lea lret cs dec dec iret fdivr jo cmp adc ret mov int3 inc pop mov mov xor add das data16 movsb mov jns adc jne mov test or jle f2xm1 popa mov push jg lock iret in bound jle repnz add sbbb int pusha dec push fwait push add push lcall dec fwait push sub sub xor sbb push mov push shll dec jne xorb mov ficomp push cmp xchg mov sub inc clc aaa (bad) cmp sahf gs lret jo dec loopne cmp cwtl sbb jno pop gs rorl out out frstor or sub lahf loop mov xchg mov outsb jne push stos mov push adc mov cwtl shrl lahf and add mov arpl push sbb outsb mov inc jae or sub out (bad) (bad) mov pushf test cmp or xor idiv ret jnp lods lea icebp and imul daa shl fwait xor cmp adc mov push push push or ret jo icebp mov daa push ret sarb inc sbbb push das addb ss pushf mov pop add fadd push mov ss mul nop nop loopne adc cli pop fdivrs jb dec push scas inc fsubrl push stos popa mov sbb aaa cld addl and inc cmp lcall jb mov (bad) or sbb push fsubrl mov mov and cld sbb fcoml pop sarb int fisubr repz fwait jnp fdivr xchg lods dec dec xor aam mov cmpsb lcall leave push iret dec inc push ror (bad) adc popf dec repnz repz xchg (bad) push es jb xchg or push push xor adc in rcrb or sarb pop lods pop inc push mov ucomiss xchg mov cmc scas cwtl in mov sbb inc jno cmp lret jecxz adc gs imul enter sbb movsl cli aam (bad) cs dec sarl xchg dec out mov push dec rcr nop push dec je (bad) cmp fsubl mov sbb int cmp mov add pop aaa sbb int3 cmpsl dec or dec lods popa mov mov jo hlt pop mov pop (bad) fadd aaa mov mov mov into inc clc mov js mov shl cmp addr16 icebp fs in inc icebp sar cmp mov adc dec pop in out in mov mov insl ss ss jp mov fadds lret rcrb jne cmp mov cmp negb jo aaa jecxz imull cmp mov lods push adc insl dec int sub arpl or push or xor je jge or lahf push mov dec pop (bad) mov rcll fistpll das jo mov push xchg cld mov mov jg testl xor repz in (bad) lock mov xchg loopne mov rclb ss fisttpl lds adc sub jb inc add adc dec mov aad aas addb fsqrt pop xor lahf jmp test xchg mov push popa or repz out sub ljmp insl add push stos adc dec push pushf stos (bad) dec ljmp movsl in call je jae xlat xor or and xchg xchg fidivr adc jne sti ret fcompl (bad) mov test loop out jl add dec push (bad) loopne xor sahf inc pop ljmp cltd sbb call jae xchg dec clc mov fsub push mov xor test ljmp out jmp add sbb loop cltd push or cmp mov jae addb adc jge ljmp stc sbb in jno jnp enter call lock test lahf je imul add out lods add sti or dec mov mov (bad) mov in movsl dec xor jl (bad) pop fadds push jle push mov jmp mov pushf pop lods xchg leave sahf outsl in cld in addl sbb test sbb pop sbb inc lds jb jge (bad) jno inc out adcl pop rorl dec jae das xchg pop leave daa lock dec mov and nop pop add enter pop rorb (bad) pop das pop pusha pop push push fmull addl call int gs mov mov push scas adc jmp repnz mov addr16 mov mov (bad) iret pop je jbe notl hlt rorb dec jecxz dec sbb mov push into in or adc sbb jbe aaa fisubl (bad) jp leave jo xor xor imul (bad) stc or xchg mov jae lcall das fisubl lds pusha jne sub lds push sahf outsl push add andb test jge and scas cmp mov xchg imul cmp mov or pop imull xchg fldl inc mov adc xor sub inc push in enter insb jg ficoml (bad) xor in lcall sub jle call adc xor xchg xchg std hlt cmpsl adc xchg das inc sti mov leave jl mov es cmpsb daa test push (bad) pop fcompl sub out pop ja dec loop cmp mov repz outsb rdpmc (bad) outsb into clc insl orl lds arpl (bad) adc dec pop (bad) lcall mov ljmp cmp lods adc ljmp and int pop adc adc ds test js fcomip outsl gs cmp inc hlt cmpsl popa in and rorl aas and xchg lret jae (bad) popa push stos mov addr16 sub (bad) imul xor pop test stc jecxz loope sub aam mov test jg mov dec xor dec push std clc int loope stos clc mov add test cli jl xor mov cmp insb mov mov and or dec xchg adc hlt fwait enter in mov push leave pushf movsl push test (bad) in out outsl (bad) adc xchg jge mov int3 cmpl mov sbb xlat mov (bad) (bad) fwait and inc xor nop daa push cmp sbb ja or inc cmp or fistpll xchg xchg enter inc push subb cmp (bad) jo rcr sbb incl mov cmp pop imul test icebp mov test sbbl xchg aad cld nop adc adc xchg inc sub mov pop insb sub les sub push lods sti adc jl es cs mov push sub fisttp andb xor or outsb imul cmp cld mov xchg jae add sahf in imul std enter xchg mov xchg xchg hlt retw (bad) out or push cltd lds movsl inc or sub sbb mov sbb bound push scas push movsl push xchg jmp mov add xor sarl pop arpl adc aad dec sub popf adc mov push sub sub fimul xchg xchg mov push dec aad out sub xor mov popf insb fnstcw mov sub (bad) add dec rcrl (bad) adc cld xchg adc pop sub iret pop xor lods mov loop cmp mov test pop add imul push das subl sahf cmpb mov in stos pop xor mov leave in aad fdivs add fidivrl mov and mov rorb or push push dec inc scas ljmp pop sbb and das inc or mov daa sbb mov (bad) rorb sub (bad) out std add hlt jecxz (bad) into cmp (bad) jb xor xchg cmp adc jecxz dec sbbl outsl imul xorb push in mov test int or sub sbb inc mov lcall cmp test mov dec mov vpcmpgtd jg aas inc mov icebp arpl (bad) loop or aaa pushf pop stos adc sbb adcb dec rorb adc mov lods mov cmp mov mov ss push addr16 mov inc (bad) repz aaa jge xor mov fsubs lods lods push inc and jno sub xor mov mov mov aaa lcall fs fildl sti ja imul test mov (bad) adcb aam pop aam fiaddl in andl popf mov push sub ss mov xor dec outsb cmpsl mov push out das lret arpl test iret inc jb pop push enter (bad) jne cmp cs js aam sbb mov stc ja (bad) or (bad) xor mov arpl mov pop aas pop pop pop xor lods xchg jns mov pop jecxz dec int add aas sbb mov mov out sub add mov ss aam loopne mov es push or xchg bound cmp dec push inc lret lods pusha sbb popf aas xchg pop xlat (bad) mov aad inc mov lahf jo cmc lds je add xlat adc inc add lods bound jge in daa inc (bad) ror sbb xchg pop push dec negb sbb or in mov mov adc adc xchg cli push adc (bad) jno sahf dec add lcall or jo and cli pushf mov inc xchg inc enter jo fldenv in mov std out lahf enter clc push stos (bad) ficom pop pop jmp (bad) std fmulp scas xor or scas outsb mov push lds inc jl hlt test sbb add sub and int3 pop cmp pusha sbb sub arpl popf mov in popa mov cmp daa inc and xor int jbe lds lods adc pop dec stc (bad) (bad) or shlb ja pushf push lahf outsl mov jg arpl lcall sarl cmp sahf and mov imul xor js std es (bad) out test fadd sbb jl lcall adc inc push jg mov sub mov push xor push in add movsl jae aad adc push nop int3 fist jecxz scas jne cmovbe xlat nop cltd test mov cmc xchg jmp (bad) bound xor cmp fimull xchg or movsl sub xchg iret popa andl in mov xchg fs incb and movsb inc imul cmovns fwait stos popf nop jno iret pop mov xchg or or popf or fcmovbe jnp ffreep inc mov sub bound and (bad) mov cli pop pop adc stc mov je jb (bad) xor push aad jmp sub (bad) clc push iret and xor in cmp fildll jae (bad) adc (bad) inc aad js push xchg cmc and push mov imul adc xchg aaa ror jae mov cmp push jecxz mov add outsb lods outsl cld mov or btr or scas stos push mov pop inc out pop stos push insl pop icebp and push sub jp pop adc sub in stos mov lods sbb es inc test in roll pop sahf into adc popa jo inc pop in xor es xor adc jnp mov xchg ficom mov fdivrl sbb gs pop stc jae stos data16 lcall loop cmp psrld (bad) jl push xchg pop mov mov into sbb cmpsb in mov mov hlt mov xor mov xchg lds (bad) outsl ret shrl out bnd add icebp xor mov jmp or pop sub xchg or dec pop mov test scas jg ja mov inc loopne xchg xor (bad) in mov cli sbb xchg dec mov mov das jnp xor push pushf adc int es mov imul out in xor aad sbb mov adc lea aas mov xor xchg call pop fcompl jns ja pop call push bound insl dec (bad) notl bound (bad) jecxz mov ja bound roll sahf fidiv lods aad mov insb and mov fcmovnu mov nopl loopne fnstsw mov cmc or jp js or pushf test negb fsubs sbbl push shlb aad lea popa cli cmp fisubl adc or icebp lret adc pushw test inc idiv and repnz mov add mov inc pop xchg nop lcall sub or lods test test ja jg xor pusha jecxz inc pusha gs lcall sub xchg ljmp mov incl and mov cmpsb inc mov cwtl or push mov mov xchg sub bound push xchg sbb mov pusha and push lock dec pushf xchg out ret mov mov inc adc xor jecxz mov stc stos and adc mov movsb adc outsl lods inc call push mov sub stc lods stos jl cld push test loopne pop jl data16 mov int test adc and (bad) jb leave lahf sbb out sbb add push sub sbb cmp out popf (bad) neg notl add sbb ret xchg pop negb (bad) inc jb xor push or lods aas mov push mov xchg ss inc cmp mov sub mov sub test sbb push lahf sub (bad) cmc push in jp (bad) stc or fwait pop subl scas sub mov dec lea jnp andl out lcall mov loope mov out push xchg aaa enter pop addr16 dec adc in adc fisttpll nop push inc adc mov jne orb sub scas xor fwait scas (bad) stos int inc (bad) mov repz pushf shl (bad) pop and bound lret xor push cmp mov loopne sub std xor and loope pop clc mov and cmpl sub xor sbb mov mov sbb out iret cmp push cltd rorl push push mov in jge pusha (bad) jg fsubs sub flds pop and sub leave cwtl int es mov push or stos loope cld push fidivr ret xchg xchg adc mov negl pop mov popf fdivp test dec test int3 iret cs sub icebp mov cmpsb aam adc outsl jecxz movsl mov or fild add loop repnz addr16 das out out daa test pushf mov movsb mov addr16 sub dec cmp or push in repnz repz div inc lods arpl data16 sub hlt push les cld cmp mov and popa dec inc js jo ret enter pusha roll les jne pop xchg inc mov shl push dec inc les inc add in sbb (bad) fimull lahf pop (bad) xor data16 lret js mov int3 cltd and or xchg imul andl sbb stc mov mov mov cmp jecxz mov jae sti fldl cmp icebp aaa and jle mov cwtl sub in cmp in jmp push dec daa add mov out mov (bad) mov leave inc int fdivl xchg fidiv jns adc jmp adc jnp jnp call cmp (bad) ja dec cmpsl inc in (bad) fsub cmp jge lods fsubr into dec addr16 mov jne and cltd inc ficompl or jge movsl repz add jae mov jg jl lods aas insl push mov pushf sarb xor daa pop (bad) cmp xchg pop dec add ficompl or fisttpl mov xchg repnz lcall (bad) loope std repnz cli or cmp xor xchg ds dec mov arpl pop xchg pop dec call mov setne or mov roll jge cli pop call or fadd jae adc popf mov cmp lcall shrl aaa (bad) int3 pop or xor inc lea fsts std and inc rclb push cli fisub xchg enter (bad) jno or dec sub inc repnz mov cmpsl pop push (bad) cmp (bad) sbb pop sub mov fwait sub mov (bad) mov imul or mov pop fdivs cmpsb out jns pop pusha into insb xchg imulb sbb jae xchg pop ss loope dec xor mov (bad) or fildl add dec adc add lds add (bad) push pop sti in xchg (bad) (bad) jge lods pop lcall sub or das insb call mov test pop dec outsb pop jecxz ss mov sbb inc xchg lods arpl aad sub pop fild sub shrl mov pop daa push movsb adc ffreep xor inc xchg lret ss out push in push push ja cmp mov hlt sahf es xor out xchg inc mov mov in mov jl nop ficoml ds sub nop int3 adc cmp sub mov jg dec std sarl jno lea fistpl jb add add jb push ss inc iret push jno mov cltd jae inc cwtl sbb sbb add push in mov inc xor jle dec pop xor les cmpsb cmc mov mov mov lret lods mov pop lock fidivr lret push sarl dec dec jno pop icebp mov dec pop icebp (bad) aad test dec negl cmc and cmpsl cmp lahf push push inc cmpsb into push insl movsb (bad) (bad) push add lahf xchg (bad) lods push dec lret adc ds lcall and push jecxz add xchg shrl pop fs cld and shrl cld add xchg dec mov bound mov mov mov loop cld push mov lret insb push dec dec mov add sahf xor orb enter mov scas test lret and push arpl pop cltd sub sbb push adc test arpl and (bad) in test or pop cmpsl stc cmp cltd push hlt sub nop pop sbb mov stc xor ja repnz loope sub dec jle sbb jo xor mov and xor inc or add (bad) (bad) xlat xor cmp sbb adc fnstsw repnz inc lcall (bad) jmp lods xchg push push push cmpsl sarl jg push inc inc test sarb sub in xchg jb jbe lret xchg popa fstl (bad) xlat push das scas push ds imul std hlt sahf pushf clc fsubl lea sbb rcl mov jmp shr fnstsw repnz (bad) mov jb (bad) clc mov inc sti xchg ljmp push jno popf dec stos dec call outsl mov out rcl lret sbb cli std pop fildl dec loope push sub xchg mov stos sub dec xchg xchg addps push push jnp mov nop ds adc adc lea (bad) mov icebp mov or pusha push mov mov call fs and push clc mov sbb fstp cmp std mov fsubs push cmp pop movsl mov mov pop mov outsl xor pop xor mov repnz es (bad) xor or or (bad) out into gs pop test je mov and insl xchg mov jmp cmp jmp out gs jecxz insb into jns jbe call and lcall mov cwtl popa ljmp insb lahf int xor jg fwait enter jns loope lea adc inc movsb sbb jns mov add cltd mov icebp xchg mov (bad) test and (bad) and pop xchg pusha xor movsl sub mov pop mov mov int3 imul sbb out imul pusha sbbb test pop sub repz push pop cmp orb ficoml subl jg cmp jmp fidivl dec sbb dec mov mov stc aam (bad) dec fs stos or imul and pop leave in xchg push in and pop cwtl push pop in scas xor jno push cld aad jbe aas cmp (bad) repnz jecxz inc not jge scas xchg sbb cmp ljmp shrl es mov sbb loopne cmp fs mov sbb les into sub push adc push (bad) sub push cmpsl aas or imul adc xchg (bad) or int3 mov inc and scas test punpckldq cmpsb sbb sub gs scas or lods mov cmc xor js and sbb adc mov dec pop leave std cmp adc popa sbb orl rcl pop outsl mov in (bad) pusha out stos xchg sbb jbe push sti ficoml test gs push test cmp mov dec (bad) mov mov outsb (bad) jae mull cwtl bound push pushf add sub scas and sbb jle fstl shrl imul fldenv adc mov sub push arpl sarb mov rclb mov pop iret js xchg mov cmp xchg imul in xlat (bad) (bad) icebp mov jecxz mov cmpsb xchg (bad) notb mov scas mov fmuls int add fdivrp stos lahf inc cmc out jl mov lret mov jle es xor out add or add ret jp outsl inc pusha jmp pop fs pop lcall xchg adc in roll out dec dec testb (bad) adc push mov movsl mov cli cmp (bad) mov pushf push jno daa ja ja mov lret sub loope int jno inc ss jo rcl jnp push inc mov add and xchg add scas mov sti cmp stc jb push mov mov pop push pushf (bad) scas push jbe loop hlt xchg cmp mov aaa sbb cwtl lret jb mov inc icebp xchg mov mov dec and es mov fwait push out (bad) mov popf fdivrs dec aaa pop jp or mov aas mov lea jmp test pop into add dec push dec sbb mov sub test mov pop outsl (bad) cmc lds pop js insb xchg and pop outsl cmp jl xor loop in pop pop sbb push xchg inc adc daa xchg stc out lds lds adc mov and xchg pop shll mov leave push icebp mov (bad) stos outsl mov (bad) out add sbb push and daa scas adc out out (bad) mov (bad) mov mov insb sub lock sub inc aas sbb mov std inc dec addl adcl mov mov in push mov faddl and gs lds test add dec mov or andnps or sbb lret sub std (bad) dec cs mov int je (bad) jp mov dec and jbe adc pop js icebp adc and dec cmp data16 jb jmp pop push cli inc pop cmp lahf or int imul add ret nop (bad) mov cmpsb mov outsb (bad) aas outsl mov dec cmpsl sbb adc xor sub jno lds aam sbb pop lahf xchg loope mov pop lret (bad) iret push dec pop pop jmp jmp pop add jne mov dec enter and push les inc nop mov jl push adc in scas pop es or push pop or pop iret dec push fs pop inc (bad) cmpsb movsl adc inc dec jmp add add jne xor pop ret out ficoml pop cli mov mov pop jle (bad) mov lret ret mov jo loop lods movsl loop insb aam jns das fisttpll mov pop jg and enter push pop pop iret inc sbb xchg sbb sbb jle pop test inc movsl jne mov adc ds les sub mov push sarl mov (bad) insl data16 (bad) rclb jmp xor or popa fs in and fdivrs sbb (bad) xchg aas xchg sbb add aam xchg cwtl mov sahf jg cmp push push sahf out jl xor sti push push push sub xor xchg into imul xor push mov rcpps loopne pop sahf pop pop sbb xor mov sbb ficoml inc shrb push loope mov aas add shrl into je xorw jecxz lds push dec push push xlat inc lahf push out and cs mov ret les push cld stc loopne (bad) mov out cmp jae add addr16 add push loop outsb inc leave mov loopne pop add test dec nop (bad) mov clc adc mov xchg (bad) sub jno repnz (bad) into add pusha outsl ds iret sub adc mov inc scas shrb inc out insb and push cmp stos in loopne std mov mov imul mov fwait ja cmp pop dec sub rcll sbb mov adc inc cwtl (bad) cmp jecxz pushf and inc sti inc xchg adc mov stos loopne ret mov fisttp pop imul sbb cmp ja add fwait mov mov movsb les loope lods imul and sbb in or add or sub sub out rolb cs pop xchg xor out lock cltd fisttpl mov inc xor xor xor or sahf (bad) mov pop push sti pop out jne rcrb out (bad) es fcmovne imul dec neg popf xor pop mov pusha push cmpxchg iret cmpsl loop lcall call push fidivrl cmp dec ret mov repz es data16 dec xor cltd or (bad) dec icebp mov pop and sbb cmpsl cmp pusha mov (bad) sbb ret adc jne icebp mov rorb call (bad) push imul sbb mov test int3 adc imulb insl or mov addr16 fildll lret jecxz cmp and (bad) fs repnz mov lods cmp mov cmpsl sbb xor add outsl inc mov mov add xchg ljmp sbb lods push adc out sub pop jmp hlt movsl daa out cwtl fistpll pushf data16 (bad) mov cmp and push fcoms pop arpl jle inc or jbe mov xor push jmp inc or mov fdivr inc cli fidiv mov push repnz aas outsl adc inc out and mov cmpsl aam fsubs sub aad fnstcw fwait test pushl or lds loop stos mov and pop dec lahf stos pusha in pop dec rclb dec or xchg fnop insb cwtl cltd stos sub rorl pop jp mov int3 nop push push sbb fucom scas and pop jb mov push xchg jge push xchg aad xor pop push adc mov mov fisub dec jns div inc push in adc xlat fwait lcall xor dec adc test push xor lods imul sub pop aas into mov jnp cmp sbb movsb pop leave sbb add je pop pusha add pop leave lea lods (bad) shrd sub cmpsl out int3 jbe mov imul mov inc data16 jmp dec push scas fmull ja,pt push jg fprem1 jb xor popf (bad) aad sub jl adc pop call jno push les (bad) and fdivs and jae sbb xor pop push stos insb movb jl ja out fcompl and std in push or ret stos mov addl arpl xor test cmp adc cmp subl jo dec lcall (bad) pop jo lea aaa or inc xor mov testb mov dec (bad) faddl mov mov xor ss out andl lcall popf rolb jecxz xor xchg pop or insl insl loopne hlt xchg test imul fwait andb add pop xchg js js fcmovne out insb (bad) imull out js and or cmp movsl loop push sarb repz out cltd push dec mov ss or fdivs fstpt dec jae data16 insl dec das cmp setno (bad) xor mov sub dec lret ret scas stos push popf inc call sbb mov push xor adc call push stos dec fdiv pop push sub jg push data16 stc pushf xchg adc cmp cs dec popa daa push (bad) add pop ret cld cmpsb cmp mov jb add xor and js fsubs rol xchg xchg fucomp (bad) mov xchg sbb dec je push mov and inc pop les daa jbe in int xchg mov cmpsb pop adc push dec popa es cwtl sub shr cmc pop pop mov int3 lcall in or clc ja fimull (bad) mov nop bound (bad) mov popf rclb jne movsl (bad) rolb mov xor fnstenv mov jle and jp add and and je pop aam ret sub adc jns fisubrl cld not cmp ss sahf sahf lret cmc cmp or pop (bad) jmp add jmp mulb jg lods aas jl add push mov inc push mov inc cwtl popf inc jge xchg jns test and nop dec aam imul scas imul xor (bad) mov sub push jne sub movsl movsl push fcomps ds sahf adc push or ds lret pop jmp inc les push xor adc (bad) pop jg mov ret fs out jg pop ss jnp push in push xchg test mov shrl ror jo jmp adc sbb inc push rcrb dec or lret (bad) fldl cmp jle xor lret ret mov (bad) loope clc mov out out cmp push shr cltd inc fiaddl outsb clc scas loope cmp xchg xor call lcall pop xchg sub add inc pushf and cmp in leave mov dec mov cltd popa in or jb lcall jae add mov outsl xor jo adc push nop cmp dec fnstcw xor nop pop push or mov out insb cs inc mov out xor nop (bad) stos mov push es sarb xchg sbb push test pop imul cs test fs in hlt ret pop out jg in jmp ret (bad) insb jl mov mov lock push push pop add inc (bad) jne lods data16 mov mov push rcr or mov repz stos dec jge ret ficomp sub inc repz sahf mov push repz insl insl fimull adc xor ret dec andl testb sbb pop xchg sub loopne aad xchg add push movsl jbe dec shl scas imul sbb mov mov mov gs push cmp sar sub dec jne cmp cmpsb mov lcall addr16 mov shlb stos clc aad stos inc mov dec mov pminsw sbb jecxz fist jle (bad) cltd dec shrb lods push add jecxz out cs std insb movsl mov rcr loope xchg xchg xor bound sub nop fldln2 jp sbb xchg dec inc inc in push jp dec mov mov xor xor mov lret add in pop pop sub nop (bad) push (bad) or cmc adc or aas jl aaa inc fidivl pop stos lret xor leave push push pop pushf mov jecxz gs shlb or fisttpll sub inc out xchg aad dec adc aam idiv jo test sbb push pop or jmp rdpmc aad pop into cmpsl xchg repnz ja and (bad) or pop xchg popf jae sub mov dec int mov mov ret fstp subl push mov clc add cmpsb lret aas jns (bad) vpsrlw jl mov adc je mov sbb pop jno pop mov mov scas imul mov jo std mov shlb out in fs fmul push push sti and cli sub push insb cli popl xchg adc mov aas in js cwtl jo in jnp sahf and dec rcr (bad) jmp mov pop loop sbb je and dec cmc (bad) ja dec mov test pop mov add mov mov inc dec ret cltd dec cmp adc out and rolb scas cmpsb js addr16 cld lret push decb loop adc addl (bad) outsb faddp pop and test divb jne into jno pushf (bad) xor out in cmp pusha in scas outsb orb jle aaa jge repnz cli (bad) mov aad aas mov and fisubl pushf xchg inc cmp aam mov xchg sahf ss cmp xchg mov mov ret cld add fisttpll outsl inc repnz mov pushf sbb xchg lods push es insb jbe push movsb push frstor xchg push cltd dec lods inc push push sub inc scas les (bad) cmp push adc mov push mov ret (bad) outsl jg stos sub clc dec mov add in shrb cwtl mov xchg addr16 xlat leave fs in jae sub (bad) cmc xchg (bad) je sti mov or mov mov xor xchg out test orl js aaa les or lcall xor or outsb mov mov lds jne mov enter mov or mov sahf lods sbb es fstl pop ret int inc sub popa and mov fisttpll dec js or orb and lcall aad ljmp mov inc xor das clc adcl test xor fisubrl adc in mov (bad) (bad) jecxz sbb add movsb adc addl out std mov pop mov add in loopne rolb pop lods roll fs push jne cmpb xor bound insb dec pop mov mov mov dec pop cmpsb orb mov enter mov pop pushf add pop lock xchg call mov jne fistl jge add lds adc inc cltd mov lock cmc in aaa cmc into push (bad) popf xor out es lret scas mov les dec repnz fsubs js or mov adcl inc pushf inc lea test pop in orl push xchg lea pop nop cmp jb mov lret int3 mov pop add mov in (bad) mov clc lock jne xchg out in pusha xchg (bad) testl lahf xor mov rorl xor and call sbb mov cmp mov fbld dec inc dec adc mov shll cltd fs push jnp and or lahf aas xchg lea and in xor aad sub divl rclb xor jmp pop jae mov outsl clc stc pop mov add test les push jne mov les (bad) dec jne mov arpl mov add lcall loop adc movsl xor sbb push sub mov or dec outsl or jmp push hlt adc mov push divl js jo mov imul daa ret js sti push les adc push cmp sbb cmpsb aas fcoms add dec bound stos xor les aam ja aaa inc mov adc bound out adc xchg (bad) push fs or xchg xchg lahf mov dec xchg add add roll loop test mov fxch add xchg inc ds outsb std add sbbl xlat inc movl sbb je xchg adc loope dec bound sub mov repnz jmp (bad) pop push jp ret push stos push inc cmp loop aas push sti lds mov repnz or cwtl fnop (bad) xor push xchg pop dec js jge pop push (bad) jns dec insb aas stc xor jmp dec cmpsl sti push icebp jp fnsave cs fs cwtl cmp mov jg mov repnz sbb mov data16 xor into jle daa push daa xchg mov cmp cmc push jmp in fwait adc aam jle adc cmp pop pushf dec push fsubl fisubrl sub aam lret cmpsl (bad) sbbl mov movb adc pop insb shrl push mov adc aas ja pop int inc fwait push imul xlat enter xor insl jp inc in loope stos inc mov scas add or jecxz mov rolb mov mov arpl fisub dec ds mov mov stos es push jp xor stc xchg mov jle das les cld add push loope adc xor sub (bad) idivl ss pop lret mov mov inc pop or enter test sub xor popl rcll mov cmpl inc and fistl (bad) in jns inc cmp call xchg dec out out dec mov pop jecxz push jecxz push pop mov sub xchg cmpb jae mov and loop imul sub sub add or stc fs mov int sbb call mov arpl repnz in and or out mov fs out adc rorl cmc xchg test push mov or out xor dec sub mov lret movsl ret mov in sub cltd fldl fldt xchg sbb loope imul dec repnz cmp test ja inc dec scas fisubl jmp sub sbb xlat imul push jp mov addr16 in arpl sbb mov call sbb lds xchg inc jne js aam sti fild jb (bad) lock push cmpsb or addr16 jg nop xor scas dec dec mov mov es mov mov mov popa std in ss (bad) xor sub les stos imul in push data16 pop nop cmpl gs mov add and push js int3 sarl (bad) sub pop movsb pop lret cmc jbe sbb test push test cmp sahf and dec xchg jae mov xchg cld in insl cmp cmp push pop das dec not popf push ja aaa mov cs cmpsl and stos mov mov or mov mov jp lret pusha push inc shl das and imul jb cmc or (bad) xor shrl mov jle sbb dec inc ret dec sub (bad) mov cmp cmp or sbb lods or stos out push xor cmp ss in pop push add loopne xchg mov mov outsl lods jb xor lods enter arpl cli xchg or ljmp dec and pop clc test lret stos arpl or jl mov sub xor cmp test sbb pcmpgtw push movsb or xor jnp cmp hlt cmp daa cli lods mov inc pop mov cmp (bad) cltd imul mov leave jp dec sub sahf or data16 xchg and stc or add cmp xor gs fistp insb insl pop loopne and scas cmp pop cmpsb popa mov or ss push pop in jae dec or xor cmpsb jno push addr16 test fsubrs cs bound insl mov adc cltd mov (bad) rcrl xor push fisubl ja adc cltd mov push repz fistp hlt jl je cmp sub ljmp jmp xchg negb (bad) fisttpll xchg das je call (bad) iret or or cld movsl rolb xchg cmp xor mov mov xchg push jnp test cltd jno adc mov movsb sbb lea mov stos cmp pop mov adcb xchg xchg mov sbb (bad) aad sub movsl add fistp and repz aaa fdivrl out ret cmp pmulhw or adcb mov adc mov sub sub mov push cli and jae je push adc mov pop fcoml or cmp mov (bad) push push cli adc adc jl (bad) xor mov iret stc xor pop es in ret pushf loopne dec sbb adc adc (bad) js adc stc testb popa sub stc xor dec xor mov mov mov cmp loope cmp and in push push aad adc fbld cmc mov pop mov lcall cmpsb lahf jle lock mov push xor push repnz lret mov or xor pop mov or lods clc inc sarl and sti lret mov push call mov pop out sti and pop js xchg sub push repz inc mov repnz roll jmp pop les imull jg fptan ret adc adc sub pop (bad) std mov into mov sub jge lret mov pop jo rcr jle lock stos jecxz sbb push jge cmp mov sub or pop push ret les pop jns scas cltd cmpsb (bad) mov mov xlat repz test adc sbb sub pop mov pop (bad) (bad) repnz add imul cmp iret call mov xchg (bad) popa push popf sbb mov leave adc dec repnz leave sti and pop fwait inc fsubrl sbb dec sbb (bad) mov cltd subps out leave dec (bad) in sbb or xchg sbb in hlt push rcrb repnz (bad) xor sbb sbb jnp movsl pusha scas sbb pushf adc xchg rorb scas orl in in (bad) push and inc cltd lds call mov insb xor add push mov inc jbe jl push xor mov fildll push sub lret leave ljmp lds push pop or mov enter lahf data16 int3 bound pop cmp push shrl mov mov dec sbb mov movsl les out movsl js sub jecxz jnp rorb les xorl enter mov mov movsl cli sub add mov or or sbb lret sub add adc loop sar (bad) xor call fnstcw ljmp popa fwait sbb inc loopne les outsl ljmp repnz xor pushf push sub popf sbb stos in in push or lds inc adc mov rcrl and lods pop xchg bound mov rol lcall pop inc cli mov jle int mov (bad) jb cmpsl test stc ja data16 mov cmc sbb xor in inc push ljmp clc enter hlt (bad) aaa pusha mov add stc sbb mov jl loopne iret lds fstpt sar insb bswap adc lahf js sub xor xor xchg or incb mov or sub out pop test pop push (bad) xlat ret cmpsb dec sbb pop jmp and lret test imul je mov mov inc rcl xchg ja shr pop loope out push jb jmp jp sub daa call adc jns call jbe mov and inc fdivrs in outsl pop (bad) clc ret push push pop add stc insb pop xchg out jge js out nop test jecxz mov sub (bad) push mov pop pusha push (bad) xor pop sub dec call out in mov mov insb loope lea inc lock popa int3 inc push inc or sbb jg shll cld pop lock jp jp (bad) lods mov or (bad) ja dec pop cmpsb xchg outsb push pop subl pop xchg stos or mov imul mov mov insb les ret lods cltd adc xchg xchg or fiaddl mov sbb fidivl gs mov or test and enter mov setg mov sbb mov and nop mov repnz popa mov mov cmp outsb cmp in movsl pop and shll dec xchg sbb fiadd jle adc lret fstpt fstpt fwait stos push sbb cmpsl xchg or add ja sub sbb cli aad insl add ret add push inc imul imul outsb jnp fsub push mov xchg xchg pop leave repnz das xor pop pushf mov mov mov andl outsl and jecxz and mov pop xchg sub xor mov mov fldt hlt jnp jl lods inc mov ret mov push fnsave mov mov fdivrl cli shrb xchg jl sub fadd adc movsb push jle in xchg push popa stos jb jo,pn jecxz jge popl in imul or cld mov pusha push loop inc dec jle or sarl jmp jle (bad) mov pop call cmp rcrb clc cmp mull jecxz add sub push xor mov ret out rol lret ret and lcall into popl gs ljmp adc loop stc sub loop inc jo (bad) xor sbb addl aaa repz sbb loope int3 push dec cmp cwtl int dec mov xchg clc adc scas cmc dec (bad) stos sub push push popf stos jge js leave test inc bound sub dec adc in cmp add dec pop mov inc mov sbb sub mov aaa jecxz add push push pop insb push hlt dec mov mov inc adc jmp or adc xchg pop cmpsl les insb mov push cmp aas jge (bad) mov mov dec das iret scas inc clc mov add xchg mov fsubs popf test sbb push push dec sub push (bad) into mov inc and adc mov sahf std xchg jb push call add sbb sub add xor ds mov out rcrb cld sub ret fwait mov pop loop (bad) scas out ret sbb stc lds les ret mov mov cs add or jg lds jge pavgw jl push shrd pop scas mov imul add push xchg enter inc cmovae pop pop xlat xor inc jecxz divps sub (bad) pop inc fwait movsl fs aaa pop popa jns and fisubrl fidivr mov pop popa xchg xchg or cltd fist je jnp pop fs cmp fcmovbe or push lock sarb jmp cmp pop psubsw movsb xchg jne test xchg xchg loopne popa je dec mov dec (bad) icebp into mov das xchg mov pusha nop outsb in inc inc mov aad aam jno popf out xor mov mov movsl inc into repz push icebp aaa adc fldl xchg popa loop data16 inc lds add (bad) adc and sbb lods adc das mov xor sbb jnp mov pop lea dec jmp std xchg cmp fnstcw add int loope mov add cmp sti jne rcrb in xor jns fstps xchg js lea adc and pop fcmove sarb jbe fild popa pop test pop or rcl adc test inc adc inc lods cmpl out fisttpl mov cmp mov push sahf test je push xor or rorl pop adc and mov mov jbe sbb out mov jecxz mov bound pop push out popf in pop ja jns or mov outsb or in in sbb jb (bad) fldcw fisttpl fsubrl test stos iret xor aam mov sub mov out xchg mov mov lcall lds xchg (bad) and adc dec pop inc xchg das (bad) sub inc punpckhdq jnp icebp scas xchg pushf cmp mov inc push test fwait mov movsb int3 (bad) scas sbb sub jbe dec insl scas push adcl or dec mov push out sar aas arpl sbb jae (bad) out jecxz je pusha fsubs stc in cld inc popf inc mov int sub dec sub add clc test dec in adc cld (bad) lret mov in add inc pop leave sbb inc jp fcompl dec mov cli push inc push xchg mov movsb dec or adc sub add ss add cmp or addr16 cmpsb sub rclb pop testl push pop in sbb ss lret daa cmpsb fsubrl xor cmp cltd xor leave outsl ret mov repnz clc bound in sbb dec out mov cmp dec cwtl cltd pop mov sbb iret mov sub (bad) jne lock mov mov mov dec push pop or bound fidiv gs jno es and xchg clc (bad) cmp in mov sbb lock mov adc jge fldcw imulb and jb enter and mov lock (bad) push xchg aas into icebp hlt add out inc xlat cmp cmp ffreep sub leave sub jb mov or scas (bad) xchg pushf dec ja mov sub fnstenv into mov add jns xor cmp and add bsr pop mov leave dec lret push pop repnz iret sub aas ret inc ud1 dec data16 aas mov lods scas imul js mov lds fwait xchg or mov cwtl out ret cmp fs shrl push sub into adc cld daa mov stos cli pop dec insl or pop imul mov push lahf lret xchg adc sub mov dec mov into xor movsl insb rorb xchg fdivrs cltd xchg sub nop ret addr16 fwait lea mov js dec xchg insl fcmovbe testb mov mov outsl jmp push xchg inc or sti mov sbb inc divb dec pusha mov gs xor aaa js lret add iret into dec cmpsl les lock scas inc dec stos dec outsl imul dec loop test mov push push xchg outsb (bad) negb (bad) je xlat lods test add int3 and movsb sbb mov adc fisubl insl xchg popa ljmp (bad) xor rcl arpl negl and xlat out pop std cs rorl mov adc out (bad) and inc roll das or clc mov (bad) jae ljmp or insb in in mov out and shr loopne sub daa cmp icebp cmc jbe scas mov inc sub in ds hlt call mull cmpsb fstl mov jns cltd (bad) je xor or sub icebp pop pusha dec ja jl loop fs push out mov cld push or mov and addr16 add clc movsb xor mov sub cmpsl and mov pop sti hlt mov push fidivr jl fwait sbb jbe pop jmp pop add and jmp inc leave xchg mov pop int3 adc sbb push push movsb fadds lods rcrb dec je loop adc cmp out mov test lret sub les leave (bad) out test test pop mov mov adc ljmp add stos and jecxz xlat fmul (bad) jb dec std xor or xchg cmc icebp jl fwait out cli xor xlat pusha outsb icebp xor pop in cmp add xchg cwtl pop xor cwtl xor xor stos outsl arpl fnsave cmp push xor dec pop nop pop lahf data16 (bad) shlb repz repnz decb inc incb fs dec loopne cmc negb or sarb dec jnp mov movsl push lds mov sub sub mov ret popf pop mov stos popa dec arpl sub add jns clc mov jp sbb cvtpi2ps and jne (bad) rolb aad mov mov jns pop inc and xchg mov subl test cld sbb cmp pop dec pop shll stos mov pusha repnz loope mov xchg fidivl cmp sub xchg adc dec in outsb movsl leave arpl fimull loope pop cmp cmp push fs es ss and lret xchg dec mov pop dec fcomps mov dec pop sub fmuls adc xorl stos test adc push pop je pop add jp or push inc leave sbb notb pop notb mov lea (bad) mov cltd pop xchg out jo and and pop jnp push test rorl outsb enter mov mov sub and js cld pop (bad) mov xchg lahf ds (bad) dec sbb push popf mov xor mov push add sbb dec mov pop inc test lret mov mov xor inc xchg fldt in outsl (bad) or iret xor mov or xlat or adc mov cmp jp push or push shrb into fs fldt jnp into fisubl out jae std repnz test cmc pop cmp add and fdivrp mov inc push fwait jno fcoms mov push mov push call stc adc scas hlt or popf push xchg std in lds push scas imul jmp mov cmp icebp lods mov ja adc adc enter jge inc hlt mov jg test adc cmc xor push lods daa fs dec or mov aam mov xor fimull sub sbb mov sub pop xor cmpsl sahf jmp jbe mov mov jno pushf pop lret cs mov cmp adc and cwtl hlt dec loop inc popf cli push int mov cmp aas pop sub aas jge addl outsl push cmc mov out push jg arpl dec cmc sti insb mov mov xor cwtl out push inc adc or push mov stos lods out xlat test ficoml and sub pop sub pop mov mov std and cli bnd repnz loop pop test cld adc cmp jge xchg adc outsb mov pusha (bad) pop in popa daa scas add roll mov or sub js dec pusha ja xchg (bad) mov and fs pop cmp sub loop mov popf lods and mov shlb movsl or aam mov dec cmc xor dec lods jae fcoml mov cltd std jno cld imul jle adc push jnp and popa cli mov inc sub inc ljmp lcall out or flds push xlat test mov inc lcall xor pop scas cmp dec rcrb insl test mov gs xor push out jle pop jo or mov xor push mov xchg movsb jecxz cmpsl jge sbb push int imul inc pop loopne pop xor jne repnz mov sub das mov add idivb pusha xchg mov aas fistl sub mov idivb sarl cs rcrl cmc fnstsw pusha add pop pop and ss roll or push or mov jp xor mov cmp pop js jnp sti push scas rcr and js sbb mov xchg enter add dec sub fwait push sub push xor neg add jno insb xchg xor out (bad) shrl ljmp push xchg in js xchg ja push inc and sbb xor pusha dec or lea adc int or pusha cmp test add adc mov into lahf adc int3 mov mov pop sub fdivl popf cmp xchg pushf sub sub mov mov push ss nop xchg pushl pop mov sbb lret push inc or fiaddl loop mov lods jb std movsl and jmp inc or jnp mov mov daa pop sub int (bad) int ljmp popa jnp mov ret push inc push movsl jbe xchg push dec jb (bad) test (bad) push or dec pop ds xor loope js popa pop mov pushf ss mov mov xor rclb js pop sbb adc negb fisttpl cwtl add add jae mov mov inc les andl xlat cmp mov fstl xlat ret js jnp add add xchg inc mov xorl jne push les and and pop test loop repz push add cld add push fs inc dec pusha push sbb out lds into fisubrl dec test sarb imul and dec lret mov adc add xor loopne sarb scas mov inc and aad dec push mov outsl inc xchg inc mov aaa mov enter into push movsb jbe,pt and out jbe xor loope mov mov into and leave mov push mov mov mov gs aas add inc nop or jae insl push pop xchg or (bad) xchg inc (bad) ljmp sub lock in imul in cmpsb int3 sahf inc inc mov sbb mov add xlat pop mov fstl push mov lock ja in stc xchg mov inc xor ficom xor fildl inc aam xchg out mov pop nop das sub daa jmp adc fldl scas push stc popa dec dec dec lds xchg jp das mov js les in xor lcall leave xchg ficomp mov xlat dec push repnz xor fwait and fnop je mov adc push repz or aam cmp (bad) (bad) and clc sub ret jbe sub xchg cs cmp repz sub mov (bad) lock inc dec sti dec adc rol adc mov popa mov sbb mov dec sahf rol jnp pusha xlat sub pop push out jle mov and (bad) mov cli inc rep mov scas mov out fist sub lcall cmp push adc lret in leave aad push lea aas gs fidivr lock cmpsl mov arpl test jae inc inc ror in sbb push mov rcr sbb fsts movsb mov dec pop dec adc adc inc mov lods in movsl in mov fsts lds push xor fbld pop mov lret or mov mov and inc call push mov rcrb iret cmp frstor mov insb mov mov jg call and sbb mov fisub sub adc mov data16 movsb xchg negl or push sbb movsb cmpsl jmp pushf pop popf mov loope pop push dec pop stc mov cmp dec sti or pushf lods sar lret mov bound push loopne stc in inc test push out pop les push cwtl (bad) xor xchg fwait or cltd js cmp sub shll mov mov sbbl sbb (bad) repz jp (bad) decl mov mov shll adc pusha jbe lret (bad) xor push xchg sub mov adc repz mov inc pop aas dec xor in fldt and and jae data16 fisttp pop (bad) or mov mov gs mov test (bad) push and mov (bad) loopne and lret xchg daa fidivr or outsb incl push sbb ds loope je call fidivrl mov push in sub rorb dec jnp push test (bad) mov fidivrl cli lahf mov shr nopl mov mov push xchg ret jp aaa xchg das (bad) mov hlt fs adc add jae lock inc aad outsl stos lret ret outsb mov movsb mov sub pop lods (bad) in hlt lock pop mov adc jl push inc sub jbe mov cs aad inc cmc jge xchg inc mov pop mov bound pop pop cmp test dec mov inc or adc adc jns aas cmp sub lret lret mov fdivrs repnz jle nop cld and cmpsb xchg scas inc add imul je add (bad) xchg add mov loop clc fsubs dec divl rcll mov test jb pop cmpsb inc es adc or lret cmp sub cwtl inc inc xchg mov xchg push popl cmp sub nop stos jne inc outsl pop adc testl popf outsb imul leave dec incb inc push mov mov int xor js imul sbb (bad) js inc fbstp push es add adc pop cli push lods mov cmp mov aad sub call aas pop add sub and xor jnp jle test pop mov jmp sahf mov arpl mov insl fisubrl pop inc xorb stos loop out adc add sbb iret scas (bad) or imul std cwtl and imul and jns dec push iret jo jb in mov inc jle repnz mov cli push stc adc mov or lods inc inc jbe push xor mov push out (bad) jns pushw (bad) mov outsb imul test fldenv cmp pop pushf jno lds (bad) xor pop xor and jae and mov pop add and movsb push aas dec dec inc or inc push mov popf call pop stc std shrb fcoms loop jbe push rcrb lods pop cmpsl stc xchg jmp enter adc push orl fldl ret rcrb add xor gs cmp ja mov mov fisub (bad) and xor xor sbb mov (bad) xchg jo xor test xor into insb push lret leave es adc and (bad) mov adc mov dec arpl mov push les fsubp rcll addr16 fsts (bad) (bad) cwtl out test xor add loope adc sub cltd or nop dec sub cmpsl xor sti add sahf (bad) push movsb cwtl pop std jmp xchg adc jecxz push xor sbb mov pushf adc popf push lods idivl adc mov xchg sub jecxz adc lret loope sahf push cmc ds mov out std jmp add inc mov xchg sub inc jne inc iret jmp pop mov push adc lret or mov ret push jmp sbb mov js in (bad) jne out dec into test xchg or mov andb leave jg clc and push jp inc cmp ret pop leave xchg inc sbb xchg push cmpsl cs jp stos ljmp test outsl pop jge mov jo call xchg add xor add jle sahf sbb xor xor sti sbb loope pop fist sarl dec test inc and jecxz push adcl out mov jg test insl dec ffree fstl cs cwtl cmpsl testl fxch mov aam js idivl mov loop dec push jo and xchg ja mov sub sub add mov cld sbb popa push jb outsb test outsb cmp xor punpcklwd sti sub or xchg and mov cld lret (bad) js jbe jl mov je or jne cmp and cmp or out fsubrl addr16 sub imull fnstenv ja (bad) leave outsl add and stc xchg pop jl ljmp push cs and add fwait cli inc out jns (bad) xor cmp mov pop (bad) mov xor enter jb mov mov mov out cmpsb je mov adc sbb mov push xor in xor out dec fmulp and scas ja add mov adc sub loopne sti mov push hlt xor xor and lahf sub jl jb fsubs sub scas aas sub jle sub adc cmc mov pop ljmp ret into sbb push and std sub fisubl mov in add fs dec icebp mov popa dec xchg ret jo fnstsw xchg into aad jae add nop inc lods cmp xchg aas pusha jne into dec lods leave gs hlt pop mov mov and jp loopne and loopew inc mov dec push cmp jp or repnz rcrb push (bad) dec in dec pop les in movsb iret popa das shlb (bad) (bad) scas call sub sub xor jmp mov cmp mov movsb xlat sub lcall push mov lods inc push (bad) jno or cmc or imul or mov nop jg inc push insl call sahf pop int3 push cld movsl pop xchg jns mov mov leave lret cmpsb imul mov cltd lret and (bad) ret cmc cmp fdivl test lret icebp sahf jno test ss lcall call sbb in sub mov es pop add sub lret cmpsb adcb jmp pop mov xor stos sbb mov lods sbb loop pop shlb cmp jecxz dec stos pop xor sbb mov mov adc scas out xchg xchg rol inc mov pushf notb push cli xchg cmp fs ja mov xor inc out sub push cli pop mov add mov xchg or out jnp mov fnop repz pushf sti push sub inc out push (bad) cmp testl int stos int3 mov sbb lods pop cmp in add ficomp sub fs jae (bad) dec popf lret xor inc lahf daa mov inc pop mov mov adcb test das test es imul inc loope cmp sbb loopne or dec jb mov mov mov bound xchg lock dec push inc push aaa aas outsl adc bound dec adc pop mov mov loope cmp mov icebp dec jecxz imul and jno pop jecxz add in or and cmp notb xchg pusha sub outsl sti xor cwtl lea xchg pop out clc rolb and lds sub push enter cmp in cld add nop jnp push loop js andl sti ja in fs in mov mov pop sub jne out scas fsubr inc xor roll mov xor sub pop mov into sub lcall fisub pop dec insl mov push push ja nop cmp test sbb data16 rclb push mov inc fadds adc xor jnp pop mov mov imul inc clc cltd movsb scas mov insl aaa or repnz dec out xor clc sbb je push daa lods or sub (bad) sbb pushf in cmp fisubl sahf and sti push insb nop mov mov in call rolb sbb mov dec outsb sahf lods inc dec cmp mov icebp (bad) push icebp rclb imul sub ficomp sbb lea lcall (bad) out cmc xor sbb mov in mov xor xor test ljmp or ds mul jnp jge fmuls (bad) test mov in das imul rcrb std icebp dec xchg mov jns mov jno dec and xchg aad add outsb and adc bound mov rol or xor das adc or xor mov push cmp cmc jo repnz jle je lahf pop bound xor cmp inc jb popa push in xor add mov icebp lcall jne std nop cmp mov mov adc lock sub and add daa or rcrl outsb clc inc xor (bad) out ficom fnsave lods inc mov mov mov adc repnz xchg mov add jge sub sub xchg xchg int3 fidivrl cmp and ja mov aad mov mov inc jo push cmp (bad) sarl jb div adc sti push mov cmp push loope repnz jne out std cwtl sti pop cwtl loop mov and movb mov pop mov cmpsb lcall (bad) out sbb movsb jmp sub xor mov aam lock mov mov fs cmp test adcl xor xchg xchg aaa push leave mov lcall (bad) xchg pop pop in jbe xchg daa pop sar mov clc pop rcl pop (bad) addr16 push jp dec xchg or loop pop idivl xor idiv push mov (bad) push icebp sarb je nop iret jbe out cld sub mov in inc jbe xchg das pop mov iret clc cmp js push (bad) jmp jo ficom jg fiadd inc xchg (bad) mov jecxz push xchg xor imul aaa push ja mov out test jp fisttp fisubr dec in outsl xchg cmp xchg (bad) ss pop das loop fbstp (bad) je or jl sub inc andl insb data16 aam test adc jns mov mov dec mov mov rclb ror mov sbb or xchg cli mov leave daa pushf mov repnz gs dec mov es dec xlat les cmp xor pop or add jmp lods pushf push les test sbb outsl test pop and mov lock xor xor pop mov sub mov insl jae pop mov push int cmp mov incl fwait (bad) adc or (bad) int cmp cmp (bad) jmp mov (bad) pop out test mov (bad) mov jns lcall cmp jbe push cmp sub and jbe sahf gs aaa sti rcrb jg jge (bad) ss mov les sbb mov shrl loop lock ss or sub ret (bad) pop sub loopne inc xchg or sahf mov out jo sbbb jmp push jge mov bound push sbbl mov xchg test xor mov call xchg inc popf mov jnp hlt xchg fcmovnb cmp jno mov mov shrl mov add (bad) iret fmuls add ljmp cmp xor mov xor add movsl jnp je dec xchg aam cwtl in lods bound (bad) stc pop sub xor mov mov sbb test (bad) cmp mov mov pop dec gs es sbb lock pusha mov adc inc xchg xchg imul call dec push cmp lods push test pusha (bad) adc mov lods mov mov mov stos negl mov mov jnp cmpsl adc push aas ds out loop pop push jmp cmpsb push cmp in adc and insl xlat test xor pop jo or lret movsb rcrb (bad) xchg arpl fstl jo xchg sti sbb aas mov or repnz xor sbb (bad) daa stos jecxz jp ret ficomp cs cmp daa cs mov iret popa or xor (bad) out stos mov out loopne jl push imul dec mov test ret sbb rol stos scas ds xchg out fsubl cmp xor cmp mov sti mov pop mov gs xor and inc jle push cwtl mov and movb xchg xor repz push sarb in addb inc push popl add ja push test mov mul loopne jnp pop in rclb test jbe (bad) sti jbe loope arpl testl mov or test xchg pop movl js inc imul ss and mov add and jns push popf or xor mov leave punpckhbw scas mov icebp and leave jp popf test (bad) (bad) pop imul add push repz jb pop xchg dec outsb push scas lret xchg jmp and fs push into mov pop repz xchg imul mov ret in addl jmp push out inc push pop jo outsl (bad) sub add dec ljmp mov test fwait int3 ret push loop lret aaa jmp fsubl jp mov icebp repz fstpl fildl imul and pushf mov push cmp outsb xchg push push jno test add cmp push lcall rclb adc jno adc adc pop stc jb push aaa fwait dec and movsb jmp xor adc jp js mov jge stc push mov mov sbb mov js push jbe xchg sub sti xorl jle jbe mov or pop insb cmp jae inc cmp adc pop scas aam push xchg (bad) xor xor out jge fbld cmpsl push cmpps push (bad) jno xor or mov out ret fsubl cwtl cs ljmp je sti mov or stos jp dec dec sbb hlt stc aaa jbe add jns in jns bound xchg mov jl add xchg inc gs gs je mov pop rorl hlt ret adc imul je fwait sub lock xchg add mov sbb or cmp push sub rcrb ds add sbb mov into push sub mov in sti subl jb adc outsb stos aam les or ss andl mov add enter inc cmp xchg sahf add push je repnz and jnp sub bound insl jno and ljmp cmp jnp mov test aad push push fldl popa sub xchg sti mov pop jne mov (bad) std add dec fisub cwtd pop inc roll fisttpll pop push scas inc fcompl push dec stc push push (bad) sub lcall stc div dec les and imulb or in (bad) ds mov xor cmpsb adc or mov enter cpuid inc int in ret ds or inc adc jge lret data16 lahf scas inc jb imul pop add popa jge mov stos idivb pop xor mov leave (bad) in icebp sbb xchg lock stos in insl dec xchg mov pop repz into jnp movsb mov fdivs add adc insl (bad) dec mov adc push fs (bad) popa cld adc sub xchg loope dec ljmp pushf fisubrl rol fdivrs jp mov dec fildl cmp mov or ds ja fs dec xchg add cli repnz (bad) xorl or gs or add mov lret test (bad) pushf fstps mov scas lea and push repz iret or int test add (bad) into scas stc xor sub test scas and jecxz sub add sar mov sbb sbb inc adc (bad) jne repnz movsl or mov mulb stc adc iret fsubr mov ja pop lret stos sub test dec and xor int3 in lahf push imul pop in lock mov add push fisttpl ljmp or or sti shrb pop pop jb fnstenv xor cmp test and test mov nop add fiaddl inc inc mov jmp xorl fdivrl test fnop les mov mov aaa push add jmp dec xchg aaa jg sub sub rcrl add test cmp (bad) (bad) push shll mov subl cli test sbb adc iret cs dec cmp sub jecxz xor sub loope mov push movsl push push movsb test jno cld fsubs push or rcrl test pop (bad) jge add enter push dec dec add lcall mov dec dec xor adc in sub inc pop out out sti mov dec mov dec jmp (bad) scas xchg es jb mov inc roll fsubrs addr16 inc cmp fidivl push add dec jle popa xor xchg sahf fcomi popf inc xchg fildl cmp or pop xor pop aad xor mov adc sub data16 xor fstps cwtl and xor sbb dec movsb (bad) dec daa sbb jne in pop repnz int3 mov das ljmp dec or xchg icebp dec out dec pop daa jl mov inc js push repz xchg test stc movsb lea xor xor nop pop pop pop std cmpb rorl std aas cld push adc push scas dec jnp mov es jge pushf jb mov mov sub repnz rcr push adc ja loope dec rorb lret dec js push push xor dec fstp leave jecxz and and (bad) divb sahf adc (bad) and inc pop imul adc or or lds imul xor sub cltd lcall add cmpsb and lahf das nop notb push pusha loope add adc dec scas lret mov cwtl jle das xchg mov orl adc das inc and adc xor incl inc cmp inc addr16 mov add test xor test mov adc cli aaa push jmp dec xchg sarl inc sub push push sub fbstp pop (bad) xor dec pop push xor insb icebp dec cmp sahf xchg ds int cs push iret mov or pop call push push enter adc (bad) push sahf push (bad) sbb and mov in cmp mov faddl int rcrb and decl pminsw stc lret xorb jl (bad) xor dec or cmp cmp leave and mov out outsb xor xor aas loopne cltd fs out sbb out sbb cltd fldcw out jecxz sbb (bad) lock aaa cmp xchg adc hlt dec xchg jmp inc icebp xchg lahf jno dec inc jb sti pushf mov popa (bad) mov adc or or or clc xchg fcomi dec cmpsl movsb (bad) xor cmc or sub ss in and mov push xchg sbb pop lods xchg mov sbb (bad) dec sbb into inc sahf dec jg pop adc (bad) inc inc xchg pushf out fild cmc je sub fs out mov cmpsl aaa dec dec fs loopne test mov cld xor adc jb pop cmp xor outsl movsb sbb adc cmp enter (bad) add in js repnz movsb cs rcll sbb mov cmp mov out ret sbbb lret mov loope test mov add and xchg cs fwait xchg out lods ds pop push sbb lahf (bad) dec jbe mov mov inc xchg aad sbb aas faddl jne mov movsl and jge,pt icebp outsb cmpsb pop (bad) or adc mov popa xor cmp lahf jle jnp inc mov outsl sbb out testb xchg gs cli xor inc sub add push mov fmulp jns xor dec mov je aaa pop outsl lahf xchg sub cli fdivrs dec test push ds into sahf or sbb jmp pop jp xchg push enter mov jp jmp lds pusha xchg cmp jmp cmovne ret int3 bound into das divb aaa inc dec pop cmp out in dec dec jae icebp pushf mov int adc out cltd xchg insl pop nop cmc mov push xchg sbb fldt dec mov (bad) imul mov out lcall in mov lret or mov or mov sbb adc sti (bad) sbb xor (bad) out nop es sub mov mov (bad) jbe mov in dec icebp popf xor add gs (bad) mov in cmp adc aad cmp cmp sbb sahf adc stos or and add or ficoml in mov jmp dec lock (bad) sub mov xchg mov jb test scas popa xchg aad nop sub xchg push nop ret xchg mov out bound cmp or push pop je mov (bad) mov cmp jne inc inc out stos rcll jg lcall scas cmc and cmp popf (bad) mov ficom push mov dec pop pop mov popf les les sub rolb mov sub gs fldt (bad) in cmp sbb mov lahf pop push add fsubrl pop xchg jg and jmp jbe fildl mov mov xorl mov in or or push aad fisttp sub mov clc andb dec xchg jmp lea cli xor lahf subb mov (bad) jmp lock push scas pop jp dec dec sbb jecxz cmp dec jnp pop jnp imul xchg or adc fstps test outsl sbbb dec cmp ss mov mov xor lret (bad) fild fwait dec inc orl sbbl lea into add dec sub cmpsl mov loop mull js pop test and sbb mov (bad) lock popf sub mov sub jo lods sub dec fs inc mov mov push mov jecxz adc dec xor fucomp mov mov xchg push ja mov movsl out and add mov xchg lar lret and lret fildll adc sbb fcmovnu arpl sbb xchg adc mov jno lods jne addb pop xchg cltd inc (bad) insb outsl jnp insl mov pushf xchg push mov (bad) xor and mov in mov lods push xchg enter and int3 movsl jnp lcall adc rcr xor les cmp shrb rclb inc dec push mov sbb cmp add inc xor cld in scas (bad) or aad sub jae jmp pop sub jmp jbe xor cmp jae hlt iret test add and mov jne add add mov lods ljmp inc data16 insb sbb add push mov gs adc jns push je loope lods aad push imul add mov push hlt sbb int3 lahf jb xor mov push jecxz (bad) lahf aaa adc scas mov sbb add bound bound cltd jge push out fs jg std aad mov shrl jns popf stos cmp xor lret and push xchg call jge insl mov dec jb ds xor push movups cwtl push call cmpsl push adc sub (bad) rclb mov pop loop jno cmp loop (bad) pop xchg call push addr16 jbe int3 cltd fnstenv dec cmp insl lret xor jns ret lahf xchg ret in imul inc outsl mov jmp notl imul scas out loop lahf jg aad int fdivrp adc aas out test adc push fisubl push negl dec (bad) or cld or pop gs ret pop dec ret cmp push add cmpsb imul xor (bad) hlt cltd sub imul or jp,pt fmuls xor dec test jno pop (bad) mov inc stos out cmpsb in jns js sub xchg lods cmp shll (bad) xchg (bad) sahf adc shll and cmp or mov or dec lcall (bad) icebp in ficoml and push inc cmp jg lret mov fidivr mov dec (bad) out test subl stos cmpsb jle sub mov sbb adcb push repnz push push sahf aad xor sbb sbbl icebp xchg repnz gs scas adc push mov imul insl and jg sti dec jbe sub and (bad) aad ret mov xor jne push pusha jnp pushf cmc pop push ds jo (bad) jle cmpsl and jle out cmp pop mov xchg outsl mov lds ljmp cmp xor jp inc in add imul mov jmp xor loope xorl xchg mov loop out adc fcompl pop subb ficomp pop jbe subb outsl fmulp lock jnp lock in fldcw repnz stos xlat adc aad cmp cmc (bad) addl mov mov adc push fisttp (bad) cmpsb cmpl add (bad) pop xor jle dec cs mov jo push sub push cltd (bad) daa les add mov mov cmp cwtl or popa loop popf lods cld add jg in pop out (bad) shrb lods inc pop cmp (bad) imul repnz aad daa push xor pop dec test cmpl dec andl push ss nop pop lcall fbld fdivr inc xchg mov add mov fildl gs jns xchg ja (bad) enter push pusha rep add movd or or lods in inc adc mov addl mov aam add add pusha subl adc pop jno push xor repnz inc add out jp and rolb arpl call lods cmc (bad) enter insl pop int in out lds cmp push jne ret inc xor jbe fldcw movsl jns cwtl sub cmpsl lcall push dec xor cmpsb jbe or scas cmp mov enter mov lock fsubrs addb out popf mov clc pop push stos hlt add cli arpl rorl xlat pop lea flds add jns mov popa lds sub test jmp xor mov or enter mov in pop sub fadds (bad) cld mov movl inc (bad) adc imul out enter ret movsl sti inc and xchg mov scas jmp sbb arpl in cs out loopne xchg inc in movb ja xor enter in pop es movsl das adc stc and or pop xchg lret cld sbb adc xchg ja sbb ja pop imul fcoml lds jbe or add stos int3 jb ds dec push inc fsub into pop ret mov fs fstpl cmpsb outsl mov lock inc mov sub xchg xor (bad) push in sahf inc jo jns mov xchg into dec int add fwait pop shrb jb nop scas int or inc stc jecxz fsts fcoms or cmc aas in or lea out mov mov mov pop adc out sahf fdivl into pop lock pop add add repnz add in mov (bad) in outsb sbb mov cmpsb dec xchg mov out add bound test push xorl bound fistpll jle sahf mov dec mov addr16 adc enter push cmp mov xchg cmp into arpl sarb add inc xor push sbb je outsl push cmpsb jge lock push dec hlt xchg push in push stos (bad) cmp loopne inc stc test xchg imul xor push mov cmp sbb movsl loope in dec pushf jl andl in fucom mov or or popf pop loopne rcrl (bad) aaa sub mov jg mov sub rolb outsb push cwtl les cltd jmp sti loop lock push loop push cld xchg dec push data16 fs cmpsb or out ja mov mulb pop mov movl xorl add popa cli ret jno jl outsl push mov test sahf loope movsb test aam cmpsl hlt aam lods js cmp mov ret in lret cmc or iret stc test mov adc dec inc fs jnp sub jecxz pop cltd stc push xchg lock aaa (bad) mov xor enter loop push cmp ja xchg or jns xchg ret dec ficom and inc or test pop mov icebp (bad) cmp inc icebp mov mov pop adc and or (bad) cmc cmp aas stos inc ljmp insb subl jl dec in leave imul push cmpsl inc ficompl (bad) xor popa idivb lcall mov sbb and pushf pusha cmp and jnp mov mov cs (bad) and (bad) jle push add sbb mov imul sahf dec sbb int3 cmp sub fmul gs decl xchg stc imul scas test loopne loopne aaa cltd or mov orl push lret dec fcoml ljmp ficoml outsb and add lret push lcall mov jg cmp loop roll or mov add xlat sbb ret inc and jle das or or cmp fistp je js mov sub inc sub outsb into loop (bad) testl dec xchg (bad) mov jae bound lahf movsl outsb jg scas or pmullw push fcoml (bad) pop orl (bad) dec lea or mov (bad) imul (bad) sub inc fs cmp adcb inc inc push loopne test fiaddl push dec fwait push out icebp inc sbb out jnp or mov jno mov sbb fistpll or and lods ds lods push repz dec fwait inc mov daa xorl adc bound cmpsb mov cmc dec iret (bad) adc flds sub les jge (bad) inc jno popa jecxz mov mov sub sbb fdivl rol in cmpsb rcrb shr dec xchg insb es loope sbb push mov jecxz ds fcomps ficoml jbe xchg insb inc xor adc rclb rolb shrl out jg jns mov jecxz xchg fldenv stos rcrb jbe ret mov in or test push cmp pop mov or adc sub mov jnp sub sbb cmp or push cs mov cmp or js,pn push sub dec mov xchg cmp mov mov ljmp adc push outsb add inc fimull sub push ljmp mov push test data16 lods lds mov mov (bad) pop out js ja xor aam insb mov push mov (bad) pop adc stos cmp subl stos stos sahf pop jno sbb push ficomp mov inc dec mov addr16 sub xchg imul cmpsb adc xor clc mov dec jge pop mov (bad) mov mov mov pop rclb mov and inc cltd es dec (bad) adc inc aas push cmpsl bound (bad) in scas mov mov adc shll insb js sub mov xchg mov mov ret fcoml xchg adc pop pop aad jbe dec push mov aas clc adc ret das leave fmuls sahf dec (bad) jno js xlat mov lahf mov mov imul jbe cmp xchg aaa imul js nop es mov sub lds or or sbb imul fmul sub push cmpsb fldenv push mov xor iret jecxz mov movsl gs addr16 inc daa mov out (bad) (bad) js repz adc das and mov movsb es call lret dec aaa popa or sarl daa test push lock push pop scas mov dec sub pushf inc sub mov mov ret rolb mov rcrl lret jecxz aas into loop icebp pushl loopne mov or push inc stos out sbb popa stc xor mov adc mov roll mov subl aam dec xor inc mov leave lret jmp enter or sar jl lahf add lea movl les pop int push mov add cli cmp jge pop loop popf shufps add enter imul mov movsb repnz lcall push push in or and jne adc idiv and imul jle push and mov inc mov mov in les pusha xchg in push test mov push jne repnz xchg movsl and test ret ret daa in int (bad) dec lcall int3 or jnp mov inc nop cltd ds dec cmpsl repz push pop sbb jnp xorb dec and mov outsb mov jb mov xchg insb and out xor daa scas pop stc and test pop cld dec sub add and outsb sub mov loop shrb xor fnsave scas pushf xor and jmp push inc pushl adc pushf fcompl mov pop imul lahf xlat aas pushl outsl movsl inc (bad) daa scas pop std dec lds pop aam inc rorl fsub and fist adcl ja (bad) push pop and movsb push mov rcrb int bound inc aam dec mov into (bad) repz add insl xchg jb (bad) fistpll push fcompl jb push add adc jg xchg outsb std pop loop mov arpl (bad) inc push mov stos or stos cld xchg (bad) cmc cli leave mov sub call (bad) sbb insl and inc sti pusha jle ljmp jmp and mov mov sahf cmp xor loopne dec leave jle test xlat movsl add add aam cmpsl mov pop mov cmc mov loopne call inc xlat xor push sub pop bound popa arpl leave scas mov inc mov pop icebp xchg imul fldpi pop or dec int3 stos rorl (bad) and mov adc imul dec ljmp lods sbb fwait push movsb jge cmpsb dec mov mov add fdivrp ljmp push inc bound icebp cmpsl dec inc mov fs je or scas mov les (bad) (bad) xlat pop sysexit mov pop mov popa mov adc test lcall sbb inc sub adc (bad) pop adc daa insl out (bad) fisttpl lret popf int cli xchg jae push lods (bad) cli dec icebp fmulp push pop in pop gs fscale mov lea adc aas pop xor out sbb (bad) aam je arpl (bad) loopne movsb scas jbe sbb or mov adc ret inc push fmul clc xor cmp push incl mull jbe es cmp pusha movw pushf lea jbe clc sub rcr lea not mov mov rcl and inc mov bsf rcl add shr shr not mov clc add jmp jmp adc call dec mov rol stc mov bsf mov shl xor test bsr mov bt pusha sub ror sub jmp lea je cmp pusha sub stc cmp jmp lea call xor shrl add mov sub jb mov add call sub jne ret test bt push btc mov lahf sub aam cwtl push or btc push bswap aas add lahf push bts push rol neg movzbw lea mov pusha test call stc jmp call pushf cld add and inc mov dec fadd dec add sub (bad) and mov in dec lods repz (bad) xor add cltd xchg sub iret js mov cmp jmp lea mov icebp iret push jnp test sub mov jmp in fstpl in push sbb mov jns (bad) popa inc or sub dec and push sbb lods out or pop jecxz mov sub mov enter jg sub adc call repnz cmpsw jecxz dec hlt loopne mov (bad) dec or mov and adc xor enter sbb pop cld add pop scas sbb in mov add jbe icebp (bad) pop scas cmp mov mov pushf pusha movw pushf mov movb push lea jmp sarl (bad) jg push inc and imul or push mov inc push je shlb push jp lods dec inc loop sbbl pop lret popa pop les xchg scas jecxz enter pop (bad) xor in outsb int3 cwtl fcos pcmpgtw push out test pop cmp stc dec in insb push sub rcrl cmpsl aaa xchg hlt mov lods (bad) outsl test insl out ds rorl mov push test js movsl lret mov enter pop dec test xor aaa cli or push test xchg shrb sbb jo push jns cwtl add inc mov outsb scas pushf shr clc btc pusha imul sub shl lea setb pushf bt mov bsf inc xchg test bsr xchg bsf mov call call jb pushf cmpb pushf push jmp jmp push push pusha lea je pusha pushf pushf push lea jmp pusha call movw push lea jae mov bswap setne lea xchg jmp jns push push cmp mov xchg or xchg or lods mov xchg mov inc lods mov push jns jne sub mov popf push and push push lret clc in push mov aad enter out and pop aam sarl dec cltd clc sbb mov dec mov pusha dec xor cld mov fwait ss (bad) inc pop lds push inc aam subl aas sub icebp lock (bad) cs out into call sbb push adc mov sub pop call xor sbb mov add in pop cli scas lea jo push xor push xchg addr16 lahf imul aas or mov and dec scas jge mov push pop mov xlat insl imul int3 into fimull fnstsw push xchg andb inc aas sbb ljmp in or movsl mov mov adc adc cmp notl shrl scas mov sarl movsl jne test stos adc das push cmpsl into mov pop jo cwtl add push or or mov jno (bad) mov jmp and sbb xchg outsl cmp adc movsb mov mov add xchg xchg pop daa clc xchg and xchg fld dec push scas add imul sub adc add and dec add push sbb mov (bad) lock insl sahf lret mov cld mov leave xor out lret leave addl aad test lds stc cmp mov (bad) dec imul xor inc (bad) lock push push sub xchg hlt sub adc pop psllq cli jo adc xor popa mov mov mov inc insl xchg xchg xlat data16 inc hlt lds push pop pushf (bad) mov cmpsl leave mov (bad) xchg add dec out mov mov in insb aad arpl pop stos out mov (bad) pushf out lods cmpsb adc lea or cmp dec add (bad) bound mov mov push mov pop leave nop sbb mov cmp xor fidiv cld adc cmp sti sbb sbb std dec outsl (bad) div xchg mov mov add shrb ja sub dec xor mov cli fbld int xchg mov xchg sub stos jle mov push xchg adc decb xor lcall mov dec stc mov repz cwtl add dec xor mov sub dec aad pmaddwd cld test push or mov mov aas adc fsts dec aad aaa in mov dec dec inc (bad) sbb sub cmp imul (bad) mov mov mov stc stos dec pop jbe repz insl dec mov push lret pop mov xor lret jbe pop pop stos jl cmp ror pop push jge pop cmc pop push adc xchg jb cmp adc pop imul inc push jb call rcrl addr16 cmp repz aad fwait in stos enter jno add cltd jmp jo fldenv (bad) in push or divb sub loope cmp in sbb aad imul pop jmp (bad) mov mov sub jo rolb leave sub movsl sbb insb out imul mov in fisubr call sahf lds es xchg cwtl pusha mov roll add push mov or pushl jno cmp jg xchg scas sbb je ret dec push jmp inc cmp xor dec cmpsb xchg ficompl push pushf ret cmp jge test mov pop fsubs cli push dec cltd call jno xor mov adc cmpsb adc outsb sbb outsb mov stc push jne inc leave jae inc pop push inc mov push adc sbbb pop cmp xor (bad) stc mov ja sub push xchg (bad) fistpl stos call cmp cmpsb repnz imul dec cmpsl (bad) push fdivrl dec cmpb loop loop addr16 jl cmp mov aaa dec mov aaa pop ss pop aad je pop mov sbb cs (bad) arpl adc sub aad test ret sbb inc fistpl lcall adc add pop repz scas inc iret sti jg add out rcr add adc jg arpl sbb jmp inc aad (bad) jb mov add test push lcall push pop inc inc dec adc (bad) mov dec cld pop mov pop dec fisubrl lods sub movsl cwtl xchg fdivl loopne adc nop sub (bad) ss ljmp jae or lret push sbb (bad) push bound pusha mov stos aaa andl test out xor cmp rcrl cwtl lods jecxz idiv dec fcmovnb cmp inc inc cltd push xor mov sub jg rclb mov movsl pop aas inc lret xchg jmp pop (bad) arpl fwait inc lret loope scas gs lcall aam inc adcl add push pmulhuw sbb lret pop jge pop int3 cs mov cmp fcmovbe inc xchg pop and jecxz pop jecxz and jmp pop sbb dec stc and fnop xor cli orl mov aaa icebp test mov pop (bad) cmp jmp iret inc inc pusha dec (bad) push insl mov mov sub mov aaa cmp bound jg inc daa pop pop stc jecxz (bad) xor cmpsl xor aam jno dec xor js and clc and call mov sbb call or aaa notl xor decb (bad) (bad) sub sbb int lods cmp lcall fwait rolb sbb jns and lods jne xchg out cld fcompl dec inc pop adc pop push xchg sbb out inc jg (bad) test stc daa out mov sbb add movsb push mov rcrl lea sti inc movsl inc nop cmp inc mov movsb pop loope aas fsubrl adc imul mov sbb add sbb push jg imul mov (bad) and aaa std fstps mov in xor push mov xlat mov push cmp test (bad) pop lods popa andl inc cli das xor mov rolb scas leave dec rcrb jecxz inc jnp add inc scas (bad) std push mov aas enter inc cwtl cmp rcrl inc fldt fucomp or xor subl cwtl sahf sbb xor pop sub hlt push jo jmp shlb cmp insb xlat frstor sub fcompl or ret or cs adc ja jecxz jae push repnz mov sub add or in lea sbb mov jbe rcrb cmpsl or pop mov pop inc cmc mov mov lock and jge and popf push sub fildl xor dec xchg imul (bad) outsl ljmp cmp mov push daa sub lds stc leave daa fneni(8087 ja js jmp xor sahf jmp jnp sub jge mov cmp mov jge das fistpll adc inc mov movsl jnp out mov adc or or idivb mov pusha out leave (bad) repnz and and rcrb cs adc jno rorl insl add mov or pop scas mov mov loop mov in test clc cmc sahf cmp sar mov incl je test cmp cltd addr16 jo inc sub and jl dec jg cli mov cmp sub cld inc add sti pop rcrl scas into dec (bad) sub push out sub adc or mov push je in cmp or icebp push xchg cmp cmp cmc stos xchg add in leave add mov enter out push aad add lret adc cli pop lods (bad) or lret std add scas jb repnz sub add pop sahf fdivrs in into adc shl inc and and stos jge hlt aaa dec xchg ret ja jo mov and int3 pushf pusha push inc call js (bad) xor inc push mov jns ja addb add cli mov cli cmp fcoms and stos sbbb bnd adc jge dec push or popf movsl jne ffree (bad) fldcw add pop pop pop sbb stos lret repz popf popf arpl jg aad add add xlat (bad) cmpsl pop ds lock sbb push jl and sub adc les jnp bound icebp ljmp lahf add cmp std cmp xor mov loop push and test inc jl push sbb dec js enter popl push pop stc ret push dec pop xorb pusha pop and repnz inc sar (bad) popa lcall jp mov sbb add imul jnp movlps test cmc inc xchg mov xchg xor mov movsl popa mov pop cs shll push (bad) jmp mov test sbbl bound out jmp cs (bad) push es mov dec pop mov int3 lea cwtl (bad) loope xchg jl movsl (bad) js fcomi mov xchg popa inc fimull add pop push cmpsl int3 jl xchg popf (bad) jmp push cli inc mov jb sub mov pop daa dec sbb ss push xchg jmp stos stos aas xlat cld add or cld arpl js pop sub cmc push mov out jne jns in mov pop mov xchg (bad) fsubp js,pt xor fldcw jecxz mov jne or inc outsl ss or push lea cmp popa mov or arpl or pop popa push test out loope les bound and push inc (bad) mov xchg ja mov pop mov mov aaa leave call mov dec fwait xchg cld or sbbl jae jne add repz sub rorb sub das jnp sbb fsubp xor shrl ffree jns popf sahf cmp jns,pn jle push repnz jbe sub (bad) int3 fstps bound pop dec daa sbb dec stc sub jne leave clc in shrl push jo scas pop dec adc pop adc imul push jmp cmp dec xchg lret jecxz (bad) pop into pusha sbb or jbe,pn push clc out (bad) sti imul xchg imul cmp mov xchg adc sbb mov xchg aad hlt add mov jne mov out test repnz sbb pop jns push push add pop inc mov sahf sbb dec jo stos scas movsl scas insb push hlt popf fwait pop out dec in inc mov rcrb addr16 mov push lea sbb out stos xor loope sub fs iret mov neg fmull pop imul das and ljmp iret xchg mov clc in cmp loopne in into outsb cmp sbb push cmp cmpb lods jns sub test xchg pop sarb sbb (bad) jo xchg mov mov call xor sub sti inc dec pop jb inc cs cmpsl jle gs or push adc cmc xchg adc nop xchg lods inc jge in cltd sub add ret leave sub cli dec lock sub shr pop ret dec sbb int3 arpl test fild sub add pop dec out das sub jecxz or inc fidivl sub inc sbb push pushf jl pop int3 or lret mov jnp add dec xchg mov lcall lret mov xchg dec dec mov pop push push in mov cmpsl cltd dec inc cvtps2pd adc fcoms dec cs test cmp dec push mov xchg insb mov fadds mov sbb fcomps (bad) (bad) pusha or out push inc dec es js jb mov cld in fmulp arpl cwtl xor (bad) add dec and popa mov adcl xchg jb sbb test (bad) and and add insb xchg dec sbb jle push popf les lods xchg aad inc pop test xor mov inc xor xor ljmp ds ret dec jle (bad) lods adc push dec mov data16 popf (bad) push subb dec outsb or in push sub outsl push test xor jb addr16 dec cltd insl xor sbb mov in xchg pop push test call repz addr16 pop mov inc adc push sbb or lods cli out inc fidivr adc sbb movsl lods and aas mov jae cmp nop jecxz outsb cltd adc xlat gs fisubrl xlat fs outsb inc dec pusha (bad) notb scas mov mov xor fnstenv std jecxz xchg (bad) in mov pushf ret test sbb mov pusha outsb jge xchg (bad) mul push inc out roll jbe cltd ds les inc or jne adc jmp add dec icebp sbb aaa movsl sub jb mov jno add pushl inc mov ljmp arpl xor sub pusha stos push cmp jb mov mov pop mov lcall jmp lods ret push jmp cwtl add test movsb arpl rcrb cmp inc je loopne add hlt (bad) mov jb leave pop push insl fstpl push test js (bad) push sub aad cmp and push adc negb pop testb das imul pop movsl je sub xor nop jle incb das pop enter loopne stc inc push inc fisubrl (bad) fldt shl clc rcl adc stos xchg or sbb adcl jg test (bad) jnp adc mov jae mov pop jl push dec mov push pop mov sbb scas jecxz inc repz cmp decl push les pop xor pop loopne pop icebp ffree out fstps mov pop add hlt sub mov xchg mov test insl ss mov in pop sahf (bad) and push sbb iret mov mov cmp inc jg out cld sub lahf roll test add test cmp cld mov mov xchg sti jbe and rcll mov pop inc jo ds or jo mov dec cmp aaa sbb xchg into in popl ror push cwtl cmp int3 mov loope sbbl daa out and dec sbb mov pop cld (bad) cmc leave push xchg xchg scas movsl int push in aam push (bad) push fnstcw mov outsb add lods das pop out pop xchg cmp cwtl out push cmc adc and dec icebp mov stos push or adc and mov mov sub sbb or fbld int jne sub enter cs jge mov dec sbb lcall pop imul or popa dec lods xchg push ljmp mov test out mov cmpsb inc mov leave scas out imul mov cmp clc mov and lcall pop fmull pop sub cli inc mov add (bad) mov js pop sti pop sbb sbb jmp add xchg (bad) pop fild lea in in out mov push outsl pop hlt pop roll pop in pop pop add cli and push lock aaa cmp test stos scas lds out sbb adc gs jp mov mov sbb insb lahf xor (bad) daa add (bad) loopne (bad) push mov mov mov jmp nop lcall es ret or xor or mov aas idivl int pushl lret mov mov imul into adc andl mov repz jae push cld cmp in dec (bad) jb dec mov rorl inc daa or lret mov in mov mov lods add mov pushf hlt rcr mov cmp or lahf aas rolb xor cwtl dec outsb incl adc mov or xlat iret or clc ds outsb bnd iret push and push mov icebp incb push jo cmp out fcoms push outsb test cmp and sbb lret xchg lea testb mov lahf incl sub lret mov xor adc sub jl std jae fisubr fs xchg jmp lret xlat imul inc or jns cwtl loope adc loopne push out (bad) incb adc scas xlat fdivl xlat sbb add lahf pop xchg rorl push jae int3 push ljmp cmpl ljmp or rolb stc (bad) xor sub sub mov mov mov in sarl cli stos es xor rorl mov dec push (bad) dec cmpsb icebp scas loopne sub andl lcall jo lods pop push jmp ds loop add mov push dec sub test xor loopne push mov pop test push mov mov mov or inc add hlt negl adc mov scas jmp (bad) push mov push (bad) and xor test sti fbld int3 movsb scas jb mov mov sbb push cli pop test pop outsb cmp imul xor (bad) movsl clc addb insl hlt xor cld sub inc mov addl xchg fwait test insl jno push jo add stos arpl mov in mov mov sbb iret inc adc out lods mov clc pop ret sbb inc sbb fisttpl push jmp mov ss fcom mov shrl cmp scas cld std lods inc pushf jno pop pop xchg mov pushf sub pshufw add push fist inc mov stos cmp xchg jmp jae outsb fst xchg loopne pop mov sub and std jle and dec imul dec shr and sbb mov std rclb int3 sbb mov imul mov aad mov push jo adc cmpsl imul insb loop jno cmp dec lods inc std xchg int movsl jne lahf xlat notb popa add adc lea jbe mov ljmp adc lods jle lret fsubr xor jne (bad) lret adc sub inc js jg sarb clc arpl cmp into adc rcrb add lret incb xor push lods inc add lods js adc xorl clc adc adc mov lahf jno fnclex outsl roll (bad) cmp jne jle xor jmp cmp lds sbbl xchg pop loop in mov cmpsl inc pop inc mulb lcall (bad) sub sbbb popa dec pop (bad) testb push test aas in xlat idivl jo pushf mov mov rcr pusha icebp ret aam cmpl cltd out jnp inc lret sub xor mov push jae out mov pop jo pusha cmp push push and mov mov inc add and xchg lods adc jbe cmp pop xchg inc (bad) vpacksswb repz and pop sbb mov loop jle inc fstl and ret pop or out test sbb sub mov sti and pop testb inc addl sbb into mov (bad) jo dec cmpsb test fstl dec mov mov (bad) xor jnp or insb call push test mov sbb in xchg (bad) fwait imul gs and mov jp xchg and and jno sub lods mov push mov mov test daa rolb mov mov pop aaa (bad) int pop sbb fisubl push imul push ret adcl and movsb iret jae adc dec dec and outsb cmpsb out sar add mov mov fiadd push push gs adc je push xchg or out push xchg ret xor ljmp into cmpsl jnp jo fwait leave mov hlt cwtl lret pop pop add push add mov or mov sbb adc jge push dec cltd fisub iret out cmc xor push sahf mov jge pop dec sub mov scas mov jmp pop mov push dec lods cmc cli inc inc sbb xlat xorl sub hlt and outsb push repz push fcmovnbe pusha enter or inc test push xchg leave push jecxz jne xchg arpl cmpsl dec push lret jne and cmp insl or cmpsl sbb mov ss repz out lahf fisubr fisttp aad lds daa inc adc (bad) int3 popf and (bad) int roll fisubr scas mov (bad) jns das inc scas pop jge jmp pushf repnz test mov aaa jb gs add stos cmc or dec hlt mov jbe jl push mov lret push add push fwait mov dec sbb das xor xor das stos fwait mov mov or outsl test add lsl mov add aas inc or out inc ljmp call dec xchg xor add add mov push fmuls dec dec fnop (bad) in test lcall pop testb mov lea dec cs in push not push push aam fcomps push out aaa lcall push fbld sub cmp loope stos imul dec in mov inc jb push (bad) jbe cli mov rcr jle int3 (bad) lahf or lock mov xlat (bad) addr16 jbe cld mov into pop pop push pushf sub jns test (bad) cmc fwait das cmpl mov cmp insb sar popa mov xor push cmp aam or in xchg mov adc xchg xor sbb popa and movsb jnp ljmp adc or mov in loop xchg mov push dec cmpsl clc fistl mov cli stos cmc add subb sub sbb das add xor inc fistl icebp mov lret adc scas pop popa add cmp dec lret jmp data16 in or adc xchg xchg stc xor lcall inc and pusha mov jg sub sub call dec sbb mov xchg nop out sbb out dec inc xor shrl push xor adc pop mov sub test sbb lock rclb fidivrl movsl gs cmp cmpsl daa add mov out repnz ljmp movsl outsl stos push je imul xorb fxch insl or push aad data16 nop repz pop add cmp pop fldt nop cmp pop and lcall mov mov lea sbb out xlat lods (bad) jne ljmp sbbl (bad) jecxz mov cltd fcoml enter adc cmp mov movsl cld enter sub (bad) fsub push cmp cmpsb (bad) mov lods adc dec xor lahf arpl push repz pop sahf dec (bad) push mov fistpll (bad) push adc stc dec int idivb std cmpsl aas std insb cmp sub leave mov mov xchg scas std in xor inc pop pop shrl out insl outsb dec mov mov (bad) rcrl or cmp (bad) jecxz lret addr16 insb ss xchg mov loop mov xchg push dec dec nop insl subb jle add adc sbb or repz push sbb clc das or cmpsl push cltd sub dec cwtl (bad) push mov dec dec push add sub lods jae cld cmp loop push xchg aad hlt mov movsb and daa stos enter cmc jns pop jo adc rolb insb (bad) push (bad) insl inc ss aam or adc sub insl sbb mov dec jae cmp cmp (bad) cli add push fsts call or cld cmp mov clc lods je sub out ss dec std rcll push adc sar push inc movsb lods cmpsb jle sbb int xchg jmp bound ret and rcll xor mov pop scas pop aaa fistp mov sub jp sbb insb mov xchg mov pop stos jecxz dec mov imul push cmp lods in add pushf push and (bad) cmc lods mov mov js icebp ret jge jle popa and pop mov jecxz inc mov (bad) ror (bad) and in sahf xor mov push mov pop test mov in jp xor mov xchg outsl or or mov rolb and inc push imul out icebp jne (bad) sbb sahf scas mov shlb shrl sti inc sbb (bad) loopne mov inc dec inc adc sub int mov mov stos pop sbb or iret js pop int and iretw xchg jge xchg sbb (bad) popa loope jg ja imulb cli pop xchg leave adc je xor stc in mov ljmp dec pop fmuls mov jo je shrl int3 sbb push push push lret sbb xchg lcall insl or xor stos push iret cmp das movsb sbb jbe rolb or lret jmp (bad) or or and sti fs adc adcb int nop mov out and nop adc push ficoml imul test inc push out xchg fsub sbb outsb std jb cmpsb insb jb (bad) xrelease jae fbstp and mov push outsb pop ja push or test out and sbb or js subl mov aas xlat fimul push aaa jle dec daa cmp add xchg imul add orl xor cmpsl or jo in imul scas add aas repnz push bnd push daa scas fs stos loopne sub and aaa xchg cmp sbb or int3 in pop push cld mov imul aas mov pop ficom outsl mov fstp or ljmp pop lods daa icebp inc xchg jge add and call fimul in and mov or iret cmp je xor movsl push lret fistpll je mov fstps pop out imul popf jmp movsb push call pop into adc jne divb or or daa xchg mov xor push fwait (bad) mov aad aam out push aad fwait pop aad enter mov sub imul mov outsb sbbb push push push add movsb jg call push idivl mov fisubl (bad) mov mov adc repz ja inc jmp xor lcall ss jp sti push (bad) mov inc (bad) movsb leave cmp bound push jmp xlat dec jp (bad) adc add inc lock ret loope xor xlat mov (bad) loopne jg sub adc scas push mov push add mov mov sti inc adc loop xor fistpll shl dec (bad) adc lcall gs (bad) and dec xchg adc aad push inc in lods insb mov sbb hlt test add mov or clc call (bad) mov pop in and sbb push inc cmp mov and sbb cmp mov lds adc inc lock les xchg jns das jg pop xchg dec dec sbb aas aas mov or inc xchg data16 daa add lods mov imul and out shlb mov mov mov or mov mov pop sbbl loope xlat add in leave or ret push aas int cmpsb (bad) and ja fldl lahf testb jns lcall js stos xlat mov adcl out mov out int (bad) mov out cmp pop mov add ja fdivrl ss xlat gs and cmp mov test xchg in cld pop loope xor movsb frstor testl dec mov lods adc jp pop inc cmp or sub or mov imul in daa pop jl (bad) iret add xlat into push cli aas cld int push aam mov and mov pop or outsb gs test in in pop aaa imul sbb leave scas test in pop aas cmc and wbinvd push out repnz adc into inc mov mov lods adc dec mov mov mov xor loop shr and test ret cmp outsl or (bad) sbb add xor add mov pop or push sarl and mov mov idivb ret cmpsb mov mov shrb push push cmpsl (bad) jl lods and jl dec adc mov pusha pushf loop pusha mov xor jge lods imul aam cmpsl (bad) and and nop dec or sarl push push lret pop (bad) mov or inc mov add or out stos repnz js movsb add sbb test (bad) jge and and es test pop pop xor stos jne dec pop pusha (bad) loopne push sbb rclb push stos fsubrl scas mov enter fidivr push adc out movsb test add jecxz cmpsl push inc data16 sub inc jl test mov ljmp repnz ljmp xor into cs hlt sbb mov dec mov xorl in add loope pop push (bad) mov adc xchg fbstp out std out cmp enter jle movsb pop ds inc out sbb movl mov inc data16 jo push push test cs lcall push sbb cmpsl add mov inc mov mov loope cli xorl sub dec in push out jnp cmp lods jae push out dec fwait dec mov leave push xchg popf pop rol xchg pop or sbb and test imul mov data16 jno mull sbb xor sbb xchg xchg aad mov mov or and sbb push lds add sub (bad) arpl xchg (bad) stos fild loope stc add mov dec pop outsl mov sub mov out dec roll lahf aas lcall cmpl repz mov push push xchg and pop push or dec daa mov (bad) hlt cmp sbb dec sbb sub fwait mov and ret lods xchg and mov mov xor fwait mov inc dec cmp xor lret mov sbb jns mov frstor bound in jb mov hlt mov add das add dec inc fwait pop cmc sbb stc inc sbb and cmp inc adc mov (bad) sbb icebp je test popa js dec nop mov imul maxps in jmp aad push dec mov push mov fidivrl jmp sbb popf fwait jp push int3 mov mov jp mov cli or (bad) jbe mov or or xchg inc jno pop sbb popa arpl bound pop fcomps addr16 xor cmp cmp rclw mov cli add divl roll testb enter sub bound mov loop fldcw push cltd sub push cmp or jge pop jae test iret jnp data16 movsb cli jno call adc sbb push jp pushf mov mov and mov loop jae xor adc cmpsb jns sbb jge aam sub dec sbb loopne dec pop jnp mov ds sbb hlt (bad) ficoml enter add or es std dec mov popa das jle ret test or xor mov mov mov push adc xor jae hlt xlat (bad) fs mov push sub cmp push notl jmp pop dec sbb aas cmp mov insb push insl and and jl stc pop xor sbb sbb and jmp insl int3 jge pop xor or pop test cli ds xchg or icebp cli jmp cmpl arpl push lret ja push dec fldcw xchg xchg pop sbbb sbb rolb pop test sub sbb mov ret in xor cld ss sbb daa imul (bad) dec loopne xorl jge add test lahf mov inc push movsl xor bound and sub adc (bad) or pop sbb int (bad) ljmp cmpsb jle mov adc rorl (bad) jo movsl scas insl sbb loop xchg je daa (bad) repnz dec cli xchg rcll and (bad) mov inc cmpsl das (bad) push jns mov decb jnp out xor xchg xor or and je test stos jmp xor shr addr16 and cli mov and and aas mov lahf test inc (bad) call mov aaa mov inc rcl rolb ret mov aas xlat lret adc (bad) fs imul out arpl in xchg ret popa sbb pop data16 xor inc repnz (bad) cmpsl fisub jbe mov fisttp mov dec fldt xorb lock (bad) push rorb (bad) js sbb mov push imul (bad) pop fist jmp pushf mov movsl in mov jo popa push fbld mov test adc out std repnz dec in divl adc jp mov cld cmp mov data16 adc mov add mov (bad) fbstp sub inc pop dec jge mov fldt inc inc test aam cltd fsub mov fldl shrl out push std lahf call sub fnstenv pop leave daa negl ja imul lret aaa mov mov andl push push sub jns cmpsb lds adc or ret ljmp fdivr dec cs push adc stc dec jns mov push pop mov cmc lods inc push xchg jge xchg aad push xchg xchg mov enter sahf gs jle divb mov cmp popa loope fimul pop mov (bad) pop mov jns or lcall aad mov pop cmp xor push cmpsb mov insb scas test jae iret fwait aaa pop xchg mov out push inc adc pushf scas xor sbb call insl pop insb cmp mov ss jl rol call mov sub push outsl cltd nop or lahf imul jae cmpsb pusha jae pop push cli pop outsl push sbb std (bad) dec mov fisubl loope lods (bad) add js faddl mov sbb repnz and lock add lret popa stc out aad adc dec es cs cmp in fs and out jecxz nop ds sbb shlb xor jo jmp jle loopne fistpll mov ds jbe xlat sbb out arpl int inc xor jge shlb sub (bad) mov loop js orl and add cmpsb mov dec inc pop jle jae cmp xchg in dec lahf push (bad) dec inc add mov dec xchg and lret ret fincstp repz aad pop lods mov xchg sahf jb sbb fidivrl adc sub add cmpsb lods iret pusha jnp and xchg pop les int jmp cs cmp mov mov clc push roll fxch xor or outsl fwait add ret mov ret and pop rol cwtl jbe cmc jecxz jno mov dec loope sarl sbb (bad) (bad) push xchg xor jmp jp adc lea test jecxz push or insb jle sbb lods jl mov loop cmp xchg mov in es (bad) sbbl dec cmp lret fcmovnu adc or xor pop (bad) loop,pn sub aad into pop rorl out ja pop xor push hlt xor shl mov ljmp (bad) and test add pop xchg std pop stos divb fimul dec movsl push repz cmp mov fsubrl xchg jne cmp mov imul mov les mov imul and je test ror jne neg lds and aad mov jo ss aam imul dec imul fiadd movsb xorl mov jge pushf dec (bad) cmpsb push fwait adc ljmp loope sbb (bad) imul inc cmp mov (bad) and cli daa roll or test jo popf dec dec (bad) jae xor jo jp shlb sbb mov sub sub sti mov dec xor (bad) sub in xor fbld and std cltd mov fisttpll out leave xchg inc imul xor adc jae pushf clc in mov lods scas inc jno cld hlt pop divl ret inc adc xor (bad) adc sbb push fcompl and gs cwtl mov mov loope xchg ss sbb xchg aas outsl insl sahf xor push lock jle int repnz pop into fiadd add inc js cltd lahf dec mov dec sub into sti mov or mov jns jge in jo fcoml or fadds pop icebp inc jecxz or lock (bad) jb mov and mov cmp jb mov mov pop inc xchg dec or or xchg std lds xor mov rorb lret lods push inc int sub mov inc mov mov xor or jbe mov lea cmc insb add mov jmp inc xor in inc in imul lods mov push cmp fs xlat cmp xchg add out mov hlt xor les repnz mov cmp (bad) outsl sbb add into shrb sti dec sbb add js add mov xchg in cmp jne repz mov ret out cmpsb lods idivl mov ror mov sub or mov sub lock fist int jae lods test notb test iret sbb mov push mov neg cwtd xor mov inc in cmp outsb ret mov xchg or jl test jae xor ficompl lock dec dec lock mov lret push push mov jg les aaa or fstpt sti pushf repz mov pop outsl mov sub dec clc inc mov arpl (bad) pop sahf inc push cmp sti adc daa insb icebp push sbbl and add fwait or aad sub sub xor sbb push imul test jg xor dec xor dec out dec push cwtl shrd dec jae fidivl test cltd inc leave push ljmp pop xchg push cmc xlat mov stc pop (bad) sub sub adc cmp (bad) lea and ds inc mov and ss gs push jp mov inc pop mov movsl push add in (bad) cmc dec ret inc fbstp xchg xchg push jno push dec lcall lret test leave aaa gs fsubrl cld shll aad rcrl dec or jecxz xchg clc cmpsl push cs shrb push mov test push aaa in sub inc mov jge ficomp ss lock jecxz inc xchg (bad) fimull lcall dec andb popa push push xchg sub xlat arpl lock fwait lods mov scas dec loopne sti stos dec xchg pushf sbb mov inc loopne mov lods loop outsl cmp (bad) into xor ss leave stos mov mull in stos pop mov and cld rolb pop out mov mov mov sbb lahf test sbb pushf or out lcall pop xchg test cli movsb push out pop out mov loope mov ret dec fistpll ret and sub mov xchg xchg fild rcrl push fwait push mov xor aam sub and cld dec cmp mov cs loopne les dec popf mov (bad) repz test sub xchg ljmp rclb mov les rorb pop in fs insb push jmp notl out dec xchg cmp mov aam inc adc xor xor sub insl push mov mov mulb pop fwait adc inc (bad) push mov xor lahf lods push call test xor mov mov pop fidiv push (bad) pop aaa mov (bad) push xor or popa arpl pop aad cmp jns sti jne cs clc jg stc (bad) mov mov xchg cmpsl (bad) jo lods popa rcpps pop xchg in mov add insb lods mov push daa incl cmc fldl std lahf fnsave mov call xor or xchg cli add rol xchg fsubrl cmp mov pop aad (bad) loopne fist aad mov (bad) xor les fucom or (bad) ja mov js clc sbb (bad) mov jb add incb pop out mov xchg add xlat sub pushf mov in jp test xchg sub jne jb lds dec mull stos add sub adc daa and popf imul cld in mov push mov lcall sub outsl outsl imul adc adc push cmp mov out adc int mov aaa push jge pop xchg jae arpl jp daa (bad) jl sub sbb mov es subb out adcb dec loopne xor sub sti fiaddl imul cli cmp lret mov pushf or push fidiv int3 scas xlat arpl out xor outsl adc test mov jmp imul rcrb ss daa das xor bound add cwtl xchg ja (bad) dec jg rolb xchg (bad) sbb push xchg cs call in inc mov push sbb fcomp jo repz xchg bound and dec ficoml mov jle fwait jo add pop mov ljmp ficoml faddl add aaa cs or fdivl stc jns lcall jb rcr sbb and sbb les into jb push push mov mov mov lock pop out pop icebp push (bad) int out sbb add and xchg aaa xchg jmp cmp jecxz roll rcl add lea lcall or add adc jl cld adc jmp pop push fnstenv pop stos fdivr cld das dec adc pop (bad) out push fistpl stos fstl lcall pop imulb (bad) jne jl pop (bad) enter sub cmp and add cld pop pushf mov mov fildl mov mov int3 adc mov arpl push das cs or add push push mov ret add bound test cmpsl or sub jmp jle or add repz sub xchg jns test mov repz mov add (bad) jecxz sub arpl sbb sbb cmpsb sub push mov jmp sbb hlt loopne cltd arpl movsl and (bad) xor mov das mov mov dec shrl icebp movsl lds stos or pop dec lock mov ds mov popw (bad) lcall or insb loop mov cs loopne adc setne enter xchg dec lods imul mov jne pop xor enter aam jle mov mov jmp nop aaa iret cmp xchg repz andl shrl xchg sub pop sar pop mov jo into mov mov lret add fcomps test mov mov das in aaa insl sub and xchg mov mov or mov fstpl (bad) xor sahf xor xor cmp iret ret fisubl sbb cli in mov rol in clc push into (bad) rcrl jb in aad iret inc fdivrl cmp fcmovb test sahf adc mov xchg push out mov pop (bad) lcall ds pcmpgtd and jne rdpmc fs push icebp adc loopne or mov add xchg pop and enter test xor pop mov jg dec or ja fisubl popa xor lods fidivl jle pop daa lahf inc lahf push sahf cmp push sub (bad) cmp sub aad xchg xchg dec stos add (bad) or icebp jl shr je mov and and fsubs push inc cmp std push xchg jnp lret arpl in xor jmp or jne cmp push xor pop rep jae insl fldl and outsl imul mov xchg and sub outsb push mov cmpsl ret rol lock lahf jp ja mov test jge jb mov fdivs jno push push cwtl sub pusha or test jg insl daa jle addr16 add loope lret sbb sti jo xorl cmp (bad) or add cmc clc ss je mov (bad) out add push adc (bad) sbb dec xor cmc ficoml mov sbb jge pushf outsl roll lret mov (bad) jo rcl mov dec mov cli push lcall push pop dec outsl xchg fstl jge fmulp dec movb adc pop loop popl xchg lret pop popf jns into rolb js mov rorb notb (bad) stc fistl push lahf pop adc arpl das lcall inc inc sub sbb push cltd stos jp dec jmp adc addr16 jbe lret leave shll add xor jl test add jg lcall push xor mov dec out loope out scas inc push (bad) push push pop icebp mov pop movsl out pop cmc xorb sbb iret add mov call fsubr outsb out mov dec test mov pop push dec pop imul fs jno lret aas mov xchg dec andl sbb xchg pop push orl push pop mov adc add jp lods dec fdivs sub push jo rolb mov jp pop push repz dec std xchg inc mov lret aam in in jmp inc in pushl lea xlat dec test stos es fs jns nop push enter popa pusha mov lods add leave ret outsb aaa mov insl clc sbb gs ljmp pop cld rcrl and dec xchg cmp xlat inc or mulb mov es lods mov dec fnstsw xor sbb dec mov and sahf push push pop fwait ret cmpsb cld arpl pusha dec xor int3 mov fstl and (bad) clc mov xchg lcall jmp lea loop and pusha or iret sub jb or test pop cld (bad) jns mov sbb ljmp in sahf push ss jb adc pop mov dec stos add sub cmc fwait cmp cmp and out arpl ror pusha or xor sbbl cmp ja adc cs movsb shlb cmc call mov aaa or mov lods in test add inc iret call in jb mov addr16 movsl pop fisubrl inc (bad) test add sub push ljmp fwait shll lahf pop mov (bad) dec adc push push stc dec xchg dec pop cmp aaa cmpsl pushf push mov fcoms notb inc ftst xchg loop pop and jno pushf adc jbe enter rclb mov aaa out dec (bad) jle iret jg jae outsb into lds nop out loopne test lret shrb push rcrb dec cmp mov cmpsb in lret add cmpsl cltd or arpl iret psllq jne fdivr mov repz int lods and mov rolb stos mov sbb jmp inc fsubrl nop add cltd jbe or repnz push imul aaa lcall shr aas loopne push lret loopne nop mov call je pop mov popa xchg sub add (bad) pop mov mov xor xor mov imul and loop test clc mov orb jns jp push mov lret cltd xchg cs test out jg xchg jle xor iret pop jge aaa push mov sbb sub xchg xchg arpl test cmp jns jl pop jl add push rcr push xor imul cmpsl ss cmc pop xor or dec rcll adc or inc popf cmp loope dec sub adc enter ds inc and or nop push stc mov imul sbb mov dec outsl stos je dec in pop mov int jb push cmp sbb mov lods mov cmp pop inc jl inc ja fdivrl push dec adc inc add test xchg add insl push or pop cmp insb aas daa ja jbe xchg lret mov (bad) (bad) and mov push pop cmpsb (bad) dec enter sub and and and jg jle pop sub aas mov aaa (bad) lea pop pusha xor cmp outsb fwait mov int push cmp xor mov outsb fxch jne add cli ja dec arpl rcrl sbb dec or mov shll test aaa arpl cwtl int nop cld inc fldenv cld inc test gs sti shlb mov adc mov xor xchg mov sbb aam shlb dec cmpsl xlat adc pop pop xchg stos insb mov sahf fcmovb repz imul stc pop loop xor dec mov les test cmp add or xchg pop pop adc movsb xchg xor mov bound fistp shrl sbb push dec bound bound sub es adc jne arpl (bad) bound dec jno jbe sti (bad) bound jnp xor fisubrl sbb (bad) sub push inc sahf rclb (bad) mov inc fwait fwait test loope loopne xor cmp icebp sub mov les out ficoml jg insb orb in xchg mov or movsl mov xlat imul sbb fxch in sbb int3 bound popa mull (bad) cmpsb repz mov int3 ljmp cltd shrl fwait and mov sahf pop and add ret iret insl jo iret mov adc or cld xor adc shrl cmp sbb sbb dec lret mov inc aam mov test and aad in or sbbl xchg jp sti mov pop scas mov mov scas jnp lods jg (bad) loope pop adc enter mov add jge adc mov mov sub inc (bad) popf (bad) ljmp adcl js adc inc cld xorl cmp mov into out sub (bad) xchg daa shll jecxz jmp adc jo adc sbb pusha adc ret cmpb xor xchg mov pop clc adc call push jg in pop call pop testb lods mov or cmp lret sahf pop adc aaa xor loop aas xor fildll xor xor jle sub cld mov es push cltd (bad) (bad) lock loope dec ret inc sbb mov int (bad) sbb cmp inc mov imul lea jnp xor mov (bad) cs sbb test pushf push adc mov aad pop aaa add in or add push lods (bad) mov add hlt daa mov push mov pop xchg push (bad) es aad mov fwait adc lret insb mov push mov xchg fwait fs xchg cmp jb xlat arpl sub jge mov test adc mov sub in pop push ds push pop xlat pop dec xchg std jne mov mov ffree sub flds into inc pop xchg in xor dec sbb jle repz call adc sub lock add (bad) frstor pop loope lret cmc mov mov xor adc aad out xor out outsl shr dec and push mov mov push push (bad) dec cmp jge outsb rclb sub out jge xlat clc js mov fs push stc pop out leave sub sti xchg imul bound sar dec lock pusha sub in mov sub repz ja jno jno or lock push pop orl and popf xchg popa in mov and popa sti or (bad) pusha jl and aad push cmp shll adc popa pop jg mov inc es imul inc gs fdivrs mov pop sbb adc (bad) jo push mov imul in xor scas jmp imul (bad) mov and fisttpll rorl test xchg push jmp mov jge sbb dec sbb pop add fs ficoml pop cmpsb inc cmpsb add (bad) sbb pushf push sbb fadd cmp adc movsb test stos push leave (bad) outsl divb stos js xor mov jo mov cltd inc fstl pop (bad) push push mov push mov sahf mov mov (bad) shrl movsb mov xchg addr16 inc nop adc xchg jl test sbb inc mov (bad) icebp cmp orb pop pusha xchg pop adc xchg pop rol dec jmp jge (bad) push adc stos fbstp add add cwtl push mov int leave sub pop dec (bad) mulb (bad) dec inc pop test imul ret or jg jmp jg addr16 ds xchg pop pop loop aad cwtl in repz repz jle ljmp push icebp add jge pop adc jle rcll fmull mov cmp xor icebp xchg repnz std movsl into (bad) jno fisubl (bad) cltd push fs mov mov mov adc jno aas insl cmp mov mov iret sub sub xchg pusha or repnz sbb sarb inc pop sub push mov out push lds dec lcall pop mov mov dec gs leave jnp (bad) lret jne sub and add inc fcmovnb inc shl fisttpl pop dec loopne outsb dec fst clc push arpl aad jnp jl dec dec cli in loop pusha int3 adc js imul fsubrs imul ljmp sbb xchg xor call aas push and in fldenv mov mov js inc sbb hlt fwait pop mov ja adc push mov pop adc stos cmp ret cmpsb lea pop movl std das enter in and inc jns stc xor addr16 mov out enter js insb inc xchg jo fs call sub sbb or addr16 push push sahf mov int3 fsub je in mov xchg pushf push adc ficom sbb faddl jne add xchg cmpsl add rcr fidivr inc stc cmpsb movsl jg test cld jecxz pushf mov pop idivb and and add dec cmp mov xlat outsl adc leave insb adc dec icebp dec rcrb sbb scas (bad) push (bad) mov fistpll insb push push mov insl scas repz push movsl cmpsl inc jae xchg ja and cmpsl out pop and push (bad) jno cmc insl lahf aam mov jle mov pop sub (bad) dec movsb mov push add mov test push cltd xchg xor push push pop stos mov mov cmp cmpb ljmp mov aaa les mov xchg add dec mov dec scas mov iret ds dec lock test push lfs fsubs jmp mov jecxz xchg mov pop add movsl inc mov xchg (bad) aas aad lods inc test fucomip ds mov sarb (bad) int pop outsl (bad) popf popf and and neg sub or je xlat insb cltd pop push xchg cli mov sbb push push (bad) mov call repnz repz cs (bad) adc daa sub push add je (bad) sbb or jno cmp and jecxz iret jbe adc not (bad) sub in ljmp int scas fstl cmp gs mov hlt jae mov pop jno mov imul mov push nop stos adc aam add adc out fwait out imul je outsb movl sbbl aam xor lods ret dec cmp or push pop loopne lahf mov fild cli mov rcll cmpsl dec insl jne repnz insl add mov cmp in test ret nop ss mov and fs mov out scas roll out int (bad) and sub or mov cmp dec (bad) jno test jne pop pop stc aaa test (bad) cld push xorb inc stc push xchg pop mov test cmp or es mov arpl cwtl dec scas icebp sub lods mov mov call cmc mov (bad) hlt mov lret popa nop ljmp push shrl xor lcall outsb inc mov data16 jnp das jbe ret imul xchg mov jecxz fimull push sub mov popf push test adc xor daa cwtl cmp xor push jmp mov dec dec sbb cwtl jno pop ret push pushf in jbe ret mov div lahf dec jp pop mov in mov stos dec cmp loope stos (bad) xor dec pushf idivb push and (bad) push imul popa and sbbl stos call in cmp imul (bad) enter xor sahf in out subl das loopne dec mov bound lahf lods in in in pop js loope,pt dec adc test pop stc pop pop fmull aam jno adc cmp xor pop mov mov sarb sbb xchg test ds daa (bad) js stos mov int3 mov aad cmp lds and addr16 mov push out movsb adc push call cmp enter xchg sbb decl adcb scas jno inc fiaddl rcrl pop inc pop cld pop push sub lock jno insb cmp lret rorl xchg cmp sarb pop (bad) test mov in stos sarb mov sbb cmp loopne fidivl add das jbe rcl inc push test in and cmp ss rclb or test xchg pusha lcall add lret cmp fcomip xchg popf lcall add je test cmp arpl (bad) ja mov xchg and ss and ljmp mov roll add movsb cmp sbb dec orl stc sub mov pop mov insb or xchg call and aas addl and imul cld test mov clc stc adc mov inc fildll scas mov iret mov cs sub xor inc in push nop sub insb push leave fisttpl xchg das xchg cmpsb inc jl push mov add mov (bad) mov js leave clc int3 xchg mov icebp mov test popf mov stc jno,pt in mov dec xor leave inc jb lock sub push and das push cmp sbb jb lock jbe int (bad) push xor outsb loop cmc adc in movsb inc xor sub pop arpl (bad) mov pop push jns inc push jno fisttpl cltd repz push fstpt pop dec push in frstor jl lods leave push ljmp adc repz mov mov popf xchg inc stos mov inc pop std sbb popf outsl xor fdivrs and loopne out push mov out popa negl insb mov out sbb cmp push jle aad jecxz push xchg adc in stos mov pusha icebp and pop jge inc test insl jg test or sub jno aam dec dec test mov movsb pop insl inc jo xchg cmc jo dec test pop jno mov xchg sub es test and dec std jo movsb das jecxz mov imul jbe int jge pop popw imul mov imul or push stos or mov loop add test sbb jne mov out sub (bad) icebp cmp loope pop psraw call loope jmp mov xor lret dec adc add inc mov pop scas bound test mov cmp inc les inc sbb and in shl decl shll jle cltd das inc iret stos and pop ds sbb inc pop leave in inc sarl lcall xchg or jg enter cmc push jmp cmp cmpsl push push sbb mov jae js pop sarl push pop pop imul add rcll xchg lods cli lds and es hlt push add dec sub loop dec sub mov cmpsb xchg cmp insb (bad) mov (bad) lods repnz add mov loop add pop cwtl mov inc lret xlat popa sub lret jo es (bad) dec jecxz in add loop cli dec dec xchg cmc mov mov scas mov mov cwtl sub and popa jecxz,pt (bad) lcall rcrl mov int3 xor stos and in popf sahf ss fstp jge hlt aad in movsl lret (bad) pop sbb pop jl cmp push rol push mov (bad) imul jb ret add and scas cmpsl cmp and mov in pop inc push aad pop xlat adc mov mov movb setb or bound (bad) pop fidiv in dec cmp pop aam pop sbb loope xchg cmc repnz pop mov lret jle xor sub (bad) les rcrb lea pop pushf out pusha cmpsb fwait sbb gs xchg lcall push xchg insl fcomps loop xchg das (bad) (bad) (bad) mov cld pop (bad) js mov mov sahf sub popa (bad) or int mov jecxz ret cmpsl mov xchg cmpl ljmp ja fstpt ja xor add push popa test xchg dec cmp jb data16 adc sub inc or popf and mov imul jae pop rcrl mov in xlat dec in and mov push cmp (bad) int3 sbb insl into repnz add mov pop ja enter push push das outsl stos lret dec mov notl (bad) and int3 int3 mov in out loopne sub cmpsl jne mov inc xchg cmp ds imul pop je sbbl cmpsb mov pusha ss aaa sbb sub dec xor subb aaa lcall rolb adc lock stc clc stc fdivrs mov mov call dec mov stos jnp out in push mov ja ljmp xchg int pop pop xchg clc je decb jl in jg pop sti ljmp frstor out jbe adc loopne push (bad) out sbb pop xor mov js push push (bad) xchg push insb jg pop loop outsb loope cld sbb fcmovb test fdivrs ds dec clc pop fs aam mov movsb iret sub cli jo xor arpl xor fsubrs ja xor adc fisubrl movsl outsl in push fwait rcrb (bad) mul fistpll js icebp mov jle cmp clc dec arpl pop (bad) sub pop pop lock in mov dec sbb mov test xchg dec pop ds (bad) and dec jl leave fs nop test jge (bad) push adc in in loopne adc cmc cwtl xor or jle test call xor arpl mov pop sub lea and call pop cmp mov fimull lods jecxz sahf (bad) push xchg insl ljmp adcl repnz int3 add jae sbb rcll pop add popa mov (bad) fcompl add add cmp xor mov push adc xchg mov int3 mov lcall add in xchg add pop out mov repnz mov ret push data16 mov in lret push dec sub dec inc dec dec out test and adc jecxz (bad) fsts jle sbb add jl imull in adc xchg out xchg push jns cwtl pop inc jge adc push push jl adc pop cmp push dec mov lret mov cmp pop movsl jne xchg xlat push insb push loop addl inc outsl jl add jge mov inc fisubr into xchg xor movsb es shll push push xor push lret pop fidivl stos dec push or lods xor clc mov sbb (bad) stos jb mov mov fstps leave leave mov pop movsl fnop cltd je push clc mov fildl in sbb jns repnz popa dec rorb daa ljmp mov arpl dec jno jno adc add inc aas dec faddp mov pop test addr16 mov jecxz jno xchg xor frstor dec (bad) imulb sbb loope mov xor ror pop jno mov mov in out add scas lock pop movsl xchg cs mov hlt cmp push inc cmp cmp int jmp fldl or mov mov xor cltd (bad) sbbb add mov mov loop mov es mov ja cwtl mov nop imul pop (bad) movsb shrl push mov or sarb or adc aas jge adc mov sti mov notb movsb popa js mov xchg xchg faddp or cmpsb add push loope (bad) pop mov cmp pop aas xchg sarb jp mov or pushf jl (bad) fstpl lods push mov xor sub ror sub xchg fistpll cli rol sub cmp test hlt loop out notl mov insb xor push in out scas dec cmp add jge gs sahf icebp xchg jne addl sahf cmp in mov je fdivrs movsl adc pop jno sub dec lret repz and fwait cwtl cmp stos in les fwait sarb dec dec aam sub stos xchg call cmc mov (bad) leave cli xor mov xchg xlat add adc into sbb rol push or ficomp lds mov mov inc and imul cmpl fldcw dec push lds cmp es lds and sub jmp sbb mov lds lret loope fldl cmp cltd mov std out fwait lret mov mov (bad) lods bound sar xor popf mov les das incl jmp mov (bad) jge pop pop push cltd lahf shrl or cmc cmp es fisttp stos scas pop lods cmc push dec int3 leave mov mov pusha (bad) movsl cmpsl pop loope enter adc push push roll lods or sub movsb push lret add into jne gs (bad) hlt pop add add test cmp negl push out ss ficomp (bad) rcl and mov add leave sub cs test fidivl insb inc sub call jmp jecxz scas xor mov mov mov movsb mov push adc jle pusha imul sub mov push aad insl icebp cmpsl fwait push cmp xchg and dec (bad) iret pop faddl fsubl pusha pop cmp mov notl in (bad) fild mov jno mov xchg out inc mov xor mov insb or push or mov (bad) sub xchg movsb dec jbe xlat (bad) icebp push lods ss scas dec ret mov pop adc xor js and or test je push mov xchg push in popa lods inc int3 idivb xchg sbb mov pushf dec sub (bad) aad aad lret iret xor enter (bad) iret lock sbb pop xchg mov test jbe or rcrl mov gs imul out mov dec addr16 lds sub xchg pop jo dec dec jae mov shld jmp mov lahf inc or push xor add sub (bad) fs hlt jno sbb fstpl ja cmp sub loope lahf jno rcl inc in clc test mov nop es dec add cmp stos mov and arpl mov pop andl lcall and sbb push sti mov add push enter ljmp fildl or push sahf jl push cmp pusha (bad) adc test int3 pop test popa arpl stc mov jo ret fldl imul popa add mov data16 imul mov sub fisubl out (bad) mov jbe aaa push ljmp inc into mull mov jo (bad) les xchg sarb stc jae out add in insl fistpl hlt test clc adc mov aaa dec popa mov or shrb mov mov jle call xchg aas loope add cld push or out jae rcll mov add add lret mov out pop push mov sbb (bad) mov mov push rcll or mov mov insl inc jle inc cmp xchg cmp lret aad (bad) cld push or sub inc mov notl imul mov (bad) call aad mov cld in inc mov mov add aas pushl inc push test addr16 jae mov sbb mov mov lds push outsl test sahf sub repz sub movsl test (bad) cs jne sbb lock cmp add mov lods lods std in in int3 and inc mov mov jns mov pop cwtl je dec adc jns push xchg pusha pop test jl dec cmp repz push bound fsubl lds notl out push xchg mov jb pop sub in es push fs pop cmpb sub ja fild rolb push cmp aaa xor and adc ja outsl and cld inc jp pushf test add mov cmpl and xchg (bad) cld stc ljmp pop sbb push push mov xor mov lret int xor mov pop scas iret roll or jno jp mov or cmpsl in fxch xchg ljmp (bad) or cli inc lea cld ret arpl imul rcrl sbb xlat pop test jbe mov out cmp imul push in mov ds add pmaxub jg cmc jno andl enter das loope movntps mov clc sbb inc dec or push push inc cmp push popa xlat (bad) xor sbb pop jo dec aas dec out cmpl cmpsl pop sbb sbb push subl jne mov pop (bad) or ficom cmp sbb test clc hlt cmp nop mov ret out shrl icebp dec sahf faddp loope ja xor icebp push das andb mov jle or insb out xchg and sti or in xchg es sbb (bad) cmc ja xor and nop popa test pop imul test test or cltd adc mov sub push sbb fistpll xor mov xchg out (bad) push repnz and add fdiv fcoms jbe ret jns cmp out lcall mov stos testb sti dec lret lock aam aas xchg inc mov pusha ret inc stos ret jo xor cmc jbe adc xor (bad) aaa or andb addr16 popf pop adc adc test mov mov sbb into lods xchg xchg jge sarl daa js xor push fisub sbb repnz sbb sbb loop pop pop (bad) lock xchg rcrb imul and in mov call cld adc dec test shrb repnz (bad) repz test (bad) push (bad) mov mov stos jae in push mov jmp xor pop mov ljmp dec mov nop mov test pop in ret pop adc std pusha lret (bad) dec adc lcall and cltd iret inc sti cmp cwtl mov clc mov fstl mov repz fstpt push mov push jecxz shrb adc xorl push push movsl int fdiv in add out pop test insb push xchg daa and shr rorl adc js ret insb je push xor cmp lea cmp (bad) and fs mov mov push jbe sarl lea js cli xchg adc push js hlt hlt jp aad pop inc loop loope mov push call insb jbe and xchg int pop fild leave leave cld cmp repnz (bad) push nop loope (bad) xor adc insl mov mov hlt sub test lds inc dec or pop daa push mov sbb cmpsb mov aas ret lock jmp loop gs (bad) loop inc mov sti adc les mov push or sbb xor inc mov cwtl addr16 enter pushf xchg add and mov jae out out das xor lock divl jno add fidivr mov xor and mov add outsl aaa xchg flds out loope (bad) sti lret sub insb sub jle xchg jle test insb popf xor leave xchg fldt inc call test sbb mov repz sub or cmp fidivrl in fildll repz pop and outsb lods shlb bound mov jmp and cmp aam es test sub pop inc hlt ds aas xchg dec pop cmp pushf imul xchg addr16 dec lods xor xchg das mov dec pop sbb clc dec aas pop cmp popa and popf inc sub sbb xrelease cs dec add clc lods xor icebp out lahf loope xchg dec mov mov je iret jl pusha popf test mov rcr push movsb push orb xor insb das repnz in mov imul jmp mov mov js js xchg or xor push sbb and cld (bad) je pop cs jecxz test sub xchg push in cltd xchg popf stc popa dec sbb sbb loopne mov pop cmc faddl clc aas test jge mov shr lds push add lea jmp inc mov rclb cs jnp xchg and loop ja mov cmp fcmovnu ljmp mov pop sbb adc imul and sbb fs cmp pop mov sub bound xor push (bad) jae inc push pushf (bad) call lock ja cwtl sub push or (bad) cmp in inc add adc int inc xchg mov push push jae cmc or mov cmpsl push in push pop pop pop sub jns sti push in push xor inc mov sub aad sbb cmp icebp cmp icebp cld outsb mov push out outsb pop or jno ja inc out mov xor lock roll lcall push add pop and and dec pop jmp rcrb repz inc fdivl into (bad) aas and xchg cmp popf fstpt cmp jp add mov es faddl xchg push jmp (bad) sub xor in cltd hlt (bad) in ljmp cld mov inc test cmpsb xlat mov jo adc jle pop rclb jmp (bad) movsl jo repnz jns cmp jb loopne adc std cmp shlb int mov inc fdivs (bad) (bad) jecxz pop xchg xor fwait mov lret mov (bad) xor into test jle mov aam xchg shll lret sbb pusha pusha mov loopne mov sbb fdivr (bad) jo out in insb xchg lcall jb cmp js mov pop mov xor jne push add and sub ret es (bad) (bad) (bad) test arpl lret mov mov ja jns notl inc adc in pop jl in jbe jne inc (bad) jb cmp push jns cmp mov cmp shrb (bad) jmp sub lahf rcll adc push xchg xor dec sbb mov movsb push sahf and jbe div popa and repnz inc (bad) jmp lods bound loopne cmp mov and fcoms xchg dec sub xor testl push cmp lret or aad test ljmp jne pop xchg cmpsb fcoml (bad) iret xchg mov sbb pop repz sbb mov adc xchg je cmp rolb in and (bad) loopne inc lahf lds sbb mov cmpsl shrb push sbb mov mov inc mov daa ret lret fwait test (bad) std push adc lods sahf xor iret xchg adc mov faddl sbb in (bad) adc mov jno dec loop shlb or aam cmpsb push mov repnz jnp xchg and in pop repnz or or pusha jl cld inc int pusha inc adc aam ficom imul adc push push cmc (bad) lods inc out xor pop sbb jno push xchg (bad) mov inc pop and int3 aaa mov fisubrl repz ficompl icebp cmp dec cmpsl flds jns test aad pop cmpsl jmp mov stc mov push add push pop popf sub in lahf scas ljmp push xchg clc push sti decl jne clc stos aaa adc jg push (bad) lahf into or mov aad dec jne jne sbb lods pushf or std imul jp in (bad) int cmp add xor mov mull mov sbb sub sub movsb lcall sti lock cmpb dec or pop jb and rorb rcll shrl cmp (bad) std xchg (bad) jo mov sbb sub sahf pushf aam adc cwtl push call flds push mov cmp clc inc xorl jle ja (bad) cmc mov jno inc loop cmp lods aad (bad) mov cmp push sbb data16 (bad) mov (bad) adc push mov insb (bad) aam pop out stos lds clc adc push ja and jb sbb mov push test pop and xchg mov sti mov sti xchg aam stos fs add mov mov aam inc adc fs and push repnz adc shr dec mov xchg jle leave dec fidivr push lret push test aaa mov inc xchg xchg xchg sbb push adc aas lahf jae daa push xor pusha popa mov stc icebp inc pop mov aas out test push ljmp lea rcrl cmpsl inc popf leave jns push push pop popl mov jo mov sub sbb andl pop outsb sbb sub xchg outsl inc push dec stos push inc jle adc imul repz add adc add hlt loope (bad) and mov std (bad) imul leave xor bound mov mov jae sub fdivr sub fwait pushf outsb int std orl das dec hlt mov pusha mov dec xchg pop push movsb in adc mov xor sub or and (bad) mov cmp sub pusha (bad) mov clc aas mov ret push ret cmp lds scas pop test lock push insb cmpl bound cmp fs sahf xor jg rorl cmp jecxz sub cli dec (bad) outsb clc pop xor outsb or data16 loope cmp xlat lcall mov jle rolb jae mov sub test fucomip or add cmp pop stos inc mov inc add pop loopne xchg and mov adc mov adc fnstcw fdivrs lods fild add into mov cmc mov cwtl cmp scas js pop sahf rorl inc imul jb jae push mov mov (bad) enter aas (bad) or cmovne fcomps adc jb dec cltd subb insb icebp in dec repnz icebp cmp mov cmc cmpsl xchg adc jg dec ss mov leave jbe ljmp ljmp dec es sub lret jp sbb mov std pop insb cmpsl leave xchg dec cmp cmpsl imul subb lret or mov out loope sbb jno (bad) pop notb test jb and push stos cmp jge lods jmp inc test add or dec sbb iret pop inc and or xchg mov fcoml (bad) icebp or cli fcmove int (bad) fistpl mov int3 imul cli stos push xor inc call sub xorl xor jp inc (bad) jecxz jp leave jb out cmp lea stos cmpsl pop sub fstps xor jg jp aad pop je cmpl jo (bad) int sahf movsb sbb jp pushf scas sbb sub pop call in fadds lods inc mov and push xchg sbb mov and lods loopne push jge jae pop enter or outsb mov lods xchg das jle insb cmpsl imul and into push adc inc fnsave test stos shrb pop sbb movsl cmc cs pop push sbb enter cmpsb xchg into arpl mov xchg dec pop pop repnz lahf adc adc jo sub dec das int push out insl mov push fsubrl mov sahf popf stos mov enter jle mov xchg cmpsl adc jecxz shl sbb mov repnz outsb adc jp sahf daa arpl pop xorl and xor fs push vmaxsd stos dec mov adc fwait lods xor cmp and loopne sbb sub and push xor in mov dec icebp and idivl ret push xor xlat fimull cmpsl sub sub adc or cli das xor lret cli pusha mov dec inc test movsl cmp out sbb xchg sbb xlat jbe mov stos dec stos add mov arpl mov cli xchg cmp sub incl push iret mov adcb add sub bswap enter and ljmp xor not gs adc in and mov xlat fwait shll movsb loop dec inc int scas aaa or xchg adc xchg mov hlt mov fimul cmp test (bad) shll cmp outsb jb ljmp cmp popf aas mov pop cmp jae jne or sub adc cmp addr16 lock push lds popf xchg lock iret fadds fnsave sub shrl cwtl adc jl hlt xor or jae inc imul js enter or std xchg lods jg ret xor add pop inc jbe push ret ss and aas pop into xchg or imul xchg fwait rolb stc push jmp or aad (bad) sbb mov test jg out push les jle xor sbb pusha xchg adc lds and lcall sub mov int3 mov jecxz je xor and cmpsl push jno jle or out movsb mov xor les sahf jl pop fisttp xor jae int3 jg fwait and imul sbb xchg dec mov loopne orb mov xchg xor dec cmp cmp test ljmp pusha rcrb push sub jnp hlt es repz adc stos and cs cmpsl mov repz pop dec cmp das fdivs mov hlt xchg adc mov sar inc ja cmc or push (bad) cli repnz xchg mov jo in icebp cmp and cmp shlb add cld fisttpl (bad) sbb push test mov dec push mov rorb cmp (bad) fcomps and adc and sub repnz push dec xchg aam xor lods dec addl enter and jle adc push stc mov mov or loope inc or mov mov inc movsb add and rorl xchg mov xor pop rorl enter fbstp xor data16 and and mov fnsave inc adc add stc ja (bad) nop pop scas out repnz mov fwait jno and mov adc jp jge jle jge xor cs leave adc mov (bad) jmp xchg xchg fwait and (bad) mov dec pop adc jmp lods loopne (bad) push xor rorb adc aad stos mov cmp lret adc mov jg in mov or push ds scas shll stos in lea faddl (bad) cmp push jns jns xor shlb or stos es dec pandn lret mov xor mov and pop ret cmp fistl xchg pop adc mov push and sbb pop cmp jle push sahf sub lods and scas test push sbb xlat jp enter xchg or push xchg enter fwait iret push sahf xchg add mov cmp (bad) push jmp adc mov mov xor loopne sbb pop dec pop lret and jo pushf or jmp cmp movaps jmp mov les mov sti cmp (bad) xor dec xchg jmp arpl mov scas in cs sbb mov (bad) ds fcomip or mov adc mov cmc notb jmp incl ret xor aam dec mov sbb and test in ret push mov stos jp jge sahf (bad) lret aam or xor in sti push imul xor sbb stos push inc dec lods lcall cli cmp dec loope mov push imul pop inc clc xor xor dec cli leave in into jmp (bad) mov sbb insb sbb dec jbe repz jl ds sub jmp test push xchg jb pop xchg outsl jno jp sarl xchg int lea arpl sub sbb adc pop push push outsl pop jns and out jl and push bound insb jbe cmpsb (bad) pop inc dec cmp cmp cld repz and std lret jns sbb aas xor aaa shll mov xchg mov dec fcmove pop mov sbb insb (bad) aas int3 mov jp std repz out jns inc in in imul int3 orl and lods push repnz das pop xor (bad) mov leave add clc pop jp fimull hlt cmp lods pop jae lahf lds dec es repnz xchg dec iret pop fldcw lahf pop mov inc push adc cmp lods movsl bndldx repz pop lret ds test mov or push pop js out iret sub leave out fdivs leave lret mov popf mov jl popa or cmp mov cs push mov push aas fwait cmpb ret xor jb inc lcall or int mov xlat int fwait inc jae loop mov push fdivl movsl xchg jl mov jge push popf into jge lods hlt scas jg xchg outsb stc (bad) push push or dec xor sub mov mov popf jecxz jae sbb int3 (bad) imul or jl and xchg inc rolb cmp in les subb fsubs or or into or (bad) mov cmp fs or sbb mov mov fisttp pop lds mov mov sti aad mov mov sub addr16 pop dec (bad) enter push (bad) add adcl outsb pushf xchg repz cmp push cs xor fwait inc pop and (bad) scas jg fidivr fcomps outsl leave push mov xchg push dec or sbb jno xor aam mov sbb mov pop out cmp fisub jecxz push pop outsl sbb dec pop or mov test xlat bound push sub mov pusha cmp ror push in mov into rorb stos mov cli test das int lods xlat ficoml adc xor add sub cs int rorl cmp lcall adc push aas pop sub xchg mov mov icebp aad popf adc dec xor mov sub outsb pop push fsubrp add sub sti dec sbb mov push cs fbstp cmpsl xor xor cmpsb enter inc jecxz sbb mov (bad) lahf jo scas xchg stc push cmpl popf xor rclb xor leave xor inc add mov mov lahf jbe push jl lret inc mov int3 mov dec dec mov mov mov lds mov loopne in (bad) and jae scas lret jl mov pop ja je repnz adc xchg push add stos mov fwait test push cmp push mov (bad) ror fld push lret sbb push sub fbstp (bad) cmc push not mov dec scas vmovaps (bad) fist dec call pop add inc stos push repz aam loope cmpsb pop pop or jne cltd mov and push xchg dec sbb repz cmpsb pop sbb and mov mov jo dec addr16 orl inc idivb dec clc mov cs jns (bad) ss lret mov gs jp cmp clc jns mov inc cwtl ljmp push sub dec lock ljmp ret rclb (bad) push push clc aad pop cmp shlb push in xchg jle arpl popa (bad) jne ss in fwait push sbb cmp mov leave leave pop mov mov jp push cltd jp imul jmp out sub cmpl ret dec imul in push mov fnstsw xchg lods inc mov push jae lods ljmp iret sbb ss inc push (bad) jg adcl sbb pop or pop inc jecxz xchg xchg pop inc jge cmp cwtl pusha or lea mov jno jg mov pop outsl ret subb test cmpsl xor mov pop int3 (bad) fsubrs lods in sar inc call dec lods adc sbb jle lcall add int3 outsl (bad) (bad) mov and inc xlat lods and mov xorl ss pop rcll xchg ja mov test inc pop insl test cmp imul fist imul jmp cltd cmpsl add adc adc cmp mov mulb mov push cmpsl adc push dec xchg xor cld jl jbe es mov dec jge neg dec push mov test les mov sub jne push inc cld add pop test insb and pop lahf sub gs mov pushf jg cmp popa and add popf xor test imul scas test adc xchg or cmp clc lcall sahf scas xor insl (bad) int3 and (bad) stos xchg mov mov repz stos jo xchg fs movsl mov mov hlt sub sbb fsts mov mov pushf int3 cmc cmp mov or and xchg fmul push lahf xchg hlt mov in das mov mov es jecxz sti hlt clc (bad) movsl jecxz mov jge push cmp pop push scas jnp outsb (bad) mov lahf jg in sbb mov push (bad) sub sbb mov loop jg mov fucomp ret stos and xor mov xor enter dec fsubp push test scas push lock test mov in cmp pop inc mov imul push int3 test sub sbb sarb mov out mov popf les rcrl or outsl rorb addr16 pcmpeqd pop push cmp sbb rcrl notl cmc mov adc xor out sub push popa aad cmp pop ljmp xor cmp stos daa mov (bad) outsb lds dec imul mov rcrl enter or inc sub aas and lods icebp hlt (bad) cmp push lret inc xchg imul or scas lcall test sbb add adc xchg repz (bad) mov xchg inc dec mov adc or mov push and (bad) ds scas sbb xor pusha and aas pop stos clc xchg fstpl adc clc or cmp and (bad) mov sahf mov cmp rorb xor and mov cmp outsl (bad) xchg call shll cli cmpsl xor mov rolb cld xlat in shlb je adcl sbbl shrb out sub jns paddb lret notl stc cmp sbb (bad) test rcll jae pop adc inc (bad) loopne xchg dec pop (bad) clc jp push mov pop sub arpl loope daa add push movsb or (bad) xor cmp inc add imul push pop push fcmovb jbe jmp movsb scas jmp outsb int or or mov sub push pop inc dec arpl jle fdivrl cltd push (bad) cmpb inc popa sbb xor add pop fsubrl or add insb mov es mov ret clc sarl gs xchg mov ljmp iret inc insl adc inc or adc mov lds add rcl mov (bad) idiv sub hlt xor rorl fstpl pop cmpsl push movsl adc mov add mov mov dec push dec cld xor ss mov mov imul pop inc daa addb dec jge (bad) xor test inc int3 gs xchg and ljmp sbb or divb fidivr lret add xor dec and lods (bad) ror xor inc insl inc xchg notl cmp aad movsb test mov adc scas mov cmpsb sub sbb and repnz enter icebp imul ljmp jo xchg int rolb push out in lahf cmpsl mov cmp aas and cld arpl push es xchg stc add je jle and (bad) inc aaa adc push movl lea loope fwait cmp ss sub adc xor xor push insl jne push jo lret jmp mov lret jl pushf dec ja repz jno (bad) iret push das jg scas pop lds repz ja mov leave data16 int3 mov adc pusha movsl cmp pop add add fdivrs mov out sbb test neg xor mov fdivl xchg (bad) stc call pop cwtl dec aad dec ds jl fistpll mov jbe jae sahf loop mov idivl xor hlt pop scas cli in cli outsl pop mov mov imul leave fsubrl xor jg add mov lock fsubs das fnop in cmc out les add push pop jbe (bad) push or test rclb pop outsl or push or mov stos adcl pop jp mov jnp es or rolb mov out sahf cs xor imul and sub mulb sbb fwait clc fwait sahf pop mov out sub mov les (bad) repnz aas or test ljmp into or adc fimul cmp dec not js repz xor lret lods (bad) (bad) pop sbb sub rorl jmp cmpsb inc mov push mov jo cmc cmpsl and sbb cmp daa (bad) insb mov rolb (bad) sub dec ret call repz sub xor andb scas subl or mov adc jns in lods push sarl out mov pop mov mov adc xchg mov lods (bad) (bad) data16 test loop cmpsl jmp mov (bad) out rorb insl gs add insl jge das xchg mov aas sbb mov fimull in mov cmp subl mov jmp mov cmp data16 cmc sahf enter cmpsl stc in pop cmp push mov push loopne mov out (bad) in dec lahf loope (bad) fs inc fsubrs adcl movsb mov arpl mov loopne in js fwait std outsb imul mov add pop imul rorb mov mov inc mov xchg imul and ljmp cmpsb jle loopne sbb cmp out (bad) pop add adc ss inc aam mov add push in jae and rol jp mov idiv popf lret icebp mov push aas aas jno push negb and pusha ret and cmp or mov jne (bad) mov jecxz sarb jae cmp (bad) into mov adc rclb pop and jle inc mov out mov outsl inc repnz (bad) sbb xchg movsl and mulb jns mov jne lea sub add (bad) iret in push call lods (bad) (bad) adc sbb rcr shrb fiaddl mov adc dec jo aad pop int and insb mov push subl lret jg add iret mov mov cmp dec jmp or popf outsl lock rcrl push push stos out jg inc imul dec popf jno iret stos jecxz das adc pop pop inc test or and je into or cmp jecxz ja cmc enter cmp cmp dec sub pop jbe dec jg insb lods cltd sub fiadd mov xchg add mov enter cmpsb or or aaa mov orl cmpsl xor das mov sbb dec mov andl mov adcl fldt sti clc lods cld or movsl js pop sub jmp dec ja pop scas popf dec jecxz scas push push mov (bad) mov add nop jg out insl lods and fst mov adc nop cs cmp out jle xchg mov dec xchg icebp mov (bad) faddl jp xor sub outsb cmp sub fimull mov push mov pop dec stc sahf pop xchg imul mov xchg mov (bad) ja jmp xchg int3 stos es mov int3 stos and outsl fdivs cltd gs xorl mov pop cltd mov stos scas mov add jmp sub pop pop and add adc mov mov mov mov popa adc pushf lods in push aad (bad) pop xor lods dec mov loope outsb aad sti xchg push lods fldcw sub cmp lods adc enter aaa mov push sub ret xchg cmp and push mov movsb aaa cli lcall fcoml pushf and push and aas pop outsl (bad) and int3 jecxz or xor sbb ss push rcll das fucomip iret mov icebp cwtl jl cmp mov adc pop mov and ret sub sarl outsl es push aas or (bad) scas and test inc loop xchg fdivr xchg cs mov mov je jg out add or mov sbb ja and fldenv test pop adc mov outsb mov rorb dec rcrb xchg in popa sub xor popa sub cmpsl cmp and inc aam xchg scas push sub in fiaddl mov lods and or (bad) out xchg push mov mov gs mov test pop (bad) fldcw imul fstpt scas xor adc mov push mov movsb outsl or fbstp mov addr16 sub mov and push xchg insl adc dec dec aad movsl cmp rorb push push test bound mov cli mov loopne mov loope jne dec out aas fxam popf xchg ds je lds cmp adc clc mov and ret sti aad adc cli and loop mov loop jb jmp int fidiv push sbbb sti fsubl jnp pop xchg or push sbb bswap mov fnstsw lret popa sbb push mov and or mov and sti and loope adcl and and inc ret sbb sbb (bad) mov (bad) popf jg in mov dec xchg bswap dec xor outsl iret cmp push ja (bad) sub in cmp cmpsl and stos push mov jle ret lods push lds sahf mov (bad) push test sub mov inc lahf xor stos lret test sbb inc or mul sarl inc stos fisub mov jle mov pop mov mov lret (bad) dec std and rcll xchg aas outsb nop cli dec push inc or out pop inc inc neg mov jae ret xor add loope push push add dec push or inc jle pop dec arpl mov addl or mov add sub xchg sub sub es rcrl pop lahf (bad) out call push jnp xchg call enter stos cmpsb mov neg and mov cld arpl (bad) push lret cmp push push enter sub loop cmp mov sbb mov xlat add pop test jne clc addr16 test fwait mov pop sbb repnz cmp jae dec movsb (bad) mov pop cmpsb icebp xchg mov pusha in sub inc and (bad) mov add mov aas xchg leave imul lods mov shl mov push aad xchg ret and cmp (bad) lods dec inc mov jmp lods xchg dec lcall sbb mov je mulb popf jnp (bad) push xor je das inc cld leave lcall xchg sbb in lods repz sub push mov add sbb stc test es mov sub sbb insl aad push push (bad) in out push in icebp loop (bad) stc aam pop sub mov inc mov andl dec jnp fisttpl into or lods aam push push sahf jne repnz loope rorl mov xchg scas bswap mov adc jecxz rorl pop jne jecxz ret aad mov mov cwtl add sub (bad) js pop mov test stos cmc add cwtl out mov or mov add add xlat dec dec sbb lea inc pusha or sub into sbb dec pop pop jne pop pop lret xchg push fild and insl arpl sub mov push dec mov rcrb sbb daa cmp sti mov jge dec stc clc daa sbb lcall mov test cs xor pop and mov in xor (bad) mov aad cwtl cmp push jbe inc sub cmp adc in aaa cmp adc or popa rcll push mov sahf dec pop mov int pop pop dec xor push imul rorb mov loopne cmpb (bad) or dec pop movsl or sbb sbb scas in or adc dec fmulp sub cmp or (bad) loopne aad mov jbe xor pop xchg and sub pop inc lods loopne xchg (bad) adc sub inc xor popf ret sbb sahf cmc sub mov mov jno xchg out adc pushf mov cmp orl push roll lea pop and mov stos mov adc rcr rclb stos aaa out sub lds add (bad) std and push loope aam fist mov fld ds (bad) int sbb push shr mov and in fld stos and lahf mov and mov add insl and cld mov cltd lods insb pop stos add test lea arpl cwtl add push jmp push push mov insb fiadd or in sub mov mov enter dec outsl and (bad) jns js (bad) mov cwtl outsl shlb (bad) jae imul mov push int3 (bad) fistpl je push pop sub jge and sbb mov and mov cmpsb push loope stos into mov sti repnz cwtl pop aad repnz jne dec inc lcall cmp outsb jp std gs shlb adc insl and loop jmp push jns push mov lods out shll int3 mov mov fs inc push and or and jae in add test and push mov pop xchg jmp sbb dec int3 dec popa sbb dec shrb dec jmp push loopne lcall mov sub xchg stos out sub mov cmp faddp sub fnstenv stos sbb pop jl pop fsts call sub mov jg dec or rclb mov addr16 xor ficompl pop or adc lock out lahf push jns int inc stc dec clc repnz int3 sahf pop xchg add leave imul divl out mov fcoms push arpl pop lret sti es jb data16 xchg inc jns sbbl ds inc int ret cmp add sub xchg sub or imul cwtl outsl pop aaa mov int sahf xor ss lahf (bad) fnstsw mov jns aas out rcll gs jbe push int in pop and inc movsl movsl fnop hlt sbb rorl or sub movsl cmpsb pop or mov xor js,pn sub mov fistpl std jns sub sub inc and inc push (bad) lock and not adc push imul cltd test push pop dec (bad) imulb add adc cltd repnz into cmp and jmp call adc add gs and fdivr inc inc ja lods clc (bad) jae out loopne shl cli push in mov adc inc icebp add popf cli (bad) repnz hlt stc in push push (bad) adc or popa mov inc jecxz mov out add jg sbb iret mov jle mov dec std in xchg ret imulb into and in pop in (bad) cmp jbe das out jne rclb mov mov xor jl dec or outsb add inc addr16 ss jl sub add jno xchg in cwtl icebp (bad) mov push mov cmp xchg hlt mov xchg stos dec pop mov fistp cmp jmp and outsl jbe and mov push shlb jnp pop cmc xlat jmp les inc pop mov jg icebp out idiv xchg inc (bad) frstor sti mov jbe pop inc cld es lcall cli aad faddp or xor inc push xchg sbb in and repnz mov dec mov xchg add out sahf hlt jp stc inc jmp jb mov out mov adc sub aad mov pop mov jmp fsubr or daa ret or ljmp pop (bad) jge enter xchg sub orl sbbl fidivr cld (bad) jae (bad) hlt fnsave xchg ficoml cli jge mov mull stos jg arpl push sahf pop inc addb aam xor jle sarb repz pop or jb sub cmp mov adc js push or je push dec pushf arpl js mov and pushf in loop lods cmpsl (bad) push mov fs mov ret sub xchg mov pop mov dec xchg add jno add mov mov xchg js pop fs insb mov dec xlat (bad) dec xchg cli mov jnp or (bad) das push jg xor xor repz or into pop (bad) cli pusha les fldcw inc and xlat jp lret cwtl pop andb cltd outsb out push dec lods jg loop inc test test popa icebp lcall in je dec outsl int3 call hlt and xchg mov in add hlt je cmpsb fwait cld fistpll dec mov inc jmp mov addr16 je jbe (bad) jb push ss xor adc imul fcmovnbe add sub sbb cmp test movsb adc adc pop and out repnz mov testb out popf or inc mov xchg psubsw mov fistp or cmp adc or rcr repnz fstps into adc (bad) mov cmp es mov fs ret cli stos gs enter jbe ja cmp decl sbb daa (bad) imulb pop test ds fs int3 jno addr16 mov push xchg popa jns xchg js pop mov push xchg pop mov jae sti clc loop mov ja mov mov pop ds or js mov mov and cmp jae mov outsb ret cmpsb pop push addr16 test lahf dec xchg test inc popf add lds xchg and hlt shl (bad) inc imul sbb cmpsl mov push xor mov clc mov cmpsb mov das push das jmp sbb aam add pop jge push push jge sbb fstpt or roll in and test xchg xchg pushf push pop bound loopne mov in ds outsb popa jl xchg mov adc pop xor test cmp leave popa pop push pop popa movsb or sub adc rol mov mov (bad) adc jmp pop das push xchg xorb jne in jbe pop call mov shl mov leave mov sub iret ret mov dec sbb adc and das xor lds jb pop push pop aad pop xchg cwtl push fstpl rcll mov (bad) mov add aaa out (bad) cmp lret pop fisub or push shrl push pop dec and or lods jno jge outsl pushf cmpsl ret fistl or shlb cmp push pushf mov add shll mov sbb arpl pop lret lock idivb jl adc mov or inc jbe daa int3 data16 out aas (bad) and sub fimull inc pop xchg std ds jns cmp cmpsl pop jb mov pusha loopne or test daa es jo inc mov push cmp gs rorb imul cmpsl pop insl jp and test adc jmp jecxz add push lret mov cmp loope fimull fisubrl leave vmread (bad) notb push and rcrl jbe daa sbb and (bad) into in (bad) repz lret pop xchg jg push jmp mov out push adc lahf cmp lret cli or cs in das pop fyl2xp1 dec xchg cmpsb xchg adc movsb shl mov mov fdivrl and or jno jb out aaa fildl xchg adcl mov jb test sub jno dec jne jo mov jecxz push xchg mov mov xchg data16 data16 and jp add test shlb cmp jns out in (bad) jae push mov sub ljmp xchg sbb xchg insl mov mov xchg and or xor mov push sti sbb push ljmp inc fidiv cmp jle repz out lock dec lods rcl sbb jno or cmp jmp cmpb inc js (bad) cli jecxz stc sub stc cmp fwait cwtl inc rcrb xor jge rol sar push jne in (bad) jb jmp push lret mov mov sbb mov fild mov and test imul mov movsb fs xchg mov jge pop aam (bad) jo sti adc add mov call inc cmp mov js mov pop push ljmp push shrb xorb push lcall ret dec int lret push out repz (bad) mov push es ret inc lcall call add or rol adc sub mov inc jl insb ja lahf flds or loope insl mov aam jmp and lret dec movsl jnp and or mov ret pop cmp int3 or (bad) fyl2xp1 (bad) lea xchg lock aam mov or int3 mov out aam xchg cld and ret inc movsb pop dec insb or div loop aam mov and xlat out fwait inc cli aaa jb sub cs popf push adc nop shl (bad) popf push dec mov out (bad) test ret dec into cmpsl adc ds inc dec (bad) rcr lods add jmp out xchg ds (bad) ljmp dec pop pusha mov repnz push aam movsl lods ljmp arpl aas pop add or mov nop xlat lret pop mov dec pushf xor mov hlt mov sbb jns and mov outsl inc repnz in sbb cli gs jg xor iret xor push add pop cmc daa dec and lea cmovbe les mov adc sub fs mov xchg push xor and iret ja pop jle add rcll jmp fstps inc outsl (bad) les and ret fsubs pusha js mov imul (bad) out psadbw int pushfw mov mov mov fwait mov int3 cld push dec scas bound dec int3 into ja (bad) jl (bad) push rorb cmp push cs xchg (bad) std xchg aas mov imul enter and xchg jmp cwtl cmp sbb punpckhwd xor (bad) out or fsubrl xor (bad) push pop sbb (bad) push xor adc cmp orl test and dec inc jne adc mov adc lret sub js mov inc andb push cli out xchg dec mov jae xor xchg pop mov (bad) lea imul jmp mov gs xchg push cmp loope adc jno cli sbb push or mov jp (bad) iret out addr16 sub notl xor movsl mov mov jp lahf les arpl mov xchg xor test pop add (bad) scas cmpsb mov xor out jg mov iret ret mov fmull icebp or xor test mov fidiv mov jo mov hlt iret mull push lea fidivl pop in out sbb fwait ja xor fstl test xorl xchg (bad) dec cs fs cmp or incl adc cmpsb test mov bound pop mov scas push lock leave push in lods scas divl jae and add mov xchg rcrb pop jge cwtl add pop (bad) dec aas shll push jg,pt call sub xchg push dec ljmp das icebp xchg dec sbb jno stos scas scas and data16 sbb sti add xchg stos inc push jp cmpsl movsb cmpsl ljmp (bad) mov rclb loope mov push test cmpsb cmp jl adc jle push mov sbb add arpl cmpsb lea ret mov mov inc inc into lods add and fsub cmp jns in or clc and cmc lret call aad leave sti icebp mov pop jne daa jmp cmpsl and cmp loopne push mov sub imul mov sbb xor rorl stc insb xor sbb mov adc ds lahf push xor jecxz push add call pop scas cmp add fs bound mov dec repz pusha mov es add movsb (bad) xchg sbb inc rcll pop lods xchg insb mov xor movsl cmp or inc movsl jle popa out lret stos mov cltd movsb cld repnz imul push xor sbb lret xor pusha cld or push inc push push jle iret outsl and movsb in nop fmull lret popf inc out insb out mov cwtl sbb mov sbb rcrl iret adc xor or dec sbb mov clc shll inc (bad) in je jno jmp outsb xchg in push adc jge loope add pop int gs pop in adc and fs sysenter bound aam out ja xor jmp fistpll mov out mov ja xchg pushf jbe xlat add pop (bad) adc stos popf sbb jne (bad) jnp (bad) jno cmp rorl loope sbb int3 cmp repz mov xchg mov fsubs pop (bad) pop dec jmp jmp lods push sti enter fwait xchg add jl inc pusha enter cmp cltd and push call sbb popa cmc dec mov idivb mov jp pushf sub lret xor arpl xor scas xor xlat into (bad) in scas or mov das xor and popa je cmp pop imul push jo outsb mov push ljmp inc add jp scas adc data16 lret sahf (bad) aaa and daa push jo xchg scas lcall lahf pop cwtl add rol mov mov fbld orl scas rcrl or (bad) jge in lcall mov jl cltd enter push (bad) jne pop pop mov or lock or test add jl daa es push (bad) fist test cmp xlat ret inc pop mov out ret pop out rcll std inc insl dec push or push mov mov int3 add add mov mov lds cs xchg adc test push pushf dec pop loopne invd mov mov fidivrl scas xchg mov mov dec mov in (bad) cmp and pop mov push xor sub adc stos cmc push xor repnz xchg or roll pop push xchg sub lds xorb subl repz insb sbb hlt push repnz and add jge push mov sahf call pop mov jae popa push imul or add cmp xchg cmp lahf inc and (bad) popa lds outsl and and in cmp shll test repnz sub mov mov mov into idivb out nop sub mov out or lods mov pop out leave popa in fidivr punpcklwd mov push ljmp jg cmpsl mov arpl xorl (bad) jle xchg mov dec icebp stc push nop mov lods jg pop or xchg pop ja inc cmp test adc lock adc iret sbb and loope inc lcall jnp sub outsl sbb add pushf jp leave daa cmp ret test js add stos bound ds mov push mov mov iret inc lds lcall cld nop or imul jg sub adc lds mov lahf scas jns dec jg sysret pop inc add stos sub mov orl mov and rcl push push lcall sub xor push adc push cld sbb dec cli sbb mov or ljmp ds sub sub clc and aas xor cmp jle pop add xor lret aaa xchg mov subl push mov out mov aad cmp test jno jns sub dec insb (bad) leave xlat xchg add lods rorl mov cmp shl jns push sti mov in ss add dec int3 adc cli insb fild test lcall aam mov xchg dec fbstp lcall push jg jb sub lea orb adc ficoml sub sahf jbe,pt (bad) xchg jg xor pop cwtl adc sbb or stos pop lods test jp mov pop mov aad rolb stc and and sbb or and popf mov add iret cltd fstl mov fs or lds ds inc push int das or mov in enter pop jb jmp scas (bad) adc hlt pop xor les jmp (bad) nop or test fistpl jecxz jbe (bad) jne repz push test mov lods ss xchg icebp mov in jae aam int3 lahf incb xor (bad) mov jmp or mov call pop sub xchg lret xchg icebp push jns sti and arpl mov jmp push stos jno add sbb push sti cmpsb push mov cltd pop add and sbb insb jb or xchg shl sub jp out jle add enter out cmp stos xor sub xchg mov or inc push jp inc pop jl mov cmp ret cmc sbb cmp inc mov pushf mov sbb adc mov jecxz insl mov pusha pop push int3 loop lock cmp mull push lods push addr16 addb ljmp lds mov push mov mov add je lods push mov xchg imul in xor fcomip in cs xchg loope imulb pop inc fsubrl call xchg int cmp sbb xchg or cmp xlat ret cmp pushf cs loope push dec (bad) lret popa sub push jbe xchg shll fbstp loop in clc or pop lret mov xchg sbb in push addr16 jae add inc in inc dec repnz push imul mov cld mov outsl or leave push push cmp out out dec sbb adc insl (bad) popf fdivrs cs add aas and addr16 fmuls sbb mov rorl mov ds pop xor out fadds jb mov in rcll pop mov adc stc (bad) lret les sub stos push stos xor orl nop adc mov pushw dec js mov mov push ja mov ss and shr xchg xor push push cltd pop cltd xchg pop mov sarl push gs pop mov insl xchg imul xchg enter pop sub xor adc nop int inc dec jmp xchg (bad) dec adc es push jmp inc fs mov adc pop mov sbb notl mov mov pop mov (bad) mov lods or mov pop fs pop stos icebp mov dec imul mov mov loopne loopne cmpsl cmp lahf ja in inc sbb add aam pop xor mov pop stc lret pop icebp sub cli ret insb stc pop and xchg sub roll bswap decb scas jns iret mov dec adc pop addl mov xchg sbb jo fs sub mov mov (bad) cli mov lret aas es jmp cmpsl imul jnp inc inc and jg xchg test lcall mov movsb xchg xor sahf in add push out push leave out mov loopne mov loop repnz vcmppd sbb or lret sete push cmc cmp xlat imul insl cmp xchg ds and imul rcr mov jecxz lret push out cmp (bad) xor orl or lods and jp xor jp jae movq outsl in loopew ja adc inc push dec inc cmpsb pop clc dec adc aas test cmpl sahf lock ret and inc push fs jb scas xchg cmpsl or jge cwtl xchg push scas daa pushl or pop scas add pop stc mov inc mov xor into lods daa fucomip dec jl (bad) or lret push inc add sbb in push push cmp sti mov or frstor out jl rcrb xchg xchg adc mov das xor test jg jno and (bad) sbb xor adc inc std sbb movsl pop mov mov or lds hlt sbb mov shrl mov (bad) fdivs push imul rcl test sbb das mov sbb call sbb xchg xchg push mov popf mov (bad) cmp ret lret sub inc xchg ja pop daa push inc or and pusha mov insb mov (bad) icebp cmc (bad) mov fwait in sub push or into mov mov mov inc shlb mov and jp les iret and push enter fs mov adc loop lret mov add (bad) mov jno xchg (bad) or repnz andl decb inc and jae cmp cwtl push cmp mov dec (bad) nop mov out lds es pop sub outsb popa data16 ds mov sbb fildll or mov clc mov outsb mov mov lods sub std dec adc mov xchg loop scas (bad) push push xchg mov lret inc xor mov pop test mov jl flds loop cmp ret push cmp loop dec xchg lahf inc int3 in push ret test dec ret adc int3 jecxz test jae jp daa pop xchg lahf es jmp dec jg dec movsl lods sbb scas mov (bad) xorb inc and push pusha fist fistpll sub call fwait out jge orl jno and call (bad) adc mov (bad) dec sti mov (bad) adc jns fbstp inc jb sub sub sbb outsb fsubr mov inc in rcrl pop adc mov (bad) (bad) jae mov in insb lods jecxz add inc popa adc repz pop push roll mov jbe decl pop call mov sub aaa cmp adc cmc (bad) gs imul inc mov lret sub out mov arpl xor test adc cmpl jl adc test jge adc add (bad) jecxz xchg sub out addr16 test fwait (bad) mov das mov push decl mov mov xchg xor aaa push outsb and aaa movsb enter push or call push andl xorl cld cld pop shrb dec mov icebp mov insl ds mov loop dec adc call gs lods xor cmp mov pop jb mov sbb jns xchg icebp lcall dec pop (bad) repz mov adc stos jo pop cmp lcall iret into jmp mov push insl fcoms (bad) push fwait out sub push push roll sbb xlat pop and xchg sub rcr add sub xor imul pop xchg popa mov (bad) xor data16 jp loopne popf pop fiaddl and mov inc lret mov pop aad or xchg pop in sahf mov push push mov and imul lods xchg imul lret pop dec mov sub fcoms add dec popf push lock pop cli sarb ljmp lds sub lahf jl jmp lret js inc (bad) repz aaa mov es push mov inc (bad) mov mov mov movsl lods push rcrl and int3 ja popf outsw xor fucomip ret and jne ljmp (bad) mov xchg jg pop insb pushf daa icebp enter les rorl fidivl mov out mov cmp out cld std add ja fprem insb push mov push rep jle clc lret in vmread mov push xor dec (bad) out aas mov dec lss push shrl and dec bound mov xorl insb inc fcmovu push (bad) mov jge mov arpl mov mov sbb or jb pusha cld mov adc add mull mov sahf jmp cmp xchg ret sbb mov clc fdivrs pop jbe lock es pop and scas ret out lds mov mov inc jbe pop outsb aam decb lock pop jae pop jno out mov bnd jecxz fidivr sub inc bswap arpl cli rcll call mov daa imul push push cltd (bad) mov test mov push aaa and push das outsl xor aas cmpsb xor or fwait xchg add adc inc idivl sbb sbb pop pop jg xlat (bad) jo (bad) mov xchg jb dec and inc jae push imul push fisttpll lcall mov sub ja push sub pusha inc pushl pop js adc mov mov (bad) fdivrl or pop pop fdivr cwtl je push int (bad) mov mov lret xorb pop lods nop lock add inc push popw ja stc out mov (bad) jp (bad) iret jge mov imul roll xor push (bad) out jae add fwait scas xor adc mov pop pop add inc into in xor push (bad) cld xchg lds jmp int3 aas inc push (bad) adc ljmp idivl pusha xchg add fwait jle push push xor out push sbb inc cmp mov add sub mov jecxz lcall pushf xchg insl in pushf and inc and imul jge jnp outsl mov xchg adc sub ljmp lds pop into test inc mov xchg pop inc icebp xchg ljmp mov aad lret sub in and shrl rcr jecxz fidivrl stc js sub sub inc enter repz cmc or adc inc mov mov sub sar (bad) inc fldt push mov lret mov dec xor ret int3 jbe ret fmul lea push fcompl and xchg std pop popf add dec dec mov shrl cmp jle cmp dec push in lahf imul cmp push xchg or jmp jbe mov fdivr jbe cs jno (bad) xor fucompp call sahf popf mov in bound scas mov mov ds lahf xor mov xchg or je mov mov mov push lock xchg lods bound sub mulb orl sahf insl popa sbb in inc jecxz rorb pop fdivr out cs mov mov and das xlat sub incl or xchg clc and aad outsl clc dec dec pop xchg xor inc xor pusha pop and div dec int and fstl orl inc notb and xchg cs arpl sbb xor cmpsl jp dec ret sbb push adc xor adc lds and iret mov cmp lods fildll push (bad) adc (bad) dec (bad) jg outsb cmp negl cli sub xor mov xchg and and dec xchg add mov enter xchg inc add push fmul pop cmp mov (bad) mov int cmp cmp xor and jno fistl and xchg fs movsl (bad) xchg or xchg ret mov (bad) ja outsb pushf cmpsl push push outsb in arpl pop fwait mov ljmp adc lret jno dec pop mov out xchg in iret (bad) xchg (bad) pop iret test jnp enter pop fnstenv push idivb jns pop push pop nop mov lds js mov (bad) cmp sub push faddl mov ja aas out mov mov sbb ret sub stc ja or xchg sub pushf jne sbb sahf jbe (bad) sub sahf jmp adc push lds pop jp cmpsl jnp outsl or pop lods mov std rolb cmp push mov xchg arpl pop add push lcall pop push aas js mov int xchg cmp fisttp fnstcw das loope xlat xchg xchg loope push mov or mov ljmp sub xchg mov inc jecxz int3 stos fnstsw popa pushf rcrb inc cltd xchg subb ljmp lret jns inc shl daa sbbl cmp pushf int3 sarb lock int cmpl adc imul adc stc les lods gs es jnp xlat xchg fadd loopne or add push test sbb pop xor adc divl je jg loopne sub cltd mov jle movl fidivr test cmpl mov push mov sbb pop xor cmp cwtl aam in push movsl ss inc inc aas add lods test lea das int3 loop sbb loopne sbb dec and ficompl aas pushf or cmpsb push xchg lea cmp aaa push dec fildl push xor add sbb jb or push pushf adc lock rclb data16 xor (bad) cmpsb shrb negb jg jnp loope imul outsl sbb adc lds cmp push xchg cmpsb leave jnp push jne mov call rep cltd ficoml mov aas aad or add mov dec je lret xchg or inc pop (bad) and xchg aas loopw stos cmp mov aas data16 dec mov ljmp push adc xor lods inc arpl mov mov mov and pop je dec lret stos sub ja cmp mov into imul pop dec (bad) mov in mov jo mov xchg cs stc insl cmpsb pop cmp jns mov aas jno and lret loopne mov outsl dec inc sti mov ja cltd in stc (bad) lds std loop jl adc ja mov enter fstpt loope add es push mov daa jns mov nop test call mov loopne loope mov jmp repnz call sbb adc pop xchg in adc (bad) hlt aaa and (bad) outsb xchg and push xor rorb stc dec mov aas jp lret out xor fs mov lcall ss (bad) xchg into lcall push pop (bad) jmp ja mov aam jp mov mov xor mov push xchg dec fsts xlat andb sti mov add and fimul and inc fildll call out insb sbb sahf xchg loop notb and inc sub jns xor xchg sbb fmull xchg js push cli (bad) mov jbe add inc pop jge and sub (bad) jecxz addr16 or popa add cmp js push xchg add inc fdivrl icebp sbb imul mov fcmovu aas lock xor xor cli inc clc sub dec popa xor pop mov sbb arpl sub fnsave adc inc movsl dec sub jge call ljmp push push jb (bad) xchg adc pushf incb xor (bad) je cmpsb adc mov jl xor sbb xchg mov cmp pop popa adc sahf stos fcompl orl cs test or das adc lret in push aam (bad) lock pop add mov push lods aas (bad) sarl adc rclb push in xchg sbb mov add pop data16 sbb mov sub arpl std or cmp or mov rcrb mov sub icebp cltd or inc repz std sub test mov mov and (bad) mov mov inc out mov icebp rclb gs mov les (bad) ja add cld mov (bad) jmp or loop ds jmp lret cs insb push mov stos push mov cwtl repnz sbb rcrl pop imul fsubrs or push mov rolb add js sbb shrl int3 sub cmp xor inc sbb div cwtl adc sahf add dec mov fcoml xor sbb adc lods jae mov inc dec sub mov push mov movb mov jbe ret xchg cltd mov mov mov dec in mov mov pop jno incb pop std inc fwait pusha mov xor xchg sub test dec sbb cmp adc dec dec push add scas xchg mov imul fcomps xor xor rcrl fucomp mov outsl add add xchg pop dec fcomi and clc and add inc sub movsl jecxz xchg or mov in push loope jns cmp mov bound test jb sbb roll ljmp fnstenv jb xor mov faddl icebp adc into imul mov xor and sub fwait dec mov lea (bad) movsb stc mov data16 mov jmp xor fisttpll jne loopne mov mov lea push sub cmp cmpsl mov shrl or into mov mov cmp es idivb pop mov imul mov int3 (bad) fsub xchg shr aad push mov xchg xorl leave jmp test xchg nop test sub jle xor dec neg mulb and insb dec fsubrs ret mov loopne int3 lods aaa ja jmp stos sub inc (bad) jns (bad) cwtl cmp (bad) mov lock cli xchg int3 repnz pop rcrb dec inc dec roll icebp sbb mov orl cld mov fdivl adc cmp aad adc (bad) outsl jp outsl scas pop pop xlat and mov repz stc out fstpt push ss lock mov in mov jbe ljmp leave sbb jmp inc (bad) ficom xor mov bound (bad) cmpsb jmp popa pop ljmp sbb cli pop pusha sbb nop stos mov dec xor lea mov and stos adc sub inc popa hlt sub adc out fcomps int xchg mov xchg fldcw mov aad sbb xchg mov xchg loopne in push and int3 and xchg dec ljmp orb es stc dec jl ss ret outsb sarb pop lcall fcoms pop shlb lds push repz push je sbb in call scas (bad) xchg sbb xchg loope add pop notb pop jo es mov pusha repnz inc or insl repz roll std iret sbb clc jb xor push gs push cs hlt pop scas mov lods out mov lret daa insb xor sbb sti cmpsl or nop scas out rclb test (bad) lret lcall out rcrl je cmp pop sbb aam loop inc dec add xlat das popf mov pop fimull sub fisubrl cld and add cmp sbb xchg popl xor cmpsb jle aas sbb xor push flds mov scas push nop cmp cmp inc pop sahf mov in jmp lock das add mov push sub xchg mov fbld xor cmp dec add xor push stc sbb pop sbb lret cmp (bad) (bad) mov arpl push cmpsb mov pop out xchg and call hlt pop andb insl sbb adc cmp inc in sahf xchg dec orb loope mov dec and clc enter fidivrl hlt jno dec movsl aas xchg dec fwait mov loopne lea xorb fldenv push pushf clc in add xor pop outsl test cmpsl mov xlat cmp je push xor ret xchg mov (bad) lcall inc xchg test pushf fildl cmc clc test aam sbb mov out imul icebp push imul leave jb sbb mov or hlt stos dec stc cmpsl sub push xchg mov lds jp imul lds test dec rcll ljmp (bad) popa mov add push adc test and mov ljmp push pop sub stc mov mov flds xchg aad sub jns sti imul and cmp push cmp cs jg push outsl mov xchg fs sahf ret jae pop sti sbb cmp rcl mov mov cmp fdivl test xor repz inc jno jmp add lret adcl cmp aad xor repnz inc stc cmp and aaa ret cmp lcall sub sub xchg adc aaa stos adc xor dec xchg sub jae fsubrl add (bad) loopne ret and aaa mov mov xlat enter dec mov test cmp inc (bad) setb inc cmp ja jae ficompl mov int cmp hlt sbb stos dec jb out test and pop dec sti xchg daa or aas cwtl imul je xor out pop add and fwait pop sub inc pop sub pusha lcall icebp dec xor ret andl jns fstl jae movq mov inc push pop mov ret adc testb pop arpl jl shrl imul scas push ret jne (bad) cltd push fldcw or mov data16 push jmp push add test sti rcrb test (bad) mov sbb adcb mov clc addr16 dec xchg dec lea mov add aas xor and mov and push in lcall adc movsl es (bad) fcomps in jp leave lods loop jo data16 xchg popa (bad) jecxz inc inc aaa pop cmp dec xor pop add scas push mov push push xchg (bad) adc (bad) sbb popf (bad) into mov mov enter adc fisubr jo pop cmp insb cmc pop mov jbe add jae jae adc mov xor adc scas pop mov sub jno mov and xchg fs jnp mov lcall sbb jg repnz and bound loope fiadd mov mov and sbb lret in rorl pop orb dec dec push sbb ficoml in jge out ljmp mov pop adc mov cmp icebp dec clc xor pop lock fistl outsl jno scas imul pop arpl (bad) jo cmp xchg push sti jl add inc pop addr16 lcall dec iret outsl xlat mov (bad) dec push sbb jp adc push jb push repz push mov sbbb lcall lea imul sbb scas jne cmc testb and addb subl fcmovnbe int out cmp adc (bad) lods js inc stos mov mov mov sahf stc sti push adc sbb pop out mov xlat cmp aas push cmpsb cmp cmp andb in cmp mov orps push mov push in push fwait (bad) pop jecxz aaa imulb mov fcom mov clc xor rorl test adcb in pop inc push bound loopne cs mov dec rol jns pop push push movsl call xchg mov sbb fisub or dec sub xchg sahf pusha fsubs jg sub xlat add dec fs lods das popf sub inc and test outsb das inc mov cld mov lods pop imul stc cs xlat and leave test xchg jg in sbb adc mov jecxz in push jno pop add mov add adc pop sub je xchg fcompp jne push aam nop in jg sti (bad) (bad) shrb xchg pop push sbb jb push popa inc jl les cmc or jo imul lock arpl mov cmc xlat fiaddl test sub mov fisubr add inc or ds inc adc jne sub (bad) cmpsb mov cmc push jnp cwtl pop outsl pop mov rcll xor rcll bnd mov imul loopne sub sbb fcos jno int mov mov adc loop lds lds or std xor cmp out test adc ret sub divb adc repz jnp inc fsubl clc shrl sub jae and outsl loope pop push sub xchg nop pop jp clc sub int adcl (bad) (bad) aaa mov jbe mov xchg inc fs mov push inc xor xor mov je scas ja adc arpl (bad) std call addl add out push jg shlb or add out mov xchg dec pcmpeqb inc pop aaa add roll std les and xchg mov aam (bad) jno das cwtl test lods mov xor fild push cmc lods dec jle imul test scas lock out cmp xor mov int3 push lret lret mov cli addr16 decb in cmpsl bound (bad) xor arpl mov and xchg xor test add rolb stos jl add jge jnp hlt inc popa (bad) mov je cli push mov xchg ret dec or xor jge orps xchg call aaa and dec and pop inc js mov xlat mov (bad) popa loopne inc mov shrb or push (bad) xor aaa rcl jno repnz insb addr16 cs cmp jo andl adc icebp xchg mov fisub cmc jae adc es pop pop lock sub pop in test mov push inc sti rcl lods into fldt shl rep das and mov mov add push mov movsl lods adc cmpsb repz jo xor mov iret inc xchg add shlb pop jg stos xchg imul test mov jne push dec rol loope jns in xchg pop jecxz xor (bad) pop push dec xchg scas notb and pusha push aas mov rcll sbb mov rcrb add pop mov inc push add test and lcall aam std aad mov test mov ja hlt leave dec into mov ja aad (bad) aas lcall test xchg stos cmp dec mov sarb push pop cmp adc sub (bad) divb sub mov sbbl inc sbb inc bound sar mov xchg inc popa pop dec mov fiaddl gs xchg ja add imul add xchg daa or adc test or cmp mov sbb xor sub inc mov out in or repnz test pop mov jne push das add xchg cmp inc xchg lret cmpsb pop mov pop pop insl pop push jo imul pop mov pop xchg mov dec add push mov cmp pop and mov xlat dec lret mov pop decl out mov add or mov aas repz divl xchg fs push mov xlat rorb and and out out mov dec (bad) pop pop sub lea jg xchg pusha roll mov pushf ljmp in out (bad) std jecxz cs push test jne mov inc mov inc xchg sub (bad) jge rclb xchg loop jnp pop sti enter imul data16 movsb xchg aad jg mov or outsl sarl in pop push repz enter adc sub add cmp aaa (bad) pop stc fs fs rcrl jnp push push jg mov jecxz,pn jbe dec and pusha cli les lahf adc jl push imul int pushw dec sbb mov lods (bad) push sarb or jmp xor data16 pop xchg roll push rol dec mov or (bad) ljmp inc adc adc in jne rcrl adc std sbb sub dec lods loope and lret divl movsbl jl add mov xor pop pop jle int sbb call sbb outsb jge mov cmpsl jecxz outsb rcrl imul (bad) mov cli addr16 (bad) mov dec les cld sub jecxz outsb cltd mov add xor fdivs repz fsub dec jb pop mov scas adc inc fsubrp ja fnstsw add xchg or push (bad) xor inc stc sub popa enter mov lea dec sub and jmp stc stc (bad) in dec jmp enter pop or out ret fisub lods mov push cltd add stos daa (bad) xchg nop cmp insb outsb and xor in mov push rcr jl in imul mov (bad) jb fbld xor jecxz and pop (bad) hlt or lcall pop in aas dec imul out jmp inc (bad) jae (bad) cmp jp mov xchg cmc add jb jae js test mov pop fs test mov or (bad) xor mov into (bad) sub or fcoml pop pop cwtl imul cwtl jle in or pushf divl pop mov cmc cmc jb mov or fwait push and lahf (bad) xor js lods sbb mov in inc (bad) jne ret sub push jp subl dec mov in adc pop mov fsubrs in inc jl sub hlt out fldl loope and out cmp mov sub inc scas sbb and add jp jo rclb jns inc mov push cli test mov aas aas pop pop fwait add scas insl jb adc adc adc pop sti outsl lret repz and rol mov inc imul int repz mov in dec add sub pop mov mov mov (bad) adc sbb pop int3 stos imulb (bad) jl movsb jnp and hlt sbb js ret pop sti (bad) or jns cmp mov mov sbb sbb adc notb adc bound fcoms jle aaa addr16 or inc add sub repnz (bad) addr16 dec mov (bad) cmp jmp add adc ja mov push push dec inc and ds (bad) aad jns pop mov and cltd js fdivrl inc mov jmp lret in mov sbb cs sahf popf ljmp push inc adc and or adc movsb push sub shlb cld jle ljmp loop jo je jecxz roll test sub ljmp scas in or out adc bound (bad) aas (bad) push stos (bad) fucom push ja (bad) dec frstor push loop pop mov lcall adc mov insl mov stos or cmp adc mov mov stc sarb fsubs sub ljmp inc rcrb xor cmp sub leave loope pop xor add call jnp aaa fbld sbb fisubl subl fwait pusha hlt sahf pop testb and inc adc pop icebp fstps sbb pop add jne jmp sbb lods or shrl outsb lods pop or (bad) jnp or mov or popa aaa icebp retw ret jne push addr16 push mov sbb idiv and push (bad) insl pop dec mov inc and pushf sbb jl lret (bad) cltd sarb call xor add cmp xor in pop fimul out movsb xor sbb dec outsb jmp and and inc mov and jo add ljmp adc hlt pusha scas or xchg mov enter and mov les dec jb xor leave clc lods (bad) es out and (bad) fdivs mov jp (bad) and fidivl jb insb test inc clc clc cmp stc aam cmc and dec dec js or lcall xor js outsb sbbb jne xchg sub sbb mov outsl int3 pop popa ja xor push pushl dec scas (bad) ficoml mov and and jmp inc outsb mov dec pusha mov hlt test mov out mov lock divl jae mov dec push in jb (bad) fnstsw push jno out imul loop movzbl loope xchg push push inc movsb out add and test sbb ja sahf and dec call (bad) lock dec jge cli pop and and jno jg sbb xor fs mov add ret outsb adc lret jecxz and insl pop aam add pop sbb dec mov inc lea pop add xchg mov ss fucom test and lcall xor movsl outsl mov movsl cmp lock out (bad) mov pushf dec adc pop and sbb sub or stc daa cmp xorl mov jns push popa jns int andl and test pop repz push lret jo sbb arpl push std loope push mov dec ret and or xor sub pop xor mov dec lahf mov mov jl jb into and aaa mov test sbb sub cli jge sbb mov repnz ljmp xchg xchg lea pop negb or cmp dec sub andl pop pop notb inc pop add dec mov push mov mov mov jbe lret or sub vmwrite je dec lea push or and inc mov mov sbb xchg fstpl jl notb jmp cld dec call cmp or mov jmp nop jl (bad) repz stos ss pop xchg mov xchg fwait andl sub es pop inc and push push push push xchg pop push outsb push jl and dec mov mov cs call cmpsl push fildl add inc cmp cmp inc ja cmp arpl rorl mov scas mov out (bad) sbb mov das cvtpi2ps or dec pop leave cmp repz adc add xchg mov gs fdivrl cmp pop arpl push aas sbb pop call roll data16 mov inc xchg dec faddl (bad) inc push sbb cld dec aaa dec aaa mov cmpsb hlt xor push mov jb dec mov pop fs cmpsl aad int3 outsl dec dec frstor push and call jecxz mov popf lock insl push lods lret dec iret clc pop popa xchg sub pop mov (bad) movd test lahf mov or enter (bad) ror pop and (bad) and xchg imul psrld sbb mov lds arpl ret mov test jo and jne xchg outsl mov add in imul sbb push adc or out mov sbb loopne lret fmull jne adcl loop fucomp xchg fidivl pop in xchg pop xchg in test notl pop ljmp mov pop lods sub push cld mov push leave fwait dec mov movsb lods dec push into pop xchg sbb icebp push cmp in adc mov sub sub sti pop push mov movsb repz pop sub mov sbb mov sub cmp jb leave inc cmp sbb insl jb notb sbb sbb (bad) xor push mov inc push pop cmp add add lods in and leave mov mov scas jmp add xor icebp fldl jl cmp push mov ss out rclb repnz fldt aas popa ss sbb sbb mov cmp clc xchg ror outsb add pop fcoms pop sub (bad) lods loop ss and adc scas rep inc orb cmpsb jbe loop sbb lods adc dec test aaa in jo scas ds sti call xor push lret shrb call mov lret hlt cltd dec clc push adc add daa sbb cwtl aas sbb addr16 mov push pop fs dec out push mov pop sub sbb jnp cmp xor jbe cltd addr16 out jg iret jno stos mov sbb enter pushf out dec dec scas adc (bad) outsb sbb lcall das lock cmp cmp iret lcall iret add sub insl fsts add jo loop xor in test xchg lcall fcoml cmp cmc dec stos scas orb push mov aad pushf cmc enter dec stos sbb mov add js push adc mov data16 test (bad) and add pusha popa outsl arpl dec dec movsb js fcoms pop das repz test xchg lea adc icebp dec std add pop inc in loopne push lahf inc insb xchg icebp in nop jb mov inc ss jmp sub cmp inc sub mov cwtl (bad) jno ret int lcall movsb (bad) aaa imul cmp out jle push fwait push mov push xor stc mov call das insb xchg movaps push in repz negl outsb mov insl cld xchg and sbb xor xchg pop inc cmp xchg bound test jge xchg xchg xor and or adc adc lock clc (bad) push push scas pop rolb and insl lea xchg repz inc in sub xor mov xor add loopne ss popf dec add jg xor lea jp sti js push pop test and jl inc es scas jge pop imul sbb push cmpsl dec ja sub pop inc fnop xchg sarl cmp or je mov in pop cltd adc imul mov mov aaa pop jb push jge xor push pop push clc sub cltd mov pop cld adc jo jp add pop arpl jo sub xchg cmc jns lahf xchg stos nop mov (bad) xor pop (bad) rclb shlb stos pop loope data16 inc and popf rcll leave mov lods jae hlt xor xor (bad) xor fmuls lret sarl (bad) out push aaa cmpsl pop add in mov fs repz pop and adc movsb call xor aad hlt daa xchg mov adc imul xor mov adc je imul sbb test cli call push sbb cmpsl inc dec das mov (bad) pop (bad) mov lret inc push xchg hlt dec xor jge jno or push or in adc cwtl mov inc inc mov scas in mov repz pop loope les mov mov pop and cmp sbb (bad) mov stos mov stos rcl dec inc mov or cmpl mov dec cs xchg imul jo xor pop icebp loopne sbb xchg mov add pop fmull pop pushf push fidivl ja outsb jne add idiv insl outsl xchg or call repnz adc mov mov mov arpl cs sbb mov xchg jb cmp xor mov imul push fidivl and jmp mov sbb pop jb mov bnd xor xchg aaa inc or and and (bad) imul (bad) test cmp jb or aad scas jle idiv cmpsb mov pop stos mov int push xchg inc mov (bad) sub ret adc idivb xchg (bad) and out sub xchg into popf ss iret leave and ja add jp jle xchg int dec in mov add dec cltd mov orl mov dec dec or arpl pop int3 mov out mov push cmpsl mov mov cmc adc mov mov lock mov in mov jns xchg ds arpl fdivr fistl push adc or xchg pop sub sbb lret insl and movsl and andl arpl jle push xcrypt-ofb cmpsl insb mov jne inc add fild popf pop cmpsl xlat cld push (bad) imull (bad) xor mov jg or insl out out ds dec cmc xor shrl sarl sbb insl out and outsl test fdivl daa inc lret movsl incl out cmp xor outsb arpl (bad) mov push dec pusha into neg cmp and mov insb pop sub sti pop out pop dec bound (bad) or jg (bad) xchg fdecstp or mov jp pop pop lea movsl call pop call jns lds and scas sub jae fisttp push pop pop and dec jg lods jecxz mov arpl enter es test jne gs shrl and fcmovb je pop out arpl out mov mov cld jne adcl sbb and mov daa adc cmp stos test jns adc sbb pop jecxz ret xor testb in sub rcll adc push repz int adc mov dec repz imul or fcompl xchg scas ret jne lcall fildl inc fsubr xchg mov push jnp (bad) jmp pusha pop jge sbb xchg push mov xor mov bound jmp and push xchg mov inc push add ss xor (bad) xor or std pop adc mov lock test rclb fst out sbb incb lret cmp out in cmpsl push fstpl xchg jmp push sarb jp or dec int3 cltd into jle negb lcall sub fstpt cmp sti push jl pop push pop push loop loop rcl in dec lahf xor es gs or fwait inc or in adc subl xor xlat mov aas xor cmp or sbb shrd cmpsb xchg scas mov add mov fcoml das sub cs jae and int jmp or je jae arpl dec bound xor push push add ret inc (bad) jge movsl push adc mov pop or jno jns jo push inc jns mov test dec stos inc out (bad) in pop shr or adc push lods pop pop cmp lea pop jb add or pop daa or xchg mov pushf or fsubrp jb pop les sahf cltd cmp test xchg xchg push mov stos inc sahf or sbb test lea in adc mov lods iret jmp add not (bad) and inc mov fisubr sub xor scas adc daa in fldt cld xor mov mov js cli pop ss out in adc or pop aas test std dec insb repz mov (bad) mov test stos jmp stos mov xchg jb sbb out jl pop insb jbe popa jle jb out mov sbb or fldcw xlat adc hlt pop fcmovne or icebp dec jae (bad) (bad) jo xor daa pop or enter rolb popf jle outsb inc gs dec mov daa push outsb clc call mov out add movsl mov pop adc dec push and ret lcall xchg cmp cwtl xchg in outsl mov into jl xlat jbe adc movsl sub add push pop and jbe and cmpsl xchg sbb addr16 lret xchg xlat mov jle jp rorl jl aaa pop leavew movsb xor xor or call out xor not sub test push (bad) fldenv or rcll pop dec mov inc pop ds mov (bad) popf test dec enter add or xchg cmp push (bad) or call cmp push xor dec sub ja push inc xchg (bad) arpl fcompl and sub push mov imul test lret lock mov mov inc loope push push shrb mov sar fwait adc xchg insl cmp xchg std adc bound jecxz xchg (bad) or lret or mov ja scas or daa inc in jb mov (bad) aam cmp roll xor addl push mov adc adc les test adc cld jbe lcall sub dec mov add xor (bad) jnp mov lcall sub dec mov sub (bad) sub jo push scas mov scas les aad outsl push xor xchg jge ss inc and adc (bad) fdivl and jmp mov pop repnz pop and (bad) repnz xchg iret fiadd add cli (bad) add stos mov xchg mov adc jae je adc mov loopne test sub sub sub sub cli (bad) dec push or daa icebp cwtl sbb (bad) push movsl bound sub add push fs in pop movsb cmp out xchg subb dec ja push dec mov stos pusha imul push mov jle push xchg mov addr16 popf flds cmp xorb xchg jmp cmp adc fbstp popa mov and xor pusha in fisttpll aaa inc repz je push faddl ja dec or out cmp (bad) jbe loop mov push mov fstps test or jae pop fdivl xchg cmp int3 cs and xchg into and lcall sub jb sbb aam jbe aam mov out cmp fnstcw mov or xchg stos cmp xor sbb repz xor out les (bad) idivl inc outsb pop push sub scas cs add and enter cmp sbb ja jne jo sbb push fcomip dec test cmc pop rol pop leave hlt in rclb orl in mov xchg bound imull mov add push (bad) leave inc aad dec or js nop cltd xor pop ret sbb jne pop jno test push das pop inc pop xor mov negl xchg dec fwait pop sarl xor sahf iret repnz push sub in push jg pop mov imul mov fs test mov add lret lret (bad) mov repz call jg mov add sbb jo jno lret xor jl adc ljmp mov or inc data16 adc cmp ja push pop mov stos xlat and dec jo cltd je xor jmp push pop or out lahf inc jge fwait inc (bad) pop mov loop lock dec push imul inc ss ret cmpsb scas push or mov cmp pop sbb pop ret popf fnstenv add mov xchg xor daa mov xor pop inc lods sbb lods add int3 lcall test sub adc mov sti jecxz xor adc int3 xor int and fwait mov popf mov add cli jg jmp inc les fdivrp hlt xor pop out xchg rorl pop clc add lcall pop testb aam (bad) inc test xchg mov adc jmp insb sub (bad) pop jl dec sub push push (bad) and mov cltd outsb push mov xor xchg and sub add arpl lret push ret inc mov cmp cmpsl add mov loop sahf jp mov out jbe std out pop insl (bad) xchg repz push fst or pop out or fisub dec xchg loop jae (bad) pop mov shlb test aad aad sub jl (bad) xchg aam in cltd aaa and xor jne jmp push out inc outsl cmp mov push jnp jg in fmuls dec push cmp repnz into ret pop cmpsl adc and out mov dec dec or mov pushf (bad) mov stc push repnz mov dec mov (bad) stc push xchg cmpsl sub rcll push stos icebp push scas push outsl jp cmp cmovb sub ret (bad) cmp sub and aad cld pop mov into decb sbb add std scas pop xlat daa addl outsl iretw test les aad jno popf enter pop sub add mov cmp or fdivrl cmpsl shl mov pop add fld test xchg push dec scas inc sub lret push jne scas xor dec mov lock aas and dec mov mov pop fdiv cmc cltd or lods xor push push jmp rol sahf stos inc push inc mov adc movsl xchg test sbb addr16 cmc or sub int3 push jmp ss and push push dec std cltd dec push cs jb pop ficomp dec fs (bad) xchg mov adc in inc repz sarb cmp rol out les lds pop fwait jae pop push testb cltd jmp not sbb out mull cmp sub mov daa leave lds jb loopne xor mov (bad) xchg int3 sbb sub aas pop cmp dec pop mov jo es push fisttpl ret mov and clc aad add rcrl push mov pop out movsl adc outsb mov movsl and dec mov push cs and aaa jp fcomps insl mov (bad) notb adc std repz xor pusha ret xchg dec inc fldl add jns pop pop mov loope cmc imul mov cmp adc cmp xor sub movsb or das pop enter gs jmp add jle in lods test push cmp push cmp add sbb mov cmpsb jp adc jecxz inc movsb lahf sarb xchg mov lock fs sahf rolb lds mov daa pop std jmp fistpl xchg push ds mov sbb lds xor lret fcomip fidivl sub adc xchg ja sbb (bad) fs jg enter pop jmp cmp cmp ss and or mov adc bound bound das lods into imul out xacquire mov pop ds pushf outsb fsubr insb insl hlt rorl add fwait lahf aam ror sub loopne cmp outsb sti inc jmp stc adc push mov (bad) dec sub nop stos xlat and jp cmpsl lret jne imul dec repnz shr pusha add dec lcall xor pop loope stc test in mov add mov int adc sbb cmc xlat pop push sahf mov (bad) pop ret test inc inc ja cmpsl mov aam xchg jae fcmove lock add mov loope scas dec jns push movsl or ja sbb mov sti fs inc inc faddp push aam pop cwtl pop jne jbe jle andnps dec or jle cwtl dec ds dec dec icebp add test (bad) xor repz adc push scas outsb push pop push dec inc cs lcall mov sub (bad) aam loop dec fs sbb and test lea xor cltd xor sahf int3 (bad) jle xchg cmp add (bad) daa xor dec ds push (bad) in fdivs sbb cli cmc dec jns push jecxz rorl dec inc push add rcrb outsl push inc mov pop jmp repz scas inc mov clc (bad) jb iret js das mov inc repz lret mov (bad) mov mov ret pop icebp xchg and paddusw mov out cwtl pop addr16 push sbb lods add mov jmp push je jae ja push push (bad) je pop int push cmp jl loop ja mov push ja ss jno sub enter adc mov enter ficompl or add stos cmp and and pusha push sub icebp push test or push mov movsb pushf cltd bound xchg repz sti and sub jae inc fs mov in xor test and scas jg popw xchg inc aaa loope xchg (bad) xor pushl xchg mov or add out mov jp daa xlat inc scas lret dec or mov fmuls imul mov ja and in jmp fidivrl std adc outsb test sbbl push dec add cld ss daa (bad) test jbe data16 iret push cmp jle shrb faddl and enter adc xchg aas add dec jnp xlat (bad) shr cmp xlat mov adc cmp jge sub xlat push and dec cmp fcompl es enter aaa xchg inc mov add push and fstps sub pop gs loope inc ror push mov and adc lds rorb dec roll out imul inc pop outsb in inc nop mov fiadd mov (bad) jae enter mov xor jge jae out fs pop mov xorl cmp pop lcall push jp call cli aas cmp cmp or daa lcall or pop mov pop lret imul xor fisubr jbe jmp pop inc das mov (bad) push data16 lret jg lods pop mov stc mov jl stc shrb or jmp not movsl inc loope push fistpl mov mov lahf mov lret cmpsb cs jp and addl fistpl shrb inc rcl test mov dec or gs lcall loope rcr mov xor daa (bad) push std jae add push fucomp or adc xlat xchg shrl mov fwait std pusha sbb in loopne dec inc outsl mov lcall xchg add arpl or jb push mov insb out orl sbb sub outsb jbe cmc fidiv inc xchg sbb (bad) ret rol pop into repnz mov or in fcoml xor pop pop pop fnop pop adc push fmuls or mov cld jp das into mov cmp out pusha jae adc fucomi sti dec aas xor jle inc or loop lods jge sbb mov xchg pop sbb cmp bnd test out mov xlat and xlat jmp daa and dec mov iret cmpsl sub test js addr16 imul mov adc int adc pop lock pop call inc ret mov mov and ljmp insl lods inc (bad) jge test shr dec pop mov enter adc std xchg mov in xchg test rcr dec or jae repnz in test or dec imul ret xor ds (bad) xchg pop cld jb mov and mov mov xchg sub push fcmovnu or add xchg inc push add call adc (bad) push cltd xor (bad) (bad) in imul adc adc xchg push sbb je push ss inc jge mov jmp mov push or cmp jnp je add (bad) movl popa in sub mov or xchg ret int in dec in mov jb and xchg and adc ss mov hlt push out gs dec adc add and cmpsl xchg into in jnp mov push sub leave sbb cmp push popf lods dec push or jno dec das (bad) (bad) out iret xchg mov add movsl inc mov xor mov lcall lret and (bad) mov in shl out aad mov jecxz cmp pop test jnp xchg and inc pop gs (bad) loope adc or (bad) cmc mov leave iret mov fxch ds cmp sbb pop loop inc aad push sub adc ficoml adc (bad) (bad) pop divl (bad) xchg outsb sbb mov fcomi inc xchg jecxz,pt inc ljmp lret dec cmp lahf inc and or xchg cmp xchg arpl jno rclb mov sti int sbb mov neg dec movlps adc imul sub mov (bad) jmp push mov pop (bad) mov mov xor (bad) frstor add into and adc decb inc (bad) (bad) out out pop aam mov lret pop fwait lret fsubs les subps repz push stos cmc lea insb add xchg inc pop inc mov dec mov in ljmp xor jb test sahf pop cmp jecxz cmp dec and push cmp fnstenv mov push pop out cmp push stc jnp pop mov (bad) lock js push jae sbb sub pop pushf dec mov xchg xor lret loop bound dec push insl je add pop xor cs out and or and fdivrl out pop int3 mov jae jmp mov movsb lock in cmp addl inc sahf es and push inc push pop fbld pop dec hlt cmp add cmp pop dec sbb push push cltd xor pop insl lahf cmp or mov ficoml and push adc sti sub fldt mov in mov popf movsl and das mov subl sub les mov cmp out pusha dec out leave out (bad) inc xchg push sub jno stc pusha icebp gs orb in xchg lods js xchg rorb push jb js push mov loop push nop dec (bad) pop fbstp or jb jmp loopne push push (bad) and (bad) mov or popa push (bad) in mov jns insb leave stos scas jecxz sub pop xchg sub mov xchg dec sbb out test hlt dec cmp test xchg test pop lahf test mov clc aam lds in mulb lods pop mov pop cmp stos js push scas imull adcb sub ljmp cwtl insb xor sub and jmp movsb ss je iret adcl xchg lds jmp lret mov mov push movsl arpl xor inc nop push pop jg lcall inc or arpl sub mov sbb std sub in or fidivrl enter or es mov xchg mov (bad) mov jg fwait stos outsl add int dec and repz or add orl mov sbb ficom sub rcrl jg sbb repz ljmp push rol addr16 mov inc and or (bad) xchg (bad) fldl outsl push cs mov xor push out cmp lods ja mov movb sbb mov outsb cmp neg dec mov in adc outsb xor jo pop daa ljmp in add pop test push adc xchg cwtl arpl sub add (bad) jo jbe jo adc adc push stos and dec sbb pop adc arpl and stos dec pop sbb jb adc pmulhuw pop lods mov pop sbb outsl fcmove stos mov imul pusha addb ja fiadd adc fwait pop xchg cmp pusha ret out lahf mov adc cmp enter jp and or mov dec daa repnz flds insl fldt fdivrp push orl pop icebp jbe fwait outsb scas imul sbb dec in aad fstps ss (bad) or lret aam fstpl pop stos pushf hlt fsubl cs cmp aaa push xchg fs jecxz das add (bad) repz xor arpl lods mov std push cmp fbld xchg cli add mov (bad) das pop lret pop cmc fs in or and xorl movl outsl adc adc pushf cmp or leave mov call cmp leave sub bound push movsb cmp (bad) jno cs xchg xchg xchg xlat jbe subl cbtw xlat jns aad or cli sub enter daa in fs jle das je lods jb and pop mov das add xchg (bad) mov in out xor sbb sbb jnp aas mov xor or ret push jns in or xchg test std out test fldenv push imul sub mov mov mov inc outsb adc insl xchg mov ds adc call mov fs fnstsw (bad) push or cmp loop push add dec rorw inc jns insl leave (bad) jbe lods adc iret dec sbb sub jb add jne cmp xchg out je add and rorl mov (bad) enter (bad) jns add loopne dec push outsl dec ret or scas stos or or pop cltd (bad) pop add mov (bad) subps scas shl jle out in movsl fldl out pusha (bad) lret fidivrl pop mov mov ret outsb jge cltd pop push xchg call sbb xor cltd outsb jl dec mov sbb xchg adc dec ss das sub cmp outsl pop mov dec sub xor add rcrl xchg out gs out imul xor fwait es push lea aaa xor or and adc adc dec mov xchg adc pop cmc loopne imul (bad) pop sbb or adc lahf jecxz movsb and iret adc fs mov scas into inc mov adc push inc add ror xchg cltd lods and inc cmp adc or cli ja add xchg imul jecxz stc iret sti mov js add cmpsb stos cmpsl xlat sub mov and (bad) lret adc xor dec mov adc lret and sbb aas and xor or mov cmc aad fs das movsl push pushl lcall repnz and cmpsb in cld jle fadd inc adc sbb or add mov push scas fisubl mov lret sbbl sti (bad) in xor int mov jno,pn xchg mov in mov inc loopne (bad) jb jbe xor jge pop (bad) into sub jae movsl pop sarl (bad) or ror popa inc mov sbb mov or test hlt bound iret inc insl sub in xchg jle mov int push xchg pcmpgtw xchg push daa in push in pop mov in mov test mov cld jmp dec push adc in inc mull push repz add mov in cmp ds mov stos dec xor mov ret leave stos xchg adc test std imul mov cmp mov les iret (bad) stos push push in dec jge jg push sbb cmp imul xor imul mov add xchg xchg imul inc (bad) movsb pop in xchg hlt pop fistl mov jno mov mov jp jne and mov mov jbe dec mov test jbe cmp out loope dec mov jle test inc sbb and mov shl mov insl insb dec iret fbstp xor xchg sub fwait cmp nop punpckhdq repnz cmp les aam and repnz loope gs aad test jg sbb test dec push add das mov sbb pop jbe cmpsl mov jp sub pusha out mov inc into movsb jl or xchg adc insb fidivr icebp push cmp cmp ret decl cmp (bad) int not shr call les ds pushf pop or inc call sub inc mov and (bad) int3 xor dec ja pushf push out sub addr16 sbb add sbb cli add aaa jle ds jmp jp adc mov sub mov in inc inc cmp loopne stos mov in jns stc pushf or inc nop sbb daa leave sub inc int insl sub cli clc scas push and ficompl fsub (bad) cmp push cmp cmp inc iret in call ds adc popa xchg aas cmp std add lds ljmp push xor mov outsl push pop xor and cli push test mov mov cltd mov clc ja and in call lods movsl and shrl daa lahf mov inc dec int3 add push push pop ret int and jnp mov lahf fiadd or int3 mov add shrb sub ja ljmp inc jl xor add (bad) cmp mov ret xor gs fistpl xchg stos dec fisttpl pop rcrb insb adc pop sub mov lahf jg jmp dec into lods jmp lahf mov lcall cmpsb mov mov sub pop fwait mov popa (bad) decl jno int imul out popf das pop test mov (bad) lcall pop mov lcall std iret jg mov add cs mov imul add sbb fldenv pop ret test lods xchg sub out xchg mov push or pop push jl jmp push jbe jb sbb stos fnstsw xchg sub sahf dec sbb xchg add in (bad) lahf divb cmpsl cmp in hlt in mull cltd dec pop mov sub pop sahf dec xchg cld adc lahf mov xchg pop insb test fstps pop push jae sub cmp sbb lock or mov mov notl fnstsw push negl into rorl jnp sbb fisubl mov sub xlat pop or daa cmpsl mov and (bad) mov loop aam ds push movsl imul xchg jle in enterw cmp jp mov gs push pop and fwait sub test scas sub and mov outsb les int3 and stc cmpsl (bad) and outsl and stos scas fucomi or out mov insl add cmp adc addr16 ss mov mov jae dec adc pop mov jnp or push adc divb add lcall pusha xchg push push and jbe icebp aam inc mov hlt insb ljmp cmp add test pop insl jbe pop or jg sahf and pop lcall scas add sub inc cmp adc xchg (bad) into mov iret fwait add scas addr16 mov xor jo mov stos lcall nop jbe fadd lock hlt add das repz nop xchg mov adc std add jmp daa imul adc push adc add mov xor cwtl std (bad) cmp je push cwtl mov pop dec jmp movsl ljmp dec jecxz sbb mov push movsb mov adc ja inc mov mov push add (bad) insl jp mov nop xchg mov dec ja mov sti sti mov sbb inc imul inc jp push sub mov cmp or push mov xchg stc cmc xchg push sub mov cmp xor jno jge dec mov ret rol std or cmp dec mov adc rorb add les cmpsl lds bound shrb pop test fs push dec pop mov xor jle add xlat xlat jbe jecxz ret pop xor or sub mov repz test (bad) loopne les ftst sub adc imul inc mov hlt adc lds mov or push popa jmp popf mov out push loope pop (bad) jge,pt jp push in dec test in inc inc adc jae pop mov (bad) call out out jmp (bad) mov das mov xchg xor lret or pop dec in and adc mov sbb pop shld jae sbb xchg jle mov jo aaa sbb or iret ror sub (bad) lret sub sub scas adc mov jge jmp rol aas xlat sub dec shrl (bad) sbb test cmovb mov scas (bad) test or ja out cmp movsl or cmp add insl mov or sub push imul dec jg mov outsl js mov gs dec (bad) cmp pop leave test jmp mov les or dec mov hlt orl inc enter add xchg lret pop mov mov imul fucomip fcom fnstcw push lret pop dec xchg push xchg mov and pushf loopne lcall add pushf clc aas lods and inc fidivr and dec push lret mov push loopne mov mov pop inc mov pop test lahf bound int3 jnp sub pop pop int dec scas js fs adcb mov lds into mov in fisttpll insb mov dec lea movsb push cmp sahf add jno or mov test icebp add mov cmp mov ret mov fs cld xchg pop repz out test test sbb jg cs inc cli int3 bound cmp hlt leave jle fucomip loope icebp cmp xchg nop dec decb mov xchg daa mov movsb lock test in cli stos add sub dec cmc xchg pusha loopne cmovb pop roll push insb (bad) and xchg insb fimull xchg or repnz popl ds enter sub ss sahf frstor dec fadds pop test call ljmp jge push sbb inc mov repnz jmp test dec pushl sbb pop sub add ss push jne push lea rorb in mov in enter cli pop gs mov das sbb (bad) lods movsl add mov mov popa mov inc pushl bt xor mov call add push pusha mov lea jmp jmp lahf lea push jmp xchg jne ret inc push pop sub pop fistpl ror daa xlat xchg sbb pop aad sbb push repnz inc scas outsl (bad) nop dec mov add loop inc lea xlat cltd add dec cmp cmp cmp add fldt xchg or add xor aaa loopne inc mov mov dec and pop std (bad) orb mov fnop pop ret sub les mov xchg cld jbe (bad) xor cld lea sbbb cwtl fwait ljmp push in push add lret inc scas sbb inc enter cmp daa cmovb jns in or fs and icebp out pop pop mov cmp out inc mov (bad) (bad) mov add mov sbb test mov insb push jge bound gs xchg hlt leave pushf popf in mov mov mov mov xchg push imul inc aas arpl lahf cli (bad) dec sub stos add dec mov pop ljmp insb fildll aad ljmp jae adc daa mov adc lret push xchg adc stos sbb pushf pushf xor dec gs inc fadds cmp dec clc not cmp neg cmc jmp lea jb cmc movzbl or dec call movl push pusha push lea jmp stos pusha lea cmovb insb mov push add inc andb dec adc ss push in dec (bad) mov daa dec into or inc dec popa lahf jno xlat pop mov aas cld repz and js sbb cmp imul scas cmpsb pushf mov or int or push dec ret add jno insb or (bad) in adc inc mov xor inc fsubr (bad) test pop shl pop mov call inc lea ficomp negl add or adc and std or int3 adc loopw movsb push sub jmp add dec outsl popa fs imul add mov mov inc shl mov cmp cmp jmp push sub inc (bad) loope adc in call adc aam or jp adc mov pushf adc out jns jge push kunpckwd xchg jg push fcoms xchg or out popf adc jb adc repz inc shll dec mulb pop jle mov xchg sti into out aas adc outsb inc pop test js jl or mov add loope push cmp dec lods push xchg mov push jmp movsb xor in sbb jno add sbb jmp cmovp imul dec dec or mov sbb xor lea mov neg lea shrd dec or mov (bad) lock sub not stc jmp mov call rol dec mov pusha pusha pushf test shl jmp lea je cmp cmp pushf call and sbb rcl mov clc (bad) lock (bad) setne pushf add call pushf movl movb mov mov pushf push pushf pushl ret cwtl pusha mov pushf call lea lods sar bt push cmc neg setge movw inc movzbw inc shl shld cmc neg bswap pushf dec not shr not stc sar neg call rol cmc or sub pop call mov bt clc pushf cmp cmp mov lea jb and shr or mov rcl mov bt cmp cmc stc shl jmp lods jbe fsubl cmovb sub push lret xchg or dec jno sahf cmp dec dec adc and jg out dec and lods movsl divl lret cmp xor jmp adc push push push mov cmpsl int3 push andb push mov cmpsb jns jo sarb mov pop lods jae enter rcl xor add bound cmp cld and xor test jecxz adc in add push add repz lods mov hlt or jo fwait loop (bad) stos enter adcl dec adc mov cmp xchg in pop das xor mov add jg rcrb push xor mov and call xor inc mov mov lahf movzbl pop pushf mov call mov setb not lods jmp mov stc mov test movb mov cmc cmp jmp pushf sbb mov call xchg xchg xor inc and repnz inc xor inc dec inc rcr or ds mov lock lods sbb sti jecxz (bad) (bad) xor ret cmp ds dec js xchg pop sbb mov hlt push adc xchg adc mov (bad) aas js dec pop fcom inc cmp sbb and sub xchg cmp nop xchg push pop xchg clc es mov lea test loope push lahf dec jbe jb arpl pop or sub jge out mov or in xchg cmpsl push push lods cld push cmp sub test fildl inc xor add lret sub test bt mov clc ror mov call test pusha pushf jmp cmp cmp mov push jmp or arpl scas iret sbb test or test fdivr sbb inc pusha or movsb mov in push or dec inc and stos andb fcomps mov mov jmp hlt push fsubl repnz in int push mov push sahf xchg out lahf xchg xchg mov and and mov xor divb cs (bad) movsl xor xchg (bad) jb jge icebp icebp mov pushf sub daa sub imul enter push pop in add repz jmp hlt push fmull inc int imul lock push aam jb rol divb je sbb add xchg jae jnp jbe pop into in push call mov cs inc xchg or mov xor lret xchg jmp inc cmp movsb pop lcall xchg add adc push xor xor test fidiv push imul shlb dec lods pop rorb mov sub cmp out add out lahf mov jne mov je clc add stc cmp pusha movb pushf lea jmp or lahf or cmovb iret int sti fldt pushf mov xor in popf inc or hlt orb data16 dec sarb xchg jbe rcrl andl xchg xor stos sbb loope test loope sub push aas ja jp cmp mov aam mov shrl ss adc mov test adc sub xor aas icebp and mov adc push push loope sbb inc lock movsb hlt adc bound xlat xchg fnstcw inc inc mov hlt push sbb data16 bound jns push mov insl pop insb jecxz pop test arpl cmpsl fwait (bad) adc and outsb iret call stc sbb dec mov mov jecxz,pt popf cmpsl add jge sbb or xor popf fwait sub out sbb aaa sbb (bad) int fsts iret dec cld and test xor inc adc popa inc inc and mov add pop jno lock mov push aam ds mov movzbw (bad) repnz stc sub data16 repnz xchg mov bt mov push jmp lea movl pushf lea call pusha mov push pushf lea jb rdtsc shr bswap movsbw movzbl data16 repnz movzbw imul test add lea test test setno rcr push sar rcl shr mov push mov inc mov shld shld xor and mov test clc pushf cmp lea jp pushf lea jb clc movsbw aad xchg mov shr sbb cmp not sar add mov neg bsf add inc add movsbw not setb cwtl movsbl pushf pushf lea jmp mov cmovb std jge (bad) repz out fistl xchg adc pop lret rolb mov rcl cli lcall lods pusha sbb cli rclb dec mov mov add jnp insb add mov mov adc (bad) mov mov rsqrtps dec dec pop jbe fsubrs jb popl mov push push adc orps cld out mov add or pop in dec int3 outsl cmc dec mov inc mov cmpl ret les call loope cltd or add fsubrl negb sbb (bad) (bad) (bad) cmpb in xor mov cli adc shrl sbbl xor orb cmp xor lret cmp insl gs add xchg mov std scas inc lret ljmp mov (bad) repnz or dec xor ss mov loope js add mov fdivp jne pop repz cwtl lods das mov gs fcomp push sub add outsb lcall mov or cmc daa mov jle jp icebp popa xchg push cmc cmpsl int fmuls lea setns mov bts movsbw shrd shr push mov rol mov test bts pushf mov pusha pushf cmp pushl pushf lea jb sbb lea shl shl mov sbb jnp neg not sub bt mov cmp add push movsbl jmp pusha lea jb pusha pusha call mov rclb loop ret hlt mov and mov dec xchg jb sub mov cwtl jg cmp stc cmp sbb ret dec es dec dec mov xor in jp iret lcall stc or mov repz out mov cmp lret test fadds adc pop lock sbb loopne sbb mov in cltd mov ja inc enter mov addl test pop mov loope lea call clc bt cmp pusha pushl mov movl sbb cmc clc lea pusha bt mov btr xor mov (bad) icebp sbb lea pushf add pushf mov dec sbb not not xor test inc test add seta call pushl lea call pushf mov adc pushl lea jb cmp cmp push xor sub cmp test not push call cmp lahf lea movl movzbl lea movsbl jmp clc mov stc test cmp jmp push test push call shr pusha adc test stc test pushl sub call pushf push pushf mov jmp add sar mov movb pushf push test mov lea je pusha cmp bt stc sub bt movb cmp call call test push test xchg and add pushf xchg pushf lea test sbb pusha mov or stc setno neg not neg rcr cmc add seto setns not not rep lea mov movzbw not not mov jmp add cmc stc cmp cmp movw lea jb clc cmc cmp push pushf mov mov lea jae pushf neg mov xadd clc ror mov jmp call lea call pushf add movb cmp pushf cmp cmpl push lea jne cwtl setp lea call pushl adc pusha pushf pushf push lea jae stc movsbl rcr ror pop pusha add mov cwtl and ror xor mov shl inc pushf dec cmp not movl movsbw mov mov jmp pushf jmp sbb sub rcr cmp or mov bt jmp mov cmovb fwait mov sbb add scas aaa jmp pop das pop push aas xlat sub imul pop frstor push fnstsw (bad) pop ljmp int3 push mov or dec cld mov clc loope cmp bound fdivp iret aad xor out add mov mov mov cwtl cmp out loopne cld out xchg or xor out inc mov js fistl js ret pop jecxz es cmc push in mov jns ror aad or push stc cmp mov gs insl call cmp bound pop cmpsb imul gs sti sbb sub stc dec jne loop cmovb (bad) jns sub jb mov cmp rorb clc out fcoml fildll cmc pop std fcmovb lcall dec mov pop cmp sti dec iret xchg (bad) and or cmp add xor arpl xor lcall cltd inc jmp push in jb loope xchg xchg mov hlt push je rorb mov jge add fs cmp mov cli mov setne jbe push mov jb cmp cmpb push lea jne jmp mov push lea jmp inc pop int xor inc inc sub xor or cmp or xor jl hlt cs lcall mov imul push jecxz repz out es xchg jns xor pop ficom mov mov push dec aaa dec mov dec and pop out add std jecxz (bad) sub mov adc pusha jmp cmp mov popa shr sub test into addr16 or gs popf push sbb clc js clc pop mov push mov ror out mov push sbb mov pushf jmp xor (bad) xor inc cwtl repz arpl inc push inc mov add imul mov inc scas clc insb inc jmp mov out test jle inc add xor ljmp popf jl icebp or (bad) dec addr16 mov iret xor (bad) int jne adc aas out loop das movsl fisubl pop mov xchg mov jo sbb jmp mov xor jo jae es test xor mov jecxz xchg (bad) or adc aaa jp cltd jns jo dec xchg stc sub pop shl mov push xchg imul jo xchg cmp scas cmp int mov mov jg test pop cmc sahf je push sahf xor ret mov mov shl lea call adc sub jne mov sub pop pop ret cmp pusha pusha push pushf lea ja cmp jmp jmp lods mov inc cmp sti jmp adcl shrb nop mov fs cs stos aaa inc movsl imul push pop or fnsave dec jle sub lods sub add and inc decl jecxz sub test and fsubl daa (bad) stos dec inc dec adc lcall push and stos fwait mov rcl ja loop xorl stos dec jns ljmp int3 ss sub cs jecxz popf js push lods sub jae push fsub imul mov mov test cmp mov lea jmp mov xchg xor inc dec imul or jo and push jp push in push in mov ret dec add pop dec rcll jecxz cmp mov into add mov mov insl pop jae xor mov push or jnp inc mov push int adc inc cwtl cld cmp pop jmp cwtl test lods cs push xchg fidivrl hlt in xchg dec xor rolb ss adc and cmpsl lahf adc mov lea lcall fsubr or cmp inc (bad) jecxz sbb in ret (bad) faddl mov push xchg adc add add test pushl pushf pushf shr call clc sub (bad) cmp inc cwtl repz std cmp mov fcomi stc mov scas push cmp push scas in bound ret subl xchg add mov or xchg movsl xor rclb lret aad xchg adc fist mov popa add sbb xchg (bad) aaa add add mov test testb lret and (bad) into xchg mov mov sub mov pop lds int3 push (bad) je push nop das lea popf sub xor notl lret iret lock out aam push dec popa cld push and push bnd shlb loopne into inc push fs jb pushf bt xor stc call pop fwait push sub push mov pop in loopne loop movsb pop movsl push rorl push popf (bad) pop xchg mov movsl inc push mov mov xlat pop fwait cli dec mov push shrb movsb lods mov add (bad) mov xor dec cmpb mov lcall leave mov mov in and sbb sbb (bad) sub push push mov jecxz insl sub cld js ds xor mov movsb adc int cmpsb adc or lea loopne add xchg icebp cmp addr16 mov cmp cmp sbb inc popf cmc ret push mov icebp sub sbb cmp aaa or mov and popa xchg call or fldcw xchg sub test repz push dec xor jle xor push cmc dec push daa mov fldcw les or xor dec push (bad) pop pop fidivr stos mov push jmp stc add ss or cld push sti xor lea mov sub lock js mov jg lret (bad) mov mov movw lea jmp mov jmp add cmc pushf rcl cmp shr bsr shrd xadd mov add bsr and add pusha push movzbw pushf mov call lea pusha lea jmp mov cmc test pushf lea js je cmc dec not add dec movzbl stc shrd mov clc jo add test stc cmc mov call xchg bswap setb movzbw lea pusha pushl lea call push call pushf mov call dec pushf clc not clc pushf movw neg call mov pusha movsbw rep movl mov lea pusha mov not pop lods cmc neg movsbw pushf inc call jmp jb and (bad) adc mov clc dec (bad) jle loope (bad) stos inc les negb cmpsb mov leave mov and nop cmpsb out in fadd movb mov mov insl out pop sarb push xorb xchg imul fadd (bad) jo ljmp loope dec loopne call scas cmp (bad) int add loope out add jl,pn ljmp fsubrs mov insl and xchg adc popa or scas test movsl inc fsubrl push movsb fldt scas out sbb adc int jmp loope outsl repnz cmc ror cmpsl addr16 fmuls imul adc dec mov es add or loop addr16 ja ljmp add inc mov roll lret outsl call xchg jmp movsl insb cwtl adc cmc xchg inc sahf sbb add adc call punpcklbw in pop cli and stos pushf lea call jmp stc cmc repnz pushf movb mov jmp sbb xor mov bt call sub mov pushl push cmp pushf push mov pushf lea jbe adc mov clc add btr add add sbb btc mov inc call jmp test jmp insb pop jecxz mov inc rcl aas ret ret shr xor aad stos or inc mov mov mov xchg lds arpl div dec adc cmc sahf js xor loopne mov jo mov jmp and or daa fisub lcall or xchg add incl bound andb insl mov adc out inc cmp mov cld xchg (bad) and jp cmp enter test sarl pop sahf sbb push add cmp adcl add push movzbl movzbw mov lea jmp jmp cmp pushf cmp add bt jmp pushf jmp pushf test cmp pushl lea jae cmc pusha add pusha push lea jno mov pushf pushf pushf pusha lea jmp pusha mov pushf pushl movw pushf lea jmp int3 ljmp and or mov in lret or push mov popa xchg xchg test xchg mov out push repnz aad xor xor push fild xlat loope aad jnp pop push incb xchg das lret popa outsb xchg push jbe ljmp lcall adc test out mov test adc or sar bound xchg push jae cmp mov or mov (bad) std inc movsb jne cmp push jb push add sbb popa xchg jo sbb cmovb in push mov inc mov adc mov push push movsl pop cmpsl or sahf loop inc dec and in fisttpl jns pop add jb outsb xchg mov dec lds (bad) mov nop dec adc aam mov lea out addr16 fcoml sub ja push cwtl pop mov pop xchg daa mov sub inc popa mov je ljmp addr16 mov stc pop mov mov dec iret xor mov lret xor mov ss inc push inc add add pop or sbbl fmull fstpt dec out pop inc out or cmpsl mov icebp push dec out push repz inc int3 dec fwait inc or sub mov mov adc pop lahf rclb add rorb fdivrs add enter push imul jb pop andb lods push mov cwtl inc ret push or test aaa loopne clc out (bad) (bad) add dec adc ljmp push es mov sbb xor or movsb nop sbb or aaa (bad) cld inc stos (bad) (bad) shrb stos dec mov fstl mov jl jle js test lret jbe call leave stos or stc lret stos movsl inc inc fisubr add dec mov fstpl popa fldl xchg jle mov (bad) imull or pop ljmp rcrl inc mov test bound gs outsb push mov push shlb lret xlat iret ja ret std popf stos (bad) test adc test mov jg inc roll (bad) sbb test aaa cwtl loope lcall dec xor ljmp add push or aam enter leave in (bad) dec aaa cmp je pop mov inc or push mov mov imul bound inc sar pop push fdivrl cmp xlat popa sti dec leave outsl je xor fsubs loope aaa ret repnz scas inc pop cmp xchg lcall sti fwait pop loope divps mov movl andb mov sub sub mov mov ja lea daa jmp dec mov into add fnsave loope add fdivr xchg lods cmp out lea movb aam rcrl and cld repz xor nop enter mov pop pop pop fnsave cmp mov mov insb out out mov jae push cmpsb add out fisttpl xor out and cmp dec push or sbb mov pushf into adc dec enter inc adc jg fstpt adc loopne imul stos mov mov pop ret xlat adc icebp aam cmp pop ja shl xor push pop push cmpsb mov cmp cs gs pop bound cmp in cmp into into add lret les fmulp out fisubr mov out cld xor cmp insb mov lock in push fcmove mov (bad) dec jns (bad) inc inc mov lret sbb testl inc pop sbb popf iret dec sahf outsb or arpl adc ret call push imul xlat popf int3 cvtps2pd bound aaa push rorb dec or cmpsl add sbb lods dec cmpsb shr xchg inc and leave (bad) mov ja sar cmpsl push js (bad) or addr16 mov fdiv iret or sbb push mov out sub add sub pop cmp jle mov scas outsb mov pop iret cld xor push bound add rcl int3 inc arpl cmp pop dec xor xchg pop xchg sahf in std jb popa sbb xor out (bad) divb in adc fmuls and xor stos gs fisttpl test fs pushf pop mov sbb incl rcrl or in xchg xchg adc data16 lahf mov mov out lret insb dec xchg xlat jno cltd pop arpl popf punpcklwd cmc pop inc repnz (bad) cmp sbb fxch fisttp mov notb jle adc dec std pop sahf mov daa js rcrb inc cmp fsubr xchg inc std loopne xchg aam pop idivl rorl adc jno int3 ja add cmp in (bad) data16 jne mov mov insl test cs add ljmp jbe loopne jae mov mov out push jecxz push in sbb test push mov fistpl cmpsl test or push adc hlt imul hlt push lods inc icebp xchg xor loope sbb andl cmpsb sahf nop fwait pop xor jp imul cmp xchg push mov and adc xchg xchg jb pop arpl nop (bad) bound ret add mov pop daa out adc xchg sbb sub inc xor xor in pop (bad) in mov loop jp xchg push std dec adc loopne sub pusha adc flds fildll test lret xor xchg mov mov test (bad) jae pushf cmp add adc inc aad aam xor movsb enter cmp call imul add inc loopne jge sub inc stos inc push xchg jne jbe push out scas mov (bad) mov jno add (bad) out popa jno xchg mov sti (bad) add cmp xor test scas es and loopne arpl mov push mov sti lret add mov xor test ret mov dec and test cmp jl test jmp stc (bad) xor add fisttp xor (bad) insl sahf (bad) test mov or out lcall jne inc or mov mov mov ss cmpl fcoms data16 jo leave jmp jnp (bad) cmpsl iret sarl xor sbb sti idivb pop out xlat imul mov mov inc sbb mov arpl cmp bswap adc data16 movsb mov pop (bad) xchg std xor cli cmp scas aad in mov xchg push cmp cmp fisubrl (bad) (bad) jae jb loopne mov into sahf outsb sbb int3 mov dec cmp cld sub (bad) popa mov lahf mov in mov sbb sti test mov xchg (bad) mov lds icebp mov sbb push sbb and adc add pop icebp mov fs or fdivp outsl add pop dec mov fwait test int add ret out cwtl not test mov iret aad fisttp pop pusha out repz cltd pop stc shrb ret shl mov jne and lods jecxz xchg push (bad) imul adc dec push mov ds test inc inc xchg (bad) frstor inc push sbb cmp add add cld aam (bad) push pmaddwd test test pop adc mov xchg sub loopne add cmp pop lahf mov enter je push sbb out inc and fs push cmp fucomp cmp mov pop mov cs hlt mov ss add pop mov decl add cwtl leave inc cwtl ljmp insl je sub add fcmovnu add ja loopne inc inc outsl xchg dec fstpt in repz sbb inc xor pop jmp insl scas or ret mov push lods stos test test mov and jmp jge fs (bad) je xor out (bad) lret and scas add (bad) arpl (bad) inc jnp in mull cltd call inc sub hlt lret mov mov mov add and je scas sub fdiv pop cmp or fisttp xchg clc or sub sbb sub pop ja aad pop xchg push sarl nop and subl (bad) push pop imul std (bad) mov lods cltd xchg push and push loopne int3 les fnstsw cmc js leave fldt mov mov into cmpsb loopne xor out sti insl pop mov test sahf int3 sub xor mov pop mov ret push mov and rol xchg jmp adc cmpsb mov nop xchg jg xchg popf cld xchg cmp sbb scas xchg (bad) rcrl mov adc mov mov lahf jno jg xchg shll bound mov fdivr (bad) jae fcomps (bad) fldt loopne mov sub xor xor sarb cmc cmp das ss ja pop jg jbe (bad) xor nop (bad) xor jl mov and jg and mov js insl push (bad) ljmp in pushf jbe pop addr16 repnz out dec pop notb (bad) lock and dec and push add pushf sub mov cmp dec insb cmpsb and les nop int inc (bad) jo xor dec jnp jmp sbb clc lock cld mov jge and imul movsl repz fnstenv mov je sarb arpl enter out cmp xor add cli mov test inc in sbb and iret fwait mov sarl jo iret andl orl lock mov lahf sbb pop fwait loopne repnz popa push fnsetpm(287 mov (bad) jbe mov sbb and mov movsl cmpl and repnz push or aas cmp cs insb xchg rorb jb cmpsl push call fsubrp mov fidivrl mov ss es xchg pop mov xlat aad nop fadds loope clc mov inc jbe mov push cmpsb repz cltd ljmp arpl jmp dec add xor std loop daa add and inc mov xlat insl lcall outsl xlat xor mov insb jb gs test add mov mov leave scas mov mov mov mov shlb cmp mov push stos es fwait idivb (bad) adc in repnz ljmp rcrb cwtl out sarb es pop subb mov cmp push push cmc xorl push imul inc shrb xchg add sti jns push push adc sbb ljmp dec inc in mov (bad) xchg mov push in push inc (bad) and or test cmc and add sahf inc xor inc repnz lahf int adc push push and xchg cli sub jecxz pop cmp dec clc nop sbb sub cmpsb cmp mov adc imul mov inc lret push pop sbb xchg xchg loopne cltd xlat hlt movsb fwait (bad) (bad) int3 (bad) jne in outsl add cltd push mov mov (bad) aad in repz es pop xor jp xchg out ds out je xchg add lea daa sti or cmpsl repnz jo mov and jns std lds xchg inc jne and in and leave mov (bad) jnp test cs into nop jl push and scas imul mov das push (bad) mov popf pushf sbb mov mov and ret xchg xchg and mov pop sub adc (bad) fs nop movsl (bad) arpl jbe add rcrb popf xchg or xor cmp movl sub test and (bad) pop cld sbb int3 push mov adc test adc sub mov test and neg out xor dec dec mov (bad) xor shll add lret fsubrl shrb and xor sub insl mov das adc sarl sub adc das sub push invd sarb mov push and test pop cmp std sbb push cmpl mov pop sub lret add dec mov push pop jns test in pop in (bad) jo push cmpsb mov (bad) idivl jge mov stc hlt (bad) mov out xor mov int jl pop fcmovbe in mov jle sub imul in loop into sbb cmp push mov adc mov push stos into push outsl repnz mov inc jnp jne stos and mov cmpsb fcmovnu or cmp imul mov jne aaa sbb jmp stos pop arpl mov insb in sbb jmp mov jne ds leave scas push insb mov xchg pusha pop push dec fisubr rolb adc sarl add sub das ret push pop mov (bad) iret popa lret je mov mov add fdivl pop push es scas pusha or (bad) jnp (bad) in ljmp sbb cmp fsubrs pop into pop push outsb push pop mov xchg mov xchg fsubrs gs repz and push sub test mov push out int jg inc cmp pop stc push rclb xchg movsl rcrb sbb push popl (bad) into pop icebp in shr jge add popa cmpsb adcb sbb sti xchg adc add loope and push sbb (bad) jb mov add jne into decb in in pop lods jns ljmp insb cs imul jecxz jg dec rcll mov test addl aam push jne adc sub and clc jmp psubd fmuls into or hlt and repz cwtl xchg nop and jp popa inc and adc test xchg or inc or xor jns hlt das or inc ss lock arpl lods inc mov nop rorl and and adc sub xchg or popa rclb in push pop in mov push (bad) cwtl dec ficom push pop sbb pop push xchg xor rcrb sbb call test movsb movsl loope or add dec sub push adc mov (bad) xchg sar sbb mov cmpsl out fld xor div sub mov mov in mov xlat mov or push xchg mov ret rol pop sub mov clc popf icebp movl and ficomp aaa lret mov dec loope mov movsl mov jl sbb mov sbb sbb lea jecxz mov cmpsl aas ds aad jo aaa lret sub imul (bad) adc sub sub jg dec in dec add lock notl pop std cmc xchg jno dec jno icebp cmp insl push daa and sub das lea inc jno fchs (bad) or push repnz add out push xchg dec xchg loope scas and cs (bad) push ret push inc inc imul lds dec rcrb xchg jb mov inc adc sbb (bad) inc adc push out call jge mov lea (bad) mov jmp leave (bad) cmpxchg sbb in xchg adc pop ret jl lret aam cmp jae fimul mov jle sbb cmp push jo and jp adc xchg das adc andl jb push lahf rcll inc repz push loopne jnp call cmp jmp add mov push mov lds inc in push dec mov lock inc lods jg es fildl xor and les lods (bad) mov adc stc loop rorl int lret mov dec inc test dec aam addl push pop and cmp movsl addr16 sbb dec or sbb xchg mov ficompl jne test sbb jns mov inc jge popa bound dec jns negb inc jnp clc xor cmc and sub add adc mov gs outsl sub sub cmc push data16 dec add sub mov sbb (bad) fdivl scas clc push in insb cmp aad mov enter sub in or sbb push rorb pop insl jl pop xchg xorl mov mov or test dec es pop fldcw sub sbb mov inc stos lret push lret es inc add mov adc sub iret aas test (bad) mov cmpsb jno scas inc arpl jb push enter sub mov add movsb lcall fbld dec (bad) mov ja aam jecxz adc or clc test push or sar sub add notb imul or negl aad lea loopne out out sbb sub pop jle adc enter (bad) jbe dec xor aad lock rorb flds sub cmc sbb mov mov and pop sti inc or xchg pop cld fsubrs insb and cmpsl or mov stos sub pop sub adc inc dec popa or fwait mov xor xchg lea and add mov add ljmp int ror popf adc mov enter and (bad) lret imul add push divl sarb adc xor fmul sub jp jbe imul dec pop (bad) xor aam fisub je xchg jg push add jp xor pop push inc test enter jns pop fwait hlt dec push push sbb dec inc or jbe loope lods or (bad) jp adc mov and lods repz loope dec data16 or mov imul aam pushf mov jae cmp sti jg fisttp mov in rorb call sti xchg jns cmpsb or iret xchg lods mov leave sub jae fcompl bound popf sub lret mov or xchg push shrb push mov jbe cwtl inc sti inc je xchg add mov add xor cmp arpl popa roll stc popa cltd insb outsl cmp mov or flds push jno push out mov sti inc pop and inc push nop not out call mov and xchg insl pop mov jge sbb je sbb mov mov js mov notb int xchg out sub mov adc inc jg fs das fisubrl pop jecxz ret nop jno xchg outsb outsb push mul repz dec out (bad) lock sub jo test pop fldcw add (bad) test xchg jae aam lcall mov pushf jle mov sub sbb rol lcall fs stos dec stos inc enter mov lods xor repnz (bad) inc push fwait jne loopne or in mov sbb add scas rcrl in dec fwait mov mov leave dec add xchg lock pop mov out fadd mov adc or (bad) jmp and cs scas repz les fimull dec (bad) (bad) lock fisubr sbb cmp jb mov mov insb repnz imul arpl jmp xchg or (bad) push dec mov jge adc andb jbe or push ja fstp pop mov jmp cld push xchg push out push outsl test jno sti fist pop push test fwait xchg xor dec push insb cmp dec stc loop cmp enter add xorl xor inc xchg sub or fisttp ret ss sti ret pop in inc mov xchg sub inc hlt sarl jae test xor fs cmp pop lahf or cmp repnz xor jp std pop arpl daa mov outsl mov daa mov mov es cld shr fldcw popa stos repz (bad) imul sub sub les mov mov add out adc jp fdivl adc cmp pop lcall cli repz push pop jecxz js rcr ja iret sub (bad) dec je jge cltd sub or or pushf lock enter iret fidivr or sbb lea mov arpl je inc mov mov out outsb lahf (bad) icebp cmc in nop xchg int3 inc sub fildll pop stc (bad) out sub ss mov pop fnsave cmc iret pop pop les push jmp pop stos movsb sti inc mov gs (bad) bound jl iret aaa jmp push mov or lock add imul lret hlt stos inc mov xor imulb rcl xor aam mov dec stos out xchg clc mov pop fwait or test insb or imul ds mov xchg sbb mov je cmpsb clc xor lds ds pushf test jecxz setl mov sbb pop es int cmp insl dec sub bound sbb stos loopne pop fwait insb sub mov in icebp sti out push inc push into fcmovbe adc xchg pusha cmp je jns xchg sub sbb in sbb jnp cltd mov out mov roll dec pop popf sar mov js push les data16 lret stc lock fs jp add mov loopne test sbb cmc scas add sbb movsl cmpsb add mov sub icebp adc xor cmp cmp ret loop xchg daa lret xchg movsb ja mov pushf rorl inc cld mov bound lea jae sub bts mov xor bts btc neg mov shld bswap or mov cmc push pushf sub bt cmc repnz push push call clc call mov sar not shl mov test xor neg pusha sub test btr mov shr (bad) lock seto sub and and add setge pusha shl mov push cmp movl jmp out scas das pop cmovb frstor xchg arpl inc dec ja rcll mov cmp xlat xchg in xor jge notl dec add fdivrs adc in cld add outsl movd cmc test in pslld int3 push jno add jle daa stos (bad) loop pop mov sub push pusha jmp call push call movl pushl movl pushl pushf lea jmp nop outsb (bad) pop pop cmovb in (bad) mov inc jno (bad) (bad) inc lds out or and ror sub outsb scas sahf sub xor sbb nop sbb ret adc repz imul subb push call insl mov (bad) rcrl loop push call out subb fidiv addr16 push inc fdivl xor xchg inc ret stos or (bad) pop lods mov mov (bad) xor rcll xor push icebp dec mov mov dec adc xchg cmp pushf test cmp (bad) dec mov mov jp or ja daa pop or lcall mov mov push stos pushl pushl pushf mov mov mov lea jmp push pusha lea mov not lea jg push lea lahf push jb setnp push not jb push lahf mov jmp pop jmp add and or add add mov or add add xchg or add add xor or add add rol or add add push nop or add add mov or add add sbbl add add jae or cmpsl and add xor add movl pushf call lea mov lea jmp add inc gs outsl fs gs imul add lea add (bad) mov decl mov mov not pushf lods add jnp pusha add cmp neg call push not pushf sub call or bsf neg movzbl setle rol sub btr xor bsf setns bts xor movsbl mov mov movzbw lea jae mov push pushf setle pushf lods cmc stc neg lea jle pusha inc mov neg pusha lea jne push call add inc gs outsl fs gs popa outsb fs gs add popa push fsubr mov idiv bswap lahf movl cwtl jmp push movb mov lea ja pushf jmp mov pushf call mov cmovb inc gs xor cmc repz in fisttp or (bad) call cmp add inc cld sub sub jno out pop test cmp mov mov (bad) mov jg (bad) sbb test sbb sbb sti inc (bad) cs inc loopne insl in cmp arpl inc cmp push fidivrl sahf xchg (bad) lret sbb cmpsb shll out push not jp adc mov (bad) push ret mov cwtl fistp push (bad) stc leave lds (bad) xchg jnp pop xor call ret pop jp mov sbb mov xor sti or add add add add and or add add mov or add add xchg or add add xor or add add rol or add add push nop or add add mov or add add sbbl add add jae or cmpsl and add xor add pop inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub clc cmp pop mov out out loop sub stos or sub and std xchg adc lahf mov inc push test pop pop push or (bad) and push and cmp repnz (bad) aas and push das push das xchg jg add or cmp mov mov push push shr and adc flds es imul push lahf repz (bad) sbb (bad) iret popl fdivrs cmp repnz push xchg jmp lock xchg int stos pinsrw xchg sbb dec jo (bad) iret (bad) andb aas jecxz add or cmpsl insl loop test cmc leave out jae dec pop xor stos pushf and ficoml and das outsl lods lds bound mov sbb jo lea or mov in ret lds sub or in add ret dec dec pushf (bad) cmp nop adc pop mov divb mov cmp mov adc adcb adc (bad) lods dec xor cmpsl ljmp add loopne imul adc popa repnz mov jmp add daa mov imul or add dec int adc mov es rolb sub push mov add mov out repnz and lret mov and fmul push mov scas inc or jg sbb test aaa dec cmpsb inc rclb mov jb repnz mov es xchg test jg pop cmpsl sbb sbb xor xor pop jl sti xor insl movsb aam pop jbe adc stc dec mov andl imul dec add sbb pop xchg popf lret daa cmp add pop bound xchg xchg dec or cmp into pop cmc mov add mov (bad) xchg xor inc popa inc pop jno adc sbb loope das adc mov adc push shlb imul pop decb scas aas (bad) jmp mov jb addr16 dec and pusha (bad) lods sbb sub imul movd je stos imul pop push pop inc sbb popf pop bound pop sbb mov pop (bad) adc bts mov repz stc add jae ljmp arpl jns inc mov mov push fwait out mov lock enter scas lret inc repz xchg mov cmp dec lods aaa or mov sub and fdivs inc inc mov sub xlat out adc ret (bad) outsb sub out call into pop pop xchg inc adc jns in inc jae cmp pop sti pop scas in std roll icebp mov je xchg mov fist cvttps2pi aam inc add mov add xor out frstor mov test lret push mov mov hlt loopne outsb and rclb mov mov nop sub popa sub or scas sbb les ret sti adc xorb fs sarl lods push daa dec jge jge out aaa push test inc xchg push jns (bad) imul inc xchg jae jo into cwtl ss cmp insb mov loope andb jg push xchg jmp jg inc hlt or adc mov icebp pop test insl scas lds (bad) fnstcw dec test pushf movb jmp xchg movsb pop fldl jp,pn pop mov test mov repnz adc jp dec aad jne sbb xchg push xor call pop out or mov push dec push pop xchg adc lds adc scas pop push xchg fdiv in sbbl scas addr16 or jg fwait adc ss imul jp or mov push in sub mov cltd lods std data16 ds ja imul sti (bad) cld (bad) (bad) std adc jge jle cmp addl and movsl pop mov scas pusha lea jne bsr xchg ror mov cmp sub shld mov cmp cmp mov call jmp lea movsbl lea pushf push pushl pusha lea call pusha pushl pushl xchg call mov cmc cmp add pusha movw test bt movzwl shr or mov test cmc cmp bt add movb clc cmc stc mov pushf test jmp bt call jno mov xchg inc cmp xchg aaa jmp xchg inc movsl inc mov add fnsave out xchg adc mov dec in add pop movsb icebp add icebp out mov mov hlt xor cmpsb lds aaa iret push icebp push bnd sub (bad) hlt popf stos aad cmp imul push and lods mov sub int3 dec sbb std pop aad dec mov enter dec jae pop outsb loope mov cmp pop scas xor adc push in and sbb push call sub mov jb bt clc stc cmpb jmp sbb mov loop mov outsl inc mov lret jnp loope out ja out lahf addr16 and out jg mov pslld pop mov inc sahf adc mov add (bad) (bad) jmp iret (bad) mov sbb mov fstpl mov sar xor pop sbb sub sbb inc ret fmull lock sub sbb imul addl mov testb cmp fildll imul out movsl ret icebp cmp sub jle dec fs mulb stos lret jp dec (bad) mov cmp sub add movl and (bad) xor addr16 lea jbe inc inc jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret jo pushf movl push pusha movl mov pushl pushf push lea jmp lea jae cmc sub lea cwtl pushf lahf lea mov pusha lea call add rcl add pushf lea js dec shld pop stc sub pushf mov add jno clc cmp call out and sbb cmovb cli loopne loop rol hlt popf adc xor and cmp into fcomps test xor lds mov xchg add cmpsl inc (bad) and std pushf mov add popa loopne push aaa push adc enter inc cli cmp push pop push out pop shrb test mov je mov sub ret sub mov adc push sbb lret mov rorl xchg in inc jp adc mov xlat imul and jns lret jo cmp sub stos dec mov lret test push pop mov mov jb out mov inc adc das pop xchg mov lods xchg mov sub pop fcoml xchg fstl dec (bad) add dec popa cli sbb insb or adc xlat iret adc mov movsb cli out mov dec xchg ja and lret sub in aad mov mov test mov pop xchg jl cmc lea je adc mov jmp in mov sti adc jge lock xchg popf nop negl push movsb or es mov fs mov inc jge cmp (bad) gs add mov fs popa adc xor pop roll popf gs dec jecxz push cmp outsb xchg ds pop xor lret icebp (bad) jae mov and cld sbb mov sahf pop and test push mov mov repz mov ss cmc insl mov insl into sbb mov xchg lock or mov adc and cltd and dec outsl jb pop mov jne pop (bad) cmp dec les orb mov and add loope mov xchg jle lcall popa (bad) or xchg xor idiv mov cmovb sbb sub repnz out adc and pop jno push jo bt sbb insb cmp mov scas ret sub ljmp cli (bad) insl call js fucomp add mov lret push add test cmpsb push adc push out dec cwtl (bad) push stos rorb ds cmp push cwtl mov shll inc mov icebp mov cmc push dec ret (bad) rorb (bad) jl adc push cs sub push mov mov clc insb xchg cld (bad) xchg dec xor test mov pop push hlt push std sub aas sbb outsl aad (bad) jmp xor (bad) inc jo cmp sbb adc push jbe lcall ljmp test faddl push mov scas popf jl movsb je daa xor push xchg movsb loopne cld sbb inc mov push inc mov sub aad jg dec in es push jbe jecxz stos in les mov inc pop icebp mov ja mov (bad) jge mov hlt or test or je cmp (bad) neg or sub mov stc add lahf bswap setb setbe lea pushf pusha lea call push adc pushf movl pushl lea jb push bt bt xor pusha test jmp xor movzbw sub mov cmc add inc pusha setbe bts movl pushf shr shrd adc mov call pusha pusha jmp pushl lea call push sbb mov cmp push shl pushl clc add movsbw not pushf lea pushl pusha pushl call jmp cmp cmp or mov pusha stc repnz push call cmp jmp pusha movl movb pushf pushf pusha movl pushf pushf movb lea jmp add add add pushl clc stc sub movb movb lea jne cmc mov rol setne clc movzbw mov sub setp sub or bts push mov and mov clc cmp bt mov test pushl clc mov cmp clc call aad ret cmovb lret push lret repz pop testl sti pop jg lret dec subl jne mov mov stc cmc dec push lcall mov inc mov std (bad) lcall shrb dec int3 outsl cmc push test sbb sbb lret jmp cld fidivrl jno out adc sbb sbb xor pop mov test cmp icebp mov push scas cmc add jl lds xor mov lcall jne sbb (bad) in das lcall cmp call sti and mov inc stos shrl ja imul sub lret jl pop sbb inc or repnz ljmp mov adc inc cmp ds cmpsb inc sbb scas push dec mov and mov cwtl daa jbe fs jno movq lock sub pop je mov jno loop cld sub push shrb in inc pop aas sti repz cld dec mov lods aaa out stc mulb rcll jnp test lea push cs xorl push leave mov daa inc mov jmp sub stos sarl aad xchg movsb out movsb fidivr push aaa mov imul shrb inc xor xchg ficompl push mov es jmp data16 xor mov and mov adc in inc jns pop orl mov jge inc mov fsubrl cmp hlt popa imul pop imull mov mov mov fwait adc sti push xchg mov mov dec gs sbb inc icebp jae insl cmp movb lea ja push stc cmc pushf sub movl pushl push mov lea jmp lcall inc xchg fcompl sub push mov rcl sbb sbb and in jge sbb insl or inc add hlt fsubrp mov test fcomp dec lods sub stos add jno lods xchg out jbe (bad) jns inc movsb and jo mov imul sbb push pop xor adc push mov jae cmpsb (bad) pop pop push imul mov movsb dec jns mov mov cld mov xchg push pop sbb mov scas out (bad) (bad) cmp jge jecxz jo mov add out pusha mov dec data16 pop scas mov int inc jge ss imul std fsts pop aad adc int mov lock ja mov dec (bad) cmpsb je inc stos hlt sub mov and xchg pop mov mov lret mov shrb xor push push mov mov sub cli enter inc int3 sbb test pop dec lock out negb ja movsb pop push sbb xor adc dec add stos orl aas ret lea sub call jb mov adc push jns xchg xlat ja dec and inc sub and adc mov ss imul and (bad) adc and inc xor in mov xchg sti lods add mov lea mov rolb in xor and jnp out push lds lock hlt aas cmpsb mov mov (bad) cmp mov test hlt addr16 pop mov ja xchg (bad) sbb push std mov xor stos lret jae push adc ret fucomp add ret xor test sub outsb jp mov xchg mov inc lret mov (bad) fild dec sub sub rol push sub mov or shlb and jmp adc inc (bad) sbb std dec iret js mov xlat mov add mov pop jp outsb out jecxz je insb sbb or dec stc ficomp sbb fiaddl insl shll push mov dec ljmp sbb adc add out in cld in xchg (bad) and aam out and fimul (bad) aad push dec add daa addr16 xor icebp push cmp and xchg sbb sub ja cli dec mov dec sub fbstp sbb add fdiv (bad) jmp mov inc xor dec mov adc rol icebp mov popf jp push out insb sub jecxz pop out add insl or (bad) cmp jbe xor pop jg (bad) xchg mov fs cmp pop ljmp aas (bad) add pop cmp jecxz loop cmp das mov fsubrs int3 aam out push ljmp mov sbb nop jp imul xor mov cmp jl je cmpsb inc jne rorl mov push adc sahf fcmovnb mov test lret jbe test pop aas dec mov push and pop arpl xchg dec enter fisubl out inc pop (bad) mov push movzbw movsbl not mov pusha pushf pushl ret call jmp add push popa je inc imul jae add or sub enter bt not mov push pushf push sub push cmc jmp push dec call mov call add not mov clc cmp movw pushf mov lea jb btc push btc mov dec shl jmp add cmp add add add pusha or inc pop or cwtl cmp add pusha or dec pop or mov pusha or push pop or and or pop pop or stc or and add or imul or push add add add add add xor add or xor add pusha or js or xor add or add repz adc fistp cmovb sti popf and or and pop lods fucomp cmp daa jns outsl pop dec pop jecxz shrb and pop out lds or out sbbb fistpll xchg and mov out or fnstsw jns insb mov dec pop push xchg pop idiv cmc fwait mov popf sahf and test aam inc push cmpsb add mov inc sbb in addr16 push and mov aaa pop xor adc mov xchg cmp mov jo out jne xlat xchg fdivl mov or xchg xchg ds into clc jmp jmp cmp xchg adc rorl test sbb pop mov add add fwait popf pmaxub add jns les adc jmp popf fs mov pop xorb fisttpl rolb stos jns cmp or (bad) in insl or cltd push lcall lcall jb pusha mov sbb sahf ja push ljmp loop out mov fisttpll sbb pop and cmp mov inc xchg test pop idiv mov mov shrd sub mov cmp bts mov push clc pushf clc sub call clc add movb lea jmp stos pushf movb lea jmp sub jns push cmp shl test bt push add pushl sub mov lea jne push mov lea bt clc mov bswap jmp add test neg cmp mov pushf not stc push push pushl sub stc bt cmp bswap movzbl lea jmp lea mov lea jle pushf lea call lea push mov movw xchg pusha movb lea jae jl lea mov not lea pusha pusha pushl push lea call call lea jne pusha sub shrd or mov movzbw rcr rcl btr mov shl bsf xor cmp mov jmp jmp bt add bt movzwl cmc movsbl mov test stc cmc pusha add test pushf bt call mov jmp bt cmc test sub pushl cmc shl cmc mov jmp call btr mov test pushl test pushf lea je bswap inc add shld and shr (bad) cmc pop mov jmp lea jb sar bt and mov call test or mov push movb lea je sar bsf add clc and sub sbb call xor cmovb fwait jae (bad) dec (bad) push inc test mov xchg fcoml cmpsb sub jbe (bad) out xchg dec cmpsb imul cltd xor pop jns enter inc les xchg lea js or mov sub sbb pop sbb in out out add xor mov push icebp jmp inc bound mov push cmp jne sub mov pop mov sbb shll mov into inc jmp jb aas jp (bad) dec or mov push das pop lret mov push addr16 dec inc dec dec xor cs insb add cmovb jnp cltd imul dec lods lahf aas adc cltd mov iret fstpl push xor and call push add enter fs imul jle out int3 sbb lret jnp cmpsb adc add pop cld pop cmp (bad) xchg addb ljmp test shrb test fstpl cmp cwtl pushaw pop cmp movsb inc mov dec fwait ja add sbb int lea mov lea nop or add and outsl fisubl movsl out shrb mov sbb movsl in push mov dec in movl idiv xchg insl mov cmovb nopl fsave leave dec in in mov or sub inc aad mov nop adc scas (bad) cmp lods out xchg push jns cmpsl dec xchg enter fsubrs aas adcl jl cmp and (bad) lcall inc js outsb loop push add add add fisubrl loope xchg ljmp jmp or jmp adc xchg repz add push cmp fwait push cmp pusha data16 jg test jbe or pop daa fdiv pusha inc mov pushf xchg (bad) dec movsb jle cmovb jecxz icebp sbb dec leave add jge pop add int3 inc mov (bad) push stos sbb mov mov jne mov lods push fnop mov lret xchg gs mov or xchg pop dec in imul cwtl pop add stc sub dec insb dec pop das imul cmp cmp adc cmp push call xor pop and lret lock mov (bad) sub dec inc cmp pavgw inc mov push dec fmuls mov scas sbb inc stc jnp push mov lock mov lock xchg out sbb mov je cmc gs cmp add imul imul dec jge mov lods cmp rorb imul pop xchg gs adc lret ds fndisi(8087 cmpb and int3 mov insl push jnp cmp mov rorb mov fcomi pop dec sub movsl mov rolb int3 inc js push add dec int3 popa test dec stos stos sarb (bad) add and jb out imul push out outsl int clc or push jne xor mov loope nop pusha hlt arpl sub call call pusha call push lea jb cmp test cmpb pusha lea jne rcl dec mov clc add pushf movzwl shld add mov pusha add test test mov mov call jb call cmp clc cmp pusha mov jmp sbb dec not sar rcr pushf bt mov xchg add bswap bswap not movsbl setb jmp mov shl sub aaa push mov bts sbb sub xor and shrd bsr mov push clc shl mov mov movb pusha lea jmp mov jmp repnz call cmp lea mov pusha pushl mov data16 repnz jmp xchg mov pushf movzbw pushf rep not not mov setl jmp jmp cmovb daa out cmc adc jno aaa cmp mov scas stos mov push enter es (bad) pop mov push xchg fwait fwait pop cmpsb or adc xor mov pop scas fidiv fmuls std add addl pop push jb popf test lahf icebp iret inc aaa aad and gs pop je sub mov xlat xchg cltd hlt jmp lcall loopne lock mov int3 dec push jns pop inc insb jecxz mov jnp dec jae or hlt sbb mov lret and mov push and xor bt mov jmp pushf lea jb aaa rol dec movzbl dec or shr lea btc ror imul bt lea cmc push pushf mov bswap mov jbe bt mov stc cmp pusha pushf call mov push pushl push lea jmp jmp movl pushf pushf pushf pushf lea jmp xchg lahf cmovb popa mov sbb pusha xchg decl cmp cmp jge,pn aas and and es fstl pop movsb xor push or push es mov cmp sahf push dec movsb xchg insl sub and sub sarl xor xchg mov pop fnstenv jmp adc adc js aaa and adc mov fwait ss dec mov jae xor lock ret data16 sub inc idiv movl call pushf lea je movsbw pushf pop lea call add mov call add pop ret scas mov mov add cltd test imul xchg xorl or sub mov cmp mov cmp leave cld pop popa mov push cld xchg and imul in fwait mov ret insl push lock insb (bad) pop (bad) sub jmp fs xchg stc cmc lods cmp pop aaa mov and push mov adc xchg enter enter popa jg les mov mov pop dec aam notl lods push scas lret movl or sbb ret and cltd cmovb push outsb les and add int adc push stos mov pop xchg cmp scas das iret sub mov imul xchg and bswap mov sbb arpl ljmp adc test pop loopne xor test pop xlat aaa int3 in jle loope outsb out add cmp cmp and sbb jle fsubr aas cli cmp imul outsb scas sbb xor cmp or mov or push cmp mov (bad) (bad) in and jg fld cltd (bad) (bad) pop jno popa outsb pushf rol ret and sarl lds repnz mov pusha push lea jne or shld mov neg bt shl sub jne bts sbb bsr mov cmp test sub push push pushl popl stc cmp pushf lea ja stc push sub pushf pusha lea jmp jmp lea call push jmp mov cmovb and pop push jp dec mov pop pop lods pop addr16 idivl xchg adc inc call popf insl int cmp xor iret sub xchg mov pop es jle in jo imul lahf repnz fidivl fimull jg and sub xchg (bad) push mov xchg fisub popa cwtl loope call inc nop std stc cmp push fldpi jb jl pop (bad) and test xchg and push sub push aas shrl mov (bad) mov fwait cmovb mov lahf (bad) incl xchg outsl xlat cmp (bad) adc mov popa std out and cmc xchg dec lcall stc sahf test out cli out inc iret jae test adc mov loope (bad) fwait push xorb xchg sarl mov mov xchg or cmp mov cwtl sbb adc dec test mov adc adc outsb sahf (bad) lea in popf xchg jle test xlat sbb rolb in push cmc in push pop sbb std pop sbb jb push pushl sahf movsb pop pop mov sbb (bad) ret ret push in xor imull dec orl sar in add movsl cld pop mov and test cmp lea jmp and pop lods lea jmp mov pusha not pushf push lea call and cmovb popf jns sub cmp popa sahf in sub xchg adc fisubrl movb daa je repz movsb repz dec push xor mov cmp xchg xchg loop and stos inc insl je mov in mov cmp jbe sub repnz xchg jl popa push inc in hlt int cwtl int3 cltd insb out es xchg pop addr16 in sub push jg fwait loope xchg or add in popa sbb inc xchg test data16 adc loopne xchg adc and push test in xchg test dec mov mov setno jmp cmp shl bt call lea jb cwtl rol stc mov xchg dec ror not sbb pushf pushf mov call pushf movw lea je push bswap inc add cmc mov bt cmp add clc bt pushf mov add mov clc pushf test cmc cmp pushf lea jbe dec test add stc mov btr add pusha bsr btr cmc mov sub add (bad) icebp shr neg or movl movzbw cmc bsf mov movw pusha cmc mov cmp call add dec popa imul jb inc imul jns popa je inc js jae jae jmp lea jmp or sbb cmpsb cmovb cmc icebp inc xchg fistp mov pop pop xchg xor scas xchg adc enter sti sbb (bad) mov mov ja push data16 push fist push and mov cmc in push sbbl and mov and fidivr push dec outsb out lods xorl sbb xchg push mov hlt iret dec adc arpl xor and or je stos jl dec pop inc stos xor pop fs push lock in jns add and or or sti movsb xor push dec dec outsb sahf jne,pt in aad dec jl ljmp cmp into cmp decl test pushf pusha lea je jmp push lea jb test das aam pusha movzbl setg call push adc (bad) xor mov xor rclb cmp repnz dec and jmp inc clc mov fnstenv xchg and fs popa and and mov sub into inc mov cld mov popf cmpsl inc jl loope inc roll cmpsl jno xor ret mov add aad popf cmc dec mov inc stc cld jg aaa sub jp lods jns xor dec rorb outsl roll xor ljmp imul orb adcb or mov jl (bad) xchg iret jbe dec roll mov andb jl clc cli aam mov cmpsb ret inc lret jbe popa cmc mov ret cmp call insb inc repnz mov push cmpsl movsl inc fldenv (bad) out ja hlt push mov cld stc cwtl pop daa adc iret sub mov fldl cmpsb sbb cmp add add int3 int3 popa (bad) repz sub cmp daa cwtl sbb sbb xorl call sbb jns or (bad) pop imul cmp add mov repz loope dec ja es shll ficompl ds sbb cmp cli xchg test mov imul inc cmpl int3 add (bad) mov push add scas pushf in je sub jo inc pop add sub mov mov lret push insl addl xlat out frstor fs (bad) cltd sub shl sbb xchg std xchg pop (bad) fistl lret fwait xor cmpsl cmp dec and out lea cmp jbe test push xlat clc pop xor rcl call in push sub roll pop add mov inc out enter or test inc mov cmpsb and xor sbb mov dec add (bad) xor out cmovb test sub lret out ret inc scas ljmp pop movsb inc les loope movsb add and ljmp add dec push and (bad) (bad) adc in lds mov sbb pop das (bad) fucom pop in or mov sbb lret add sub mov adc pop jg sub leave pop repnz inc ja inc call lea jmp call not add not pushf pushf mov call xor rcr mov sub inc lea bsr mov rol shrd mov bts mov bts push sub sub add mov bt xchg bsr mov add sub add cmc test clc and cwtl mov pushl pushl clc shl movb pushf mov pusha lea jmp push dec lret mov daa ja out aas jg out jmp or in lds pxor sub dec outsl into movsl insl arpl in sub dec pushf jb ds mov xchg stos addb sub sub pop mov xchg pop add rorl fildll sbb movsb loope,pn fsubrs cwtl xchg xchg popa mov cmp xlat fucomp xchg xchg pop out jp pop fadds jecxz lock cli or jg mov fistpl movsl inc je xor sbb and (bad) (bad) mov lahf and adc rolb sub dec out shlb pushf or int3 fidivl jl mov and adc mov add inc or clc sub negl inc mov dec (bad) movsl lods pop test fwait pushf aaa pop fsubrs es xor movsb sub and ret xchg xor sbb into divl xchg mov aad mov mov (bad) mov mov dec mov push lea cmp sahf and scas xor ficompl jg (bad) jno call pop out jns inc bt bt clc pushf neg jmp pushf bt cmp push pusha sbb call stc sub pushf clc cmp pushf pusha lea jae push lea jmp ljmp dec and inc scas cmp xor mov repz imul jno or cmp call nop inc cmp int3 xchg es adc inc mov (bad) fs jecxz cmpsl data16 or lret sbb aad (bad) mov or or rcrb lea pusha (bad) sbb push inc stos sub mov aad mov pop test dec sbb into jnp inc rclb ret mov mov push dec dec mov aaa (bad) int3 jle mov repz sbb add mov jg jmp dec inc add dec add outsb and xchg sbb sahf lods data16 mov lret cli jle adc mov stc add lea push pop gs je or pushf fwait cmp lods lock mov sub xchg addr16 xchg arpl jl xchg hlt jbe stc (bad) ja inc push aad outsb in and lret cmpsb mov pop shrb outsb in push ss dec cmpl insl fldl add stos fcoms pop rcl sub jl and mov jge stc sbb xchg dec dec xchg fnstsw or jbe mov jge cmpsb orl mov pop std sbb pusha lea lea pushf movzbw mov call mov stc sub not not lea jne mov pusha mov pushl mov stos pushf lea jmp mov in insl scas cmovb pop movsl fucomp cmp lahf imul test pop fmuls scas ljmp outsb sbb sahf cmp aam enter inc cmpl jae (bad) mov int (bad) and cltd push imul shll pop xchg pusha (bad) pop pop jno vpshufd push sbb iret cmp xchg aad cmp ss sbb out inc shlb push cmp xor inc add sbbb mov lea ja out fwait mov inc (bad) ljmp les mov jnp (bad) test loopne negb jbe mov sub xor pusha rol add jp mov cmc test clc sub bsf bsr bsf sub and or mov cmp shl push add jmp test call pop mov push call jmp push lea ja call push lock std std mov pop ret ja and cs pushf mov pop mov xor inc jg mov add dec dec push and aam push iret add out sub test sbb or xchg inc push dec sub push movsw xchg movsl pop push inc xchg or jmp sbb dec push xor inc fnsave adc push repz and ret dec xchg and outsb push xor push pop (bad) fwait rorl cmp cmp dec lds pop pop inc dec aaa (bad) dec and stos jl adc and or es add xor (bad) jae xor (bad) addr16 sub push pop cmp push lods push icebp movsb (bad) jae cmp push jle adc call mov add cwtl sbb xorb mov rcrb pushf das cmpsb movl pushl pushl popl push pushf mov pushl ret sub std sub add sub (bad) jo test imul push push loope adc jno lahf scas or xchg repnz ja cmp pop test xchg pusha xor int or xchg les or pop sbb enter xchg pop pop insb test je jg sub mov adc std sub jo dec frstor mov aad adc fs dec or inc (bad) notb add lea pushf pushf jmp (bad) push rcll cmovb stos and sbb rolb xor sub xlat mov pusha cli in push out dec neg cmp sbb push sub popf lods xchg shrl jp pop shrl pop adc or mov insl ja push jnp push mov adc xor aam addr16 insb adc fst push mov push fwait sahf mov test inc jecxz cmp push push in adc imul lods pop mov scas cmp push pushl nop mov xchg js add movsb lods les bt test movb lea jne pushf pusha mov jmp not push call sbb pushf test lea call lea jb sbb cmp call pushf test push push jmp call jmp add add pop add add xor xor adc mov adc inc xor lahf xor xor xor xor mov aaa clc aaa add cmp int std cmp cmp cmp adc push cmp cmp cmp cmp cmp cmp push cmp lock add pop add add inc xor pop xor stos xor mov sbb xor int3 xor fwait ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add stos xor xor xchg ret xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor sub ds push xor xor jo jp jg test cwtl xor lods xor int pop ss aaa outsb aaa xorl aaa push cmp cmpl cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp out sti aas add add add add xor xor xor lahf xor xor xor xor xor xor xor xor lods xor sub xor aaa ss ss ss ss ss ss jle xchg xchg ss mov ss ss aaa int3 aaa aam out repnz divl or adc sbb xor cmp cmp test mov pushf cmp cmp and cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz xchg lods ds fnstcw lock aas add add add add xor push xor fdivs out add pop ss cmp cmp cmp jge cmpl icebp ds aas mov sarl aas (bad) aas loopne in aas cli aas add add add add xor adc pop xor xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor adc adc xor sub das xor xor pop xor jb jp jg xchg mov xchg xor xor xor xor xor xor xor xor cmp popa xor xorl xor repz (bad) ss cmp cmp cmp jns test mov cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp aaa jl,pt cmpl fistpll jmp aas add add add push xor xor xor xor xor xor xor xor xor je in xor (bad) aaa sti aaa adc and sub cmp xchg cmp cmp cmp cmp cmp cmp jp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lahf ds aas xor inc aas jnp sarb add add add lods xor xor mov aaa xchg aaa sarl add cmp cmp cmp nop add in add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or jb jge cwtl xor test lods xor sub xor xor cmp cmp inc ss ss ss ss ss mov ss dec aaa push aaa pop aaa mov aaa repz xor aas cmp pop cmp and cmp dec cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp ds ds ds ds ds movsl ds cli ds cmp ds inc aas dec aas push aas push aas lds into aas aam add add add pop xor jns test cmp cmp xor xor xor xor xor xor xor xor push xor xor xor xor dec xor xor xor add cmp fs out aaa push cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cltd add add add insl xor xor js and aaa pop aaa aad out aaa clc aaa daa cmp cmp stos cmp cmp mov cmpsb cmp cmp cmp nop cmp cmp mov jmp cmp cmp cmp add inc add add xor xor xor xor jo (bad) xor lret xor xor xor xor xor ss sbb pop cmp cmp lods cmp adc add xchg xor xor loopne add add dec xor push xor pop xor insb xor xor test pop cmp cmp cmp pushf cmp mov cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add jo xorb mov nop ss lods les aam fdivs in ss add or and xor cmp fs insb aaa je js xorb aaa pushf aaa mov (bad) aaa lock adc xor dec cmp jo nop cmp cmp cmp cmp cmp pusha cmp cmp cmp cmp cmp cmp test mov test enter or sub xor push cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add jg xchg cmp adc add adc cmp add add daa xor ss ss aas aaa das cmp cmp loopne push cmp cmp pop cmp (bad) cmp cmp cmp cmp add add add jo (bad) xor mov data16 xor xor xor xor mov cmp cmp cmp cmp cmp or aas add add add xorb xor xor xor xor xor les add sbb cmp xchg cmp cmp sarb add das cmp mov clc cmp cmp cmp cmp insb ds ds aas add add sub cltd xor (bad) xor or xor xor xor loopne adc sbb test push cmp cmp cmp stc cmp cmp add push aas aam add add cmp add pop xor xchg in xor xor xor enter dec cmp cmp popf cmp dec cmp and cmp cmp int add add add inc add add xor xor pop xor xor xor xor xor xor mov cmp cmp cmp (bad) cmp cmp add aaa jp,pt stos cmpb loopne add add xor xchg xor divl (bad) xor xor xor xor xor xor lds push aaa or cmp cmp cmp cmp cmp cmp out add add push add add xor xor (bad) xor xor xor xor xor xor xor add mov repnz addr16 cmp jae (bad) cmp mov cmp cmp mov hlt ds add add cmp add push xor xor xor xor xor xor aas aaa mov cmp fstpt test mov cmp xor add add add dec add add xor xor repnz xor xor aaa aaa jno fnsave add adc int3 cmp cmp cmp cmp cmp cmp mov arpl mov cmc aas add add push add add xor xor xor xor fdivs jae cwtl xor xor xor lds pop aaa inc aaa mov cmp cmp cmp and cmp cmp push aas xchg aas add add add dec add add xor xor xor jb lret xor xor lods ss ss aaa jae pop cmp xchg cmp xor cmp cmp mov aas (bad) aas add add add add test jmp xor test out xor jb popf xor xor xor loopne insl xor xor xor inc aaa movsl aaa out push cmp cmp cmp cmp cmp cmp cmp cmp add add add push cmp cmp cmp iret and call add add mov (bad) xor xor xor xor xor xor es sbb test (bad) aaa cltd aaa (bad) aaa add adc cmp jno ret cmp cmp xor jge dec aas stos aas cmc aas add add xor xor xor outsb xor xor mov mov inc cmp jl popf cmp cmp cmp daa aas pop aas add add adc add sbb popa xor xlat inc push adc movzbw xchg mov movzbw and sub jmp jmp mov cwtl bswap mov setb pushf mov cwtl lea jmp add dec outsl arpl inc jb add or arpl mov sub xor (bad) fildl push rcr ret clc js into mov bound pop (bad) in cmp cmpsb xchg icebp xor out hlt xor jbe stc fsubrp dec rorl (bad) fmuls inc pop daa mov inc int3 inc xchg pop imul shrb orl inc ret pop xchg enter push xchg jge jb pop aaa das lret xchg js sub dec aaa xchg or sub mov or adc fild inc mov dec out cli aam mov jne and sub dec mov jb test nop aaa pop sub (bad) xchg ljmp add sbb leave adc mov stos jle movsl add (bad) lods jns xorl and cmp sbb in add stc dec xchg jl mov sbb loop pushf mov js sub mov shrb dec dec fnstcw xchg push lock xchg or mov mov xchg shlb sbb pop ja xor push inc mov lahf push sub adc dec fmull jns xor out (bad) es ret fs in and pop or lock sti xlat movsb jb inc rcll addl popa orl pop ret sub cmp cmpl test jp shl push data16 mov adc jp fcoms inc lods lcallw je push pop and mov outsb outsl xor popa dec mov das lods enter (bad) and repnz fsubl sub pop and adc inc in mov iret inc test mov es push int call xchg adc dec (bad) xchg lahf xor aaa aaa push pmuludq inc das jp mov orl lods jb cmp (bad) xor push mov std stc stos pop das fs sbb lds mov int aaa push iret rorb fwait aaa addr16 movsl and fstp cmp mov xchg push insl inc sub mov lods (bad) mov cwtl test xchg fucom frstor outsl repnz jmp js mov fwait push or es mov adc loop sti cwtl mov adc cmc sub adc ja sub int lahf ret mov pop cmp cmp lds (bad) push lods outsl mov in stc jnp ret ds and popl lds (bad) movsb sub sbb and pop int3 mov enter adc and stc push mov imul scas mov stc popa orl in (bad) lret sbb push lret ret xor fldl2t inc inc and lret daa iret pop in pop dec rorb test (bad) pop (bad) mov bound sahf pop mov or cltd aad (bad) and loopne sub movsb fstl idivb push jecxz ret fwait xor mov mov shll adc daa jmp in pop and jne push fsubp xorb les lahf pop outsb add inc gs inc inc jbe insb jecxz (bad) push notb or std icebp mov mov test jle (bad) jmp pushf lea jbe mov movsbw rcr bswap sub xchg dec shl lea mov cmp mov clc dec clc add shr stc not xadd shr cmp mov bsr bsf jmp rol jmp jmp add inc gs imul outsl outsb dec outsb outsw push imul fs jb stc cmp call inc pushf dec int cmovb and outsb in xchg jp cmp inc inc (bad) mov push fs mov sub lods push iret outsb cmpsl data16 out sahf xor into (bad) les iret je dec inc cmp cmp nop cs xchg mov dec dec repz or jecxz fdivs or out xor addl dec and in or movsb adc pop jns adc inc adc dec sub outsl dec and cmp test icebp sub fstpt jl push mov mov push push sub push dec mov repnz pusha push xchg push movw call pusha mov lea jae movzbl movsbw mov bts bts mov jno mov setno mov mov cmp clc test test xor push cmp repnz push mov call dec mov test or xchg fbstp fbstp xlat cmpsl lds jns jnp pop out mov test sub jp out mov stc pusha test pop push icebp clc test notb subl sub xchg (bad) int insl mov jg (bad) mov lds (bad) (bad) pop mov lock lahf hlt std (bad) cmp ret fnstenv fwait aad dec enter xlat xor inc mov mov fdivrl out dec cmp maxps push test pushf subl repnz clc (bad) cmovb jle push clc xor je clc push cld test cmp clc push jl out mov es test add rcl into loop dec into movsl or dec call out mov pop cmp incl sahf cmp lret pop addr16 bound or arpl cmp push test push hlt jae xor sub stos ljmp mov dec mov js int3 sbb push add mov lret (bad) cmp (bad) outsl fs inc sbb bound xchg inc dec push cwtl and fisttpl (bad) cmovb fisub push mov addb cwtl in xorb xchg mov ljmp enter lret push or or xchg sbb mov jbe mov bound mov or and mov fwait (bad) lods adc inc out adc pop cmpsb fiadd dec cltd sbb mov inc and push cltd sarb sbb sbb (bad) sbb jns addb sub test jnp dec stc sarl push (bad) out jo push ret mov jecxz (bad) cmp jle and inc jns add addr16 jns dec mov adc ja pushf scas dec pop inc mov sbb pop repz movsl jle and mov mov cwtl nop push mov and sahf cld es inc inc mov imul test pushf sub leave sbb inc (bad) js jnp xor dec sbb mov xor jno mov dec loopne enter pop sbb scas mov and daa cmc (bad) stos adc fidivr xor sbb cmp outsl mov push insb out xor mov xchg psllq lahf mov pop xchg es rcrb sub ss cs inc mov mov aam or (bad) imul adc xchg mov scas jns loop fwait sarl aam dec cmpsl cmp andb fsubp jns push dec outsb xor push push dec xchg fdivs xchg dec push stos cmp cmc cmc clc shl clc clc call lea jp pusha lea jae add mov or movsbw mov bsf shr mov cmp cmp cmp push xor cmp repnz mov mov jmp mov in rorl fstl and cltd call aad jl sub stos jb inc sub jmp loopne imul push or test adc movsl adc popf fistpl outsb mov mov mov repz inc or pop sarl cs sub adc gs cmp push xchg jmp fwait xchg xchg lock sub fpatan jns push lods (bad) dec mov scas ret cmp push sbb inc mov (bad) in int3 lret leave adc aas (bad) jmp popf in or or sbb mov cmp adc xor pop fistp lds ja add pop sahf cmp inc push stos push push xchg jne rcr movsl adc cwtl dec cmpsb or mov jae cmp add mov mov jo pop iret sub push in lret lret test pop into mov jae mov popa sbbl mov cmp push ret shrb push imul call pop or jno push mov lcall fucomi jo js cmp mov repnz xor mov ficomp mov adc in lea setp jnp push mov pop mov pop call shr jmp test bt shl jmp cmp add mov sub call mov movzbw lahf push seta push movzbw push setno mov mov mov push pushf xchg not call lea jne push shr btc dec mov clc jmp call btr bts bt mov bt sbb adc mov push mov shld sub bts lea adc dec mov and shl mov mov clc sub sub xor pop and not sbb inc mov pushf stc shl mov lea jmp bt cmp bt mov pusha mov clc stc test mov movb call cmp pushf lea setne lea mov call mov lea jae cmp cmc pushf stc sub mov mov pusha lea pushf jmp mov cmovb cmp scas test jle jp test je shrl sahf cmc jge cmp adc or ljmp dec and xorb add divb mov ret rcrl or std repnz out clc add xchg clc jo mov cld inc insb cltd out mov push js je addl xor cltd cmpsb jmp mov sarl sti xor fldenv jmp mov or jbe das aad mov or pushf xchg dec jmp sbb inc lds fdivrl or pushf jb cwtl mov outsb js and dec cli call adc (bad) in in jns push sbb sub ret jle les pop sub add sbb rcll push pushf pop into xor mov lret lcall pusha or jmp shrl add stos dec outsb mov mov enter loope fwait sub insb stos leave nop inc mov adc jle sbb push pop mov jmp movsbw rep mov setb mov movsbw mov call sbb lods into cmovb xor dec jne repz stos mov or push pop (bad) jp outsb in addl sbb (bad) lds push xor cmp or and mov xchg sahf les cmp (bad) mov orl lahf xchg rclb sbb les and stos dec leave xchg int add (bad) (bad) jmp inc mov and adc int adc ja pop xor dec enter (bad) jbe add fimul out xchg and lcall adc hlt call outsb push cmp ja (bad) mov (bad) xor xchg loop push std xorl jns jns jbe sbb stc in ds (bad) adc mov jne fstpt repz pop mov or pop cmpsb idivb jne pop dec test xchg scas xchg ja jo (bad) lea imul in out add es pop add out jge shlb faddl das mov out pop ret dec pop mov push lock std std adc outsl ds ret jno fisttpll and inc pushf mov pop ret lret and jae in enter and aam push les out das adc test imul inc mov in add fs (bad) fcmovnbe in xchg push (bad) cmpsl je repnz and lock aad and mov movsbw add movzbw pop pusha push movw push pushl ret out mov sub pop pop push xchg xor xor fwait in aad cmp mov or xor jle stc xlat cmp stc and push xchg loopne cmp (bad) cmp adc loope mov es inc add push pop add inc push out lods mov push mov and outsb (bad) inc push (bad) mov mov xchg add imul ss out (bad) cmpsb sbb sbb mov dec into mov jne push adc (bad) addr16 dec pop cli xor push fnstcw dec les pusha popa lcall fnstcw xor cli popa test dec xor sub pop adc dec add sbb aaa das aam leave cmovb mov cmp mov repnz xchg pop dec je mov add or fs xor jge sub and in adc jg ja xchg fwait repnz insl stc adc pusha and sbb or push mov shr loope,pt test sub jmp subl xchg xchg popf cmp mov push fnstenv ds es aad pop jle popa mov dec clc call jmp cmp add stc stc cmp pusha mov rcl and rcr movzbw mov jmp call mov lea call push lea jb lahf sbb mov call jmp call dec test cmp not stc neg clc movb clc stc rol test mov bt bt xor call lea call pusha jmp add jae clc neg clc stc sub pushf test mov call cli xor add mov imull fistpll jns test and movsb add lret xor (bad) out std std mov push and pushf dec hlt call aad icebp lock add psubsw jae (bad) in push jp pop in std (bad) xor pop jl sti cmp lods jge (bad) jns scas adc outsb mov mov rclb sub cld pop call js cmpsl les popl xchg inc in sbb aas sub icebp push sub es movl pop sbb mov xor lds (bad) fs dec pushf mov mov pop jb into pop rcl imul or dec mov sahf aaa and cmp insl adc in push in cmp fdivs sarb fwait and inc test jge dec clc mov push mov mov sti jge xorl hlt mov mov fstpt cmp adc lcall pop das movzwl mov sar movzbw mov jmp and cmovb movsb jp jb xchg and jle sbb (bad) mov sar les push out add fwait and mov lods lcall push rorl stos adc pop and jg sti std and pop out stos sbb (bad) (bad) js enter fldt cmp loop ja fldenv insb notl sbb mov divb jge adc xorb stc mov aad mov fimul aad ret sbb lahf in je test jae mov insl jb add sub or sbb and xchg shr adc idiv jne shl not sub call not sbb mov btc bsr sub sbb shld and lea call insl mov aam inc shrl bound inc inc xlat pop (bad) test out mov mov sbb push addr16 mov roll fstpl inc ficompl push aas out and mov fdivrp imul jae cmp movsl sbb lret sahf sub ret addl ret xlat mov out in mov aad rorb dec clc sub lods mov icebp push int scas daa (bad) stos mov dec sub iret mov xchg xchg test data16 push pop ficom inc mov inc lahf and and lahf pop push fiadd push push insl mov pushl push lea je cmp add cmp pusha cmp cmp jmp or xchg add cmovb sbb out popf sbb iret pop lcall sar push lods sbb std or push cmc mov jno mov xor enter xor psubd adc lock pop out repnz xchg testl adc xchg ljmp adc mov adc dec lret popa movsb enter dec push pop in cli outsb xchg mov xchg adc sti das pcmpeqb lahf adc cli pushl call mov call lea jb clc pushf cmpb call movb lea jne lea lea mov stc cmp add pusha movzwl add clc mov clc add pushf clc bt clc mov cmc test add jae test pusha jmp cmp pop movsbl jge adc pusha mov jmp call pusha movb mov bswap pusha mov jmp icebp stos inc (bad) xlat cmovb ss jb push dec and add mov lret daa scas arpl and mov jle test sbb mov push outsl mov lret and je xchg outsl lds movsl daa lret das add jmp cmp or and cmpsb and push jmp lcall sti cmpl shrl push xor ficompl inc fidivl cmp (bad) stos adc sti pop mov push cmp aad or jge xor add nop sti pop rclb insb enter bound pop sbbl mov dec lea jne push mov shl dec bsr bts sub clc lea cmp bt sub pushf pushl popl test clc bt cmp movb pusha lea ja pushf cmp bt sub pusha pusha lea jmp pop cmp shr data16 testb movb rcl xchg and pop sar ror inc rcl pop bt cmp ror pusha add lea movzbl pop push pushl ret cmp pushf pushl jmp add push dec inc imul je outsl outsb inc add or decl test pop idiv pusha mov push add mov push cmp push mov lea jmp jmp adc call sub rorb inc jno sbb and je xchg aam ja (bad) mov xchg std nop jp xor add outsb mov sub lret adc fwait movsl (bad) jmp cmpsl mov inc inc fstpl fsubp es mov pop fwait sbb mov (bad) jns adc sbb or pop mov jle (bad) aad and jae dec out pop pop stc mov add push outsb cmp aad inc lret add mov push icebp mov out push je xchg cli imul cmp push cmp sarb xchg loop inc (bad) mov lret xlat data16 sbb aas pop xchg inc mov or imul test cwtl fcoml pushf mov call lea ja jbe jmp insl cmpsb jnp rorl inc movsb pop and fwait addr16 xor gs int3 cli or movsb sub insb mov call mov aam mov push insb icebp or add sahf and loopne xchg fbld cmp mov push lahf je icebp mov cmp cmpb test idiv jne (bad) fbstp out lods (bad) fisubr aaa xchg int sbb xor inc jb push and dec scas aas inc cmp lcall sbb (bad) in shr jb or xor repnz ret jecxz pop push pop push cmp lods dec cld xlat mov fdivrs fsubl sbb mov mov into push in push into movsl gs jge loope adc and (bad) dec leave push in inc ret cmp je sahf dec rorb inc adc mov es popa enter aam pop sbbb cli sbb add adcl adc push mov jne jnp jmp jae lret sub mov xor xor cltd jge call jne (bad) jg add incb lods mov cmp jp incl sahf arpl cmp sub xchg lods (bad) mov clc or xor cmpsb push mov jne inc inc call mov cmp lea call push pushf pushl lea jmp pusha push jmp pushf jmp call (bad) xor int3 rorl inc xchg push push ljmp loop mov lahf out sub inc xchg cli jmp out (bad) aam loop lcall icebp jno hlt cmp femms inc mov add out sti rcr push mov dec bound sbb pop fbld push lods xchg push (bad) mov or out sbb stos sbb xlat or (bad) mov sbb cmpl stos insb setne mov test cli push jmp int3 fmul mov aas mov lret mov imul inc and pop rorl cltd push aas divl or icebp stc ret cmp xchg jmp mov xor es fsubrl (bad) outsl lds in fs nop sarl ret faddl retw or repnz pop sbb sub pop stos fsubrs mov fcomp pop js (bad) fcomps add out push adc xchg mov lahf push jns mov iret lods dec cmpsb les jbe in fistp push leave shlb (bad) or xchg bound pushl rol pusha mov xor clc pushf test shl cmc call jmp lea call call jmp pushf lea jae shr cwtl sub pop aas pop btc adc mov das aam test shrd cmp lea push jmp push inc push push dec dec dec cs insb add scas fincstp call (bad) jg fisttpll inc cmp cmp xchg pop dec sub jnp shlb xor jb dec sub inc lods shr xchg add rcl mov and (bad) fidivl jae ret ljmp adc mov cltd js hlt jb add jb lret in jne (bad) das sahf jp mov in jbe,pt lock pop cmpsb insl add aas push mov clc lods repz lcall pop or pusha sarl call add hlt rcl les pop sbb mov mov sbb cvttps2pi add cmp xor push mov sbb adc pop push pop cmp mov test outsl out in inc mov sub or cmp jmp pop jl lret iret icebp jnp push roll jmp sbbl xor cmpsl out xchg (bad) jg jno in adc aaa ja dec jne,pn lea fistpl push bswap arpl popa mov fdivl inc ss fsubrp lods add in clc into into push fldenv push ret cmpsb and inc lret and pop (bad) or jnp dec ret mov adc push lds mov test pop dec xchg loope xor lret or add hlt pop mull xchg adc stos mov in sub test pop fisttp inc add mov loop jns inc sbb repz sti push lods mov sub jbe add in (bad) or fildll lea out sbb push movsl or pop hlt stos pushf mov cmp sub insl cwtl sbb add sahf and repnz mov adc mov pop jmp jno pop es popa xlat sub xor aaa call sub adc je jno xchg cmp inc xor dec std and arpl popf mov mov fcomp and and iret stos (bad) inc and aaa mov xor jg je pusha add cmp jge sub (bad) cmp les je insl lret shll pop vmovdqu sub cmp ss dec add icebp xchg xchg stc jmp cmpsb add pushf fnstsw xor ja scas int mov mov mov andl in adc js or pop sti cmp or sub jno ret mov or cmp xor fmuls dec mov xor xchg test lret jnp stos aaa mov int pop lret add jnp inc mov mov cmp adc xor mov lea xchg jge mov arpl push dec mov into (bad) xor and ret enter aaa mov (bad) add insl out xor js lods insl xor jl test mov lret movsb xor xlat jge pop jmp mov dec (bad) call jo cmpsl je scas jbe mov inc arpl and xchg or es aaa mov js movsl mov jne jg mov cmp nop add (bad) icebp mov xchg cmp lock sub jbe insl mov stc sahf xchg and and sti out cmc sub xor xchg arpl cs jne sub lock push xor xor adc into mov inc xchg xor sar dec movsl cmp dec daa cltd xchg icebp fs aaa pushf movsl movsl push push jmp sub (bad) stc movsbw mov sub jle mov btc lea bsr mov pushf shl setno test mov pusha add inc rcr sub bsr neg mov setno ror mov or add pusha and sub clc cmc lea and bsr aas bts or mov stc shl mov pushf lea jmp seto lods movb call sahf pushf pop fstp cmovb add mov add aas sbb mov aam push fstp inc rol hlt jo jo inc sar jge cmc incl cmp sar or (bad) stos inc lret sbb sahf xchg insl iret (bad) xor ror in sub or fptan or mov stos mov test dec pop pop mov (bad) mov push inc sub cld push cmp shrl mov sub cmp leave xor pop xor insb sbb jne adc imul jmp call lea movw lea call push pushf pusha movw lea jb dec call lea lea jno pusha pusha pushf lea call pusha lea jb movzbw cmp push cwtl inc jmp test cmovb decb dec addr16 mov add cmc lahf (bad) xor xchg gs pushf in sbb lea cmpsb je jle xchg mov push fs test rcrb sahf testb push push and cmp stos repnz fsubl jp int adc fiaddl bound pop in jl ss cli and push mov dec mov add and mov test cld and or push mov imul xchg nop loopne dec stos push adc adc ds dec popa mov mov mov and sahf jp inc xchg mov les shrb and push jne jo push mov sub and fwait jb inc aad jl lret inc sbb mov les inc inc push lcall (bad) mov or mov push hlt cwtl es adc sbb xchg cmp add imul in sub add xchg enter stos test xchg mov roll aad in nop add mov dec mov movzbw mov call cmp cmp setbe movzbw movzbw lea lea mov movb jmp mov jmp mov adc jmp pushl add movb pusha lea jmp pushf stos push lea jmp pushf mov lea pusha call lods test neg movb call rcrl adc in inc subb and pusha or push scas mov sbb popa stos inc ret xchg sbb xor cmc mov push aas out adc fdivl es fstpl outsb fcoml push inc (bad) mov stc jns enter je jae stos dec and ljmp lods cltd movsl dec xor dec pop jno clc sbb add ljmp mov xor imul jecxz rorl mov xor xchg dec mov add data16 subl sub test fistpl cld jae sub pop push mov loopne mov ja mov stos gs xor loopne pop and gs pop nop cwtl movsb rclb xchg xchg xchg subb dec or pop jecxz out cld dec jge lahf adc stos (bad) pusha outsb nop fild enter out xor dec adc repz add dec mov aam mov ret in xchg and dec xchg sub fmul inc ficompl sub jecxz sbb notl inc out jge (bad) sbb push out sahf repz fcmovnb xor sbb hlt das aas subb fadds inc pop xchg lret addr16 (bad) fs or jmp mov fmull orb pmaxub ds test mov pop test lods stos mov incb jge push sub adc (bad) sub jg xchg dec cmp jg xchg ja or mov xchg loopne ss (bad) mov xor dec notb jle (bad) or pop mov mov incl inc test (bad) mov ret icebp push out inc outsl xchg adc sarb mov add pop xchg cltd icebp adc lahf xchg mov xchg push (bad) out push mov bound mov enter jmp cmpl int3 xor popf pop mov xor push mov xor pop frstor xor mov stos cmp dec and aam or shll sahf loope mov adc rcl sub fldcw hlt pop jb lcall cmp or jb xchg in je jbe hlt mov (bad) mov pop scas xchg fdivrs pop push mov cmp outsb lods jo pop xchg insb lock hlt fisub aam jmp imulb jnp sub mov incl inc add pushf pushl lea jmp add add in idiv scas insb inc shl cmovb pop push addr16 cmc (bad) push iret jmp jae out and dec mov loop pop pushf push inc (bad) inc dec orb xorl lods inc ret ljmp inc pop cmp int3 fwait rorb into add xchg test enter xlat cmp sub (bad) loop pop test cmp in daa adc jnp dec cmp fsub pop lret ret push jg int3 lea ret (bad) in pop mov cmpl push cmp jge je push cmc daa mov dec pop and dec pop out (bad) pushf insl and mov sbb clc cmp lea sub pusha xchg setl pushf btr shl mov sub inc sbb pusha lea jmp cmp fndisi(8087 cmovb and nop inc inc test fdivrl inc mov push or loopne div ljmp out inc jle call or ss push es adc bound jge jno jl mov jle lds sbb and pop sti push repnz sbb enter gs mov xorl and ljmp ljmp out jbe sub add iret shrl ficoml rorb into cmpsb inc adc ret mov push insl mov cld imul jne les lret test xor loope adc test cwtl inc jne adc push xor nop inc or mov pop movw cmp call sub sub mov shr sub call stc pop ret cmp and cmovb inc test out ret fs and test jg daa cmpsl dec fist cmp rcrb inc and pop lret outsb arpl jg and imull pop fwait xor fbld xor aad lods loop sub jnp subb (bad) fwait sbb sub es adc mov jp pop pop shll xor lahf pop mov and mov lret push jnp dec sbb sub ds sarl sub fs test lock cmp outsl lds sbb ja sti ficomp sbb dec cmp lea jne and bsr mov jmp call xor jmp inc dec js jecxz inc jp and jne scas das cmp mov cld and fnsave cmp inc (bad) rorb and and add dec std inc sbb cmpsl arpl push or sbb mov outsl push mov movups jl xchg pusha loop (bad) lcall ret lods out divb sar xor cmpb xor lcall orb lahf out inc adc pop lret test shrl jae push lahf ds lods sub add (bad) mov mov or adc in cmovb xchg mov stc xchg dec and xchg (bad) fadd adc mov fs test jns aaa fidiv scas lds and cmp scas sti out inc cmpsl inc js faddl or out jp (bad) idiv negb push jl and cmp inc enter rorb rolb sub lock cmp addr16 sub (bad) pop negl fsubrs dec pop xchg xchg repz mov xlat scas push fstl mov jnp ss loope repnz test mov or in dec (bad) decl (bad) and add pushf clc bt jmp call mov movb movzbl pushf pushf mov jmp jmp pusha lea je stc pusha or mov pushf pushf lea je cmp movzbw seto pusha xor sbb bsr mov btc mov mov rol shr sub sub btr neg call lea jb bsf adc mov jmp lea jbe rcr sub pusha bt pushf mov rcl adc mov bswap add cmp add clc shr jmp call jl mov xor in push pushf jb cmp mov pop sbb es fdivl sub and inc dec cmp js repz lret cli or mov (bad) (bad) outsl inc popa inc lds mov jge lea out push cmpsl or xchg and and cmpsb movb mov dec bound bound and add add cwtl cwtl lea mov movb movb call test shl pushf push add pushl call enter out cmovb dec aam add cmp stos inc pop (bad) cmpsb hlt push fs xor mov call dec dec and rcll sub ljmp mov fldcw fnop mov andl das shrb hlt sbb and cmp mov fsubl mov jmp mov insl enter mov lea or pop clc aad divl rorb fmull push xor jecxz xor mov mov test sub push cmpsl mov mov rclb test or inc out cmovb loopne mov fs adc xchg addr16 dec lret movsb enter push repz shlb (bad) adc lock addl addr16 dec std mov decb (bad) mov cmp push movsl or mov mov jo xor dec cmp pop aaa lahf repnz test cmp pop pop pop (bad) pop jmp les es insb arpl mov lds popa mov push and inc cmpsl jg pop int3 loopne pop pop push cmp dec mov mov (bad) fninit mov add and frstor xchg sub daa mov ds test test inc xor mov cmovb mov mov push aas addr16 pop add jb (bad) pop pop insb mov inc dec push (bad) adc mov fs lret imul or stos jae mov push sbb test sti jnp inc fdivr sbb nop das add jo sbb mov outsb test jno xor cs mov dec test add in fistl xchg adc jg ss fs scas fbld inc xchg sub pop mov daa int3 mov arpl jmp gs and cltd push ret pop popf adc fcmovnbe mov pushf jbe sbb sbb int3 and rcr pop xchg mov popf add shrb mov je jmp push leave mov sub jmp xchg dec mull xchg movsl jmp mov fisttpll xchg iret dec pop lea xchg rcll and and jns xchg popa nop fs movsl scas jg es int call push test cmc fld movd sbb or lods insl iret xor incl or xor push rcr mov lock or inc cmp loope mov xor xor fnstenv cmp dec decl je cwtl lods in inc pop outsb mov into xor jg push mov jmp std icebp adc fnsave mov in inc jb dec inc mov iret mov pop and mov (bad) adc jno in aaa pop mov stc sti xor repnz jns mov ret pushf inc jb pusha inc mov call js rorl ja cli popa lods sahf testb sub icebp xor jge cmp stos pop dec mov adc inc and fwait fwait cmp push mov sarl aas fcompl lds int3 jae ja inc push sub imul stc pop or push adc mov div lahf pop into xor sar xor push jmp not mov call mov inc stc neg jmp mov mov mov push pushl pushl ret clc cmp not stc cmp cmp cmc sub pusha stc pushf call movb lea pushf pusha movb lea call stc jmp mov pushf push lea je call cli xor push jmp inc or xchg stos pop inc cli stos sarb jp ss cmp js add out sbb daa xchg mov push dec rcr mov pop mov out push (bad) adc iret lcall fmuls cmp push rcr fcmovnbe into inc or inc call daa daa shlb (bad) les js mov fnop dec jmp fs (bad) inc cmp add or mov jg pop xor call inc xor ucomiss int outsl xchg cmp das push (bad) out pop jmp loopne mov gs xor jp inc daa and lods cmp cmp loope jmp mov mov cmovb mov test xlat daa pop push xchg test and sti incl aad lret push mov or xor and scas inc gs fidivrl int mov scas dec iret dec loopne sbb cld push (bad) jb ds mov lock lods inc add test pop addr16 ja xor bound jecxz ja insb mov cltd jecxz mov cmc inc cwtl cmp dec push daa ret add mov sub pushf cltd jnp sbb push add adc add mov cmp add mov sti out lea call push pushf pusha mov adc jmp lea jbe shld bsr inc mov btr xadd rol cmp add lea mov push dec add test adc sub movl cmp shld cmp inc mov stc pushf cmp pushl pusha call setp call jmp pushf lea jne pushf call cmp sub jmp mov movb lods pushf test test bt add movl cmc pushl neg call mov lea jmp sarl cmp cmc cmovb and das push jge leave and decl das andl inc lea iret (bad) adc lret pop xor ds and inc mov sub (bad) (bad) mov or lods xchg sub jmp in (bad) mov ss pushf loop lods or and std dec enter lds addr16 sub xchg xchg and in cmp pop and inc dec add (bad) cmp lods pop adcl push cli pop xor iret arpl out pop adc (bad) sub aaa test xchg mov lret jo jmp setns mov call stc and (bad) (bad) cmovb sub pusha ret mov cwtl cmpsb cli or js or mov mov mov jl lret clc pop idivl lret cmp int push push adc lahf hlt push mov mov xor gs (bad) test inc test (bad) xor adc bndstx into and cmp and pop scas push mov pop adc cmp loopne mov das lea mov or sub sub lds sbb xchg xchg mov xchg stos adcb cmpl leave movzbw lea movzbw mov push movzbw movsbl mov not mov pop jmp not lea mov mov lea push lods xadd pushl cmc rol neg not inc ror setbe btr inc neg pop not dec btc jmp mov pusha push mov movb movb mov pushf pushl ret bswap sbb call mov stc cmp jmp mov bsf setbe shrd daa mov lahf cmp rcr cmp movsbw mov jmp mov movzbw mov pop movsbw lea pushl call pushf pushf cmp not movb sub clc cmp movsbw lahf lea not lea mov push lea ja call aad jl lock ret mov loopne cwtl out out mov sbb fdivrl dec mov outsl jns andl jle test mov aas add inc dec cs bound fs pop sbb xchg jecxz and (bad) xor xor sbb dec sbbl lds hlt adc sbb push hlt xchg fs cmp subl xor mov inc std les xchg je push jmp in orb outsb frstor ret fisubr (bad) sub fcoml sbb mov jne push aam jmp (bad) fildl xchg icebp cmovb push jbe dec inc mov mov jecxz lahf or xchg xchg push cmp clc and iret ud2 insl mov inc out mov and mov add push (bad) ljmp xor iret das out dec mov pop xchg and adc scas cmp out pop lea push mov mov addr16 mov stc lret (bad) outsb adc lahf icebp jbe adc lock xchg shlb mov scas cli xor or out mov push mov mov push xchg stos sub adc inc mov dec sbb lea call clc pusha mov stc call mov lea jb bt cmc pusha mov setg bsr sar or mov jmp clc sub jle mov pushf mov pusha pusha pushf jmp xchg mov mov setb lea jmp cmp pop lahf lea mov bswap mov movb pushf mov pushf lea ja call repnz repnz cmp xchg rcr enter cwtl push add mov push jb dec dec mov xor int3 and and mov mov push add stos aas nop mov loope jge mov inc in push jecxz push movsl sbb fnop cli call fs dec scas lock mov cmc int3 or cmp (bad) testl in popf cmp pop (bad) jb fs push lods xchg inc cli mov (bad) jge,pt (bad) mov sub pop jmp push dec mov mov (bad) lock xor jb push adc mov cmovb or lea (bad) maskmovq lods mov mov dec lods inc sub mov mov add add int3 clc repz sti cmp inc pusha sbb jnp test inc jnp cmpsb imul imul repz nop nop mov sbb mov nop push mov fwait mov js inc push dec mov pop scas lods fsubl clc sbb (bad) mov js das sub je,pt inc jno sbb xchg pusha stos push mov jmp sub mov movsb roll or mov addr16 jns cld (bad) xlat pop ret gs pushw js ja ret dec popf cld cmovb inc movsb cmp add pop adc jno sbb cmp push ret (bad) into cld push jl or fwait pop dec xlat in xor jbe mov in les mov lods imul insl push jae fisubr ret test (bad) add add dec aad xor jle (bad) into cmp ret pusha sbb mov jbe into push lock incb or push lods aaa mov sub icebp push stos pop adc icebp lods pmuludq es lahf mov xchg xchg mov add test inc inc ljmp out add mov sub pushl popl movb pushf bt cmp push call xchg jb int cmovb scas pop mulps popa and fldcw jmp xor push ret rcrb add push push (bad) into (bad) jle inc lds lret movsl push jne int lahf add mov jae (bad) pushf pop clc cli inc movsb into int3 pop mov clc out cld push mov ret lds pop xchg enter jp xorl out push sub pop xor or lds jmp add jle xor sbb adc dec pusha jle stos sbb push jp stos ljmp in fs cmp rcr pop aaa idiv rcll loopne inc and cmp cli sti stos gs add sbb pusha fwait inc mov and dec xchg push lret adc (bad) push scas fldl push nop les cmpsl cmc dec mov je (bad) insl or cli dec adc and lock insl pop scas dec rorl les mov pop rcrl jno push (bad) dec hlt mov sti add sub jns jo mov (bad) or pop jg adc push and sub cltd gs pop xchg sub and or inc cld push sti pop js add xchg dec testb push sbb ror pop scas fsubrl dec (bad) fisubr repz lods sub je data16 jne cmpsb stc or and dec leave fdivs push sub sti add in add xchg jmp xchg sahf popf mov ss lods sbb and xchg sbb int pushf or cmp jl decb inc stc add adc pushf adc dec mov sahf insb sbb lock lret dec push gs jg loop mov or push or insl lods iret pushf ret jnp cmp fidiv cmp nop push insb and jnp test test adc rorb mov jg (bad) push fcoml out cmpsb cld adc adc xor cli inc repz bound sbb inc push mov sbb sub gs les stos repnz fnop sub fisubr sbb ss mov mov mov rclb test (bad) mov ds iret mov scas in fadds (bad) cmc inc (bad) pop jl cmp mov js int dec call xchg dec arpl pusha cmpsb out push adc (bad) icebp jae inc mov sub sub cltd bt xor test sbb ret push loope dec dec inc addr16 fnstenv pop rorl xor clc mov inc daa loop inc dec jp xlat cmpsb std das adc or subl jge enter add out imul mov cwtl jmp rcll cld mov popf sti gs cmp inc push mov cmp lods mov and cmpsb mov pop push repz jno in std mov aam lea insl xchg fcomi inc div rorb add inc div (bad) jmp mov jmp add stc test jmp xor pusha pusha pushf push lea jmp dec xor clc cmovb jns imul negl fildll fucom daa pop (bad) fcmovnu int test cwtl movsb subl repnz pusha lret jb icebp jno enter cmp fisttpl std ss iret add sub pop cmpsb sti add mov mov out pop inc out push aad xorl pop loopne xor xchg cmp xchg mov add xor sub out les ret test xor mov mov xor mov jmp jl (bad) cmp adc repz std push cmpsl push sbb shr fidivl lea call mov xor bswap add das pop rcl bt bts pop push cmp pushf sbb call leave push push mov cmovb mov mov pop mov out jne rclb shll inc xchg lods not mov jae add mov mov jg repz aaa mov leave or inc movsl movsb stos mov daa lret push adc les and adc mov negb hlt (bad) and not xor cmp xchg scas xchg rep jg testb adc pop fidivr mov mov pop sarb cmpsb out mov push xor bound aam sub adc push (bad) popf in add mov xchg rolb dec fisttpl sub dec lahf hlt push inc test cmp jae rorb jne popl inc cmp mov cld push xor add js (bad) popa or pop dec mov or daa fisttp add add jecxz adc test xlat icebp inc aad sti fwait addr16 and mov dec pop rcll dec push push test adc cmpsb inc hlt push stos jne mov lret mov rcrl jp push jmp lea jbe ror movzbl xor xadd sub not movsbw mov and inc bsr rol mov pushf xor sbb add sub bsf (bad) notl xor shr rcl sbb btc pushf mov bt shld movzbw add pusha mov pushf call ror jmp jge (bad) push sti cmovb jmp movsb aad push out add insl aam lea out push adc int3 in jp adc stc mov rcrl add pop xchg aas notl or inc mov rorl rorb push add jne inc adc out sbb (bad) repnz cmc insb xchg shr mov loopne,pt jg mov ret pop adc cltd xchg stc sbb repz es out sbb mov sbb fldenv fwait scas mov lods imul pop sub (bad) jns bound out shrl gs mov pop jbe in cmpl and ljmp mov fsubrs (bad) mov dec pop or cmp out jp cmp and fstpl data16 mov jnp jno mov (bad) outsb sbb rclb sbb xor inc mov in iret push or and int jb cltd fs (bad) daa mov repnz cmp and mov push mov lahf mov jge (bad) and dec mov in inc mov add mov jmp clc je mov call ficompl mov push lcall dec in pop jne aaa ret adc cmpl xchg mov popf mov lret xor lea jg cmp call jmp lea call cmc cmp cmp push sbb jmp sub test call call push lea call pushf not not movzbw mov push xchg call pusha stos pushf push mov lea jmp sar pusha mov add jb cmp cmp pusha movw lea jb xchg mov shr shl not test xchg inc mov shrd neg add pusha movsbl setb movzbw push lea pushf call xadd push adc rcl push xadd ror bt mov sub lea sbb xchg mov sbb bts rcl and mov push stc stc pushl or pushf jmp add call cmp sub shr rol rcl call call lea call not not lea push pusha call cmpb jne shll shll push lods neg inc neg dec not neg rol xor mov pop ret iret aaa cld sub or ret sub adc daa push xchg aaa lret jmp loope iret mov fnstenv dec iret (bad) xor sbb test mov testb xor jnp or sbb adcl (bad) ds xchg dec stc add cli sarb sbb add pop jb lcall cwtl lahf out xor stc push mov mov inc or mov orl jns xorb jecxz adc (bad) or clc or mov dec add add clc xchg outsl or rcrb clc inc js lea push movl lea call call lea ja cmp sub push lea jmp mov movl mov pushf movl pushl ret not mov mov call lea je bt stc cmp jmp lods clc cmp bt bt neg pushf inc cmp stc cmp jmp lea ja stc mov seto call pusha pusha adc call call add inc gs insb addr16 je insl add push dec inc dec xor cs insb add fsubs add xchg cmp dec push or jle (bad) ljmp pushfw in adc pushf lea jae dec pop cmc bts cmp pushf mov pop movsbw push mov btr neg sar cwtl cmp setno mov push movb mov pushl lea jb data16 lock push cmp lahf pushf mov lea jne pusha pushf lea jb btr rcl mov cmc jmp shr clc clc out ljmp fs je test add cmc cmc pushf test cmp pushf push lea jmp lea push lea jmp lea je push clc mov not add call seta lea pusha movl call es or lds and popa cmp dec cmp jns xchg fildl pop pop lret (bad) mov or mov xchg out stos inc les ljmp ret push in sti add jbe cmp dec ss pushf rorl fisttp xchg bound out fisttpl pop and fldl dec or ds shl add fdiv dec mov cmp loopne dec (bad) adc (bad) in test into lock jne pop aaa ret or jo inc icebp or cmp fisttpl pusha pushf test add dec xchg sti inc das movsl or push movb mov lahf push movsbw not lea call mov call jmp movb lea call stc push call mov movsbw add pop add ror btc shr sbb inc mov inc rcl bsr shr add not pop mov pusha mov mov pushf mov lods test jmp pusha lea jb push pusha cmp pushf jmp sub jmp add push gs insb outsl jae dec gs mov xchg pop lea mov movsbw mov jmp lea ja pusha call mov cmc call pusha call cmc movl sub stc clc cmc jmp call out cltd inc xchg add inc enter mov mov in push int add (bad) dec inc (bad) adc dec mov stos aam cmp popa mov movsl jns pop iret push jne sub arpl cld mull push mov lret adc cmp lret cmpsb pop lea sub jge cli jno nop or xchg test jbe pop mov sub pop lahf cltd rcrl popf add cld jb scas sub cltd add lea mov (bad) pop pop out aaa pushl mov rclb loopne inc pop and adc fndisi(8087 add psrlw xor push push aad or dec xor fmuls cmpsb xor jbe ret xor lock idivb jns mov cmp inc dec mov leave mov ja sbb jo sbb scas cltd mov popf mov jbe subl xor pop jge push (bad) lahf cmpsb pop cmpsl imul or inc cmpsb test ds mov cmp fnstcw push (bad) lods cmp sub daa jge or jns jns das xlat dec hlt adc sub or inc ljmp xchg jnp push sbb inc sbb sub and adc pop cmpsl rorl add lock repz test inc jp data16 js cs jbe inc jbe repnz sbb por mov pushf in adc push daa arpl sbb adc pop jno pop lods and jmp pushf repz dec jecxz test stos outsb xchg aad in xchg (bad) xor idiv xchg hlt xor jne add or ss into or jl sbb inc stos out xchg push lahf adc jae xchg add or in inc push in das test pop repz pop mov adc sbb push and jmp aaa aas push pop push test test jno lea sub and (bad) (bad) bnd outsb out repz mov jg out dec xlat pop idivb (bad) std insb fwait fs jg loope sbb test push or jno test inc hlt in rcll xchg in cmpsl pop lret mov ss inc mov cs xor fs jne pusha pushf movb lahf pushf mov pop cwtl pop pusha lea movw jmp movsbl movsbl call imul jo fs insb add mov inc (bad) xchg push imul mov xor push imul and pop add clc dec adc cld inc lret rolb or enter arpl push fnstenv sbb xor fs int3 outsb jg hlt ror iret xor daa ret mov imul and push inc mov mov cwtl mov call push mov xchg xlat dec xlat xchg loope mov jp ret ss sub gs lret and push repz adc gs dec mov or cmp (bad) jg bound xor add mov xchg (bad) jne popa sbb (bad) (bad) jmp ror movb jmp movsbw bswap mov lea mov js pusha lea jmp call pusha mov pushl jmp mov pushf lea jmp movw pusha mov pushl movw movb lea jmp clc lea jno add pusha jmp call mov push movb push lea jmp sub cmc add jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp dec stc rcr ror btr lea jmp inc pushf clc bt add jmp pushf pushl popl pusha pushf push lea jmp jmp jmp shld mov jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp stc call push movb call add pushf mov mov pushl lea jmp bsr neg adc notl dec mov cmc call pushf pushf popl pushf jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call mov call test movzbl call cwtl mov pushf mov mov pusha pusha mov push push lea jmp cmp sub call movzbl lahf lahf mov call call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf pushf inc pusha decl movw pushf pushl jmp ror mov movsbw pushf mov movb pushf mov movb pushf call ror aad xadd ror mov adc bts jmp mov mov push pushf lea jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret cmc movb rol push call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call add call cmp bt sub push push jmp pusha push movl call pushl push movw pushl popl mov movb lea jmp call inc clc shr mov sbb call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call cmc cmc add call jmp push pushf popl pusha mov mov pushl popl push lea jmp cmp sub call mov call mov pushf pusha pushf pushf popl movb jmp call movb mov pusha pushl mov pushf call mov pushf lea jns push jmp pushf lea jo popl pushf pusha movw lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp pushf movb mov movb pushl lea jmp xor cmp xor call shld mov movzbl mov bt stc pushf call pushf popl pushf pushl popl pushl lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp mov pusha movb mov pushf pushf mov call movl mov call pusha mov call not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call sub jmp movl mov jp pushf mov pusha jmp neg shrd movzbl shrd sub jmp mov mov ror (bad) repnz call push push movb movb mov pushl mov push jmp jmp push mov pushf call jmp mov mov movb pushf jmp mov jmp daa mov dec mov pusha jmp push call pushl popl movw lea jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call lea jne or jmp jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp cmc cmp add call sub call test pushf cmc jmp mov push push mov movb lea jmp call mov push call pushf jmp test xor test sub movb mov pushl movb lea jmp shld aam call rcl rol or mov bt pusha add mov pushf sub cmc pusha call mov call inc push push mov pushf lea jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp add movw pushf pushf pushf popl pushf movw call push pushf mov pushf pushl ret rol movzbl push add pusha pushl inc call call pusha aam add mov pusha call mov push mov lea jmp test stc bt sub call pusha pushl mov jmp mov call mov call pushl popl push pushf lea jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call call call cmp sub pushl cmp push cmc sub call pusha mov call decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp bts shr pusha mov cmc bt sub mov test clc call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp jmp mov stc call mov push push jmp jmp pushf pushf mov pushf lea jmp pushl popl pushf push lea jmp pushf pushl pusha mov jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call jmp pushf pushl call mov pushf jmp pushf pushl popl movl pushf movw pushl lea jmp pushl lea jge push mov call pushf pusha movw mov push mov jmp push mov pushf push push mov call jmp pushf mov movb pushl pushf lea jmp jmp bt xor push jmp mov push movb lea jmp mov call mov pushf jmp sub stc sub jo push mov shr pusha call shl pusha mov push mov mov call jmp pushf call mov pushl lea jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp call mov push call pushl add pushf lea jo push pushf mov mov lea jmp call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushf lea jmp call movb call mov pusha jmp push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp pusha push pushf mov mov push call pusha mov mov call pushf mov jmp movsbw mov pusha pushf mov jmp push mov jmp pusha mov movb mov mov pushf lea jmp jmp call call stc add lea jno mov pushf lea jmp push push pusha pusha call call or movl stc xor lea jae pushf inc call mov not mov pusha mov jmp add cmp cmc std pushl popf push lea jmp mov pushl mov push pushf mov push pusha lea jmp call jmp bsr inc mov test add pusha pushf pusha lea jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp clc pushf clc add jmp mov call movb jmp lea jne stc push stc sub pushf call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call jmp jmp or call lea jge push mov mov jmp jmp pushf mov jmp pushf jmp pushl popl mov pushf pushf lea jmp push mov mov mov pushf mov pushf mov call mov jmp mov jmp bt xor movl jmp push pushl popl movb pushf movl push lea jmp pushf pusha mov mov pushf pushf lea jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha mov jmp movw mov pushf pushf pushf popl jmp pushf push pushl jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp call mov pushl call mov movw pushf lea jmp cmp mov cmp add stc clc stc movl mov movb sub call stc cmp mov sub jmp cmc cmp shr jmp call push jmp dec btc or mov push add mov clc add jmp pushf mov pushl pushf popl pusha jmp mov pushf mov mov jmp not pusha cmp not push cmc sub jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp jmp call jmp shrd not mov stc bt stc add pushf mov jmp call push jmp mov pushf pushf push lea jmp btr dec shl bt mov stc test add call call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret push push mov push pushf lea jmp cmp neg neg add sets xor rcr add rol dec add jmp push push inc jmp divl push mov push mov push jmp cmc xor stc stc mov bt test stc add pusha jmp movl jmp bt shl sub mov add shr add mov cmc call mov mov push pushl movb lea jmp mov pusha call push pusha mov pushl mov pusha mov jmp btr daa mov sub shr rcl mov call push call or mov push pusha lea je call pushf pusha mov movl push movw lea jmp pushf jmp pushf mov pusha lea jmp pushf xchg jmp pusha xchg call movw pusha pushl popl push movw lea jmp pushf neg cmc call push pushf pusha jmp mov mov pushf mov pushl push pushl lea jmp and lea jno push movb pushf mov call pushl mov pushf mov mov jmp push push movb pushf mov lea ja pushf mov pushf push jmp call nop repnz dec (bad) mov test mov pop in mov or mov (bad) mov cmp mov adc mov mov mov jge mov jmp mov dec (bad) mov cmc iret mov dec loop ljmp (bad) mov mov icebp mov jo mov arpl mov jmp (bad) mov repnz (bad) fcmovnu mov movsl (bad) (bad) cmp mov (bad) mov jo mov out mov pop (bad) mov cmp mov adc mov xor mov jo mov jmp mov test mov inc iret mov cmp mov jmp mov (bad) mov dec in mov scas repnz fcmovnu mov jmp (bad) mov push jecxz decl mov (bad) in mov mov mov jmp mov jmp mov dec out mov dec in mov loope mov cmp mov pop icebp mov sub decl out (bad) mov iret mov cmp mov test mov jne mov scas repnz inc iret mov or mov out mov addr16 loope mov fcmovnu mov adc mov movsb fnstenv (bad) jmp mov out mov test mov (bad) mov dec (bad) mov jne mov test mov pop (bad) mov movsb fnstenv decl mov movsb fnstenv decl mov fcmovnu mov scas repnz jno mov adc mov jno mov mov mov mov mov arpl mov mov mov loope mov lcall call aad (bad) cmp mov mov in mov dec loop decl fdivl push iret mov adc mov xchg out mov (bad) iret mov (bad) mov (bad) in mov jo mov (bad) iret mov and mov or in mov dec out mov mov mov bnd mov scas ljmp (bad) iret mov xor mov xchg out mov dec loop jmp mov xchg out mov cmp mov adc mov inc iret mov nop repnz pop icebp mov repnz push iret mov movntq lcall in mov jno mov movntq (bad) (bad) mov dec in mov cmp mov push (bad) mov outsl out push call mov bnd mov push (bad) mov addr16 repnz call fnstenv pushl mov or iret mov xchg out mov jmp (bad) mov movntq jmp mov arpl mov jmp fnstenv decl ljmp (bad) in mov jmp mov dec in mov (bad) mov xchg out mov adc mov jmp mov repnz (bad) fcmovnu mov popa (bad) mov push jecxz decl fnstenv push iret mov jno mov bnd mov mov out (bad) mov jmp call aad call mov movsb fnstenv (bad) jmp (bad) mov dec (bad) mov xor mov xor mov pop icebp mov addr16 test mov jmp mov test mov movsb fnstenv decl mov lcall ljmp mov scas repnz pop in mov lcall lcall jecxz jmp out push iret mov sub (bad) mov loop jmp repz adc mov xchg out mov mov mov cmp mov dec loop jmp (bad) mov test mov scas repnz mov repnz cmp mov or mov movsl (bad) (bad) (bad) mov jne mov push (bad) mov jmp iret mov (bad) mov jmp mov pop (bad) mov jge mov jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call push pushl mov pushl pushl pusha pushl ret jmp ror add pusha mov mov call xchg jmp mov push push movb lea jmp call stc bt sub jmp pusha pushf pusha pushf popl call bswap call mov pushf mov lea jmp shrd inc mov jmp mov push pushl ret add pusha movb pushf lea jmp pushf stc sub call pushf lea jmp mov pusha jmp push push push pusha mov movb pusha lea jmp btc mov call pusha clc mov bt clc clc push add movb call pushf push pushl popl pushf mov movb lea jmp shl bt shr pushf pushf bt call mov movb push lea jmp call ror clc clc call cmp stc add pusha jmp jmp inc setno neg pushf pusha ror call movb jmp pushf popl call call bt bswap lea jae stc xor bt pushf sub jmp jmp call push mov pushf pushl mov pushf pushf movb lea jmp pushf lea jnp push pusha pushl push pushl ret mov jmp add push push pushf call movw movw mov call movw jmp lea jo push pushf mov jmp push xchg lea mov mov jmp bt clc test xchg cmp mov call movl pushl popl pusha pushf push lea jmp call call pusha mov call pusha mov call jmp bswap add lea push pusha cmp jmp push movsbw pop lea push jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp adc push jmp mov pushf lea jmp call stc mov pusha call pushl popl pushf pusha push pushf lea jmp mov pusha push push pushf mov call inc neg mov cmp clc add push pushf pusha jmp pusha pusha lea movl jmp pusha mov pusha mov pushl mov pushf mov movw push lea jmp mov cld call bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf popl pusha mov pushl popl push push push pushf lea jmp lea jns pushf mov call jmp push pushf pushf push mov pushl ret lea jne push push mov pushl push pushf lea jmp jmp mov pushf jmp bt xor mov push bt cmp bt sub jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp mov jmp mov call clc add push pushf clc neg call mov pushl pushl jmp movzbw mov cmc (bad) icebp add loope dec add mov add add lea jmp push pushf mov pusha pushf mov jmp pushf popl push jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp cmp sub call mov push push lea jmp cmc pushl popl test call pushf mov mov mov pusha mov call bt add mov push pushl movl mov push pushf mov lea jmp bsf bts rol mov jmp stc sub cmp jmp clc pushf ror push mov lea mov call movw mov pushl mov pushl lea jmp pusha mov push mov lea jmp mov movb push push pushf lea jmp lea pushf movb pushl push mov pushl mov lea jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp call movb mov jmp pushf jmp jmp bswap mov neg adc sbb mov pusha shr dec call push mov pushf mov call push mov pusha mov push jmp pushl popl push pushl lea jmp pusha pusha pushl popl push movw movw lea jmp pushf popl jmp call pushf popl call mov pushf pushl pusha pushl lea jmp call call pushf mov pusha pusha mov lea jmp movw movb movl pusha jmp push rol mov cmp cmc mov pushl call btc btr cltd mov btc pop inc jmp mov pushf jmp sar add xor bswap rol movzbw mov call not clc bt not test pusha cmp and pushf movl jmp mov push pushl mov pusha mov push jmp jmp pushf mov pusha jmp call pushf mov call call call jmp jne push mov pushf lea jnp pusha movb mov mov jmp mov pushl mov mov pushf mov pushf lea jmp pushl popl push pusha push movw lea jmp jmp jmp call mov mov pushf mov pusha mov pushf pushf jmp mov movb push pushl pusha lea jmp pushf pushf mov pushf push push lea jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp mov pusha pushf movw pushf lea jmp pushl popl pushf pushf lea jmp pushf popl jmp movb pusha jmp mov inc clc pushf neg call call mov mov pusha mov push mov mov pushf mov call pushf jmp jmp push mov push mov lea jmp push lea jp pushf pushf pushf pusha jmp movb call mov mov pusha pushf pushl ret stc clc ror stc sub jae sub test pusha stc xor mov sub jmp lea jbe mov pushf lea jmp add clc clc pusha shrd pushl mov call xchg cld pop mov pushf cld lea call pushf mov jmp mov call movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov call mov pushf pushf mov pushf pushf mov lea jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp movb mov pusha push lea jmp clc test btr rdtsc call mov pushf lea jmp cmc jl daa not notl aas mov push stc test sub jmp call pusha sub jmp xor neg movzbl cmc call mov call add pusha pushf mov movl call push mov pushf pushl mov mov pusha pushf mov mov push jmp add add inc dec movsbw lea xor movzbl stc bt pusha call mov call call pushf jmp bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp cmp shr pushf movb mov push pushf popl call mov pusha push lea jmp push mov call lea jne call pushf mov push lea jmp mov pusha mov jmp call mov push mov pushf lea jmp jmp movl jmp dec add add add xor add add push add insl add .byte mov 