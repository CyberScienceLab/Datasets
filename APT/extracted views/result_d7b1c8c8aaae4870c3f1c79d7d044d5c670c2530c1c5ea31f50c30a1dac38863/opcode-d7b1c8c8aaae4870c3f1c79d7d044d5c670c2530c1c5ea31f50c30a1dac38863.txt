xchg pcmpgtd push xor sub push data16 adc add inc or data16 or je or data16 add pushw push pushw add pushw add data16 xchg pcmpgtd bound data16 or adc or data16 push push data16 push test data16 mov or data16 or and xchg pcmpgtd inc push les pcmpgtd and sub data16 mov pcmpgtd add dec insb push data16 add test data16 xor push mov mov lods insl push dec mov pcmpgtd sbb data16 in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add add adc dec add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add xchg popf cmp not mov add add add add imul add push add add and add add add and pop add add add adc inc add add add add pusha push inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add sub inc add adc push inc xor add or or add add add test xor inc add xor add (bad) decl add add add add add add add add adc enter test inc add add addb add add add gs cmp inc popa jb outsl jae add inc gs imul add add pop and stos lahf lcall add add add add add add add add es add add add mov fisttpll sub cs add add call add add add push add add es (bad) popf dec mov mov add add add lods add add add add inc add add add add add inc add add add dec add (bad) (bad) incl add add inc add mov add add add js xor inc add add add add add add add cmp inc add add add adc add cmp inc add add add add dec add add add xlat jp and je inc add pop add add call (bad) (bad) incl add add add add add fnstsw clc pop inc add (bad) (bad) incl add add inc add inc add inc add add add add inc add add add (bad) incl add add push inc add dec add add add add add inc add add add and add add jo inc add add add inc add add add add add add inc add add add mov add adc add and sub inc add pop add add call (bad) (bad) incl add add add add fnstsw clc pop inc add (bad) (bad) incl add add inc add adc inc add inc add add add add inc add add add test push lahf dec add add mov add adc add add enter add add add inc add add add orl (bad) (bad) incl add add dec add add add add add sbb add add mov add add sbb add add lock add add in sbb or add lock add mov push sbb jo dec add add add jp enter fcomps inc add pop add add call (bad) (bad) incl add add add add sbb fcomp jp clc pop inc add (bad) (bad) incl adc cmp add js inc add add add sbb call and add add inc add add add nop and pop add add sbb add fnstsw mov add add adc inc add add inc add add test add fnstsw lods and add add inc add add add add add sbb add fnstsw mov inc add add add adc dec add add add add add fnstsw shlb add add add add and add add mov fidivr fsubl inc add add add adc push add add and add add add inc add fidivr in inc add add add add add sbb jo inc add inc add inc add add sbb jo inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add sbb pusha adc data16 insb adc mov sbb pusha adc data16 insb adc loopne inc add inc add inc add inc add add sbb jo inc add inc add inc add add test (bad) (bad) (bad) incl add add dec add xorb loope sbb ret add add add mov inc add add or add add add add add inc add (bad) (bad) (bad) in and je inc add add add js (bad) incl add add add adc (bad) (bad) cmp inc add add add add xchg (bad) incl add add add (bad) (bad) cmp inc add add add incl add add add adc (bad) (bad) (bad) incl inc add add add add add add add add add add incl add addb add add push outsb je xor add push popa insl insl popa outsb jns jae add push je imul imul add add inc gs imul add mov clc inc dec (bad) out pushf sub lret aad mov inc scas inc xor pop and stos lahf lcall jbe dec dec into (bad) dec mov in aam daa in dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add add inc add add add add add add add and dec and and add add add jns add xor or stos add xchg dec jo imul lods xor or stos add xchg inc jne insb gs jns add add je outsl outsb xor inc insb imul gs inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg dec popa bound xor add gs xor pop add mov or das mov jnp xor test int3 inc inc test test xor cld hlt fisttpll sub cs (bad) repz in inc insl inc lods nop in sub cmpsl movsl cmp cmc sbb icebp inc mov xchg cs pop rorb cwtl (bad) mov sbb fs (bad) popf dec mov mov es loope (bad) lea add push inc push dec xor cs dec dec add add push add add insb outsl arpl gs imul bound add add and add add and dec add or je jmp push mov call jmp add add add add jb gs xor add add adc add inc gs jb outsl jb je inc insb popa jae add add in and cld and add add xor add add add or je jmp push mov call jmp add add add add gs xor add add add jne arpl imul add jb outsb add add add add add je jo outsb inc insb imul push imul dec and insb and add add cmp dec add or je jmp push mov call jmp add add add add jne push gs jne arpl jns gs add in and mov add dec mov add or je jmp push mov call jmp add add add add add add add add add incl add add add add add add add add popa add jb outsl add popa add add add add add add outsl add outsb add add add add add imul jb jae add xor add push add add add add jae (bad) (bad) (bad) incl add and push add xor and push add xor add add andb add add add lods xor or stos add xchg adc add inc add popa add outsl add add insl add add add add add jo imul outsb add jne jae xor add add adc add inc add jae jae add je add add pop pop jbe popa push popa jb imul add add add add jb outsl add add add popa add add add add outsb add add add jae push add add add data16 jb popa add add jns xor add add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push gs jns je insl inc jb outsl jb andb add add jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jns xor add pop pop jbe popa inc jns fs pop pop jbe popa dec xor jns add pop pop jbe popa push gs jb add pop pop jbe popa push jne dec ja gs add pop pop jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa push je push popa jb outsl jbe add jbe popa push je inc outsl jo add add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa push je inc insl jo pop pop jbe popa inc jb gs je add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs popa jb add add int3 xor add es (bad) popf dec mov mov sbb icebp inc mov xchg cmp xor or stos add xchg push add add add add push je imul inc imul addr16 add add inc add add (bad) (bad) (bad) jmp add arpl jb addr16 add adc add pop or inc add add add dec xor pop pop and stos lahf lcall iret cmpl (bad) out pushf sub lods xor or stos add xchg insl add add add add jae add gs jb add add inc add add (bad) (bad) (bad) jmp add jns jb add add add adc add cmp inc add add add add pop add je outsl outsb xor push add add je outsl outsb xor add adc add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add call add incl sub add add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc add or add add add push or inc insb imul gs add pop add jne push jno xchg or or add add add add or inc jne insb gs jns add or dec outsl jne outsb add xor or adc add add add add push add gs xor add push add gs xor add out jno adc add add add add push add gs xor add gs xor ss push fwait add add add dec xor add fisttpll sub cs mov mov or das mov jnp dec lods xor or stos add xchg (bad) pop or mov add or push popa insl insl popa outsb jns jae add imul add inc add es or insb je add inc or add push inc or add add add add add add add add add add add add inc or in stc xor sub outsl cmp or pop stos jl push sarl xor ss dec sbb xchg sbb mov imul cmc mov aaa loopne test jp ds fldt ffree pop adc int3 lds lock pop push cltd and es jecxz bound in mov or push inc jno push sub cwtl fs fsts lods arpl popf std repz sbb xlat stos adc rcr mov aaa loop ret mov and cli or gs push jmp aas ficom fcomp test leave sbb push call and mov pop sub mov push out cld pusha xchg (bad) in scas (bad) enter adc inc (bad) out pop push sbb add (bad) dec cmp addr16 stc xor sub in cmp or mov jl push rcrl pop mov push insl pop imul cmp pusha push fadds cmp mov daa pushw xlat push add adc push mov and in in xor adc adc iret cmpsb jp mov jo inc pop mov xchg dec add (bad) fldt jg mov ficoml mov jbe cmpsl scas ja fsubr nop xor aaa int3 test cmp mov cli negl (bad) hlt loop push flds sub shrl rorb lds or test jae outsl clc pop enter loope or dec pop ds aam jns inc gs movd sbb sbb fs xor call lock jmp jge and imul (bad) adc scas dec push sbb out or lods (bad) pop rcrb aas lret jb fnstsw insl shrl pop and pop icebp cmp mov jne fdivs cmp pushw jecxz pop push adc push mov and cld in xor adc xor iret insb jp adc mov std scas jo push dec xchg mov add and jns mov into adc jecxz loop cld sbb dec arpl cmp pushf xchg data16 sub fs call or add outsl popa out rorb push cmp icebp icebp je mov mov fisttpl xor stos jne in mov scas mov in fcmovbe and lcall jg cmp sarb pop int nop jmp xlat movsb pusha inc addl mov test cmpsb mov sti (bad) pop aas add stos or dec dec ljmp shrl movsl and int3 testb test rcl sub push xchg enter ret adc notl dec out popl mov fdivrs lcall jb mov push adc dec add pop loopne inc mov daa adc sbb into cld sbb mov and pushf arpl cmp or lea ja cs add outsl popa dec or inc inc cwtl out mov xchg mov fbstp gs xor stos jne in mov scas mov in fcmovbe inc clc lcall jno cmp movsb and adc (bad) sub xchg xchg jne fsts or pop insb dec ljmp mov xchg lds sub jne mov and cltd add ss push xor jl movsb out aad sub rcrl mov daa repz lods movsl cmp or sub (bad) cmp imul (bad) jb push movnti fwait jmp lcall hlt adc aaa and cmp js lock (bad) lea mov loopne mov and mov push sbb cltd ret pop add xchg enter inc inc mov pop mov xchg mov or std fstl and cs je mov and test iret ret and (bad) sub xchg xchg aad inc sbb fadds cli or out pop pop push ljmp lds sub sbb mov and add jae ss cltd xor jl push out sub aad rcll push sub pop add mov fldt sub imul xor ret dec jb jmp lcall hlt cmp call mov stos push outsl js pushf mov icebp lea mov loopne fucomp and mov mov (bad) pop mov mov pop adc xchg add inc enter pop test es adcb andl inc cli adc xor push sub ds hlt or mov sub mov ja xchg pop sbb cmp jne aas out xor popa outsl adc mov gs or jbe jl inc (bad) pusha fildl addr16 pop xchg fwait mov cltd mov (bad) cmp cmp xchg lret dec shlb and pop dec inc adc pop jb xchg aaa add mov xchg je imul mov add pop sahf fisttpll loope js sbb mov adc push fisubr repz cmp push xor and les sbb lds stc push mov push push stos cs xor pop es insl adc xor inc sti adc jno mov mov xor sub hlt jp,pt mov ja dec pop sbb cmp jne lods out (bad) inc jp outsl adc mov clc lock or xchg imull jg xchg inc (bad) jbe inc and pusha pop xchg push imul dec mov nop jge (bad) lret dec cmp xchg and pop dec adc or pop jb xchg aaa jmp mov xchg je imul scas cld push movsb stc insl or out mov popf lock sub jo or test je mov mov cmp (bad) sbb test sarl pop push into push jge cmc sbb dec (bad) inc xchg xchg add mov jae inc roll jp shll aad cwtl dec sti repz mov cli das pop cmpl lea pop bound jl imul sahf imull lret xchg in push push (bad) aas add ret sub into xchg cmp xchg and aam dec adc shld inc fnstcw in jg clc iret out loop rcrb xor int mov push in sbb mov pop jnp nop lahf mov fsub pop push adc popf fs imulb cmp hlt pop mov and ljmp mov movsb enter push adc xor mov mov jo or xor push jno stos inc (bad) stos mov pop fwait cmp jb testl jge cmc sbb pop dec cmpsl popa dec mov add fnstcw inc jmp arpl sti ret cwtl dec push das pop test xchg cli xchg jns lea pop (bad) fimul popa sahf testl mov push (bad) xchg add push sub aas xchg cmp xchg or and movsl mov in pop negl imul cmp pop or push jnp repz mov lea inc ja repnz sbb mov adcl xchg dec ds fisttpll ljmp rcll push int3 mov popf divb hlt dec xchg sarl (bad) adc testb sahf dec adc out mov fdivrs das jle cmp in and xchg scas mov sbb repz inc xchg jmp stc xor loopne daa mov mov sbb popa add cld pop and pushf bound cmp or cmpsl dec sub fwait into sbb pop or xor jg sbb sub aas push (bad) xor xchg lock mov outsb xor sub mov test mov mov pop cltd jp jmp divl mov subl pop pop or push jnp repz int nop movsl pusha lea xorb test ja inc sub js push cmpsb mov cli orl dec xchg (bad) clc aam ret mov pop popa and mov popf testb sub mov rorl (bad) cmp xchg adc push stos dec shlb adc inc adc das popf push cmp in jle adc mov fcoml std scas outsl repz stc in inc add and xor mov adc dec int call dec popa inc and dec imul xor jne mov aam push imul cmp out in push or test sub jb fstp sbb lea mov pop pop (bad) cmc adc mov dec mov pusha sub xor inc shlb js jecxz pop jae outsl push pop daa add testl mov jns inc ret cs outsb fidiv or sub pop fs xchg mov sub add (bad) cmp repnz leave cmp sbb rorb stos cwtl dec or stc xchg mov pushf xchg jle sub imul push loop adc rorl sbb ss add roll movsl jmp sti andl and mov (bad) gs pop into pusha out inc popa inc adc mov dec and jne mov xchg push push sbb aam out imul cmp push sub jb cli fcompl push lret pop (bad) push adc pop inc dec cmc xchg pusha mov lahf mov xor js jecxz data16 or pop pop add outsl inc mov mov dec test jl dec jns outsb ret cs lock xor inc jg jne cmp data16 xlat mov mov inc ljmp dec xchg jl dec sub arpl pop mov pop int call std add (bad) sub imul or pop or aam cmpsl pop ja cwtl imul ds sti shlb pushf jns outsb jb (bad) mov or pop mov loop adc pusha cmp dec mov and pop mov and push clc scas enter inc scas addr16 negb (bad) (bad) test ret aas in fmull mov arpl sub (bad) adc cld out icebp inc cmp fwait and and out test add mov lods fistpll inc sub adc cmp mov lea push and inc xchg fs inc xor aaa jg jmp cmp data16 mov mov inc ljmp mov sub and mov sub arpl add mov push xchg dec add adc (bad) mov mov imul or in cmpsl pop ja aam out pop push sti cwtl cmpsb or int3 aad jns in xor fisttpll push jp mov loop cmc out pusha fmuls dec sarl mov (bad) xor and sbb scas pop push es inc scas enter pop (bad) loopw imulb lret ret shr arpl cmp (bad) pop into cld sub xor rclb mov dec dec adc xor and xchg xchg (bad) fstpt les insl add jns push sbb sbb xor pop dec cmp lods xor shrl cmp (bad) push adc or pop gs xchg in loopne cs push out mov jne or push inc add cmp and aad jp outsl or and mov in test add and xor jle sbb sbb pop ss repnz in push mov aam out jne dec fxch daa loope aas rclb xor repz clc inc ret cli ret push jecxz push cmp jl inc ds call scas xchg add jnp stc add jmp or das jmp loope js sbb out rclb adc mov adc xor movsl int cmpsb (bad) and les jns push push negb arpl sbb in lods xor sarl insl popa bound adc or sti gs and in fidivl push push out mov or or push pushf add test xchg mov hlt jmp (bad) ficomp mov pop (bad) notl fidiv pop ljmp add and xchg xchg jb popa sub jecxz std mov mov cmp jmp sub fisubrl (bad) pop xor dec movsl jo call cmp loopne aad cmp xchg jne out data16 imul dec lret jp lcall push mov mov ret ds mov cmpb adc lea xor sti fmuls in cmp mov sbb arpl mov fdiv lods (bad) into and dec mov jl sarb js (bad) shll add lcall mov (bad) ja jns aaa push loope and adc mov test clc mov out jmp hlt je cld ficomp fisttpl mov leave movlhps pop inc push negl jno xor add popa test mov lret pop push jecxz std mov mov pop stos inc cmp xorl (bad) pop lds lods mov push scas ret cmp loopne stos lret cmp jne out rep imul push lcall push enter pop mov cmp add jnp (bad) aam hlt add dec adc dec in stc test jp rcrb or fidivl sbb sti cld insl repnz cs divl add and xchg and loopne adc and fwait and aaa in pop aad lret jle jmp int fs or je shrl std mov or cmp enter push or dec push or aas jmp mov into ds fstpt ljmp lds dec push xchg mov lcall aad inc inc ret (bad) mov mov mov push clc ret nop cmp push (bad) fmuls and call mov lahf mov stos sbb fmull daa repz xchg iret roll xchg imul sarl (bad) aam hlt add dec adc dec in stc test sub sub fldenv jo push sti lods insl repnz xchg cld pop divl inc add and ja sahf loope rclb pusha loopne cli sbb mov movsb mov aad mov sub cltd int fs xor sub dec std add pop in mov cmp xor jecxz bound dec push or aas jmp mov mov pop loop fmul push neg mov ljmp mov or jl cli push mov push shrd pop xor xchg and out outsb adc xor inc cld adc cli mov ss cmpsl (bad) das sub hlt aas adc mov aaa movsb scas sbb dec pusha sbb cmp xchg test std jbe scas out (bad) inc jnp jo xor shll (bad) mov dec stc icebp ret or xchg clc sub inc nop ja inc and sbb xchg push insb cltd leave (bad) jecxz or cmp or cmp xchg and pop dec adc xchg aaa jmp mov cwtl je imul sub sbb ficomp dec popf mov aad sbb fbstp push xor stos ret dec and bound repnz mov and lds or mov push maskmovq imull in inc xor xchg and or xor inc cld test jb mov adc (bad) aas mov pop pop or push aaa sub movsb sbb js xchg pusha std std cmp scas test jbe inc out xor shll (bad) mov dec stc rol push or xchg cltd sub clc nop ja inc and sbb xchg push add insb dec lea cmpl int3 mov addr16 mov dec adc adc jmp mov int xchg loopne cs lret sub sbb ficomp popf movsb frstor int3 bnd data16 xor push jb lods dec (bad) stos mov sbb mov jae testl jge cmc sbb pop dec cmpsl bound xchg cmpsb add sub xchg ret pop jnp aam mov mov lds mov fildll or jp mov pop arpl mov imul lahf clc add push nop xchg add push sub inc xchg cmp mov aad dec adc adc cmp pop pop stc (bad) dec or (bad) ja jecxz xor mov push push mov shr loop in mov sarl mov jbe gs imulb lods (bad) dec out pop lea xor or pop movsl leave jle std push adc outsb out mov repz sub fisttpll repnz push test mov std sbb mov jae stos xchg cmp sarb pop sbb push dec cmpsl cmc dec mov add fnstcw inc ljmp pop mov (bad) mov vpandn test xchg sti das jp jg dec xchg arpl mov pop fsubl clc add addr16 mov pushf nop xchg out push push lret cmp sub aad mov daa or adc pop mov sbbb call fwait ja insb mov fcmovne push mov shr loop add repz ja inc sub cmpsb mov sti (bad) dec aas push or xchg dec addr16 mov cs ljmp mov pop bound int3 mov popf testb test rclb enter ret lret testl dec adc push call cmp sahf push cmp out jle push adc fstl std scas jo push dec xchg mov add and ss mov mov jecxz loop cld sbb pop cmp pushf xchg pop sub dec sub and jmp or add sub inc cltd adc icebp icebp xor mov outsl xor or xor stos jne in mov scas inc cld pop in fimull mov test cmp cmp pop pop int nop cmpsb hlt mov inc addl jb xchg cmpsb mov sti (bad) pop aas push sbb xchg dec addr16 or dec dec ljmp shrl bound mov int3 testb test rclb enter ret insl xchg adc push call push das sahf mov jle push adc cwtl es jae mov push adc dec add pop loopne inc mov daa adc sbb mov sbb jne push jbe and pop cmp or dec and fwait xor and or add sub inc cltd mov push adc xor mov fbstp gs pop inc push cmc xchg popa mov mov inc shll xchg fmuls es mov mov dec test jp outsl ret jno arpl jb sub add cmp and in lret (bad) je in ss xorl cltd dec dec (bad) mov xchg mov popf xchg jl loope jg sub ret mov jge cwtl mov push jecxz adc mov ds movsb das les (bad) (bad) aaa adc add movsl test jmp xor xlat dec out xor mov int3 cmp jnp jbe pop iret dec les mov and pop stc mov push es inc scas push nop (bad) loopne test fstl sarb sub cld lock cmp fwait and and push je push add mov lods loopne xor dec cli inc sub sti xlat sbb adc sbb and inc cwtl gs inc xor cmp inc (bad) addr16 mov enter daa (bad) dec jmp in or jl dec sub and lea sub fs mov pop into imul push add (bad) push orl or in test js aad adc sbb (bad) sub cmc repnz fimul jbe inc fcmove daa loop add push pop addl ret sti add cmp sarb inc aas pusha iret jmp scas mov add leave adc pusha pminsw (bad) loope std sub out jns sbb rcl adc (bad) pop inc stos dec dec adc ljmp mov int xchg nop fdivrl lds insl add jp imul negl in xor cmp aam popf cmp arpl gs pop adc or xchg pop in loopne das inc pop out mov jne push pushf movsb mov add incb mov xchg jnp jo mov jae push and mov out stos mov xlat repnz sub hlt xor jle sbb sbb pop aaa cmc repnz in pop mov incb pop loop mov cmp in jo popf jae (bad) data16 das (bad) dec addr16 push mov call cmp loopne aad sbb xchg insb test jg outsl jp ss push int3 ja fwait pop leave dec mov out mov jge,pt out les sbb je mov rcll add xchg mov dec inc out aam insl mov mov sbb sbb or iret and dec pop jge jns push cmpsl (bad) repnz gs jecxz mov mov aam inc jp adc loope and outsb fdivs sbb mov cmc jmp fdivl pushf fistp mov pop fmulp clc pop fbstp jmp pop popa sahf xor fmul pop neg mov ljmp dec push adc xchg (bad) aaa mov lcall icebp movl mov test movsl negl add (bad) fsts and cmp mov shll sbb lods or fst shlb sbb jl imul aam stos enter push push xchg cs cli cmp jnp rcrb or fstpt sbb xchg cld outsb clc xor cs and inc lahf loop rcll pusha loopne sti sbb mov push mov movsl test cmp or sub jle jmp jne gs shrl or cmp xor xor jbe push imul xor je jmp (bad) inc pop jecxz fmul aas neg jns ljmp (bad) push adc sahf dec adc add ret adc das icebp sub popf mov pop stc fsts and cmp dec ret rcl sarl mov inc lods sbb fisttpll xchg rolb or aam stos enter add mov push out cli xchg jnp rcrb or fstpt sbb cld cld outsb repz cs clc js add and es mov adc es mov or adc inc adc notl into jne loope cs lret mov add jbe mov add loop mov iret jp push sahf adc pop xor lods pop push and stos les inc push mov and movsb xor jg (bad) or mov push psubb push lods lods xor outsl out xchg or lock cld test sti push mov mov sub das cmp cmc or pop sbb dec jns xchg pusha sbb cmp xlat ja inc call bound mov sar rcl push dec data16 ret out or sub inc nop popa fisttpll imul add gs mov lcall test add jle xchg int3 dec shll and pop dec inc adc notl into mov cltd jne push mov lret push jbe mov add cmpsl sbb dec push loop jp push sahf mov adc pop fildll stos les inc cmp arpl repnz xor and (bad) movsb mov or jl sti push mov push shrd in pop xor xchg fwait out xchg and lock adc xor inc cld push mov mov ss test daa das sub mov sub (bad) scas sbb dec mov popf xchg xchg out push push lret cmp sub iret xchg les aad mov sub cmpsb mov in pop mov sbbl lret xor mov into push mov shr jecxz push pusha mov sarb mov ja push jns loop lahf pushw lods (bad) xchg call dec and pop ss mov push lret (bad) push movsl sti outsl or lock aaa mov sub repz addr16 jae mov add movsb jne nop (bad) mov cmp fildll jae clc xchg sarl jno adc push jle negb rcrb arpl xchg xchg add mov je inc ret pop jnp aad ret (bad) mov (bad) mov mov sti xor addl (bad) imul add (bad) stc jo int3 xchg out push push xchg inc add lds iret xchg cmp mov or mov cmpsb pop mov sbbl lret aam js insl mov fmul mov pop push out push mov loope push in jl xchg mov and push mov data16 imull aas lods stos dec call and ret and mov movsl lret (bad) push adc xor mov mov sub repz addr16 adc dec call push xor dec jg pop adc cltd daa push jae mov pop adc dec add pusha loope dec mov sub mov sbb jne pop ja and pusha cmp or test and pushf xor and or add or movsb ds or xor loopne fsubl ss or enter pop out fisttpl mov and sbb test cmp pop push into push jl hlt pop mov mov sub inc (bad) fcos or mov sbb call pushl or lcall lcall jnp pop jmp (bad) mov incl jmp pushl jmp (bad) mov pushl (bad) jmp xchg ljmp incl incl lahf (bad) jle test dec call sar jmp (bad) (bad) leave jmp lcall (bad) jp adc (bad) clc call ljmp inc decl decl out decl jmp (bad) stc call ljmp call (bad) cmp jecxz (bad) jmp pushl mov mov ret jmp dec (bad) jl mov scas lcall push dec ljmp inc incl dec jmp jmp (bad) sti jmp lcall sub cmp in popa jmp ljmp inc call sbb mov and jmp mov (bad) mov (bad) fdivr icebp decl (bad) cmp pop (bad) mov decl jmp ljmp jne (bad) (bad) fdivrp xor fwait inc inc lcall (bad) (bad) jge add (bad) (bad) mov arpl js xchg ljmp jo (bad) (bad) mov call call ljmp lcall std incl int pop call jle lahf pushl cli ljmp (bad) jmp sar (bad) (bad) mov (bad) (bad) dec jmp idiv into jmp incl (bad) fdivr mov lcall mov jmp pushl xchg pop jmp decl aad (bad) mov je loop mov dec lcall jmp (bad) (bad) call call (bad) in decl (bad) jmp jmp (bad) mov (bad) ljmp ljmp decl jmp insb pushl cmp adc pushf (bad) jle ret (bad) cld (bad) fdivrp jp push ljmp iret jmp (bad) sti jmp dec pushl incl lcall jmp push lcall jmp sub (bad) lcall call push push decl jmp movsb (bad) (bad) lcall in mov dec (bad) (bad) call incl cmc (bad) jg pop pushl mov xchg fcos jb dec (bad) mov call jmp decl (bad) aaa pushl cmp cli jmp pushl pushl jge cmp jmp decl call fcos mov mov and mov test (bad) or movsl jmp (bad) mov call decl jmp pop (bad) mov (bad) in incl decl sti ljmp or ljmp mov iret jmp cmp push lcall lcall (bad) (bad) lcall ljmp leave jmp decl (bad) mov incl fwait incl pushl (bad) (bad) inc call inc (bad) (bad) jae ret call ljmp sbb idiv xor decl jmp cmpsb (bad) aas lcall and mov dec (bad) cmp ljmp incl xor jns inc pushl mov (bad) lcall (bad) jl jne mov call mov decl lcall pushl pushl (bad) incl dec ljmp call call jmp xor push call lcall sub mov mov decl sbb and ljmpw inc inc lcall mov idiv dec jmp pushl repz decl ljmp pushl gs call (bad) out lcall pushl (bad) clc ljmp lcall cmp cmp pushl call ljmp (bad) jmp mov js sbb jg (bad) incl or pop jmp inc lcall and call push incl (bad) fdivr mov mov jo xor mov and lcall pushl idiv mov mov (bad) call (bad) cmp (bad) jl dec lcall jmp decl sar outsb decl ljmp lcall push (bad) (bad) (bad) ljmp push lcall loope lock (bad) ljmp (bad) cmp nop (bad) in incl call ljmp xchg (bad) incl fcos jbe jl iret jmp incl int loop or cmp lods inc decl adc pop decl xchg ljmp incl add ja (bad) call (bad) (bad) jle inc pushl incl incl or adc sahf (bad) std call (bad) mov pushl incl lcall and movsl (bad) cld lcall (bad) lcall pushl pushl call call pushl jno enter arpl std lcall (bad) cli ljmp mov decl (bad) cmp jmp (bad) aas lcall pushl (bad) fdivrp xor or gs in incl dec ljmp decl movsl (bad) jle fdivr idiv hlt (bad) cld inc decl adc ljmp dec call ja jns sar out decl sar out and imul inc incl jo mov push jmp (bad) (bad) add (bad) iret (bad) in pushl cmp scas incl dec ljmp call ljmp incl inc decl ljmp lcall (bad) js popf push incl incl (bad) (bad) (bad) (bad) fdivr movsb jmp loope cmp add sbb (bad) cmp cltd pushl (bad) cmp pop ljmp pushl mov call call inc lcall push incl inc call call adc sbb cmp (bad) clc call call call jmp (bad) jnp xchg (bad) out (bad) fcos or and mov ret ljmp (bad) ljmp inc lcall test pop (bad) mov ljmp cmc pushl pushl decl pop jmp decl ljmp lcall jmp (bad) jg inc lcall (bad) mov (bad) mov ljmp sbb pusha jmp jmp mov (bad) (bad) ljmp lcall decl incl (bad) (bad) xor jmp (bad) cmp popf (bad) cmp sbb jl push (bad) call inc ljmp lcall mov xchg jmp mov inc call (bad) cli jmp mov inc decl jmp (bad) cld call jmp push decl (bad) cmp xchg call call push ljmp incl decl (bad) js (bad) dec (bad) jmp pop (bad) ljmp dec jmp sub sbb call lcall out aas call call inc dec jmp pushl dec ljmp decl ljmp (bad) cmp sar aad (bad) and jmp pushl lret push incl call ljmp inc ljmp dec ljmp xor sar pushl jmp jmp jmp (bad) jp stos call call jmp cmp sub int adc jmp mov jmp pushl decl jmp lcall push decl xchg (bad) jg pop (bad) (bad) call jmp decl popa jmp outsb pushl ds fdivr cmp inc lcall incl incl ljmp pushl ljmp pushl ss pushl sti jmp (bad) jnp sar pusha jmp pushl pushl lcall (bad) mov pushl repz (bad) lret incl incl dec (bad) cmp imul call jmp decl incl call call ljmp into jmp decl decl adc insl pushl (bad) jmp decl jmp incl mov and jmp jmp jmp call call call jmp (bad) mov decl dec jmp loop mov mov decl in mov pushl incl call jmp pushl (bad) mov (bad) cmp pop (bad) jge (bad) incl incl lcall movsb pushl lcall (bad) cmp out decl push decl test pushl mov xor aaa decl pushl ljmp pushl mov pop (bad) (bad) ljmp (bad) std (bad) fcos lret pushl incl pushf push dec (bad) cmp mov ljmp incl jmp cmp sahf pushl lcall incl call out mov (bad) ljmp pushl ljmp jmp lcall incl (bad) pushl int3 ljmp lret lcall decl (bad) stc call (bad) push ljmp add (bad) call pushl cld lcall and jg fdivr lcall mov dec ljmp inc (bad) (bad) ret ljmp call jmp cli jmp call (bad) sti ljmp incl or daa (bad) (bad) lcall and xlat call pop pushl pushl jmp (bad) cmp xchg jmp jmp push pushl or aas (bad) fdivr ljmp lahf pushl pushl push inc lcall pushl sub ret jmp decl jmp pushl pushl jle inc decl call insb pushl dec call dec (bad) mov incl (bad) mov incl add dec push decl and ja xor pop incl outsb decl incl ret (bad) call call ljmp lret (bad) jp adc out (bad) lcall repz fcos xor int3 ljmp incl (bad) js pop jmp pushl (bad) mov lcall dec jmp jmp (bad) stc call ljmp inc incl lcall push ljmp call decl (bad) fdivrp cmp aam sbb movsb (bad) std call ljmp incl mov movsl pushl decl (bad) in dec ljmp inc lcall (bad) jmp xchg (bad) sti jmp pushl decl call pushl incl push decl incl jmp jmp (bad) mov incl aam sbb iret xor sub inc clc mov out shr movsb mov sub mov jb jl lds js lods faddp push mov jno cmp dec add add dec sbb call leave fisttp cmp outsb cmp mov aam dec test push fs dec or das jecxz cld lods ss lods (bad) pusha inc xchg aas xlat stos fmul push subb ljmp dec and aaa lret jmp test (bad) mov adc push testl pop (bad) and pop mov mov int or (bad) ljmp movsbl mov arpl dec sub xchg lahf les fwait push outsl add test in lret imul sbb add add add stos push out xchg jmp lock popl push fidivl faddp push mov jno cmp sbb loopne cltd cltd aad es sbb and dec or dec mov aad mov inc and fisttp sahf mov xchg pop leave pushf mov push mov test mov inc ljmp out or arpl pop sbb mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb bound test in lret imul sbb cli clc mov out xchg jmp test sub jnp jae add add push js lods faddp push mov jno cmp dec add add ss xchg (bad) inc lds sub push dec or in cmc or outsl fisttp pushf leave ret push pop out fistpl cmpsb scas push xchg nop inc pop sub ljmp out or arpl lods pop pop cmp enter mov jp pop xchg je jl mov data16 fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp add dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and adc insl mov dec mov cmc or outsl fisttp fsubrs icebp mov jno scas push jno testb lock call fs mov mov es push nop icebp dec push pop pop mov in shr sbb xor mov std add xchg pop lcall jnp (bad) push cmpsb jns sbbl mov jmp mov (bad) test sbb inc mov lahf sbbl cmp test aam fisttp or lock push sub jmp lock and cwtl stc jb mov pop lods fidivr shll or loopne xchg popa iret and inc fsts and pop dec or fnstcw cmc or add loop and push dec pop dec (bad) push fmull mov dec cmp (bad) pop mov stos in cmpsl imul (bad) addr16 cs adc adc mov push pop nop mov mov fcmovb inc jb fisttpll mov das xchg mov push and sbbl mov jecxz pop (bad) test sbb nop sub fwait sbb mov jp pop shrb dec or repnz mov ljmp lock dec hlt mov test test stos xor xchg xchg addl test loopne sahf xchg into test les cmp out sbb pop adc fs pop (bad) pushf mov inc int mov push add mov jg dec mov push ljmp insl sub fs mov jnp mov add enter add std dec fs lods jnp (bad) fldl mov scas xchg adc es hlt sub inc adc (bad) out xchg insl out sbb pusha pop fcoms cmpsb and cmp test outsb jb inc aam jmp into inc minps in subl cmpsl xor (bad) jl inc push jl lods sahf dec in mov lock cmp (bad) mov pop cltd flds push in cmp cmp xchg (bad) push mov inc int (bad) jmp cmc or jbe aaa negb lods ret pushf inc dec push into setle xchg push test mov push outsl jecxz addl add (bad) sti js in aam jp insl pop fstl repnz sbb test push js idivl lahf xchg ja cmc jo rclb mov jl push rclb pop jbe xchg aas inc loopne cmp pop fs mov sbb mov jp pop shrb dec or repnz mov ljmp lock ds mov add mull jmp clc mov cmp lret pop cmp inc sbb mov add ret dec mov icebp or outsl ffreep inc test mov xlat cs ret xchg bndstx xor insl adcl bound ljmp sahf xchg push nop add add iret repnz shr scas or or rcrb lcall add repz dec adc sbb sbb jl pusha cmp cmp das jg mov add ret pop sub inc test shl jo cli sub mov insb mov in cmc lock in (bad) ja mov addr16 mov inc inc cmpsb jmp and cmp lds mov push jbe and stc mov cmp cmp daa jge push int3 fistpl addr16 mov inc mov (bad) dec fistl and aam std xchg xchg loop ss in mov add and sbb fidivr fwait pop imul addr16 int push cwtl xor pop pop scas xchg out mov out mov mov mov cmovge lods cmpsl push loope or stos push mov das test insb jne inc aam pop andl jl mov notb cld jle sub mov push js sub rclb jmp mov mov push loopne adc and inc lret mov xor and pop dec or les mov es inc and pop pop (bad) pushf mov inc int mov xchg mov mov rcll jae inc popa fistpl cmc xchg inc bound rcrl test imul add pop fwait xchg sub in mov addr16 jmp mov inc lock clc mov pusha lock add mov mov clc mov fwait push (bad) pop xchg xchg mov xor push sbb (bad) data16 cld and sub enter fistp jno popf jle cmp pop adc mov and std dec inc push js ficomp data16 cltd cmp ret int3 (bad) int3 or bound sub push inc in add cltd mov orb mov out stos orl mov xchg xlat js adc jo (bad) pop mov jmp jp fildll jne sbb pushl or jg mov sbb enter popl pop push push nop mov rcll adc mov repz scas xchg ficompl add xchg nop mov adc jle xchg or add fsubrl stos adc sbb cmp repnz push shrb adcl add jbe sbb mov jge inc adc jne dec lcall aam jmp movsl add adc push sbbl in aad xor mov aaa and cmp cltd out int3 std mov cwtl adc out std in cmp (bad) mov outsl fisttp addr16 push pop mov mov push lock out scas adc xchg xchg sbb xchg mov jmp mov push nop jnp es fisttpl in fs std ficom cmp jo add inc nop popa push (bad) movsl jp jle lea jmp xchg adc clc sti mov lret mov out sbb addr16 fcoms insl sub cld add in aad pop cmc bnd shrb jge mov cli jno outsb clc push scas sbb mov cmp mov stc or push test xchg inc loopne mov mov (bad) xor mov mov mov fstpt mov adc insl mov dec xor sbb cmp mov inc and (bad) leave scas mov in xchg call test add dec mov sub pop cmpl or arpl xlat test setae in push ret ljmp and stos jnp (bad) fnstsw in jno movsl rcrb xchg mov lcall jnp dec adc xchg scas jp mov jmp pop mov dec push int3 push stos out sbb test aaa adc jp push shrb orl xlat sbb add fidivl push in and jnp pop inc enter ja xchg stc lret pop mov sahf js lods fdivrp les push dec add ret (bad) in inc sbb and (bad) mov (bad) into push movsl insb mov cltd sub negb cltd dec dec jnp mov daa adc test popa xchg cmp xor stos adc or adc unpckhps xchg icebp mov fwait scas pop mov pop aad mov addr16 aam lret or incl rclb add xor mov stos sub or xor icebp pop out loop (bad) push push fcoms out mov (bad) int3 cmp adc repz lret fsubrl or rcrl jno xchg clc lock test adc movsb (bad) ss xchg fs or cmc jbe jl imul jg roll pop add cmpl add shr pop jo je lahf bound cmpsb dec adc insl scas mov or sti divb mov jp jb insb dec ret pushf add pop leave mov sub popa jmp scas into inc pop mov mulb pop adc add cmp (bad) arpl cmpsb ficom (bad) out mov push or rolb fsubs cwtl cmp push aaa cmp repz mov out jmp mov adc js adcl or and sti and lds aam out lahf or aas adc fsubp js popa rcl or xor (bad) rcr mov out xchg jmp lret or add sub jmp mov dec add (bad) dec into mov cmc std std pop in dec lahf ja mov add repz ret incl shrb sbb pop cmp popa pop in mov pop (bad) mov cs les push arpl incb test xor mov mov xor jne cmp pop lods sbb add sub and push jecxz and sbb nop xchg mov (bad) insl outsb and push out sub rcrl in stc cmp and enter push and leave mov outsl clc mov cld lods mov enter imul sbb ret inc add inc push add lock cwtl shrl jb stc mov stc (bad) fcmovb push mov insl or or sub ds mov xor add xor push push or sub sbb lods pusha mov orl stos iret mov pushf or fdivl sub ss fimul inc test mov mov lahf out das int cmp dec adc jns loope ficom (bad) aad xchg fidivrl fwait cwtl fs xor mov push test cs mov sbb xor jnp push cmpsl gs cmp je or pop push fnop scas sbb sbb fistpl inc push sbb lret inc aam aam (bad) subb stos xor and outsl push icebp add aaa inc lock add (bad) into jge lods faddp fimul jno cmp mov fldl popf (bad) push fcmovb fsts loope cmp sbb (bad) push ret dec mov or add cs and push inc (bad) pushf mov pop int mov push mov int3 dec rcrl cmpsl inc out sub cld cmp mov xor mov sbb nop icebp mov inc add mov decb cs sub and sti fmull pop nop lcall jnp (bad) mov cld xor and ja sbb xchg add and mov xchg jmp aas adc fcomps inc jmp push xchg lahf jns test fwait xchg jmp in cmpsl ds loop ss xchg test nop jno adc dec loope pop mov daa dec add sub xchg adc mov mov int3 and cmp cmp push cs and fwait outsb xlat pushf mov push lea and movsb rcrl sarb es rorl gs xor pop pop cmpsl gs push mov inc mov xor xchg pop lock cmp repnz lods cwtl push cwtl test push ja call adc mov xchg (bad) sub dec mov fcoml and test push jp subl shl adc cli sub cmp sub pushf sub fdivl cmp icebp repz fucomi test std movsb sub cltd add outsl rcll ret mov mov ja aam mov in xchg data16 push aam pop decb push hlt (bad) fstpt add jne pop push int3 mov testb gs outsl and xor rclb push cmp leave push nop icebp push std sub (bad) (bad) push mov fcoml pushf leave repnz cmp xor mov in int3 lret and xor imul cmpl fistpll dec lret lock push fsubrs clc pop (bad) mov int xchg insl jp sbb sub dec sub mov mov (bad) lds insb push das hlt adc movsl andl xchg ljmp cwtl jno subl cmp dec jmp shll aad loope in call insb mov insl xor sub cmp mov adc add cmc fnsave loope ss scas dec inc mov insl mov mov fidivr mov iret clc inc cltd cli push call lret jbe add add rep push mov xchg ja mull sub xor (bad) and hlt or dec pop cwtl pusha jg fs lahf or mov cvttps2pi jg in stc data16 inc and stos insl jecxz lret sub mov fcmove cmp lods call orb popf mov add cs (bad) mov add idiv lea lds lret rclb (bad) ss dec add mov std cmc scas bound sbb and rcl cmp lds inc lea leave pop add test roll std pop out cmp add jno lock popa in xor repnz in cmp xor js sbb push or mov sub xor add dec pop and hlt jg aas mov in insb fldt jmp push push stos lea arpl repz xlat mov lock aam scas sub inc (bad) push nop test add sub jnp sub decl jno push aam xchg push aad out popf xor cmp mov push repz jnp shlb lret add iret aam sub push sbb sub addr16 ret pop nop push mov mov in hlt xor outsb sub cmp data16 mov sub movsb dec xchg bound mov add vmovaps and mov mov in xchg shr sbb jg std lcall inc xor pop adc cmpsl xchg or sub push sbb add mov or hlt sbbl jmp lret (bad) sbb cli test dec jae leave cwtl ja mov iret or sarl sub popa clc sbb xor mov xor mov divb stc adc add mov jg stos pop je in jb mov pop push std lea scas pop sbb mov add mov cmp pop loopne cmc or adc outsl fbstp (bad) pop jbe bound lock pop adc lret jne pop (bad) sahf psrlw or mov xchg sbb cmp call dec cmp int3 cwtl lea repnz movsb (bad) push fdivrp add in in int lret cltd cmpsb push sub not jecxz push subl xchg adc sub add and pop pop xchg loop cmp popf and inc outsl jae xor das pop push mov dec popa shrb jge mov lcall dec cli clc int shrl xchg xchg mov aad push repz jb dec cmp sar rorb inc dec xor cmp push mov jmp sub fisttpl mov adc sub cmpsb dec aam mov sub push cmp xor mov adc xor fcompl lock inc popa data16 add xor ljmp or and adc xor fidivrl fwait cmpl and jg jecxz mov sub stos pop incb xchg mov inc cmp enter hlt xchg pusha push imul push clc inc and add inc jno sbb mov out lods mov dec and outsb jnp lods popf inc stos cmp and push inc enter push add pop sbb sbb xchg sbb cs push loope jo js rol lods cmp push fadd mov mov loop outsl hlt jle pusha test sbb stc pop int cs test das adc out ret stc pushf mov push and js sbb prefetch or data16 inc scas sub inc dec adc je imul pop cld sahf shr ficoml arpl or in cmp data16 push sub jmp xor shl jge ds mov add xchg imul stos jmp int mov adc xor adc movsl cmc daa and cli add pop dec imul jmp xor inc push xchg sbb or (bad) xchg cmpsl pop stos rorl mov push or push mov dec or cmp xor arpl fwait lods icebp sbb cmp xchg popf mov or sub mov pop or cmc pop mov ret pop in push aam cmpsl jge inc sub or call jle gs xchg mov xchg jbe pushf xchg sbb clc and inc pop xchg je imull aam fiaddl cmp xor add aam inc adc test outsb or ficoml adc cmc movsb (bad) lret (bad) and jo out sbb push out sbb cmpsl es test outsl jecxz xchg sub sbb sbb (bad) loope lock outsb test sbb mov add add push cli cmpsb rorl hlt sub rclb jb ja into mov xor push in cltd lods int3 scas mov pop xchg loope call push or les jle nop push inc and cwtl mov rcrb pop xor adc bnd and clc push inc mov (bad) jns in cmp mov lret sarl pop fstps cmp sub lret or jle cmp lahf inc (bad) xlat xchg push (bad) xchg and xchg mov mov and faddl inc and push in adc inc in fisttpl add loope lret push sbb sbb jno popf xor push gs int mov mov (bad) cs lods ficom add insb mov leave sub (bad) mov ss mov mov in (bad) dec incb gs add jbe sahf rorb ljmp inc xor push pop add je outsl xchg dec mov or dec sbb xor loop mov fdivrl in push (bad) dec aam or mov push cwtl loop stos test jo andl xchg rolb repz fisttpl mov fnop outsl out xchg fsts mov shr xchg inc repz xchg xchg std mov cwtl mov mov repnz jno (bad) or mov repnz lods cs push mov jno mov mov add mov inc sbb add in shlb adc insl mov into xlat xchg cmp xor inc test cmp lea scas pop xor hlt ret fwait ret iret xchg in mov xchg pop daa xor lret mov fimull adc icebp pop cld cwtl (bad) fcomps into jl dec movsl lcall inc mov rorb sub pop inc rcll push stos mov mov pop push ret sti pop (bad) sbb cmp xor mov data16 fs sbb in aad ret sbb (bad) call or dec cli clc xor push adc fs and notb jae pop vmread and loope xorl add fisub and inc repnz inc xchg lods and jb mov data16 add add or mov xchg pop leave mov cmp lret ffreep mov clc fdivs mov data16 add mov lret test aad add jg je idiv fst aas and jbe fstps andl les xchg fwait sahf sub movsl div popa adcb cmp (bad) mov movsl xor sahf mov cmpsl ret arpl int mov and and xchg loop data16 xlat jecxz jg mov out test imul cmc jae vmread ficom and jo mov push (bad) pop (bad) push rcrb and imul inc cmp aas in jg into or ja loope ret xchg xchg mov add mov mov ret push push popf xor movsb xchg out push xor out adc adcb mov jnp xor ficom dec mov aaa call ret pop shlb cmpsb cltd fdivl push ret and or loop xor aaa push sbb inc xor sbb shrl inc fcmovne (bad) out imul leave mov cmp fdivl cmp inc pop pop sbb push (bad) or mov (bad) ja push faddp push push cmp movsl jno sub xor cltd fxtract out lods adc lds stos (bad) cmpsl (bad) mov mov and dec (bad) mov inc add cwtl push js pop leave mov arpl mov pop flds add mov out into jle jns addr16 stos fistpl popa enter dec ret mov push in fwait ror sbb (bad) mov cltd testl sti cmpsb movsb sahf push adc mov jl dec lock gs xor dec mov rclb sbb arpl xchg inc out lahf fwait push xchg mov outsl mov mov cmpsl rol add leave sbb xorl test push popf popf push jl repz (bad) test fistpll ja aaa les decl mov or cmp add xor sahf xchg push in stos lds js insb push ret add (bad) leave aad lret cmp aad leave pushf pop repz sub inc mov jmp cmpsb inc ret push repnz lods xor mov arpl jne mov add add xchg xchg inc or xchg add popf std pop fstl scas fldcw mov jl enter adc mov cld or inc jp sub cmp jmp inc sahf jne icebp xchg sbb jae push push faddl ljmp jl stos into scas jb jmp mov loopne lret cli sub sub push mov mov sub lea sub mov popf xchg insb cld test and mov insl adc insl add mov (bad) mov sbb inc cmc or xorl inc fldcw repnz leave mov inc sub cmpsb stos loope cmp int loope ljmp out int loop and (bad) or ret lock and inc mov pop es add push inc imul and adc jmp iret test fdivr mov (bad) inc gs lods ror decl adc push mov test inc xchg es (bad) repz push icebp (bad) imul aam sub mov out sub xor and and test mov ja push cmp mov sub shll inc popf mov in xchg mov cmp push and sbb push mov hlt ljmp stos mov jns es xor cmp adc subl xor cltd sub fs idivb mov movsb lret stc push gs adc aam cmp cmc jg pop push imul (bad) lds add sbb cmpsb jl or lret pop xchg sub xor ret (bad) push loopne shrl (bad) mov dec icebp adc (bad) jae loope jp xchg sub add jns jne jl insb push ret xor sub sub xor adc les and repz mov stos cld pop cld call (bad) enter push jp mov cmc lahf sub xor sbb or pop pop sub or jmp shr push sti fnstcw out ret gs xor fmull cmp inc cltd sub fs idivb add mov adc pop movq xchg ret push or or shrb add dec jns cwtl and jo adc or loop and ret or or mov movsl arpl outsl add dec sub cltd mov cvtps2pi js je jo dec pushf fs sbb loopne pop add cmpsl sub cmp ret int3 xor fcmovne mov (bad) aaa fistpll dec in xor xor pop sbb or or stc arpl jo pop xchg inc shr shlb popf xor cmp (bad) lock incl lcall cmpl sub gs cli ret out xchg movsb insl mov mov jle call cltd or xchg add xchg cli push in inc sub imul dec pop fisub or aas push or mov add push add xor adc (bad) pop pusha cltd xor cmp mov lret jns jne ficoml insb push ret lahf cvtps2pi js insb sbb dec lahf xor (bad) fwait mov ds sub pop mov stos mov xchg shll or (bad) popa rorb xor push sbb or jle enter and jmp jp cld lds jnp cmp in into stos inc jae sbb repz mov xor cmp ror rcr mov mov pop cmp push xor mov dec jmp dec insl or outsl data16 cmp clc add sub xchg repnz ffreep sahf mov jbe cmp mov cwtl and rcrb jg movsb clc mov push aam push orl jp (bad) pop push lret bound add adcl js push (bad) sub xchg clc je mov outsb fs push mov daa sub or push packssdw mov lods jae jge lods pop in sub fwait jne (bad) mov insb out rcll push sbb daa stos pop test xchg dec fwait daa aaa jae sub testb into negb insl fcmovnu mov in insb test xchg mov out pop lock stc outsl test ret push push mov in ficoml jmp mov dec push dec cwtl outsl (bad) int3 (bad) and lahf (bad) pop cmc inc jge out fwait ret inc fwait mov lods jnp shlb pop sarb aaa mov mov dec repnz out data16 mov push inc adc nop test push mov enter add jle ficom pop (bad) lea xor dec cmp fiaddl stos std and lea sbb jp iret dec and sub fisubrl (bad) std test add mov lret mov clc push gs mov inc dec aas stos dec xor inc jbe fild jnp mul imul (bad) arpl call adc xchg mov add pop and pop lret rorb scas xchg lcall js xchg ret dec or jl xchg jae (bad) mov mov fbld (bad) or add pop test inc js lret (bad) data16 (bad) in imul popa pop jg int jg mov movsb push lods xchg mov scas jb jl shrl jl add push mov sarb dec xor int pop cld adc je xchg add scas popa xor es xchg cmp or xorl stos pop scas imul scas in es (bad) dec rcr pop pop xor xlat xchg xchg cmp rcll ds inc mov ret shl dec xor das adc loop movsb jbe or aas jb aad jne inc (bad) push scas mov and cmp data16 or or aas jecxz inc xor push add leave scas sbb fs test rcrl popf lods and push jl sbb dec aas insl xchg cmp inc adc ds test fcompl enter scas repnz je inc sub scas add ror test (bad) stos xor sbb pusha insb push jmp fstps cmpsb mov lock push gs and lcall loop addr16 lods mov js mov and out pop hlt iret push cmp into and jmp jnp clc movsb (bad) into rclb push outsl scas addr16 adc sub push outsb pop pop daa xor lret rcrl push scas aad mov and mov sbb in push or pop mov aad push xor popf push (bad) push daa and xor cld sub out imul out mov data16 xchg sub dec push (bad) inc adc ds mov jnp fsts mov es xchg jnp enter fninit cmp adc addl mov in mov js lods jle lret mov mov hlt loope cmpsl jle xor xchg mov test mov (bad) xchg int3 movsl and cmp jb pop lods inc loop add inc add pop pop add and adc adc push pop pop daa push mov push aaa adc test sub xor popf xchg mov lret jg pop jge jle out push xchg push or xchg jb add popa or adc mov add shr or mov aad xor mov dec (bad) loope xchg lock sbb icebp dec and cmpsl push xchg loopne scas push orl push and mov mov cltd adc and leave pop cli std xor pop cwtl inc clc jae and lea mov mov pop or cmp ja sbb mov sbb xlat and cmp push or add inc mov in xor inc and clc sub fnstenv cmp push jle cmp adc inc pusha inc shrl xchg popa icebp cmpsl in out mov movsb adc jle popa pop test push jmp sub fwait pop mov sbb mov push bnd cmc sub subl scas and cwtl hlt push pop outsl fs lods and jno dec jg in movsl lret daa jge movsl addr16 jg movsb dec scas lahf cs (bad) sahf sarl or sbb imul int std mov dec jns cld add aas stos sysexit fwait lret xchg aam mov movsb fs decb or add cmpsl pop aaa jl inc adc gs mov add loope xlat cmpsl pop and lahf lods and cltd or inc or pop fistpll jp (bad) mov dec mov xchg cmp les and add add (bad) icebp test add add ljmp pop into dec imul pop jb inc jl xchg add cmc cld inc xchg add or in sbb stos pop das mov mov test test adc fiadd mov sbb push ljmp mov out rorl xchg cld (bad) (bad) fsubrl jecxz add jp fwait lahf push (bad) mov sub bound stos mov sbb add jmp or pop mov gs pop out fistpll pop gs xlat adc xchg (bad) push jb,pt mov add or push int3 sub out ja scas and dec pop mull inc inc movsb outsl clc push xchg jo out insb push jl cli cmp pop push int3 jg xchg out stc cli clc arpl mov fisubr adc fdivrl mov cs rorb push inc pusha (bad) movsl imull cld sub fbstp notl out ret in xor lock gs insl pop mov cmpsl push push popa jle xchg fs imul dec (bad) imul jecxz add sti mov fbld add lcall outsl es and xor push xor xchg mov in clc ss add hlt (bad) dec loope je cltd sub cmp mov imul rcrl jge push (bad) mov xchg outsl sub sar pop fdivrs xchg xchg xchg mov push cwtd insb xchg cmpsb fcoml push push bound add add movsb test push lahf xor fistp sbb lcall out push xchg pop jecxz sbb cwtl add and jl gs adcl lcall sub mov inc xor ret (bad) inc jp sbb xchg in xchg notl lock push hlt ljmp stc xchg dec mov loop jo jnp insl mov xchg movsl ss (bad) jmp pusha insb fisttpl pop cld adc mov loope outsb ljmp cmc mov inc mov repnz pop pusha dec lret aaa xchg and out enter pop pop (bad) scas arpl int push lea sub lretw addr16 push das pushf xchg loopne lret jge hlt enter mov or mov mov sub scas sbb lds xor andl xchg addr16 sbb insl shlb lahf xchg loopw dec adc cmp aas scas dec push adc shlb lds and push in fimul insb cmc sbb iret and outsl xlat jecxz add lods mov xchg icebp mov sub out jbe (bad) out dec add ret leave cmp sub pop add mov lock jno aam adc ljmp pop pop push add xor or cmpsb pop fistpll lcall iret fildll inc sarb lds popf jnp movsl (bad) into pop jcxz,pt lea push out pop or xor inc jge pop sbb scas ljmp movsb fistp in lahf pushf inc jge or dec add rcrb adc in (bad) hlt je pop pop out jno push adc cmpsl ja mov sub sbb sub jmp out fmull bound mov mov add xchg or mov loope (bad) push and mov mov pop mov dec dec pop hlt (bad) (bad) dec and movsl int and ret jmp fstpt mov inc xlat mov dec cmp jmp add pop pop and adc loope ret cmpsl dec xor out cltd pop into test push dec mov xchg lcall test push lock aas stc outsl cmpsb je dec mov les pop mov pop mov or jns in push movsb pop enter pop (bad) xchg lods push or xor (bad) pop sbb push mov add add addb loop xchg mov in inc test ret arpl lea out lret (bad) icebp (bad) jns and sbb icebp repz pop cmp loopne or repnz and ret int3 iret (bad) in xor and iret pop sahf out or stos inc xchg leave bound dec addb hlt aas insb mov bound fwait sbb xchg mov adc test add (bad) xor ljmp in arpl mov push jno jge pop inc xchg jb push cli icebp jecxz inc push mov jbe sub fs adc push pop or ja test push lret xchg jge or addr16 scas xchg mov ds testl mov shlb and pusha das je (bad) mov mov mov add pop daa aaa repz mov call fucom insb cmp jnp jbe loope dec ficom xchg out mov cmp stos add aad repz mov jae je (bad) out imul push dec jmp sub jp xchg sbb enter (bad) mov mov nop jbe push mov sahf dec pushf nop jecxz sahf andb jbe jne les js xor xchg cwtl imul out icebp mov sbb xchg inc push cmp pop xchg sub xor fwait jp dec xor pop push aas loopne in fistpl inc lock es icebp pop jns or loope adc pop mov jb sbb mov (bad) pop jmp int adc sbb in inc mov movsl mov (bad) sbb (bad) lock add add jmp xor mov pop lahf cmc repz and lahf les es mov aas leave ret leave xor adc leave addr16 clc adc mov push and sbb lods loop pop sub mov flds sarb fcoms or inc mov ret mov and (bad) and push cmpsb gs in arpl movsb lret divl sbbl push jo or cmpsb stos ret hlt dec repz pop push outsb (bad) jmp and sub xchg icebp das mov push jecxz fnop and mov pop gs fstl sbb xchg jmp leave repnz outsb add mov xor xlat dec sbb adc (bad) addr16 pop xor rorl push mov icebp ja popa faddp push push jp cmp mov mov and aad sbb sahf dec sbb xchg jge aam sub (bad) adc xor xchg inc js push idivl or int3 popa xor pop leave aad stos aad int3 fnsave adc cmp (bad) rdtsc or mov inc mov mov pushf or ljmp jecxz or jl sbb push push jae push test add shl add xchg roll pop or mov in xor pushl jns jnp cmpsl push mov adc sub ja sub ret mov jnp mov xor (bad) hlt lret cli sub test cmp out push pop loope es cli je cltd pop cmp push lcall mov add add mov add mov lds scas popf ljmp clc sbb popf xor pop (bad) or lock es leave mov lods in movsl fcompl testl mov aad gs out lcall mov bound notb inc fstps test loopne es enter (bad) test adc sub in push into ret mov cmp or dec in push jl popf cmp push dec jns lods push ja test sbb (bad) std push out jae and aad ffree aam mov and subl jb add lods inc inc add inc enter les bound (bad) (bad) dec jbe push and dec addl sub xor push daa pop push idiv jb mov lods sub fistpl fwait xchg loope xchg pusha sub jbe arpl out add in mov fdiv lahf xchg xor pop lahf fs ljmp xchg mov hlt into stos imul push cltd fs xor mov out xchg xor cltd (bad) or jl jl int3 cmp test xchg aas dec adc mov sub out push cs jmp dec push loopne xchg test pop mov push aaa pop std push divl xchg push sub pusha call popf cli fsubrl or mov or repz fwait mov fildll sbb and stc mov movsb pop add repnz imul xchg jbe push adc aas adc lcall dec jbe arpl out dec inc (bad) xor dec std loope icebp mov pop add add add xchg mov fucomip js push stc push fildl cmp shrb xchg insb lea pop aad sbb arpl push sub xor movsl (bad) fild je jl int xrelease out cmp dec pop xchg dec mov int3 push adc ja aam es push xchg ja loope mov mov push mov lods shl lahf xchg fcmovne push fsubrp mov repnz stc push aas mov mov stc mov pusha add push in imul sti sti cs aad cmp movsl daa pop (bad) in mov in (bad) int3 mov lods dec jle cltd int arpl adc mov shrl pop leave or sarl dec rcll js shll cmp add adc outsl (bad) repnz mov jne pop rcl jmp pop ret or sbb xchg adc sbb (bad) in xor push xchg xor (bad) test push popf aas and or mov dec clc repz sbb or fs adc movsb sahf fcmovbe ds leave jmp ja xchg imul xchg sahf bound dec sbb mov int3 add test (bad) jmp or loope adcb fisub inc xchg repz or xorl jb mov data16 aam sub pop xlat jp cwtl adc push bound outsl jle mov add or popa xchg stc mov adc xor lahf sahf fild push sub mov cltd push mov add add mov dec test push leave fwait mov lods push insl add xchg jmp (bad) ja adc mov adc sub js jmp cltd cmp adc adc jp loop lret (bad) test out push pop lods push xchg out leave xlat mov xchg push iret push or inc (bad) cmp std sub lods scas shll and jnp dec inc enter rorb mov or fs inc xchg lods mov hlt mov adc mov arpl notl ja and mov sahf enter xlat cli sbb mov inc dec js popa mov imul sub add fcoms mov out stos adc (bad) xchg repnz data16 xchg fwait lock or cmpsl xchg fnop insb xchg mov pop insl add popa (bad) sub fwait push sub (bad) fnsave fstpl pop inc sahf jmp lret js in test lret pop movsb ret repnz mov push loopne rcr mov das jae push nop shll pop pop pop in mov loop jmp (bad) into cli clc mov xchg sbb mov xchg les das (bad) cli je shrb sub lods push andl mov movsb (bad) movsl lret leave add sbb jp (bad) push call jo dec or (bad) decb xchg bnd cwtl scas lret lret aas adc sub insb sub rolb nop mov dec dec mov push fyl2x jg js pushf sbb adc daa jno es es gs adc out in push sbb rcr mov in add loopne fldl sub add and jnp push cli xor pop adc adcl adcl lcall mulb inc dec in (bad) arpl (bad) xor lds js aas aas and ret out mov hlt shrb divl cmc (bad) popf mov hlt stos nop dec sbb mov mov mov adc jo adc (bad) loope cmc cmp mov imul sbb mov arpl jmp out pusha lcall pop or cltd rdtsc add rorb addr16 (bad) mov cltd insl into adc out cwtl pop je shrl add icebp cmp dec test mov dec in push mov hlt xchg jbe inc mov outsl loop movl pushf daa pop fs add add mov push je push mov out sbb pop lods push xchg test inc xor test in and xor and test pop dec adc inc inc icebp xcrypt-cfb cmpsl and cmp lea jb xor sub inc add cmp pop pop mov mov mov les cwtl xor xchg clc rcll imul fsubl subb sarl insl sbb (bad) xor (bad) icebp sub mov sti mov sub enter cmp ds jbe jle aam push loope sub ss sahf cwtl sbb add lea in fistl lret mov mov das adc mov cmc outsb or sub push iret sbb mov mov dec lods mov orl out test add nop (bad) insl inc sbb ror dec lock fst test cmp cli mov out mov mov in mov imul inc clc or sti ss pop add dec jge jno dec sbb es mov enter icebp add mov adc stc call loope out mov iret xor fdivs jae jbe popa lock call pushw stc xchg cmovne ret cmpsb xchg js xor xchg and jno cli cmpsl test stc sbb fsubr insb cmp and test or arpl stos cltd in push (bad) adc push mov ds insw jno outsl sbb xchg (bad) push jns int dec sub loope xor dec sbb xorl sbb add lods pop mov (bad) dec lock mov add repz in ja pop out fild adc and icebp repz (bad) fisub lahf (bad) cli jmp out rol leave mov (bad) or cmp mov iret mov call mov and mov pop or jmp mov stc cmp clc add or insl (bad) lock push xchg sbb jmp cs inc inc bound adc insl push je mov dec xchg je and mov incb (bad) mov pop aas xchg lret push push and push cmpsl sub jle out loopne add xor imulb aaa fs or pop push mov (bad) mov xchg inc les shrl lcall sahf lret jo jecxz jno inc std sbb imul mov aas adc xlat jl cli jle push pop adc stos enter popf ds jmp out popa out popf fcom and shl push inc xchg pusha sub and dec scas dec or mov movsl mov (bad) or ja xor (bad) sbb sbb rorl xor dec gs fistpl mov add xchg daa je xchg arpl test insl sti lret inc mov scas inc add outsl xchg popf ret and xchg loope cmc cwtl mov fldl sub sub and jp (bad) lret aaa (bad) xchg cld loope xchg movsb add xor dec fcompl xchg pop (bad) enter jno pop mov data16 mov enter push cmp cmpsl loop mov (bad) mov xor test dec jnp mov push add repz mov dec iret inc les adc in adc push pop movsl and fisubrl push jnp push cltd push out push (bad) lahf or or hlt insb jg and je sub mov pusha mov adc incl test ljmp gs in cmp jnp pop mov fdivr in je push es add test add clc mov outsb jp inc lock sbb push scas dec lret fnsave or sarb lcall mulb mov aam mov loopne push es jno call push fwait jmp mov shl add ret dec movsb decb popf inc popa jge dec les push add ficomp cld imul in or outsl mov mov mov jl xorl movsl add pop mov imul jmp add popf movsl cmp dec lock test pop (bad) cmp mov lea les xchg (bad) xorl call inc packuswb int ljmp mov outsb daa sub mov jl sbb or dec repz jns mov lods mov icebp pop aam and cmpl and xchg loop aas insl andb js xchg mov adc inc lock mov mov xchg movsl and ds repnz cmp imul rolb imul cmc add add shrb dec stc loope cmc mov pop add add jmp and shll cmp pop add add movsl cltd mov push jecxz ds out xor xor ljmp js divb inc xor pop mov and aam loopne and pop iret movsl and pop jl cld and popa sub outsl dec inc loopne repz lret test adc daa jmp lahf pusha (bad) lea test fbld mov dec (bad) imul insb mov xchg push arpl adc xcrypt-cfb cmpsl and sti icebp lea jbe or mov les popf ds inc int3 bound adc mov inc enter xchg sub adc insb xlat lds faddl inc dec (bad) jne push cmpsl lret das inc icebp (bad) mov pop (bad) aad (bad) lock clc lret mov js cltd add pushf test sbb or mov and mov fs mov aam jmp cmp xor sub adc jg dec push lahf or incb hlt orl sbb xchg and pop xchg in das push rorb inc fcoml mov inc inc sahf xor xchg xlat in inc sbb gs xor mov inc lret cmp xchg stos sbb repnz je jae loope out jg fisubr ds cli aam mov push out cmp adc leave and pop cmp clc sbb inc xor (bad) pop ja dec dec and sahf dec sub or and test mov add scas aad mov cwtl nop inc cltd repnz lea callw and dec push je xor pop xchg je jl jae xor push inc jl mov in pop inc adc xor pop cmc mov imul call push sbb jns push jbe xchg xchg mov popa or and adc ret or push xchg xchg cmp ret mov loope outsl jg movsl mov shl jno sbb insl dec std lahf les cs push cli imul add in push sub out (bad) dec mov sub int inc and (bad) mov nop dec xchg pop leave mov inc fwait sahf mov fmuls subb dec jno xorl add mov es aaa jno push cld push movsl int3 arpl xor adc or hlt fstps xor push scas jl outsb fnsave shr sub hlt mov aad mov add loope adc push lock out xor std rcl loopne sbb into adc pop adc les xchg mov fwait lahf push (bad) mov call sarl daa add cmp fcom cmp scas pop insl iret movsl jno jns xor fstp and xlat loope lods inc stos imul jb push loopne js mov mov xchg enter pop xorl aaa popa sbb cmp jnp test out ss pop sbb pop mov sub mov rcr sti insb sti inc dec cwtl js sbb add push sbb cmp mov aaa cmp cmpsb call inc inc loopne xchg stos jmp pop hlt adcl pop loopne or dec repz cld mov scas jecxz fistl push dec vandnpd shll mov inc mov dec aaa mov push mov std mov cs out jbe (bad) out xchg lret fldenv fbld xchg dec pop aaa dec dec repnz mov mov addr16 ja xchg jmp sbb mov push addr16 movsb mov dec cmp cmp dec push dec jg aaa rol pushf mov push inc lea imul into (bad) dec adc xor push ja push xor and (bad) das xor sbb and icebp mov push int3 cmc aam xchg out mov xor (bad) fldl add je mov push (bad) in mov push mov cmpsl bound stos fldl loop getsec push test shlb imul inc jle inc int js fisttpll inc xchg inc add std push mov dec xchg repz imul fistpll sub jb test sub jb gs repz int3 mov push imul inc xchg rorl jp pop popf pop jb pop das jb dec shlb or lcall and inc sarb xchg inc pop stc testb into negb scas addr16 sub addr16 sbb dec inc aas sub or es xor push jp ljmp adcl jmp cmp ss and mov cmp add daa fwait sbb repz cmpsl bound scas fstl aas push adc adc add cmpsl imul (bad) sbb lds fildll orl mov loope mov insb jg mov lock fcoms sbb xchg push sbb xor xor pushf cltd xchg (bad) ja push data16 fnstenv ret aam adc test jp out call sar ja adc cmp or cmp aas clc aad xor cmc iret pop mov jl push jbe mov mov movnti mov and jbe addl mov push xchg je and adc es (bad) ss (bad) cmpsb inc mov scas xchg adc cmp jle and jns rclb mov xchg cmpsl and push inc daa fist leave sbb fild imul test (bad) mov or xor into add arpl jns shrb fsubrs xor mov sahf shrl mov iret sbb movsl movups imul in shrl shlb jmp inc xor cmc or sub iret add leave add daa pushf jecxz rcl ret cmp pop clc divl ds xchg insb insb ljmp xchg fisubr inc inc insb mov or in adc loopne fnstcw andl jge scas xchg sbb cmpsb pusha psubsb sub call cmc cmpsb dec test std outsl sub popf in fiadd mov or push sbb add test icebp fbstp orl lret xchg adc mov xchg in sbb sub cmp and mov push and lcall mov lods (bad) out in mov xchg lahf gs insl dec pop das cwtl inc dec shlb mov inc adc jo xchg or jp push add and mov sahf mov jg lock jmp lret insb push jl cli cmp xor mov (bad) (bad) jo dec loopne rorb jecxz cltd out sbb outsl mov movsl mov xor sub or loopne cli or pop mov insl ljmp mov repz fwait aad and sub push and lahf negb dec lret or adc mov add cld xor jle sub pop ljmp xor mov mov repnz mov fildll or pop adc out jge insb stc xchg cwtl pop imul test aas in lods push ds insl xor cmp movsb stc cmc stc fcmovnb (bad) stc je push push cld lea jne (bad) fsub fistl data16 aad mov xchg fcmovnb test dec loope rolb andl sub (bad) sarb scas lret mov aam jecxz fidivl cltd jo ja mov xor out pand dec jp out sbb add xchg dec call sarb add popf in add dec lret xor add das (bad) clc xor outsb inc or mov outsl notl ja add add add add movl xchg inc clc imul cmc cmp frstor (bad) sbb and jp stos add popf aas addr16 (bad) mov add jp adc mov insb add out daa push insl es cmp or sub xchg mov lahf in xor mov pop cld adc sub mov xchg cltd mov aam (bad) xor test iret xchg test jmp test mov and mov jg (bad) mov pop push add jo in jge (bad) fisttp in mull push fcoml into test sahf call aam mov and push movsl pop rclb jmp pop repz (bad) fisubr dec inc sbb rcll add add es jp aaa sbb das sub (bad) cmp xorb call ja and insl fdivl shll int3 es lock fnstenv add stos lahf es and sbb jae push mov cmpsl jne inc pop test (bad) addr16 shrl adc aam (bad) push pop je hlt jg shr adc mov outsb push jecxz mov es pop dec das jg adc xchg dec pusha jns jne (bad) in xchg lcall shl ja rdmsr ret (bad) mov push push push stos imul xchg ja mov mov cmp fnstenv mov dec xor push test arpl movsl inc lds pop loope dec adc out dec rol or mov add add jnp outsl pop lods dec call or incb mov cltd cmp jbe incb sbb das mov ja jg pop lret (bad) push repnz flds xchg push out ficompl data16 cmp inc lods sub and ret or out add sarb lret xchg adcb sbb mov fisttpll add xchg stos nop rcrl or out mov mov pop iret mov out push sbb cltd (bad) and xor in ret addr16 aad (bad) movsl movsl jp ja (bad) gs repz les stc jbe xor xchg ret stos sti jp mov repnz cmp sbb movsl jp xor in int3 lret cmp sub dec out int xor add sub (bad) lock add mov and movsb imulb pusha lock or outsl mov xchg push adc jmp out aaa stc (bad) jp ljmp insb addr16 cmp (bad) lahf mov stos int (bad) xor xchg imul xchg lcall lea sub sbbl inc dec and sti (bad) lock insb pop or push stos mov mov shrb sti and xchg mov (bad) imul insb push daa jl mov add repz pop xchg movsl ss pop add add mov add in sbb fs ljmp clc cltd push add xor in cmc popa pop cmp sbbl push ss mov (bad) add add and (bad) mov ds push xchg ds push ds pop jb mov push mov sbbl mov adc imull test push xchg inc std cwtl jns mov addr16 scas xchg mov inc cmpsl add lods mov pop jae push pusha hlt (bad) xor mov imul sub movsl cmp in les add movsb adc loope push (bad) je xchg jb lods push sbb sbb pop add rcrl add dec cmp push cmp adc dec mov push dec lret insl enter (bad) mov xchg push rorl xchg xor and push mov fdiv test std or jmp (bad) lock add add add call xchg jo and dec mov movsb les movsb adcl fdivrs (bad) and or inc sbb push iret sbb jge sti test into jl xchg jl out jbe in push add xor sbb inc push cmp sbb in mov xchg xchg pop js sbb clc out sahf pop mov std cmp inc push fcoms xlat pop orl je fcom sub cmpsb jmp popa gs dec pop pop mov mov gs jle inc xchg ljmp pop mov ss lock lret insl in mov and shll ret sub mov or xor cmp mov mov xchg fcmovnb push outsl test add add insl mov in push int3 in lret hlt push jp mov push push jge (bad) divb (bad) enter sbb dec xorl pop dec xchg mov imul jns faddp jb adc ds in bound imul pop popa test loop shlb pop mov cs cmp xchg cwtl cld hlt cli dec push mov cltd (bad) cmp sbb inc rclb sub jbe xchg (bad) mov movl (bad) inc iret jl or rorl pop jmp sub jne les out in test in inc loop call pop push je sahf vsqrtps pop adc addl add push frstor dec adc cld mov push test dec dec enter add dec subl out aas mov fnop outsl (bad) sub leave jae mov cmp inc lea cwtl enter aas mov cli clc mov mov mov lock jns mov lods ficom dec rol mov mov mov fisub xchg loope sub sbb movsl fdivs add les dec ret pushf mov popf sbb (bad) jg dec (bad) sahf dec xor dec popa xchg or mov mov jmp xchg pushf mov insl xchg and icebp mov sub (bad) pop andb data16 mov dec cmp pop inc fistl insl enter mov add add cmp cmpsl (bad) cld cmp or cmc (bad) dec (bad) test dec fmull das fmuls mov das pop mov icebp lods jl push in push in mov jl movsl jp ja sub sarl cli shrb andl pop jnp lock je leave sub or ljmp outsl shr fdivp cmp out mov lret jle xor nop and adc insl pop sub es pop sub jnp push cmp or xchg add loopne sub and clc (bad) jbe hlt push enter fsubr sahf rcrb push shll ficompl cmp cmc pop (bad) gs cmp and fwait dec outsl adc jl lds cmp inc daa inc xacquire fiaddl add out sbb push mov adc pusha or pop cmp (bad) divl pop xlat mov push mov imul orl repz cmp sub mov adc adc adcl inc (bad) cmp int3 cmpl xchg cmp or sbb sahf in jb jle push pop lahf and leave popa pop stos lahf and movsl add jecxz lret push outsl daa ds mov push add jecxz xor mov xor loopne movsl in les mov xor sub add (bad) push mov orl pop and and sub xor push lods push mov inc je and push add add cwtl sub or into cmp dec pop cld out push test adc adc jp insb mov cvtps2pi (bad) inc clc or sti ss cltd pop add cmp hlt repz adc or sub mov lods std enter mov xchg sbb dec rclb lret insl in mov inc pusha cmp xor mov aam loopne ret mov shrb fdivrl jbe cltd jp dec push fiadd clc fmuls pop or fnop cmpsl sub in xchg xchg cwtl sar bound jmp xchg push and jecxz mov addl pop imul and ljmp mov mov mov outsl xlat and lret stos xchg cmp daa mov add mov mulb mov in mov push out adc out scas push and and and aad xor add dec lods test pusha sub and mov daa mov add repnz nop and push xor iret arpl pop pop dec daa cmp (bad) fildll mov insb (bad) mov sti mov fisttp bound mov rorl mov je jl or inc ss pop lcall pop mov mov popf push adc mov push repnz or inc cmp icebp adc mov and imul cli mov in jp mov arpl divl mov test add cwtl pop (bad) jge fmull sub add sti lret add stos cmp icebp xchg mov xor in std pop mov and lret imul cs cmp decb mov leave adc xchg mov xchg mov push or mov shr sub (bad) sti or mov mov push testb cmp in (bad) jno lock stc outsl jl decb (bad) movsb inc sub cwtl lahf pop sub sbb hlt jg (bad) sar xchg mov jge mov pusha push xchg ljmp xor lock or (bad) or jae or sbb inc lret lcall scas mov mov pop inc pusha stos cwtl inc mov xchg jnp mov fiadd add decb leave repz mov cmc adc cwtl aad movb xchg mov adc insl dec cwtl mov cmp in frstor inc pop arpl mov jne jl lahf jae stos aad js mov (bad) lret lock mov lcall and and sbb and pop push je (bad) sbb add adc lcall pop and add mov inc push out jns adc sbb sbb aad dec repz dec xlat pushf test aas pushf xchg xchg and push push dec push jle inc js js jmp (bad) mov in movsl xor sub mov xor cmpsl test jg add fmul out mov and inc scas out mov pop mov fistpl mov hlt mov outsl cltd mov testb add add cli push xchg pop clc adc mov ror xchg cmp pop subl sub xchg jae stos into shrb cmp insl push mov sahf sub xchg sbb js das pop xchg dec leave ja xchg icebp mov in insl mov mov es idivb (bad) frstor xor cmp loopne push push push out cli ss or xor push fwait jno ljmp xor inc or adcl add stc aam test mov iret xor push pop and jg mov out (bad) cmp cltd (bad) divl push mov mov repz xor repz mov test and aad push pop scas leave sub jmp xor cmc mov (bad) dec insb je jmp js aas in outsl movsb lock and gs lock fldenv sbb pop iret repnz aaa sub out sbb std mov cltd mov inc push (bad) or adc repnz lret (bad) ss xchg outsl notb sti or outsb daa sub inc push repnz mov jmp int add jno outsb cmpsb daa cmp and dec loopne dec and mov pop fstpl pop test mov mov fwait push je hlt test cmpsl pop xchg jl fsts lods pushf add std and shlb fsubrp int3 mov adc inc adc shlb inc dec andl or lds test ljmp xchg xchg mov pop fidivl negb mov in aam sub sarl sub repnz cltd js xchg imul rol push stos aad cltd mov jle and int3 jecxz xor pop call stos push int3 jecxz sub push in iret pop cmpsb adc imul idivl push pop pop inc or movsl adc fisubrl in lahf (bad) and mov shll xchg push cmpl inc jno pop pop mov nop dec pop cwtl stos ret mov xor aaa xchg fcompl stc jb sbb icebp das sub into dec sbb xor stc xor pop pop jbe xor leave mov xor out test sbb mov jg (bad) lock repnz shrl mov jnp pop bound gs and test xchg hlt and ss out (bad) cli leave je jbe mov jp or cmpsl in ds add (bad) in push sbb insl sub lahf addr16 repnz gs xchg loopne ret aaa scas inc lods xchg adc or sbb push xor mov mov fisttpl and add sbb lods inc mov imul inc popa into jne lea jb xchg add cld movsl stos lods cltd arpl ret int3 rorl adc and leave mov jmp fidivr mov loop dec mov mov fcomps adcb inc (bad) sub fs loopne pop and dec and jb scas iret push sub or or das and add add js (bad) mov nop insl mov sbb pop mov fwait and or mov mov add xchg (bad) inc repz mov jecxz xchg fldt xchg insb mov cld mov negl cwtl loop leave (bad) loope sub mov cwtl idivl sbb nop data16 mov push xor scas lar test pop xchg roll icebp lods or ror aad xor cld adc and or (bad) mov and jno in pop popa pop jb cmc pop sbb jne ljmp lret popa mov dec sub nop ss call cmp stos add add int3 cmp add inc lods add imul movl inc jge fucomip sbb xor js dec std movsl adc sub adc add cmp jo sbb mov sahf cs movsl imull and aad add sbb mov cmpsl sub sbb cltd mov dec push jle inc mov fcmovb aam mov sub lret dec rcrl jo,pt add and jmp fsub jno and in mov dec mov pop stos ds sbb std pop push iret es jle jne ljmp cli mov xchg mov mov dec aam loopne adc xchg sahf ret pushf add dec push dec jae and imul push addr16 fmulp aaa mov and (bad) or popa into mov push js inc std movsl es mov cs lahf mov adc push nop mull push add add imull ret jg cltd sub iret (bad) (bad) xchg push mov mov add in inc sbb out inc xor cli adcb int3 cmp mov cmp or mov lods push dec or loopne pop mov addr16 pop imul aas mov jns repz das cwtl mov aas addr16 jmp jl,pn ffreep mov add out aam jl jmp mov cmpl out addl ljmp pop out aaa daa test sbb add or sbb cmp xor mov jb mov cltd pop test adc call adc lahf jge outsb sub cmp pop xchg jae mov sldt add (bad) sub loopew sbb shl fsubrp les dec std rcl cmpsb jmp addr16 mov ss adc add adc jecxz imul cmp sbb xchg mov es mov out mov jne popa ret cwtl jmp shlb or int3 jge cmp adcl mov mov fcompl mov pop in popf pop fcomi sub insl xor stos shl lods and jmp cmp xchg xchg es mov and jl mov pop mov in fwait cmp rcll loop push mov push sub adc pusha jge mov daa sbb add sbb lea push ret push imul jg xor add pop pop (bad) aam orl mov push fdivrs cmp bound fs add pop test or mov sbbl and xchg popf ds or cmp sbb sub adc pop jp xlat pop imul inc fucomp stos xor push add mov pop jns rorb jp jno adc sub dec push movl ljmp call mov xor xchg dec jbe or icebp (bad) das (bad) mov mov subl mov loopne,pt jg jl test loopne dec and lahf mov cmp inc aaa mov xchg sub stc xor or push sbb push insl sub jle xor jnp push push lahf into cmp icebp adc sub pop mov popf bound test int adc sub aas rolb add test mov mov fsubrs xor push data16 lds add sbb mov rorb out inc xlat in lret or out addl cmp roll mov push dec and or add jne arpl popf push jecxz cmp (bad) xor pushf dec ss cwtl enter jae sahf jmp and lea (bad) lahf mov cmp pop or add data16 icebp xchg (bad) out test stos in fwait cs xchg or dec out sti cmp cmpsl ds sbb cmp neg (bad) push daa pop or xor xchg sbb sbb stos adc or mov test (bad) adc jnp rolb add test xlat xchg sti lock movsb jno push cmp dec add test jae inc adc mov cmp test sbb ret dec mov or outsb sub pop mov sbb sahf pop enter adc ljmp (bad) jns stc push xor xor ret daa cmp (bad) xor jo dec jbe ret loope xor imul das cmp fstps andb mov cld (bad) adc push stc andl xlat jno inc adc mov daa test or and push ror js sbb jo test fisttpl pop mov lret jo pop mov xchg icebp mov sub xchg mov out jb jg repz das imul jb add add cmp loopne and inc repnz inc xchg sahf insl jns outsb dec sub xchg add mov adc mov fistpl pop add test fildl gs lock cmp stos es ret xchg aaa int dec mov push pushf xchg repnz adc adc outsb pop cltd mov jle inc dec push cmp cmp popa stos shll aam ja inc out xchg jb mov xchg add add loopne jns (bad) or mov sub loopne movsl mull loop pop push inc js dec ds test mov cmc aad xor push fcoms cmpsb in test pushf lods out popa adc xlat jb or jg (bad) jae cmpsb inc shlb mov pop mov outsl in fiaddl std sbb push outsl cmp pop jae addl cld dec int3 daa dec test ret jo or out movsb push mov les test maxps (bad) shr sub push mov repnz outsl cli push mov adc cwtl jecxz push in or (bad) xchg inc sarl jo loop push jae push lds inc imul sub fwait out pushf sub test push std daa test jge pop jae jne sub popa push push or stos xchg mov cld insl sbb test xchg icebp stc test mov (bad) dec (bad) iret push outsb mov jbe sti adc and jl adc js decl popf dec push cli divb inc inc cltd pop adc mov mov and xchg test out outsl jg add jmp push gs push jmp fnstenv and add lahf movsb xchg (bad) iret test int3 xchg arpl and outsl jmp jnp cs pushf jecxz or push jbe push push push aam jl push movsl mov or xchg ds xchg imull clc and jns sub cmp ljmp xor (bad) hlt sub out mov mov or fiadd ficom xlat xchg in xor test inc (bad) idivl cld xor jno icebp xcrypt-cfb cmpsl and pop test test and fisubr repnz push jns inc inc cltd mov fisttpl jae cmp inc imul pop jmp sbb lds (bad) js test hlt pop inc ljmp push sub add cs ficoml (bad) xchg (bad) iret adc scas shrb xchg sub lock pop aad out int3 cwtl push (bad) jl cli shll test jle loope xor andl andb dec in jmp pop jl mov pop in dec daa mov idiv jecxz mov add push pop cmovbe lahf add (bad) adc mov shll mov and test xchg sbb (bad) mov xchg imul xor movsl sub pop xor (bad) in fiadd xlat sti out sarl jl mov mov sarb inc sbb sub sub (bad) aam in mov addl (bad) int sub pop leave mov jmp and mov and pop lret iret pop fsts add fldcw cmpsb lods mov and (bad) push ss sahf lahf lea pop movsb out dec mov mov pop mov pop push (bad) xorb inc cmp mov popf and add sbb sbb dec mov jne out and leave fidivrl les inc js mov icebp cltd lret jae insl xor test call fucom or cmpsl cmp push mov icebp dec dec xor stos lret mov loopne test psllq jmp leave xor leave mov xor pusha dec jmp sub ret shr mov inc je test jnp pop (bad) add xor das ljmp in (bad) xchg fdivr mov xchg aas outsl testb stos and (bad) repnz push rcr out repz (bad) push push xchg test pop xor xor xchg add repnz dec fs mov sub rcrb jae inc jb or frstor mov cmp sbb pop loope pslld adc jmp cmp rcll insb mov into adc push or pop xorl ljmp push dec pop into sbb sub mov stos jns lea xchg mov std mov jne add movsl xlat xor mov shrl rcrb mov jne call in imul fisub mov pop jb fst add popf adc rdtsc push ljmp out mov sbb es xchg lea dec push (bad) xor add fwait xchg scas pusha in std ficoml nop jecxz jne inc fbstp jne ljmp or mov cmp jmp jecxz add aas aas fs test stos mov ds cmpsb cld jbe xor call arpl inc jns mov ljmp sbb sub mov ss js lds js test mov int3 bound adc sbb and ffree repnz sarb rcrb mov and lcall pop leave mov aad xor cmp popf (bad) flds aam mov dec aam mov jbe mov out pop lcall xor push xlat pushf test fwait pop test daa scas fcmovbe sbb (bad) cmp out push fidiv add jns (bad) jge jl hlt add enter loop xchg popa sub push sbb dec in lods inc sbb icebp cmp mov and imul jbe stc cmp sbbl xor fs add aas nop cli std lods fcom lret add insl shl mov cmpb mov lods jae nop shll mov adc pusha add sbb cmp or dec test mov aas dec xor xchg test xchg std sti sbb cltd sahf add jno jecxz loopne jno loope jg lret in cmp out cmp and jle pop pop or xchg mov mov ja outsl das lret cmpl mov imul and aaa js aad repnz push add xor insl mov test aaa sbb jb sti pop out fidivr lods jae insb out or enter and lret cli pop push fwait adc dec mov loope push sbb aaa jno add mov fimull cld movsl dec loopne pop repnz mov and xor adc stos enter mov cmpb jnp insb addr16 loope cld inc enter lcall pop leave movsbl adc push cmp jne rcrb mov mov xchg lahf inc mov lret imul bound out sbb leave mov pop fstps xor js fwait shr pop adc sbb stos ret add (bad) out jmp pop gs popa repnz mov or pop adc pop dec jns pop roll sub or inc add nop (bad) insl inc into add add aam std mov sub sbb inc aam sahf or xor sahf dec sarb test xlat int fwait aaa std lock sub xorl lret nop repnz xor jge mov jne ss fsub iret aam inc popa test push xchg pop clc sbb xchg dec dec shrb repz enter sahf dec inc pop test fwait imul stos arpl fisttp jb (bad) int je subb add dec mov and or jge leave sahf out mov sbb cltd mov test inc ss call mov xchg jp push (bad) lcall sub (bad) jl xchg jl inc pop sbb dec jns push and cmpsl data16 inc add shrb and cmp mov push flds sub dec pop xor add pop pop inc add pop mov out pop int add cld and icebp xchg imul aas add cli loopne sarb pop push imul pop pop adc pop xchg ljmp jb cmp movsb sub inc insl cmc mov mov bound inc scas sub mov xor out mov aad lods fmulp jmp xor es dec popf push es es add xor cmc sub mov xor push xchg outsb loop mov (bad) xchg inc jl fwait repnz inc lods cmp outsb jmp pop mov xor push sbb pop cltd mov mov xchg into xor ficomp fadds out mov add enter add jne or jge in mov push das pop pop lea daa pop mov std xchg adc sub repz inc xchg sahf rcr dec lods fwait aad jp sub call cmc test add cmp je add cs lock fnsave into or das lock fldcw fimull (bad) repnz in mov jae inc clc sub out cmp lds clc je xchg mov das adc and (bad) xor das adc loopne xlat mov pop lret or mov xchg hlt xchg adc out dec repz push jae xchg xchg mov shlb dec pop (bad) fs jnp adc or into and inc dec mov sbb xchg and lret inc inc stc ret adc jg xchg jb jl dec mov push and pop mov mov (bad) mov dec (bad) pop cld into popl imul shl clc mov aas shl insb or inc divb mov mov sbb push or cmp shr icebp and mov or sub into xlat xor insb xlat push jl cli cmp out pop jo pushf inc nop sbb jecxz shlb or insl fildll adc mov xor pop and push inc inc push sub lahf imull add cmp imul subl push sbb mov and cs xlat xor adc rcrl nop sti mov loopne aad sub repz popf mov enter pop xor adc orl je fcom lods mov test iret (bad) lock fidiv dec add fsubrs in aad mov shrb mov jecxz cmp mov pusha imul add mov fs out adc outsb mov mov push jnp mov dec outsl fcoml sarl push int out sub ss sub mov push mov mov mov sbb inc es js cmp jle adc cmp lcall fdiv push das (bad) in in inc fldt loopne cwtl and push xchg adc ficompl lods push pop fmul rcr cwtl popa pushf (bad) xlat jnp pop jg add rclb das (bad) ja leave mov xchg or sbb shl xor into jl outsb test fcomps pop sahf ds aam pushf cltd push jmp sub adc aaa jae mov movsl (bad) jo mov (bad) call (bad) cmp or ss jge je jle je jmp mov fmull cmp fmull ret loopne fidiv inc cltd (bad) jae (bad) repnz cmpsl gs cmp push push fbld inc test pusha addr16 dec sub and aas loopne out sti (bad) lcall xchg (bad) fidivl rcr push cmp add aad adc test lret inc in push sbb test test xchg outsl int3 dec and daa loope add xchg push adc push push pop out sub (bad) dec cmp outsl decb push add xchg mov test cmp pop cltd push mov cmp mov sbb cmp dec or ja in cmp je test insb add or pop scas jmp push mov leave je jnp mov adc or pop (bad) repz cltd (bad) jae les cmpsl gs (bad) xor mov jb cmp std mov and pusha or or mov add mov jp cmp mov jo rcr outsb or je scas sbb dec and pusha imul jle xor dec js aaa loop insb outsb mov mov lret cli sub addr16 inc mov aam mov mov dec iret stc flds sbb sarb lock pop out mov jge mov push pop adcl mov fist (bad) sbb (bad) fbld mov jmp cmp pop mov out mov repz lods push pop lret pop fisubl push rdtsc add or jnp xchg mov sub fstpt dec jbe test push rcrb ljmp into pop add iret mov fstpl xor adc sbb leave push lahf jge push adc dec das cld jb in in test outsb jp push pop add cmpsl jmp add ficom and pusha jle push xlat jp sbb lea add inc aam mov aam mov pop out and lret mov xchg fs enter mov sub push pop dec idiv out stos mov movsl push dec rcrb jbe loop sbb pushf ret dec aam sarl sahf dec sub mov (bad) (bad) mov jb push lahf or sbb cmp shrb add pop xchg xchg xchg sahf enter (bad) add sub movsl nop pop sub scas and add xlat sbb les int adc mov mov push inc jle xchg mov and inc in lahf imul imul adc xchg imul push lret cli push fdivrs jnp jbe bound jnp or movsb jae sub cli lock stc js and mov sarl out nop int3 mov mov enter lds jns repz lcall jle or dec cmpsb mov aam pushf mov dec mov adc inc stos cmp push lds ret js out and mov add pop repnz outsb movsb movsl lret fiaddl rcrl lods add cwtl dec push sbb or pop das mov xlat lcall test ds or out inc pop xchg dec jns push xchg or or ss out fisubrl xor test (bad) jnp sbb mov imul hlt (bad) sub inc cmc cmp mov enter cmpsl sti sarl daa add cmp lock sub dec mov sub adc aad fidiv imul inc addr16 adc int dec xchg dec in outsl or adc iret lret out sbb xor out mov data16 mov adc repnz movsb xor or sub arpl mov fwait mov lock mov add pop cwtl sbb mov push inc clc jg es lahf or ljmp rorb jl aam xchg out ret ret ja int (bad) in jae mov and and rclb add sbb jge repz and add mov mov xor xchg rclb js decb bnd arpl push mov add mov mov ja iret arpl movsb sbb sub bound dec cmp mov push jne lret fisttpll pop (bad) aas jg lds inc mov mov btl mov out or cltd inc or cmp out enter je xchg xchg pushf test sub jmp mov daa imul fwait xchg jne inc push mov inc loopne push ja xchg dec cmp jl inc add add jg dec mov pop call out mov fstp out std pusha mov insl jl leave sbb jnp data16 cli sbb mov jno shlb in push (bad) push xchg dec in xor cld loope xchg mov mov mov lods lahf inc lods cmpsb mov jle (bad) dec clc push into push lods xor sbb outsb adc insl sub mov push idiv add dec inc pop cld test inc adc and scas xor push std lret lea in pop fincstp cmp fstps xchg insl mov cmp xor mov push jb sahf stc movsl sub fadds ljmp stos das cwtl lret pop jbe or mov jb push (bad) lcall jnp cltd inc pop xchg dec aas adc lret push stc jno xchg mov rolb push add jo rcr add faddp test jecxz test test insl sbb lret inc sahf push sbb (bad) jne js (bad) (bad) jge lds sub bound insb lods xor (bad) push fistl loopne or (bad) in xchg mov cmp imul and insb or add mov sbb mov leave fs sub movl push mov scas jo mov jge cmpsb xor fwait leave mov fcomps in pop leave inc out inc xor lret mov cs jg mov adc mov and (bad) xor shrb cmc jmp push scas sub sbb scas aad movsb sub ss jns gs dec push shr (bad) lret test ja pop ud1 push loope mov cld inc pop aas rcr testl movsb repz mov add add test xor out and rcll push xor int mov lea inc inc gs js mov mov int3 dec xor inc cltd lods aam mov jmp push sub insl dec pusha (bad) and push cmc into or jnp dec ret je insl jmp shr pop (bad) scas arpl ss fidiv jno (bad) lock jecxz fwait test xchg loope push xchg test pushf xchg movsb (bad) out popa aaa add repz push and outsl ja mov and mov pop aas xchg add and jb daa and bound xor jns inc adc mov mov andl lock in lahf fcoms rcl push lret inc in lret mov dec xor hlt sbb cmp mov sahf or add push jle shrl je ja cmp fadd push pop mov js mov ja cmp sub rcrb xchg ljmp out dec idivl mov mov sbb or or dec gs sbb cmp pop hlt das jmp (bad) mov scas arpl cmpl lahf jne fmull mov mov sbb or jo imul or cmp lds mov fldenv jae cmp jmp je (bad) push or repz daa mov xchg imul in mov sbb test cmp mov and dec and mov add (bad) iret pop mov push xchg push xchg push adc loope push (bad) je xchg jb sbbb jmp ja adc add push leave pop mov mov mov jge inc dec jle gs ljmp xchg dec or daa mov xlat insl xchg or rcll jecxz push andl and adc ljmp test fsubl xor into or (bad) cmpsb movsl cmpl push add xchg fsubr int pop xchg add xor adcl in cmc arpl mov fisttpll fnstcw test imull pushf nop in push into cmpsl imul lahf stc imul xchg test xchg test mov mov sub mov je jg call es xchg adcl lock push out lds lock out (bad) stc jb cmp mov push mov lods js cmp xchg loopne cltd push or add scas xor add mov add pop pop repz mov in popaw cli subl das movl mov adc mov sub xor ljmp jecxz movswl mov mov mov sbb mov pop cmp sub mov mov push test loopne (bad) pop inc adc jp mov mov insl push ret xor inc mov mov and call fcmovne mov flds repz xchg loop nop push pop stc adc lods xor fwait push mov jbe (bad) das sub mov insl sub repnz xchg cmpsl repz gs jbe imul sbb ret xlat xchg sub movl add daa mov rcrb dec inc lret sub jecxz jl lret shlb mov adc jne inc lods test jmp in cmp clc jb je es fwait iret pushf hlt pop and xchg icebp mov test in ficoml add xchg sub inc and xor int mov mov mov and jb (bad) test out insb movaps imul and outsb mov pop push cmp xor mov cltd mov or roll test clc jb or cmp xchg (bad) sbb stos std mov iret insb mov sbb stc aad lods mov jns in add xor sbbl (bad) mov loop test (bad) mov add xchg inc mov ljmp ret stc fwait cmc pop imul dec mov jecxz mov sub inc lock stc outsl test inc cmpsb push push outsb and sub mov inc xor sbbl (bad) cmp cmp sti lods lock fwait push div sbb testb jle cmp aaa scas (bad) divl sub jno loope pop mov add ret and sub test add or xor push in mov pop out es or insb (bad) cld adc jb mov subb or xor cld adc and sbb ljmp repz (bad) mov mov fnop scas stos add jns jmp fucomip pop push add and add add aad (bad) jg fsts leave repnz fbstp arpl imul (bad) icebp add xlat sar je imull sbb xchg fisttpll testb iret lcall push mov or push ret push and pop outsb xor push and sbb lods lahf imul in daa mov mov inc repnz (bad) jbe jb scas xchg add enter and int lea pop cmp xchg add ret andb push mov mov js and lea mov pushf mov jp cmp loope adc leave push popa mov lahf or push (bad) cmp aaa mov and int (bad) mov push jne dec lret push jecxz mov aam pop cmp pop xlat mov xchg mov add mov mov pop mov pop fldcw popa (bad) sub pop or notw mov adc (bad) fs inc or jne pop xchg out in mov pop mov xor push clc sbb xchg imul mov rcl repz push adc (bad) mov add stos cmpsl push jmp or jg jae fidivl mov lods faddp mov idiv inc int mov fwait (bad) test mov adc xchg pop clc sbb out sbb addr16 stc into int add jge mov stos fnstcw fs mov pop and cmp addr16 popa or mov cli adc sbb out or or xor (bad) fistpll add add in xor sub add sbb sti push outsb outsb repz negl arpl cmp sub mul clc lahf aad dec fist xor and push mov jmp jno mov sub or dec sub jmp pop int3 jle fnstsw insb pusha loope mov imul dec idiv mov es vcvtpd2ps sub cmc dec loopne imul loope mov dec test call mov imul and jns inc rorb es mov lss lock lods repnz xor lods rcr out pop into and stos pop lahf sahf icebp cmp test popf adc ds jne aas add push inc inc mov push cmp push sbb out xor ret xor jmp cmpsb sbb sub aad out push dec jle xchg fs (bad) sbbl adc add (bad) les jecxz mov jg push fucompp std out fist mov cmp xor repnz negb (bad) fisubrl imul loope cmp fdivrl pop pusha mov mov lahf mov push sub shrb mov dec push leave jg jbe sbb addr16 (bad) aam mov fsts fimul jae dec int mov cwtl pop stos push push shrb push out mov adcl lods (bad) int3 jmp cltd or add sbb jns icebp aas sbb jb pop or fistpl add fidivl rcl (bad) je jbe push pop xchg lcall aas push sbb imul sbb xor push movsl cmp xchg repnz inc mov cmc scas xchg sbb loope notl inc (bad) jbe dec ss and adc ds pop inc ds in call pop push arpl sub xchg and nop cmpsb jg xlat cmp cmp mov xorl icebp flds mov inc hlt movsl ss das inc rorb jl or push push jo addr16 mov lahf inc pop dec xor pop sub or mov xor outsl fwait fwait pop in push (bad) je rcrl mov out lret out jp adc loopne lods sahf leave fistl scas adc aas xchg mov dec adcl and js adc jmp add adc xor adc fwait inc xchg mov loop xchg lret cli pop mov enter out pusha dec test mov jo fdiv pop cmc cli lea cmp movsl (bad) test std pop imul in xchg ljmp pop les pop inc push notb in mov cmp jmp outsb adc xor cmp fmull lcall ds dec add xor popa sub add inc mov in cmp je xlat inc xor jno cmpsl cmp cltd add clc jle daa push scas sbb inc push lahf jge push adc decb xchg cltd sbbl pop xchg cmp xor mov in lahf jb popf aad mov lods jle add aad dec jl iret mov mov add loopne add pop imul decl jnp pop cmc mov scas ds cli cld pusha gs or aad fimul mov push in aad xchg js xchg aad mov xlat sbb sub cwtl pop test jge fbld add push rolb shr das ljmp inc jb push xlat push icebp gs insb out in enter cld jle fcoml sbb loope mov pop xchg je jl lahf mov fiaddl pop mov jae sbb or sub test jo sbb mov repz (bad) lret test adc and fwait inc repnz scas adc mov adc dec fisttpl push loopne xor add cli push fadds mov scas mov add add aas inc enter in jno stc cli mov inc clc or push stos int3 stos xlat repz mov daa in sub scas add sub sbb aad fmuls pop mov ds mov (bad) push faddl je pop jmp mov pop idivb (bad) jne (bad) out iret adc into out outsl into in xor ds push ret divb clc pop movsb insl sub fiadd ds movsb jg scas mov dec das mov pop stos jge jl cs adc in sbb pop add mov pushf push mov xchg xchg insb fstpl cltd test cs cwtl xlat xor cmpsb adc addr16 loopne test adc mov mov rorl sub inc mov fwait js arpl je sub add jg mov cmp popf inc popa jge push cmp add int3 add in push in shrl in jle push pop pusha iret movsl hlt dec rcrb sbb mov pushf (bad) add jb mov clc rorb int3 test mov inc cltd jmp xor xchg cmp sbb int3 outsl push add fstps push mov adc pop sbb in das andl pushf addr16 les xchg pop xchg push inc pop inc jns jns test xchg repnz adc rolb cli enter cmp vcvtsd2ss add cmp xorl ds cmp mov mov jbe sbb in jno stos or mov (bad) push and pop shll mov imul add sbb or jmp xchg and sahf mov inc mov or rcrl in and cwtl ret mov in das adc (bad) imulb jne mov inc cltd jmp arpl ds js lods push jb andl ret cwtl les cmpsb jle fwait push test es jge shll inc js mov popf das xchg imul movsb sub cmp imul dec subl jl pop xchg push loope mov iret cmpsl lods int3 imul test fbld mov loopne xor fisub mov movsb mov enter cmp and inc pop insb push mov xor cld sti mov imul adcb push jno mov daa adc test cmp mov add jne daa outsl jle fstps je insl fisttp hlt and fldcw icebp inc push xor dec lods or sbb ds sub jne std pusha xorl mov hlt push int or mov adc fstps pushf xchg mov fs xor or testl adc add movsl movsb adc xchg and sbbl and loope mov test lods ja sbb ret outsb jl ljmp push insb pop mov xchg mov mov aaa movsb test lret sub sub pop add decl rcrl xorb xor cltd es (bad) or xchg ljmp pop push loop fiaddl and push xor xchg (bad) in leave add nop or bound fisubr cmc (bad) push mov jbe clc cmp mov out flds xchg ljmp pop or pushf cs adc gs js sbb movsl orb ret sbb out pop cmp xor mov scas dec pop push imul mov stos xchg out sbb out dec adc popf iret subb mov std mov ljmp (bad) and movsl pushf mov iret fdivrl dec add push xlat push push pop cmp frstor stc sub dec jbe push mov add test mov cltd movsl icebp ret int3 add es sub loop mov jns dec xchg mov dec mov dec icebp shlb add ret lret andb pop ficompl test add jne stos lret out lret adc insl push out lret sti and mov lret and push push je pop and push pop xchg and lea mov mov fisttpll mov scas (bad) jb sbb jge pop clc mov adc rorb push cmc xchg movsl outsl pop xchg loop lcall mov adc es or into sub flds lret jno jbe lods adc add pop inc mov cld add (bad) sub cwtl xchg bound pop push test cmp inc sbb movsb inc ds dec dec push sahf enter loop cmc or xchg sub (bad) enter xor dec lods out scas (bad) ja jae push sqrtps aad sub fsubrl cmc fldt hlt imul jge popa mov mov push cmp scas call arpl das notl cmpsl ljmp push jmp pop loop into (bad) xchg repnz adc out cmp pusha jo dec or stos ds pop stos scas xchg mov rcll push xchg int mov or ret mov sti scas inc inc nop shl out jnp inc enter sub ss adcb aas mov enter adc jno inc fcmovne pop repz inc enter xchg pop jb cmc rclb add aas addr16 mov jo dec cmpsl cmp sarb mov pop cmpsb imulb or les jg cltd add dec mov addr16 (bad) out push sub and push je mov add lahf sahf std mov imul test push sub loop sbb mov rolb repnz jl in jl loopne daa inc mov test push adc xor fwait push lahf hlt out movsl std mov jge,pt sub or sbb out fldl dec xchg clc jg add push out lods pop loope js shrb dec mov (bad) jg fiadd lock movsl jno outsl aam mov pop pop sbb aam dec adc mov xchg xchg inc jge mov cli (bad) dec mov jo std gs mov out and (bad) enter pop dec inc rorb nop mov mov insb or into stos mov fisub insb out or arpl inc lods lcall jne add or adc push adc (bad) fisttpll (bad) mov add add pop aas xchg lahf and sbb pop pusha fldt xchg inc adc mov mov test inc push loope xor insb sbb fcomps xor sub sub sahf lock addb cli aas cld lcall movsb mov pop popa fcoms je orl cmpb xchg mov cmpl mov jge lahf outsl (bad) mov xchg rcr jp lods lods aam and lods dec in dec or ds ret idivb orb mov notl psubusw aad testb pcmpeqd xchg or test popa xchg subl push mov enter adc rcll dec and or adc pop push push aad or mov int add es or dec je push sub pushf imul cltd cmpsl sti sbb xchg imul cli daa or dec push pop sbb iret addr16 xorb mov adc cltd inc add or (bad) jl xchg dec nop imul arpl xor ljmp mov outsl fwait sbb jae test cld inc mov fistpll mov sbb leave cmp mov adc push xor jl jns outsl sbb and lods sbb push and movsl pcmpgtw movl das orb rcll scas in in push das imul pop jle mov outsb fistp (bad) jl (bad) or fnstsw dec mov inc loopne cmpb add add outsl shrb pop cmc fcompl aam push ds push cmp mov xor or daa inc mov cltd sub loope cmp mov lea dec rcll pop mov pavgw or dec addr16 mov adc imul adcb shl push inc xchg pusha shrb lea pushf (bad) pop call or or dec jl in (bad) push or test shr sub jae sub (bad) lret xor push insb ljmp dec (bad) scas pop lcall mov movsb sbb cltd lret jle out jae jg mov mov jns icebp jge scas sub xchg and loope daa jge mov aas mov pop call xlat mov ret or add or mov xor sbbl lret test xchg xor mov cmc jmp mov push mov mov outsl push pop sub push inc test imul addr16 push or xor dec mov insl popa leave or sub sub cmp je arpl pop cltd in dec push cmpsb inc cmp or rcl add addr16 add js jmp mov arpl jge lods movsl cld dec ret mov cli cmp hlt test jg jg mov push adc add leave dec xor test outsl call outsb mov pop xor mov add in fcoml mov and mov cmp jnp outsb or fsubr loop dec popf add nop lods adc push xor out jle fisubr (bad) jl xchg out xchg xchg cmp imulb std pop sbbb popa into rcr (bad) dec popa add inc movsl cmpsl and aas neg ds stos or ss mov pop leave fs xchg ljmp scas in lea into stos mov sub out lret and sub pop in jb mov rcr ljmp test jmp jmp cltd or sub push into (bad) mov mov ret lret sbbl cmp cmpl sub outsl ljmp mov rorl loopne mov cmp cli mov mov jmp cvtps2pi or add aam jnp inc test mov sub pop ljmp fiadd imul inc dec jmp imull imul mov inc mov cmp jns rclb jp dec jge lret adc jne ffree mov and orl fmuls imul hlt mov push xor pop xchg hlt or das data16 jg or push lret (bad) divl push push jge je addr16 jl (bad) or loope lahf cmp cmpsl lcall push adc xor mov mov insl and xlat fisttpl mov sub out addr16 mov dec sti (bad) xchg adc les es outsb imul add add (bad) mov mov outsb cwtl lods inc rcl xchg push and dec (bad) sbb dec out imul fistp sub xchg test stos aad push scas loopne push out pushf jne pop pop pop add ret cmpsb repnz jmp push mov gs popf pop movl xor imul or in mov jns (bad) jge scas (bad) mov cwtl hlt xchg and fstl inc sub xchg adc aam sbb pop into cmp cmp cmp movsb inc iret mov cli jno dec inc and icebp aaa je xchg xchg push mov mov xor les int outsb js gs imul pusha pushf and adc imul popa insl dec fs cmp insb or add xor sbb fmuls push add dec in ret dec xor shlb mov jne ret mov ljmp call (bad) icebp (bad) mov out xchg mov out cltd mov popw add aas loopne or lcall ret ret cmc adc stos fsubp (bad) dec xor xor jnp cltd jmp xchg int mov sbb popf imul pop lret cli mov out mov popf lcall dec pop popf shrb loope lods ljmp pushl jne pop xorb aas aam rcr fisubl fadds sbb dec xor jno cld aas jmp fisttpll mov js cmp add xchg dec int3 sbb mov xchg pop cmpsb mov ret sarl sub jne test pop jnp mov mov arpl rclb repnz enter jmp into and bound jmp dec push sbb add sub pop push fistpll aad and mov push cmpsb pop or pop adc sub ds jmp jecxz test jl mov fcomps dec fbstp xchg sub xor popa int3 or (bad) in mov mov jae cmc cmp adc push push js cvtps2pi dec mov xchg xor xchg cmc pop int pop mov mov and mov sbb jae scas mov pop xchg hlt repnz stc bound sbbl ffreep fdivrp xor add dec fcmovb dec xor add shlb mov jne movb mov fidivl mov out mov icebp (bad) mov ljmp push push movsl test leave popw xor inc int lcall ret (bad) icebp adc stos fsubp fnsave mov jns mov insl cltd out xchg int mov sbb popf imul pop lret cli mov out mov popf xchg sub dec pop popf rcr pop push ss adcb ss xor jne insb xorb ret adc lods popf jg dec lds (bad) cli cltd std pop clc and (bad) xor xchg mov or and lods mov dec out mov pop sub sti jmp fs in aam inc dec (bad) aaa inc int3 into xchg sbb mov add int push rcll (bad) imull jne stc movsl mov dec pop xor jnp xor xchg adc dec mov jge pop cltd sub push inc andl fxch movsl pop std sahf cmp inc cmpb adc dec and fcoms cmp cmc aam push pop cmpsl out jmp and xor test jp xor push dec ret je cli clc out sahf jne push adc insb fs cmp sti icebp lcall jae ss add sub jo cmp adc mov gs mov jl xchg or jge mov xor jmp out mov ret insb stos inc inc loope les dec icebp scas and cmpsl xchg mov mov xor bound add push addr16 jecxz gs clc fst add xor mov negl mov pusha jle ds xchg jg scas test sbb sti jns outsb repz jle mov ret outsl (bad) sbb or sahf sbb fsubs lods repnz lea jb cmp jnp mov xchg pop add adc clc xor push cltd or (bad) jns call (bad) (bad) adc jb lock cmp mov lods icebp inc imul std outsb std push cmp test stos imul (bad) or cmovs mov inc jbe lock aad xor fwait (bad) iret addl out push mov adcb loopne add mov ss cmpsl ret dec inc adc add xor clc (bad) je or jae sbb push pop add or push addr16 (bad) repnz sti into (bad) xchg cmc xchg and loop mov aas pop inc fstps mov lods enter jl fsubrp je sahf fadd mov popf imul bound rcrb jb push xchg push in mov sub pop pop push ss jb cmpsb mov add dec nop add xor test sub push jno inc aaa pushf adc (bad) pop mov mov jg cmp lret das push aas aas int3 popa mov jbe and mov jne rcll (bad) fld insl aad sub lret insb xchg mov call lret icebp arpl rcrb (bad) movsl movsb out xor in add in pop rorb inc push dec cmp xchg push jge incl add sbb mulb jle pop inc je push and loope mov ret cmpsl lods ja js ret (bad) and lods (bad) push (bad) lods cwtl or lret cli xchg dec sbb lret bound insb mov jne fabs jno push stos mov add mov push mov cmp add gs insb sub movsb fwait ljmp (bad) push (bad) cmp std jo jge mov lea jl jmp call dec pop (bad) test lock push mov movsl cltd sbb repnz dec dec push cmpsl pop rcrl sahf jae pop xchg rcl mov inc sbb and popf (bad) jg jp mov fadd push pop push or xor and fstl or cmp out push arpl push and jmp stos stc scas fsubl sbb or xchg sar adc jb jle pushf lahf push adc js daa shl sbb (bad) mov subb push xor mov mov mov aad ss fcoml xchg dec xchg ljmp jg cmc cmp iret std mov mov mov lahf sbb inc imul jge xchg push push scas es test syscall jno lock loope lock sbb cli cmpsb mov repz cmpsl dec pop xchg pop dec xchg gs je push fcomps icebp push mov shlb dec sub jg jle test lcall jge inc and mov sbb inc cmc inc lahf mov xchg pushf adc adc mov pop pusha jle inc in out add or lods cwtl mov lret cli icebp push dec cli aas cmp or add mov add stc cmp jb icebp xchg gs dec xchg daa aaa xchg ds aad xor cld data16 push adc xchg test call (bad) dec inc (bad) clc popa loop divb int3 mov test xchg arpl push pop orl fstpt jge fsubrs jnp (bad) into andl xchg push or xchg pop rcrb push inc dec shrl pushf pop cmpb adc push shl dec and hlt adc inc jecxz in push xchg rcrb popa cmpsl pop movsl add xor push out adcl adc cmpsl adc sbb fnstsw cs or xor cli add cmp add mov xchg or sub mov pop inc cmp xor jmp or jo mov hlt pop cld adc dec es (bad) aaa pusha push inc outsb adc pop push clc mov pop pushl ror or lods bound mov andl pop lods push mov xor jl jnp les sub push ret push js cmp pushf xchg rcr rcrb inc movb xor sbb and subb (bad) and jmp push loop in push or jno in out dec std lahf nop (bad) or int xchg xchg out push roll sbb sbb enter cltd xlat lcall xor push inc mov dec mov arpl rol sqrtps out testl repz push ja loop inc aad add (bad) mov and (bad) jecxz int3 in imul inc xchg movsb fwait pop clc inc or add adc or sti sub push cwtl dec adc shr out and xlat or stos jne (bad) popf pshufw push (bad) lret xchg pushf jbe mov xchg mov aaa stc nop icebp mov mov xor pop movsb xchg dec sub or ss and adc fdivs pop push not gs dec jne out test ds pop xchg imul sbb test xlat rcl shl xor rcrb loop mov and push inc mov push scas push insb jo enter fs dec jl jns dec subl sbb pop jle mov fadd mov fs fsts mov loope mov out cli ficom mov sbb mov jg xchg mov fidivrl das repnz xor jne punpckhdq rcll (bad) mov xor cmc mov jns and aaa xchg xor mov (bad) lods insl mov xor out push inc xchg (bad) std mov loopne pop daa ljmp push xor mov jl mov sbb or scas in iret out test psrlq mov and jno fs in add adc iret dec sbb sub dec mov js jns pop adc jno cmp fndisi(8087 jno and popl and out push mov fdivrs jg lds outsb es in pop push fs cltd ljmp add lea insl jmp cmp std jo jg mov lea jle jmp call dec into mov xchg dec or push into sbb add fwait sbb in mov sbb cmpsl bound jl xor je push outsl pop xchg mov adc fs jge lds ja mov jg (bad) mov pop push mulb jo sti cmp sbb ret loopne in adc xchg insb arpl jle int in pusha stc scas add or lea ret cli sub int3 sbb jle jo push adc sub js and jge mov and push shll cli ss mov dec jmp hlt es fdivs fcoml inc dec xchg ljmp mov movsb cmc aas and dec cmp outsl push xlat outsl imul fidivrl inc rcrb inc je inc xor and fstp mov mov xchg mov test pop xlat out popa aaa test ret (bad) lods insl mov test ficoml push add jb push aas loopne push rcrl jp jge jae add push daa lods add dec mov or push jne insb nop fs sub sbb fstpl faddp mov dec mov or adc mov out jle push add lock xor icebp ja sub xor movsl mov ror mov gs push push fadd mov sti shlb insb adc add mov jle ja les test roll xor stos aad sub xchg fimul cmp popf enter aad cmp mov inc cltd mov pop je push xchg out xlat inc nop icebp dec xchg movsb insl cmp mov and cwtl mov test inc jecxz clc pop aas pop int3 dec out push pop mov fdivrl or mov xor push and out (bad) fnstcw jmp lds fidivr sub sub push pop mov pop mov imul pop inc mov lret fwait ret jo inc lds mov stos mov hlt pop rol enter pop pop (bad) fmul mov test xlat push mov sub adc inc dec (bad) and mov xchg dec inc jle ss hlt adc or pop mov adc xchg add add cltd enter jns and out lea mov mov push adc ficom lcall push dec pop imul or out mov sbb or pop push sti mov add out mov sub jecxz loopne add xor ret enter xor xor ja mov jno mov pop inc decb jbe (bad) ret cmc mov push and fsubr imull push and hlt mov addl sbb sub sahf test jp xlat lods in mov ss ret or in add pop or out mov pop popa sub cwtl (bad) cmpsb inc sbb leave stos adc push jmp imul jns gs push je cli movsl rcll mov adc sbb pop or aam jae outsb push and cs pop xchg sbbl sti cmovl mov loop scas push scas push mov imul and ret outsb inc push sbb mov push or mov sub cmp test insb push mov aaa mov push sub jno stc inc and mov push and xor test cmp mov xchg inc sbb cmp fistpll out sub mov (bad) dec jmp repz dec add test jae scas shlb mov sub add add cmp int cmp pusha fldenv xchg mov jb movsl fstps sub stc aam das adc adc hlt adc jns or xchg out outsb outsb das gs movsl xor xor imul ficomp xor sbb mov test in mov movsb push stos and iret js xor add aam stos iret dec insb cld sub inc jp xorl out fbstp cmp aad jno jb divl push adcb pushf (bad) cmp test xor mov pusha es mov loop push hlt xchg aad inc xchg pop xchg pop clc jno mov jl inc sbb int in adc mov pop jno sbb ljmp inc movsb jne test (bad) lods xchg outsl mov imul lret mov pushf (bad) mov pop pop xchg mov stc nop mov hlt popf pop iret imul sub sahf dec sub adc data16 cmp sub arpl sub add xchg mov pop xchg adc dec dec jns ja mov scas push scas push mov imul and ret out inc push push or inc or jae push cmp out adc insb push sub push in out push sti incl push and pushf xlat daa movsl inc insl mov (bad) jo jl daa xchg sub mov cmp pop gs mov dec jmp repz popa add push cmp mov shlb dec test aam dec add into stos into sbb inc adc pop sahf movsb cld push push cmpsl gs push mov jb movsl xchg rcrb or sbb adc or pop repz or mov push outsb outsb and ja imul (bad) mov dec jns add cmpsb and push xchg fcoml and xchg jnp xor mov ret pop or or dec and sub lret cmp adc mov (bad) loope mov inc cs adcb adc cmp in mov imul add fistl nop xchg ljmp (bad) jns cmp std jo jb mov lea jae jmp call dec andl dec or addr16 xchg mov rcll out add out inc push cmpsl sbb fisttpl sbb je cli xchg shl mov sub fs gs mov jg scas test fadd dec push push xlat bound lea imul jne fstl mov (bad) test out xchg sbb jle push test add in stc scas call inc mov fimull push (bad) lret xrelease lods hlt lock sub loope mov mov andb test gs cmp test jg xchg es push (bad) or adc xchg ljmp mov inc jae mov enter sbb push data16 jmp stos lea sti inc mov jle lock fisubl lock outsl xchg sbb push movl scas push je fwait mov xchg fs test data16 hlt jg inc add pop lcall stos and dec orl dec sbbl and test and jle test jle sbb cwtl les aaa leave aas cmp push xchg push cmp cmp jg sub sub es stc outsb aas icebp xchg push mov daa and mov hlt leave loop cld dec les sbbl xor std mov movl psadbw (bad) roll lods lds stos xor cmpsb gs jecxz ss mov enter aad clc (bad) aad and pop adc in out inc jbe mov movsb insl std mov loope jmp cmp out pop aas xchg aaa jmp push pop test jge ds scas add mov cltd xchg and lcall cmpsl (bad) sarl cmpsl inc pop jmp pop mov sub push xor and mov ss jmp add add add cmp xchg and add (bad) hlt xor ret int3 push inc loopne pop pop xchg (bad) mov test xlat loopne push ror add and dec (bad) or dec mov inc inc movsb ss pop clc jecxz aad xor int3 cmp imul outsb testb pop cmp cmp out jae,pt ss mov pop js push mov mov xchg int3 add dec sarb push lahf cmpsb lds pop xchg inc adc int3 jge add pushf sub mov xchg pop add ss dec and adc ja mov div sbbb add lods sub xor mov push lea jmp and lods mov out and add test loopne sbb cs cli sbb fstpt sub aad mov (bad) les cmc into or outsl sar int3 pop or in mov sbb loopne xor inc dec mov stos adc push jmp loop mov mov mov push je stc movsl adc dec mov and sbb jmp sub outsb push jecxz movsb clc mov xchg sbb jo aaa dec jns (bad) loopne cmc scas push lods push mov imul and ret sub add cs mov sub mov jae adc out inc adc mov jns shl push mov mov icebp xor popf xchg add push add ds add sti mov stc pop cld adc out push inc add jecxz pusha leave aad insl pop clc mov mov divl loopne or add outsl mov arpl mov adc or and xor jbe jnp jg sbb scas xor inc aad jecxz sub rcrb jp inc bound fidiv out fsubs sub hlt inc and (bad) and jecxz in sahf loop mov or jno out dec ss cmp pop xchg xchg lret sub push sbb movsl repz imul push sub divl js sbb mov inc mov loope scas sub and lret add shrl mov test test call add (bad) mov xchg push jecxz sbb imul inc xchg je pop clc mov jecxz jl pop sbb or inc add or clc or mov sbb xchg cwtl dec in shr push jae mov iret jns outsl pop fimull mov sub xchg pusha bound stc mov push ret daa outsb mov jae sub sub fwait dec sub or and test out into push das call jle jg out cli out cmpsb xchg outsb push pop xchg test (bad) dec scas push sbb or rcl fwait insb mov rorb imull mov inc mov lret add test in adc fidivl dec inc mov push push mov and mov push mov jmp add cs dec mov or sbb ss or mov pushf xchg rcr or add leave ss ds (bad) leave es (bad) int repz inc lcall sahf push sub movsl push sub addr16 adc daa cld adc jl or xchg dec imul adc xor lahf cmp lock xlat xor mov scas in pop in push lret lods stos jecxz sub and ret out add sbb iret dec enter add icebp mov push adc int3 sub jne shl jno stc dec xor push test lods cmp int mov es dec lds fs addb fs ljmp (bad) push idivl mov icebp aaa sbb jo jne mov lea je jmp call dec jle inc popf dec or bound mov mov fwait push inc adc dec inc push cmpsl dec call movsb or std rcll movsb (bad) mov inc adc mov ja loope jg inc subb gs adc bound mov imul incl loope cs and (bad) mov mov or or rorb lahf fcmovne cmpsb add call inc enter hlt push dec jl jb dec dec jle xor lods test add mov cmp mov imul mov xchg pop out data16 pop clc cmpb ds sbb mov cmpsb add orl jmp je jb mov inc not (bad) xlat (bad) cmc mov fwait mov push or in pop xchg add popa aaa sub fisttp insl mov push std push insl (bad) mov loopne push scas xchg pop adc popf jge clc int mov fisttpll jl popf in jg jae arpl push pop in jae adc fs and sbb lea faddp loop lods xor icebp sub adc jbe pop popa sub push pop inc enter movsl (bad) cmp inc repz pop cmp lret mov ror or sbb push dec call fs xchg ljmp (bad) popf idivl mov rol std jo jne mov lea je jmp call dec xchg sub lock pop ljmp sbb xchg jnp out inc push cmpsl out push jle jae adc fwait stos mov mov fs in in das ja and dec test fadd out push push cmpsb bound mov imul ss fstl or popa adc test (bad) and insb arpl jge stos stc scas xchg sub ret imul fcmovne cli sub jno jle in push adc js sub loope test in xchg gs aas pop mov enter icebp add adc adc inc xchg ljmp aaa mov cmp mov xor iret sti bound (bad) sbb mov push scas (bad) fldl lcall fistpll (bad) lock imul mov sub pop dec pop dec dec outsb push je rcll pop push icebp sahf (bad) adc xchg popf mov jg shll pop pop lcall add add and mov pop daa cmp dec sbbl and adc sub add pusha jle subb mov jle jne lods cwtl js lret cli xlat sbb jno cmp add sarb test sub movsl dec stc lret xchg sbb ds dec cmp hlt leave xchg cld xchg sub jb sahf push pop inc xchg sub call in mov cmp popa stos or ja adc test fidivr aam dec aas mov pop push adc push mov jnp xchg lret aad push sbb dec xor hlt jb xchg adc clc outsl push mov dec pushf pop fdivs adcl (bad) in fcmovbe loop sub hlt int3 jmp push inc stos mov pop out pop sbb loopne pop xor cmpsb out dec sbbl add inc cmp xchg xchg adc mov outsl sbb jo inc pusha sub rorb adc (bad) divb lret mov pop cmp xchg test (bad) cmp imul movsb dec cmp cmp sarb popf loopne,pt inc mov mov cld pop cld fdivl fidivrl icebp sar push inc cs test mov fmul mov or dec (bad) mov (bad) nop xchg inc jge dec inc loop ss mov dec xor cmp pop mov stos adc push stos bound repnz cltd xor xor sub out lcall movsb push mov ljmp push fcoml and fmulp add add movsl push std sbb insl insl in pop or or or xor dec jns mov in repz push dec bound and mov and xchg and in add sbb iret dec sbb sub push jno lock inc push adc cmp cmp shl jno cmp jno cmp mov cmp stc pop mov (bad) jo pushf lds data16 fs xchg ljmp (bad) or clc xor jo ja mov lea jbe jmp call dec into testb lock pushf mov int sbb mov cmp out inc push cmpsl pop out sbb xor je mov dec sbb fs call push mov jg (bad) (bad) loopne fadd jg push or or mov fstl cltd mov iret pusha in adc out out pop pop push and pusha jle or push mov imul inc xor add je std ds mov inc aam iret sub mov roll mov xor or adc jge jecxz jnp mov stos in dec or and dec stc push xchg stos lea pop push leave jp ds push xchg (bad) or mov (bad) dec rcll stos mov cmpsb movsl sbb dec outsl xor jns mov ficom pushf xchg push ss fidiv in ficompl ja cmp in pop inc and fistpll loope mov ds xchg mov dec call mov hlt fs sub aad mov sbb jno or gs rcr jnp pusha add sbb test xor aam insb (bad) jmp adc stc sti xor push mov stos sub loope mov xlat ss mov and sbb enter xchg pop jb xchg mov mov sbb scas (bad) xor dec ret lret fldcw xor sbb xor fimul add daa fldenv and ret cmp cltd daa ds pop sbb pop jbe ret push or adcl sbb fwait adc or lret xor rclb (bad) jg loopne lahf ljmp cwtl outsb hlt orl or sbb ljmp jmp clc sbb faddl push mov dec jne and jge insb push mov cmc push mov std pop jg out ret out popa stos cmpsb cmp jno sbb test faddp add das add repnz in dec int3 mov sub fcomp pop scas pop push sbb jbe inc (bad) jbe clc mov pop pop cli mov outsl mul or cmp lods aaa pusha xchg jl and shr into mov repnz jnp popa mov sub and jge xchg int xlat sub xchg arpl xor dec popa sbb or xchg loop xor stc xchg in push lahf mov (bad) fstpl mov (bad) icebp nop dec pop sti sbb or in idiv ret jns jl and mov (bad) and xchg add push loope push gs or std mov push xchg or sub inc mov stos pop imul add enter jbe pop mov jle lds scas sahf push xchg add aad repz mov add push fcmovnbe and mov add movsl and ds jo and xchg pop outsl test dec ss cmc pop ja jb sub cmp in das cwtl in mov add or adc xchg loope inc pop inc mov push xor jmp out mov (bad) sarl xchg je cmpl mov push mov jg ljmp rclb rclb cmpsl sub xchg jl push or fidivr jecxz or cmp adc pusha jle in push lods and repz mov lahf arpl xchg and sub mov inc push in and mov sub mov cmp (bad) out dec arpl cmp pushf push mov iret xor decb scas push sub clc cltd cmp rolb lret add add lds int3 mov dec mov inc mov rcl ljmp movsb aam dec jo lock mov ret xor jle cltd (bad) or inc and dec jecxz popa cltd mov mov int3 das cwtl (bad) jmp xor testw sbb adc outsb push jmp jns test xor xor jns test iret xchg xchg lock pop xchg (bad) leave imul mov andl mov aas adc add sub mov movsl dec (bad) adc or xchg mov js push mov loopne adc aad leave mov imul adc imul insb imul mov inc jno cmc sbb enter cmp and add outsb fucomi pop inc into lret xor fwait add gs lock fist rorb cmp (bad) xor adc cmpsl gs popf pop movl je xchg jle das data16 inc fstps andl mov jns lahf jge imull and pop fiadd jae push jbe add mov imul loope mov ret cmpsl lods int3 imul in inc shlb loop daa push xchg sub int3 ds xor sbb push dec enter stos xchg mov jb roll xchg jne pop test imul dec xchg pop cld (bad) sbb or stos test icebp daa mov sbb dec jge ffreep inc cwtl mov push setg ljmp inc push mov mov add jns fldenv outsl test sbb mov cli dec lahf lea fstps sbb jg movsl xchg cs pushl sbb inc in dec sub fs or icebp sub and push les rcrb ja xchg hlt xchg sbb sbb loope push and mov xorl push pusha fsubs rcrl faddp ret sbb mov cs adc (bad) test push insb add out ret addl cmpsl ja mov xchg mov xchg xchg mov jns xor inc sti mov (bad) jae jle imul jne lods fwait scas add (bad) dec in fistpll mov add lret in sbb arpl mov rorb call sbb idivl call test (bad) aam cmp dec fist mov mov add add std sub mov dec mov sub dec xchg fistl xchg adc cmp pop lret test and mov icebp adc xor cmp repnz (bad) cmc in xlat negb push add pushf loopne loope inc leave test rcr sub je movl sub daa cli xchg sub and xchg sub mov mov jae jl dec dec call push repnz (bad) sub div (bad) push xor add ss pushf and in xchg loope pop icebp fmul adc or clc mov add jne mov leave adc xchg mov jmp mov dec aaa aad xor add or mov and test inc in test mov sahf mov std insb xor pop mov cmc test add movb lcall out push dec sub int3 stc mov xor test xchg jl xchg jl aam mull xchg int add out in mov lods ja dec xor xchg push sub sub pop xor addl jbe add mov xchg add sub add cmpsl (bad) divb popf lea jb pop nop int3 leave and or mov (bad) gs movsb mov (bad) int3 stos and imul std les or movsl cmp mov dec jo das mov jns shll mov jne cltd xor (bad) or cmp mov pushf xor xchg push pop xchg fs aaa stc repnz popf pushf (bad) jg ficom pop ret push mov in adc push inc add add je inc xor jecxz shrb sahf dec test jae push (bad) mov push loope rcll or sub pop pusha xor xor mov ljmp inc cmp mov outsl mov sub ret xor dec hlt or mov popa out mov pop jnp shrl ffreep shrl jecxz adc dec dec mov lea push push leave push pop dec (bad) push xchg mulb addr16 sbb insl insb pop cmp in arpl cmc dec inc add add gs lret pop nop icebp add roll mov and xor mov push lea loopne in stc (bad) leave jns push jge jl cs adc jo sbb mov add cmc data16 add addr16 pop sbb adc fisubrl stos push pusha jle dec dec adc roll push (bad) dec divl lret mov mov pop jle test push adc jmp cltd sub (bad) jmp dec cmp sub pop add jne int3 mov pop rcrl mov imul or je pop clc ret mov dec mov or lahf xchg xor cmp jae lods aam (bad) cmp jne jnp push into stos adc ret test push repnz in into pushf int3 (bad) push cmpsl ljmp aaa stc sbb movsl es pushf mov mov sub sub jnp (bad) std lahf imull imul xorl adcl adc sbb daa outsl add sarl (bad) mov add xchg sahf int3 ret pop fidivr sbb subb add and push mov imul push jo mov dec js lods fstpl es mov mov ja mov mov xchg or xchg sub enter (bad) and (bad) mov ja lret stos rol sahf pusha or sbb ret lea and loope test mov sub adc data16 mov xchg fcoms mov and (bad) je xor das data16 xor testw sub push into pop push movsl in movsl idivl lods mov jns xorl aas jecxz (bad) mov ljmp shrl mov push lods and sub sub jo dec pop cs add lea inc mov cli test sahf xchg sbb scas mov shl fcoms lods std orl pusha cli insl stos cld cmp dec push add gs add dec cltd xor xchg mov sub cmp dec jbe shlb (bad) ja pop lret push sbb xchg cmp cmpsl and shr (bad) stc mov add fisubr into stos mov jnp sarb xchg repnz cltd popa add xlat pop lds int fimul imull sbb sub lcall mov sahf and ret jns imul subl test dec out sbb lret test fiadd and out mov jge sub fnstenv nop mov mov dec xor add jle roll mov sub pop mov fldcw clc mov or mov rcrl push jge fistpll jno mov movsl pop sbb sbb gs cmp mov xchg cld test nop data16 rcrb or lock or insb xchg out into addr16 dec mov xchg adc stc cli icebp loope movsl lods scas insl inc into test jmp fcmovbe mov jg (bad) xchg shl adc push outsb push jmp push je inc inc push (bad) jle imul ret aaa jnp shrl pop lahf or mov sub fcompl aam test lods sbb pop inc xlat dec cmpsl mov inc mov icebp mov push stos cmp shrl adc rolb xchg xchg lods cmp stos sti mov xchg popa lock mov lock in mov arpl mov insb enter mov movsl adc mov xor inc jle inc mov add dec lds mov cmp pop pxor pop pop test call shll pusha sbb jp popf jl sbb adcl mov push dec (bad) hlt ret sti lds or adc sbb push (bad) (bad) mull repnz pcmpgtd sub xor jmp stos mov aad inc loop (bad) (bad) lods int3 xchg popf cs sub sahf xor sbb mov iret movsb lcall lret scas imul (bad) mov jmp pop pop test es mov popa lock aad xor jp in xlat adc sub lock mov dec xchg jnp push mov dec dec scas scas add cli in aad addl add inc sti xchg mov cmp push test mov pop mov sahf pop inc nop insb cld xchg add cmpl mov cwtl mov jmp in rorl cld xchg lcall lock fwait push div sbb in mov lret push sub xchg xchg fs daa mov lea jge jbe or (bad) adc jne xor pushf jecxz repnz jno mov push pop xor movsb test scas lcall mov enter int ret pop lods outsb mov dec leave mov scas popa daa aad jno pop clc adc out sarb lods dec jge fidiv jge leave movd dec gs pop pop jle ret in icebp dec xor push pop imul xchg ss mov loope or into adc notb fisubr and aad dec scas loop push push scas mov jmp inc fisttp fisttpll aas cmp pushf push ret mov and test lret pusha xor push xor pop xor das ja divl mov mov fsubrl in rorb daa movl test outsl xchg push and jl out jle in lds pusha mov xor stc mov jle dec sbb int3 or dec xor jae ljmp iret push fdiv dec push (bad) repz rclb add pop es out sbb sahf pop je insb icebp xchg add xorl add pop test dec or je xchg mov add into data16 adc pushw or cmp lock test cmp (bad) mov data16 mov lret mov out mov mov mov cs test (bad) test (bad) mov mov lock call add jmp pop repz xor movsl jno mov pop daa cltd mov outsl test jecxz loopne adc enter or shlb in mov ficomp scas add mov push fild jns dec shrl xor test add add idivb add jne push ror inc mov xchg pop rcll (bad) xor negl jns mov jmp out sbb inc push xchg push cwtl push or lahf bndldx (bad) popa out dec push outsl fld lret add bound ljmp aad pop rcl arpl loop aam sbb lahf add (bad) mov mov lock lea push test js fwait push cmpl jge mov imul mov outsb ljmp jge cmc inc sub mov insb xchg sub pushf jbe (bad) je jae lods shrl mov pop incl pop outsb test jne cmpsb lcall loop xor add out mov mov dec adcl pop cwtl jle,pn out call call in fisttpl movsb sahf cltd lret movsl pop jae cmp jns (bad) in inc adc inc inc out xchg adc scas push xchg inc pusha mov xor in leave std scas jnp (bad) repz idiv add sahf sbb cmp mov pop jo cmpsb fstpl aaa adc in sbb dec dec push xchg les pop add (bad) dec (bad) mov aam rcr cmp adc stos lock test popf rol insb sbb fmull lahf aaa push mov jbe arpl ljmp cmp jne inc stos adc insl sbb int jnp sub mov jg fcmovne inc ljmp xor das mov mov xchg xor push cmpsb xchg add idiv fdivp and adc push and mov in push xor pushf jg movsb mov jmp pop gs dec or adc or outsl mov xor fs lcall test dec xchg sti outsl sub or dec dec loop (bad) mov jmp cmp pop arpl imul sbb sub in stos adc das (bad) mov cmpsb xchg adc daa stos add mov dec imul add cli (bad) aad mov cmp (bad) mull xchg adc sbb pop imul sbb shl xlat inc hlt lods pusha sbb sbb jo ficomp mov mov ljmp add dec repnz or sub adc jmp cmpsb push mov cwtl and mov stos std pop xchg test sub push mov xchg loop mov mov arpl lahf pushf jno movsb lcall outsb push je or xor push lea out inc icebp or and lods inc pop mov hlt xchg adc fnstcw lock cmp rcl in xlat out fs push loop sbb mov push lret lods mov das pop cmpl mov scas adc or lret sub sar aas mov xor cmp fmul rcr aad hlt mov pop xor and cli mov lahf fdivrl fisubl pop sti stos dec and ret cmp lret test xor sbb add add cmp in in mov xor add or inc lds mov fcomps jae jae push adc pop mov pushf ret push mov xchg sbb xor mov pushl add sarb sub cwtl les dec je xor rorb pop mov (bad) mov rclb jge pop movl shll push cmp fidivl out xor sub inc xlat insb and cltd mov pop lea lds adc add or sub push pop cmp pop clc inc jmp lcall test inc insb mov adc mov push xchg subb add stos sbb dec adc push xchg ljmp xchg cmc mov fcoms mov std mov enter cs push mov icebp dec das push xchg les negb or sti test fcmovne pop nop lret sbb mov shll out lods mov mov mov in xor aas adc xor aaa cwtl inc arpl rcrb and inc ds xchg mov cld jnp lock lods add mov test insl pop push xor sub dec xchg jnp (bad) xorl mov mov call and lret (bad) jns push outsb iret lock jmp adc loop cltd repnz xchg in add mov cmp outsl jmp pop gs jo pushf cmpl add add imul jno lods cmpsl add mov xchg insb fidivr arpl sbb sbb and adc dec cmpsl or fs sub dec mov jno xchg dec in icebp das xorl pop jl push insb enter push aas and add pop dec pushf fistpl cmp jne adc lret or mov cmp push test cwtl cld xchg fildll push inc adc pop into stos add pop sbb in fwait cmp movsl jmp fcmovbe bound andb int push inc inc adc ljmp xlat xchg jmp adc (bad) lret push (bad) sbb mov mov and and push in dec ds mov insl or sub and mov sahf mov fisubl mov unpckhps mov test adc add or lds pop fildl cmp adc cmp mov movsb mov cwtl xchg xchg xchg enter mov int3 test jcxz loop popf (bad) mov and rorl leave repnz fsubrs and (bad) pop ret jge xor dec (bad) out mov mov xlat mov loop sub hlt or aas xchg ret push ret movsl add cli jnp pop xchg or mov xchg add ret pop das xchg ljmp and loope xor push dec push push js cltd iret out jg mov ud1 mov or xchg arpl dec sbb enter mov or dec cmp (bad) testl add lahf les pop mov xchg pop xor inc popf leave cmpsb sub inc xchg out out adc in mov and mov pop fimull divb in mov fsubrs adc add sub pop push fnstenv int3 or fmull ret xchg cmp cltd mov or (bad) push stos adc fcoms jne insl push je call mov adcl lods fidivrl mov sub dec mov enter add pop cmp hlt dec sti out dec divl jnp add xchg sbb out ljmp sbb xlat icebp lcall das js pop stc test xor lret divb repnz add fsubrs ds pop jns mov inc mov orl and cmp cmp pop mov pop mov movsb lcall cld daa add mov mov and insl sub mov adc ja cld xchg xchg mov leave inc ds std push bound jne out popf test ds flds insb and cltd mov cmpsl sbb add mov mov pop lret push lret ret xchg in push imul pop push mov sub xlat mov les ret movsl jp stos xor imulb pop xchg pop and loope adc push sbb pop xchg pop or mov mov inc clc in xchg loop jno je sbb sub sbb xor mov out leave add pop xchg inc jo lea jmp rorl jmp lods inc int std insl mov mov inc rclb les fcmovne stc insl dec add insb (bad) les pop rcrl js and mov mov arpl mov pop movsb ffree or cmp pop jp lock loop mov xor jb repz cltd cld imul in popa aaa mov test xor fwait adc jmp int shrb aas sbb pop jge or xchg mov mov mov or push pop xchg lcall lods adc jo push jmp pop xorb sub imul out addr16 sbb fcoms stc jb add movsl push aam pop cld stos pop add test inc (bad) mov mov mov stos push daa scas int3 lods js push inc in mov aam leave xor daa mov jne mov test xchg mov mov add ret push pop cltd adc pop (bad) or mov int out sub push cld add aad xor mov mov outsl cmpsb arpl xor movsb adc mov dec pop addb cmpsb sar in xor sub lret movsl in pop or lahf jl dec test repnz xor dec fmull mov cmc movsb andl out std mov push inc bound pop nop xchg (bad) mov xor xor test cwtl adc cmp sbb and and loopne push jns adc mov pushf cmp jge movsb dec ss jecxz insl lahf clc insl and dec or pop insl jg cmp adc sub movl jp shlb gs mov in add jge mov add in (bad) imul xchg fist sbb rorb jmp incl scas cmpl scas insl or cmp pushf inc sub pop repnz cli popf sbb mov inc jp daa mov frstor mov jae xchg cltd mov mov stc or fidivl cmpsl cmpl mov outsb outsb inc jno (bad) jbe pushf jno test sub mov pop jp mov sbb xor cmp xchg xor (bad) mov sub ficompl dec xchg imul and push add adc mov insl psraw inc and loop xchg sbb mov jmp xchg outsl adc nop lods dec mov jecxz mov aam cmp pop add add mov sahf pop pop nop insb les xor adc sub mov js mov out mov stc stos pop sbb repnz lock or sti popf sbb dec shrl sahf lock repnz fsubrp xchg xchg enter aaa inc cmp ja (bad) icebp out mov mov pop dec or xor pop ja xchg or sahf xor adc ret pusha loope outsl xchg lcall ret scas addr16 imul xor push sub jns arpl pop mulb xchg lret das (bad) push mov mov mov jl jle sub pop lret jbe jl scas add push or lcall bound add xchg mov hlt pop popf xchg xor jno sbb outsl push shrl mov add clc xor mov and fimul data16 mov mov or or fstl test pop xor mov push fsubl lods push mov jo adc (bad) je mov sub pop test sub inc pop inc enter dec xchg cmp jo call sub stos pop cltd jmp add leave mov cld xorw (bad) or or xchg xchg pop clc das addl dec rcl xchg adcb push fbld jbe jo je inc shr shlb sbb or arpl into xor xchg mov or mov ljmp xchg or outsl push in mov sbb popa pop adc and jg jle loopnew,pt jne or push lahf in jb mov imul scas aad jp and mov xchg mov lods cmc mov (bad) jmp stos mov or popl loop xor push ss pop (bad) jns push adc fidivr loope xchg sbb cmc xor icebp xchg pop add push dec push lds pop repz lods jae inc cld mov out xchg fnstsw or inc icebp cmp sub lock lahf mov arpl test cld shr pop idivb fldt jb sti xchg in lock pop inc cltd mov ffree call sbb movsl es gs pushf adc mov jg xchg mov loopne in enter push lahf jge jle pop cmp pop jge sub dec addl jb test mov lret outsl stos mov fwait pop mov pop pop sub sub mov jno cmp xchg push mov pop testb xchg pop mov jno (bad) jmp xchg enter loopne push push push push lds adc xor lock fwait (bad) mov hlt (bad) rcrl in xchg add daa stos sub mov dec push cmc inc stc inc (bad) push rclb adc mov or (bad) push ljmp push sub xor sti insl or jb aaa test inc cmpsb pop fwait popf lock in fwait xchg mov or add dec les sbb pop in test xor repnz fldl mov out cltd pop add add (bad) pusha jle int fnstenv adc xchg ja movsl xor add push adc jmp or sbb sub cmp sti mov mov mov aam cmp pop imul mov in jnp jne mov nop movsl je rcrb sbb fmull xchg aaa mov outsl jbe mov or mov out sti xchg in loope lea aad pop pop out inc push cmpsl cld sahf popf pushf aaa stc outsl test (bad) push adc and mov or std lcall jns xchg mov mov mov imul popa (bad) in dec and (bad) loopne jnp pop xchg xchg mov lods lock (bad) jmp stos mov daa rcl mov add mov mov mov pop (bad) jns push adc sub jbe (bad) mov inc pusha xchg les mov mov popa pop mov ljmpw xchg adc out bound and sub xor sbb or insb enter and call cmpsb cwtl scas push scas dec test dec dec jne jnp xchg push or int (bad) in mov xchg shrl jae popa aaa pusha sbb movsl es adc dec js dec sub lcall xchg fisubl push cli pop or or add ja jno xchg adc jl and and mov jp sbb loop movsl inc pop mov (bad) jns add push adc lret jne shl jno sbb sbb inc cld xchg sub aas pop mov push lds mov jae jge push pop nop ljmp clc mov lods cmp mov sub add and idiv fwait jo mov mov jae ljmp jne aam dec icebp xor rorb adcb sub gs outsl push je shrl mov lea popf xor mov inc or jle xor push sbb imul xchg push fwait es inc cmp orl cmp pop imul sbb inc lretw pusha jle adc aam test xorl lret mov xchg lret inc mov sub imull jno jae dec and inc js pop bound pop add ror pop (bad) or push lods sub pop inc jno push leave xchg ljmp jb cmc cmp jg push in hlt pop ja aad xor aaa sub push jne das std ret fsubrl aas jne xlat jne push stos adc jns sbb xchg sahf repnz mov out ljmp mov mov mov sub arpl (bad) mov icebp sub in push adc mov pusha call aas frstor adc ja iret lret push mov xchg xchg (bad) aam push pushf or mov cwtl mov mov test pop clc xchg pop ja xchg or sahf xor or into addr16 pop into (bad) jns aam std mov mov push mov test xchg jl (bad) fs aam sbb cmp data16 in xlat xor decl aam mov rcrb sbb mov pop cltd xchg incb jae jbe out push cmp stos add add jno bound mov out outsb ja out sub and sub in scas (bad) aad shrl xchg (bad) sub xchg push (bad) jle (bad) pop cwtl mov or pop lret test push fist or ret jle lret mov jmp sub in scas cwtl and mov push stos je or pop mov lahf mov pop jbe xchg cmp roll lcall fidivr inc inc lahf sti shrb and lods mov dec loopne push push adc inc or repz jge pushf js pushf pop pop je and add rcrb xor flds pusha cs hlt sub adc lods xchg ljmp jecxz jg mov imul mov in pop jno loopne mov push rcrl or repnz daa cwtl sub jb cmc pop test aas popf jns dec pop int (bad) (bad) sbb out fcmove xchg sbb adc es loopne mov mov pop xchg cltd vmovdqa adc push andb loopne jp fisttpl pop mov (bad) mov (bad) sub mov pop and adc adc js or fs add inc cmpl jae (bad) lock int3 popa rorb fnstsw jl jl adc enter push pop addr16 add adc jecxz cmp out sti xchg inc imul rolb out xor cmp ror rcr out pop scas (bad) aad in mov sub clc push xchg push lahf std pop push mov pop pop aas loopne jns icebp adc lahf jge scas adc mov jl dec fstpl test pop xor xchg and lods push mov dec pop adc (bad) jae xchg cmpl sub pop cltd and add pop inc enter pop loope push sub or dec mov adcb aas int3 cltd jmp pop pop test imul mov sbb xlat xchg pop pop and (bad) into inc pop insl mov jb sbb push cmp jbe jl scas add es mov jmp into stos mov xchg cmpl sub clc inc inc and pop lret es mov lahf mov (bad) (bad) push cltd jne jne fisubl enter sub rcll shll in jl repnz cmp loop pop das jg lods (bad) test shl push hlt gs mov jmp dec or int cmp lcall jno mov jecxz and pusha jmp shrb (bad) je push sub sub mov cli add or xor mov imul and xor mov cmp dec sbb mov test push leave fs nop xor out (bad) sahf loopne out popf and stos sub sahf mov mov add jnp xor xor arpl and test mov je jl sti movsb lods (bad) mov inc in or add lods ljmp repnz jns xchg cld xor cmpb shll cmc fwait pop push or jmp stos mov xchg cwtl pusha ds dec cmpsl movsb repz xchg loop aas mov jmp mov mov insb fs xor mov cmp and test popa stos jmp ds movsb outsl (bad) cld push and mov mov sbb fldcw cmc lods dec (bad) mov or movsb or nop and pop mov inc pusha cmp inc cmc stc pop fxch pushf ret clc lds sub sub or (bad) hlt sti add aas test (bad) cltd emms add (bad) jp scas adcl or or imul mov sub mov mov (bad) lcall sub aad aaa outsl push mov or cs mov inc jp and mov jl sbb outsb divl insl adcb add (bad) add pop cld jnp jnp data16 jo fadd fs fsubs xchg mov iret jno cmp movsb cmp fsubl and push inc add dec test lock dec mov add lds push (bad) cmpl je lahf jmp jae pop sub mov lret js repnz movsl cltd mov out cmp xchg arpl call leave je or je adc cmc xchg in and and call add add sub jmp scas sti outsb push jecxz pop div xor sbb andl lahf push pop jmp pause adc mov xlat repz fs mov lret adc pop sbb xchg stos (bad) ja xchg popf ljmp cvtps2pi roll lock cmp popf mov mov ret push dec clc test fcmovne (bad) fildll (bad) cli ret clc pop loop push inc dec insb or scas divb xor xchg mov dec rorl or cli je inc repnz out sbb (bad) fcmovnbe cmc out push ljmp icebp imul jge in pop push insl insl insb xchg cltd mov pop pop (bad) xlat shrb lods fiaddl pop out hlt jg imulb rcrb sahf jmp int3 roll pop or ja add lods xchg pop dec lock adc lods mov xor lods pop and ret mov insb (bad) test mov imul and nop dec aaa outsl (bad) dec mov lock stos test push gs push mov call push mov and or test sub sub jmp push sub lret enter mov jle (bad) xchg ljmp pop ret movsb cmp jg or lret mov and bound or outsb adc xor stos sar int3 test xchg xchg stos mov test mov push mov xchg and sahf aaa jae jp ljmp push in icebp rclb scas call hlt jg imull xchg dec scas loop push pop push cmpl popf xchg ficoml rolb xchg add fdivrl stos push std fdivrs inc int js fisttpll mov and cli sub nop clc out sahf jmp out les insb ror add cmp adc push and dec addl hlt test pop dec xor out pop push mov aaa cli stos loopne mov adc cmp push and mov mov jae mov ret pop pop or mov dec fsts mov imull jne add out inc lea popa pop call jns (bad) xor cmpsl or clc adc or scas jo fcmovbe mov mov pop xor les cmc in xchg push cmc xchg mov sub jecxz int3 xchg test sub sbb fdivrl fadds call add rcrl jo push (bad) add dec mov lock or mov jl je ds mov jnp jo adc push mov and mov lds push adc lea fmull xchg scas adc (bad) dec (bad) mov addr16 or std inc jp or mov dec fimull clc test jge fcoms mov add test jb les adc jge gs pmulhuw cltd sub dec fwait pop sbb cwtl add xor xchg shr ficoml and sub pop push fidiv int or (bad) cmpsl push xchg jle in out daa push jle xchg mov sub mov cmp imull xchg mov imul jmp (bad) mov (bad) xor imul loopne add add mov mov mov and sub pusha xchg fldcw cmp xchg pop gs lahf xorl jecxz aam xchg pop and inc xchg pop push pop pop cmp dec jbe shlb ja pop jne sbb mov movsb jae push mov in rolb clc scas xchg or pop (bad) hlt in (bad) lock stos jns fdivrl js mov ljmp (bad) in pop cmp je scas clc cs inc inc adc (bad) daa mov call sub sub push into ret adc adc jecxz jb les pop js mov fild incb sub adc push mov repz add xor adc xchg hlt lcall mov mov jmp adc insb jg xor jno (bad) cli add nop pop lret pop xchg sub aas add cli loopne insl mov cli loopne fsubl xorl adc mov and (bad) cmc cld clc mov aaa into jg mov mov inc jo xchg ret pushf dec (bad) xor mov pop cwtl mov xor lock (bad) push insb lret push sbb pushf cli jp fstpl sub cmpsb je adc adc fs lds and enter dec cwtl ja in les mov or lret add and xchg or jns lods inc inc ds adc cmp and lea ret jo,pn adc ficomp fcoms les stos les insb ljmp cs repz jo cmp jbe cli add pushl sub repz mov add andl mov test jmp pop movsb xor ret jp out cwtl dec mov fnclex popa dec (bad) nop pop mov (bad) pop jns dec std and out or lea into stos dec (bad) fdivrl int3 jmp xor xlat fdivrl lods fsubs neg enter and fnstenv xchg adc (bad) xor push stos pop mov xchg inc mov inc mov jns add dec std daa test xchg xchg test push loope test stos out pop add sarl or fwait or pushl add aaa cld (bad) clc ficom xchg shrb (bad) jl les paddq (bad) or jae (bad) mov into mov and inc repz add add fisubrl xchg mov in lahf or into cmp int3 mov sub jno mov pop fxch pushf ret mov inc jbe push mov xchg add rorb jno adc aam lcall icebp mov and xchg fwait adc mov xor push repnz sub jmp loop (bad) pop ret (bad) xchg dec loop jl xchg jae (bad) je xchg mov add push ja test in xor dec ds fistpl (bad) scas mov stos lret cli push fcoms cmp std adc test icebp aaa adc in sbb dec sbb les es jmp out arpl xchg mov adc cwtl std outsb ljmp mov mov or bound add add outsl and lock aaa jmp xchg and pop nop scas cmp popf xchg outsl fisub xor mov cmp in sbb jb cmpsb arpl movsb lret icebp push or xor mov leave popw movsl les loopne jns shll lcall imul test adc inc and sbb les (bad) test out push lock sbb cmp pop fwait lret cli xor and insb push rorl mov jmp test lcall mov aas xor pusha es cli inc in mov int3 adc pusha (bad) and mov mov (bad) das fistp je lcall adc idivb xchg mov aam bound ds (bad) dec mov xor mov je popa dec ret dec inc add or test es xor andb lods add jns jmp jmp push fidivrl inc push scas mov fist cmc xchg aaa test push mov cmpsl adc (bad) std outsl in imul cltd lret adc xchg sub sbb sti xchg mov out jnp mov call (bad) push mov lods ss js call es jns pop dec push xchg and sub xchg loope scas xchg in push jmp mov xor mov mov lret jno sbb ret (bad) mov push imul scas arpl xor sbb push pop cld xchg imul test insb add add cmp jge mov repnz fs out mov mov imul mov mov sbb (bad) xor xor fisttpl insl (bad) out in jmp push idivl lahf push lret ret mov jecxz fisttp stos and addl sub mov sub sti popf sub daa cmpsb arpl jecxz and data16 fdivr stc jmp cwtl xchg sub fstl (bad) mov push add aas pop andb (bad) fisubl mov and out xchg test jnp sub mov inc mov mov and pop push inc rorb push into cmp cmpsb lds es pop mov insb ret stos imul arpl mov inc cltd mov pop (bad) aam cli mov nop add add sar add inc nop outsl ja mov (bad) fucom rolb dec iret inc stc xchg rcl lcall push mov xor js (bad) sbb aaa repz je add cmovp inc mov and stos mov in leave sub mov popf imul scas lret cli push fsubrs cmp sub mov cmpsb test icebp cmp jne and ficom cmp mov mov add jns les xlat pop sub mov fldl jnp idivb mov dec fistpl pop inc lock stos aad or (bad) cvtdq2ps aad jge fsubrl outsl inc cltd cli stos lahf adc sub sbb xchg push iret sub scas fcoms xchg adc mov add and ljmp mov xchg inc sahf jecxz or mov jg repnz gs xchg jnp jns test xor mov cld push sub jle dec stc cld jp jmp xchg mov add test xchg jbe pop push jnp into push test jb xor js lods mov fnstsw cmp dec push jmp (bad) fbstp jecxz adc lret push or fistpll mov (bad) dec mov aam jge in mov xchg adc leave out inc mov inc fadd pop loopne out popf (bad) stos sub push lods xchg insb aam mov xor xor pusha mov pop lahf sahf xor push in icebp rolb mov andb and pop rol xchg lock ret in add xchg dec in xchg mov js jmp test fisttpll orl outsb mov shl sbb sbb xchg ja xchg mov xchg inc aas cld out push mov out test lahf xlat xor push cmc ret cmp movsb jno mov loopne into mov lds jp jg dec out sbb cmp ficomp lret movsl cmp mov lret stos or pop sub mull call das push add or pushf cli jp rcrl inc lds int fimul and jns push addr16 loope mov cltd or in adc dec sub mov int xor jle out cmp add cmpsl xchg pop pop mov mov lods pusha mov mov add insl aam mov sub aaa fdivl jecxz xchg jl aaa cld xchg lahf gs add jmp add push inc push cmp push sub and dec dec loopne mov dec aas sbb lcall inc insb mov xchg mov dec popa sub dec cmp mov sub pop outsb mov push mov roll jg lds mov jbe popf out or xchg cmp pop popa inc das jno sbb inc push xor repnz (bad) out adc mov sub subl adc es orb and scas sbb insl shlb pop cmc xor imul or out (bad) fdivrs incb ss adc jae fcomps adc add addr16 sub cmp mov lret cli sub adc mov cmp ficom pop cmp in stos test mov dec jbe dec es dec addl sub xor push fwait into inc loopne insl fwait aad mov dec sbb insl fsubrs pop pop int3 lret roll mov xchg push (bad) (bad) mov inc jbe sub lods jecxz push adc pop fnstcw inc loope mov and cltd mov or lods test mov das stc cld inc pop mov xchg and loope fwait rolb mov popf add sub mov mov mov jl dec test sbb fs lea push ret scas fiadd out aam mov adc push mov add dec outsl imul pop inc aas mov ds and push mov stos ljmp (bad) add add insl fxch mov test xlat cmp inc lea rol mov fiadd fmuls fisub pop sub or pop mov test (bad) (bad) cltd clc xchg inc adc andb (bad) inc inc mov push fisub lret jbe push xor and xchg int3 add dec fwait arpl push lahf (bad) movsl divl mov js xchg or out inc jnp add and sbb mov int3 pop add xor adc cmpsl mov mov iret repz mov mov cmpsl mov sub xor add add push lea std jae and roll popa repnz dec dec imul int fcmovne add (bad) test jp sub (bad) (bad) mov into or dec inc dec ret pop or call movsb pop popa sub xor out ret sbb iret stos adc push jmp inc adc cmpsb gs push je cld movsl es xchg cmp mov and sbb pop xchg cmp aam shll sub and mov xchg sbb jo scas dec jns mov jecxz scas push test scas fisubrl aad xor in and arpl mov out cmp jecxz cli clc mov adc hlt adc jno cmp adcl movsl inc leave popl add add add (bad) je shlb xchg daa sub xchg inc sbb fistpll mov jb mov negl outsb xor pop xchg ret add or add shlb sub adc icebp into stos scas push jbe inc adc sbb repnz cld cs cmpsl gs push pop dec rcll repz je stc je das adc pop in cld adc jle or mov outsb imul movsl xor sarl imul xlat xlat xor sbb and scas in inc out push data16 stos and das jg xor add or or dec mov sub sbb nop icebp mov (bad) push adc pushf mov jne shl jno jb xor inc lret push pop js and or repz mov or stc aam mov in push mov add add fs xchg cld xchg pop clc insl push (bad) dec jl out lds or mov mov fsubrs insb inc shr mov or punpckhwd lock dec and in cltd mov cmp aaa push jbe out test fdivrs movsb insl stc (bad) pop pushf pop push sbb cwtl clc pop xchg das inc jecxz (bad) pop aas pop adcb pop insl push lahf jge idivl add mov xlat repz and (bad) xor push xchg sub (bad) jmp and mov adc push sub sub push or cld push imul ret sbb fwait xchg push lea test and stos sub sub ret int3 (bad) xchg lock pop pop std fcmovne mov test xlat movsl pop xchg insl int jge dec shlb add jne (bad) nop xchg leave mov mov sbb push cmp pop mov adc xchg stos bound inc cltd jno or call fdivl push dec movsl movsb mov ror push adcb jmp mov and lcall imul ret lahf andl pop xchg lret jno mov data16 xor loope and sub movsb push test add xor adc mov lahf xor mov repz ja,pt sub cld adc jno lea std add cmp cmp push loopne sub cmp mov add int3 aas mov lods test out sub fldcw out mov cmc dec mov sub mov adc dec decl out and je push cmp fsubs loope sub ret dec lret cmp pop jns in loop insb movsb cmovae mov push cs into jl pop xchg sub adc add xlat inc push and inc (bad) jl xor rolb cmp (bad) int3 inc mov push xor pop mov inc fcompl insb mov mov test adc mov inc aam movsl iret mov add sbb cmp pop push cmp and mov mov fucomip cmp repz hlt xchg lods jnp ret movsl jno pop (bad) xor inc sbb repz inc mov push (bad) and adc enter imul or dec mov mov mov (bad) bswap sub mov notb (bad) lock jp add add leave outsb out xchg (bad) mov pushf jl test sahf lahf out sbb pop nop je das mov jmp je out lret (bad) ss arpl imul sti daa cmpsb outsb ret in idiv test mov and mov xor addb pop adc fcmovne insb adc or nop movsl out cmp lret cli mov xor mov push mov dec mov int3 inc jo fidiv push sbb mov inc int3 imul xor adc mov outsb cwtl scas (bad) adc insl icebp clc cltd cmp sbb (bad) mulps jno (bad) pop xlat and pop leave mov rol dec mov mov jge mov lock xlat adc pop jle jl push add sub cld or nop add add enter mov movsl es mov loopne ja ficom mov pop sbb loopne xchg outsb jecxz stc push lahf popf movsl lahf out cmc xchg fwait inc daa mov cmpsl push cmpsb mov fnstenv in dec ljmp das sub mov out (bad) mov add ror add xor mov mov pop popa xor xor xchg cmp dec dec cmp repnz leave mov (bad) or bound mov and mov add pop dec lret jo and (bad) setns push movsl movsb push or popf pop into test and rclb clc push lea pop xlat insb mov push clc test fidiv mov cmpl cwtl mov (bad) xorb push sti (bad) mov xchg sub (bad) aad rorl mov add push pop cmp push loope mov aas fs lahf imul pop outsb jno xor jbe pop add push and lret push insl push in push cli (bad) cvtps2pi mov add xchg dec in pop ds sub and mov mov jns adc sahf lea cmp aas les (bad) jecxz cmp cmp or pop mov rorl leave mov push idiv scas fs or (bad) movl test ret xchg xor insb in add ljmp sbb mov pop mov push push and jnp cmc fsubrp hlt shr mov sub (bad) lcall add aad mov mov adc jle dec push inc mov lods xchg push fldl push xchg (bad) fldenv in and test out or xor xchg sbb jae cmc add loope add imul fimull dec insl sahf das push xchg aas cmp fs aaa dec xor ror cmp sbb mov fcoms test stos test scas dec mov ja mov mov test dec out fmull sti stc pop (bad) jne pop bound shll mov xor cmp outsb push inc cltd sub or cs xchg adcl push jne add fcmovbe test xor andl xchg (bad) jb lea fsubp imul imul mov add or pop sbb stos js push sbb movsl xchg jl adc jge mov mov jne je mov clc push and push mov int3 mov cmp mov nop jmp cmp data16 push add das iret insb mov iret out clc cmp aad notb pop (bad) insb stc xchg lock sub jg mov mov inc dec pop add dec nop je mov mov dec and aaa cmpsl test leave mov mov push mov mov mov es stc sbb mov fild xchg adc iret fmull and cld mov lods loop movl repnz fwait es hlt sbbl fbstp cmc xchg paddb xor mov sub add add ret mov mov scas ljmp cmp add sbb mov aaa adc xlat mov cmp pop test dec cmp pop sub jno leave ret rcl in mov aas das adc inc pop clc adc outsw ja mov les nop and xchg add dec jae dec inc dec inc dec mov jge add jnp int xor ljmp sbb or pushf adc sub sbb movsl xor ja fdivrs cs push jg popf add shl jecxz mov push movsl test sbb aas out dec daa push bound test inc mov fcoms int jg jmp aam sbb sub add add mov mov push adc mov pop push lcall daa push lds lods pop test xchg js movsl inc int3 mov rol leave mov xchg mov adc and into jg jg push cmc arpl outsl aaa or pushf mov (bad) fmull cmpsb lds pop jb pop bound xchg imul insb lea addr16 jns lods xor pop sahf and mov mov lcall addr16 out lahf and mov pop call repz adc mov and sbb (bad) enter cmp mov push into push push and push sbb cmp adc push add xchg xchg add jge jbe push pop push test push scas in rolb add add fimul jecxz loop xchg mov xchg stos xlat notl dec test ret mov rcrb mov cmp ret shr xlat dec (bad) ret xor mov (bad) sbb add xchg push rdpmc adc cmpsl inc mov test rcrb dec sub test insl inc and fsubrs inc cltd repnz inc fldenv push adc jnp pop ljmp lahf loopne xor cwtl dec sub js jl push iret mov adc sahf andb jbe mov xor scas out xchg insl dec rep rcl and mov loop inc rcrb ss fsubr sbb pop in cmpsl cmp jnp mov mov sub xchg pop lods pop inc cmc cmp push lds jnp mov xchg xchg std cmp add jge rcll push jno neg leave sbb xor out push ret sbb inc mov push pop mov adc cld xchg jle dec int jns insl stc scas dec inc push fwait add jb mov sub aas ret xchg sbb sub push (bad) (bad) fstp pop dec jbe push outsl push add add adc push xchg in mov cmc out and pop iret fwait in adc in movsl mov pop ret pop adc testb xchg adc adc (bad) incl int popa cmp sbb or pop int3 mov out adc inc rol push pop rolb mov cmpsl out data16 es test lret mov mov dec jae ret leave xor fcmove mov add add out adc idiv cmp das aas hlt dec rcl mov das xchg or ret mov pop push push pop inc aam mov push outsl or jg cltd (bad) ret pop or arpl sub popa inc (bad) adc cmp and add std sub push or lahf ret push mov (bad) sbb outsb add or js add xchg add sbb push ljmp movsb in inc xorl sbb sub sbb lcall cli int sti xor mov or pushf popf fs sbb xor cmpsl or fs and popa cmpl jae shr lods lret insb dec or jp add add sub inc and cmp aaa inc mov lods das adc push mov (bad) outsl rolb pop add xchg push loope in jno (bad) xor call sbb mov adc sbb stc lods fwait cmp xlat fisttpll add jmp loopne ja xchg out xchg jb ljmp cli adc aam clc aam sbb or sbb mov repz stos mov movsl mov xor mov sbb sbb stos inc dec xchg imull jbe xchg test aaa cld (bad) movsb stc xchg jmp cld xchg out je xchg ja aam test nop mov repz aad sbb add mov rclb jno dec dec xchg inc push hlt or cs xchg incb add adc lods push mov jnp (bad) (bad) insb push dec into stos subb jne mov push mov mov sbb imul cltd mov test xchg mov lahf xchg (bad) sbbl fisubrl jmp cld scas (bad) lods leave adc js orl das sbb fisttp stos test push out sbb sub ljmp ret mov lds sub insl mov (bad) (bad) mov push pop rcr jnp rcl sub dec cmp (bad) in fidivr arpl mov repz mov mov pushf sub or aas ljmp pop int3 cmc enter aas in sbb jp xchg fldl xor ret push insb aas fcmovbe cs pop lcall (bad) jb lret xor add fcompp inc fwait imul js fsubs push js (bad) std movsl es rolb sub cld call push push negl test hlt ret dec xchg jmp xor xchg pop mov mov and jns popf aad adc or lods mov dec lock pop mov and inc mov cld push fisubrl scas lcall or bound add add int3 sbb js es loopne sbb outsl xchg jbe sti mov imul jnp dec xchg (bad) (bad) stos dec fmuls cmpsb scas push in sahf mov pushf addr16 sub mov idivb mov xchg add pop sahf ja pop mov push xor xor jnp lods fiaddl adc fisttpll rorl push xchg jne inc inc add xchg les mov test mov shlb ds cmp push mov fsubrs in and mov cltd adc cmc fildl sbb sti test std lock pop movl in icebp xchg imul sahf mov insb pop push pop jbe xor ss cwtl push in out (bad) jne (bad) stos adcl sbb push inc je inc jp scas ror or out ja mov fdecstp cmp loop xchg inc add push rclb and movl insl add das enter fiadd mov lahf (bad) pop nop neg or pop lret lods jns push jo lock scas adc mov jmp push idivb cmp shl aaa jg xchg stos out movsl std andb mov mov scas sbb test mov adc dec mov mov sbb movsl inc pusha adc popf jl xchg pop xchg and shll dec ljmp push ja (bad) mov fcom jge dec insl dec cmc repnz sub jge stos inc cmp sarl pop and repz and mov int3 into pop ds jb push loope sub jcxz clc xchg fldenv aam adc (bad) mov rcrl ficom mov jno fisubl scas push lahf jne jne rolb add push leave rclb sub mov lods clc clc adc mull iret cs and lock in out mov mov jl inc jno (bad) jbe pushf jno sahf movsb add mov lods dec loopne mov lahf sti sarb sbb push xor mov pop mov nop imul and pop int3 jecxz push popf (bad) mov mov fsubl daa out addl fnstenv jo mov out inc (bad) leave fdecstp xor in jmp call sub testb mov mov call repnz sahf enter je stc mov stc sub push pushf fistl jecxz mov ds cs stos outsl and les or mov mov or test add ret aam loopne mov or mov inc js jns inc loop mov xor nop pop pusha mov pushf jno aam jecxz dec cmc pusha loope push je bound fisttpl in rorb daa (bad) mov cmp subb xchg push int push mov shlb pop sub insl jg push loop daa stos xor out dec push mov dec jecxz pushf sti add cmp aas loop jp xor lret fcomps push mov or and push dec jb scas (bad) aad shrl mov push cwtl std pop test dec or push ds jae dec pop xchg jne rolb sarb mov das lods loopne lock inc js outsl mov dec xchg test data16 (bad) (bad) mov xor adc jnp insl popa fs mov movsl lcall popa in xchg add adc jns push rolb jo sbb adc xchg pop lret sub and xor bound outsb pop or ret push sub test fcmovne (bad) (bad) sarb jle cltd int arpl out dec inc sbbb cmc loope dec mov dec cmp cmpl (bad) mov push scas xor out lahf sahf fild push mov outsl jne cmpsb sub int mov jno cwtl cmp pop sbb inc outsl push or inc test add cmpl scas push ljmp add rolb iret test adc es loopne mov push inc cmp imul pop gs nop dec or cmp loop mov test and ds stos pop mov notb mov xor dec dec stos daa (bad) stos mov stos rclb jl imul xchg imul dec cld fidivr or pop xchg push lods and cmp and push out scas pushf cli add push pushf jmp cmp outsl loop jb xor into adc rolb popf (bad) or and je jb scas (bad) aad shrl mov sbb sub sbb pop cwtl cmc or dec inc mov daa fisubrl and mov mov ficomp and cld sub ljmp jge outsl jmp pop gs cmpl mov imul mov inc test std leave add adc sub out inc into or sti mov mov bound pop or fs sub inc dec rorl inc js or dec or sbb loope sub pop mov pushf popa push push mov es paddsw lahf sahf fild push push outsl jne lock int mov jno cwtl fsubs sbb inc outsl push or inc test add aas fisubl popf push (bad) dec pop (bad) dec (bad) clc sar push or cmp sbb xchg or out adc rorb mov icebp int pcmpgtd lret xchg xchg outsl loope fdivs pop mov mov push movsl push arpl cmpsl pushf jno lcall dec loopne cltd xchg pop imul cmc repz and xchg repnz add loopne cmpl call call xchg outsl (bad) or dec test (bad) mov rclb stos xor popa jbe pop leave movd dec clc and out or popa cwtl imull imul loope sub push mov clc xchg mov aam adc (bad) mov out add xchg mov mov call and pop lret movsb jns push push iret cld sbb lcall rcrl mov jo out push pusha lods ja push push loopne jmp lods dec fcoml and push movsb mov mov pop cld xchg pop popa mov or rcll jecxz push lret addl in js mov pushf fs and and enter loopne push push push push lds pop repz lods inc cld sbb push lret mov inc sub xor iret xlat rep outsl add adc outsb add divb push push (bad) mov fimul vmread add movsl cltd mov daa in pop mov adc (bad) cmp jge (bad) mov inc mov test test loop fisubl scas data16 addr16 loopne dec mov repnz push pop call ret pop cwtl and mov mov mov push int3 aas stos mov int mov lahf mov loop cld daa push push xlat sbb lods xchg mov arpl xor sti shrb in sbb cmc cmp xchg mov es mov lret sbb imul mov adc lods loopne pop push dec test jbe outsl (bad) jbe mov sbb ret xchg dec cmp pusha ja jmp fdecstp adc roll je inc je push rorb adc xor jno (bad) pop cli sub pop xor cmc test jb cmc and popa loope jle inc cmpsb xchg or enter repz ret jle sbbl sbb js mov mov push pop andb adc dec daa test data16 (bad) into xor ficomp fadds xchg xchg cs inc into addr16 sbb jns fiaddl popf adc cmp sbb (bad) xchg mov add clc dec (bad) fs and mov inc mov (bad) xor push jecxz insl mov insl adc in push mov jl insb push sub out lods fwait div movsl lahf sbb aam cmpsb pop jle fsin sub or add insl cmp add or mov and std adc clc inc push dec xchg add mov cmc xchg ja fs cli popl mov cli sbb sti sbb adc (bad) repz int jge cli dec fstpl test (bad) add test lret fisubrl cmpsl dec mov pop je xchg cmpl out jnp mov pop mov jns xchg push repnz je adc lahf sti lret scas pop push imul adc jno push pop mov mov and inc out fistpll or inc xchg cmp sub clc testl add int3 cmp rcrl mov imul push fnsave arpl adc loopne cmpl clc lods cld sahf push push in mov and xorl cwtl (bad) dec pusha ss push nop neg push push push mov add insb lods xchg lret sbbl shlb sub mov xchg mov fwait xchg mov jl jle aas popw repnz push pop mov (bad) mov (bad) sub mov sti lret mov push scas add jbe sub mov lods imul and jnp jecxz insl mov dec or inc jg outsl add scas cmp push dec push subl cmpsl add inc mov dec bound push fnstsw inc test add inc in mov jne shrb jnp nop icebp or (bad) xlat mov adc cld les in or mov ret adc xchg stos pusha rcrl xchg jp,pn jns jl call gs (bad) test loope cmp mov push xchg loop imul mov sbb add xchg inc lea inc cmp clc push mov xchg push test scas cmpsb cmp push sbb nop and xchg bound cmp movsb jb cld push mov lds push inc ljmp clc ret adc out push ja test adc add out inc sub pushf xchg add dec fisttpll dec inc cld ret lea and and push (bad) aad shrl mov push add add dec add xchg daa cmp lahf add jmp pop aam or mov daa xchg add mov sub ljmp xchg inc and cmpsl pop mov add or sbb mov pop test jae dec inc cmp jge out neg mov or and icebp sti cmp (bad) sbb xor ret jecxz ret fsubl sbb ljmp xchg sub cmpl mov (bad) (bad) or cmp xor mov pop xor fs gs addr16 lret pusha cmp out and les ret inc ljmp cli rcll and and sti (bad) flds and sbb into hlt cmp inc stos mov xchg nop xchg adc sub lret (bad) decb jns out adc pop movsl movsb (bad) les xchg push or push mov jb movsl push ret rcrl jae jmp test (bad) sub sub sti or dec cmp and cli add bound sub sub jge fs ljmp (bad) sub cmp push aad loop daa stos clc or jecxz jo dec in shr inc xor inc jae mov pop push (bad) (bad) push test push mov pushf and std adc idivb jo movsb int test adc mov push cmpsb xchg ret push in mov das lods mov add jp sbb push lods ja sti xchg xchg adc insb and lods push andb mov sbb loop test mov sahf xor (bad) xchg push adc pusha stc cmp mov lahf sti lret scas and ret mov jmp sub dec addr16 adc or pop push mov rorb dec pop jle (bad) mov pushf xchg xor push dec xor push pop push cli add loop je es cmp enter jl mov or xor cmp aaa call ljmp cmp push mov pop test dec add xchg aaa popa ret mov sub xchg lret and xchg jge mov push pop repz jl fwait jae notl pushf out xor add and pop pop gs in dec or adc or mov push sahf mov adc std jmp mov push (bad) fist imul ss movsl jno stc xor call mov xchg shlb inc jns inc movsl call mov sbb into or cmpsb test xchg jns test mov js mov jno sbb ret xlat add mov ss pop push jmp ss icebp or pop scas mov mov stos call dec in fucom pop pop or clc ret fsts sti aam outsb shlb and test (bad) (bad) in xor pushl movl push stos push mov push pusha cmp int3 cmp nop sub or push mov add out pop add jbe add xchg push adc push je div jne sub ja dec cmp (bad) jno faddp pop xchg and repz sbb inc push es mov push aas stos sbb add xlat xchg pop xor inc dec push enterw js mov adc jmp call into test lret xchg lock stos mov push pop adc jne inc push repz adc arpl cmpsl movsb mov cmpsl das adc and xlat out jb pop aas loopne dec lods xchg lcall jge inc cwtl pop xchg mov xchg mov lods ja mov xchg adc cmc repnz push pusha jle xor imul pusha push xor dec xchg ljmp jecxz cmc dec cmp push xchg push mov add add es jb mov out mov cmp repz lea ret int3 adc cli xchg fcmovne (bad) fbstp fnstsw imul (bad) mov xchg mov popf add lahf jo pop int3 mov hlt (bad) ret inc add ljmp stos pop pop mov mov mov in xor inc push or inc xchg adc outsl push (bad) mov out fimul and sub push andl mov push inc imul cmp xchg mov push and loope daa jge mov cmp inc mov mov mov pop dec or aaa lea dec outsb inc jno (bad) jbe pushf jno test push loopne mov lahf sti lret out push push imul add add notl call lret sub cmc fcmovne iret jmp fs sbb dec test pop mov dec lock mov sbb mov mov fldcw push push ss jns cmpsl mov add int3 fild test dec mov sub cmc xor jno (bad) cli xchg in mov aaa add push test test jb cmc and dec dec cmpsb xchg or div adc pop or std or jg sbb jl repnz fwait cwtl and nop pcmpgtd push out push insl je fcomps dec mov (bad) popa cltd sub stos dec test into cli sub dec stos add add (bad) sub mov fsubrs pop in xchg hlt pop adc movsl jno roll add repz add add xchg mov das push fistpll in pop (bad) pop sbb icebp inc inc dec mov push dec pop lret outsl and popa rol sub fs adc xchg xor mov ss pop lahf sub insb out imul xorb ljmp sbb insl xchg std movsl xor hlt dec or call jb dec aam pminsw out inc out lods les int3 jecxz mov jg pop ja pop gs lds lods jge mov mov lods xchg test popf xor outsl fnstenv pop les cmp add xor mov subb push xchg mov jge cvtps2pi jo sahf xchg out arpl popf add aas pop aad sbb mov movsb gs sbb mov jp jno push xor dec dec or stc stos xor and ds arpl (bad) pop mov pop ficompl es mov mov and jp stos outsl mov int cmp stos cmpsl cmpsl gs xchg pop and imul and out xlat ficomp std (bad) mov (bad) and xor dec and dec jns movsl sbb adc push xlat jb stos xchg jmp jns mov and imul xor (bad) mov (bad) xlat (bad) shlb lahf mov in mov lahf pushf jnp jo outsb ret das ret cli test inc add adc test rcrb fcompl push mov mov jbe push data16 (bad) or imul rcrb clc cmp xchg movsl test aas in addb push dec faddl mov add add inc jmp popa sbb push or or rcr (bad) push repnz ja rcrb sub add out cltd add ljmp out xor je jbe es and push stc fs mov fbld hlt add inc int3 div push iret sbb outsb test loope dec xor push adc (bad) lods call xchg sbb mov (bad) xor pop jns adc loope loop and sahf lock add cmp js ret stc test inc cmp test inc pop mov vandnps xchg mov xchg pop repz xchg push (bad) jecxz out cmp add loope mov ds mov ret inc and and lret je sti jmp jb push aad (bad) jb pop mov add xlat jne sub mov std out or sbb aaa call clc inc inc test cmp push push test test push xor pop cwtl (bad) or sub pop in push sbb adc pop pop andl xchg jl or xor cmp fldenv fldt xor stos out xchg mov xor lock (bad) repz adc lret cli mov ljmp add mov add or lcallw cwtl push and inc push ret stos pop cmpsb xor sbb repz gs mov cld ljmpw inc sbb jge inc mov pop lods jcxz adc pusha sub pop sbb and (bad) mov inc xor es aam jno notl (bad) repz out push aad pop pop add (bad) fsubs scas (bad) aad shrl mov sbb cmp sbb xchg fstpl out mov sub (bad) sub popa int3 jmp daa mov or (bad) imull dec shl add and outsl (bad) repnz xchg push insb shl repz xchg loop aas insl andb outsl nop clc (bad) ja pop mov inc enter sub data16 fs jl sub pop add mov cmp and xchg xorl in push leave (bad) ljmp push ret (bad) jmp push dec (bad) fsub mov aas (bad) xlat jmp and shll xchg (bad) data16 mov xor dec jne (bad) or hlt cmp lcall jl out movsb movsb ret add insl sbb (bad) shr pop bound ror push jmp (bad) rcrl js push lcall push gs fisubrl push dec add mov jl mov mov lret cli pop push mov xchg mov cs pop int add push lea dec test cli insl roll ds mov aam pop std pop sbbb sub (bad) xchg ljmp loop leave xchg (bad) push jecxz sbb ljmp dec and xchg test adc adc stos pop jne (bad) (bad) std insb xlat xor xor pop call clc inc lods xorl mov dec mov daa mov add add xor xchg gs lahf imull push xchg push xchg ja icebp fiadd sbb outsl mov mov push mov inc cmc aam xchg clc xor or pop add lret bound in aaa notl (bad) cvtps2pi stc jb sub cmp cs or cmp gs push cli imul sub pop mov cmpsl sub scas xorl (bad) dec rorl sti cmp jl loop add lds sbb lods lea dec (bad) (bad) (bad) (bad) cvtdq2ps inc cmp push and test xchg cli sbb xor xchg add leave push nop rcl push xlat mov and or lret xor cwtl jecxz (bad) aas pop inc adc xchg (bad) movsl notl aaa scas xchg xchg jns hlt jl add jle mov and loopne xchg loop lcall cmp imul movsl imull test xchg xor cs xor sub test and adc je sub mov lahf inc repz faddp aas mov jno outsl ret inc mov xor leave mov outsb std (bad) js xlat out fs int3 lret inc sbbb jae loope dec mov mov pushf mov in mov stos les cmp dec test pop arpl inc inc lds vfrczss ds jo push aad sti dec enter mov outsb mov xchg popf add fwait pop ljmp pop mov inc cwtl fstpt stc stos loopne movsl popf jnp nop ret dec cwtl mov push jmp cmpsl push adc mov xlat jle dec stc clc jbe sub sbb inc subl movb jbe mov cmpsb push mov imul aad or stos jb mov jl mov push loopne mov int xchg push xchg jb dec int inc mov aaa add mov hlt sbb pop ss mov push nop push scas (bad) jnp pop add jl iret xor inc cltd jmp cwtl inc push enter mov and sbb or mov pop mov sar xchg popa fs adc (bad) cmp fisttpll or div adc ret adc lea in jns (bad) (bad) mov (bad) and xor hlt and inc mov dec test fldenv adc dec adc je jnp outsb cmp and add inc rcrl jno xor add das jae int shrb mov mov inc push mov mov mov imul xlat shll iret sarb mov xchg (bad) scas orb dec mov lret cmc mov dec cmpsl (bad) outsl fisttp xchg or ret xchg dec test ret in adc cmp jne gs loop xlat arpl inc aam call xchg push je mov pop xchg je xchg loop das adc ds testl adc jg movsb push lahf (bad) jb add cmpsl imul (bad) jo out mov mov ds int add jno imul inc sbb cmp sbb mov daa mov sub les mov jl out xchg jmp lock sarl xor fildll andb arpl pop mov push sarb sarb jo js add xchg sbb lds pop pusha xor sbb sbb mov mov sub inc and ret js cmp ficomp pushf xchg mov and popa mov add add aaa mov jmp inc (bad) pop std hlt pop lahf mov sar std cmp call and cs xchg add or mov add push push sub mov fadds roll insb jecxz inc (bad) loopne hlt cmpl pop push adc insb push mov (bad) push sub jb sub jnp add add and cmp sub add mov or ljmp adcl dec in pop jne cmp (bad) js xor clc cltd stos pop test mov dec and mov mov insb cmpsb bswap stos mov out imul data16 out cld mov gs jb cwtl out push push jne or xor push sbb pop aas xchg ret push mov or cmpl dec or loop in mov push adc and int in scas jb popf movsl cltd lods enter xchg insl adcb sub mov sti mov stc aaa adc add xor jp sub aam pop cmpsb out roll push mov pop rcrb adc lds mov fild (bad) and and sbb cmp or loop xor decl sahf fs jmp neg into xor jnp pop flds outsl (bad) arpl xor jg mov repnz lock iret pushf hlt sbb ja or lcall dec mov pop (bad) int cmpb mov pop mov (bad) std mov lret imul leave dec cmp cmpsl add adc mov pop rcr js test or in and in loop lahf mov add mov sub stos sbb add jno (bad) (bad) stc inc mov adc pop std sbb jle clc mov or cmp rorb nop jmp push (bad) xor dec add add cmp ret in stos jge (bad) lcall bound and jb scas scas add mov sub push xlat outsl jne mov out ds insb xor pop sbb cmpsb jecxz pop fstps sub adcl xor xchg adc cmc or add xor movsb dec popf lret movsl push (bad) arpl or dec dec add lret push jmp dec aas and rorl (bad) test sti or loopne pop movsl xor lods pop mov cmp pop inc popa adc or in cmp int add ja int3 mov sbb fcoms inc push dec imul insl imul movsb cmp sar pop ja mov add jmp dec and mov ljmp inc stos (bad) lcall sub xor je cwtl mov insl push mov arpl std movsl pop lahf (bad) pushf lock adc pop loop xchg sub hlt mov or sub in push push bound jnp sarl and dec andl pop pop mov push push or stos popa test jnp and and xchg loop xor in push dec adc xchg mov (bad) mov inc add scas rorl icebp xchg push jmp test decl (bad) dec fbstp fnstcw imul cs cmp dec dec or mov faddl test and shr and imull rolb mov arpl popf fnstcw pop insb xor cmp in enter sti or into jl imul xchg xchg (bad) lret call xchg neg adc pop fcoml (bad) repz loope xchg jo jle and scas (bad) push pop xor mov mov (bad) xchg les cmpps sbb mov sub jno mov clc push icebp xor lods cmpsb pop fstl inc lock insl xor test pop mov inc call fadds sahf imul js int3 (bad) mov in fistpll mov mov jbe push fmull xchg mov xchg fwait rorl hlt push cmp stos add add loopne xor loope arpl jns scas xor ljmp add adc jns es sti xor cwtl add repnz xor add cltd in adcl andb div les outsb scas pusha (bad) movsl popf popa das test cltd or mov jecxz sbb add scas in or test inc fcoml and ja and cmp and in add sbb iret dec (bad) stc sub add clc mov adc mov shl jno jb jl inc repnz mov mov push gs fs inc sbb mov ljmp (bad) inc idivl mov mov in jo jne mov lea je jmp call dec mov ret or ljmp sbb adc pop inc push cmpsl mov cmpl fstps mov push adc ficoml ja in idivb fldl mov push push (bad) bound mov imul mov (bad) test out rolb push insb arpl bound (bad) cmp int3 sbb lea dec cli clc jle lods xchg push adc movsb das shl mov jb mov orb ds mov cmp mov (bad) and inc fcoml test ljmp outsl mov cmp mov and ja jge sbb mov jbe and mov popa pop push scas xchg test pmaddwd lock loope sti push mov test outsl lcall push je fist insl mov jl fwait pop push in fisttpll andb add add pop aas loopne adc popf jge int3 jnp (bad) push daa loope jl sub jle jae push add sub sbb push movsb lods lahf sbbl xor sub adc push cld push addr16 pop pop inc enter shl jno jb jl inc mov adcb push mov mov sbb dec lds fs inc sbb js ljmp (bad) xor aas in jo jne mov lea je jmp call dec xchg ret or into push ljmp sbb inc mov cltd inc push cmpsl (bad) pop sbb je pop fstps mov xchg adc ficoml ja xor jg ljmp push push (bad) bound mov add add jns sbb dec sbbl lret (bad) test out mov fcoml out cmpsb fiadd faddp jae shl xor inc sub adc sbb push sub in inc enter sub or mov fcmovnb push js sub cmp movsl mov and int3 mov loopne cltd push push cmp mov outsb shlb cld pop dec or enter sbb or nop and ret pushf mov jae jae dec adc decb cmp popf enter aad push xchg inc cltd mov frstor push nop icebp dec xchg daa movsb insl adc jl pop push test (bad) fisttpll inc jecxz (bad) pop aas ja adc lahf jge idivl add xacquire jl adc xor imul (bad) mov out lahf inc pop xchg ret adc inc sub sub push js add push imul pop inc mov lock fwait loop lea and push mov stos push outsb and (bad) hlt js ret int3 mov mov fcmove mov test xlat sbb inc dec int int dec shr mov dec pop fldl pushf dec inc sahf mov push cmpsb push cmp pop mov or xchg stos bound adc jns sub fs nop ss sahf movsb movsb sar jl push jo and (bad) add push pop adc xor lahf xor pop xchg sub data16 xor sarl sub lods cmpsl lods pop add xor adc imul add adc dec xor sub dec iret repz mov pop dec ss lods sub or mov jo lea std mov and jne mov repnz mov or pop xlat loope jmp fidivr aas and mov das loopne cmc into or icebp sub ret pop or call outsl adc xor push sbb iret stos adc push jmp cmp pop cmpsb gs push je cld movsl es mov and sbb in (bad) pop inc aam xchg outsb push sbb in mov xchg jne adc out dec jns ja out scas push test mov imul and ret jle or mov xor shlb cmp add xchg xor shr arpl xchg (bad) into stc mov push dec cmp sub in fiadd rorb outsb dec cmp mov std pop cld lods xor and shrl push inc movlps aad push pop clc mov ss lds mulb nop sbb andl scas test push pop push scas cmp xor jne jnp or sub push pop jb js and pushf xchg sbb stc outsl pop (bad) inc pop push fmulp mov sub xchg in sbb and xchg test in pcmpgtb xchg insl in pop or jno in dec cld jmp lds xchg (bad) pop loope pop and jb push rcl adcl adc divl sbb xchg sbb jg inc mov cmp xchg loope,pn inc or ret out iret jl add jno xchg mov fiadd adc xlat mov test daa inc or sbbl jo adc loopew mov in hlt aas and mov inc in (bad) aam sbbl mov test into xor popf enter mov rorb xor scas stos (bad) lods lahf (bad) movsl dec mov push mov bsf xchg xor shrb lahf les xchg (bad) lds fadds lret popf test xchg insl and ja roll stc ret repnz dec or movsb scas cmp ljmp jl out fbld add push dec iret repz sub pop mov push push adc (bad) out add sub lea mov lock jle fidiv mov int3 add cmp pop xor fisub mov outsb std xchg fwait in xlat add dec jo dec jbe sarb pop ja ret int3 aaa mov pushf or bound inc outsl adc cmp cmp popf pop add movsl test cmp sahf xor out or sbb arpl adc add das inc cltd mov test jle fcmovbe mov or mov popf push adc mov push repnz or inc cmp test push pop popa jle or inc insl add xchg ja xor outsl cwtl inc and inc xor stos cmc pusha loope outsl xchg mov movsl pop xor xorb adc or (bad) sbb push sbb repz inc mov (bad) sbb rol add shll dec adc jg push out addl scas mov movsl adc inc leave push inc jo leave fdecstp lds cmp rolb xchg mov and pop pop push mov and inc jno ret adc sbb hlt std sbbl popf adc push jle add push cmpsb xchg cmp enter int3 jmp add sub in push dec dec cmp push and inc hlt cmp mov and out std pusha push mov sarl push mov in movsl in add xchg js dec out movsb mov les mov jb das fidiv jae mov push xor in pop pushf ds cli jg pusha mov pop push mov sbb enter insl stc out add (bad) into sbb sbb lret add fisttp je ret nop add scas paddsw ss (bad) outsl rolb pcmpgtb push jnp adc loope into pop call xchg mov jmp sbb rcrb lods cmpsl in push cmpsb shlb out mov hlt fnstcw jb aad ja xor xchg jb xchg add call and dec orl (bad) or adcl mov ss pop mov xchg loop (bad) lret aad fistp jno out std mov sbb mov push mov cvtps2pi dec lea icebp xchg sub mov add lahf mov cmp inc lock data16 cmp jns inc xchg ljmp dec dec loop push inc dec push in cmc pop ja test fisub inc sarb dec iret and lcall add jb les xchg mov in or cmp cmp jns adc pop fwait jecxz push lahf mov adc outsb jp xchg int3 adc call call in fcomps push mov pop xchg push xchg ja in in (bad) push push out push push sbb pop and xor (bad) pop mov sub xlat fucomip push add fsubr ret add dec leave add stc (bad) dec or push and shll js insb (bad) push cld shr xchg mov xchg pop and out aad mov sbb (bad) aaa or or ja int3 subw jmp rol sub push push mov jnp add pop pop mov jmp add push mov lahf arpl adc popa xchg movsl inc or add lahf das mov cltd jnp test mov lcall stos xor lahf jnp xchg xchg iret pop js xchg stos shrl xchg adc imul or and sarb (bad) dec sub mov cmp repz loope (bad) adc out enter fwait in push icebp dec jo add dec std or cltd pop xor int3 sbb sub mov pop jge aaa mov daa sar imul mov (bad) xor stos and cmp add gs fistpl sbb mov push ljmp adc mov mov sbb (bad) aad rolb popf xor lea xchg xchg sub inc (bad) jg jg lahf aad jb mov imul sbb hlt out dec std and push pop xchg in sub ficomp or fisttpll mov js pop fwait xor sub imul xchg mov pop xor gs ret out fistpll repz sub add aaa and pop dec insl inc ds clc dec lds mov push leave (bad) mov jle mov out lods lods scas inc xchg loop mov cs adc xchg dec adcl dec push pop and imul stc xchg icebp into or outsl mov sahf cltd enter hlt pop adc inc rolb xor (bad) cmpsl nop pop pop mov push notw and mov add xlat lcall mov pop les mov dec dec pop mov pop xlat jno inc outsb or ss mov mov scas (bad) inc fcoml outsl loop imul mov fimull push xchg or xor push add add xchg push adc (bad) dec arpl mov mov xchg xchg adc insl repz lock and mov in push repnz push daa inc xchg or pop clc out les xor sbb or pop cli (bad) inc and pusha cwtl dec mov cmp (bad) mov and xchg outsl adc mov cmp lret mov pushf sbb dec and pop popa aaa stc sbb leave out popf pop pop insl mov fsubl xchg sub cwtl dec sub shll loopne test ds das xor or add or mov mov cmp cmpsb push pop xchg sub movl mov hlt push dec and loop jg scas neg lret inc mov inc xchg push insb enter push jno mov jl jo dec push mov push mov pop add mov cmpsl lret mov bound xchg mov mov xorl adc dec inc cli mov int3 and out imul mov cmp (bad) mov call dec xor xor je cwtl stos and ror pop popl (bad) adc lahf fistpll push mov cli fstp pop push xor xchg cmc adc lahf mov int3 (bad) sbb fadds scas insb mov adc inc daa sub cmp shll xchg pushf xlat repnz or pop cmp imul push pop sarl fistpll mov in aam movl mov fwait imul or js mov jae push loope mov test mov mov std xchg cmp pop inc fcompl (bad) stc arpl and loop jmp push cmp mov push push dec (bad) mov unpckhps adc int cmp cmpsl (bad) ret jmp lods clc mov mov lock into jp clc ret mov shlb sti push or loop aaa test les nop daa addr16 lea jmp fwait mov scas xchg mov mov dec out and shr jbe and jmp jecxz test (bad) rcll out int3 imul jnp fisttpll cmp or cmp pop int3 data16 (bad) popf hlt insb push das dec mov loopne pop out (bad) or sub fsubrs dec cwtl stc mov add aad ds in (bad) xor pop fsubr imul mov cmc test cmp cmp flds fstpt jecxz psubusw repz arpl out mov sbb mov sub bound mov std insl xor lahf mov ljmp xchg jmp (bad) popa inc push push rorb xorb cs loopne,pt lret notl inc in ss das push das cmpsl jl clc fidivl dec add xchg adc test imul ret adc ret mov mov and mov adc jp xchg incl popf add outsb movsb scas pop out inc add cmp lods faddp push hlt test leave cld iret fdivl mov es cmp jmp jp inc insl lock xor cmp into jge mov and sti mov inc add pop xor test (bad) xor sbb mov leave mov mov cltd mov or or mov mov (bad) out loopne fnstcw adc adc ret loop cltd (bad) shlb das into push push movsb xor lret movsl jl repnz (bad) mov jo aas jecxz inc scas jae iret xchg xchg adc push outsl in lahf jmp and jnp dec decl cmc xchg sbb sbb xchg sbbl aad jno add mov sub sub add fcmovne iret ret iret mov jp and out mov iret push jmp mov ficomp (bad) adcb xchg fimull stc xchg push adc sbb je (bad) out mov repnz test repz aas ss pushf jge das gs aad sbb jae adc mov pushf xor inc cld cltd dec test andl add icebp leave rcrl cmp hlt sub push out ret sub in das push shll fcoml mov (bad) or int add sub jle xchg test mov xchg xor jae movsw xor js negb push (bad) (bad) cmc repz add add pop sub jl mov adc mov pop jp and in sbb inc dec inc dec mov arpl or subl pop shr lcall push lahf jb imull bound xchg push out leave aaa daa jno mov stos push cmpsl sbb cmp sbb mov aam into sub movsb stc mov mov hlt jg psubsb daa loope nop push jno shlb xchg outsl mov pop imul dec std sahf dec xchg aas fwait or inc push sbb jne mov out nop cmp cltd lret pop or xor out inc (bad) mov insb fs and jno (bad) cli mov jmp sarb dec jb mov mov or test sub xchg popf xchg and jae jmp or cmp sub divb mov mov pop popf sub cmc pop pop push cmp jne pop pop pop fldcw aam jp int push pushf push pushf sub inc push mov out xchg sbb fistl daa dec insl mov or enter jmp dec mov in pop aas push inc inc je outsb push lahf notl xchg lods aad pop jbe xchg in (bad) jle out pop in push pop jmp scas out std adc mov mov inc test sub sbb sub mov hlt ljmp sub sbb and movsl cmp xchg mov pop insl rcrl xchg mov movsl inc mov push ds lcall js xchg rorl mov das jg dec shlb or add (bad) or mov nop jbe push mov mov mov fimul add add and mov aas paddusb jae cmp popf inc lock add scas and xchg pushf sub adc andl enter mov enter out (bad) push (bad) jmp hlt movsb sub add orl jg mov dec andl push loope pop add push and xorl mov fisttpll or or sub int3 ljmp mov push sub jp xor jo fisubrl mov jns jo fadds movsl lcall xlat xchg mov sbb fcomip sbb or mov rolb cld aas addr16 stc (bad) xchg add mov dec std fldenv cmp add cmpsl push mov jge sbb test cmpsb lds outsl fcoml add jl inc push in mov sub fs sbb int3 mov xor insb cmp das adc in ficompl hlt push push or mov int3 pop push rclb mov ja xchg scas xchg sbbb push mov xor push sbb inc iret lcall mov xchg push pop mov xor sub insb cli cmp jns sub mov imul sahf call lds outsl repnz xor mov or mov aam push jno incb std xor sub cltd sbb dec ficoml sbb iret pop sbb mov mov test mov push ljmp add xchg insb out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods fidiv fisubl jno mov xor push aam ss sbb test test mov dec mov imul out lods dec ret sbb ret push (bad) mov (bad) mov testb lea mov insl out or arpl lods cmp arpl mov sti je jl fwait mov mov fnstsw pop divl mov xor fistl cli movsl mov (bad) xchg mov push mov jecxz xchg imul lods rolb jno jp and ds (bad) sbb cli mov test or and push mov jb cmp hlt cmp dec cwtl call and cmp dec push stos push lahf (bad) and inc sbb and pop dec or in cmc or sbb daa ret in mov push pop leave test scas jp into test fisttpll xor inc add pop mov push mov jne call add fnstcw xchg pop into jl mov add add xchg (bad) scas or rolb scas in int inc (bad) (bad) negl mov mov adc jle mov lret lea sbb inc fcoml out lahf aam test sub adc add out push push jno mov mov push cli xchg lock xchg int3 addr16 xchg sbb add les sub or dec mov push add fildll (bad) push inc and pop push or dec mov (bad) or or and outsl mov xchg pushf inc bound mov das and into test and pcmpeqw jl in xchg push out or and (bad) fmul xor ljmp fwait mov mov fldl xor mov loopne sti xchg sahf pusha add add movsl movsb jnp (bad) fisub jns xor in lods (bad) clc cmpsl cmp sbb sub mov mov dec pushf push add stos shl repz imul sub cli fnstsw out xchg mov sub out lcall adc lods lea xchg loopne inc push pop inc and gs test stc xchg pcmpgtw adc lds or mov in cmc pop mov dec jge fbld ret lock mov ds mulb popf and xor inc sbb jg add enter jge lods (bad) pop (bad) out orb out mov scas addr16 xchg mov lds inc inc (bad) leave hlt fisubr (bad) subl cmpsl nop cmp icebp jne mov jecxz fdivrl add add cmpsb ja mov mov fisttp mov sub cmpsb push jl stos popa jbe outsb sbb push cltd rolb test pop out adc mov fimul movsb repz dec push and outsb imulb dec in enter mull or dec sub test ret in scas jle outsl and push lods ds in jae cmpsb inc das dec sar xor or jmp cld imul lds push jne xchg insb out or arpl int3 sub dec jnp movsl jbe test pusha ss jne jne ret mov andl fnsetpm(287 jmp les out shrb jns in push jmp mov push mov xchg inc fdivl xchg lods ret cmp add add add add jge jle mov aam sbb mov mov mov xchg lock sub mov lds adc sahf bound cmp dec daa loopne cltd test add aaa sbb loope outsb data16 adc addb or in cmc dec mov inc jge fistpll ret lock mov jo mov mov popf rdtsc push ljmp xchg xor sub arpl mov cmp incl cmp pop xchg push into paddsb addr16 (bad) mov add (bad) jae scas lret lcall adc xchg (bad) jns cmpl jle mov lret mov out jbe test push mul call cmp ljmp imul xor xlat add add mov int3 jbe push out cld jmp cwtl rcrb loope pop (bad) sbb fcomp mov mov jno cmp sub mov cld (bad) xchg xchg mov ja insl mov cs lcall outsl fisttp pushf out jne mov cmpsb ret push (bad) into test mov test (bad) push cwtl sub xchg int push (bad) push jns lods sub enter mov lods pop repz jl fwait xchg in test or add jb rcrb adc xchg call movsl idivl (bad) cmc mov jne push jecxz xchg imul lods lock repz sbb negl cli mov (bad) xchg mov sub add add jb jl lds or mov adc cmp dec popa loopne cltd fwait aad sub loope iret outsb jo notl sub pop pop or in cmc insl mov and fbld push cmp jecxz jae in cmp out jmp imul ljmp xchg xor adc mov adc sbb in sub into and fcom (bad) fidivrl (bad) (bad) mov out testw push pusha scas jecxz lock push (bad) ret ja xchg sarb subl jle mov lret (bad) test sub inc scas push (bad) out lahf repnz sub rcll imul xor xlat sbb cli clc cli jbe push out bnd sahf rorb leave stc add or fiadd roll add jno cmp dec add add fnstcw xchg lea sub (bad) and cmpsb or or and nop dec mov jmp jg mov cmpsb scas push cli into test xor jmp push xchg es xchg and inc or add lods pop lcall nop mov pop xchg pop divl cwtl fwait mov mov (bad) testw pop or ficom jecxz xlat jnp (bad) sti mov addr16 jecxz xchg imul lods int3 subl in lret aaa sbb mov mov cmpsl xchg xchg sub mov pusha js lods lods les mov add dec insb loopne cltd test dec sub repnz add add outsb jns loopne pop insl cld pop or scas dec leave mov in cmc pusha mov dec jge fbld ret stc mov das adc stos imulb jge je arpl sbb pop mov adc jno mov add fnstcw xchg add or repnz (bad) mov out xchg add (bad) jae jbe in int and test subl jle mov lret fwait test imul fcoml out lahf hlt (bad) sub rorl jno mov dec lods cltd int3 sbb mov flds mov stc and or mov push or mov xor rcrb dec add bound xchg loope cmp outsw or dec cmp mov mov add andb xor cmp ret inc ds leave fdivl sub push push sahf sub out push out or or lods sub imul mov in test or inc testl ret xchg fsubs movsl test (bad) frstor jne adc fadds pop imul lods jmp mov dec in inc ds test aam sbb repnz cli lret cld push out xchg (bad) movsb (bad) aaa xchg lock and (bad) jb jl lds js lods faddp push mov pop or cmp dec arpl jno mov sbb loope outsb addr16 adc iret pop das or in cmc jge outsl inc push jge fildll ret call leave hlt mov add lret mov mulb popf pop xor xchg insb mov pop mov jns lods pop ficoml sbb fadds pushf sbb push stos adc jno in mov gs loopne sub out ljmp or test in (bad) fisubrl mov cmc and iret jno xchg ss movb sbb call ss sbb xlat xor clc xchg jbe push ret int3 xlat inc mov stc jb sbb cmpsb jl psubusw adc cmp sub loopne mov in lret add test sub je push (bad) and pushf or or and mov mov out js leave mov push out into xchg das mov test cmovb dec jne xchg insb out or adc lods aas lcall (bad) mov stos pop jecxz mov in mov frstor add outsb mov fstl cli movsl cmpl out adc in jle adc fiaddl inc imul lods in xorl in lret inc sbb mov mov mov movsb movsb xlat aaa xchg mov jb jl lds push lods lods les mov or loopne cltd mov sbb loope outsb cmp in adc leave pop dec or dec enter ja data16 dec jge fbld ret std mov mov ss idivb popf jge cmp dec es stc insb (bad) xor cmp arpl mov add add icebp movb fldenv xchg sbb rorb mov add (bad) jno js repnz or xchg les xorl jle mov lret xchg test sbb inc fcoml out lahf fstp cmpb rorl imul xor xlat jge mov (bad) jbe push out imul fnstsw pop push loope adc adc jg ficomp shll aas add pop inc js mov sub mov sub test cli or and outsl mov scas pushf in ret gs out shrl jnp (bad) push mov rol cs test minps inc jne xchg xor jo int push (bad) adc int cmp enter mov mov jl fwait mov xchg mov fisttpll andb mov cli xchg repnz fbld movsl xchg jnp (bad) out sbb ljmp xchg imul lods mov mov push in dec sub aam sbb mov mov xchg mov mov lds sbb fisubl movsl jno cmp dec jno pop cltd xchg aad or repz outsb jo ljmp or in cmc mov push jge fbld ret repnz mov or test out pop (bad) (bad) loope arpl xor inc sbb jle data16 arpl pop (bad) pop pop sahf cmpsl push std icebp in fnstenv sub xor ficoml ret or cbtw add rolb scas in add stos push (bad) int3 notl ja xchg sarl xorl jle mov lret (bad) test cmp xchg inc adcb ret lahf in (bad) sub shrl pop or dec xchg clc xlat jbe push out loope lret mov inc push jmp add or fsubp push sar ds dec cmp or mov and inc dec xchg test sub mov sub xchg aam add adc dec mov pop test int jle repz ret into test xor pop push (bad) test or arpl lods sub inc nop movsl mov cwtl pop (bad) je jl fwait test mov frstor or insb mov (bad) xchg call mov sbb cmc mov pop mov jecxz add xchg imul lods cli subl in lret aaa sbb movsb sbb cli lcall xchg cltd movsb lret lock ja xchg jb jl lds js lods mov cmp jmp movsl add loopne cltd lods aad sub out loope outsb inc and adc movb or in cmc sub jns and fisttp pushf mov push sub sarb xor pop stc (bad) lock jp xor inc sbb dec mov sbb fistp pop ja mov int3 icebp sti add fnstenv adc adc fisubl sahf (bad) mov out data16 add scas mov loop cmp popf (bad) or xchg sarl imul loop xchg test inc push mov out lahf add fldt sub (bad) mov mov or dec mov in fldcw out xchg jmp lock push std stc cs xor ret fisub ror push add and inc js xchg mov jl push mov sub fnstcw cmpl and outsl mov lahf pushf stc ret fs cmpsb mov das jl ret push (bad) into test jae in addss add xchg xor jg shlb (bad) or lcall rorl std je jl fwait mov scas adc mov frstor adc pop es xchg call cwtl jnp (bad) cli mov bound mov imul lahf cmp ds test or add mov mov adcl insl mov jb jl lds jg sti les mov push or cmp dec arpl dec cltd mov sbb loope outsb addr16 adc leave pop and mov in cmc jp or jge fistpll ret rorb mov xor out (bad) fcomps inc es out test insb mov dec mov je mov add sub mov addr16 (bad) call add scas cmpsl lcall dec ja xchg fwait jns xorl idivb mov lret into test sub inc jmp lahf mov cli cmp rcl repz mov or dec cli clc jmp out cmc jmp xchg rorb push out jb sub movsb push or (bad) push mov jno cmp and fldenv xchg mov das adc insl mov dec mov test and outsl in dec in pushf in ret jp movsl mov psubd lea inc push add cli sbb and cmp lods je nop out aas mov jl shl faddl mov adc add icebp (bad) out in add push mov mov and (bad) fwait lret sbb in or mov cld ljmp pop mull cmp xchg lcall mov (bad) jmp lock jb jl lds js lods mov cmp add jmp movsl push or cmp dec jae outsl cltd mov push and movsl loope outsb jno jmp pop dec or in cmc daa mov dec jge fisttp pushf mov fistp rol shlb lea pop inc inc fsub sbb jno adc dec jnp cmpsl jne icebp mov sub dec mov mov out mov test test clc ljmp or stos std (bad) sbb fsubrl rorb (bad) (bad) jecxz mov jne xchg daa out or xchg leave out loopne test scas and not xchg repz inc mov xor xlat outsb dec mov (bad) jbe push out xchg jmp mov stc and push cmp push int sbb int3 jno cmp sub fnstcw add lea sub mov sub lea mov inc and pushf mov xor mov das xor mov test rdtsc push ljmp out or vmwrite sbb enter mov mov loopne mov in fwait sub adc mov fstpl or inc mov scas xchg lcall jnp mov cs ret mov jecxz xchg imul lods rolb dec ds test aam sbb mov mov xchg std lock jl lds lods mov adc push or cmp dec outsb loopne cltd mov sbb loope outsb data16 adc roll or add aas in cmc inc mov jge fisttp ret into mov mov and lods imulb popf pop xor ljmp mov jne data16 arpl mov dec sahf lahf push (bad) icebp flds pop flds xchg cmp adc loope test js (bad) mov add (bad) jo jo cld lcall xor adcb in cmpsb mov lret mov out jp mov push in out lahf out fldt sub in imul out add clc lret jbe push out loope lds sbb mov mov push js lods fsubp push sar ds dec cmp or mov and inc pop xchg lea sub dec dec imul mov cmpsb or or and outsl mov pushf fcmovnb push pop xchg mov das jp aad fcmove lcall punpcklwd dec jne xchg dec out or or lcall (bad) mov xchg pop out mov in mov (bad) cmp dec mov iret xchg jmp movsl xchg (bad) mov sbb jecxz xchg imul lods fildl adc pop test in lret sub jecxz sub sarl xchg stos movsb mov int ljmp mov jb jl lds inc lods jmp bound xor jl dec dec add add add ret outsb push and adc cld pop add ljmp cmc insb mov dec jge fistp ret stc mov mov and cmpsb test (bad) add add jge xor (bad) insb mov jno arpl ret pop ja popl loop in das fldcw xchg sub xor ficoml ret or cbtw add rolb scas repnz jnp (bad) xchg lock xorl jle mov lret mov sbb inc xchg push in out lahf (bad) fisttpl fcom (bad) mov or dec (bad) clc fnsave push out loopne clc mov dec push jmp add add fdivp push mov jno cmp sbb mov fcomp xchg inc inc xchg fnstcw sub (bad) cmp lcall outsl cmpsb dec mov pop scas mov das insl cmpsb scas push mov movsl ret lret test pcmpgtd je ret out or or lods add xor jbe mov imul stos jl fwait popf in mov or pop testl adc xchg (bad) xchg out in movsl lea xabort adc mov jecxz xchg sbbl loope fcoml int3 lods mov test cmp test aam sbb mov cli xchg mov (bad) xchg test sub mov lds adc mov (bad) jbe jne push loopne cltd cwtl aad add lret outsb jp call inc insl int3 pop and mov in cmc jge outsl inc push jge fbld push cmp pop nop push mov test mov test push adc push arpl mov pusha sahf lods push nop icebp aam pop fldenv xchg je jbe add addr16 or data16 add scas repz jnp test int xchg lret jnp rcll xchg or mov mov ret fld1 mov cmp in cmpsl mov movsl es outsb or mov int iret push out mov std pushf shrb int or or mov adc lret pop lret xchg add cmp pop add and inc imul test add aas call mov cld pop xor mov mov pop test fisttpl iret int sarb test sub notl fisub (bad) arpl lods cmp sub lods pop xchg je jl mov pop cwtl test sub add call pop out cmpsb or xchg xlat inc jb sbb fildl aaa imul lods lock in lret sbb xlat sbb cli xchg mov mov pushf movsb lret aaa cwtl lock jb jl lds sbb mov cmp push or cmp dec push loopne cltd mov sbb loope outsb jo fsts jns aam push or in cmc dec mov jg fistpll ret lret mov mov and stos divb popf jnp je push insb nop xor add arpl pop insb sahf cmpsl push (bad) icebp in aaa fldcw xchg sbb sbb out rorb (bad) clc or stos add shrb scas int clc stos or leave negl ja xchg sarb xorl add sarl mov lret fwait test jge test push lret lahf in fstpt sub rorl imul xor xlat push jbe push out xchg jmp stc rorb cld cwtl or sbb lods faddp push (bad) sahf push mov dec inc imul inc xor loope daa adc sbb and xchg mov inc and fisttp pushf mov pop popf mov das push cmpsb std push (bad) into stos ret std test minps push jne xchg add pop or pop jns lods sub dec nop lahf mov negl je jl fwait mov mov fisttpll andb mov fstl repnz xchg (bad) icebp mov jg adc les or loope fsubl stos add subl inc ds test aam sbb scas sbb cli nop mov adcb lock jb jl lds js lods sti les mov add cmp dec loopnew cltd cwtl aad ss cli loope outsb jbe in pop insl leave pop or in cmc jns jp dec jge fistpll ret rorb mov cmp loopne cmpsl pop repnz loope rdtsc jp push sbb or arpl mov jge mov add fnstenv xchg sbb dec in mov addr16 (bad) lock data16 add mov mov adc jecxz sarl sbbl jle mov lret mov out jp mov out lahf rcr cmp icebp rorl imul add xor mov dec mov mov out loopne clc mov inc push cld stc adc js lods fiadd ror jns push xor add add fnstenv xchg loope outsb adc xor xor cmp adc dec stos pushf in push pop jecxz xchg das data16 fistl into test mov test punpckldq arpl xchg sub pusha or es lods pop lcall pushf mov mov (bad) je jl fwait shr lahf adc mov frstor or inc mov fcoml icebp movsl idivl mov sbb loopne js adc fildl punpckhwd faddl stos mov in push ds test aam sbb xchg cli mov mov add enter mov jge xchg jb jl lds jg faddp add movsl and cmp dec jno je mov push and xchg loope outsb js icebp adc repz sub mov int pop in cmc or add ds in mov mov push mov imulb popf dec xor ljmp mov jns data16 arpl fstps pop dec sahf test add into sbb fwait shr fiaddl (bad) mov add shrb scas lret lcall or xchg (bad) jns adcl jle mov lret mov out jl popl push ret lahf call and sub rcll imul xor xlat jns cli clc mov out loopne xlat mov sub mov and dec jg fiadd mov rol jle cmp dec add and inc dec xchg mov sub inc dec addr16 sub fdivrl mov cmc or or sub dec jecxz int3 ret jnp test shrl jns (bad) push repnz xchg ret incl sub jne xchg aas out or inc jns lods cmp enter mov pop mov je jl fwait lock (bad) adc mov fnstsw inc (bad) dec mov lret xchg lcall jnp mov pop hlt (bad) sbb sbb movb imul lods in subl in lret pop sbb movsb sbb cli mov (bad) xchg test sub mov lds js lods lods les mov aas or cmp dec push loopne cltd pushf aad dec ss outsb xor insl les cmp mov in cmc or cmp sbb mov leave jmp scas push mov imulb popf rdtsc sbb fs pop mov movsbl pop call push (bad) lret fnstcw daa into sbb jmp addr16 or mov rorb scas ret stos add ja xchg ret jns cmpl jle mov lret mov out cmp cmp inc scas push into out lahf sbb push aam (bad) inc cmpsl imul xor xlat push dec scas clc in jbe push out shr mov dec push cld stc push (bad) mov push xor lods fimul cmc jno cmp and flds xchg xchg mov jae add add add std aas mov mov and mov scas pushf test mov das arpl test mov test lar jbe call or jns,pn lods or imul cmpl in cli adc mov fnstsw adc add (bad) xchg test movsl xchg jnp (bad) out push hlt in sbb sbb xchg and sbb loope fdivl mov incb push ds test aam sbb cltd sbb cli test push cld cmp lret aaa mov mov jb jl lds js lods mov add adc cmp dec and push cltd mov sbb loope outsb addr16 adc insl mov dec divb sub sbb cmp jmp add sbb mov (bad) lea lea ljmp nop xor adc mov jns in xlat pop pop sahf cwtl push mov fildl cmp sub hlt rcrb (bad) xchg or mov inc inc scas negb (bad) notl mov (bad) jns adcl jle mov lret fisubr push xchg inc stos push (bad) out lahf in int mov (bad) mov ljmp xor xlat imul lret jbe push out xchg jmp lahf rorb cli stc add push sbb push lret incl rcl arpl dec xor add and inc jb (bad) mov sub mov sbb orb or and outsl mov mov ffreep jae mov cmpsb rclb stos ret in add add andnps push jne xchg dec out or adc lods aas lcall rorl lock jl fwait mov mov fstl divl scas pop and (bad) xchg notb stos jnp (bad) loope or mov jecxz xchg (bad) test sbb loope fsubl stos xchg lods incb jge data16 aam sbb mov cmp movsb mov mov cwtl lock mov jb jl lds xor xchg bound cmp dec push loopne cltd mov inc ss outsb data16 adc aad cmp mov in cmc or or ds jmp mov mov cmp in negl pop sub imul add icebp pop stos pop cs out mov fldcw xchg add adc hlt rolb (bad) lea repnz add (bad) jbe jg repnz push ja xchg into jns xorl jle mov lret lea sub inc mov (bad) ljmp and leave (bad) mov lret imul xor xlat cs mov push out out aam sbb cltd rolb out jb pop mov push and call call ror push dec xor add and inc dec xchg mov test or arpl orl push outsl orl loopne bound mov (bad) test mov test (bad) push subl jne xchg add or aas jns lods xor outsl nop lahf mov mov add stos jl fwait shr lock mov frstor push testl adc xchg jmp movsl idivl (bad) fsubs fs jecxz xchg imul lods cli sbb ds test aam sbb xchg sbb cli mov popf xchg mov sub mov lds push lods mov (bad) sbb inc dec pop loopne cltd mov inc ss loope outsb popa and adc pop and mov fidiv push jge fisttp pushf mov mov xor (bad) (bad) ret xor xchg insb (bad) xor jno arpl mov bound incl sub pop xchg daa into sbb out rcrb (bad) mov add add add jb in in xor mov aad fwait subl jle mov lret mov (bad) push mov scas push into out lahf sbb pop sub rcll imul xor xlat outsl dec mov mov out loopne sarb pop push cli stc jb jl xchg push sbb push (bad) call shll sub fldenv xchg test sub (bad) ds xchg in or outsl mov movsl pushf std ret popa pop test enter repz std into mov adc divps push jne xchg or sub jns lods cmp outsl nop xchg mov pop ret jl fwait test mov mov (bad) or jne scas pop xor fstl icebp rolb jns add jecxz out fwait test js xchg daa fcoml ret lods in addl in lret push sbb xlat sbb cli lea pushf xchg (bad) movsb (bad) xchg lock jb jl lds js lods (bad) les mov movsl add cmp dec loopnew cltd sahf aad ss loope outsb xor notb je in sub mov ret in cmc pop mov inc jge fistpll ret std mov push jne mov and mov (bad) icebp out push cmp xchg insb xchg inc (bad) lret or mov pop mov push aad repz fnstcw xchg sbb cmp jmp addr16 fisttpll stos xchg add shrb scas in clc stos adc (bad) (bad) or xchg enter sbb sarl mov lret mov aaa push mov add lahf repnz cmp test mov mov or xor xlat push dec xchg clc lret push out bnd lock (bad) sbb push movq fidiv shl insl cmp adc mov cmc fldenv xchg (bad) mov push sub mov add cmp and mov pushf out ret bound mov das cmpsb lret into mov cmp incl sub repnz or pop or aas jns lods or inc sbb enter mov lods pop loope into jl fwait mov mov fnstsw inc (bad) dec mov iret xchg std xchg iret pusha lock stos jnp (bad) out push hlt in jns adc roll add lcall stos xchg lods fildl inc ja,pt out ror add aam sbb xchg sbb cli aad aaa cld pop test xchg fldenv sub mov jb jl lds les mov or cmp dec inc loopne cltd in aad ss movsl loope outsb cmp loope dec insl mov dec enter jl pusha mov inc jge fbld ret lock mov cmp stos idivb popf arpl xor xchg insb mov or arpl mov jno movsb push cmc icebp roll xor aaa xchg sbb sbb fidivrl (bad) mov add (bad) jae jb mov (bad) leave idivl (bad) xchg xchg addl jle mov lret fwait test jne lea push mul ficomp mov push sub rcll imul xor xlat outsl dec aam (bad) jbe push out xchg jmp adc push enter adc (bad) fisubr sar jg push xor add and inc jp xchg sub (bad) dec mov xchg aam pop and outsl mov ret push pop xchg mov das adc into lahf ret call push mov inc jne xchg insb out or push jns lods cmp bound fstps je jl fwait mov mov fnstsw add jb rcrb adc xchg ljmp jnp (bad) fisubl jne jle xacquire imul lods in cmpl in lret or mov mov out xchg jmp lock jb jl lds sbb mov or cmp dec fs cltd scas aad ss loope outsb push and adc into pop or in cmc data16 dec jge fistpll ret pushf mov push pop leave mov or mov mov out (bad) negl dec es xchg insb xchg jle adc arpl mov push lods push jecxz jecxz sbb setb and fst cltd fisubl (bad) mov hlt xchg add (bad) xor scas ficompl xor ja xchg in mov jle mov lret mov out jbe xchg push (bad) out lahf repnz cmp ljmp imul xor xlat dec dec stos clc (bad) jbe push out out sarl push cld stc sbb push adc enter sar pop rcl jp pop xor add add mov lods and inc ja loope outsb adc xor sbb cmp and outsl orl in ret fs mov cmpsb fcoml into mov xor xor push jne xchg sub or cmp or lcall orl je jl fwait mov mov frstor or add repnz fcoml mov mov inc mov jecxz xchg imul lods cld cmpl in lret aas sbb cltd sbb cli mov (bad) xchg popf movsb xlat aaa (bad) lock mov lds or stos les mov movsl add dec daa loopne cltd test bound adc (bad) loope outsb pop and adc cld pop cmp scas dec iret mov in cmc daa mov dec jge fisttp pushf mov push sub sarb add out (bad) call ljmp xchg xor add arpl pop imul add pop xchg push into paddsb rol fidivl (bad) mov out sahf add rolb scas loop std stos or (bad) testl jns subl jle mov lret xchg test push iret inc movsb push (bad) out lahf sbb dec sub shll imul xor xlat pop dec scas clc jmp out cli jmp adc push idiv pop (bad) adc lods faddp push xchg adc stc jno cmp or mov leave (bad) xchg xchg mov jl or push mov fwait or or and outsl mov add out into das insl cmpsb fistl into mov test cmovne es xchg sub data16 and lcall test sti je jl fwait shr ficoml mov fstl inc divl in cs xchg call cmpsl jnp (bad) lock arpl lret decb jb xor jbe (bad) lods ret cmpl in lret pop sbb mov mov popf xchg andl jb jl lds push lods mov jnp xchg bound cmp dec jno pop cltd cld aad ss sbb loope outsb jno in pop insl roll or dec cmc pusha mov jge fist ret cli mov mov ss imulb add (bad) negl add pop xchg insb xorl mov or sbb clc add fstps je sub hlt rcrb (bad) fisttpll shll add shrb scas negb stc divl ja xchg int3 jns subl jle mov lret mov out insl push test push out int out fldt not in lret imul xor xlat inc dec xchg clc xlat jbe push out xlat jmp mov push (bad) and add fidiv ror bound push xor add push xchg test sub jno outsl (bad) adc cmpsb or or dec in pushf loopne js mov cmpsb fcoml into mov test cmovae push jne xchg pop out or add add or lods cmp enter mov fstps je jl fwait mov mov fnstsw adc jb movsl pop es xchg mov movsl mov mov dec mov jecxz xchg (bad) out cmpsl cmp mov fdivrl stos mov in and sub aam sbb scas sbb cli mov (bad) xchg mov sub mov lds push lods (bad) les mov add cmp dec loopnew cltd mov dec ss outsb data16 adc lds xor mov enter push cmc mov jg or ds in mov mov cmp mov daa ljmp mov bound push mov jge xchg push fdivp in sub add xchg xor sub lret (bad) mov pop addr16 stos or data16 cmc rorb scas repz jnp (bad) xchg xchg addl jle mov lret fwait test jge lret push mul fcompl mov push sub rcll imul xor xlat jne popf clc in mov fsubr jecxz loop arpl mov stc add sub std fsubrp push (bad) xadd jno cmp dec add add (bad) xchg mov sub mov aas mov mov fmull adc pop outsl lcall pop mov cmpsb (bad) push cmc into mov cmp inc push xchg push jne xchg cmp data16 inc jns lods add pop sbb enter mov pop mov je jl fwait mov mov fstpl testl add and ficom mulb std mov pop mov jecxz xchg test fcoml mov ljmp ds test aam sbb mov dec cli lods mov adcl lock jb jl lds js lods mov cmp aas or cmp dec pusha loopne cltd stos aad ss sbb loope outsb jae icebp adc roll or in cmc pusha mov or ret icebp mov mov or out (bad) negl inc sbb or arpl mov insb sahf mov add flds xchg daa into adc fidivrl in mov add (bad) jb dec scas (bad) lcall and xchg add icebp jns subl jle mov lret nop test inc push test push enter sbb popa sub roll imul jge mov lret jbe push out imul enter lock ret (bad) aas les mov (bad) lcall cmp and xchg add fldenv xchg test sub mov dec mov test and outsl lods dec lods pushf cli ret jns scas mov das dec cmpsb in push ror ret call push subl jne xchg pop out or or shrb stc enter mov lods pop cli je jl fwait mov mov (bad) adc mov iret xchg hlt xchg out pusha sti movsl pushf jnp (bad) enter out jae or movb imul add jb xor bts int in dec ds test aam sbb mov mov out xchg jmp lock cld mov loop mov push js int3 lods mov int push shll dec pop loopne cltd mov sbb loope outsb popa and adc leave pop aas or in cmc push insb inc inc jge fisttp pushf mov push sub sarb xor pop in loopne das xor ljmp xchg xor add arpl mov jo lods push loop stc add into cmp iret sarb (bad) mov add (bad) jbe scas repnz pop ja xchg int xchg subl jle mov lret mov js xchg inc mov (bad) lds mov roll add test lods inc mov outsl or xor xlat sbb fnop lret push out (bad) jmp test push (bad) and push jg fidivr movsl jno cmp xor add push inc jge xchg sub (bad) and sarl cmp and outsl mov ret pushf mov xor mov das inc cmpsb fistl into xchg ret roll sub ljmp data16 dec jns lods and push nop aam jno test je jl fwait mov test aaa mov fnstsw adc jns rcrb adc xchg jmp movsl cwtl jnp (bad) out push hlt sbbl mov jecxz xchg imul fsubl stos xchg lods movsl xor sub aam sbb clc sbb cli nop mov add push test xchg shll sub mov lds inc lods icebp les jmp movsl push or cmp dec sub cmp add shl xchg and adc insl mov dec jmp cmc je or jge fisttp ret into mov mov add in (bad) in popf arpl xor pop es xchg insb ret mov add ja mov add fstps je das in loop sbb addr16 stos or test fadd xor scas stc lcall or xchg aad xchg andl jle mov lret mov ja mov push stos out lahf repnz sub (bad) mov xchg imul xor xlat jg (bad) clc out lcall mov inc push mov jb cmp mov or fisubr rol popa cmp dec add add inc je xchg sub mov or xchg in and movq ret bound mov das xor into fwait ret in test andnps push jne xchg insb out or ss lods sub gs enter mov test je jl fwait mov test frstor or add repnz int ret pusha in movsl mov add in pop hlt rcrb mov jecxz xchg imul lods testb ds lret imul sbb cli mov adcl push mov lds or lcall cmp dec add jbe push mov add adc in aad jle notl push insl int3 pop dec or dec enter insl cmc pop mov gs fistp ret rorb mov add les push ljmp mov pop mov sub pop push sahf xchg fyl2x mov jg sub jmp sahf fisubl (bad) test add scas enter adc aad push ja xchg int3 jns sbbl mov (bad) mov lret mov out insl push mov mov lahf out fldt sub rcll imul xor xlat outsl dec xchg clc (bad) jbe push out xchg jmp mov dec push (bad) stc jb jl lds js loopne xchg iret push cltd addb sbb jle test push ftst dec and clc push popa lea sbb leave pop cmp scas aam into push enter mov insl xchg cmp (bad) repnz mov sub jge push ljmp sbb mov popl pop jno in sahf enter (bad) ljmp dec in les add mull adc pusha cmpsl movsl test (bad) icebp mov adc (bad) hlt test sbb loope fdivl stos out lahf xor ds test aam sbb mov dec cli aad add push test mov flds (bad) cmpsl sub mov jb mov jp orb mov sbb aam inc mov dec ljmp sbb loop mov xor sub call pusha sbb jns jg pop leave mov lcall pop cltd cmpsl mov add cmp or adc inc std xor lods pop sti inc xchg xchg insb xchg aas jnp add jnp and pop mul mov idiv jae mov push out add pop ret idivl icebp in lcall jle mov push add push loope and pop stos or cmp sbb not mov imul ljmp clc mov out xchg jmp std fsubs adc test mov push dec pushf (bad) in (bad) fist test pop pop and and mov add and test dec das or jle arpl xchg aad mov jns dec pop out jae (bad) lock xor out shrb cwtl out jge loope mov pop push push aad pop (bad) inc jnp add imul mull arpl mov cld dec out adc out mov (bad) mov xchg outsb shrb in mov cli jno int3 xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov push and iret jns (bad) hlt and dec bound in push flds das push cmpsl (bad) aad lods xchg xchg cmp dec xchg rolb cmc mov fdivr dec lahf js stos js or inc sbb fs sub xor cmp sbb call (bad) sahf imul jge out popf xor bound je sub add add mov sar in dec jecxz sbb test imul (bad) push aaa push adc mov cmp add ljmp xchg ds int3 mov rorb xchg and hlt mov movsb pusha (bad) addb stos mov sbb imul adc lods fadds sarl sbb pop ljmp (bad) push mov and fcoms iret loopne fwait ret jnp in cmp pusha jmp mov inc (bad) (bad) ljmp or mov lds inc inc das add (bad) mov lret pop sbb xchg mov ljmp mov jbe mov lods dec or cmp add cltd sub in popf js ljmp adc dec lods lret jl cld test fist xchg jmp fisttpl cmpsb inc ficomp inc imul pop cli sbb (bad) sub dec (bad) xor pop pavgw lods outsl ror pop add and (bad) fsubr or and lcall mov mov es inc sub and mov adc jae in rcrl inc ret inc add std je push test jb sbb sub cmc push stc push mov mov sub add pop dec mov jns imul and dec xchg push push xor xor jns jg xor cltd cmpsb sbb pop (bad) cmp mov popf clc mov fs int3 je mov std test int3 movsb jge xchg pusha pop cli mov insl jge pop inc ficompl sbb inc sar add add incl in insb xchg repz std add nop push divl test shll data16 and adc and push jo push mov xor or clc int3 test dec mov inc mov jns (bad) ret sahf push push sarb xor scas call mov out fwait mov addr16 pop sti aas or pop inc outsl sbb js orl cmp jns mov (bad) push add int3 sbb adc and insb inc pop xor xchg call cs push or fmull mov xor push cmp fisubr andl outsl js outsb fist idivb lods pop xchg xchg andl movsb lods int jo jb clc les push imul movsl jg cwtl or sti sub (bad) insb aad mov mov out fcompl cmp inc mov push or lret fwait mov es lcall pop test cmp adc icebp mov je or arpl loop inc loop pop jb mov aaa add adc dec push int (bad) mov repnz (bad) or (bad) sbb cld test push das fisubl jmp mov jle mov pop mov xchg insb adc xchg ja outsl cltd xchg or fnsave or xchg aam inc int sbb int3 stos dec or mov aas dec test (bad) std popf lock ret mov into xchg stos cmp movsb idivl (bad) xchg mov lahf mov lret in lret lret push add sbb inc fcoml jbe lahf orl in lret imul xor xchg jbe push out xchg jmp icebp (bad) xor (bad) stc jb jl lds js lods faddp push mov jno cmp mov cwtl (bad) stos aaa inc rcrl loopne aam and cmovns inc dec mov cmc mov loopne dec pop adc or das adc dec in pop or push ljmp ja or inc jmp pop sbb enter ljmp mov lahf mov scas (bad) out add jne popf movsl mov (bad) or movsl cmc jns mov negl lds xchg mov mov and xor push adcl add mov cmp or mov add lods sbb (bad) negb adc push lret stos cmp xor rcr imul js pop pop and mov addr16 adc (bad) aad jl jmp pop pop or dec nop inc out xor dec ret repz and inc adc fwait mov call ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb (bad) jl lds js lods faddp push mov jno cmp dec add add inc sbb and push test outsl lret popf icebp pop jge push xor jge fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp add dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and test sub pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp ja popf inc adc cmp cs push pop xchg sub je xchg xchg ds in jl inc ffree push mull inc dec mov push mov adc rcll xor jno adc dec or sahf xchg jg (bad) jno dec ret cmp movups lods jl scas mov pop aad sti lea mov jno jl sub and sub into push insl cli sbb cmp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or add add jge fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp add or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall add add fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov add fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall movsl idivl (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret incb add add sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb add in and sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb add add clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock add mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov add add cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb add add and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc add add mov inc and fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov add into test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp jne xchg insb out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall add mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr fiaddl add adc mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall add add jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc add add push loope fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf addl add add int in and sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb add add clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock add shrb mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov add (bad) cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb add and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov in cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop add lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc add mov lret (bad) test sbb inc fcoml out lahf sbb sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out add in and sub aam sbb xlat sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub xchg enter xor fimull inc or adc dec imul mov aaa push jo test cmp mov pushf mov dec andl adc dec imul mov ss outsl mov cmp (bad) lods leave out sub sbbw dec test notb xor xchg xor xchg push insb mov xor outsb mov cmp nop lods leave out pop cmp mov xor sbb ret (bad) sbb (bad) ss outsl mov cmp js mov jmp and pop jp mov in or mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov repnz add add xor (bad) aaa push jno stos (bad) jecxz sbb lods leave out pop cmp xchg scas lret out and pop ja mov jmp jge mov out or inc popa jge mov lock pushf mov dec sbbl mov cs push stc push xor mov xor mov xor ret loopne sbb (bad) loopne sbb push outsl mov aaa push je lods leave out pop cmp xchg scas lret and jne scas lret and test es bound mov icebp or pushf mov dec imul outsb mov ss outsb mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jb stos lret call add and pop js mov jmp and mov in or inc pop jnp mov in or fwait mov lock popf mov dec cltd loope fs lahf mov dec test notb das dec push not (bad) sbb lods leave out pop cmp jne scas lret call ja mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov lock pushf mov inc arpl push sub mov dec sbbw dec andl adc dec test cmc adc dec push notl dec imul mov sbb lods enter cmp nop lods leave in pop cmp xchg lods leave out pop cmp xchg lods lret pop cmp js add inc pop jp mov in or mov in or mov in or mov in or inc pop jnp mov icebp or pushf mov inc arpl movntps sbbl lahf mov dec sbbw dec data16 xor mov dec insb mov xor insl mov xor insl mov xor insl mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) jecxz cmpsb fdivrp sbb push jo test cmp (bad) stos enter cmp nop lods lret and shr or inc pop jnp mov in or add sbbb sbbb dec sbbl popf mov add add das dec push notl xor mov xor xchg addr16 mov lock inc arpl cvttps2pi andl push outsl mov cmp mov cmp xchg scas lret and pop ja mov ljmp mov in or inc bound adc sbbw dec push clc adc movsl rcr pop xor insl mov xor (bad) pop cmp xchg lods lret pop cmp jne scas lret out and int3 jmp ja mov ljmp mov jmp and sub xchg push insl mov ss jo test and jne scas int3 call jbe mov jmp js mov ljmp add or inc pop jl mov in or inc pusha jl mov out or inc popa jle mov out or inc popa jge mov out or inc popa jle mov lock inc popa jle mov dec test notb das dec push clc adc (bad) sbb push jno stos enter cmp xchg scas int3 call jns mov dec gs sahf mov dec push clc adc movsl ret sbb (bad) sbb push jb lods enter aas pop jns mov in or inc pusha jge mov lock pushf mov dec andw dec push movsb rcr pop xor insl mov cmp xchg scas lret call jns mov in or inc pusha jge mov add adc dec andl adc dec imul add push jo stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret and lret call js mov jmp and pop jp mov lock inc bound mov lock fwait mov lock fwait mov inc arpl mov inc arpl mov inc arpl adc mov dec imul xchg xor xchg xor xchg xor (bad) sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) in sbb stos (bad) in sbb push jb scas lret call jbe scas int3 call jbe scas int3 call ja mov call pop jnp mov out or inc pusha jge mov out add add inc sbbl sahf mov dec imul xchg xor xchg xor xchg xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jno stos enter cmp daa xchg mov jmp jle mov icebp or popf mov dec sbbw xor mov push cmp nop lods leave out pop cmp jne scas lret out and jns mov in or mov in or inc pusha int3 or stos fisttpll inc jae fist inc jb (bad) or addr16 enter mov mov aas jp cld cmp lock sbb out inc jle loope inc js sti jg loope dec jl in inc js fild adc cmpl dec insb mov xor insl mov add ret loopne sbb clc sub lret addr16 lret stc sub rcll aaa push jno stos (bad) in sbb lods enter cmp nop lods leave out pop cmp xchg scas lret pop cmp jbe scas lret call jp mov jmp and pop jns mov jmp and mov in add sub sbbb dec push notl xor mov xor mov xor insl mov xor ret (bad) sbb ret (bad) sbb (bad) ss jno lods lret pop cmp xchg scas lret pop cmp je scas lret and jne scas lret out and jbe scas lret call add pop ja mov jmp jp mov in or inc pusha jl mov out or inc pusha jl mov out or sub gs sahf mov dec gs sahf mov dec data16 sahf mov dec imul test xor xchg dec imul xor mov push jo test cmp mov cmp (bad) stos enter cmp pop ja mov ljmp cltd mov out or inc pusha jl mov movntsd sbbb dec sbbb dec sbbl sahf mov dec andw dec push sti sbb insl mov xor insl mov xor insl mov xor insl mov add sbb insl mov cmp stos (bad) in push cmp nop lods enter cmp js mov ljmp cltd mov out or inc bound mov dec sbbl push insl mov xor insl mov xor ret (bad) sbb ret loopne sbb (bad) loopne sbb (bad) in sbb stos (bad) in sbb lods leave out pop cmp je add inc pop jnp add dec push sti sbb outsl mov aaa push jae lods leave in and jbe mov jmp and pop jnp mov lock popf mov dec push cli sbb (bad) jecxz sbb push jae lods leave out pop cmp jne mov call jp mov add add in or inc pop jl mov out or dec andw dec imul mov cmp (bad) lods lret or inc bound mov ja in dec test sub xchg iret add je loop dec cmpl adc stc xor fstl dec popf fdiv adc lock lods fisttpl cmp int ss fstl inc ja ficom ja xlat and mov push dec xchg (bad) xor (bad) outsb add mov and mov cmc adc dec imul lea cmp mov cmp (bad) lods enter cmp nop lods leave in push cmp xchg scas lret pop aas pop jns mov jmp and pop jns mov jmp and pop jp mov in or mov in add or mov in or mov out or inc bound mov lock inc arpl mov dec sbbl sahf mov xor mov cmp scas lret and jbe out cs rorb pop sbbl mov das dec push notb das dec imul mov aaa push jo test cmp (bad) repz mov hlt add push jb lods lret and inc pop jp mov icebp push sub sbbb dec sbbl sahf mov dec gs sahf mov cwtl shrl outsb mov mov dec insb mov xor insl mov xor insl mov xor add add mov xor insl mov xor jo stos (bad) jecxz sbb push jb stos enter cmp nop lods leave in pop cmp jne scas lret and add in or mov in or inc popa jle mov lock pushf mov inc arpl mov dec sbbl sahf mov dec andl push xor mov xor insb mov push inc ja loope dec jg jecxz dec xorb stos fcoml dec jl adc push xchg imull xor ret xor lcall (bad) xor ss test adc lret add addr16 in stos fstl inc jnp fimul inc je in jne imull fs out push movsl ret sbb push outsl mov cmp add add (bad) lods leave out pop cmp jne scas int3 call js mov lock popf mov dec sbbl (bad) sbb (bad) sbb push jb stos add jmp in pop scas aam or pushf mov dec sbbl lahf mov dec imul mov ljmp mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov lock sub mov ss outsb mov ss outsl mov aaa push outsl mov aaa push jo test cmp test cmp xchg scas lret and jbe scas int push and pop js mov ljmp add xchg mov jmp js mov jmp js mov ljmp mov in or inc pop jl mov sub dec jle out and in inc je jecxz push test roll add mov out je scas int3 call ja mov ljmp mov ljmp mov in or inc pop jnp mov out or inc pusha jl mov dec sbbl lahf mov dec andw dec test notb xor add cmp popl mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc pusha jge mov cvttsd2si sbbl mov das add mov xor mov xor mov xor (bad) jecxz sbb push jb stos enter cmp nop lods leave in push cmp xchg scas lret and int3 jmp js mov shr push sub sbbb dec gs sahf mov dec andw dec push movsb rcr pop xor mov aaa push jo lods leave out pop cmp xchg scas lret call jbe scas int3 call ja mov jmp js mov jmp and pop jp mov in add mov pop xor insl mov xor (bad) loopne sbb push outsl mov aaa push jo stos (bad) in sbb lods lret and pop js mov jmp and pop jl mov in add add es pusha jl mov out or inc bound mov icebp push mov add mov stc adc stos (bad) in sbb lods leave in push cmp nop lods leave out pop cmp xchg scas lret out and lret call jbe scas iret add or inc bound mov lock fwait mov inc arpl push sub sbbb dec gs lahf mov dec push mov xor xchg dec insb mov xor mov xor insl mov xor xor add and mov in or inc pusha jl mov out or inc popa jle mov inc arpl push sub sbbb dec push notl xor mov add add clc adc mov xor xchg xor xchg dec imul xor (bad) ss outsl mov ss outsl mov cmp stos (bad) jecxz sbb push jno stos (bad) loop sbb pop je add inc pop jns mov jmp and pop jp mov in or pop jns mov jmp and pop jns mov jmp and mov lock inc bound mov inc arpl push sub sbbl sahf mov dec data16 lahf mov dec imul jo test pop cmp jne scas lret and jbe scas lret call ja mov jmp js mov ljmp in and add mov out or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov hlt adc mov dec test notb das dec push notb das dec imul xchg dec jo test add jne scas lret out and lret out and lret out and int3 call jbe mov ljmp mov out or inc pusha jge mov out or inc popa jle mov lock inc popa jle mov inc arpl push sub andl mov xor lods enter cmp (bad) lods enter cmp (bad) pop inc pusha jl mov out or inc pusha jge mov dec gs lahf mov fdiv adc dec sbbl adc dec push clc adc dec imul xchg push outsl mov aaa push jo test cmp lea cmp (bad) stos enter cmp nop lods leave out pop cmp xchg scas lret ljmp mov jmp or inc bound mov lock fwait mov inc bound mov lock fwait mov dec xchg xor xchg xor xchg xor xchg xor mov xor mov push outsl mov add jne mov jmp pop jnp mov in or inc pop jnp mov in or inc pop jnp mov out or inc pusha jge mov dec data16 add adc dec test notb das dec push notl xor mov xor xchg xor mov ss outsl mov ss outsl mov aaa push jo test aaa push jo test cmp stos (bad) out pop cmp jne scas lret out and mov in or inc pop jp mov in or mov in or mov out or inc popa sbbl mov cs andl adc dec imul xchg xor xchg xor (bad) ss outsl add and pop ja cwtl mov out or inc popa jle mov lock inc arpl adc dec push cli push xor mov xor insl mov ss jb stos enter cmp lret call ja mov out or inc sbbl mov xor xchg xor mov ss jo test cmp xchg lods leave out and pop jl mov in or inc pusha jge mov xlat hlt adc mov dec imul xchg dec imul aaa push jo test cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods lret pop cmp jne mov jmp jp mov in or mov in add sub jg mov das dec test notb das dec imul mov std sbb push jno stos (bad) jecxz sbb lods leave in pop cmp jne lods lret and jbe scas int3 ljmp mov jmp and jl mov out or inc pusha jge mov out or inc bound mov icebp push sub sbbl popf mov inc andl push insl mov xor (bad) sbb cmp xchg scas int3 jmp jp mov out or inc bound mov inc test add cmp xchg scas int3 jmp js mov jmp sub jg mov dec insb mov xor (bad) jecxz sbb push jns mov jmp es popa jg mov dec push add aaa push jb add inc pop movsl (bad) jecxz pop cmp lret ljmp add and mov dec data16 lahf mov dec imul xor mov cmp xchg scas lret and jbe mov jmp daa inc sbbl mov xor insl mov cmp (bad) lods leave in push cmp xchg scas int push and jns mov icebp or mov xor xchg cmp mov push je lods lret and pop jp mov out or inc sbbl mov xor mov aaa push jno lods leave out and iret in or inc popa jge mov dec data16 lahf mov dec insb mov cmp add and pop js cltd mov out or inc pusha jge mov lock add sub jg mov dec push mov xor xchg xor xchg xor xchg xor mov xor (bad) jecxz push cmp nop lods leave in and lret call jp mov in or pop jl mov lock popf mov dec push movsb rcr push xor mov push insb mov sbb push jno stos lret and jbe mov ljmp mov out or inc pusha jge mov lock popf mov dec sbbw dec andl adc dec imul mov cmp xchg lods lret and jnp mov in add sub (bad) sahf mov xor xchg add push xor mov cmp mov cmp xchg scas int3 call jbe mov jmp ja mov jmp js mov jmp and pop jle mov lock pushf mov dec sbbl sahf mov dec sbbw dec imul mov cmp nop lods lret and jne scas int3 jmp pop jl mov in or inc pop jl mov out or inc pusha jl mov inc gs cmp fmuls aas xchg lock sti es lcall aam sub push inc jbe fmuls pusha mov inc pusha jge mov out or inc popa jle mov lock pushf mov inc cmpb andl add add push sti sbb push jb stos (bad) jecxz add cmp int3 jmp ja mov jmp ja mov jmp jbe mov ljmp mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov inc arpl movntps sbbl mov pop jp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jl mov out or inc bound mov dec sbbl sahf mov dec gs sahf mov dec data16 lahf mov dec test notb cs push movsl rcr pop xor mov xor insl mov xor outsb mov xor add test aaa push jae lods leave call ja mov add or inc popa jge popf mov dec gs sahf mov dec test notb xor xchg xor mov ss outsl mov aaa push jno test cmp mov cmp mov cmp mov cmp int3 call ret sbb outsb mov ss sbbl mov add aas pop jge mov out or inc popa jle mov icebp push sub sbbb dec xchg mov in or inc pop jnp mov out or inc pusha jge mov out or dec sbbl sahf mov dec gs sahf mov dec data16 lahf mov dec sbbw dec push stc push xor mov xor stos enter and pop ja mov jmp js mov ljmp mov jmp and jnp mov out or inc pusha jge mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov lock (bad) sahf mov dec gs sahf mov dec push notb das dec push notl xor mov xor xchg xor mov xor mov xor insl mov xor insl mov xor (bad) cmp (bad) lods lret pop cmp xchg scas lret and pop ja mov ljmp mov in or add add add add inc pop jnp mov out or inc popa jg mov dec push movsb rcr push xor mov sbb xchg mov jmp and pop jns mov jmp and pop jnp mov in or inc pop jg mov inc bound mov inc arpl mov inc sbbb inc sbbl sahf mov dec push notl xor mov xor test xor xchg dec imul xor mov ss outsl mov aaa push jo test loope sbb push jo test aaa push jo test aaa push jo test cmp xchg lods leave out pop cmp nop lods leave out pop cmp xchg scas lret and jbe scas lret out and int3 call js mov in or inc pop jnp mov out or inc pop jl mov out or sub gs sahf mov xor xchg xor mov push jno stos (bad) jecxz sbb push jb stos enter mov aad sub sbbb sbbl sahf mov dec push movsb rcr push xor mov xor mov xor insl mov xor insl mov xor (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb stos enter cmp (bad) lods enter cmp nop lods enter cmp jns mov jmp and jns mov jmp and pop jp mov in or mov add in or inc pusha jg mov inc arpl mov dec sbbw dec andl adc dec test fdivrp pop xor jo test cmp stos (bad) jecxz sbb scas lret call jbe scas lret call stos (bad) in sbb lods enter cmp jne scas lret and pop js mov jmp and pusha jge mov out or inc bound mov lock pushf mov inc sbbb dec sbbl lahf mov dec push mov xor mov push insb mov xor ret loopne sbb push jno stos (bad) jecxz sbb push jae scas int3 jmp js mov ljmp mov ljmp mov shr or mov out or inc bound mov dec data16 lahf mov dec push movsb rcr pop xor mov xor add stos (bad) in add cmp int push and pop jns mov out or inc pusha jge mov lock sahf mov dec gs sahf mov dec data16 lahf mov dec test pop inc popa jle mov dec insb mov xor (bad) sbb push jno stos (bad) jecxz sbb push jb scas lret and jne scas lret call jnp mov in or inc pop jl mov out or inc popa jge mov out or inc popa jle mov dec data16 lahf mov dec test cli push xor mov xor ret loopne sbb push outsl mov add lcall push jno stos (bad) in sbb lods lret pop popa jg mov dec push clc adc dec push mov xor xchg xor push outsl mov pop cmp int3 call jp mov in or mov in or inc pusha jle mov dec gs lahf mov dec sbbw dec imul mov xor insl mov ss jo test aaa push jo stos (bad) in sbb lods leave out pop cmp iret in or mov out or inc pusha jge mov icebp push sub sbbb dec andl adc dec push notl xor outsb mov cmp xchg scas int3 call jns mov add in or inc pop jge mov icebp movntps andl dec imul cmp xchg lods lret pop cmp ja mov jmp and pop jp mov in or mov add adc dec push (bad) sbb jno stos (bad) jecxz push cmp xchg scas lret and pop jns mov in or inc popa jge mov lock sub sbbl popf mov dec imul xor outsb mov cmp stos (bad) in and shr or inc bound mov dec push std sbb push jo test cmp nop lods lret and jne mov ljmp mov out or inc arpl mov inc push clc adc cmpsb ret loope sbb push jae lods leave in add cmp xchg scas lret and jbe scas int3 jmp es pop jnp mov out push sub sbbl mov xor mov cmp jne mov jmp js add inc add mov cmp mov cmp jbe scas int3 call js mov in or inc bound mov dec xchg cli push xor lea cmp xchg scas lret jmp jns mov in or mov out or inc popa jge mov lock inc fs sahf mov dec push cmpsl ret loope sbb pop js mov out or inc bound mov dec imul mov cmp xchg scas into jmp and mov inc sbbb add mov push outsb mov aaa push jo stos (bad) in push cmp jp mov in or inc pop jl mov lock sub sbbw push outsb mov aaa push jo stos enter cmp add and pushf mov dec sbbl dec imul mov ss outsl mov cmp nop lods shr or inc bound mov dec andl adc push jo stos (bad) in pop cmp jbe mov add jmp lock xor rcll inc mov fmull inc jo (bad) pop add sub stc cs rolb insl scas or ret sbb lret call jbe mov jmp jns mov add or pop jp mov out or inc pusha jge mov out or inc popa jge mov lock inc sbbl lahf mov dec data16 lahf mov dec push notl xor mov xor mov sbb push jno xchg scas int3 sti inc test ret loopne sbb push jo test cmp (bad) lods leave out pop cmp int3 jmp jns mov inc arpl mov inc sbbb dec sbbl sahf mov dec andl adc dec insb mov xor mov xor insl mov xor ret loopne sbb vpaddd cmp test cmp xchg lods lret pop cmp jne add ds ja mov jmp js mov ljmp mov in or mov inc arpl push sub (bad) sahf mov dec sbbw dec test notl xor mov xor push jno stos (bad) jecxz add cmp lret call ja mov jmp js mov jmp and pop jp mov in or inc pusha jl mov inc arpl adc data16 lahf mov dec sbbw dec test notb das dec imul mov ss outsl mov aaa push jo test cmp test cmp nop lods enter cmp nop lods int push and pop js mov jmp and pop add mov in or inc pusha jl mov lock pushf mov dec imul mov ss jo lods leave in push cmp xchg lods lret and jbe scas lret jmp jns mov jmp and pop jns mov in push sub sbbl add sbb push jo test cmp mov cmp xchg lods lret and jnp mov icebp or pushf mov inc sbbb dec fs lahf mov dec insb mov xor outsb mov aaa push jae lods enter cmp xchg mov jmp js mov ljmp mov in or inc pusha jl mov out or inc bound mov dec test notb das dec add mov das dec push stc adc movsb rcr sbb outsb mov cmp lods leave out and jbe mov ljmp mov in or mov lock pushf mov dec gs lahf mov dec imul ss add lods leave out add pop jns mov jmp and mov out or inc pusha jl mov out or inc popa jg mov dec imul mov xor insl mov xor (bad) loopne sbb push outsl lea cmp lods leave out pop cmp jne scas lret and int pop and pop jp mov out or inc bound mov lock popf mov dec push notl xor add xchg xor xchg xor mov aaa push jo stos (bad) jecxz sbb push jno lods lret and jne scas lret jmp ja mov jmp js mov ljmp mov in or inc pusha jl mov out or inc arpl cvtps2pi (bad) lahf mov xor mov stos (bad) in sbb stos (bad) in sbb lods leave in push cmp nop lods leave jmp jnp mov in or inc popa jle mov lock pushf mov inc arpl mov inc sbbl mov xor xchg xor nop lods leave in push cmp xchg lods leave out and jbe scas int3 call ja mov ljmp mov in or add add inc pusha jl mov out or inc bound mov inc arpl adc dec andl adc dec imul (bad) stos enter cmp nop lods leave out and int or inc sbbl mov xor (bad) jecxz sbb mov out or inc popa jle lahf mov add mov cmp xchg mov jmp jle mov dec push mov xor outsb mov ds js mov in or inc pusha jl mov lock test xor mov push outsl mov aaa push jb stos (bad) jecxz sbb push jae lods leave in pop cmp ja mov in or inc pusha jl mov out or inc popa sbbl dec push cld sbb push jno lods leave in and jne scas int3 ljmp mov in or inc pop jl mov out or inc arpl adc gs sahf mov dec push notb das dec push notl xor xchg xor mov cmp stos (bad) in sbb stos enter sbb lods enter cmp xchg scas lret and int3 call jnp mov out or inc popa jle mov icebp push sub cmp fmuls jno,pt fistl inc jae fmuls cmp inc ja fsubrl dec insb mov cmp nop lods leave in pop cmp xchg lods lret pop cmp jne scas int3 jmp ja mov jmp js mov ljmp mov out add add inc bound mov fdiv adc dec test notb xor mov xor mov push insl mov cmp mov cmp (bad) stos enter cmp xchg lods lret and jne scas lret call jbe mov jmp jnp mov out or inc popa jge mov lock sub mov dec test notb xor mov xor mov aaa push jno stos (bad) in sbb lods enter cmp jne scas lret and into ljmp mov in or mov lock or mov mov adc mov sbb mov sar arpl xchg enter lods fisttp inc outsb cmpsb fstl inc ja add test test mov lods loope push cmpb add mov inc sbbl mov ss outsl mov aaa push jo stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp (bad) lods enter cmp xchg mov jmp ja mov jmp and add inc arpl movntps sbbl sahf mov dec imul xchg xor mov xor insl mov xor (bad) loopne sbb push outsl mov cmp nop lods leave out and lret call jbe scas int3 jmp js mov jmp and pop jp mov in or mov lock pushf mov inc sbbb xor xchg xor mov xor insl mov cmp mov cmp nop lods leave out and test loope sbb push jo test cmp stos (bad) jecxz sbb push jb stos lret and int3 call js mov jmp and popa jle mov lock pushf mov inc arpl adc push cli pop xor mov ss outsl mov cmp (bad) lods enter cmp nop lods leave out pop cmp jne scas lret jmp jnp mov in or inc pop jl mov lock inc bound mov icebp or sahf mov dec test notl xor xchg ret pop xor insl mov ss outsl mov aaa push jo xchg scas lret and jne scas lret call js mov ljmp mov out or inc arpl mov inc arpl adc andl adc dec push notl dec insb mov aaa push jo stos lret call jns mov jmp and pop jp mov add push sub sbbb dec andl adc dec push std sbb push outsl mov aaa push jo test aaa push jo test cmp nop lods leave out test call js mov icebp sti pop jl mov lock inc bound mov inc arpl movntps sbbb dec sbbl add add movsb rcr push xor mov xor (bad) ss outsl mov push cmp nop lods leave out pop cmp xchg lods lret and pop ja mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov dec test notb xor xchg xor insl mov add push jb lods leave out pop cmp xchg lods lret out and jp mov in or inc pop jnp mov out or inc pusha jl mov out or inc popa jle mov icebp or pushf mov dec sbbl movsb rcr push xor mov aaa push jo test cmp jne scas lret call ja mov jmp and inc pop jnp mov icebp or popf mov inc sbbb dec sbbl mov xor (bad) cmp nop lods leave out pop cmp jbe scas lret call jbe scas lret call jbe scas int3 call jbe scas int3 call ja mov in or mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge add dec gs sahf mov dec imul xor mov xor insl mov xor outsb mov xor (bad) sbb push jno stos enter ds ja mov jmp ja mov ljmp mov ljmp mov in or inc pop jl mov out add sub sahf mov dec andl adc dec andl adc dec test notb das dec test fdivrp pop xor mov ss outsl mov ss outsl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) in sbb push jb stos lret out and int3 call ja scas int3 jmp ja mov jmp and mov in or sub sbbb dec test notl xor mov xor xchg xor xchg push jno stos (bad) jecxz sbb stos enter cmp int3 call ja mov jmp ja mov jmp js mov jmp and pop jns mov add into jmp and mov out or inc bound mov dec sbbl sahf mov dec test notl xor push jno stos (bad) jecxz sbb pop ja mov jmp adc stos fstl inc jp lock mov scas fisttp jge fimul inc jl out dec mov or inc jg add jbe repz out pop cwtl (bad) or (bad) incb mov fstl je rorb dec mov int3 add dec test jmp push fistp pop cwtl into add jl repz cmovbe pop pop lcall daa pusha sahf fistpl push nop rclb dec mov add cmp cmc xor ljmp sahf ficomp push xchg rorl inc test add add jns cmc xor ljmp add add aaa jne out sub in sub test and fcoml dec js fmuls dec mov stc xor ljmp add jbe,pt out sub (bad) adc dec addl add roll jg icebp ss jmp addr16 pop xchg lret or mov icebp das imul sbb (bad) iret push dec (bad) mov icebp das lods in sub pop push xchg int inc jnp cli xor and mov std cmp in sub mov into adc aad dec mov add sub and (bad) push inc add das addr16 fcoms dec test add bound rolb jnp divb fwait rclb daa pop xchg enter sahf fistpl push mov or mov divb arpl add add inc js clc xor jmp popa lahf loope push (bad) rcll dec xchg std cmp sub inc js in dec test add js clc xor lock sbb xchg rorb dec mov add sbb movl cmp outsl test sub sbb iret or (bad) ret push inc jp sti xor mov mov (bad) or mov sbb rclb push xchg enter lahf roll cmp cmpsb fcoml inc jl loope inc jne aad inc je (bad) push imul dec add lcall or js in daa pop scas (bad) adc dec imul xchg xor mov push jno stos enter cmp nop lods leave in push cmp xchg scas lret and jne scas lret out and cmp lret call jbe mov in or mov in or inc pop jnp mov out or inc popa jle push dec push mov xor xchg xor xchg add push je lods leave out pop cmp xchg lods lret pop cmp jne scas lret and int3 call ja mov call jnp mov in or mov in or inc pusha jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc arpl mov dec add (bad) push xor xchg dec insb mov xor mov xor mov dec imul aaa push jno test cmp test cmp stos (bad) jecxz sbb push add jno stos (bad) jecxz sbb push jb stos (bad) in and lret out and lret call jbe mov call ja mov jmp jns mov jmp and jns mov out or inc pusha jl popf mov inc arpl push sub sbbl lahf mov dec andl adc dec push mov xor xchg stos enter cmp nop lods enter cmp xchg lods lret and ja scas int3 call jge mov out or inc add lahf mov dec test cmc adc dec andl adc dec imul xchg xor ret loopne sbb vpaddd aaa push jae lods enter cmp nop add cmp je lods lret pop cmp jne mov jmp and pop jns mov jmp and pop jns mov jmp and pop jp mov in or mov out or inc pop jl mov lock popf mov dec data16 push xor mov xor mov xor mov xor (bad) sbb push jo test cmp (bad) lods enter cmp (bad) lods enter cmp (bad) lods enter cmp nop lods leave out pop cmp xchg mov ljmp mov shr or inc popa jle mov lock inc popa jge mov out or inc popa jge mov icebp push sub sbbb xlat repz mov dec imul xchg fdivr adc mov xor mov cmp (bad) lods leave in pop cmp int3 call ja mov jmp jns mov jmp and jns mov jmp and jns mov out or inc popa jge mov out or inc add lahf mov dec andw dec imul xchg xor insl mov xor insl mov xor ret adc insl mov ss outsb mov cmp mov cmp jbe scas int3 jmp ja mov add or inc pusha jl mov out or inc popa jge mov out or inc popa jge mov lock inc bound mov dec gs lahf mov dec sbbl adc mov add add clc adc mov xor xchg xor insl mov ss outsl mov aaa push jo test loope sbb push outsl mov (bad) sbb mov (bad) or mov xor mov ss jo test cmp pop jbe scas int3 call ja mov ljmp mov jmp and pop jnp mov icebp or pushf mov dec sbbl lahf mov dec andl adc dec push notl push insl mov xor vpaddd aaa push jo add cmp int3 jmp js mov in or push rcrl pop jl mov out or inc bound mov inc sbbl add dec imul mov aaa push jno stos lret out and int3 call js mov jmp and mov in or inc pusha jl mov out or inc arpl push sub test das dec push notl xor mov sbb push jo test cmp (bad) lods enter ja out push mov mov push push mov inc pop jns mov jmp and mov in or inc pop jl mov out or inc popa jle mov lock inc data16 lahf mov dec sbbw dec push clc adc xor (bad) ss outsl mov cmp mov ds ja mov jmp ja mov in or mov add add shr or inc pop jge mov lock inc popa jle mov lock lahf mov dec andl adc dec andl adc dec imul xchg xor mov push outsl mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb add xchg mov ljmp mov in or mov out or inc arpl push sub sbbb dec gs lahf mov dec sbbw dec push notl xor movsl ret sbb (bad) jecxz sbb push jno stos enter cmp popl scas int3 jmp ja mov jmp jns mov in or inc popa jle mov icebp or pushf mov inc addb add popf mov dec andl adc dec push notb das dec push cld sbb ret (bad) sbb (bad) ss jo test cmp (bad) stos enter cmp nop lods lret and jp mov out or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov fprem1 adc dec andl adc dec imul mov ss outsl mov cmp nop lods lret pop cmp jne lods lret and jne scas lret and js mov in or mov in or inc pop jnp mov in or inc popa jge mov lock test das dec push notl xor mov xor insl mov add add push jb stos enter cmp rcr sbb vpaddd aaa push jo test cmp int3 jmp ja mov jmp js mov jmp and inc bound mov inc arpl push sub test das dec push notl das dec push notl dec push mov sbb push jo test loop sbb push jb stos enter cmp int push and pop js mov ljmp mov jmp and pop jp mov in or inc pop jnp mov in or inc pusha jge mov dec data16 lahf mov dec push notl dec push mov xor xchg xor mov cmp xchg lods lret pop cmp jbe scas lret out and add xchg scas int3 jmp jns mov jmp and pop jp mov out or inc pusha jge mov movntss sbbl lahf mov dec test notb movsb add loope sbb push jno push inc xorl mov xor xchg xor mov push insl mov sbb push jb stos (bad) in sbb mov ljmp mov ljmp mov in or mov in or inc pusha jge mov icebp or pushf mov dec push notl xor mov xor xchg xor mov xor insl mov xor insl mov cmp mov cmp xchg lods add lret pop cmp jne scas lret call jbe scas int3 call ja mov ljmp mov out or inc popa jle mov inc sbbb dec push clc push xor mov cmp lods enter inc pop jnp mov out or inc pusha jge mov out or inc pusha jge mov icebp push sub sbbb dec add movsl ret sbb insl mov cmp nop lods lret and pop ja mov jmp and pop jp mov in or inc pop jnp mov in or inc pop jl mov movntsd test xor xchg push insl mov cmp (bad) lods leave in pop cmp jne scas int3 jmp jns mov in push sub xchg push jo test (bad) jecxz sbb lods leave in push cmp xchg lods lret and jbe scas int3 jmp ja mov out or inc popa jle mov icebp or pushf mov dec sbbl mov xor add push cmp xchg mov jmp and pop jns mov jmp daa inc popa jle mov lock inc bound mov icebp movntps sbbl test xor insl mov xor insl mov xor vpaddd aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg mov ljmp mov jmp and pop jp mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov repnz xor xchg dec insb mov add add xor ret loopne sbb ret loopne sbb push outsl mov cmp nop lods lret call jge mov out or pushf mov dec test notb das dec push cli pop xor mov push inc pop jle mov dec test notb das dec push mov xor insl mov xor (bad) loopne sbb push outsl mov lods leave out and pop js mov in or add mov sbb cmp scas jmp push xchg rorl dec test lret jge out arpl add cmp xchg scas lret and int pop and jp mov in or mov out or inc popa jge mov lock lahf mov dec push add add notl xor mov xor mov dec insb mov rcrl push jae lods lret and pop jp mov in or inc pusha jl mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov lock fwait mov xor xchg xor xchg push insl mov xor ret (bad) sbb ret loopne sbb add xchg scas int3 jmp ja mov jmp js mov jmp and pop jns mov in or mov out or inc pop jl mov icebp adc pop jp mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov repnz sub sbbb dec push mov xor add dec push mov xor mov xor mov xor mov jno repz bound mov dec push notl dec imul xchg push insb mov xor insl mov cmp mov and pop ja mov jmp js mov jmp and mov in or inc pop jl mov out or inc pusha jge mov cvttss2si dec imul xchg dec insb mov xor insl mov ss outsl mov aaa push jae lods leave out pop cmp xchg scas lret and jbe scas int3 call ja mov jmp js mov jmp and pop jp mov in or pushf mov aad push sub sbbb sbbb inc sbbb inc sbbb inc andb dec push notb xor xchg xor xchg dec insb mov xor mov aaa push jo test add int3 jmp ja mov ljmp mov ljmp mov ljmp mov out or inc pusha jl add dec gs sahf mov dec sbbw dec andl adc dec push notb cs imul xor mov xor insb mov xor ret loopne sbb vpaddw ss jo test cmp add and pop ja mov jmp jns mov jmp and jp mov in or mov in or inc pusha jl mov inc sbbb dec gs lahf mov dec andl adc dec imul xchg ss outsl mov cmp flds sbb rorb inc jge or mov dec insb mov xor outsl mov aaa push jne scas lret call ja mov shr or inc popa jle mov lock popf mov dec sbbl mov xor insl mov xor (bad) pusha sbbb dec push notl dec push mov xor insl mov cmp mov cmp nop lods leave out pop cmp jne scas lret and jne scas lret out and int push and pop jnp mov in or inc pop jl mov out or inc pusha jl mov lock inc popa jle mov lock fwait mov inc sbbb push clc adc dec push mov sbb (bad) ss outsl mov cmp mov cmp (bad) scas lret call ja mov jmp add mov out or inc bound adc andl dec push mov xor jno test cmp mov cmp nop lods leave out pop cmp nop lods lret pop cmp jne scas lret jmp ja mov in add or inc pusha jge mov out or inc bound mov inc arpl cvttps2pi (bad) lahf mov dec test notb das dec imul ss outsl mov aaa push jo test cmp (bad) lods leave in push cmp nop lods leave out pop cmp jne scas lret out and pop jp mov in or inc pop jl mov out or inc pusha add adc gs lahf mov dec test notb xor mov mov clc cs mov lock pushf mov das dec push notl dec push mov xor xchg xor mov ss outsl mov cmp stos (bad) loop sbb push jno stos (bad) in sbb stos (bad) in sbb lods add add call jbe scas int3 call jbe mov jmp js mov jmp js mov ljmp mov jmp and pop jl mov out or inc popa jge mov out or inc pusha jge mov out or inc popa jle mov icebp or pushf mov inc arpl adc mov dec test notl xor mov sbb outsb mov aaa push jo test cmp mov cmp jbe scas lret call jbe imull push sbb stos enter cmp nop lods leave out pop cmp xchg lods lret es pop jl mov out or inc popa jge mov lock fwait mov lock fwait mov inc sbbb add dec andl mov xor xchg xor mov xor mov xor mov ss jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp (bad) lods leave out and int push and pop js mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jl mov out add sub gs lahf mov dec andl adc cmpsb ret (bad) sbb ret loopne sbb push outsl mov ss outsl add and jne lods lret pop cmp jne scas lret call jp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov out or inc popa jle mov lock or inc arpl mov dec push notb das dec push notl dec push mov xor mov dec imul xor (bad) aaa push jo test cmp stos (bad) jecxz sbb push jb lods enter cmp nop scas lret pop cmp jne scas into jmp and pop jp mov in or pop jp mov in or pop jp mov in or fwait mov inc arpl push sub test xor xchg xor mov push insb mov sbb push jno test cmp mov cmp lret out and jne scas int3 jmp ja mov jmp js mov ljmp mov iret jmp and pop jns mov out or inc pusha jge mov out or inc popa jle mov lock inc popa jle mov inc arpl push sub jg mov dec sbbl adc dec andl adc dec imul mov xor mov push insl mov cmp nop lods lret and lret call js mov jmp and jns mov add or inc popa jle mov lock mov xor xchg xor xchg xor xchg xor outsl mov ss outsl mov cmp nop lods leave out pop cmp nop lods leave in pop cmp jne scas lret out and lret call jne xchg scas lret out and int push and pop js mov ljmp mov jmp js mov jmp and pop jns mov jmp and pop jns mov jmp daa inc popa jge mov lock pushf mov inc arpl mov dec gs sahf mov dec test notl xor mov xor ret loopne sbb push outsb mov aaa push jo test loope sbb push outsl mov cmp pop jbe scas lret call jp mov in or inc pusha jl mov out or inc popa jge mov lock inc popa jle mov icebp push sub sbbb xor xchg xor ret loopne sbb (bad) aaa push jo stos (bad) in sbb lods leave out pop cmp add xchg scas lret and pop ja mov in or inc pop jl mov out or inc pusha jle mov lock inc popa jle mov inc sbbl mov xor mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp nop lods lret pop cmp jne scas into jmp and mov in or inc pop jnp mov in or inc pop jl mov out or inc popa jle mov lock inc popa jge mov fdiv adc mov dec imul xchg xor xchg xor mov xor push insl mov cmp (bad) stos (bad) jecxz sbb push jb lods leave out and je scas lret and je lods lret add add cmp ja mov jmp ja mov in or mov in or mov in or mov in or mov in or inc pop jl mov out or inc arpl mov inc arpl mov inc arpl movntps sbbb sbbl mov xor (bad) sbb push jno stos (bad) in sbb lods leave in and pop ja mov ljmp mov in or add sbbl dec andl adc dec test notb dec push movsb rcr adc movsb rcr adc movsb add loope sbb lods leave in pop cmp xchg lods lret pop cmp xchg lods int push and pop jp mov add or mov out or inc pusha jge mov dec test notb xor mov xor ret (bad) sbb (bad) loopne sbb push outsl lea cmp int3 jmp js mov jmp ja mov jmp js mov ljmp mov jmp and pop jns mov out or inc popa jle mov dec data16 sahf mov dec data16 lahf mov dec test cmc adc dec test cmc adc dec insb mov sbb lods leave in pop cmp xchg scas int3 call jbe scas lret call jbe scas lret jmp and pop jns mov jmp sub dec gs sahf mov dec data16 sahf mov dec data16 lahf mov dec push add mov dec imul xor mov aaa push jae lods lret and pop js mov jmp and pop jns mov lock mov xor mov xor jno test aaa push jno lods leave out and pop js mov in or mov in or inc pop jnp mov out or inc popa jge mov dec push mov xor mov xor (bad) sbb push jno stos (bad) in sbb push je scas int3 call js mov out or inc add sahf mov dec data16 lahf mov dec test notb cs push notb das dec push notb push insb mov sbb push jno stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jno stos (bad) in sbb push jb stos enter cmp (bad) lods lret call ja mov in or mov out or inc popa jge mov lock pushf mov inc sbbb push movsb rcr push xor mov ss outsl mov ss outsl mov aaa push outsl mov cmp test cmp jne scas lret call jbe scas int3 jmp js mov ljmp mov ljmp mov jmp and pop jp mov out or inc popa jge mov xlat hlt adc mov dec test notl dec imul mov cmp xchg scas lret and mov in or mov in or inc pop add jnp mov in or inc pop jl mov out or inc popa jge mov movntsd sbbl lahf mov dec test notb das dec test notb das dec push notl das dec imul xor and clc inc jns xor xchg mov jmp jp mov in or out push mov imull pop cwtl enter xchg mov adc mov mull pop pop hlt sub lret ljmp nop mov scas fimul cmp cmp call js mov ljmp mov hlt adc mov dec push add sbb outsb mov ss outsl mov aaa push jo test cmp xchg scas lret and lret call add scas int3 call ja mov jmp ja mov jmp and jns mov jmp daa inc pusha jge mov out or inc popa jle mov lock inc bound mov icebp or pushf mov dec data16 lahf mov dec test stc adc movsb rcr push xor mov xor mov xor (bad) loopne sbb push jo test cmp nop lods leave in push cmp xchg lods lret and int3 call ja mov jmp js mov ljmp mov out or inc pusha jge mov out or inc popa jge mov lock andl dec push notl xor xchg xor mov ss outsl mov aaa add push jo stos (bad) jecxz sbb push jb lods leave out pop cmp xchg scas lret and int3 call jp mov in or mov in or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc arpl adc dec push notb xor mov xor xchg xor xchg xor mov ss outsl mov aaa push jo test aaa push jb stos enter cmp (bad) lods enter cmp nop lods lret pop cmp jne scas int pop and pop jp mov in or mov in or inc pop jl mov out add sub (bad) lahf mov dec andw dec push mov xor mov add add vpaddd aaa push jo test cmp stos (bad) jecxz sbb lods leave in and pop ja mov jmp ja mov ljmp mov jmp and pop jns mov in or mov in or inc pop jl mov inc sbbb dec sbbl mov xor jo sti sub roll inc jbe repnz xor insl mov xor vpaddd aaa push jo stos (bad) jecxz sbb lods lret and jne scas lret out and iret in or mov in or mov in or mov in or inc pop add movntps sbbl mov xor xchg add clc adc dec push mov xor mov dec insb mov xor (bad) in push cmp nop lods leave in push cmp nop lods leave out push cmp xchg lods lret pop cmp jne scas lret out and int3 call jp mov in or inc pop jnp mov out or inc popa jge mov out or pushf mov inc sbbl lahf mov dec insb mov dec insb mov xor insl mov xor (bad) sbb push jb stos (bad) in sbb scas lret call ja mov jmp js mov jmp js mov jmp and pop jns mov in add pushf mov dec test cmc adc dec push add fnop adc movsl ret pop xor insl mov xor insl mov xor insl mov cmp (bad) lods leave out pop cmp xchg scas lret and int3 jmp js mov ljmp mov jmp and pop jl mov out or inc popa jle mov lock inc bound mov inc sbbb dec data16 lahf mov dec andl adc movsb rcr sbb outsb mov ss outsl mov aaa push jo stos (bad) jecxz sbb lods leave in pop cmp xchg mov in or mov in or inc popa jge mov icebp or pushf mov inc sbbb dec gs add xor mov ss outsl mov vpaddd aaa push jo test cmp stos (bad) in and jne scas lret out and int3 in or mov lock inc arpl adc gs lahf mov dec test notl dec imul mov xor (bad) loop sbb push jno stos (bad) jecxz sbb push jae lods leave out pop cmp xchg scas iret in or mov in or inc bound mov inc arpl movntps sbbl sahf mov dec sbbw dec push cli pop xor insl mov xor outsb mov xor (bad) loopne sbb push jo test cmp stos (bad) loop sbb xchg mov in or inc pop jnp add mov out or inc popa jle mov lock pushf mov inc gs lahf mov dec test cli pop xor (bad) loopne sbb push outsl mov ss jo test aaa push jno stos enter cmp xchg scas int3 jmp and mov cvttsd2si (bad) lahf mov dec test notl xor xchg xor mov cmp mov cmp shr or inc pop jl mov icebp or popf mov dec push mov xor (bad) push cmp xchg scas int3 in or inc pusha jl mov icebp movntps sbbl sahf mov dec push notl xor mov xor xchg scas lret out or mov add aam or pushf mov dec fs sahf mov dec sbbw dec push sti pop ss jo stos int3 ljmp mov icebp or popf mov dec imul xchg ss outsl mov cmp nop lods leave out and jne scas lret call jbe mov jmp js mov jmp and mov out or inc pusha jg mov inc sbbl lahf mov dec push mov xor xchg dec insb mov cmp nop scas lret out and int3 call jl mov out or inc popa jle mov inc bound mov inc sbbb dec test add add cli push xor insl mov xor outsb mov xor (bad) jecxz sbb lods enter cmp mov ljmp mov jmp daa inc popa jge mov lock sub test xor xchg xor outsb mov cmp (bad) lods enter cmp jbe scas lret out and iret in or mov lock popf mov dec gs mov xor insl mov xor insl mov ss jo test cmp stos enter ds js mov lock movsl ret sbb push je scas lret and int3 call ja mov jmp js mov ljmp mov in or inc pop jl mov lock or inc popa add adc dec push notl das dec imul mov dec insb mov cmp mov push jae lods leave in push cmp lret call ja mov jmp ja mov ljmp mov dec gs mov das dec imul mov aaa push jno stos (bad) jecxz pop ds js mov out or inc pusha jge mov out or inc arpl push sub (bad) sahf mov dec gs sahf mov dec push clc adc cmpsl ret loopne sbb push outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp xchg lods lret call jnp mov out add sub sbbb dec imul mov xor (bad) ss jo lods enter cmp nop lods leave out pop cmp lret call ja mov jmp jns mov jmp and mov in or inc arpl mov inc arpl push sub sbbl lahf mov dec andl adc dec test cli pop xor mov ss outsl mov aaa push jo test aaa push jo test cmp stos (bad) jecxz sbb push jbe scas int3 call ja mov call js mov jmp and pop jns mov in or inc pusha jl mov out or andw dec push mov add push xor mov ss jb lods add jmp jns mov jmp and pop jnp mov out or inc pusha jl mov dec andl adc dec imul mov xor insl mov ss outsl mov aaa push jb stos leave in push cmp nop lods leave out pop cmp xchg scas lret call ja mov jmp and pop jp mov in or mov movntsd sbbl lahf mov dec push notb das dec push notb das dec push clc push xor mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp jne scas lret out and jbe scas lret out and jns mov add add pop and pop jns mov in or mov in or fwait mov repnz sub sbbb dec sbbb dec test notb xor xchg xor xchg xor xchg dec imul xor lea cmp stos (bad) jecxz sbb push jno stos (bad) in push cmp nop lods leave out pop cmp xchg lods lret and jne scas lret and pop js mov ljmp mov jmp and pop jp mov jmp and pop jp mov in or mov in or inc pop jle mov lock fwait mov inc arpl mov dec data16 lahf mov dec imul xchg ja mov out add or inc bound mov dec sbbb inc sbbb das dec push notl dec imul mov xor mov xor outsb mov xor ret (bad) sbb ret loopne sbb enter cmp nop lods leave out pop cmp xchg lods lret pop cmp xchg lods lret pop cmp xchg lods lret pop cmp xchg scas lret and jns mov ljmp mov in or pop jp mov out or inc pusha jl mov out or inc popa jg mov inc bound mov dec gs sahf mov dec push notl test jecxz sbb scas lret and iret out or inc data16 lahf mov hlt adc dec push notl dec push movsl ret sbb push jo test cmp (bad) stos add jmp jns mov jmp daa inc pusha jl mov out or inc pusha jge mov lock inc bound mov lock popf mov dec gs sahf mov dec test cli push xor (bad) hlt adc dec push (bad) sbb push jo stos (bad) jecxz sbb push jb lods leave in push cmp nop lods leave out pop cmp shr or mov out or inc popa jle mov hlt adc dec push clc adc stos enter inc pop jp mov out or dec push notl xor enter cmp aad adc mov push outsl mov cmp (bad) stos enter inc pop add jp mov out or inc bound mov dec gs sahf mov push insl mov xor (bad) add cmp xchg mov cvttss2si test xor movsb ret loop sbb push je scas lret and pusha jg mov dec push mov ss jbe mov jmp and pop jl mov icebp push sub mov cmp nop mov in or inc pop jnp mov icebp or popf mov dec test clc adc cmpsl ret loopne sbb push outsl mov cmp stos enter cmp xchg scas lret and into jmp and jp mov in or inc pop jl mov in or inc pop jnp mov out or inc pusha jl mov out or mov cs push mov add add dec imul ss outsl mov ss outsl mov ss outsl mov aaa push jo test and pop jp mov icebp push sub sbbl dec push mov xor xchg xor vpaddw aaa push outsl mov cmp (bad) stos enter cmp xchg mov jmp jns mov out or inc bound adc dec test notb xor mov ss outsl mov cmp (bad) lods leave out daa inc test xor mov cmp (bad) lods lret and mov in or inc pusha jge mov out or inc arpl adc dec insb mov pop jne scas lret ljmp mov add add adc dec push mov cmp jne scas int or mov dec insl mov pop jns mov notl push outsl nop mov jmp bound mov inc sbbb dec push cmpsb ret sbb push jno stos enter cmp xchg lods lret pop aas pop jp mov out or lahf mov push outsb mov cmp (bad) stos (bad) in sbb lods enter cmp nop lods leave jmp js mov jmp and mov out or inc popa jle mov inc sbbl test jecxz push cmp xchg mov in or mov lock sahf mov dec push notb das dec imul mov add pop ja mov ljmp mov icebp push sub (bad) mov xor xchg xor (bad) sbb push jno stos leave jmp jnp mov add adc rcr pop xor mov ss outsl mov ss outsl mov cmp xchg scas lret call jns mov in or mov lock sahf mov dec andw dec imul lea cmp xchg scas lret and mov in or inc bound mov dec andw dec push movsl ret jecxz sbb lods lret and int pop and jp mov in or inc popa jle mov icebp movntps sbbl add sbb push jb lods leave out pop cmp js mov jmp es pop jnp mov out or inc pusha jl mov icebp or sahf mov dec imul mov pop cmp int3 mov jecxz sbb lods enter cmp nop lods leave out pop cmp jne mov in or inc pop jnp mov in or inc pusha jl mov out or inc popa jge clc sbb push jb lods leave in push cmp int3 jmp jnp mov in or inc pop jl mov lock inc bound mov lock mov add ret loopne sbb mov in or inc arpl adc dec push notl xor mov xor mov ss outsl mov pop jne add xchg scas into jmp and pop jnp mov out or inc popa jge mov icebp or sahf mov dec push clc adc dec push movsb rcr sbb leave in pop cmp add mov out or inc popa jge mov lock popf mov dec test sti sbb (bad) loop push cmp xchg scas int push and jl mov icebp push sub sbbb dec push clc pop xor outsl mov ss outsl mov cmp xchg scas lret and pop ja mov jmp and pop jp mov out or inc arpl clc adc movsl ret sbb leave out pop cmp je mov in or mov dec push mov xor mov xor stos (bad) in and jne scas lret call js mov jmp and pop jp mov out or inc popa jle mov dec push clc adc cmpsl (bad) in sbb lods leave in push add pop jp mov in or inc pusha jle mov dec sbbl lahf mov dec outsb mov ss outsl mov aaa push jo test cmp (bad) stos enter cmp xchg lods lret and int3 call jp mov in or mov in or inc pop jl mov out or inc pusha jge mov icebp push sub addl adc test jecxz sbb scas int3 jmp js mov ljmp mov in or inc popa jle mov lock inc bound add add sub push clc adc dec push mov xor insl mov xor ret (bad) sbb push jo test cmp nop lods lret and pop jp mov in or inc pop jl mov (bad) cvttsd2si (bad) sahf mov dec push mov xor mov xor insb mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave out and js mov ljmp mov out or inc sbbl lahf mov dec push stc push xor mov push insl mov add pop je lods int push and pop js mov in or inc pop jnp mov out or jne cli sub mov fs lret popa test add add lahf cmc pop enter fwait (bad) or xchg mov lock popf mov dec sbbl adc mov scas int push and jns mov in or pushf mov dec sbbw dec add ret pop xor mov cmp (bad) lods leave out pop cmp xchg mov ljmp mov in or mov in or mov out or inc popa jge mov out or inc bound mov lock sub sbbl dec test notb das dec push notb xor mov cmp mov cmp nop lods add out or inc popa jge mov out or inc bound mov lock inc bound mov inc bound mov inc add pushf mov inc andl dec test notb das dec push notb das dec imul xchg xor xchg push outsb mov ss outsb mov xor les in push cmp nop lods leave in pop cmp xchg scas lret out and jne mov ljmp mov ljmp mov jmp and pop jns mov jmp and pop jns mov jmp and pop jp mov in or popa jle mov lock pushf mov inc sbbl popf mov dec gs sahf mov dec gs sahf mov xor insl mov imul or add stc daa pop mov add popf (bad) or jp jmp add scas loop push mov or mov fdiv adc dec push notl dec imul xor mov dec insb mov cmp (bad) stos enter cmp (bad) stos enter cmp (bad) lods enter and pop js mov ljmp mov jmp and pusha jge mov out or inc bound mov lock inc bound mov inc bound mov inc arpl mov dec sbbl mov xor test xor xchg xor xchg xor xchg xor mov add push jae lods enter cmp xchg lods lret pop cmp jne scas lret and jne scas int3 call ja scas int3 call jns mov in or mov in or mov in or inc pop jnp mov out or inc popa jle mov lock inc bound mov dec data16 sahf mov dec sbbw insb mov mov add dec (bad) mov (bad) jp fmull outsl mov stos fimul or test mov repz mov repnz or inc popa jle mov icebp push sub sbbb int3 or imul mov xor (bad) ss jo test aaa push jo test cmp jne lods lret and pop jns mov jmp and pop jp mov in or inc pusha jge mov lock inc bound mov lock pushf mov stos in push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb lods enter cmp nop lods leave out pop cmp xchg lods lret and jns mov jmp and pop jp mov in or mov in or inc pop jl mov out or sub gs sahf mov dec andw dec push mov xor xchg lods in inc js fist dec je rolb cmp inc outsl lahf jmp jmp mov cmp cmovne out and scas loope inc jne aam cmp fstl xor rolb aas je jecxz push mov (bad) xor lods out imul je lods lret and jbe scas int3 call ds ja mov jmp js mov ljmp mov out or inc arpl mov inc sbbb dec sbbl lahf mov dec imul mov xor (bad) ss outsl mov aaa push jo test cmp jne scas lret call jns mov in or inc pop jl mov out or inc pusha jge mov lock out and scas int3 jmp js mov jmp and jns mov in or pushf mov dec sbbb dec sbbl sahf mov dec gs sahf mov stos pop sub mov dec insb mov xor add stos (bad) jecxz sbb push jno add add cmp (bad) stos enter cmp xchg lods lret and pop js mov ljmp mov in or inc pusha jl mov out or inc bound mov lock inc bound mov repz test xor mov xor test xor xchg xor insb mov xor stos enter cmp int3 call ja mov jmp js mov ljmp mov ljmp mov in or mov icebp or pushf mov inc arpl push sub sbbl lahf mov dec andl adc dec push mov xor xchg dec imul sbb push add jno stos (bad) in sbb push jb lods enter cmp (bad) lods enter cmp int3 jmp js mov jmp js mov jmp and pop jns mov jmp and lahf xlat adc jl out sub sti cs (bad) rcll push test (bad) cmp cld cmp mov add lret mov adc frstor cmpsb add cmp inc jg pop inc xchg or fdivl pop jnp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov lock mov xor xchg xor mov xor ret loopne sbb (bad) ss jo test cmp nop lods leave in push cmp xchg lods lret pop cmp jne scas add iret jmp and pop jp mov in or inc pop jnp mov out or inc arpl push sub (bad) sahf mov dec sbbw dec andl adc dec push notb das dec push cli push xor mov xor (bad) loopne sbb push outsl mov aaa push jo stos (bad) jecxz sbb mov or rcrl cmp nop mov in add inc bound mov inc sbbl lahf mov dec gs sahf mov dec push notb dec insb mov xor mov xor mov dec insb mov xor mov xor mov ss outsl mov cmp test cmp add add cmp pop jne scas lret pop cmp jne scas lret out and iret in or pop jns mov jmp and pop jns mov jmp and pop jns mov jmp and pop jns mov jmp and pop jns mov ljmp mov out or inc pusha jge mov out or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov out or inc popa jge mov dec add mov xor xchg xor xchg xor xchg dec insb mov push outsb mov cmp mov cmp mov cmp mov cmp jbe scas lret call jbe scas iret jmp and pop jns mov jmp and pop jp mov in or add add xchg mov in or add dec sbbl mov xor test xor xchg xor mov dec imul xor mov push outsb mov cmp mov cmp mov cmp mov cmp mov cmp xchg scas lret call jbe scas add in or mov jmp and mov in or mov out or inc pusha jge mov out or inc bound mov icebp or fwait mov inc arpl push sub jg mov dec gs sahf mov dec gs sahf mov dec push notb das dec push testl add xor mov das dec push clc add ss outsl mov ss jae lods enter cmp xchg lods lret pop cmp xchg scas lret pop cmp jne scas lret pop cmp xchg scas lret call jbe mov in or mov in or inc pop jl mov out or inc pop jl mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa sbbb dec sbbl test xor xchg xor xchg xor xchg xchg into add data16 int inc arpl adc mov dec test notb xor mov xor xchg ss outsl mov cmp test add add stos enter cmp nop lods leave out pop cmp xchg add inc pop jge mov out or inc popa jle mov lock inc bound mov inc sbbl sahf mov dec sbbw dec push movsb rcr push xor mov push insb mov xor (bad) ss outsl mov aaa push jno lods leave out and shr or inc pusha jl mov (bad) repz mov dec push notb das dec imul mov xor (bad) ss jo test aaa push jo stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp int3 jmp ja mov add ljmp mov jmp and pop jp mov in or mov in or sub test xor mov xor xchg push insl mov xor (bad) loopne sbb push jo test cmp nop lods leave out and jbe scas lret call ja mov jmp and jns mov in or mov in or inc popa jge mov dec sbbw dec test notl mov aaa push jno test cmp (bad) stos enter cmp xchg scas lret call ja scas int3 call ja mov jmp js mov ljmp mov ljmp mov out or inc popa jle mov lock add add sub sbbl sahf mov dec sbbw dec xchg test loopne sbb push jo test cmp stos (bad) in sbb lods leave in push cmp xchg lods lret pop cmp xchg scas lret es pop jl mov out push sub sbbb dec sbbl adc dec push stc push xor mov push insb mov cmp (bad) lods leave out pop cmp jne scas lret call ja mov shr or inc pop jl mov out or inc pusha jge mov out or inc sbbl sahf mov dec test notb das dec push notl dec push mov xor mov push jae lods leave in and jne mov ljmp mov dec andw dec imul mov add jbe scas int push and pop jns mov in or inc pusha jge mov icebp movntps sbbl mov xor mov ss jo test cmp (bad) lods enter cmp nop lods lret pop cmp jne scas int3 jmp js mov out or inc popa jge mov lock inc arpl mov dec gs sahf mov dec add cmpsl ret loopne sbb vpaddd aaa push jo lods leave out pop cmp xchg scas lret out and int3 jmp jnp mov in or inc arpl mov dec gs sahf mov dec push movsl rcr pop xor add cmpsb ret sbb (bad) cmp nop lods leave out and ja mov jmp jp mov out or inc bound mov das dec imul (bad) jecxz sbb stos enter cmp nop lods leave in and jne mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc popa jle mov dec sbbl mov xor insb mov xor (bad) loopne sbb push outsl mov pop cmp xchg lods lret and jne scas iret in or mov in or inc pop jl mov out or inc pusha jge mov add adc dec andw dec push clc push xor mov cmp add push jno stos enter cmp nop lods leave out pop cmp jne scas lret out and int3 call ja mov jmp jnp mov out or inc pusha jl mov out or inc popa jge mov icebp or pushf mov adc add mov ss je scas lret and pop ja mov jmp jns mov jmp and pop jp mov in or mov out or inc adc in and mov clc sub (bad) std cs pop add arpl int3 add scas ljmp inc jl out sub rorb inc cmpl add push aam cmp loopne dec cmpb or movsl faddl adc jns out push (bad) (bad) repnz in sbb das popfw roll or mov and pop (bad) ss fcoml sub out dec jp in dec xchg imull pusha xchg (bad) bound mov xchg ret in sbb iret cld sub scas fisttpll cmp mov movsl sar sub test xchg ret sub mov (bad) outsl popf int3 cld sub mov popf int sub mov or fs mov mov mov mov lahf roll sub sub sbbl mov xor xchg push insl mov push cmp xchg scas lret and mov out or inc popa jle mov dec sbbl mov sbb push jo stos (bad) jecxz sbb scas int3 add add push and pop js mov jmp and pop jp mov out or inc popa jle mov icebp push sub (bad) lahf mov dec imul lea cmp (bad) lods leave out pop cmp jbe mov ljmp mov out or inc popa jle mov dec add sbb push jo test cmp (bad) stos enter cmp nop lods lret and int push and pop jns mov in or inc pusha jge mov dec gs sahf mov dec test notl xor xchg xor mov aaa push add scas lret call jnp mov out or inc bound mov inc sbbl mov xor outsb mov cmp stos add add out and int3 jmp jns mov in or mov out or inc arpl mov dec sbbw dec imul lea cmp (bad) lods leave out and pop js mov jmp and pop jnp mov out or inc popa jle mov icebp add xor mov fldt pop lea loop jl std das bound xorb das jnp out xor out pop mov pop pop mov cld sbb push outsl mov cmp (bad) stos leave out and int3 jmp jns mov in or inc pop add adc movsl rcr sbb outsb mov cmp nop lods leave out pop cmp jne scas lret call add shr or sub jg mov dec imul mov ss outsl mov cmp (bad) lods leave out pop cmp jne scas int3 call jl mov out or inc bound mov dec sbbl mov das dec imul mov and int3 jmp js mov jmp and pop jnp mov out or inc popa jle mov dec sbbl mov xor mov xor (bad) loop sbb scas lret and into jmp and pop jp mov in add cs push notl dec push movsb rcr pop xor mov xor (bad) loop sbb push jb stos enter add push and pop jns mov out or inc bound mov dec gs sahf mov dec imul mov push outsb mov cmp xchg scas lret call js mov jmp and pop jp mov in or inc popa jge mov icebp or popf mov dec andw dec insb mov stos (bad) jecxz sbb lods lret and int3 jmp js mov in or mov out or inc popa jle mov dec push notl dec push movsb rcr pop xor outsl mov aaa push jno stos (bad) in sbb lods leave out pop cmp mov icebp or popf mov dec andw dec push clc adc movsb rcr add pop xor insl add and pop ja mov ljmp mov in or inc pusha jl mov out or inc bound mov dec sbbl cmpsl ret loopne sbb push jo test cmp nop lods lret and into ljmp mov in or inc pusha jge mov lock lahf mov xor mov ss outsl mov cmp (bad) lods enter cmp xchg scas lret call js mov out or inc popa jle mov lock popf mov dec andw dec push movsb rcr pop xor mov cmp xchg mov jmp pusha jge mov icebp push sub sbbl mov xor mov add add cld sbb (bad) jecxz add inc pusha jl mov out or inc arpl adc mov dec imul mov ss jo test cmp jne scas lret out and pop ja sbb iret add inc ja call add push cbtw leave imull pop xchg ret pop mov mov sbb push xchg mov and scas ficom sbb lods fstl inc jno fistl mov add pushf rolb inc test sti outsl cmpsl loop inc jle in and xchg lret add outsb sahf lret push aas jo ficom mov stos fstl jle repnz rorb je,pt out dec xorl inc jbe xlat or push rcll push mov cmc sub and shr or inc bound mov xor (bad) sbb push jb stos enter cmp jne scas lret call ja mov jmp and mov out or inc bound mov dec push notl dec push mov xor mov aaa push jno stos (bad) in sbb lods lret and jnp mov out or inc popa jle mov fdecstp adc dec imul mov push outsb mov aaa push jno stos (bad) out and pop ja mov ljmp mov out or inc arpl mov dec imul mov cmp xchg scas lret out and pop js mov shr or inc bound mov dec gs lahf mov add dec test notl dec push movsb rcr pop aaa push jo stos add call js mov in or inc pop jl mov out or inc bound mov dec data16 xor xchg push jo stos (bad) jecxz sbb lods leave out and int push and jp mov in or inc pusha jge mov lock mov xor xchg push add lods leave in pop cmp xchg scas lret call js mov jmp and mov out or dec gs mov xor xchg xor outsb mov cmp mov cmp xchg scas lret call js mov out or inc bound mov dec add mov xor mov add add xor (bad) aaa push jo stos (bad) in push cmp xchg mov ljmp fwait mov icebp or popf mov dec andl adc dec push movsb rcr pop xor insl mov cmp nop lods leave out and int pop and pop jnp mov lock mov push lea movsb rcr push xor mov cmp (bad) lods enter cmp int3 add or inc pop jl mov out or inc popa jle mov dec sbbl mov xor mov ss jo test cmp xchg scas lret and int3 call js mov out or inc popa jle mov icebp or popf mov xor mov add add sti sbb outsb mov ss jo test cmp xchg mov jmp js mov (bad) lock inc arpl cvttps2pi (bad) lahf mov dec imul xor insl mov cmp jne scas lret call js mov ljmp mov out or je mov ljmp mov out or inc popa jge mov icebp adc dec test notl dec push movsb rcr pop xor outsb mov lods leave out pop cmp jbe scas int3 jmp jns mov in or inc pop jl mov dec gs lahf mov dec push notl movsl ret sbb (bad) sbb push jae lods leave out and jns mov in or mov out or inc popa jle mov add add adc dec push clc adc dec imul xor outsb mov cmp nop lods lret and mov in or inc pusha jge mov lock popf mov dec test notl dec imul aaa push jo test cmp (bad) lods leave in pop cmp jne scas int3 jmp jns mov in or mov out or inc sbbl mov xor mov add pop jne scas int3 call jns mov jmp and mov repnz sub mov dec insb mov xor vpaddd cmp mov pop ja mov jmp and pop jl mov dec test notb xor xchg add sbb cmp (bad) lods leave in pop cmp xchg scas int3 jmp jns mov in or inc arpl cvttps2pi (bad) lahf mov xor mov xor (bad) jecxz sbb pop jne scas lret call js mov out or inc arpl mov dec test notb dec push movsb rcr sbb outsl mov cmp (bad) lock inc bound mov push outsb mov cmp nop lods lret es pop jl mov add adc dec imul cmp xchg scas iret jmp and mov push jo stos lret call js mov out or inc andl push jno lods lret jmp jp mov lock movsb rcr sbb push jno scas int3 in or add add sbbb xor int pop and pop jle mov push outsb mov ds jns mov in or inc popa jle mov lock sub dec imul ss jno stos leave jmp jns mov repnz ret loope and jp mov out push sub andl push outsl mov cmp stos leave out pop cmp jne scas int push and pop jl mov out or inc scas fdiv adc dec imul xor mov aaa push add lret and iret jmp and mov dec sbbl mov xor (bad) out and js mov in or inc bound mov dec push test cmp nop lods lret add add add inc pusha jge mov lock andl dec push movsb rcr sbb push jb lods enter ds jns mov lock test xor add and pop jns mov in or inc pusha jge mov notl xor lea inc sbbb dec xchg cld sbb push jae mov ljmp mov in or inc pop jl mov out or inc data16 mov xor xchg xor mov xor (bad) add xchg mov ljmp mov lock andl dec imul lea cmp stos (bad) in push cmp xchg scas int3 jmp jns mov out or inc popa jge mov lock add sahf mov dec push clc push xor push jno stos enter cmp nop lods lret and pop jnp mov in or mov lock fwait mov add xchg push insb mov aaa push jno stos (bad) in and lret call jp mov in or mov inc arpl push sub sbbl mov xor xchg push jo stos (bad) jecxz sbb push jae lods lret call ja mov add or inc bound mov icebp cvttps2pi mov xor mov aaa push jno stos (bad) in sbb lods enter cmp xchg scas lret call js mov icebp or popf mov add add adc mov dec imul xchg aaa push jo stos (bad) jecxz sbb push jae scas lret call jbe mov out or inc popa jle mov hlt adc dec imul jne mov jmp jns mov jmp and mov dec push cmpsl (bad) aaa push jo stos (bad) jecxz sbb push jno stos (bad) jecxz sbb pop jns mov jmp and pop jns mov lock inc bound mov dec andw dec imul mov cmp xchg scas int3 call ja mov in or mov lock popf mov dec gs lahf mov dec push clc push xor xchg push outsl mov jecxz pop cmp iret jmp and pusha jl mov out or inc bound mov inc arpl test xor xchg xor (bad) loopne sbb push jo test cmp stos (bad) jecxz sbb push add scas lret call jbe scas int3 call jp mov in or inc pop jnp mov in or inc pusha jl mov out or inc bound mov inc arpl mov inc arpl adc dec push notb das dec push notb cs test notb xor xchg push outsb mov sbb push jb mov jmp jl mov out or inc popa jge mov lock fwait mov inc sbbl mov cs insl mov add add xor insl mov ss jo lods leave in pop cmp xchg scas lret es pop jnp mov add movntps andl push insl mov ss outsl mov cmp mov push je lods lret pop and mov inc andl movsb rcr pop xor mov cmp ja mov jmp ja mov jmp ja mov ljmp mov lock inc mov sbb mov clc adc dec imul push xchg (bad) and pop jp mov in or inc pusha jl mov lock fwait mov mov aaa push jae lods leave in push cmp nop lods leave out pop cmp jne scas lret pop cmp jne scas int3 jmp js mov in or mov in or mov in or inc pop jnp mov in or inc pop jnp mov pusha cwtl (bad) sbb push add scas int3 call jl mov out or inc popa jle mov dec mov mov mov adc cmpsl in push test lods ficom dec jg jmp pop xchg into add jp jecxz dec (bad) mov ljmp gs aad xor xchg enter xchg ret push xchg scas fisttp inc jno roll add fs (bad) imull pop mov mov movsb rcr pop xor insl mov ss outsl mov aaa push jno stos (bad) out and pop ja scas int3 jmp ja mov jmp and pop jns mov ljmp mov in or inc pop jnp mov in or add inc pusha jg mov dec sbbl lahf mov dec sbbw dec test notb das dec push (bad) sbb push jo test cmp nop lods enter cmp (bad) stos (bad) in sbb stos (bad) in sbb stos (bad) in sbb lods lret pop cmp xchg lods lret pop cmp pop jns mov ljmp mov in or inc pop jl mov out or inc popa jge mov out or inc sbbb sbbl popf mov xor xchg push insl mov xor insl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb stos add (bad) in sbb mov jmp ja mov jmp jp mov in or inc pop jl mov out or inc pusha jl mov in or inc pusha jl mov add adc dec push cmc adc dec push notl dec push mov xor xchg xor xchg xor mov ss jo stos (bad) jecxz sbb push jae add aas pop jns mov jmp and pop jnp mov out or inc popa jge mov out or inc sbbb sbbl mov add dec imul xor mov xor outsb mov cmp test cmp (bad) stos enter cmp (bad) lods leave out push cmp nop lods leave in and add add lret out and iret in or mov in or inc pop jnp mov std sub mov lret jb loopne dec xchg negl cmp jp mov in or inc pop jnp mov out or inc popa jge mov lock inc bound mov icebp or popf mov dec gs sahf mov dec imul xchg add push outsl mov in and (bad) repnz stos in pop push mov clc sub xchg lret add push pop stc cs popfw rorl inc jle in daa bound xchg lods enter cmp xchg mov jmp jge mov out or inc bound mov inc sbbb dec sbbw dec push add add xor xchg ss outsl mov cmp mov cmp nop lods leave out pop cmp jbe scas int3 jmp js mov ljmp mov out add sub andw dec push clc adc dec push movsb rcr push inc mov das insl mov push jo int xor sti sub repnz mov xor mov xor stos (bad) in sbb lods leave out pop cmp jne lods lret pop inc pop jns mov jmp and pop jns mov jmp and pop jp mov and fistpl ja roll add push jb stos enter cmp xchg scas lret in or inc pop jl mov out or inc popa jle mov lock pushf idivb jno loopne (bad) (bad) sbb add data16 lahf mov dec push aaa pop jbe scas lret call js mov ljmp mov in or mov out or inc popa jle mov lock pushf mov dec test fdivrp pop xor insl mov ss outsl mov aaa push jo test cmp lea cmp xchg scas lret and jne scas lret call ja mov ljmp adc mov aam aas js incl jle mov icebp push sub mov xor in dec mov mov into jmp and pop jnp mov add movntps sbbl mov xor mov xor mov xor insl mov xor (bad) ss outsl mov cmp (bad) stos enter cmp nop lods lret pop cmp jne scas lret and int3 call ja mov jmp ja mov in or mov in add sub sbbb data16 lahf mov dec push clc adc dec push mov xor sar outsl mov (bad) push xor mov xor (bad) loop add cmp jne scas lret and pop ja mov jmp and jle mov lock imul jbe scas int3 jmp js mov jmp and pop jp fwait mov inc sbbb push insl mov ss push aas jne out jb shlb xchg shll inc add add pushf mov dec sbbl divl imul es mov icebp daa push mov repnz (bad) push mov mov (bad) push dec xchg add jae in pop cwtl iret adc (bad) pushl jae roll aaa addr16 rolb or insl test mov mov iret add addr16 (bad) or sbb sbb xchg (bad) cli xor (bad) adc scas loop dec test lret jb cld xor sahf rorb aas ja ljmp pop mov mov and mov sub jae lods leave out pop cmp jne scas lret out and int3 jmp pusha jl mov out or inc andw dec imul mov xor add push outsb mov aaa push jo test cmp (bad) stos (bad) in and int push and pop jp mov in or inc pusha jge mov lock pushf mov dec sbbl movsb rcr sbb outsb mov ss outsl add and jbe scas lret call js mov jmp and pop jns mov in or mov dec sbbw dec push notl xor movsb rcr pop xor push jno stos (bad) jecxz sbb lods lret and pop jns mov jmp and pop jp mov in or mov in or inc pop jnp mov out or inc popa jle mov fprem1 adc dec xchg stc push xor mov ss outsl mov add sbb push jb stos enter cmp int3 jmp mov cs xchg lret jle mov lock pushf mov inc sbbl mov xor mov push insl mov cmp (bad) stos enter cmp xchg lods lret add mov in or inc pop jl mov out or inc popa jle mov inc andl dec imul xchg push insb mov aaa push jno stos enter and pop js mov jmp daa inc pusha jge mov lock sub sbbb dec gs lahf mov dec andl adc dec push clc adc dec add cmpsl (bad) in push cmp nop lods lret and pop ja mov jmp add and pop jns mov in or mov icebp dec jo test cmp jne mov jmp and pop jp mov in or inc pop jl mov out or inc popa sbbb gs lahf mov dec push notl xor mov xor vpaddd cmp mov and pop ja mov jmp js mov in or pop jp mov out or inc bound mov inc sbbb dec data16 lahf mov dec push notl dec push add aaa push jno lods lret pop cmp jne scas lret out and int push and pop js mov ljmp mov in or mov out or das dec imul xchg sbb insl mov cmp stos (bad) jecxz sbb push jne scas lret and pop js mov out or inc pusha jge mov out or inc popa jle mov lock inc sbbb dec data16 ss jo test cmp xchg scas lret and jne mov jmp jns mov in or inc add mov dec imul mov cmp (bad) mov jmp js mov jmp and pop jns mov in or inc pusha jge mov lock popf mov xor xchg ss jo stos (bad) in sbb lods lret and jne scas lret out and int3 jmp jns mov jmp and popa jle add dec push add clc push xor mov aaa push jo stos (bad) in sbb lods lret pop cmp jne scas lret jmp jnp mov lock sub sbbb dec push stc push xor insl mov cmp xchg scas int push and jl mov dec andl dec imul mov cmp stos (bad) jecxz sbb scas int3 call jnp mov out or inc sbbb dec push clc adc dec push test cmp nop lods leave out and add in or popf mov dec test notl dec push movsb rcr push xor mov xor (bad) jecxz sbb mov jmp pusha jge mov add or inc bound mov dec gs mov das dec push stc push xor mov ss jae scas lret and jne scas int3 call ja mov in or inc pusha jl mov dec imul mov cmp nop lods leave out pop cmp xchg scas lret and int3 call js cltd mov out or inc popa jle mov lock mov xor movsb rcr pop xor mov xor enter cmp jne scas lret call ja mov in or inc add mov das dec imul mov cmp nop lods lret and pop js mov in or mov icebp push sub sbbb add add adc cmpsl ret loopne sbb push outsl lea cmp mov cmp (bad) lods leave out pop cmp jbe mov jmp es pop jnp mov in or inc pusha jge mov lock inc bound mov icebp push sub jg mov dec sbbw dec push mov xor mov xor ret loopne sbb push jb lods leave out add inc pop jns mov jmp and pop jnp mov icebp push sub sbbb dec sbbw dec imul mov cmp mov cmp jns mov add or inc bound mov icebp movntps (bad) sahf mov dec andw dec push stc push xor mov aaa push jno stos add (bad) jecxz sbb xchg mov in or inc pusha jge mov icebp push sub (bad) lahf mov dec andw dec push movsb ret loopne sbb push jo stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out and int pop and pusha jl mov dec insb mov xor (bad) in sbb lods leave out pop cmp jbe mov ljmp add dec push mov cmp xchg scas int3 ljmp mov movntsd test xor mov cmp (bad) lods enter cmp nop lods into jmp and pop jnp sahf mov dec test clc adc dec imul xor (bad) jecxz sbb push je scas lret call jle mov add aad cvttps2pi andl ss jo stos (bad) in sbb mov in or mov out or inc popa jg mov dec imul mov aaa push jo test cmp nop lods leave out and jbe scas lret ljmp mov dec insb mov xor (bad) ss outsl mov cmp (bad) lods leave in push cmp js mov ljmp mov lock inc sbbb dec data16 xor mov xor (bad) sbb jne scas int3 ljmp mov out or add (bad) sahf mov dec test notl xor mov xor insl mov ss jo test add add out and iret in or mov (bad) cvttss2si (bad) mov xor xchg cltd mov out or inc popa jge mov dec push notl dec push movsb ret loopne sbb push outsl mov ss outsl mov pop je mov in or mov dec sbbw dec andl adc test jecxz sbb lods leave in push cmp pop js mov ljmp pop mov pushl xchg rorb inc jae fisttpl inc cmpl aam or pushf mov dec sbbl cmpsl (bad) loopne sbb push outsl mov pop cmp jbe scas int push and pop js mov ljmp mov in or add add sub jg mov inc sbbb add xchg xor xchg xor mov xor enter cmp xchg lods lret pop cmp jne scas lret and int3 jmp js mov jmp and pop jnp mov in or inc arpl push sub sbbb dec andw dec imul xchg push add stos leave out pop cmp jne scas lret and int push and pop jns mov jmp and pop jns mov in or inc pop jl mov out or inc sbbl sahf mov xor xchg xor mov push outsb mov xor add add mov cmp mov cmp (bad) lods lret add cmp xchg lods lret pop cmp je lods add jmp and mov aad push sub test xor mov das dec imul xchg xor xchg xor xchg aaa push jo test aaa push jo test cmp mov cmp mov (bad) xor inc jae fist inc jne aad das arpl xorl bound jge ficom aas outsl lahf roll arpl xchg roll dec cmpb sbb mov mov sbb mov fcoms mov imulb pop xchg int inc mov add ljmp xchg add jno fistp push mov cld ss in pop (bad) lret or ret jb in push cltd rorb aas jnp lds js,pt jmp aam dec mov clc xor ljmp mov (bad) cmp push pop xchg rorl dec mov or icebp cs mov cli xor movsl out pop fwait loopne pop (bad) add push out popa mov leave add cmovb fmuls cmp fsts dec cmpb imull pop mov cmc sub xbegin cli xor cmp jecxz pop xchg int cmp bound lret test cmc xor jo call inc jge jmp pop xchg aad dec mov int3 (bad) ss xlat adc mov (bad) dec xchg add cmp call and jecxz pop lcall inc cmpl fistl push mov cld xor lret fs rolb aaa je fldl push xchg push inc test and sub rorb cmp aaa imul pop mov hlt sub lret pop inc jae ficoml inc jp loope dec jge fisttpl adc push push xchg rolb cmp cmpsb loope inc jne aam cmp lret cld cs nop lret push pop mov cmp mov cmp xchg mov in or inc pop jl mov out or inc pusha jl mov lock sahf mov notl sub jle mov lock xor xor jnp mov in or inc pusha jge mov lock inc bound mov dec sbbl add dec push notl dec push test loope sbb push jno stos (bad) jecxz sbb lods leave out pop cmp jne scas lret out and int push and pop jns mov (bad) lock mov add cvttps2pi (bad) sahf mov dec push notl dec push movsb rcr pop xor insl mov ss jo test cmp int pop xchg mov icebp or popf mov dec sbbw dec push clc adc dec imul aaa push jno stos (bad) in sbb lods leave out and pop js mov jmp and mov out or inc popa jle mov lock mov xor xchg xor mov xor (bad) sbb push jno add bound mov dec imul mov xor outsb mov aaa push jno stos (bad) in sbb lods lret and int3 jmp arpl adc xor mov xor outsb mov aaa push jo test cmp (bad) lods leave in pop cmp xchg mov jmp and pop jp mov in or inc pusha jge mov icebp or popf mov dec sbbw dec push clc adc push outsb mov cmp (bad) lods enter cmp xchg scas lret call ja mov jmp and pop jp mov in or inc popa jge mov repz mov dec push notl dec push movsb rcr pop xor mov add loopne sbb push outsl mov cmp xchg scas int3 call js mov in or inc pop jl mov out or inc arpl cvttps2pi (bad) lahf mov dec push clc adc test leave out and add out or inc popa jge mov inc sbbl mov xor xchg push jo stos (bad) in sbb lods lret and pop js mov in or inc popa jge mov lock pushf mov dec data16 xor mov ss outsl mov cmp (bad) stos enter cmp xchg scas int3 jmp js mov jmp daa inc popa jge mov lock lahf mov dec push notl xor xchg add add (bad) push xor mov aaa push jo test cmp jne scas int3 call ja mov ljmp mov in or inc js fistl inc js push es bound mov cmc adc dec push (bad) sbb les in push cmp xchg scas lret out and int push and pop jns mov in or inc pusha sbbb dec push cli push xor mov cmp mov cmp nop lods lret and into ljmp mov lock popf mov dec test xor mov ss push inc jbe out inc jae (bad) or sbb mov vmovaps mov rolb outsb mov add in es fwait roll outsb mov rorb jp repz in and mov int dec test iret or ret imull pusha xchg int jnp,pt out sub stos in push xchg roll mov jbe mov inc sbbb xor mov cmp mov cmp (bad) stos enter cmp xchg lods lret and pop js mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or inc pusha jl mov out or inc popa jle mov cvttss2si (bad) sahf mov dec sbbw dec test notb xor xchg push outsl mov aaa push je scas lret out and jbe mov jmp js mov in or add cwtl mov out or inc bound adc data16 lahf mov dec imul cmp stos (bad) jecxz push cmp xchg lods lret pop cmp jbe mov jmp jns mov jmp and pop jnp mov lock sub sbbb dec addl rcr sbb stos enter cmp mov xchg mov in or inc pop jl mov hlt adc mov dec test notb xor mov xor mov xor insl mov xor enter cmp (bad) lods enter cmp nop lods lret and int3 jmp js mov jmp and pop jp mov in or inc bound mov lock inc bound mov lock popf mov add hlt adc mov dec push mov xor xchg xor (bad) aaa push jo test aaa push jb stos (bad) in sbb push jb stos (bad) jecxz sbb stos enter js mov in or mov out or inc pusha jl mov (bad) hlt adc dec push fdivrp sbb (bad) aaa push jo stos (bad) in and pop js mov ljmp mov in or inc pop jl mov lock inc arpl push sub sbbl mov xor mov push insl mov adc lcall imul mov aaa push jno stos (bad) call jns mov in or inc pusha jl mov out or inc arpl add dec test stc adc movsl ret sbb lret call js mov in or inc popa jle mov repnz sub gs lahf mov dec imul mov cmp (bad) stos leave in pop cmp xchg scas lret call ja mov ljmp fwait mov das dec imul mov cmp nop lods lret and int or inc popa jg mov dec test stc push xor mov aaa push jno lods lret and pop js mov in or inc popa jge mov dec imul mov cmp jne scas int3 call jl mov out or inc bound adc dec imul add add (bad) pop ss jo stos enter cmp int or inc pusha jl mov push xchg mov out or inc popa jle mov repnz sub test xor mov xor (bad) cmp stos enter aas pop jp mov in or inc pusha jge mov lock inc bound mov dec add mov xor add scas int3 call js mov out or inc arpl adc dec push cmpsb (bad) aaa push jb lods leave out and (bad) cmovbe jnp mov out or inc popa jle mov dec imul xchg xor xchg dec imul xor mov ss jo test aaa push jo test cmp add jae lods lret and int3 call ja mov in or inc pusha jl mov repz andw dec test notb das dec push notl xor xchg dec insb mov xor jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods enter (bad) cvttsd2si andl xor add out and jbe mov in or inc popa jle mov icebp push sub test xor mov cmp (bad) lods enter cmp jbe mov ljmp mov repnz sub (bad) lahf mov dec imul xor outsb mov cmp mov pop ja mov ljmp mov dec test testl adc dec imul aaa push jno stos enter cmp xchg scas lret out and pop js mov out or inc bound mov dec data16 lahf mov dec push mov xor (bad) in push cmp xchg scas lret and shr or inc pusha jle mov dec andw push outsb mov cmp jne xchg mov lock add aas pop jp mov out or inc sbbl cmpsb ret loopne push cmp into out push mov (bad) inc jp out dec xchg push aas outsl mov nop mov int3 add mulb subl sahf fmull aas jno fcoms inc je fistl inc insl pushf int sub xchg enter sbb add mov out or inc popa jle mov lock inc popa jle mov inc sbbb dec push mov xor xchg xor xchg dec imul xor mov xor ret jecxz sbb push jb stos enter cmp nop lods leave out and jne scas lret out and int3 jmp add mov lock inc bound xchg push outsb mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp nop lods leave out and int3 call jnp mov out or inc pusha jge mov out or inc bound mov inc bound mov inc sbbb dec sbbl mov xor add add xchg push insb mov xor (bad) loopne sbb push outsl mov aaa push jae lods leave in push cmp xchg lods lret and jne mov jmp js mov jmp and mov out or inc sbbl mov xor mov xor insl mov cmp stos (bad) jecxz sbb push jae stos enter and pop js mov out add sub gs sahf mov dec data16 lahf mov dec test notl dec imul mov cmp xchg lods lret pop cmp jbe mov jmp js mov ljmp mov in or inc pop jnp mov in or inc pusha jl mov icebp push sub sbbb add add add sub gs sahf mov dec imul mov jne loop dec xchg (bad) decl cwtl mov dec andl adc dec push mov xor insl mov cmp stos (bad) jecxz and jne scas lret call jnp mov out or inc popa jle mov out or inc bound mov inc sbbb dec gs sahf mov dec push (bad) sbb push jb stos enter and pop js mov sbb and xor inc jl loop dec xorb (bad) xor xlat sbb cmc cmp loop dec jle call hlt sub leave add mov mov ficoml dec test aad arpl test clc adc movsl rcr sbb outsb mov aaa push jo stos (bad) jecxz sbb lods lret and jns mov in or inc lods out andb insl mov ss outsl mov cmp mov cmp xchg scas iret in or inc pusha jge mov out or inc bound mov jbe in push xchg aam inc jg divl gs (bad) adc movb mov add xchg add daa push xchg roll adc mov add imul push mov mov scas fmull add jno jecxz (bad) sbb cmpsb ret (bad) sbb (bad) sbb push jo stos (bad) jecxz sbb push jb stos enter cmp leave out pop popa sahf fcoml cmp add mov xor out sub popf (bad) jno xlat or js sbb (bad) ret stc pop mov mov push inc jns fisttpl sub aad cmp rolb fs rolb imul add or mov movl es xchg int cmp test push pop cltd aam inc jge repnz ficomp push mov add jnp ljmp xorl clc xor (bad) imulb sub lret fs (bad) std xor ficom sbb test aam dec test add divl pop sahf fsts dec mov add les inc cmpb imul sbb fcompl pop lcall dec add aas jg (bad) cmp scas lock and add add ja jmp pop popf xlat adc in bound (bad) cmp out insb stos incl mov rorl dec xchg loope push (bad) (bad) imulb pop mov fimull dec outsb mov aaa push jo test cmp (bad) stos enter inc pop jnp mov out or inc popa jge mov icebp push sub sbbl sahf mov dec andl adc dec push sti pop xor insl mov xor insl mov cltd fsts inc ja jmp popa mov xchg mov in add sub sbbl movsl rcr pop xor insl mov ss outsl mov cmp nop lods leave out pop cmp jbe scas int3 jmp js mov out or inc bound add sub sbbl mov xor xchg push insl mov aaa push jo lods leave out pop cmp int pop and pop jp mov in or inc pusha jge mov lock pushf mov dec gs lahf mov dec insl mov ss jo test cmp nop lods leave out pop cmp jbe scas int3 jmp jns loopne sbb push jno stos (bad) in and pop ja mov ljmp mov out or inc arpl adc or mov push push (bad) and and test aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret pop ds js mov add add addr16 add jno jmp add lods call std xor rorb inc jge repz rolb jo notl lcall sbbl lahf mov dec push stc adc movsl rcr pop xor outsb mov cmp outsb mov cmp nop lods lret and pop js mov jmp and mov out or inc popa jle mov icebp push sub sbbl movsl ret sbb (bad) sbb push jb stos leave in pop cmp jne scas lret call jp mov in or inc add mov roll push pop fwait cmc and pop ja mov jmp and mov out or inc sbbl movsb rcr sbb push jb lods enter cmp jbe scas int3 jmp jp mov in or inc pusha mov (bad) xor stos enter cmp xchg mov in or inc pusha jl mov out or inc bound mov dec gs lahf mov in daa bound loopne sub jg mov dec imul xor enter stos fistpll pop js mov jmp and pop jp mov in or mov in or inc pop jl mov hlt adc mov dec test notb das dec push notb xor xchg push insb mov xor jo stos movl pop js mov jmp and pop sahf fstpl push stos lret call ja mov ljmp mov in or inc pusha jge mov hlt adc add mov dec push mov xor insl mov xor (bad) aaa push jo stos (bad) in sbb mov ljmp mov out or inc bound adc data16 lahf mov dec push clc adc movsb rcr sbb push jb stos enter cmp xchg scas lret call ja mov jmp and mov in or inc pop jl mov out or inc bound mov dec imul mov xor (bad) in push cmp xchg lods lret call jns mov in or mov dec add mov xor xchg push outsb mov aaa push jo test cmp xchg scas lret jmp add inc pop jl mov out or inc popa jle mov icebp cvtps2pi (bad) lahf mov dec push clc adc movsb ret jp (bad) dec mov movntps (bad) sahf mov dec push clc adc movsb rcr pop xor insl mov ss outsl mov cmp mov jmp jp mov in or mov sti inc xchg dec insb mov xor outsb mov cmp scas lret call js mov jmp and pop jnp mov out or inc bound mov dec sbbw dec push movsb ret sbb lret call ja mov add or lahf mov dec imul mov xor (bad) add add cmp xchg mov ljmp mov lock sahf mov dec push notl xor mov ss jo lods lret call jns mov in or inc pusha jge mov lock sahf mov dec test notl dec push movsl ret sbb lret and int pop and pop jnp mov out or inc bound adc push insl mov aaa push jb lods enter aas pop jp mov out or inc arpl cvtps2pi test xor jno stos leave out and pop ja mov ljmp mov dec sbbl mov sbb (bad) sbb scas lret call jnp mov out or inc add lahf mov dec imul aaa push jo stos (bad) in push cmp xchg lods lret and int pop and pop jnp mov out adc dec push clc adc cmpsb ret jecxz sbb mov out or inc bound mov dec test sti pop xor outsb mov cmp xchg mov ljmp mov in or mov lock pushf mov dec push notl xor mov cmp (bad) lods enter cmp nop lods lret and pop js mov jmp es arpl push xor mov cmp nop lods leave in push cmp nop lods lret and add out or inc bound mov icebp push sub sbbb dec addl add xor (bad) in sbb lods lret pop cmp jne scas lret out pop cmp jne scas lret out and jne scas lret out and pop jge mov inc arpl adc rcr pop xor mov cmp stos (bad) in sbb push jno stos enter cmp int3 call jp mov out or inc pusha jge mov out or dec data16 das dec imul mov cmp mov cmp nop lods lret out and into jmp and pop jns mov jmp and pop jp mov in or mov icebp push sub sbbl mov xor add sbb push outsl mov cmp add ds ja mov jmp js mov ljmp mov out or inc sbbb dec data16 mov xor mov cmp xchg scas lret and jne scas int3 call js mov ljmp mov out or inc bound mov push outsb mov aaa push jo test cmp stos (bad) in sbb scas lret and pop jns mov in or popf mov dec insb mov xor mov xor (bad) cmp mov cmp (bad) lods leave in pop cmp js mov in or inc pusha jge mov lock inc bound mov inc sbbl mov xor (bad) loopne sbb push jae lods enter cmp nop lods leave out and int push and pop jns mov ljmp mov lock fwait mov dec sbbw dec andl adc dec push stc adc mov xor mov xor jo test cmp (bad) stos enter cmp jne scas lret out and pop ja mov jmp js mov jmp and pop jp mov out or inc bound mov lock popf mov dec gs lahf mov dec test notb xor mov xor mov aaa push jno lods leave out pop cmp iret in or inc popa sbbl mov push xor mov add rcr pop aaa push jo stos (bad) jecxz sahf (bad) pop mov hlt sub loope inc xorb and fmuls inc jge out dec cmpl cld xor cmpsl fisttpl inc jl hlt cs hlt adc dec test notb das dec push stc adc movsl rcr sbb insl mov cmp (bad) stos lret and jbe scas lret call jbe scas lret call jbe scas int3 call ja mov jmp jnp mov out or inc pusha jge mov dec sbbl lahf mov dec sbbw dec andl pop xor insl mov ss outsl mov aaa push jno stos (bad) in sbb scas lret out pop cmp jne scas lret or and pop jp mov out or inc pusha jge mov out or inc pusha jge mov out or inc pusha jge mov lock inc popa jge mov inc arpl push sub sbbl dec andw dec test notb das dec test notl xor mov das dec push sti sbb (bad) sbb push jo stos enter cmp (bad) stos enter cmp xchg lods lret call jl mov out or inc bound adc dec test notl dec imul test xor mov xor (bad) cmp nop lods enter cmp nop lods leave out and jbe mov call js mov ljmp mov ljmp add and jns lcall push notl xor mov xor mov xor mov xor (bad) loop sbb pop je mov in or inc pop jl mov out or inc pusha jge mov icebp or pushf mov dec gs lahf mov dec push sti pop xor outsb mov ss outsl lea cmp xchg scas lret out and int3 call ja mov jmp jns mov out or inc pop jl mov out or inc bound push sub (bad) mov xor mov aaa push jo test cmp jne scas lret jmp js mov ljmp mov out movntps sbbl lahf mov add add mov add test cmp (bad) lods enter cmp (bad) lods enter cmp nop lods leave out push cmp xchg lods lret pop cmp js mov jmp and pop jp mov out or inc arpl mov dec push movsb rcr push xor mov cmp mov cmp shr or inc pop jl mov lock inc popa jle mov dec push movsb cld sbb push jb stos enter cmp xchg scas lret in or inc sbbl mov xor (bad) and lret jmp jl mov lock inc arpl fcompl pop lea (bad) pop nop ret cli das imul call jecxz inc jbe fmuls inc jne jecxz add and (bad) hlt es mov (bad) repz xor xchg xor mov dec insb mov xor insl mov xor insl mov cmp (bad) lods enter cmp nop lods leave in push cmp nop lods leave out and jne scas lret out and int3 call jge mov lock inc bound mov inc arpl push sub sbbl sahf mov dec gs sahf mov dec imul xchg xor xchg dec insb mov xor mov xor mov cmp stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jae lods enter cmp jne scas lret and add cmp int3 call jp mov in or add dec sbbl sahf mov dec test notb das dec push sti sbb (bad) loopne sbb vpaddd cmp mov cmp (bad) lods enter cmp nop lods leave out and jns mov jmp and pop jp mov in or inc pop jnp mov in or inc pusha jl mov out or inc pusha jl mov out or inc bound mov hlt adc mov dec imul xchg dec imul ss outsl mov aaa push jo lods leave in pop cmp nop lods lret and int push and pop js mov ljmp mov jmp add add pop jp mov out or inc arpl cvttps2pi (bad) lahf mov add mov dec imul xor insl mov xor insl mov cmp stos enter cmp (bad) lods enter cmp (bad) lods enter cmp xchg lods lret and jne scas lret out and adc cmpsl fmuls inc jb (bad) inc jnp loop dec xorb or sahf mov dec andw dec push std sbb push outsl mov cmp mov cmp nop lods leave out pop cmp xchg scas lret out and pop js mov jmp and pop jge mov lock inc bound mov inc arpl int3 jmp jns mov in or inc pop jl add add inc arpl mov dec push movsb rcr add push jae lods leave in pop cmp jne scas int3 call jp mov in or inc pop jl mov out or inc bound adc dec imul mov ss jo stos (bad) in sbb lods lret and int3 jmp jl mov out or inc sbbl inc jg jmp loope inc jne out dec jge adc push jae lods leave in push inc pop jns mov in or pop jp mov in or pop jnp mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov hlt adc data16 lahf mov dec sbbw mov vcomiss int push outsl mov loope sbb push jo test aas pop js mov in or mov add push sub sbbl mov xor mov xor std das jle mov add inc popa jle mov lock inc arpl movntps sbbl sahf mov dec data16 sahf mov dec imul xor mov xor insl mov ss outsl lea aaa push jno test cmp lods lret pop cmp jne lods lret pop cmp jne lods leave out pop cmp xchg lods lret and jne scas lret and je scas lret and pop js mov jmp and pop jns mov in or mov jmp and pop jp mov in or inc pusha jl mov in or inc pop jl mov inc arpl adc gs sahf mov xor xchg xor xchg dec insb mov ss outsl mov aaa push jo test aaa push jo test cmp test aaa push jo test aaa push jo stos leave out pop cmp nop lods leave out pop cmp nop lods leave out and xchg ljmp push jnp fimul outsl mov mov scas loop dec jle std cmp jmp sbb lret or mov icebp sub out pop xchg rorb inc cmpl jmp mov lods jmp add cmp out sub dec mov add outsb movsb loop pusha xchg add lret add jnp clc sub dec test or mov lock jecxz pop lahf ficomp push xchg iret push dec mov add inc test add xor mov xor (bad) aaa jne in and pop sahf fcoms inc je in pop xchg rcll push xchg rorb dec mov loope inc jbe icebp sub cltd rclb push mov (bad) cmp mov jo,pn call sbb into push cmp cmpsl in pop cltd xlat adc or sti xor ljmp (bad) int aas add xor out gs sbb aad dec mov add jne jmp imul mov loope dec cmpb inc jp rep scas frstor sahf (bad) or (bad) imull bound xchg lret push gs (bad) inc outsl add cltd int cmp movsb fisub xchg adc mov and loop push xchg iret or sar ja imull arpl aad sbb cmovns (bad) mov outsl test ficom xchg or js divl xchg aam dec mov or scas and inc ja loop dec (bad) mov repz push ljmp fistl dec xchg rorl inc mov icebp cs nop rclb dec mov add jns icebp xor jecxz popa lcall popa cwtl iret or jns in pop pushf aam push (bad) push dec test jmp sbb dec mov add mov repnz out popa lcall push mov pop inc jl stc cmp fmull aas outsl test and int3 or mov sbb add ret ja imulb pop nop fstps mov lock pushf mov dec gs sahf mov dec test clc adc movsl add in sbb lods leave out pop cmp js mov jmp and pop jnp mov in or inc popa jge mov icebp or popf mov dec sbbw dec push mov ss outsl mov aaa push jo stos (bad) jecxz sbb lods leave out and jbe mov jmp jns mov in or inc pop jnp mov dec gs sahf mov dec push clc adc movsb rcr pop xor outsb mov aaa push jo stos (bad) jecxz sbb mov jmp jns mov in or inc popa jle mov icebp push sub sbbl add sub mov dec imul mov cmp mov ds ja mov ljmp mov out or inc popa add adc dec push sti sbb (bad) aaa push jo stos (bad) in push cmp nop lods leave out pop cmp jne scas lret jmp lcall push jb scas lret call js mov jmp and mov out or inc popa jge mov icebp push sub sbbb dec gs lahf mov dec insb mov cmp stos leave in pop cmp jbe scas int3 jmp jns mov jmp and pop jp mov lock inc bound adc dec imul xchg dec insl mov cmp mov add add add ds ja mov jmp jns mov out or inc sbbl shr or popf mov dec sbbw dec imul sbb push jne scas int3 jmp repnz mov adc js repz (bad) hlt and and jne loop push xchg cmc sub cwtl int3 ljmp data16 rorb aaa insl mov movsl xlat push inc jbe pop ss fistp mov hlt es mov pop dec jge in dec xchg inc pop jl mov dec push notl xor xchg xor mov ss outsl mov pop push jno lods leave out pop cmp xchg lods int pop and jns mov jmp and mov in or inc pusha jl mov lock add pushf mov dec sbbl mov xor xchg xor xchg xor mov xor mov xor insl mov and jne scas lret and jne scas lret and jne scas lret and lret call ja mov jmp js mov in or inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc arpl mov inc arpl mov dec push notb das dec test notl dec (bad) loopne cs test notl dec push mov xor mov cmp stos (bad) jecxz sbb push jb lods leave out push cmp xchg lods lret pop cmp jne add ds ja mov ljmp mov out or inc pusha jge mov out or inc popa jle mov lock inc popa jle mov icebp or fwait mov inc arpl adc dec insl mov nop (bad) adc vpaddw aaa push jo test aaa push jo test ss jo test aaa push jo test cmp int3 jmp ja mov jmp js mov ljmp mov jmp and pop jns mov jmp and bound mov icebp or mov xor xchg push insl mov ss outsl mov cmp stos (bad) jecxz and jbe scas lret call ja mov jmp jp mov in or inc add add cltd mov out or inc popa jle mov lock lahf add scas int3 call jns mov in or mov lock popf mov dec andl adc dec push lcall push jno stos (bad) jecxz add cmp int3 call ja mov jmp js mov ljmp mov ljmp mov out or inc pusha jge mov out or fwait mov inc arpl mov inc fs sahf mov dec sbbw dec push mov xor mov dec insb mov xor insl mov xor ret loopne sbb (bad) in sbb lods lret pop cmp je lods lret and int3 call ja mov jmp jns mov in or inc bound mov dec sbbl mov xor mov xor mov xor xchg xor (bad) jecxz sbb add aas pop js mov ljmp iret sbb stos loope jp adc dec push movsb shl sbb push jb stos enter cmp nop lods leave in and jne scas lret call jbe scas int3 call jbe scas int3 call jns mov jmp and pop jp mov in or inc pop jnp mov in or inc pop jl mov out or inc bound mov lock inc bound mov dec andw dec push notl xor mov xor mov dec insb mov xor insl mov cmp lea cmp mov cmp (bad) stos enter cmp (bad) lods enter cmp nop lods leave in pop ds ja mov jmp js mov jmp and pop jp lcall arpl adc dec push sti sbb push jo test cmp lret call ja mov ljmp mov in or inc pop jnp mov out or inc popa sbbb test xor xchg adc dec push movsb rcr pop xor insl mov aaa push jno stos (bad) in sbb lods lret call jl mov out or inc bound cvttps2pi (bad) lahf mov add adc dec imul mov xor leave in pop cmp jne scas int3 jmp js mov jmp and pop jnp mov out or inc popa jle mov icebp or popf mov dec push mov xor mov ss jo test add pop ja mov ljmp mov in or inc pop jl mov icebp push sub (bad) sahf mov dec push clc adc cmpsb ret sbb push jo stos (bad) jecxz sbb lods leave out pop cmp jne mov in or mov out or inc popa jle mov lock pushf mov dec data16 lahf mov dec push clc adc push outsb mov aaa push jo stos (bad) jecxz sbb lods leave in add add cmp xchg scas lret call js mov jmp mov fmuls cmp add or outsl mov sahf aad aas jbe (bad) add addr16 lret pop lea mov sbb daa pop mov (bad) jb,pt fistp push xchg shrl call adc push outsb mov cmp xchg add inc pop jnp mov in or inc pop jnp mov hlt adc dec test xor mov xor mov xor outsb mov ss outsl lea cmp xchg lods lret pop cmp jbe scas int3 call jns mov in or mov lock dec sbbl sahf mov push insl mov ss outsl mov aaa push jo test add add lcall cmp stos (bad) jecxz sbb push jb stos (bad) in sbb mov ljmp mov lock (bad) lahf mov dec push notl dec push movsb rcr push xor mov aaa push jo test cmp mov cmp xchg lods leave out and pop ja mov in or add sbbl sahf mov dec push mov xor mov xor insl mov cmp xchg scas lret out and pop js mov jmp jl mov out or inc arpl mov dec push clc adc movsl (bad) cmp mov aas pop jns mov jmp daa inc andw dec push test loop sbb push jno stos movb add lcall push jne scas lret out and int3 call js mov out or inc sbbl lahf mov push insl mov cmp (bad) scas int3 call ja mov ljmp mov movntsd test xor mov xor mov push insl mov sbb stos enter inc cmpsl or (bad) jae ficom dec xorl cmpsl (bad) cmp mov cmp xchg lods lret ljmp mov dec push clc adc dec insb mov xor vpaddd aaa push jo test cmp test cmp jbe mov ljmp mov dec andw add add dec imul mov xor insl mov cmp nop scas lret call jp mov in or inc bound mov icebp cvttps2pi (bad) sahf mov dec imul mov aaa push jo stos (bad) jecxz sbb push jb lods enter ds js mov ljmp mov lock add aaa push jno stos (bad) jecxz sbb push jae lods leave out lcall lods enter cmp xchg scas lret pop cmp jne lods lret pop cmp jne mov in or inc pop jl mov in or inc pusha jge mov out or inc popa jge mov out or inc popa jge mov lock inc bound (bad) sahf mov dec imul xchg xor mov xor mov xor insl mov aaa push jno stos leave out pop cmp xchg lods lret pop cmp xchg lods lret and int3 jmp ja mov jmp js mov inc jle cld daa inc stos stc sub sub lcall dec test notb xor xchg push outsb mov cmp xchg mov ljmp mov out or inc pusha jge mov icebp push sub sbbl mov das dec imul mov cmp (bad) lods leave out pop cmp jne scas int push and pop jns mov in or jae scas lret out and inc pop sbbl mov xor mov add cmpsb ret sbb (bad) sbb push jb stos enter cmp xchg scas lret and jp mov in or inc pop jl mov out or inc bound mov inc fs lahf mov dec push notl dec push movsb (bad) aaa push jo stos (bad) jecxz sbb lods leave out pop cmp pop jp mov in or inc pusha jl mov out or inc bound mov dec push clc adc movsb rcr pop xor insl mov ss jo test cmp (bad) stos enter cmp xchg scas lret out and pop jp mov out or inc popa jge mov lock pushf mov dec data16 lahf mov push movsb rcr pop xor insl mov adc dec push stc push xor mov add add ss outsl mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp xchg mov ljmp mov jmp and pop jp mov in or inc pusha jge mov out or inc bound mov inc sbbb dec imul mov xor insl mov push cmp nop lods lret pop cmp jne scas lret call js mov out or inc popa jge mov lock pushf mov dec gs sahf mov dec andw dec push clc adc cmpsl ret loopne sbb push jo stos (bad) in sbb scas lret call js mov in or mov out or inc popa jge mov hlt adc movsb rcr pop xor outsl add sbb push jno lods leave out and int3 jmp js mov in or inc pusha sbbb dec test clc adc dec imul xor insl mov and mov out or inc popa jge mov lock dec push notl xor mov xor xchg xor add sbb push jno stos (bad) in push cmp nop mov ljmp mov jmp and mov in or inc pusha jge mov out or inc bound mov inc arpl mov aam adc movsb rcr push xor mov xor mov xor (bad) loopne sbb push outsl mov ss jb lods enter cmp add add ljmp mov in or mov in or inc pop jl mov out or inc popa jle mov lock sbbl sahf mov dec gs sahf mov dec data16 mov cs test notl xor movsl rcr pop xor mov xor mov xor insl mov xor lods enter cmp xchg lods lret das push outsb mov aaa push jo test cmp stos (bad) in sbb lods leave in push cmp xchg scas lret and jbe mov in or inc pop jl mov out or inc popa jge mov lock pushf mov dec sbbl lahf mov dec xchg cli push xor mov add loop add cmp jne scas lret call ja mov ljmp mov out or inc pusha jge mov out or dec gs lahf mov dec test notb das dec imul xchg xor mov ss jo test cmp jne scas lret out and int push and pop js mov jmp and mov out or sub sbbl mov xor mov xor (bad) aaa push jo test cmp mov cmp jne scas lret call jnp mov in or inc pusha jl mov out or inc popa jle mov das dec push movsb rcr pop xor mov xor insl mov cmp popl add stos enter cmp add aas pop js mov ljmp mov jmp and pop jns mov jmp daa inc pusha jl mov out or inc popa jge mov out or inc popa jle mov out or inc bound mov inc arpl push sub sbbb dec imul xchg xor xchg dec imul xor outsb add sbb scas lret call jbe mov ljmp add jp clc sub mov sbb scas ficomp dec jnp loopne inc jno xlat push inc jnp icebp sub or popf mov dec sbbw dec insb mov xor (bad) loop sbb push jb lods enter inc pop jp mov in or inc pop jl mov lock inc arpl test xor jmp jp mov in or inc pusha jge mov dec test notb das dec imul xchg push insl mov aaa push jo test cmp xchg scas int3 jmp js mov jmp and pop jp mov in or inc popa jle mov lock pushf mov dec addl sbb (bad) sbb push jb stos enter cmp jne scas int3 call js mov jmp and pop jnp mov out or inc popa jle mov dec andl adc dec imul mov aaa push jo stos (bad) jecxz sbb push jb lods leave in pop aas pop js mov add add or pop jp mov in or inc pusha jl mov lock sub mov dec imul mov cmp nop lods leave out pop cmp jne scas lret call jns mov in or inc popa jge mov icebp or popf mov dec test xor xchg clc xor sbb stos enter cmp nop lods lret pop cmp jne scas lret out and int3 call gs sahf mov dec gs sahf mov dec data16 mov das dec push notb das dec push notl xor mov xor insl mov inc cmpsb jmp mulb sub lret pushl pop xchg ret dec (bad) mov xor js mov ljmp mov add icebp push sub jg mov dec sbbl lahf add fdivr adc mov xor xchg aaa push jo test aaa push jo stos (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in sbb scas lret out and lret jmp ja mov jmp js mov ljmp mov jmp and pop jns mov jmp daa inc pusha jge add sub ret repz pop lcall imull pop mov mov ret insb lods in and pop lcall inc cmpl sub fistp cwtl rorb dec mov mov and into add and stc cmp je out add add add fmuls xchg stc sub push mov sti xor rorb inc test mov xor in data16 aad push mov pop inc add aas jbe lock mov rorb inc xchg push xchg aam dec jl jmp push push xchg rorb dec cmpl sbb mov (bad) adc (bad) (bad) jl,pt in daa imul mov sub cmpsb in pop xchg (bad) adc movl imul pop lahf ficomp add ficoml dec mov add jp hlt das outsl lods out movsb ficomp pop xchg rorb dec mov add mov out das jo jecxz popa sahf fcoms push xchg leave (bad) xor stos in sub out mov ret add mov loopne push xchg rorl xor arpl daa pop xchg xlat adc cmp ljmp mov adc fwait (bad) adc movsb aad xor les cld sub xchg (bad) push test mov cld xor ret repnz ljmp dec test movb test ficomp xchg rcll push mov add cmp lock ficomp push mov or mov xor movsl in pop xchg iret cmovl stos loop dec cmpl or ret jge divl outsl test add and (bad) adc sar outsl lods ljmp xchg rorl test (bad) cmp hlt outsl mov imul movsl aad aas jge in and dec xorb sbb pop stc inc mov cmp (bad) stos enter add push aas pop jns mov jmp and pop jp mov in or mov in or inc pop jl mov out or inc pusha jge mov add adc gs sahf mov aas pop jp mov out or inc bound mov inc sbbb dec andw dec push clc adc dec outsl mov cmp (bad) stos enter cmp xchg lods lret and pop ja mov ljmp mov in or mov out push sub sbbl mov sbb vpaddd cmp stos enter cmp jne scas lret call ja mov in or inc pusha jl mov out or inc bound mov arpl cvttps2pi sbbl dec push add add adc dec insl mov aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret out and int push and pop jp fwait mov dec test notb xor movsb rcr push xor mov xor outsb mov ss outsl mov cmp mov cmp int push and pop jns mov jmp and pop jp mov out or inc das push jne scas lret out and int push daa inc popa jle mov out or inc popa jge mov out or inc bound (bad) lahf mov dec sbbw dec data16 lahf mov dec push stc push xor mov dec imul xor mov dec insb mov xor insb mov cmpsb ret sbb outsl mov aaa push jo stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos movb pop and jns mov in or mov in or mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jg mov inc bound mov lock inc bound mov dec sbbl sahf mov dec push notb xor xchg xor mov dec imul sbb push outsl mov aaa push jo test loope sbb push jno lods lret pop cmp jne lods lret and jbe rolb cmp xor iret ljmp pop (bad) mov mov mov add adc mov pushf int3 (bad) cmp iret pop jno,pt aad dec jle jmp pop xchg int3 and mov cmp xchg scas lret and int3 jmp jge mov fdiv adc dec test notb das dec imul mov xor (bad) ss outsl mov cmp jne scas lret out and int3 jmp js mov jmp and pop jp mov in or inc pusha jge mov lock inc arpl mov dec push clc adc dec push movsb rcr pop xor mov sbb lods leave out pop cmp jne scas lret call jl mov out or inc bound mov dec fs sahf mov dec test notb xor mov add (bad) push xor mov pop xor (bad) ss outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp (bad) scas int3 call ja cwtl mov in or inc pop jl mov in or inc pusha jge mov lock fwait mov inc arpl mov dec test notb das dec push notl xor test xor xchg xor xchg xor mov push outsl mov aaa push jo test aaa push jno stos (bad) jecxz sbb push jno xchg scas lret call jbe mov jmp jp mov in or inc pop jl mov out or inc pop jl mov in or inc pusha jl mov out or inc pusha jl add inc pusha jge mov out push sub sbbl sahf mov dec sbbw dec andl adc dec cmp pushf mov dec xchg dec push mov sbb push jb stos enter cmp pop scas pushl arpl xchg enter push arpl adc mov sub pop xchg rorb adc (bad) mov mov (bad) hlt and daa pop lea (bad) sti das pusha xchg lret (bad) das bound mov mov lods fist inc jae aam cmp leave sti sub xor inc jbe out and cmp loopne dec xorl mov and into add adc add add xor ficoml addl sahf aam dec mov sti cmp call sbb mov sbb mov sbb sub clc sub cmpsb loopne push mov int aas jne in push mov sti cmp adc scas hlt xor call lds mull push jl aad cs xchg mov cld sub test notb xor mov xor xchg xor xchg xor mov xor (bad) lods enter aas pop js mov ljmp mov ljmp mov in or mov in or inc pop jnp mov out or inc pusha jge mov inc sbbb gs lahf mov dec gs sahf mov int xor add add leave sti cmp (bad) cmp (bad) mulb bound jp fist jg add mov sub fcoml push xchg aam inc mov (bad) ss icebp sub loope pop popf aad cmp dec mov pushl imul std xor push pushf aad aas jne cmc sub sbb (bad) stc sub dec (bad) mov jmp arpl aam push mov or (bad) ret add jbe cmc xor in pop popf fcompl push pop push inc cmpb das imul (bad) divl je call and adc iret or sahf int inc (bad) mov jecxz push xchg rorl inc jnp std outsl lods in sub sbb mov push aas jl and dec xorb sbb jle in add add push xchg into add pop mov ret cmc sub rolb aaa insb lahf iret add inc jo roll cmp fstl dec test sub dec xchg icebp sub lods call adc inc mov push inc sahf fstpl push mov or add ja repz imul (bad) adc lret jns testl outsb mov sub fistpl dec test out xor jmp sbb lret or xor out data16 int dec test in popa sahf fcoml cmpb pop push xchg (bad) adc leave add (bad) ret insl test mov leave (bad) xor and mov (bad) adc or cld xor jmp imul enter add mov jmp pusha sahf fcoml cmp ficomp push mov out bound cmpsl loopne pop xchg rorb dec mov incl mov call sbb iret or (bad) movb (bad) mov jmp imul into push dec xchg lods in sub push mov imull xchg rorl test add add add dec imul aaa push jno test cmp mov cmp (bad) lods leave in push cmp nop lods lret and jne scas lret call jns mov in or leave adc fwait mov lock fwait mov inc arpl mov inc arpl push sub test das dec push notl xor mov xor mov add movsl ret pop xor insl mov xor (bad) loopne sbb push jb stos (bad) in sbb push jb add ds ja mov jmp js mov ljmp mov in or mov out or inc popa jle mov lock pushf mov dec gs jmp ljmp pop xchg add or mov lret cld sub ret push mov mov mov push push mov imull push test call or push rorb inc jbe loope pop xchg leave sti xor push js,pt clc sub sbb cmpsb aam xor mov mov mov mov imull sub out daa pop xchg int3 (bad) xor add xchg ret addr16 (bad) sti cs rorl aas ja out dec jl fist jb,pt fimull jo,pt into std sub mov add push test scas ficom inc jb roll xor movsb fmuls cmp int das pusha xchg ret pop xchg mov mov mov mov mov daa pop xchg roll inc jle repnz scas jmp cmc sub popf rolb xor pushf rolb cmp adc jle in and mov mov das fs iret add push push mov cmp dec gs lahf mov dec push clc adc movsl ret sbb (bad) dec mov push jb lods leave out and jp mov in or inc pop jge mov out or inc bound mov add add push sub scas push sub (bad) lahf mov dec push notl push outsb mov ss jo test cmp mov and pop jl mov out or inc popa jle mov dec sbbl mov xor mov ss outsl mov aaa push jno stos (bad) in sbb lods leave out and jns mov add push sub mov aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret call ja mov ljmp sub jle mov dec sbbl mov xor mov ss jo stos (bad) jecxz sbb mov ljmp mov out or inc popa jle mov add aam push sub sbbl movsb rcr sbb outsb mov cmp xchg scas lret and into ljmp mov add cvttps2pi (bad) sahf mov dec imul xor outsb mov cmp xchg scas lret call ja mov jmp push cltd aad cmp int inc movsb (bad) lock inc bound mov lock mov das dec push fdivrp pop xor insl mov xor insl mov ss outsl mov aaa push jo test cmp jne scas lret and jbe scas lret call ja mov jmp ja mov jmp js mov ljmp mov out or inc pusha jl mov out or inc pusha jge mov out or add daa inc pusha jge mov out or inc popa jle mov lock fwait mov inc sbbl lahf mov dec sbbw dec andl cli push xor mov xor mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb lods leave in pop cmp xchg scas lret call ja mov in or inc pop jnp mov add push sub sbbl lahf mov dec data16 lahf mov dec test notb xor mov xor mov dec imul xor mov xor insl mov ss outsl mov cmp (bad) stos (bad) in sbb scas lret out and int3 call js mov ljmp mov jmp and pop jl mov out or inc pusha jl mov in or inc pop jl mov out or inc pusha jl mov out or add (bad) lahf mov dec push stc push xor xchg push jo and outsb mov cmp nop lods leave out pop cmp jne scas lret call js mov ljmp mov inc arpl mov das dec imul xchg push insl mov xor enter cmp xchg scas lret and lret call jbe mov jmp jns mov in or inc popa jge mov lock inc data16 mov xor xchg add mov ss outsl mov cmp mov cmp nop lods lret out and jp mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc add mov xor xchg xor insl mov ss outsl mov ss outsl mov aaa push jo test cmp (bad) lods enter ds ja mov ljmp mov out or inc bound andl dec insb mov aaa push jo stos (bad) in sbb jecxz pop jns mov in or mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc arpl adc dec imul mov movsb rcr pop xor mov xor insl mov xor insl mov xor leave out push cmp nop lods leave in push cmp xchg lods lret pop cmp xchg lods lret pop cmp jne scas lret out and add cwtl mov in or inc popa jge mov lock popf mov dec sbbl lahf mov dec data16 lahf mov dec sbbw dec imul xor (bad) loopne sbb push add scas lret and jne scas lret call jbe mov call jp mov in or mov in or mov in or inc pop jnp mov out or inc popa jge mov out or inc popa jle mov repz mov dec add add lahf mov dec data16 lahf mov dec andw (bad) jecxz sbb push jb stos enter ds js mov out or inc popa jle mov lock inc bound mov inc data16 lahf mov dec andl adc add mov ss outsl mov cmp mov cmp xchg lods lret and jne scas lret out and lret out and pop js mov ljmp mov jmp and jp mov in or inc add sahf mov jne mov jmp js mov ljmp mov out or inc popa jle mov lock inc bound mov inc bound mov inc sbbl mov xor xchg (bad) adc movsb rcr push xor mov xor ret loopne sbb push outsl mov cmp mov cmp (bad) stos enter cmp (bad) stos enter cmp nop lods leave in push cmp (bad) lods enter cmp xchg lods int out or inc pusha jge mov out or inc pusha jge mov sbb push outsb mov aaa push jo stos (bad) in push cmp xchg lods lret and jnp mov out or inc popa jle mov dec gs lahf mov dec imul jb stos enter cmp jbe scas int3 in or inc pusha jge mov lock pushf mov dec test xor outsb mov cmp nop lods leave out and shr or inc popa jle fwait mov dec andl dec push mov ss outsl mov cmp nop lods leave in pop aas pop js mov in or inc popa jle mov dec sbbw dec push notl dec push mov xor mov cmp jbe mov ljmp mov in or inc bound mov dec sbbl mov xor mov aaa push jo test cmp xchg scas lret out and pop ja mov ljmp pushf mov dec data16 lahf mov mov mov mov pop aaa push popa xchg lret arpl pop hlt and mov sbb and cmp loope add add (bad) (bad) pop mov aaa push jno stos enter cmp xchg scas int3 call js mov jmp and pop jp mov icebp push sub sbbl mov xor xchg xor mov xor (bad) sbb push je scas lret call add mov out or inc popa jge mov lock pushf mov dec data16 lahf mov dec push notl xor enter cmp (bad) lods leave in push cmp nop lods lret and ja mov jmp ja cltd lcall insl mov cmp nop lods leave in pop cmp xchg scas lret and movntsd sbbl lahf mov dec test cli pop xor add push insb mov xor (bad) loopne sbb push jb lods enter cmp (bad) lods leave in pop cmp xchg lods lret and pop jp mov in or inc popa jge mov out or outsl mov mov cmpsl xlat and imul xor mov dec jo stos (bad) jecxz sbb push xchg in sub mov mov mov sbb mov mov sbb stos fdivl mov lock mov xor mov xor xchg xor mov aaa push jo test cmp mov aas pop js mov ljmp mov jmp and pop jp mov jmp and mov in or inc pop jnp mov out or inc pusha jg mov aam or pushf mov dec mov jle cmc sub lret jo in ja mov in or inc pusha jl mov out or mov dec push clc adc dec push mov xor mov xor insl mov ss outsl mov cmp nop lods leave in push cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret out and pop ja mov jmp arpl push sub sbbl sahf mov dec sbbw dec test (bad) push xor mov cmp (bad) stos enter cmp (bad) lods leave in push cmp xchg scas lret jmp ja mov jmp js mov ljmp add inc bound mov icebp or pushf mov inc sbbb dec data16 lahf mov dec test notb xor xchg xor mov dec imul xor sarl (bad) movl sub xlat adc (bad) lock mov xor mov xor outsb mov ss jo test cmp (bad) stos enter cmp jne scas lret jmp add inc bound mov inc sbbl mov das dec push notl dec push movsb add loope sbb push jno lods lret and jns mov in or mov out or inc pusha jge mov lock pushf mov dec sbbl adc dec push mov xor mov xor (bad) loop sbb push jb lods enter cmp xchg lods lret and iret in or mov out or inc pusha jge mov lock pushf mov dec gs lahf mov dec push clc adc test loope sbb push jno stos (bad) jecxz sbb sbb movsb fstps push mov lock pop xchg fistp popf fmull lret and pop js mov repnz data16 add xor xchg dec insb mov xor insl mov xor (bad) loopne sbb cmp xchg scas int3 call ja mov ljmp mov ljmp mov jmp and pop jns mov jmp and pop jns add add sub xchg xor pop dec test mov xor rolb cmp int xor inc jne fcoml inc jg loope inc je loope push mov push sbbb dec test notl dec push mov xor mov ss jo stos int3 jmp jns mov jmp and mov out or inc popa jle mov icebp push sub sbbb dec andw mov dec push mov sbb push jno stos (bad) in sbb lods lret and int push and jns mov in or mov xor xchg xor insl mov ss jo test cmp (bad) stos enter cmp add add and pop jp mov in or inc pusha jge mov lock inc arpl mov dec andw dec imul mov cmp mov cmp xchg scas lret call js mov jmp and pop jp mov in or inc pusha jge mov dec test notl dec push movsb rcr push xor mov xor (bad) sbb push jno stos enter cmp xchg lods lret and pop jp mov in or inc pop jl popf mov dec andw dec push clc adc movsb rcr push xor mov add into ljmp mov out or inc pusha jge mov lock sahf mov dec add add test xor mov ss outsl mov cmp mov cmp xchg scas lret and int push and jns mov lock inc bound mov dec sbbl mov xor mov xor xchg push outsb mov cmp xchg scas lret call ja mov ljmp mov in or inc pusha jge mov lock inc bound mov dec push stc adc cmpsb ret sbb cmp (bad) lods leave in and int push and jns mov in or inc pusha jl mov repnz data16 lahf mov xor mov xor (bad) loop sbb push jb stos enter cmp jbe mov jmp jl mov out or inc bound mov dec sbbl mov das dec push stc push xor mov push jno stos enter cmp xchg scas int3 call cmpsl (bad) aaa push jo stos (bad) jecxz sbb push jb lods enter cmp nop lods lret and jns mov out or inc popa jge mov lock pushf mov dec gs sahf mov dec andw dec push cmpsl (bad) cmp (bad) stos enter cmp xchg lods lret or mov in or inc pusha jge mov lock pushf mov dec imul mov stos enter cmp nop lods lret and pop js mov adc push jo stos add (bad) in sbb lods lret and pop js mov in or mov out or inc pusha jl mov out or inc bound mov inc arpl cvttps2pi (bad) mov xor mov xor outsb mov aaa push jo test cmp (bad) lods enter cmp xchg scas lret call jnp mov out or inc pusha jge mov out or inc popa jle mov lock lahf mov dec test notl xor xchg xor (bad) aaa push jo stos (bad) in sbb lods add jmp jnp mov out or inc bound mov dec test das dec push notl dec add test cmp nop lods lret and pop js mov ljmp mov jmp daa inc popa jle mov dec gs sahf mov dec imul mov push jo test aaa push jb stos lret and pop js mov jmp daa inc popa jge mov lock pushf mov dec gs lahf mov dec push notl dec insl mov xor (bad) ss outsl mov cmp (bad) stos enter cmp nop lods leave call jbe scas int3 call jnp mov out or inc pusha jl mov out or inc popa jge mov out or inc add mov xor mov xor (bad) jecxz sbb push jno stos (bad) jecxz sbb stos enter and pop ja mov in or lcall bound mov push insl mov cmp xchg scas lret call js mov jmp and jns mov in or mov lock sub (bad) lahf mov dec imul mov xor (bad) loopne sbb push outsl mov aaa push jno stos (bad) jecxz push cmp xchg mov jmp js mov lock inc bound mov icebp or sahf mov dec andw dec imul lea cmp stos (bad) jecxz sbb push jae lods adc mov dec push add aaa push jno stos (bad) jecxz sbb mov in or mov lock inc arpl adc movsb in cmp add lock mov fist push xchg and sbbb out and loop sub test pop insl scas call aad push mov loop inc jge in pop push xchg xabort pop sahf loopne inc jbe fmuls inc ja jecxz dec test mov sbb test mov es xchg lret imul fistl dec test or mov dec imul push jno stos (bad) in sbb lods lret and jbe scas int3 jmp jge mov out or inc bound mov inc sbbl mov xor xchg cmpsl (bad) aaa push jo stos (bad) in and int push and jns mov in or mov out or add add adc dec imul mov cmp (bad) lods leave in pop cmp jne scas lret call ja mov ljmp mov in or inc pusha jl mov out or mov xor xchg xor mov ss outsl mov cmp mov cmp xchg scas lret jmp and mov in or inc pusha jge mov out or inc sbbb dec sbbw dec push notl dec imul aaa push jo test cmp mov cmp nop lods leave out pop cmp jbe scas int3 call pusha jl mov out or dec gs sahf mov dec test notb das dec imul add lcall push jb lods enter cmp jbe scas iret in or mov out or inc popa jge mov lock pushf mov dec gs sahf mov dec imul mov cmp (bad) lods leave in pop cmp jne scas lret jmp js mov jmp and pop jp mov in or inc pusha jl mov out cvttps2pi (bad) lahf mov dec imul xchg dec jp loopne dec xorl dec imul cmp nop lods lret and int3 jmp js mov in or inc pop jnp mov in or inc popa jge mov lock test popa jge mov lock popf mov dec andw adc dec imul jno stos (bad) in sbb mov jmp inc test sub mov ss jo test cmp (bad) lods leave out and jne scas lret out and shr or inc pusha jl mov out or inc popa jle mov lock fwait mov inc sbbb dec sbbl mov xor xchg xor xchg xor insl mov xor (bad) aaa push jo lods leave in pop cmp je scas lret and js mov jmp and pop jns mov in cmp inc arpl adc data16 lahf mov ss jo test loop sbb push jae lods enter cmp xchg lods lret pop cmp jne scas lret call add mov inc arpl adc dec push mov xor xchg xor mov xor mov and sar addr16 pop cmp int push and jns mov in or inc pusha jl mov out or inc arpl cvttps2pi (bad) lahf mov dec push sti sbb outsb mov cmp mov cmp xchg scas lret call jns mov jmp and mov lock dec sbbw dec push movsl rcr sbb outsb mov cmp mov cmp nop lods lret sub mov xor add push jb lods enter cmp xchg scas lret call add xchg mov jmp and mov out or inc popa jle add insb mov aaa push jo stos (bad) in sbb lods lret and int push and jns mov in or inc pop jl mov cvttsd2si (bad) lahf mov dec push clc adc movsl ret sbb (bad) sbb push jb stos enter cmp xchg mov jmp and pop jnp mov in or inc pusha jge mov lock popf mov dec andw dec imul aaa push jno stos (bad) in sbb lods lret and int pop and pop jp mov lock inc arpl cvttps2pi sbbl push insl mov push cmp xchg scas lret out and add pop js mov jmp and mov out or inc popa jle mov inc add cmpsb ret (bad) sbb push outsl mov cmp nop lods leave out and int3 jmp js mov jmp and mov out or dec sbbl mov xor xchg ficom dec jle out dec jge ljmp dec xorl mov daa bound int inc add aad xor and (bad) insb sahf aam cmp divl push xchg rcll dec test in sub aam dec jg hlt xor ja clc cmp divl pop cltd xlat adc les cmp scas icebp sub leave cli sub mov lods in dec (bad) mov add add jb fistl dec mov add jne divb imul scas in push mov add cmovs in sub inc mov or mov (bad) cmp mov das insb cmpsl loope pop lahf ficoml dec (bad) leave or mov out data16 fcoml push xchg int3 add mov out sub (bad) cld cmp jmp and dec mov add insl mov cmpsb loope dec (bad) mov out pop fwait rorl inc cmpl ret add divl pop mov sub ficoml push xchg add jp repnz loop push xchg rolb add movb jae out sub ficoml push xchg add jns in sub mov int3 add test sti xor pop mov rorb cmp fstl dec test add add cmp in daa pusha fstps push (bad) (bad) or mov out push xchg rorl inc (bad) ret jl std cmp ljmp mov stc xor pop push (bad) rorl das imul cmpsb loopne dec xchg in lahf rolb aaa add mov sbb es mov or mov sbb int3 add jo fistl inc jl out push xchg stc ss jmp adc xchg int3 pop inc jge stc xor pop xchg lret or mov loope mov into add sub mov iret push dec cmpl pop add (bad) pushfw rorb cmpb and fistl push mov add xor loope pop lcall ss out es pushf fistl add mov pop inc jnp cmc xor sub adc cmp in and push (bad) mov sub jb repz out das insl scas out daa movsb fstpl push xchg rorl dec mov or dec (bad) int3 push dec (bad) into or (bad) rorb dec (bad) aad pop cltd fadds and daa mov jecxz test movsw in arpl out data16 daa pop mov add adc dec jle cmc cs rorb dec mov cli xor cmp out popa cwtl iret or jb ljmp xchg ret jne mov out or inc arpl cvttps2pi (bad) sahf mov xor xchg push insb mov xor (bad) ss outsl nop lods lret and jbe scas lret arpl idivb jno repz nop (bad) pop mov rolb cmp (bad) or lahf iret add jno xlat or jnp in inc je aam cmp fisttpl ja sub mov jmp and mov in or inc pop jl mov out or inc pusha jl mov out or dec sbbl adc xor mov xor insl mov xor insl mov xor ret loopne sbb push outsl mov outsl stos loop push xchg lret add push rorl inc jns out dec (bad) mov pop dec jns fimul inc mov sbb jl mov out or inc pusha jge mov cmc adc dec test notl dec imul outsl mov ss jo test aaa push jo test loope sbb push je lods leave out pop cmp nop lods leave out pop cmp xchg scas lret call jbe scas lret call ja mov jmp js mov ljmp mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov dec sbbl test xor xchg xor xchg xor xchg xor (bad) aaa push outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) in sbb stos lret and int3 jmp js mov in or fwait mov icebp or pushf mov inc sbbb dec test cmc adc dec add test das dec test notl dec imul xchg xor xchg xor insl mov xor (bad) loopne sbb push outsl mov ss outsl mov cmp stos (bad) jecxz sbb push jno lods leave out pop cmp xchg lods leave out pop cmp jns mov jmp and pop jp mov in or mov in or inc pop jnp mov in sub mov xor insl mov xor insl mov xor ret loopne sbb (bad) loopne sbb push outsl mov cmp (bad) lods enter cmp nop lods leave in and pop ja mov jmp pusha jl mov out or inc pusha jge mov out or inc bound adc add gs sahf mov dec gs sahf mov dec andl adc dec test notb das dec push notb xor rclb leave in push cmp nop lods leave out pop cmp nop lods leave out pop cmp xchg lods lret and jne scas lret and pop jp mov push xchg rcrl insl movsb fcoml pusha cltd add adc rolb jne call aad or popf mov dec xchg xor mov xor mov xor insl mov ss adc mov sbb scas ficom inc jle cmc sub rclb dec jg repnz gs into cld sub and mov sbb cltd xlat adc les add or add push int3 sti sub xchg leave cld xor add mov mov mov ljmp mov (bad) cmovne in and mov daa pop cltd rcll dec (bad) mov and (bad) imulb push pop mov xabort bound mov adc loopne dec cmpb std xor cwtl int3 add test adc xor cltd iret add imul jnp out dec cmpl ljmp jb in pop mov cli aaa outsl stos in push cmpl adc mov enter mov mov mov mov mov and lret mov mov sbb out popa popf fcoms xchg stc xor push mov add cmp rolb outsl stos out pop pushf fistp push xchg add push dec jle in and cs xchg enter lods in push mov or mov (bad) (bad) xor into or mov es lcall cmp loope dec jg loop inc ja loopne inc jnp in sub fsubl xchg (bad) std xor int cmp fisttpl inc mov add and ficomp pop xchg rclb dec mov push outsb lahf iret pushl arpl sahf rcrl add enter mov and lcall cmp in xor in pop mov or ret add les inc xchg or nop int inc test imulb jno call adc enter popf iret std sub dec test fistl inc jl out arpl enter mov and inc jge out push xchg iret add inc jge jmp sbb xchg out movsw fstl inc jge stc das imul les cmp data16 ficomp push cltd xlat cmovns mov loop pop xchg rclb dec xchg add mov pop push (bad) int3 pop aas jbe cmc xor jmp daa gs aam inc jno ficoml push mov stc xor in push mov push aas je ljmp (bad) mov fistp push mov into or mov xor fstpl dec mov add jp imull movsl jecxz push mov adc mov jmp adc xchg int3 add (bad) sti xor popa movsl out pop xchg rclb dec (bad) int dec cmpb xor jmp pop cwtl fistl dec xchg add sbb iret or mov call add push xchg int3 or add add sar imul inc add cmp fs iret or (bad) imull insb lods in and rorl inc jge cmc xor fsts dec mov add jle imulb data16 sbb cwtl fsts inc jl cmc sub pushf roll cmp dec jle ljmp mov add jp icebp sub loope pop xchg (bad) adc sar jno call adc inc xchg rorl xor mov jg call cmc sub movsl ficomp push nop int3 push inc (bad) mov hlt xor ficomp pop xchg iret or hlt sub xlat push push xchg loopne inc jg imulb bound cltd int3 push cmp mov popf into add popa xchg (bad) lock mov adc or adc adc xlat or jbe add mov (bad) imull pop mov fisttpl cmp iret add xchg (bad) repnz mov mov (bad) outsl mov fwait iret add mov mov pop push mov stc xor fist dec mov std xor fistl inc jl out pop xchg into push inc jle stc xor scas out sub rorb jbe out dec jnp in dec jl loope inc jnp call std xor inc jl out dec xorl pusha xchg enter mov mov sbb mov pop push mov imull pop xchg (bad) imulb pop xchg (bad) clc sub xor aad inc jbe loopne inc jp jecxz dec jle in push test mov (bad) pushl bound sahf rorl inc jl jmp pop xchg movb je jmp pop cwtl aam dec cmpl add add int3 push cmp add loope pop mov stc sub int dec mov std aaa jns lock lock jae lock stos call sbb mov cmovb in dec (bad) mov pop dec jle fist inc jle in push mov mov ret push test add mov pop push nop lret add sub iret add insb movsb fcoms inc jae fimull inc jns out push mov cld xor loopne push mov enter add push cmp pop cwtl rorb dec test ljmp cmpl or lods fist dec cmpb imulb bound test mov sbb test mov sbb mov adc scas ficom inc jne fist inc ja ficom dec (bad) mov add xor fistp cmp add lret jne in push (bad) jo jecxz push mov sti ss loop push rclb dec test fistl cmp jecxz push mov pushl dec stos out pop xchg lret add jb jecxz push mov clc xor adc xchg rorl inc jns jmp pop fwait aam inc jnp out and inc js ljmp jae in push pop cld cmp in push mov cli xor push mov sti xor loopne push mov std xor adc sub rorb inc ja mov aam inc jge in es xchg rorb inc jp jmp add and cmp stos loope push mov cld xor loopne push mov stc xor (bad) or test fsts dec (bad) mov add icebp sub lcall insl movsl fstl dec test clc xor ficoml dec test fcoms dec test or daa pop xchg rorl inc jp call or jnp ljmp jne out pop xchg enter cmpsl loope push mov cld xor push mov cli xor movsb fist dec mov divl outsb movsl ficomp push (bad) (bad) pushl test (bad) jb loope push mov add jno out pop xchg leave add je in pop nop movl and int inc jge out and cmp stos jecxz push mov cli xor fsts add insl mov sar outsb test sbb ret (bad) aaa jno loopne push (bad) (bad) outsb cmpsl loopne push mov cli xor fsts dec cmpl cmova pushf fadds pop dec xchg das data16 aam inc jns jmp or mov es cwtl int jb,pt in push mov cld xor movsb ficom dec cmpl or js jmp push push (bad) movl pop pop nop (bad) pushl insl test sbb sar imul stc xor dec xchg stc xor mov mov rorl inc jle repnz rorl inc jge out es pushf aam inc jle icebp daa pop xchg roll inc jns jmp pushl je jecxz push mov std xor test sbb nop leave add jae xchg int inc jp in and xchg leave add jno loope push mov divl data16 fadds sbb sar imul hlt sub or test clc xor fistl sub dec test (bad) or daa pop xchg rolb add lock rorl inc jns jmp cmova popf fmuls inc jge in and xchg into add test sbb ret insl scas adc push jno stos (bad) jecxz sbb lods enter aas pop js mov jmp and pop jp mov in or inc pusha jl mov out or inc popa jle mov lock fwait mov inc arpl adc dec push clc adc dec push mov xor mov push jo test cmp mov cmp int3 call ja mov jmp js mov jmp and pop jp mov in add pushf mov dec gs sahf mov dec push mov xor mov xor insl mov xor lds add add (bad) sbb push jo xchg scas lret and into jmp and mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov dec sbbw dec push notl dec push mov xor mov xor mov ss outsl (bad) stos leave out pop cmp xchg scas lret and lret call ja mov ljmp mov out or inc popa jle mov lock dec sbbl lahf mov dec sbbw dec push notb das dec push (bad) sbb enter cmp (bad) lods enter cmp nop lods leave in pop cmp xchg scas lret and jbe scas lret call ja mov jmp arpl mov inc arpl adc dec imul xchg push insl mov ss jno stos (bad) jecxz pop cmp xchg scas lret and jbe scas lret call jbe mov ljmp mov in or mov out or inc pusha jl mov inc arpl cvttps2pi (bad) sahf mov dec sbbw dec test notl dec push mov xor outsb mov cmp stos (bad) in sbb stos enter cmp nop lods lret and jne scas lret call pop jnp mov icebp movntps sbbl add into out or inc popa jg mov inc add arpl push sub sbbb sub outsl cmpsb in inc jg stc sbb vpaddd aaa push jo test cmp nop lods leave out and jne cmove ficom inc jl in dec cmpl in dec xorl mov lahf aam inc jbe xor mov mov sar jo jmp clc sub sbb jnp flds xor adc clc and or fs mov mov ds sahf aad cmp fisttpl inc jl in sub cmpsl (bad) push xor sub mov lods jecxz push nop ret imul add sbb sbb (bad) stc sub xchg aam push mov add xor loope push (bad) mov sbb push xchg aam dec mov pop inc test fbld pop xchg fistpl xchg roll sbb leave stc aaa jae divl ja stc xor mov xor out xor out xor in je fist (bad) mov push dec xorl mov rorl cmp fcoml dec cmpl xchg lret std cs mov cmc es xchg (bad) or jnp fisttpll outsl lcall cmp mov inc jge in es xchg lret add jae jecxz push xchg imulb fs pushl inc jl in and xchg iret or mov push pop xchg iret push cmp push xchg (bad) (bad) xor dec cmpb add jb fist dec test iret pop inc jbe in push (bad) enter add mov rorb inc ja out push mov stc das push jg add mov iret add sbb mov iret add pop pop nop (bad) std add jbe in push mov clc xor aad inc jp in push mov sti xor xlat cmovne and (bad) imul xchg int3 add jno in push mov cmc cs xlat push inc xorb add jo loopne dec xchg (bad) or jp in and cmp loopne push xchg rorl and xchg enter movsl fistl dec xorl cmpsl loopne dec sar jno fist dec test or scas out push mov sti xor fcoms dec jg in and (bad) push fistl dec cmpl or mov lock pop xchg lret add jno loope push mov stc xor fsts dec (bad) mov int3 add jae jecxz push mov iret pop aas jne call pushl outsb movsl ficom sti xor ficoml inc cmpb sbb mov (bad) push dec jge out and xchg int3 add mov and (bad) (bad) xor dec cmpl scas out push (bad) add outsl test adc sub int inc jns out push mov (bad) aaa insl cmpsb ficom dec xchg rorl aas jnp ljmp imul sub iret or stos loop push mov cli xor fstl sub rolb cmp stos loop dec xchg pop inc js call (bad) xor (bad) push inc jns jmp cld cmp loope push xchg movsl fistl dec jle out sub int3 add jno add cmpsl ficom dec cmpl or mov pop push pop cli xor xlat adc mov rorl inc jg out sub add adc or inc popa jle mov icebp push sub sbbb dec gs sahf mov dec imul xor xchg dec imul xor outsb mov ss outsl mov aaa push jo stos enter cmp (bad) lods enter cmp jne scas lret and dec jge mov inc sbbl lahf mov dec insb mov xor ret (bad) sbb (bad) loopne sbb push outsl mov aaa push jo stos (bad) jecxz sbb push je scas lret pop cmp jne scas lret add or mov in add add es pop jnp mov out or inc popa jge mov out or inc popa jle mov lock mov dec data16 lahf mov dec add ret sbb insl mov ss outsl mov aaa push jo lods leave in pop cmp nop lods lret push cmp nop lods leave in push cmp nop lods leave or sahf mov dec push notb das dec push cld sbb ret (bad) sbb (bad) loopne sbb push outsl mov ss outsl mov ss jo test aaa push je lods leave in pop cmp nop lods lret and jne scas lret out and lret call jbe scas int3 call jbe scas int3 jmp and pop jp mov jmp and pop jnp mov aam or inc bound mov inc sbbb dec sbbl mov das dec push notl dec imul outsb mov xor (bad) aaa push jo test loope sbb lods enter cmp (bad) lods enter cmp (bad) lods enter cmp nop lods leave in push cmp nop lods leave in pop cmp xchg mov jmp js mov ljmp mov ljmp mov ljmp mov ljmp mov ljmp mov in or inc pop jl mov out or inc bound mov lock inc bound mov inc arpl push sub sbbb andl adc dec andl add add add dec imul xor mov xor insl mov xor jo stos (bad) loop sbb push jo test cmp stos (bad) in sbb add ds js mov in or mov in or fwait mov repnz sub sbbl popf mov dec gs sahf mov dec gs lahf mov dec data16 mov xor xchg xor mov xor mov xor mov xor mov aaa push outsl mov aaa push jno test cmp stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp (bad) stos lret out and jne scas lret and jbe scas lret call jne xchg mov in or mov in or mov in or mov lock xchg mov (bad) sti sub sub leave or add loope pop fwait aam push xchg rcll push nop iret adc lret cmpb and aad dec jle loop inc jle imull bound mov ficom dec mov add jb icebp sub lret test fcoms inc jp ljmp xchg int3 or mov icebp das addr16 loopne pop cwtl fistp cltd outsl sar jl repz call sub call or rolb xchg std cmp out cs (bad) cmp mov lret or mov cs test adc add jge,pt lock dec (bad) lret add jnp imull insb scas in daa pop mov rcll inc xchg push inc test sti ss in sub jecxz pop pushf fistl push xchg into or (bad) (bad) aas jg cmc xor in sub adc xchg int3 add ss mov xor test adc leave add xor movsl loope push xchg aam inc or dec cmpl cld cmp sub jne repnz fstl dec mov add jbe repz aad dec mov or mov in pop pop stc das gs iret add sub in pop xchg rclb dec add lock pop xchg fcoms test add ja divl push jmp sbb int dec (bad) mov in push xchg adc dec mov add jns hlt sub pop cwtl (bad) push dec mov add jle imulb jb std cmp icebp das movsl ljmp xchg aam dec mov pop aas jg imulb imul in dec mov add je lock popa xchg movl cmp fistl out and pop ja mov jmp js mov ljmp mov jmp and pop jp mov in add inc bound mov dec andl adc dec test notb das dec imul xchg xor mov dec insb mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods lret pop cmp jne scas lret out and iret in or add pusha jl mov out or inc popa jle mov lock inc bound mov inc arpl adc dec push notb das dec push push test mov and (bad) cmc daa pop mov mov adc add lcall add sub sub xchg movl sbb fcoml xor mov ss jo test fstl roll and jl and jp mov in or inc pusha jge mov lock inc arpl mov dec sbbl lahf mov dec imul xor xchg dec imul xor mov dec insl mov xor insb mov aaa push jo test add add sbb push jo test aaa push jo test cmp mov cmp mov cmp xchg scas lret call jbe scas lret call jbe scas int3 call jbe scas lret call jbe mov jmp ja mov call jnp mov in or popf mov dec sbbl mov dec test notb das dec push loope sbb push outsl mov aaa push jo test aaa push jo stos (bad) in sbb stos enter cmp nop lods leave in push cmp xchg mov jmp ja mov jmp ja mov jmp js mov ljmp mov in or mov out or inc bound mov add lock pushf mov dec data16 lahf mov dec sbbw dec sbbw dec xchg clc adc cmpsb push push xchg (bad) stc sub and mov daa popa pushf roll xor hlt daa push xchg jecxz push xchg aam push mov hlt sub mov (bad) decl xorl in dec cmpl out and mov mov es popf fmuls cmp lret xor cmp (bad) push xor sub (bad) repz (bad) repnz roll outsb mov mov sub add sbb mov imull imul mov pushl addr16 inc jl ljmp insb mov mov and int jg,pt cld das push add imul ficom inc jnp loope push nop lret jno fimull sub aam cmp dec jne in push (bad) rorb bound jo enter js sar sub mov adc js fldt js mov ljmp mov in or mov inc arpl movntps add adc dec push mov xor xchg dec imul ss jo add cmp jne scas lret pop cmp jne scas lret and int3 adc cmpsb ficom sbb in pop cmpsb loope push xchg mov sbb stos fimull inc jge out inc jne xlat or movsb xlat or scas in dec xorl mov add jbe fistp push nop iret or mov and ret push xchg rcll dec xorl in sbb or cmp cli sub shr dec jl fisttpl cmp lret pop mov out dec jp loopne inc je (bad) add popa xchg int cmp fmull inc jl out inc jbe fcoml inc je fcoml add imul pusha xchg xbegin out inc jo into sti sub ficoml inc add xchg mov rorl je,pt (bad) inc ja in and dec xchg jecxz pop mov repnz xor leave sti cs nop (bad) repnz mov adc pop pop mov cmc daa push test mov sbb inc ja add scas out push je scas lret call js mov in or mov out or inc bound mov dec andw dec insb mov ss jo stos (bad) jecxz sbb scas lret and int pop and pop jp mov in or inc pusha jge mov lock dec test notl dec push movsb rcr pop xor insl mov pop cmp jbe mov jmp jns mov in or inc pusha jge mov dec andw add mov ss jo test cmp (bad) lods leave out pop cmp jne mov jmp jl mov out or inc bound mov dec gs lahf mov dec push clc adc cmpsb ret sbb (bad) jecxz add add cmp ja mov jmp and mov out or inc bound mov dec data16 lahf mov dec push movsb rcr pop xor mov cmp nop lods lret and int or pop jl mov out or inc arpl cvttps2pi sbbl dec insb mov ss outsl mov cmp (bad) lods leave out pop cmp jbe scas add in or inc popa jle mov icebp or popf mov dec push movsb rcr pop xor outsb mov pop cmp xchg mov ljmp mov in or inc popa jle mov lock mov xor fcoms inc jne xlat or js fist dec jle in push test icebp sbb push jb lods enter cmp xchg lods add out and mov in or inc popa jge mov lock fwait mov inc sbbb dec gs sahf mov dec andl adc movsb rcr push xor mov push insl mov ss outsl mov aaa push jo stos (bad) jecxz sbb pop jne scas lret out and int3 call jbe scas int3 jmp js mov ljmp fwait mov icebp push sub sbbl mov xor xchg xor push outsl mov ss outsl mov cmp stos (bad) jecxz sbb push je scas lret out and int3 jmp js mov jmp js mov jmp and pop jp mov in or add add sub sbbb data16 xor xchg xor xchg xor mov xor insl mov cmp nop lods leave out pop cmp xchg scas int3 jmp jns mov repnz sub gs lahf mov dec data16 lahf mov dec push mov xor xchg dec insb mov xor (bad) ss outsl mov lods leave call js mov in or inc pop jl mov out or inc popa jge mov lock mov sbb push jno stos (bad) in dec xchg imull xchg (bad) imull pusha fwait ljmp (bad) in pop cmp int or mov lock pushf mov dec andl add adc pusha popf in pop jne scas lret jmp js mov in or mov out or inc popa jle mov lock inc arpl adc mov dec imul xor mov ss jno stos (bad) in push cmp xchg scas int3 call js mov jmp and pop jl mov dec gs lahf mov dec imul mov aaa push jo test cmp ja mov jmp and popa jle mov lock sub or xchg leave call ja mov jmp add pop mov add inc pop jns sbb call icebp adc dec push movsb rcr push xor mov xor (bad) aaa push jo test cmp mov add add jecxz sbb push jae scas int3 jmp jns mov out or inc bound mov inc arpl mov dec imul mov ss jae lods lret pop cmp jne scas lret out and pop ja mov jmp and pop jp mov out or inc pusha jle mov lock sahf mov dec push movsb rcr pop xor mov aaa push outsl mov cmp nop scas lret and jne scas int3 jmp bound mov dec push notl xor mov cmp (bad) lods leave in push cmp js mov ljmp mov ljmp mov lock inc popa jle mov dec sbbl lahf mov dec sbbw add add push cli pop xor insl mov xor (bad) loop sbb push jb lods leave out and jbe scas int3 call js mov in or mov xchg out inc pusha jl mov out or inc popa sbbb dec andw dec push sti sbb enter cmp int push and pop js mov jmp and pop jnp mov out or inc popa jge mov out or inc popa jg mov dec add loopne sbb vpaddd ss outsl mov cmp lea cmp add inc pop jnp mov out or pushf mov inc arpl adc dec imul lea cmp add push jae lods lret and shr or inc sbbb dec push notl dec insb mov xor (bad) sbb push jno stos (bad) jecxz sbb pop je scas lret out and pop ja scas int3 jmp ja mov ljmp mov out or inc pusha jl mov out or inc bound mov cmc adc dec push notl dec imul ss outsl mov cmp xchg mov jmp and pop jns mov jmp and mov xor vpaddw cmp nop lods lret pop cmp jbe scas lret jmp jnp mov in or inc add popf mov dec push cmpsl (bad) loopne sbb lods int3 call js mov out or inc arpl mov dec sbbl sahf mov dec imul jb mov out or inc bound mov dec sbbl lahf mov dec sbbw dec insb mov aaa push jno test cmp mov cmp nop lods leave in push cmp nop scas int3 jmp jge mov out or inc arpl adc mov dec andw dec push stc push xor mov aaa push outsl mov pop cmp jbe mov call jns mov jmp es pop jnp mov out or inc pop jl mov out or add sbbb dec push notb das dec imul mov mov jmp add aas pop jns mov jmp and pop jl mov repz mov dec test stc push xor mov xor (bad) jecxz sbb lods lret and pop ja mov in or inc pop jnp mov in or inc pop jge mov out or inc popa jge mov out or inc popa jle mov lock pushf mov dec test notb das dec imul xchg xor xchg xor mov xor mov aaa push jno stos (bad) in sbb cmp into ljmp mov jmp and pop jnp mov in or inc pusha jge mov out or inc add movsl rcr sbb ret loopne sbb push outsl mov ss outsl mov add sbb push jb lods leave out pop cmp xchg scas int or inc pop jnp mov out or inc pop jnp mov in or ds ja mov jmp jp mov in or mov out or inc sbbb jmp jp mov in or inc pop jnp mov lock sub mov dec test notb das dec imul pop jne scas int3 call js mov ljmp mov jmp and pop jp mov in or inc pusha jge mov out or dec sbbl sahf mov dec push notl xor mov xor xchg sbb push outsl mov cmp nop lods leave out pop cmp nop lods lret and jne scas lret out and iret jmp and mov in or inc arpl mov dec gs sahf mov dec andl adc dec push stc adc movsb rcr push xor mov cmp (bad) lods enter cmp xchg lods lret pop cmp jns mov in or mov (bad) repz test xor xchg aaa push jo test cmp nop lods lret pop cmp xchg scas lret call ja mov and mov xor mov cmp nop scas lret out and pop ja mov ljmp mov in or inc pop jnp mov in or inc pusha jl mov out add sub mov dec insb mov xor outsl mov cmp add mov cmp nop lods leave in push cmp xchg scas jmp cmpl xorl sub xchg ret xorl pop repnz roll cmp xor mov loop and jns mov in or inc pop jl mov out or inc xchg ficompl jo mov in or inc popa add adc dec test cld sbb (bad) aaa push jno stos (bad) loop sbb push jno stos (bad) jecxz sbb stos (bad) in push cmp nop lods lret and shr or inc pop jnp mov out dec movsl (bad) lock mov das dec push notl dec imul mov pop cmp jne scas lret out and lret call ja add add and jns mov in or mov out or inc arpl mov inc arpl push sub sbbl sahf mov dec gs sahf mov dec sbbw dec imul xor outsb mov ss outsl mov aaa push jo test cmp xchg scas lret out and into jmp and pop jns mov jmp and pop jnp mov in or inc pop jl mov out or inc popa jge mov out or inc bound mov lock data16 lahf mov dec data16 lahf mov dec push clc adc movsb rcr push xor mov ss outsl mov add jnp mov in or mov out or inc add add cltd mov out or inc pusha jge mov out or inc bound mov mov sbbl popf mov dec gs sahf mov dec data16 sahf mov dec gs sahf mov dec push notl dec push mov xor mov dec imul xor mov xor add pop cmp nop lods leave out pop cmp xchg lods lret pop cmp arpl or ljmp dec jns fimull aas je loope dec cmpl (bad) adc fisub lods fcoml cmp sub pop out and mov adc adc mov ret add fcoms inc ja in push mov add inc ja fmuls cmp fimul aas js fistl inc jl (bad) cmp icebp das movsl jmp and fistl inc jnp repnz in pop iret or divb gs into std sub enter scas loop dec mov add outsb mov aad push mov pop inc js out fs roll cmp repnz int3 or mov and push dec mov add mov jecxz add loop pusha mov lret cmpl xor in and push xchg rorl inc mov (bad) jge,pt hlt sub movl xor stos jmp add fs fcoms insl cmpsl fcompl pop cwtl into push inc xchg imull pop sahf ficom dec mov add jb hlt sub cmpsl in pop lcall adc mov push add jg cld xor mov sub push pop cwtl fsts dec mov add jl divl jno in daa arpl fistl inc cmpl and inc jge cld aaa jb out sub and aam dec (bad) les cmp sti cmp sub cmpsl jecxz mov enter mov loope push xchg aam inc add xor loope push xchg rorb inc (bad) ret (bad) aaa jbe out sub fldl sbb sub cmp in es mov xlat adc xlat pop dec (bad) rorb dec test add xor out daa pop lahf loop push xchg rorl inc add lock loop pop xchg lret imul cld aaa jae repnz out pop pushf ficoml dec nop rorl inc jle stc xor jmp movsb fistp push add add add adc iret pop inc xchg sti cmp js ljmp jb rorb dec xchg in and (bad) (bad) cmp push xchg (bad) cld xor (bad) decb test loop sbb push jb stos enter cmp xchg lods lret and shr or inc popa jge mov icebp or popf mov dec imul xchg push insl mov xor jno stos (bad) jecxz sbb xchg mov ljmp mov jmp and mov out or inc bound mov lock pushf mov dec push mov xor mov xor (bad) loopne sbb push jo test cmp mov cmp xchg mov push jo mov out or inc popa jge mov add lock test xor xchg xor mov ss outsl mov pop jne scas lret call ja mov ljmp mov in or inc pusha jge mov lock popf mov dec push mov xor mov xor vpaddd push jae lods leave in pop cmp xchg scas int3 call js mov out or inc popa jle mov add mov xor mov xor ret loopne sbb push jo stos (bad) sbb enter cmp nop scas lret call ja mov jmp js mov ljmp mov in or inc pop jl mov out or inc gs lahf mov dec imul add dec push mov add push jo test cmp (bad) lods enter cmp xchg lods lret and jns mov in or mov out or inc popa jle mov lock popf mov (bad) cmp mov cmp int3 call jbe scas int3 call js mov ljmp mov jmp and pop jnp mov in or mov icebp push sub sbbb add adc mov xor mov xor mov ss jb lods enter cmp xchg lods lret and int3 jmp js mov ljmp mov in or mov lock pushf mov inc add sbbb dec sbbl mov dec insb mov xor insl lea cmp nop lods leave in push cmp xchg scas lret out and int3 call jns mov ljmp mov in or inc bound mov dec sbbl mov cs andl adc dec push notb das dec push cli push xor mov xor (bad) loopne add adc dec push movsb rcr push xor mov xor (bad) in sbb lods enter cmp xchg scas lret and int3 call ja mov jmp js mov jmp and pusha jge mov lock inc arpl add pushf mov dec sbbl mov pop xor mov ss outsl mov cmp nop lods leave in push cmp xchg scas lret and jbe mov jmp jns mov jmp and pop jp mov in or mov dec andl adc dec push notb das dec push stc adc mov xor mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods enter and pop js mov ljmp mov jmp and pop jns mov out or inc popa jle mov out or inc popa jle mov lock inc arpl mov inc arpl adc mov dec imul xor add ret inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov out add sub mov dec push sti pop xor insl mov xor (bad) ss outsl mov cmp stos (bad) jecxz sbb lods leave in and pop ja mov jmp js mov ljmp mov in or mov in or inc pop jl mov out or inc popa jle mov dec gs lahf mov dec andw dec push (bad) sbb (bad) loopne sbb push jo test aaa push je lods leave out pop cmp xchg scas lret pop cmp jne scas lret out and jne scas lret out and lret call jbe scas int3 jmp and pop jp mov in or mov in or mov in or pusha mov aaa jnp add jl add aad push sub mov xor insl mov aaa push jo test cmp into push and mov out or inc popa jle mov icebp or mov xor xchg push insl mov ss outsl mov cmp mov cmp xchg lods lret jmp and pop jp mov in or inc bound mov inc sbbl mov xor outsb mov cmp xchg scas int3 jmp jns mov in or inc pusha jge mov out or inc arpl adc dec imul mov cmp xchg scas add ljmp mov lock inc bound mov dec test stc push xor mov add nop scas lret es pusha jge mov lock popf mov dec push clc adc cmpsb ret loopne sbb push jno stos (bad) jecxz sbb mov jmp and pop jl mov out or popf mov dec imul xor outsb mov cmp mov inc pop jnp mov dec test sti pop ss outsl lea cmp nop lods leave out and mov out or inc bound mov dec imul xchg xor xchg xor outsl mov cmp (bad) lods enter cmp xchg mov add or mov out or inc pusha jge mov icebp or pushf mov dec push stc adc movsb rcr add cmp xchg scas int3 jmp jl mov out or sahf mov dec test notl dec imul xor outsb mov cmp (bad) lods enter cmp jne scas lret out and int push and pop js mov jmp and pop jns mov in or mov lock popf mov dec push notb xor xchg xor mov xor lods enter cmp xchg mov in or inc popa jge mov out or inc bound mov inc arpl push sub sbbl lahf rcll nop lods leave out and int3 call jns mov jmp and pop jp mov in or inc pusha jge mov lock fwait mov dec data16 pop xor mov xor mov ss outsl mov cmp nop scas lret and pop ja mov out or inc popa jge mov lock inc popa jle mov icebp or fwait mov inc arpl adc dec sbbl adc dec insl mov ss outsl mov aaa push jo stos (bad) jecxz sbb push jno test cmp (bad) stos enter cmp pop jns mov in or inc popa jge mov lock dec sbbl lahf mov dec data16 lahf mov dec data16 lahf mov dec data16 add adc dec push mov xor mov xor outsb mov aaa push jno stos (bad) jecxz sbb lods enter cmp int3 jmp pusha jl mov out or inc popa jle mov lock pushf mov sbb (bad) cli cmp test or jle adc mov in or inc pop jl mov out or inc popa jge mov lock pushf mov inc arpl push sub sbbb dec push clc push xor mov push insl mov ss jo test cmp mov add shr or inc pop jnp mov in or inc pop jl mov out or inc bound mov inc sbbl sahf add add mov add mov fadds xor popf int cmp cmp cld sub test movl sbb or mov divb ja cmpsl loope inc xorb icebp sub int jbe repnz cwtl iret or mov call add mov rorb xlat and iret add jae out es popf ficomp push xchg aam inc test std ss hlt outsb mov and pop fwait (bad) adc xchg aam dec xchg add inc or repnz jmp movsb loope push test ljmp mov (bad) stc sub rolb je loopne pop cwtl iret add mov clc xor mov es mov int cmp mov movsw in pop cltd fistl push xchg rorb xor add jecxz push xchg xlat pop push nop rorl inc test add jns repz stos call adc dec xchg cli cmp out sub in mov lret push in sub ficomp push mov or add jp imull imul adc pop inc jne cmc xor in pop xchg rcll dec (bad) mov hlt xor fcoml push (bad) (bad) jl lock movsb loop pop xchg iret cmovl mov enter stos out pop mov rorl dec popl xlat adc int3 pop inc jle sti xor icebp sub in pop mov rorb inc cmpl in push mov clc cs aaa jbe out es sahf fcoml nop int jge,pt repz stos out pop popf fistl dec xchg sti add add cmp in sub loopne pop (bad) push pop xchg rorb cmpl fcoms dec mov std xor fwait aad push xchg rcrb push mov add xchg cmp xchg mov ljmp mov in or mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov dec push notl dec push mov xor xchg dec insb mov xor insl mov xor (bad) jecxz sbb push jb xchg scas int3 call js mov jmp and pop jp mov in or mov out or inc pusha jl mov out or inc sbbl lahf mov dec test notb das dec push notl add add dec insb mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos leave out pop cmp xchg lods lret out and lret jmp js mov out or inc popa jge mov lock pushf mov inc sbbb dec sbbl lahf mov dec push mov xor mov xor adc push notl dec push movsb rcr push xor mov ss jo test cmp xchg scas lret call ja mov in or inc pop jnp mov out or inc pop jl mov out or inc pusha jl mov movntsd sbbl sahf mov dec gs sahf mov dec data16 lahf mov hlt adc dec test notb das dec imul xor mov xor mov xor insb mov xor insl mov xor ret (bad) sbb push jae lods leave in pop cmp xchg scas lret and jne scas lret and jne scas lret out and lret call jbe mov in or mov out or inc popa jge mov out or inc popa jle mov inc bound mov inc arpl mov dec andl adc dec test testb xor mov xor outsb mov aaa push jo test loop sbb push jo stos lret pop cmp jne scas fsubl pop mov int3 add jp in push test mov adc add add add iret pushl pusha xchg (bad) push (bad) fmull inc jg loope push test mov xlat or jmp jns mov in or mov out or inc popa jle mov notb xor xchg xor mov ss outsl mov cmp (bad) lods leave in pop cmp xchg scas int3 jmp js mov out or inc popa jle mov icebp or sahf mov dec imul mov xor outsb mov cmp xchg scas lret out and int push and jns add inc sbbl mov xor xchg push jno stos (bad) in sbb lods leave out pop cmp jne scas int3 call jns mov iret jmp and mov repz (bad) mov in or inc pop jl mov in or inc pop jge mov out or inc popa jle mov icebp or pushf mov inc sbbb dec test xor xchg xor xchg dec insb mov xor mov xor insl mov cmp (bad) stos enter cmp jne scas lret out and int3 jmp js mov ljmp mov jmp and pop jns mov out or inc popa jge mov lock pushf mov dec sbbl mov push insl mov xor jno stos (bad) jecxz sbb push cwtl out data16 in sub push notl dec push mov add add dec push mov xor outsb mov cmp xchg scas lret and pop ja mov ljmp mov in or inc pop jl mov out or inc popa jge mov out or inc bound mov dec andl adc dec push stc adc movsb rcr pop xor mov xor outsb mov adc test xor mov xor vpaddd aaa push (bad) lods int3 jmp jns mov jmp and mov icebp or popf mov dec sbbl sahf mov dec add adc dec push movsl rcr sbb (bad) jecxz sbb push jno stos (bad) jecxz sbb lods leave in pop cmp jne scas lret call add add pop ja mov jmp and pop jp mov in or inc sbbb sbbl sahf mov dec data16 lahf mov dec sbbw dec andl adc movsb rcr push xor mov push insl mov xor ret loopne sbb (bad) ss jb stos (bad) in sbb stos enter cmp (bad) lods enter cmp nop lods leave out push inc mov and pop js mov jmp and pop jg mov inc sbbb dec gs lahf mov dec sbbw dec addl rcr push xor mov cmp mov cmp (bad) stos enter cmp nop lods leave in push cmp xchg add cmp jne scas lret out and iret jmp and pop jp mov in or inc pusha jge mov out or inc popa jle mov icebp push sub sbbl sahf mov dec imul xor mov push insb mov xor mov ss outsl mov aaa push jo test cmp xchg lods lret pop cmp mov jmp and pop jp mov out or inc bound mov dec sbbl dec insl mov ss jo test cmp mov cmp xchg scas lret and int push add inc pusha jge mov out cvttps2pi sbbl dec cltd cmc and pop js mov jmp and mov in or inc popa jle mov lock pushf mov dec push notl dec push mov xor xchg xor mov xor mov dec imul ss outsl mov ss jo test aaa push jo test cmp mov cmp (bad) stos (bad) in sbb scas lret call jbe scas lret call jbe scas lret out and lret and lret call ja mov in or pop jp mov in or mov in or mov in or mov in or mov in or sub (bad) lahf mov dec mov dec cwtl mov dec sbbl lahf add add dec data16 sahf mov dec data16 lahf mov dec insb mov xor mov xor insl mov xor ret loopne sbb pop xchg jecxz daa inc pusha sbbb inc sbbb inc sbbb inc sbbb dec gs lahf mov dec sbbw dec imul xchg xor xchg xor mov xor insl mov xor (bad) in sbb stos enter cmp nop lods leave out pop cmp xchg lods lret pop cmp xchg lods lret pop cmp jne scas lret out and pop add shr or inc arpl mov inc sbbb dec data16 add adc mov dec andw dec push mov xor xchg dec imul xor (bad) loopne sbb push outsl fsubrs dec push movsb rcr sbb push jno stos (bad) in sbb scas lret call jns mov jmp and pop jp mov in or inc pop jnp mov out or inc popa jge mov dec sbbl lahf mov dec andl adc dec imul xchg xor outsb mov ss outsl mov cmp mov cmp (bad) lods enter cmp xchg scas lret pop cmp jne scas int pop and jns cltd mov out or inc popa jge mov lock fwait mov add icebp push sub sbbb dec gs sahf mov dec imul mov push insl mov xor (bad) loopne sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz and jne scas lret out and pop ja mov jmp jns mov ljmp mov out or inc pusha jl mov out or inc arpl mov dec andl adc dec imul xchg xor cwtl fldl mov out or inc bound mov dec imul aaa push jno pop dec xorl je lods lret and int mov cmp xchg mov in or mov add push sub sbbl add mov das dec push notl dec imul mov cmp mov cmp nop lods lret pop cmp xchg lods lret and int push and jns mov out or inc bound mov inc arpl mov inc sbbb dec test notb das dec push notl xor movsl ret sbb insl mov xor (bad) loopne sbb push outsl mov ss jo test aaa push jno stos (bad) jecxz pop cmp xchg scas lret and jne scas int3 call ja mov jmp js mov ljmp mov in or mov lock inc popa jle adc mov sbb repz icebp add add (bad) cli xor movsb fcoms sahf mov dec imul cmp sbb push jb stos enter cmp xchg scas lret and pop ja mov jmp jns mov jmp and mov out cvttps2pi sbbl dec push notl dec push movsb rcr push xor mov xor (bad) sbb push jno scas lret and iret jmp and mov out or inc bound mov dec sbbl mov das dec insb mov xor (bad) aaa push jno stos (bad) in push cmp nop lods lret pop cmp int3 jmp js mov out or inc bound mov inc sbbb dec add movsb add (bad) pop xor insl mov cmp nop lods leave out pop cmp xchg mov jmp ja mov ljmp mov ljmp fdivrl mov jmp jns mov in or inc pop jnp mov hlt adc dec test notb das dec push clc adc movsb rcr pop outsb stos loope push (bad) mov adc add test cmp xchg scas int3 call js mov in or mov out or pushf mov dec data16 lahf mov dec imul mov cmp stos (bad) in sbb lods lret call jns mov in or mov out or inc popa sbbl mov xor xchg xor push insb add sbb lods leave out and int push es pusha jl mov lock inc arpl mov dec gs lahf mov dec push clc adc movsb rcr pop xor outsb mov cmp xchg scas lret call js mov ljmp mov in or inc pop jl mov out or inc bound mov dec push jp in push add ss mov pushf into (bad) sub adc popf int3 sti sub xchg fiaddl enter jae lods leave out es pusha jl mov out or inc bound mov inc arpl push sub sbbb dec gs sahf mov dec sbbw dec imul xor mov xor add add cmpsb ret (bad) sbb stos enter cmp mov pop ja mov jmp ja mov ljmp mov ljmp mov ljmp mov ljmp mov in or inc pusha jl mov out or inc popa jle mov out or inc popa jle mov lock fwait mov inc arpl mov inc andl dec push notb cs test notl dec imul xchg xor xchg xor ret loope sbb push jo test ds popf cmc push cmp xchg lods lret pop cmp jne scas int3 call ja mov jmp jle mov inc arpl mov inc sbbb add inc arpl push sub sbbb arpl mov dec test fdivrp push xor mov dec insb mov xor insl mov xor ret loopne sbb (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb lods enter jb rolb ss (bad) and ljmp add add test hlt adc sub sbbl mov das dec push notl dec push cmpsl (bad) aaa push jo test cmp mov cmp mov cmp (bad) lods enter adc dec imul lea aaa push jo stos push scas in dec jnp (bad) imul movb fimull adc movsl roll jge fimul inc jge out inc jns fmuls outsl mov nop mov enter cmp int3 jmp js mov ljmp mov lock inc bound mov inc bound mov inc sbbl popf mov jecxz cs test notb xor insl mov xor push jb stos enter cmp (bad) stos enter cmp xchg lods lret pop cmp jbe mov ljmp mov out or inc pusha jl mov out or inc pop jl mov out or inc pop jl mov out or inc pusha jl mov out or inc popa jle mov lock sahf mov dec gs sahf mov xor add add mov in or mov sahf mov dec data16 sahf mov dec push mov xor repnz dec insb mov sbb push jb stos enter cmp nop lods leave in push cmp nop lods leave out pop cmp xchg mov jmp and jns mov jmp and pop jns mov jmp and mov in or mov in or inc pop jnp mov in or fwait mov lock add cs test cmc adc dec test notl xor mov das dec push sti pop xor insl mov ss outsl mov ss outsl mov aaa push outsl mov aaa push jo test cmp nop lods leave out push cmp nop lods leave in add push cmp nop lods leave in push cmp nop lods leave out pop cmp xchg lods lret and jne scas int push and pop js mov ljmp mov jmp and inc popa jle mov lock fwait mov lock pushf mov leave add in push cmp nop lods leave out pop cmp xchg lods lret and int push and pop js mov ljmp sub push xchg rorb jle out push mov add adc dec push clc adc movsb rcr pop xor insl mov xor lret and cmpsb ret sbb ret loopne sbb (bad) ss outsl mov aaa push jo test cmp xchg mov jmp js mov jmp add add and pop js mov ljmp mov jmp and pop jns mov in or mov out or inc popa jge mov out or inc popa jge mov lock inc bound mov fdiv adc dec push notb xor mov xor mov xor ret loopne sbb vpaddw ss outsl mov cmp mov ljmp arpl mov cwtl int3 (bad) xor stos and adc add fistl test xor iret or mov aaa pop ja mov ljmp mov in or inc pop jl mov lock inc bound mov dec sbbl mov xor insl mov cmp jno stos (bad) in sbb lods lret and int push and pop jns mov in or mov dec gs sahf mov dec push stc push xor mov sbb lods leave out and jbe mov jmp jge mov dec sbbl mov xor xchg push outsb mov aaa push jo stos (bad) out and int push and jns mov in or inc popa jle mov jge std sbb push jo stos (bad) jecxz sbb push jb lods lret and pop jp mov in or inc pop jnp mov in or inc pusha jge mov out or inc popa jge inc xchg leave pushl addr16 (bad) sti cs xchg (bad) sti xor xor roll cs pop cli add sub (bad) xor fistpl nop leave cmovg mov lock jecxz push xchg (bad) adc mov add xor (bad) cmc and lahf fistl inc jp jecxz popa lcall xor call ficoml inc (bad) mov (bad) adc sub sbb mov add jbe out das imul rclb add xor push dec xchg repz mov pop jbe add jae in sub mov fcompl push (bad) rcll dec test add jbe faddl sbb pop dec xchg push inc jg add jnp lock xor push xchg rorb aaa jo lock popf loopne pop xchg lret jg divl jb in addr16 fstps xchg rorb dec mov (bad) aas jg clc cmp icebp xor add rclb push mov push dec cmpl xor jecxz pop xchg rcrl xlat inc jle out sub test loopne pop lcall xor cmp push nop int cmp mov xor stos ljmp pop xchg int dec xchg add inc jge stc aaa jo ljmp xchg leave or mov loope push xchg iret add cmpb push test adc sub lret js divb jb icebp sub pop pushf fcoml (bad) add mov mov sub loope mov ss imull push in pop cltd rorl dec test stc das fs cmc inc lods jmp pop xchg movl daa movsb fistp pop cltd aam dec mov add add cmp add imul int dec mov std jg,pt hlt cmp sub fcompl pop xchg rorl dec xchg mov xor fistpl xchg int ss xchg xlat adc cmpsb xlat or outsl mov scas jmp loop inc js fimull add movsl xlat pop xor xor enter nop ret arpl iret push aaa push roll xor int das pusha nop mov mov and mov iret inc xchg fist dec jge ficom inc jae fist dec jl loop dec jg hlt sub icebp es xchg (bad) std das bound jae in dec mov xlat or adc xor mov sar bound lahf adc out and into add jae notb xor mov cmp nop lods leave out and int3 jmp jns mov jmp and pop jnp mov in or inc pusha jl mov out or inc popa jle mov dec data16 lahf mov mov dec sbbl sahf mov dec data16 lahf mov xor push jne mov dec sbbl mov xor xchg xor mov ss outsl mov int push and jns mov in or inc pop jl mov out or inc popa jge mov icebp push sub jg mov inc add mov xor mov xor insl mov ss outsb mov ss outsl mov aaa push jo test aaa push jo test add add pop je lods lret and into jmp and pop jp mov in or mov in or inc pusha jl mov out or inc popa sbbb dec sbbl lahf mov dec andw dec test clc adc movsb rcr add cmp jne mov jmp ja mov jmp ja mov jmp js mov jmp and pop jns mov in or mov lock pushf mov dec sbbl sahf mov dec les sbb mov fwait int3 add jo in nop fldl pop cmp xchg scas int3 ljmp nop lods lret pop cmp jne scas lret call jbe scas lret call js mov add shr or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov out or fwait mov inc arpl mov dec sbbw dec andl adc dec push notb das dec push notl das dec push notl xor xchg aaa add xchg lods lret and jbe scas int3 call or inc bound mov icebp or inc jno out inc xchg cld sbb push jae mov ljmp mov out or inc popa jge mov out or (bad) (bad) push jae lods lret and pop jns mov jmp and mov out or xor mov xor (bad) jecxz sbb push jae or shr or inc pop jl mov out or inc pusha jge mov out or add add sbbl dec sbbl adc dec sbbw enter cwtl leave std sub xchg (bad) stc cs nop (bad) sbb push jno stos (bad) jmp jns mov jmp es pop jl mov out or inc popa jle mov lock pushf mov dec gs sahf mov dec push cli push xor jno stos (bad) jecxz sbb lods leave in push cmp xchg scas lret and int push and pop jns mov in or dec sbbl mov xor mov xor xchg xor (bad) jecxz sbb push jb lods int3 ljmp fwait mov repnz data16 lahf mov dec imul cmp stos (bad) jecxz sbb scas int3 call add add inc pop jge mov lock inc bound mov dec gs sahf mov dec push notl dec push movsb ret sbb das addr16 roll xor leave add imul cvtps2pi ficom push xorl loopne push mov adc push jo test ds jnp mov out or inc popa jge sahf mov dec test notl xor xchg push insl mov ss jo test cmp jne scas lret call ja mov jmp and pop jp mov in or mov lock popf mov dec test xor outsl mov cmp mov cmp nop lods lret and int3 jmp js add xchg mov jmp daa inc popa jge mov lock pushf mov dec gs lahf mov dec imul mov push outsb lea cmp jne scas int3 call js mov in or inc pop jl mov out or inc bound mov icebp push sub sbbl xchg scas lret out and pop ja mov jmp pusha jge mov out or inc popa jge mov lock inc bound mov lock sub sbbl mov xor mov push insl mov xor ret loopne sbb vpaddd aaa push jo lods leave in push cmp nop lods leave add pop and jp mov in or mov in or inc pusha jge mov out or inc popa jle mov lock dec sbbl mov cs andl adc dec push notb xor mov xor xchg push outsl mov aaa push jo test loope sbb push outsl mov cmp mov cmp mov cmp xchg scas lret out and jbe scas int3 jmp ja cwtl mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov movntss sbbl popf mov dec sbbl dec data16 lahf jmp movsb ficomp push xchg mov ret hlt and mov adc jbe fisttpl cmp jecxz dec jg add jnp cmc xor ljmp xchg rorb inc add add out and push xchg iret add divl jno jecxz dec test fcoms push (bad) (bad) incl mov fcoml dec (bad) lret add sbb mov pop cmp pusha lcall aas jl repz cmpsl jmp pop pop xchg aam push mov or mov repnz arpl aas jg (bad) ss divb push xchg (bad) (bad) cmp in sub jmp push pop cwtl iret pop cmp rcll dec xchg loop pop cltd (bad) or test (bad) xor scas icebp sub pop mov cmovnp lods icebp xor and fcoms push mov add mov xor in pop xchg ficompl xchg rcll dec add cmp xor es popf ficomp push xchg xlat adc leave push inc jl clc xor add in es popf fistl jle cli cmp mov xor cmpsb loope pop cwtl flds es lcall xor stos in pusha aam add aam inc xchg (bad) xor pop fistl push mov or jle divb push rorb cmp out sub loopne pop xchg enter mov and (bad) data16 rclb push nop leave or lds dec test cli cmp scas jmp push loope popa fcompl pop xchg aad push (bad) (bad) or mov cmp ljmp mov stc xor fmuls inc jnp repnz sub pop pop xchg rcll push xchg pop inc jg pop jb aad inc jbe fmuls xchg ret push mov sar jl outsl stos loope dec mov add js cmc xor call sbb lret jge clc xor add add loope push xchg rcll dec test leave add outsb lods jmp pop xchg leave cli sub pop sahf fmuls jno,pt imul add and mov stos fimull inc outsl popf int3 (bad) xor mov aam dec test (bad) adc dec push mov xor xchg xor mov push jb stos (bad) in sbb stos leave in pop cmp xchg scas lret call ja mov jmp dec jg (bad) sbb lods add int3 add test rolb inc jns inc push movsb rcr push xor loop push fwait aad dec xchg mov in or inc pop jl mov out or dec test notl dec push mov xor mov xor insl mov ss jo add add sbb mov in or inc pop sbbb dec test notb das dec push notl dec push mov xor mov add stos (bad) in and int3 jmp js mov sub sbbb data16 lahf mov dec test notb xor mov ss outsl mov cmp mov cmp (bad) lods leave in pop cmp jbe scas int3 jmp js mov ljmp mov lock fwait mov inc sbbb dec data16 lahf mov dec imul xchg mov ljmp mov lock pushf mov dec sbbl mov das dec push add test xor mov aaa push jno stos (bad) in sbb lods leave out pop cmp jbe scas lret call js mov jmp and pop jp mov in or add test xor xchg xor mov ss jo test cmp (bad) lods enter cmp xchg lods lret and jns mov in or inc pop jl mov out or inc bound aaa pop jp mov in or mov out or inc pusha jl mov out or inc sbbl lahf mov dec andl adc dec push notb das dec push notl das dec push movsb shl xchg movb jo fisttpl jo rorl inc je fmull add insl popf fistl inc jno fimull inc ja add test mov jg mov dec insb mov ss jno stos enter cmp jne scas lret call ja mov ljmp mov out or inc bound cli pop xor insl mov aaa push jno lods enter cmp jbe mov jmp and mov out or inc bound mov dec imul mov push outsb mov cmp (bad) lods leave in pop cmp jne mov in or mov cvttsd2si test xor mov push outsb mov cmp lods lret call js mov jmp and popa xchg (bad) cwtl rcll mov cltd lret pushl gs or mov sbb cmpsl fimull cmp aad add add es mov mov mov xlat push dec (bad) mov cmp jns mov in or inc pop jl mov lock pushf mov dec xchg xor add stos enter cmp nop lods lret and jbe mov ljmp mov in or inc pop jl mov lock dec push notl movsb rcr sbb push jae lods leave out pop cmp jne mov ljmp mov out or inc bound mov dec push mov xor mov cmp jne scas lret call jns mov and out or popf mov dec imul ss outsl mov cmp xchg scas lret call js mov add add or mov out or inc gs mov xor xchg push jo test cmp jmp imul xor outsb mov ss jae lods lret and int out or inc pusha jge mov out or inc popa jle mov lock inc arpl push sub sbbb dec imul xchg xor mov ss outsl mov aaa push jo test aaa push jno scas int3 jmp jns mov jmp and pop jnp mov out or inc popa jge mov dec test notb das dec push clc adc push insl mov xor (bad) jecxz sbb push jb stos (bad) in sbb stos enter pop cmp xchg scas int3 call jp mov out or inc popa jg mov dec sbbb dec sbbw dec push notb das dec imul mov ss outsl lea cmp add inc pop jns mov in or inc pop jnp mov in or inc pusha (bad) mov xor insl mov ss outsl mov aaa pop jne scas lret out and int3 jmp js mov in or mov icebp movntps xchg xor mov xor insl mov cmp nop lods lret and jbe mov in or mov dec push cld sbb push outsl mov cmp (bad) lods leave out and add ds ja mov jmp es pop jl mov out or dec andl dec insb mov aaa push jno stos (bad) in sbb scas int3 call jnp mov in or inc popa jle mov push insl mov cmp jne mov in or lahf mov dec push movsl ret sbb push jno scas int3 jmp sub test xor outsl mov cmp (bad) lods leave out and into jmp and pop jl mov cvtss2si test xor leave out and ja mov jmp and mov out or inc popa jge mov lock inc bound mov lock sub andl test cmp xchg mov in or inc popa jle mov add add sbbl mov xor jo test cmp nop lods lret and ja mov ljmp mov jmp and mov out or inc bound mov dec imul xchg push insb mov push cmp jne scas lret call ja mov out or inc gs mov xor mov xor (bad) push cmp nop lods lret and jne mov ljmp mov jmp and popa jg mov dec sbbl mov xor notb xor mov xor xchg push outsl mov cmp mov cmp mov cmp nop lods add leave in push cmp xchg lods lret and pop jns mov out or inc popa jge mov lock inc arpl mov dec sbbl mov cs andl adc test loopne sbb push jo stos (bad) in sbb lods leave out pop cmp xchg scas lret call pop jnp mov out or inc popa jle mov lock dec sbbb dec andl adc dec push notl xor test xor xchg dec imul aaa push jo stos (bad) jecxz sbb push jno stos (bad) in push cmp (bad) lods enter cmp jne scas lret out and jbe mov jmp jp mov out or inc popa jge mov out or inc popa jge mov lock pushf add mov dec sbbl mov aaa push jno stos (bad) jecxz sbb push xchg out inc pop jl mov lock inc bound mov icebp cvttps2pi andl dec push negl ss outsl mov cmp (bad) stos enter cmp jne scas lret and pop jns mov jmp es add popf mov dec sbbl mov xor mov ss outsl mov pop jne mov ljmp mov in or inc arpl cvttps2pi (bad) lahf mov dec push clc adc movsl ret sbb push outsl mov cmp nop lods leave out and pop js mov jmp and mov in or inc pusha jge mov xor add add push cmp xchg scas int3 call ja mov in or inc pop jl mov in or inc pusha jge mov out or inc popa jle mov lock cmp mov (bad) push dec lcall sbbb sbbl mov xor xchg and sbbl test xor mov xor insl mov ss outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp int3 call js mov jmp and pop jp mov in or inc pop jnp mov out or inc pusha jl mov out or inc popa sbbb dec gs lahf mov dec sbbw dec test add mov xor mov aaa push jo stos enter cmp int push and jp mov in or inc pop jl mov lock pushf mov dec sbbw dec push movsb (bad) ss outsl lea cmp xchg scas int3 call jl mov out or inc arpl cvttps2pi sbbl xor mov cmp mov cmp iret jmp and mov dec push cli pop xor outsl mov cmp jne scas lret ljmp mov out or inc arpl adc mov push jae lods enter inc pop jnp mov hlt adc dec imul xor enter cmp (bad) lods enter add add add cmp lret call js mov ljmp mov dec gs sahf mov dec andw dec push notl xor mov xor xchg xor ret loopne sbb push outsl mov aaa push jo stos (bad) in push cmp xchg mov in or inc mov repz mov push add lods lret call sbbb dec push (bad) sbb push jo stos (bad) in sbb lods lret call jp mov hlt adc dec push clc adc cmpsl (bad) add cmp xchg mov out or inc pusha jge mov out or inc bound mov inc test xor mov cmp (bad) lock add add sbb push jno stos enter aas pop jp mov pop push std sbb push jno stos (bad) jecxz sbb push jno stos leave out and into ljmp mov ljmp mov jmp and mov lock pushf mov inc fs sahf mov dec data16 lahf mov dec push notb das dec push clc adc push outsl lea and jns mov jmp and pop jl mov out or inc bound adc mov dec imul ss outsl lea cmp xchg scas int3 call ja mov jmp ja mov lock dec sbbl dec insb lea pop jbe mov ljmp mov in or inc add add lcall imul mov cmp xchg lods lret and pop jp mov jmp and pop jp mov out or inc pusha jl mov out or inc bound mov inc arpl push xor mov cmp (bad) scas lret call jp mov in and sub andw dec test notb ss outsl lea cmp add inc pop jl mov out or inc bound mov dec imul (bad) stos lret jmp jl mov dec push cli sbb push jo stos (bad) in sbb push jb lods leave out pop cmp xchg scas int3 jmp sbbl mov xor outsb mov add push jb scas lret and pop jns mov jmp and pop jp add add ja out and mov sbb mov repnz mov clc cmp rorl cmp cmp dec jp in inc jnp in inc jns loope dec xchg cld cmp mov sub in pop xchg (bad) cli arpl cmpsb fstl dec (bad) mov ficoml dec cmpl or mov pop push (bad) ret popa xchg leave sti sub xchg movl push dec cmpl xchg ret dec jge fist inc jp jecxz add mov (bad) (bad) repnz mov call in pop push xchg mov into add push (bad) inc jns out push mov add adc xchg int cmp ficom add test leave (bad) xor adc mov and xchg (bad) sti aaa mov jmp in xchg pop push xchg movl add aaa push iret add cmp daa push jo xlat or jb loope inc jl in dec test mulb pop mov cmc sub lret std sub lret add jae jecxz pop (bad) (bad) std xor loopne push test in push push (bad) mov adc cltd (bad) repnz stos xlat add pop mov xchg shr inc jb lret push lea lods flds add sub push js rsqrtps stos (bad) in push cmp xchg scas lret call js mov jmp and mov out or inc bound xor ds ja mov jmp and add jnp mov out or inc bound mov dec andl adc push cmpsb (bad) and pop jnp mov out or inc popa jge mov icebp or sahf mov dec andl adc dec imul icebp push cs test notb xor mov xor xchg xor mov xor (bad) aaa push jo test cmp int push and jns mov in or mov out or inc popa jge mov lock pushf mov dec imul jo stos add out and pop ja mov ljmp mov out or inc popa jge mov lock popf mov dec push mov xor mov sbb push jo test cmp (bad) lods enter cmp int or inc pop jl mov dec data16 lahf mov dec push andl dec push movsb rcr pop xor mov ss outsl mov cmp xchg scas lret call js mov ljmp mov in or inc pusha jge mov lock lahf mov dec imul xor (bad) sbb push jno stos enter cmp xchg scas lret call bound cmp stos enter inc pop jnp mov out or inc add sahf mov xor mov aaa push jo stos (bad) in sbb lods lret and jbe scas iret in or mov out or inc popa jle add add sub sbbb dec gs lahf mov dec imul mov cmp (bad) lods enter cmp xchg scas lret out and pop ja mov in or mov lock pushf mov dec imul mov xor (bad) in sbb lods leave out and pop js mov out or inc bound mov dec imul mov xor insl mov aaa push jo test cmp (bad) lods enter cmp jns mov in or inc pusha jl mov cs push (bad) sbb (bad) sbb push jno stos (bad) in sbb lods lret and pop jp mov in or inc pusha jl cltd mov out or inc bound adc dec test notb xor xchg xor mov cmp nop lods leave out pop cmp jbe scas int3 call js mov in or mov out or inc bound mov dec sbbw dec push clc adc dec push movsb rcr pop xor mov xor (bad) sbb push jb scas lret jmp and pop jl mov out or inc bound mov dec gs sahf mov dec imul mov xor mov cmp nop lods int3 call ja add add shr or inc bound mov inc sbbl test loope sbb push jno stos (bad) in sbb scas lret call js mov jmp and pop jnp mov out or inc popa jge mov lock dec push notl dec push mov xor mov cmp (bad) stos enter ds js mov jmp and mov icebp push sub sbbl mov xor mov xor (bad) in sbb scas lret call jge mov lock sahf mov dec imul mov cmp mov cmp xchg scas lret out and pop jnp mov out or inc popa jle mov dec data16 add add push jno stos (bad) in sbb lods lret and pop ja mov out or inc bound mov aad push sub sbbl into jmp and mov lock sahf mov dec imul ds js mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov icebp push sub test ss outsl mov cmp jbe scas int3 call ja mov jmp jp mov out or inc popa jge mov icebp ucomiss xchg push jno stos (bad) in and shr or inc arpl adc mov dec imul mov cmp nop lods leave out and test loope sbb push jo xchg scas lret add inc bound mov lock lahf mov dec push movsb rcr add add xor insb mov ss outsl mov aaa push jno stos (bad) in sbb lods enter cmp jne scas iret in or inc pop jl mov out or inc popa jge mov lock pushf mov dec sbbl mov xor mov cmp (bad) stos enter cmp (bad) lods leave in pop cmp xchg lods lret and notb movsl ret sbb push jo lods leave out and into jmp es pop jl mov lock popf mov dec andl adc movsl ret sbb push jae lods leave in and into jmp and pop jp mov out or inc popa jle add add mov aaa push jno stos (bad) out and add cltd mov out or inc bound mov dec sbbl mov xor xchg push outsl (bad) lods enter cmp xchg scas int3 jmp and pop jp mov in or inc popa jge mov lock popf mov dec andl adc push outsl mov aaa push jb lods lret and int pop and pop jp mov in or inc pop jl mov lock popf mov dec push mov xor (bad) sbb push jno stos (bad) in sbb lods lret and int3 jmp jl mov out or inc arpl adc mov push xor outsb mov cmp xchg scas lret add or popf mov dec test sti add sbb (bad) dec mov imulb pusha fwait loope pop nop (bad) imull pop mov cld aas ja fimul inc jbe xlat cmovle dec imul xor outsb mov cmp (bad) lods leave out pop cmp jbe scas int3 jmp jns mov in or inc pusha jge mov repz mov push jo test cmp (bad) lods enter cmp int3 jmp jp mov in or inc pusha jge mov dec sbbw dec push movsb rcr pop xor insl mov aaa push jo test cmp nop lods lret and fwait mov inc sbbb dec push notl dec push movsb ret sbb push jo add add jl mov hlt adc add dec test clc adc cmpsl (bad) loopne sbb push jo stos enter cmp xchg scas lret call js mov in or inc pusha jl mov dec test notl cmpsb ret (bad) sbb push jo stos (bad) in push cmp nop lods lret and pop ja mov jmp and mov dec data16 lahf mov dec push stc push xor mov ss jo test cmp into out or inc bound mov dec data16 lahf mov dec imul xor (bad) sbb push jae lods lret and shr or inc popa jle mov lock popf mov dec test clc adc cmpsb ret loopne sbb push add lret or add add jg mov dec gs sahf mov dec imul mov cmp (bad) lods leave out pop cmp jbe mov out or inc popa jle mov cvttsd2si (bad) lahf mov dec imul mov aaa push jno stos enter cmp xchg in fiaddl and mov icebp push sub sbbl mov xor mov xor (bad) loopne sbb jbe scas int3 call ja mov jmp and pop jp mov in or inc pop jl mov out or inc popa jle mov out or inc bound mov hlt adc dec test notb das dec push clc adc dec push mov xor mov xor insl mov sbb push jne add inc pop jnp mov out or inc bound adc gs sahf mov dec push notb das dec imul mov ss jo test cmp stos enter cmp (bad) lods enter cmp nop lods leave out pop cmp je mov jmp and pop jnp mov in or inc popa jge mov out or inc popa jle mov lock pushf mov dec data16 lahf mov dec push movsl rcr pop xor insl mov xor outsb mov ss outsl xchg lods int3 and daa inc pusha jge mov out or inc bound adc dec imul mov push insl mov aaa push jo stos (bad) in sbb lods lret add out daa add sbbl mov push insb mov xor insl mov ss jo stos (bad) jecxz sbb lods int push and jp mov in or inc pop jl mov out or inc bound mov dec sbbl mov xor mov aaa push jo test cmp (bad) lods lret pop cmp jbe scas lret call jns mov in or inc pusha jge mov out cvttps2pi (bad) sahf mov dec test notb das dec push notl xor mov xor insl mov xor outsb test inc ja cli inc pusha jl mov out or inc bound mov dec sbbl mov xor xchg add fdivr push xor mov stos or add (bad) (bad) cmp cmp nop lods leave out pop cmp jne scas lret out and int3 call jge mov out or fwait mov inc arpl push sub sbbb dec sbbl movsb rcr push xor mov xor insb mov aaa push jo test aaa push jo test cmp mov cmp jne scas lret out and lret out and lret and int3 call ja mov jmp js mov out or inc pusha jl mov out or inc popa jge mov out or inc popa jge mov lock inc bound mov icebp or pushf add inc andw dec add ret lcall cmp test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) in pop cmp jne scas lret and js mov ljmp mov ljmp cli push cmp xchg scas lret call ja mov in or inc pusha jl mov out or inc arpl push sub sbbb dec gs lahf mov dec data16 lahf mov dec xchg clc adc dec push mov xor xchg xor xchg dec insb mov push outsl mov cmp mov cmp mov cmp nop lods leave in push cmp xchg lods lret pop cmp xchg lods add lret pop cmp xchg mov ljmp mov jmp add inc popa jge add dec sbbl mov sub mov dec imul xor mov xor insl mov ss outsl mov cmp test cmp stos (bad) out pop cmp nop lods lret and int3 jmp js mov ljmp loope sbb push jno stos (bad) jecxz sbb push jb scas lret out and int3 add cbtw lret pop mov pushf mov inc sbbl popf mov dec gs sahf mov dec push mov xor xchg dec imul xor mov add xor mov xor leave out pop cmp xchg scas lret and inc pop jns mov shr or inc popa jle mov lock inc arpl adc gs sahf mov dec push notl dec push mov xor mov push insb mov xor insl mov xor (bad) jecxz push cmp (bad) lods enter cmp nop lods leave in push cmp nop lods leave out pop cmp xchg scas int3 call jbe scas int3 call jp mov in or mov in or inc pop jl mov out or inc arpl push sub sbbb inc andb dec push mov xor mov dec imul xor xchg loop or add vpaddd cmp scas int3 call aad mov ljmp sub jge mov out add sub gs sahf mov dec gs sahf mov dec gs lahf mov dec imul xor mov xor insb mov xor insl mov ss outsl mov ss jb stos enter cmp (bad) stos enter cmp (bad) lods enter (bad) imulb lcallw lcall adc cmpl popf iret (bad) cs enter sahf (bad) adc loopne jno,pt hlt adc dec imul xor mov enter cmp jne scas int3 call ja mov jmp ja mov jmp ja mov add add call js mov jmp jnp mov in or inc pusha jge mov out or pop jl mov out or dec sbbl add xor mov cmp mov cmp mov cmp jne lods lret and jbe mov jmp jns mov in or mov lock sub sbbb dec imul xchg xor xchg dec imul xor (bad) in sbb lods leave out pop cmp xchg lods lret and int3 call ja mov ljmp mov out or inc popa jge mov lock sub sbbb dec sbbw dec andl add add imul mov xor insl mov xor ret loopne sbb (bad) sbb push jo stos (bad) jecxz add cmp lret call jnp mov in or inc pop jl mov out or inc popa jle mov icebp push sub sbbl lahf mov dec imul mov cmp pop ja mov jmp ja mov jmp js mov ljmp mov jmp and pusha jge mov icebp push sub sbbb dec test notb xor mov xor mov xor xchg xor ret loopne sbb push outsl mov aaa push jo test aaa push jo lea cmp mov cmp xchg scas lret call ja mov ljmp mov ljmp mov jmp and pop jnp mov out or inc pusha jge sahf mov dec push notb das dec push clc adc movsb rcr push xor mov xor vpaddd aaa push jo test cmp in sbb scas lret add or mov in or inc pop jnp mov out or inc popa jge mov out or dec test xor mov xor xchg xor mov dec insb mov xor (bad) cmp xchg scas lret out and int3 jmp js mov ljmp jp mov in or inc pop jl mov out or inc popa jg mov dec push clc adc movsb ret pop xor outsb mov aaa push jb stos enter cmp nop lods leave out pop add jle mov icebp push sub andl dec push movsl ret sbb insl mov xor leave call js mov ljmp mov lock inc arpl cvttps2pi add push xor mov cmp stos (bad) jecxz sbb push jno lods lret and pop jns mov lock sub andl dec imul xchg xor mov xor lret pop cmp xchg scas int3 call ja mov ljmp add add mov in or inc popa jge mov out or inc sbbl dec imul xor outsb mov ss outsl lea cmp nop lods lret pop cmp jbe mov out or inc popa jle mov xor (bad) loopne sbb push jo stos leave out and js mov jmp and mov lock sahf mov dec imul xchg cmp mov pop jbe mov ljmp mov out or inc bound mov dec imul loope sub jle mov dec andw dec push mov xor mov ss je lods lret and into ljmp mov out or inc popa jge mov icebp push sub (bad) sahf mov dec push std sbb push jo stos (bad) jecxz sbb lods lret and int pop and jp mov in or inc pusha jge mov lock mov xor outsb mov cmp nop lods lret and into jmp and mov out or inc bound mov dec push movsb rcr pop xor mov aaa push jo stos (bad) jecxz sbb add inc pop jnp mov icebp push sub sbbl movsl ret sbb outsb mov cmp stos enter cmp xchg scas lret call js mov jmp and pop jnp mov dec data16 lahf mov dec imul add push insl mov aaa push jo stos (bad) jecxz sbb lods lret and jp mov in or inc popa jle mov icebp or sahf mov dec test notl dec push movsb rcr pop xor insl mov cmp xchg scas lret add inc pop jl mov out or inc bound mov dec gs lahf mov dec push stc push xor mov cmp xchg scas lret out and pop ja mov jmp and pop jnp mov out or inc add lahf mov dec push clc adc test loop sbb push jb lods enter cmp jbe scas int3 jmp jns mov out or inc bound mov dec sbbw dec insb mov ss jo test cmp add add xchg scas lret and into ljmp mov lock inc arpl push xor mov ss outsl mov cmp xchg scas lret out and pop js mov jmp and mov out or dec sbbl mov sbb (bad) loop sbb push jae lods leave out pop cmp jbe mov jmp jns mov lock popf mov dec push clc adc dec insb mov aaa push jo stos (bad) jecxz add ds js mov jmp and pop jle mov inc sbbl mov ss outsl mov ds ja mov jmp and pop jnp mov out or dec andw dec push movsb rcr pop xor insl mov aaa push jo stos (bad) jecxz push cmp xchg lods lret and pop jns mov out or inc bound mov dec test clc adc movsl ret sbb (bad) sbb push jb lods enter ds jnp mov out or inc popa jge mov lock add xor mov cmp (bad) lods enter cmp into jmp sub jg mov dec push notl dec imul ss jo stos (bad) jecxz sbb push je scas int3 add or inc popa jge mov dec imul ss jno stos (bad) in push cmp xchg scas lret call jns mov in or inc pusha jl mov lock dec test xor mov ss jo lea cmp xchg lods lret call jns mov out or inc popa jle mov dec push movsb rcr sbb push jo stos lret and jp mov out or inc arpl adc dec push std sbb push jno stos (bad) jmp and pop jl mov icebp push sub test xor add outsb mov cmp lods lret and into in or inc pusha jge mov icebp push sub andw push outsb mov cmp mov aas pop jns mov in or sub (bad) cmp (bad) stos leave in pop cmp jne scas int3 jmp jl mov repnz mov push jne scas lret call jl mov dec test stc pop add insl mov aaa push jo stos (bad) jecxz push cmp xchg mov ljmp mov lock mov dec push movsb rcr pop xor insl mov cmp (bad) stos enter aas pop js mov jmp and pop jl mov dec andl dec push clc adc movsl add loop sbb scas lret ljmp mov in or inc bound mov inc arpl adc data16 mov das dec imul mov cmp mov and mov in or inc pusha jge mov dec imul ss jo stos lret and pop js mov jmp and pop jp mov lock sub test aaa add push jno stos enter cmp jne scas lret call jns mov in or mov out or inc sbbb dec sbbw dec push cmpsb ret loopne sbb push outsl mov cmp xchg scas lret call jnp mov out adc mov dec imul xor jo test cmp add inc pop jnp mov out or inc popa jle mov dec push clc push xor mov ss jae scas int3 jmp and mov dec gs lahf mov dec insb mov pop aas pop js mov in or inc pop jl mov out or inc popa jle mov repnz sub sbbl movsb rcr sbb push jo stos (bad) in and pop add add mov out or popf mov dec push movsb ret sbb push jno lods leave out and jp mov notb dec insb mov ss outsl mov cmp nop lods leave out and into ljmp mov in or mov lock popf mov dec push notl dec imul jo test cmp nop lods lret and mov out or inc arpl movntps sbbl movsb ret sbb (bad) push cmp xchg scas iret in or add dec imul cmp xchg scas lret and jp mov repnz dec push test loope push cmp xchg mov lock mov add add push jb mov jmp es bound mov push ja mov out or inc popa jge mov lock sub test xor mov push outsb mov aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret out and pop jns mov jmp and pop jnp mov hlt adc test cmp xchg scas lret call jns pushf mov dec push mov cmp xchg lods lret and pop jnp mov out push sub sbbb dec imul mov xor and jns mov in or pushf mov dec push movsb rcr sbb adc dec imul aaa push jno lods leave jmp es pusha jle mov sub sbbb dec sbbl mov xor insl mov ss outsl mov cmp xchg mov in or inc bound mov dec sbbl mov xor mov cmp nop lods leave out pop cmp jbe scas int3 call ja mov ljmp mov in or mov in add pushf mov dec push notb xor xchg int3 add bound mov mov daa outsl (bad) lods enter cmp xchg scas shr or inc jle rsqrtps push jae lods leave in pop cmp jne scas lret out and pop js mov in or mov lock das dec imul xor xchg push insb mov xor outsb mov ss outsl mov aaa push jo stos leave out pop cmp jne scas lret out and pop ja mov jmp jns mov in or inc pop jl mov out or inc pusha jge mov lock lahf mov dec sbbw dec imul (bad) push xor mov xor outsb mov sbb and mov cltd leave (bad) sub cmp int3 std aaa imul fs (bad) cmova call in dec jge ficom es xchg (bad) icebp and mov mov xchg add xchg rorb cmp fimull dec test jmp dec jg in inc jl out and add add push jae,pt in push mov hlt es xchg (bad) dec cmpl cmove loope dec cmpb clc cmp jl loope dec test ret pop xchg (bad) push test rclb dec xorb repz cmp out sub repz scas in jo in push xchg rorb inc mov (bad) cmp dec jns mov in or inc pusha jge mov lock popf mov ss outsl mov aaa push jno stos (bad) jecxz sbb lods leave out pop cmp jne scas lret call ja mov jmp and mov inc sbbb dec data16 lahf mov xor mov ss outsl mov cmp mov add add repz mov xchg rolb ss (bad) cli sub aad adc mov dec andw push insl mov xor insl mov xor vpaddd aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods lret call jbe scas int3 call ja mov jmp ja mov jmp ja mov ljmp mov jmp and pop jl mov add cvttps2pi sbbl mov cs test notb das dec push notb xor mov ss outsl mov ss outsl mov aaa push jo stos (bad) jecxz add cmp lret call ja mov jmp ja xchg mov in or inc pusha jl mov out or inc bound mov lock fwait mov inc arpl push sub sbbb dec imul xchg xor xchg push insl mov xor outsb mov xor (bad) in sbb stos enter cmp nop lods leave in push cmp xchg lods lret pop cmp jne scas lret and pop ja mov jmp jnp mov in or inc add popf mov dec gs sahf mov dec data16 lahf mov dec sbbw dec push stc push xor mov xor ret loopne sbb (bad) aaa push jo nop lods lret and jne scas lret out and add add xchg mov jmp and pop jns mov in or mov in or inc pusha jl mov out or inc popa jge mov out or inc bound mov dec andl adc dec push notb das dec push notl xor mov xor mov push insb mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods leave in pop cmp xchg scas lret call jp mov in or mov aad push sub sbbl dec cmpl xorl mov pop jne scas lret call js mov jmp and pop jp mov out or inc popa jle lahf mov dec push mov push outsl mov cmp (bad) lods enter cmp jbe scas int3 call daa bound pushf aam pop jnp mov dec (bad) iret adc sbb fimul inc xorb sub call add jg loop dec jg jmp pop mov cli das fs ret cmc es (bad) ret data16 iret add xor push inc jle and std aaa je out sbb jns fmull cmp test or jbe fisttpl cmp leave stc sub lret push roll push ljmp data16 (bad) imulb gs sbb ret cli xor aad inc js out pop xchg enter fwait rorl jae,pt js,pt jmp add ja jmp sub xlat adc and ret stc das bound cmp cmp repnz adc mov pop push mov sti xor ficom xor iret add fs ret imull pop xchg (bad) cli cs stos call lret push jg xlat add pop mov xchg (bad) imulb pop xchg jnp mov in or inc pusha jl mov lock fwait mov inc test notb das dec push notb das dec push notl dec push mov xor xchg dec imul cmp mov cmp (bad) lods enter cmp nop lods lret pop cmp jne scas lret and jbe scas lret call jbe mov in or mov in or inc pusha jge mov lock fwait mov cs test notb das dec push notl xor mov xor insl mov xor insl mov ss outsl mov aaa push jo test cmp test cmp xchg lods lret and lret call jbe add inc pop jnp mov in or inc popa jge mov out or inc sbbl sahf mov dec sbbw dec test notb das dec push notl dec imul mov ss outsl mov ss outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jb scas lret and lret out and int push and pop js mov ljmp lcall add inc bound mov lock sahf mov dec data16 lahf mov dec andl adc dec push clc adc dec imul xchg xor ret loopne sbb (bad) loopne sbb push jo test pop cmp jne scas lret and int3 jmp jnp mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov inc arpl mov inc arpl adc dec push clc adc and jns mov in or inc pusha jge mov lock fwait mov inc arpl cvttps2pi xchg jecxz dec xorl add or lcall bound (bad) add lahf mov dec gs sahf mov push insl mov ss outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp jne mov ljmp mov jmp and pop jns mov jmp and mov in or inc add popf mov dec fs sub cmpsb ret sbb (bad) loopne sbb push outsl mov ss outsl mov aaa push jo test cmp test cmp xchg lods lret pop cmp jbe mov jmp jns mov jmp and pop jnp mov in or inc pop jnp mov in or inc pop jl mov lock pushf mov dec sbbl dec data16 lahf mov dec push add add adc dec add cmpsb ret (bad) sbb (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb stos enter cmp (bad) stos enter cmp lret call fwait mov inc arpl mov inc arpl mov popa add adc gs sahf mov dec imul xor xchg push outsb mov xor (bad) loopne sbb (bad) cmp lods leave in push cmp xchg lods lret pop cmp lret and jne mov jmp ja mov ljmp mov ljmp mov out or inc popa jle mov lock fwait mov inc sbbl add add add movntps sbbl xchg xor ret loopne sbb (bad) ss outsl mov ss jo test aaa push jb stos enter cmp jbe scas lret call jbe scas lret call jbe scas lret call ja mov jmp ja mov add or inc pop jl mov icebp push sub sbbb dec sbbl sahf mov dec gs sahf mov dec data16 lahf mov dec insb mov xor insl mov xor outsb mov aaa push jo test aaa push jo stos (bad) jecxz sbb push jb stos (bad) jecxz pop cmp jne scas lret out and lret call jbe scas lret call jbe add inc pop js mov ljmp sahf mov dec sbbl sahf mov vpaddd aaa push jno stos (bad) jecxz sbb push jb stos (bad) jecxz sbb scas int3 call jns mov jmp and pop jp mov in or mov in or inc popa jge mov out or inc popa jle mov fdiv adc mov dec imul xor mov ss outsl mov cmp mov push jae lods leave jmp ja mov jmp js mov jmp and pop jp mov in or inc pop jnp mov in or inc pop jge mov out or inc bound adc mov dec push notl xor xchg add adc mov xor mov aaa push add scas int3 jmp ja mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or pop jp mov lock inc bound mov lock fwait mov lock popf mov dec sbbl lahf mov add mov scas int3 jmp jnp mov out or inc popa jle mov icebp or fwait mov inc arpl cvttps2pi test xor mov xor xchg xor mov push mov mov (bad) loop sbb jbe scas lret call js mov ljmp mov jmp and pop jns mov in or inc pop jl mov out or inc popa jle mov hlt adc movsb rcr push xor mov xor insl mov xor (bad) loopne sbb push outsl mov aaa push jae lods leave in pop cmp int3 call ja mov jmp jns mov jmp and pop jp mov in or mov in or inc bound sbbl dec test notb dec push mov xor xchg push insl mov xor (bad) jecxz sbb lods enter cmp xchg scas lret call ja mov jmp or inc bound mov icebp push sub sbbl movsl rcr pop xor insl mov xor les add add std sbb push outsl mov aaa push jo stos (bad) in push cmp xchg scas int3 jmp jns add inc bound mov inc sbbb dec sbbl mov xor mov push outsb mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jb stos enter cmp nop scas int3 call ja cwtl mov out or inc bound mov dec data16 lahf mov dec push clc adc dec imul xor jo test aaa push jo test cmp mov cmp nop lods leave out pop cmp xchg scas int3 call ja mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov inc arpl cvttps2pi mov cmp stos enter add in sub jg mov dec data16 lahf mov dec push notb das dec push cld sbb (bad) cmp stos enter cmp nop lods leave in and int pop and jns mov jmp and pusha jge mov out or inc popa jle sahf mov dec data16 lahf mov dec test notb das dec push notl dec imul mov xor (bad) loopne sbb push outsl mov ss jo test aaa push jno stos (bad) jecxz sbb push jne scas lret call jbe mov ljmp mov ljmp add and jns mov in or mov in or inc pusha jl mov out push sub sbbl lahf mov xor mov xor vpaddd aaa push jo test cmp lods leave out pop cmp jne scas lret call jbe mov jmp jns mov jmp and pop jp mov in or inc pop jl mov out or inc gs (bad) lods leave out pop cmp jbe xchg mov in or inc pusha jl mov out or inc sbbb dec data16 lahf mov dec push mov xor xchg dec imul xor mov xor outsb mov xor (bad) push cmp (bad) lods enter cmp xchg lods lret pop cmp add xchg scas int3 call ja mov jmp jns mov jmp and pop jp mov lock inc popa jg mov icebp or pushf mov xor xchg dec insb mov xor outsb mov cmp (bad) stos enter cmp jne scas lret call ja mov ljmp mov in or inc pop jl mov out or inc popa jge mov hlt adc dec test clc adc dec push mov sbb push jno stos (bad) in sbb lods leave in pop cmp xchg scas lret and into ljmp mov jmp and pop jp mov in or mov in or inc pusha jle add je loop inc jl loop inc jg in sub int3 add pusha nop (bad) lock mov add lods fmull sti xor iret add addr16 aaa imul add cmp int3 jmp jp mov in or inc pop jl mov add adc mov dec imul lea cmp (bad) lods leave in pop cmp jne scas int3 jmp jns mov in or mov out or inc bound mov dec imul mov ss outsl mov and pop ja mov ljmp mov in or inc pusha jge mov repz mov dec imul xor (bad) sbb push jb stos enter cmp xchg scas lret call jp mov out or inc popa jle mov icebp push sub add add sahf fisubl jecxz sbb push jb lods leave in pop cmp xchg scas lret call js mov icebp push sub sbbl mov xor mov sbb lods leave out pop cmp int push and jge mov lock inc bound mov dec gs sahf mov dec push notl dec push mov xor mov cmp (bad) stos enter cmp xchg scas int3 jmp jp mov in add sub sbbl mov xor mov ss outsl mov cmp nop lods leave out and jbe scas lret call js mov jmp and mov out or andw dec push movsb rolb (bad) pop xor mov ss jno stos (bad) in push cmp xchg scas lret jmp js mov out or inc bound mov dec push notl dec push movsb rcr push xor mov sbb lods leave in push cmp xchg mov sbb repz mov dec imul xchg push insb mov xor insl lea cmp (bad) lods leave in push cmp xchg lods lret and int3 ljmp lcall fsts inc mov inc bound mov inc sbbl mov xor xchg xor xchg push insl mov cmp mov add pop cmp jbe scas int3 call js mov in or mov lock pushf mov dec andl adc dec imul mov ss outsl mov cmp add aas pop js mov in or inc pusha jge mov inc fs sahf mov dec push notl dec imul xor (bad) sbb push jno lods lret and jbe scas int3 jmp js mov jmp and pop jp mov in inc sahf aam adc xor xchg push insl mov cmp xchg lods lret and int3 call ja mov jmp js mov ljmp mov in or mov inc bound pushf mov dec sbbl lahf mov dec push notl dec push mov xor (bad) aaa push outsl mov cmp mov cmp (bad) lods leave in push cmp xchg lods add jmp and pop jp mov lock inc bound mov dec sbbl lahf mov dec test notl dec push movsb rcr push ss outsl mov cmp mov cmp nop lods leave in pop cmp xchg scas lret out and mov in or inc pusha jl mov icebp push sub sbbl lahf mov test xor xchg xor mov xor outsb mov cmp popl lods enter outsb mov push jb stos enter cmp nop lods lret pop cmp int3 jmp js mov out or inc pusha jge mov out or inc popa jle mov inc sbbl mov das dec push add sbb (bad) jecxz sbb push jb lods enter cmp jne scas lret call jbe scas int3 call ja mov jmp jns mov out or inc popa jge mov out or inc popa jge mov out or inc popa jle mov lock inc bound mov lock fwait mov fdiv adc dec xchg stc adc cmpsb ret (bad) sbb (bad) sbb push jno stos (bad) jecxz sbb push jb stos enter cmp jne scas lret out and jp mov add or inc pusha jge mov out or inc popa jle mov inc arpl adc data16 mov xor xchg cmp fisubl ds ja mov ljmp mov in or inc xchg out pop xor outsb mov cmp nop lods lret and shr or inc pusha jge mov lock popf mov dec andl adc dec imul mov cmp nop lods leave out pop cmp jne scas int3 jmp jns mov in or inc pusha jge mov lock inc arpl mov xor xchg ss outsl mov cmp nop lods leave out and jbe scas int3 jmp jns mov in or inc pop jl mov add adc roll add add cli pop xor mov ss outsl mov cmp (bad) stos enter cmp xchg scas lret call ja mov out or inc bound mov dec data16 lahf mov dec andl adc dec push notl xor xchg xor lea cmp xchg scas lret and int3 call ja mov jmp js mov xor fist inc je aam aaa jno stc sub add xchg ret cmc and cmp roll xor leave std cs xchg (bad) clc xor fistl inc jle mov aad inc js in push xchg xchg stc push xor mov xor ret (bad) sbb (bad) out pop and add inc pop jns mov daa jno mov ljmp mov ljmp mov in or mov in or inc pop jl mov icebp push sub sbbb dec sbbb dec data16 lahf mov dec sbbw dec push clc adc dec push cmpsb ret sbb outsb mov xor (bad) aaa push jo test aaa push jo test cmp mov cmp jne scas lret out and pop ja mov jmp jns in xor lea cmp mov cmp (bad) stos enter cmp mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov inc arpl mov add adc movsb rcr push xor mov xor insl mov xor (bad) ss outsl mov aaa push jae lods leave in push cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret and jne scas lret call jbe mov in or mov in or mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov inc arpl adc mov dec push notl xor mov xor xchg xor mov push jo test pop cmp jne scas lret and lret jmp ja mov ljmp mov ljmp add add inc pusha jl add dec sbbl sahf mov dec sbbw dec push clc adc push insl mov xor ret loopne sbb (bad) loopne sbb (bad) ss outsl mov aaa push jo test cmp xchg lods lret pop cmp jne scas lret call jbe scas int3 jmp js or inc pusha jge mov icebp push sub sbbl jnp mov out or inc bound mov dec gs lahf mov dec test cmc adc dec andl adc dec insb mov dec insb add sbb push jno stos (bad) in sbb lods leave out pop cmp xchg lods lret pop cmp jbe add inc pop jns mov in or add fwait mov lock pushf mov inc sbbl lahf mov dec data16 xor xchg xor xchg dec push movsb rcr dec data16 lahf mov dec sbbw dec push mov xor insl mov xor mov xor mov xor mov xor mov ss outsl mov ss outsl mov aaa push jo test cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push je scas lret call ja mov jmp pusha jl mov out or inc arpl mov dec sbbl add add add add cs test notb cs test add pop xor mov xor mov xor insb mov xor insl mov aaa push jo test aaa push jo test aaa push jno stos (bad) jecxz sbb push jno stos (bad) loop sbb push jno stos enter cmp int3 call js mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov lock inc bound mov lock inc bound mov icebp or pushf mov inc sbbl sahf mov dec imul xchg xor mov xor ret loopne sbb vpaddd aaa add add mov cmp (bad) lods enter cmp (bad) stos enter cmp pop js mov ljmp mov jmp and pop jns mov in or pop jp mov lock inc bound mov lock inc bound mov lock fwait mov inc bound mov inc bound mov dec data16 lahf mov dec data16 lahf mov dec push notb das dec push notb das dec push notb xor mov xor mov xor mov push insb mov xor insl mov xor insl mov xor jo test aaa push jo test aaa push jo test pop cmp xchg lods lret and jne scas lret add and jne scas lret jmp and pop jns mov jmp and pop jp mov in or add inc bound mov lock fwait mov lock sahf mov dec gs sahf mov dec sbbl adc dec push mov xor mov xor mov aaa push jo test loope sbb push jo test aaa push jo test cmp test cmp nop lods enter cmp xchg mov jmp and pop jnp mov in or mov in or mov in or inc pop jnp mov in or inc popa jge mov lock popf mov push mov clc sub sbbl mov xor les add loope sbb push jo stos (bad) in and pop ja mov ljmp mov in or mov out or add test xor xchg xor mov cmp stos enter cmp nop lods leave out pop cmp jne mov jmp and mov out or inc pusha jge mov lock dec gs lahf mov dec test notb xor xchg xor insl mov xor (bad) sbb push jb stos enter ds js mov in or inc pop jl mov out or inc popa jg push cmp loope je,pt out dec cltd mov dec sbbw push insl mov xor ret loopne sbb (bad) loopne sbb push outsb add push cmp add push jae lods leave out and jne mov ljmp mov jmp and pop jns mov jmp and pop jp mov jmp and add fwait mov lock pushf mov dec push notb das dec push notb das dec push notl xor test xor xchg xor xchg xor ret loopne sbb (bad) ss outsl mov cmp mov cmp mov cmp xchg scas lret call jbe scas lret call ja mov call ja mov ljmp mov in or inc pop jl mov out or pushf mov inc sbbb sbbl sahf mov add xor mov xor outsb mov cmp (bad) stos enter cmp nop lods leave in push cmp nop lods leave out pop cmp xchg lods add jmp and pop jns mov jmp and pusha jge mov out or inc popa jge mov out or pushf mov inc sbbb dec sbbl lahf mov dec push mov xor xchg dec insb mov ss outsl mov ss outsl mov aaa push jae lods leave out pop cmp xchg scas sbb sti sub cmp cmovno fimul ds popf rclb dec add daa popa xchg lret or mov into add imul mov adc jge mov lock popf mov add add push fdivrp sbb icebp adc dec push clc adc movsl rcr sbb outsb mov aaa push jno stos (bad) jecxz sbb add inc pop jp mov lock popf mov dec push stc push xor mov ss jo stos (bad) jecxz sbb scas int3 jmp jnp mov out or inc popa jge mov dec gs lahf mov dec push movsb rcr pop xor (bad) aaa push jno stos (bad) in and int pop and jns mov in or inc pop jl mov icebp adc andw dec push mov xor outsb mov cmp jne scas lret call jns mov jmp and mov out or inc add fwait mov icebp or test xor mov aaa push jo stos (bad) in sbb lods lret and int pop and jp mov in or inc add mov dec push mov xor mov aaa push jo stos enter cmp xchg scas lret call js mov in or mov dec sbbl mov xor xchg xor mov ss outsl mov cmp jne scas lret call ja mov in or inc pop jl mov out or inc bound mov dec sbbl mov xor vpaddd aaa push jno stos (bad) jecxz sbb lods lret pop cmp pop jne scas lret call js mov jmp add inc bound adc dec push notl dec imul xor (bad) sbb push jb lods leave out pop cmp jbe scas int3 jmp sbbb dec gs lahf mov dec imul mov ss outsl mov aaa push jno stos lret and int push and jns mov in or inc pop jl mov out or inc bound mov dec andl adc dec imul ss outsl mov aaa push jno stos (bad) jecxz sbb lods lret and int3 jmp js mov jmp daa inc popa jle mov icebp or popf mov dec andw add add xchg push outsb mov cmp mov and mov out or inc pusha jge mov lock inc bound mov loopne sbb push jno stos (bad) jecxz sbb push jb stos (bad) call pop jnp mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov lock inc bound adc mov dec sbbw dec andl adc dec test notb das dec push notl xor outsb mov ss jo test cmp stos (bad) jecxz sbb push jb lods enter cmp nop lods leave out push cmp nop mov ljmp mov ljmp mov jmp and pop jns mov in or mov in or inc pop jnp mov in or inc bound mov cs test notb das dec push clc adc dec push mov xor xchg dec imul xor stos enter cmp nop lods leave in push cmp nop lods leave out push cmp nop lods leave out pop cmp je lods lret pop cmp js mov ljmp mov ljmp mov ljmp mov jmp and pop jns mov in or mov in or inc bound mov lock inc arpl mov inc arpl adc dec push stc push xor mov ss outsb mov cmp mov cmp nop scas lret pop cmp add scas lret pop cmp ja mov jmp ja mov ljmp mov out or add (bad) sahf mov dec sbbw dec push notl dec imul xchg mov sti sbb insl add sbb lods leave in push cmp nop scas lret and jbe scas int3 call ja mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jge mov out or inc bound mov inc arpl cvttps2pi test xor xchg push insb mov xor (bad) ss jo test cmp stos (bad) jecxz pop cmp xchg lods lret pop cmp jne scas lret out and pop ja add aas pop jns mov jmp and pop jp mov in or mov lock inc bound mov cs test notb das dec push notl xor xchg xor mov push outsl mov cmp stos (bad) jecxz add ds ja mov jmp js mov ljmp mov jmp and pop jp mov lock fwait mov dec data16 lahf mov dec andw dec push notb xor xchg xor mov ss jo test cmp mov cmp xchg lods lret pop cmp jne scas lret call ja mov jmp jp mov in or mov out or inc popa add jge mov lock pushf mov inc sbbb dec sbbl mov das dec push (bad) sbb outsb mov ss outsl mov aaa push jo test cmp xchg lods lret and into ljmp mov xor xchg xor xchg push insl mov cmp nop scas lret call js mov ljmp mov in or mov out or inc popa jle mov lock lahf mov dec imul mov xor mov ss jo stos leave out pop cmp jne scas lret and jnp mov in or inc arpl cvttps2pi gs sahf mov dec push outsl mov aaa push jb scas lret out and pop jl mov out or inc pusha jl mov out or inc pusha jge add dec data16 lahf mov dec test notb xor movsb rcr sbb push jo stos (bad) jecxz sbb push jae stos leave out and mov in or inc pop jnp mov out or inc pusha jl mov lock mov xor xchg xor mov push outsb mov cmp stos (bad) jecxz sbb push jno stos (bad) in sbb scas int3 call ja mov jmp jp mov in or inc pop jl mov out or inc popa jge mov inc arpl mov dec test notl xor mov add rcr adc cmpsb ret loopne sbb push outsl mov aaa push jno stos (bad) in sbb mov jmp js mov ljmp mov lods add cmp nop lods enter cmp (bad) lods leave in push cmp xchg add adc jae (bad) packuswb or outsb mov mov sbbl dec andl adc dec push negl ss outsl mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb stos enter cmp nop lods leave out push cmp xchg mov jmp ja mov ljmp mov ljmp mov out or inc pusha jge mov out or inc bound mov dec data16 lahf mov dec andl add adc dec test notl xor mov xor xchg aaa push jo test cmp nop lods lret and int3 jmp ja mov jmp ja mov ljmp mov ljmp sahf mov dec sbbw dec data16 lahf mov dec sbbw dec data16 lahf mov dec sbbw dec push mov fcoms dec jnp fist dec test stos fimull cmp enter lcall sbb push mov or lds jl hlt xor lods in das push loop pop xchg xlat push push mov add xor jecxz push mov sbb enter mov out es nop lret or mov add call sbb mov fist cmp cmc cs lods jmp loope pop pushf fcomps pop popf aad push xchg lret or mov repz call addr16 pop cltd fcompl dec test fistpl push mov xor scas out sub and mov roll cmp mov xor in pop xchg rcll push xchg in fs (bad) adc enter mov out outsl stos loope pusha mov lret add repz out push xchg int dec xchg out cs mov aam push mov or mov out das imul add xor insl test bound sbb lret xchg pushl jp cmc sub cmpsl jecxz sbb rorb xor call adc mov imulb mov dec jns mov sbb lds pushf iret add bound nop (bad) stc ja jecxz dec jge icebp sub into add push mov std cmp in mov add mov fistl add lcall cs in push mov xor ljmp test rorb inc xchg cld inc cmpb insl lods out cmpsl loop pop fcoms dec mov pop cmp dec xorl or (bad) xchg rorb dec xchg add jnp std cmp insl cmpsb call sbb int3 or (bad) mov clc cmp out sub jecxz pop fstpl push xchg aam push xchg rorb inc jle loope inc jnp imulb arpl ret divl jb ljmp jl loope inc insl sahf int3 pushl ss mov cmp mov cmp iret cld sub (bad) hlt jl fisttp jno,pt (bad) pop cmp adc mov lret jne in daa popa mov sbb leave mov stc sub ret sub cli xor rolb aas js jmp fisttpll ds pushf iret (bad) sub sbb stos fisttpll inc jno iret add popa nop mov (bad) repz mov sbb mov (bad) arpl mov daa bound (bad) lock dec test notb das dec push notl dec imul xchg push insl mov xor outsb mov cmp mov stos enter cmp nop lods leave in push cmp xchg scas lret and jne scas lret call adc notb das push outsb mov push cmp (bad) lods lret and lret call ja mov jmp js mov jmp js mov out or inc arpl cvttps2pi or add enter cmp jne scas lret out and mov add sbb push jb lods enter cmp xchg mov jmp and pop jns mov jmp and pop jns mov out popf out push jo test cmp mov cmp nop lods leave out and pop jp mov in or inc pop jl mov out or inc bound mov dec data16 lahf mov dec push stc adc cmpsl (bad) aaa add push jno stos (bad) jecxz sbb lods enter cmp xchg scas int3 call jns mov in or mov mov icebp or sahf mov xor mov xor (bad) loop sbb push jno stos (bad) in sbb lods leave out and shr or inc pop jl mov out or inc bound add or jbe fnstenv push jo test cmp mov ds js mov ljmp mov jmp and pop jp mov in or mov out or inc pop jl mov out or inc pusha jl mov lock fwait mov inc bound mov lock inc popa jle mov lock inc popa jge mov out or inc popa jge mov lock sahf mov add xlat cvttss2si sbbl mov cs push notb das dec push notl xor mov xor mov xor insl add sbb push jno stos (bad) jecxz sbb push jo stos (bad) in sbb lods enter cmp xchg mov jmp ja mov jmp ja mov jmp pusha jge mov out or inc popa jg mov inc arpl push sub mov dec sbbw dec sbbw dec test cmc adc dec push notb cs push cli push xor mov push insl mov xor outsb mov ss outsl mov xor (bad) loopne sbb push je add and lret out and jbe scas lret call ja scas int3 call ja mov jmp ja mov in or mov in or inc pop jl mov add movntps sbbb dec sbbl sahf mov dec xchg stc adc mov xor xchg xor mov sbb push jb stos (bad) in sbb lods enter ds ja mov call jbe scas int3 jmp ja mov call ja mov jmp jns mov ljmp mov out or inc pusha jl mov out inc nop (bad) clc adc movsb rcr pop xor mov xor (bad) sbb push jb stos enter add add push and pop js mov jmp js mov jmp and jns mov in or pop jp mov in or mov in or inc pop jle mov inc bound mov inc bound mov cs sbbl adc dec test notb cs test notb xor mov xor mov xor mov xor outsb mov sbb stos enter cmp (bad) scas lret out and lret call jbe mov jmp ja mov jmp js mov ljmp mov ljmp mov in or inc pop jnp mov out or inc pusha jge mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jge add cltd mov repnz sub sbbb dec sbbl sahf mov dec sbbw dec sbbw lahf in push sub sbbl sahf mov dec andl stc push xor mov dec imul xor mov xor ret loopne sbb (bad) loopne sbb (bad) aaa push jno add cmp lret call jp mov in or mov in or inc pop jnp mov in or inc pop jl mov in or inc pop jl mov out or inc pusha jge mov inc arpl mov dec gs sahf mov dec sbbl lahf mov dec data16 lahf mov add xlat hlt adc mov dec push movsl rcr pop xor mov xor insl mov xor insl mov xor insl mov aaa push jo test aaa push jo test aaa push jo stos (bad) jecxz sbb cmp jbe scas lret out and lret and into ljmp mov ljmp mov ljmp mov ljmp cmp xchg scas lret call ja mov in or inc pusha jge mov out or inc bound mov dec sbbl mov das dec imul lea cmp (bad) lods enter cmp jne scas int3 call ja mov ljmp mov in or add and mov icebp push sub sbbl mov xor xchg leave stc sub mov outsb mov and (bad) and fdivrp pop xor mov xor insl mov xor les push jb add aas pop jns mov jmp and pop jge mov out or inc popa jle mov out or inc bound mov inc arpl movntps sbbb dec add pop movsl cli cmp int aaa nop stc imul sbb into sbb sqrtps mov dec imul xor insl mov cmp jbe scas int3 jmp js mov jmp and pop jp mov in or inc pop jl mov out or inc bound add add mov inc test notl xor xchg xor mov xor vpaddd aaa push jno stos (bad) jecxz sbb push jae lods leave in and pop js mov jmp and pop jp mov in or inc pusha jl mov out or inc bound mov add mov xor mov cmp mov cmp nop lods lret and int3 jmp js mov in or mov out or sub rcr push xor mov ss outsl mov cmp stos (bad) in push cmp xchg lods lret and into in or inc pusha jge mov icebp or popf mov dec sbbw dec push aam push sub add inc sbbb inc push notl dec imul test xor xchg xor test xor mov xor mov push insb mov xor mov xor insl mov xor insl mov stos (bad) jecxz sbb push jb scas lret and lret and lret call jbe scas int3 jmp ja mov ljmp mov ljmp popf mov dec gs sahf mov dec sbbl lahf mov test xor xchg xor (bad) loopne sbb vpaddw aaa push jo test aaa push jo test add push jno stos (bad) loop sbb push jno lods leave out pop cmp nop lods leave in push cmp xchg scas lret pop cmp jne scas int3 call ja mov jmp and jns mov jmp daa inc pusha jge mov out or inc pusha jge mov cmp cmpsb xlat adc stos fisttpll dec jg in sbb adc xorl out add mov push dec jle jmp lock mov into cmovge xchg mov in or inc pop jl mov out or inc popa jle mov lock mov sbb push outsl mov cmp stos (bad) in sbb lods lret and jbe scas int3 call js mov out or inc popa jle mov lock pushf mov dec data16 lahf mov dec push add fcomi adc dec push mov xor mov cmp stos (bad) in sbb lods leave out and jbe scas int3 jmp js mov jmp and pop jp mov in or pushf mov dec sbbl mov xor mov xor mov push outsl mov mov std inc (bad) mov in or inc pusha jl mov out or inc bound mov dec data16 lahf mov dec push clc adc movsl (bad) sbb push jb lods leave in pop and pop jnp mov out or inc popa jle mov icebp or popf mov dec andl adc dec insl mov ss outsl mov cmp (bad) lods lret and int pop and add inc pop jp mov in or inc pusha jl mov lock andl dec imul mov xor (bad) and int push and jns mov lock inc arpl mov dec data16 lahf mov dec imul mov xor (bad) loop sbb pop ja mov shr or inc popa jle mov icebp push sub sbbl mov xor mov xor xor enter cmp xchg lods lret add or inc pop jl mov out adc mov cvttsd2si sbbl mov stos lret and pop jp mov in or inc pusha jl mov out or inc arpl mov dec addw add add das dec push clc adc cmpsl (bad) aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret call js mov out or inc popa jle mov icebp or mov xor mov xor mov xor outsb mov aaa push jo stos (bad) jecxz sbb lods leave call jns mov jmp and mov out or inc popa jle mov icebp or popf mov dec data16 lahf mov dec push sti sbb outsb mov cmp add and jnp mov out or inc popa jle mov inc sbbb dec push movsb rcr push xor mov xor (bad) sbb push jb add pop jne scas int3 jmp js mov out or inc bound mov dec gs add xchg mov jmp and pop jp mov in or mov out or inc bound mov inc sbbl mov dec imul xor insl mov aaa push jno stos (bad) in sbb lods leave in pop cmp jbe scas int3 jmp sbbb sbbl sahf mov dec andw dec test notb das dec push cli push xor add sbb push jb stos (bad) in sbb stos enter cmp nop lods leave in push cmp nop lods leave out and pop jns mov jmp and pop jns mov add or pop jp mov in or mov in or mov in or inc pop jp mov lock fwait mov lock fwait mov icebp or fwait mov inc arpl mov inc arpl mov inc sbbl dec data16 lahf mov dec data16 lahf mov dec data16 sahf mov dec sbbw dec nop ret sbb pop jbe scas lret call ja scas int3 ljmp mov jmp and pop jp mov in or inc pusha jge mov out or inc pusha jge mov repz mov add mov xor ret loopne sbb push outsl mov ss outsl mov aaa push jne scas lret out and lret call add cmp int3 jmp ja mov ljmp mov jmp and pop jns mov jmp sub fwait mov lock pushf mov inc arpl mov dec data16 lahf mov dec test notb das dec push jp mov in or mov out or inc pusha jge mov out or inc popa jle mov icebp or pushf mov inc sbbb dec push mov xor mov push insb mov xor (bad) ss outsl mov aaa push jae lods leave out pop cmp jne scas lret out and mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov movntsd sbbl add gs sahf mov dec andl adc dec push notl dec imul mov xor ret loopne sbb (bad) ss outsl mov aaa push jno stos (bad) jecxz sbb push jb stos enter ds ja mov jmp js mov ljmp mov jmp and pop jns mov in or mov in or inc pop jnp mov icebp or popf mov dec sbbl lahf mov dec andw (bad) pop xor mov cmp (bad) lods leave in push cmp nop lods leave out and add mov in or inc pop jl mov out or inc popa jge mov lock (bad) rorl inc jno (bad) cmp roll xor add jo loope inc jo cld sbb push jno stos (bad) in pop cmp xchg lods lret out and int3 call jl mov out or inc pusha jge mov out or inc popa jle mov out or inc popa jle mov icebp or pushf mov dec sbbl mov xor xchg xor xchg dec insb mov xor mov xor insl mov cmp stos (bad) jecxz sbb lods enter cmp nop lods leave out and jne scas lret call jbe scas lret call jp mov in or mov in or inc pop jnp mov out or inc add lahf mov dec andl adc dec push daa jg notl dec push mov rcr push xor mov xor (bad) aaa push jo stos (bad) jecxz sbb lods lret and pop jnp mov in or inc pop jnp mov in or inc popa jge mov out or inc popa jle mov lock inc bound mov inc sbbb dec push notl dec imul cltd mov out or inc popa jge mov lock inc bound mov inc push notl dec imul xchg xor mov xor outsb mov xor (bad) loopne pop cmp xchg mov jmp js mov jmp and pop jp mov in or pop jl add dec gs sahf mov dec andl adc movsb add fdivrp pop xor insl mov xor ret loopne sbb push outsl mov aaa push jo stos (bad) in sbb scas lret call ja mov in or inc pop jnp mov out or jecxz push (bad) mov sbb mov and sbb jnp fisttpl pop dec mov aad dec mov add push xchg lret push dec mov add jnp in xor jecxz arpl leave or mov lods in pusha xchg lret add mov sar jl cmc xor push test fistp push xchg ficom dec (bad) rorl cmp lock out pop fsubl mov aam inc mov add jge (bad) cmp cmp mov outsl scas out arpl xchg into push aaa movsl loopne push xchg aam push xchg int3 or inc jp ficom inc js imulb addr16 fbld pop xchg enter mov lock cmpsb loopne push xchg rorl dec mov add jp hlt sub lods in and movsl fist pop cwtl xlat adc rorb dec mov cld xor push in mov int inc test sti cmp insb cmpsb loopne bound int3 or mov in sub mov mov hlt sub pop xchg aad dec mov or jle repz jmp sbb int3 or mov das imul add jge out sub mov pop push nop int inc jg imulb outsl scas call sbb rorb inc js jecxz dec test iret or sar inc jge cld xor push mov add loopne push xchg aam dec (bad) rorb inc test sti xor mov daa popa movsb in push xchg rclb dec test add jne loope dec (bad) mov in pop mov fcoms inc (bad) fisttpll dec mov add mov in mov repz add cmp mov xor ljmp xchg rorl or jbe icebp es cltd fcoms dec xorb stc aaa jae in pop push (bad) mov dec push mov cmp mov cmp nop lods leave out pop cmp xchg scas lret out and int push and pop js mov ljmp mov out or inc pusha jge mov lock inc popa jle mov lock fwait mov inc sbbb dec sbbl mov add std sbb push jo test cmp mov cmp nop lods leave out pop cmp xchg scas lret and shr or inc pop jnp mov out or inc popa jle fsubrl je mov jmp and pop jns mov in or mov in or inc pusha jge mov repz mov dec push mov xor mov xor insl mov xor (bad) sbb push jne scas lret call jbe scas int3 call jp mov in or mov out or inc bound mov inc sbbb push insb mov xor (bad) loop sbb push jo stos leave out pop cmp xchg scas lret jmp ja mov in or inc pusha jge mov xor insb mov ss jo test cmp lea cmp xchg scas int3 call jge mov out or inc sbbw dec push mov xor ret loopne sbb push outsl mov cmp (bad) lods leave out and int or inc pusha jge mov repnz sub mov dec push notb xor xchg cmp xchg mov jmp and pop jp mov cmp inc pop jl mov out or popf mov dec gs lahf mov dec push es mov mov push andl mov (bad) mulb dec andl adc dec push notl dec imul add add xchg mov ljmp mov jmp and pop jp mov in or mov in or inc pop jle mov lock pushf mov dec sbbl sahf mov dec data16 lahf mov dec sbbw dec push mov xor mov push insb mov xor mov ss outsb mov ss outsb mov cmp (bad) stos enter cmp (bad) stos enter cmp nop lods enter cmp (bad) lods leave in cmpl icebp es fwait roll inc jp fist inc jne aad aaa imul int xor ret repnz mov (bad) pushl gs into add push mov add add cmp add and pop js mov jmp and pop jp mov in or mov out or inc pop jl mov dec data16 lahf mov dec andl adc dec test notl dec push mov xor xchg push outsl lea cmp stos (bad) jecxz sbb lods leave out pop cmp xchg lods lret and int3 jmp js mov in or inc pop jl mov out or inc popa jge mov out or inc popa jle mov lock fwait mov inc arpl push sub test xor xchg xor xchg mov pop jne scas lret out and lret call ja mov in add and mov in or inc pop jl popf mov dec sbbl sahf mov dec sbbw dec imul xor mov xor (bad) sbb push jo stos (bad) in sbb lods leave in push cmp nop lods int3 jmp jns mov jmp and pop jp mov in or inc pusha jl mov out or inc bound mov inc sbbb dec imul xchg xor xchg xor mov xor insl mov xor (bad) add lods enter cmp xchg scas lret pop cmp jne scas lret call ja mov jmp js mov ljmp mov add out or inc pusha jge mov out or inc popa jle mov lock test das dec push notl dec push mov xor insl mov ss lcall lods leave out pop cmp xchg scas lret out and int push and pop js mov jmp and popa jle mov lock popf mov inc sbbb dec gs sahf mov dec data16 lahf mov dec test std sbb push outsl mov cmp stos (bad) in sbb stos enter cmp nop lods leave in push cmp xchg lods lret pop cmp js mov ljmp mov in or inc pop jnp mov out or inc pop jl mov out or inc popa jle mov lock pushf mov add dec test notl xor mov xor xchg add push jo test cmp stos (bad) jecxz sbb push jb scas int3 jmp ja mov ljmp mov ljmp mov jmp and pop jp mov in or inc pusha jl mov out or dec gs ret (bad) notb dec imul ret sbb jbe scas int3 jmp js mov ljmp and test inc pop jp mov in or inc pop jl mov out or inc pusha jl mov lock pushf mov inc sbbb dec sbbl mov das dec push loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) in sbb stos enter cmp add ja mov jmp js mov ljmp mov ljmp mov in or inc pop jl mov out or inc popa jge mov out movntps sbbl jl jmp push (bad) mov and cmc cmp (bad) incb stos ficoml add int3 pop cmp fwait lret imul jo fist push mov cli cmp fcoml (bad) mov std cmp das test xor xchg cmp stos leave in pop cmp xchg lods leave out pop cmp xchg lods lret pop cmp jne scas lret and jne scas lret call jns mov jmp and pop jns mov jmp and pop jns mov add or fwait mov icebp or pushf mov inc arpl add repnz mov dec test notb xor mov xor mov xor xchg xor xchg xor ret loopne sbb (bad) loopne sbb push outsl mov ss outsl mov add nop lods leave out pop ds ja mov jmp js mov ljmp mov ljmp mov in or mov in or mov lock fwait mov lock pushf mov inc sbbb sbbb dec sbbl mov das dec push push mov mov daa popa movb xor ret dec xchg repz pop clc das bound add push push mov adc lret cmpb sub jecxz push xchg rorb xchg add jle cmc sub mov aam inc je fstpl pop xchg vucomisd out sub in pop lcall arpl mov loope dec cmpl loop pop xchg (bad) add push xchg xlat adc mov or lds jl,pt cld cmp sub mov xlat sub fcoms pop xchg rcll push (bad) (bad) popa mov aam pop xchg rclb dec mov or test sar mov lret or mov jecxz pop xchg jo or jne fimull cmp xchg int3 add dec xchg fistl dec xchg (bad) cmp out push mov add inc jnp repnz jnp out add add add loop pop cltd fcoml dec nop iret or (bad) jbe repz push fwait (bad) cmovns add mov das push (bad) or dec nop int inc jp icebp xor sub pop xchg fsts push mov pop inc jge mulb fistl jns repnz pop pop add jnp jmp outsb cmpsl loop outsl stos in fs aad push xchg lret test (bad) cmp jecxz push mov icebp daa mov rorl inc jl std xor cmpsb out pop movl jle lock adc shrb fwait rcll dec mov sti xor jecxz push xchg (bad) adc leave add mov mov pop push xchg (bad) std xor jmp pop lcall dec mov pop pop scas in sub out xor xlat adc or cmp add cli xor scas jmp arpl fcoml inc test add jae out daa pusha xchg int3 add insl mov sar jae cmc xor out sub jecxz push xchg rorl (bad) rorl jl cld push movsl out push mov stc das arpl stos out pop cltd rorb mov pop pop xchg aam je in sub adc into or add (bad) cmp outsb test sub (bad) cmp fcoms push mov add mov and lds cmp mov out daa inc arpl mov inc sbbl sahf mov dec data16 lahf mov dec test notb das dec push sti pop xor insl mov xor (bad) loopne sbb push outsl mov cmp stos (bad) jecxz add add lret call jp mov in dec mov std popa mov push xor mov ss outsl mov cmp mov cmp xchg scas lret out and jge mov lock inc arpl mov dec gs lahf mov dec push notl dec push movsb rcr push xchg iret or fdivr push xor mov stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp xchg scas lret and int3 call jp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa (bad) rorb cmpl push outsl mov cmp (bad) stos enter cmp xchg scas lret out and int pop and jp xchg mov add push sub sbbb dec push notl xor xchg xor xchg xor xchg dec insb mov xor mov cmp stos (bad) jecxz sbb push jb stos enter cmp (bad) lods leave in push cmp xchg lods lret and jne scas lret out and pop jns mov jmp and pushf mov dec sbbl sahf mov dec sbbw dec test stc push xor mov xor mov xor insl mov aaa push jo test cmp mov cmp jbe scas lret call jns mov jmp and pop jp mov in or mov in or inc add pusha jl mov out or inc add mov xor mov xor insl mov xor (bad) aaa push jo test aaa push jno stos enter cmp xchg mov jmp jp mov in or mov in or inc pusha jl mov lock inc bound mov icebp or popf mov dec insb mov aaa push jo test and pop js mov in or mov and aad dec data16 mov add pushf mov dec sbbl cwtl enter xchg mov and xchg ret repnz mov std xor mov and mov lea cmp (bad) stos enter cmp nop lods hlt inc xchg mov dec addw add das dec push clc adc xchg scas lret and jne scas lret out and jne scas int3 call ja mov jmp ja mov jmp ja mov in or inc pop jnp mov out or inc popa jge mov out or inc popa jle mov lock inc popa jle mov lock inc popa jle mov lock inc bound adc gs sahf mov dec gs sahf add dec imul xor mov push insl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp xchg lods lret pop cmp jne mov ljmp mov jmp and pop jns mov jmp and pop jp mov jmp and pop jp mov in or mov out or inc sbbb dec push mov xor xchg dec imul xor mov xor outsb mov cmp mov cmp mov cmp nop lods enter cmp nop lods leave out pop cmp xchg lods lret pop cmp xchg mov ljmp mov ljmp mov ljmp cltd mov lock fwait mov inc arpl mov dec sbbw dec andl adc dec test notb xor mov xor mov xor xchg xor ret loopne sbb ret loopne sbb push outsl mov sbb push outsl mov aaa push jo test cmp xchg scas lret out add inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov lock inc bound mov repz gs sahf mov dec andl adc dec insb mov dec insb mov push insb mov xor mov cmp mov cmp xchg lods lret and mov in or inc pop jnp mov in or inc pop jl mov out adc mov lock inc popa jle mov lock pushf mov dec data16 lahf mov dec push notb das dec push clc sbb (bad) loopne sbb vpaddd cmp stos (bad) jecxz sbb add push jno stos (bad) jecxz sbb push jb stos (bad) in sbb scas int3 call ja mov call pop jl mov out or inc pop jl mov out or inc pusha jge mov out or inc bound mov lock mov cs test notb das dec push notl xor mov xor xchg xor mov cmp stos (bad) jecxz sbb push jb lods enter cmp xchg scas lret and add mov in or inc arpl cvttps2pi test xor xchg xor xchg xor mov xor mov xor (bad) loopne sbb scas int3 call ja mov jmp js mov ljmp add and jns mov jmp and in or inc pop jl mov out or dec gs lahf mov dec sbbw xor mov xor outsb mov ss outsb mov ss outsl mov cmp nop lods lret and int3 jmp iret add bound xchg leave stc sub jg in dec jl loop pop mov mov sbb jg loope inc jbe fstl inc jae fmuls cmp fimull jne loope dec add xchg leave (bad) xor mov stos ficom inc jne ficom jl out push test ret cli das popfw rorb inc jl in dec xchg enter cwtl int3 (bad) xor (bad) or push jge cli xor roll pop dec xorb add add pop xchg (bad) arpl cmpsl fistl dec (bad) mov int3 (bad) xor into add imul imul lods loop dec jle jecxz dec (bad) mov int3 push jbe,pt in dec xchg (bad) cld xor aad inc ja loop dec jg jmp pop pop cli das fs lret imul jp jecxz dec jle call jmp add fs leave cld das popa xchg iret or mov roll cmp das jbe out pop xchg add or mov sub fcoms xor test adc jp stc jne,pt xlat or push int cmp scas call (bad) sub das popa xchg lret insl sahf rolb xor or cltd leave stc sub ljmp dec jge jmp and out push (bad) into or mov andl dec push std sbb push outsl mov ss outsl mov aaa add xchg scas lret out and lret call ja mov jmp jnp mov in or inc pusha jl mov out or inc bound mov lock fwait mov lock inc arpl mov inc sbbb dec push notl xor mov das dec push notl dec imul xchg mov icebp push sub sbbl sahf mov dec andl adc dec test notb das dec push notl xor movsl ret pop xor insb mov xor ret add add cld sbb ret loopne sbb push outsl mov ss outsl mov cmp nop lods enter cmp nop lods leave in push cmp nop lods leave out pop add jns mov in or mov out or inc popa jge mov dec sbbl popf mov inc sbbb dec sbbl lahf mov dec imul test xor xchg dec insb mov xor mov xor insl mov lods enter inc pop jnp mov in or mov jmp and pop jp mov jmp and pop jns mov jmp repz dec push stc push xor nop lods lret and int3 jmp jns mov in or inc pusha jl mov out or inc pusha jge mov out or inc bound mov out or inc add lahf mov dec push (bad) sbb (bad) sbb push jb stos enter cmp (bad) stos enter ds js mov ljmp mov ljmp mov in or mov in or mov in or inc pop jl mov lock pushf mov movsb in inc xorb ficom inc jns jecxz inc jno call jecxz dec jl (bad) xor sub mov lods fist dec jg loop inc je roll xor sub mov mov vmovntps fistl xchg std xor cltd lret pop xchg lret insb mov add mov adc mov mov sar pop mov ret push (bad) mov adc and (bad) clc das add or aas add out dec jns fist dec cmpl xchg loopne dec jl jmp add outsb cmpsl loopne dec (bad) mov sbb scas jmp pop mov mull pop out inc jnp jecxz dec mov add jb repnz into add jb fsts dec scas out pop xchg (bad) cld das bound sahf es mov add jae loop dec jl (bad) cmp (bad) dec test or xorb push mov xor stos jecxz push nop lret or ret mov mov (bad) or leave add sbb mov sbb (bad) sti das gs add add cmp outsb out pop nop int inc jns loopne inc jnp in and add aad jnp out push (bad) add insb lahf fmuls aas jae fist push (bad) lds add imull loope pop xchg lret add cwtl int3 pushl data16 rorl dec jnp loope inc jg out pop cwtl rorl inc je out push mov add outsl mov mov mov and into add ja in and pop xchg into adc (bad) imull das gs data16 (bad) jae jmp add outsl stos jecxz pop xchg rorb inc jnp jmp or test xor ficom dec mov add je out pop xchg rcrl (bad) insl stos in arpl movb js ljmp jl out sub aam dec xchg fistp push (bad) add mov ss jmp or mov sub in pop xchg int dec add cmp mov daa pop xchg lret add dec xchg add mov out add sub mov mov and vucomisd ficom jl out push mov add jb (bad) or jno loopne dec cmpl or jge out and rorl inc jg out and push inc jp repz pop xchg lret jno in es xchg rorl dec (bad) mov jecxz push mov cld cmp lods in push test mov and inc jbe jecxz dec cmpl sbb (bad) jo ljmp mov std cmp cmpsl loopne pop xchg (bad) adc imull popa cwtl aad dec xchg cli xor (bad) testl cs aad dec xorb dec xchg aad dec cmpl add jo loopne bound (bad) adc mov bound loopne push test xchg int dec add inc (bad) mov lods in jbe,pn jmp pop xchg rolb cmp jmp pop xchg leave std cmp mov sub pop icebp and xorl add pusha xchg mov mov adc mov xchg (bad) lock mov (bad) stc sub ss adc scas loop dec xorb xor fstpl dec jnp loop dec mov push inc jp fmull pop nop (bad) imulb pop xchg into add adc out dec jg jmp dec cmpl sbb xlat adc sbb sti sub sub add add cli xor movsl fistl dec test add jns sti cmp jmp movsb loopne pop cwtl fistpl push xchg (bad) adc stc aaa jnp out push xchg lret pushl movsb fstl dec xchg loopne add jmp sub enter jo fisttpl dec jle fstl inc jnp call adc movsl fisttpl jne in sub ficom push xchg aad inc jge in and sub rolb sub cltd lret sti das data16 rorl aas jnp loop dec jg out push mov fmuls inc jp in and xchg lret or mov (bad) push push (bad) (bad) incl mov repnz leave daa pop xchg int xor stc sub (bad) stc sub (bad) (bad) xor int cmp mov fcoml inc jns jmp arpl or cmpsl fimull or xchg rorl dec xorl xor roll inc jg out and cwtl rorb inc jle repnz fcoml dec cmpl or mov sub pop dec add stos ficomp dec cmpl xchg rorb dec mov add adc and inc jle out sub fcoml push xchg iret add adc mov loopne push mov or ret cli xor leave add addr16 rorb inc ja jmp or mov push push mov (bad) cmp jecxz push xchg add pop xchg leave add jnp sub pop mov std xor lret add insb mov mov add inc mov pop inc jae loopne dec xchg (bad) sbb imull addr16 push (bad) add cmp pop xchg rclb push xchg int dec mov mov cmovo lret pushl popa xchg enter (bad) mov mov adc adc lods fimul inc je aad ss lret pop mov mov mov add jne,pt jmp add jae add adc jl out dec test jmp out dec xorb hlt xor ficoml dec mov sti xor push mov push cmp popa lcall sub fstl push xchg stc xor loopne push mov loopne push mov cli ss cmpsl fstl dec xchg mull imul addr16 iret add gs rorl cmp push test ret insl movsb loopne push test leave pushl imul add inc jle jmp arpl mov iret pop cmp dec (bad) sar insl movsb fcoml mov sti cmp out push xchg int cmp call stc das addr16 aad inc ja in push xchg or jbe in push xchg add and into add jo ficom sub int imul call imull arpl cmpsl ficoml dec jl in push xchg (bad) divb insb mov rorb jnp jmp pop xchg movl pop push nop lret push inc jnp or mov sub fstl dec mov in pop nop iret push inc mov loope cmp loopne (bad) mov pop cltd rolb xchg ficomp push mov cli xor movsb fcoms cmp sub roll inc add jle cld cmp ficom xorb adc cli xor movsb fstl dec test int cmp fstl cmpl adc leave add jo fmuls inc jns in push xchg into pop cmp test adc and xchg rorl dec test imulb push mov or add xchg rorl inc test add mov jmp add outsl movsl loopne pop pushf xlat or sub fstpl pop xchg rorb dec cmpl and hlt sub lret jno jmp sbb xchg into or cmp mov aaa jbe out sub fbld pusha mov loop pop xchg aam dec mov add jne jmp imul aad push xchg iret or xchg add xor ljmp movsb in daa data16 fcompl push xchg rorb inc test and rclb dec mov add jp repz in pop lcall dec mov add jnp repz hlt das push xchg rcll push in pop xchg aad push (bad) lret or roll jp hlt xor jecxz pop fstps push xchg rorb cmp dec test add mov xor mov ljmp lcall inc jge cmc xor in push mov or pop pop pushf fistp cltd rorl cmp mov sub cmc xor xor loopne push xchg roll rolb cmpb test in jg push dec test (bad) xor popa sahf fistpl pop cltd aam dec mov add dec test in and dec test outsl stos in pusha add add (bad) cmp out pop xchg int inc jle and popa lahf fbld pop xchg iret or leave push inc cmpb and loopne pop xchg rcll dec mov or movl xor out sub lods in daa arpl rorb xor movsb loop pop xchg xlat adc (bad) enter mov repnz out arpl int dec mov add jne repz push out push rorl dec cmpl sub test push pop xchg aam push xchg rorl dec xchg push nop leave pop inc test in add imul and into or ret std cmp imull jo fist inc jns cli aaa push rorb imul mov xchg into or mov and jae (bad) inc jbe add stos ficoml inc jnp ljmp push jg in xchg lret xor fistl dec jbe loop inc jns in and mov cmc es xorl lock dec jl fisttp (bad) sub push inc jae roll xor mov mov int3 pushl lahf aam cmp xor sub das bound cltd into add outsb mov xchg push inc jo roll aaa addr16 lret (bad) xor jmp push inc (bad) rorb mov divl outsl mov mov ficomp push (bad) (bad) icebp and mov sbb mov inc jp pop insb mov pop dec jg stc das pushfw roll cmp sbb test fcompl push xchg rcll dec test add jno fcompl push add lods jmp pop push xchg add or jns,pt add add mov and leave add jne in cs mov fmuls je,pt jecxz dec xchg aad xor cltd rorb aas jbe out mov ficoml inc jb cli sub cmp adc mov sub jmp xor popf roll cmp fstl dec (bad) mov rorb adc and dec xchg jmp cmovbe repnz fcoml dec cmpl adc roll jle divl jae in sub call push pop fwait xlat adc sar jo mov imul sti arpl test and mov mov add jne hlt sub mov sub jo,pt add sbb in inc add out sub sahf xlat or je jecxz dec jge push js,pt jmp pop mov cmc sub roll inc cmpl repz iret add jno loopne push (bad) or divl push mov fsts inc jg cmc sub lods in push test (bad) stc sub aas outsl mov xchg lret std xor add pop mov out and mov int3 add cltd iret add jb fsts (bad) mov and into or outsl stos loope inc jns jecxz dec cmpl mov mov xlat sbb int3 add insb mov mov lods jecxz dec test (bad) cmp mov mov in dec cmpb and cmp out pusha pushf xlat push push mov hlt add add add add mov ret clc sub push (bad) mov daa arpl loopne push pop clc xor fstl cmpl cld xor call sbb rorl aas jnp cmc sub jnp icebp imul divb jo jecxz dec test es xchg int3 add ss jmp sbb rorb sub lret cld cs xchg int aaa outsb cmpsb in push mov xor in imul movsl call add mov pop push pop add pop xchg int3 add jae jmp cld add imul icebp xor and into or mov fmuls dec cmpb push xchg rorl push mov imulb insl cmpsb jecxz pop lahf fstl add leave add mov es xchg rorl and (bad) cld xor (bad) or cmpsl fsts dec jp loop inc js fcoml inc jge out and xor pusha cwtl rorl inc test (bad) aaa insl test in pop pushf fcompl pop fcompl push xchg int dec xchg add add inc (bad) ret jae fistp push (bad) add mov mov out sub int aas jne (bad) inc (bad) repnz push aas jne out pop popf cs fistp pop ficomp pop xchg iret or mov in pop popf ficoml dec mov add out and inc jne loopne dec mov xlat adc movl push pop xchg into add jno in push mov add push mov in push mov add jae loope pop (bad) add add add jbe icebp cs stos call ficomp push (bad) lds aas jl imulb outsb test and lret push aas js jmp imul mov xor jecxz dec (bad) (bad) imull arpl xchg leave std cmp adc jb,pt loope push mov (bad) cmp jmp sbb lret add daa bound fstpl pop cltd aad dec add data16 jecxz push mov std xor rorb inc jp loopne dec jge jecxz inc jb fistl dec js call stc sub xchg enter icebp sub fcoml dec test sti aaa jno out arpl fimull dec cmpb sub sbb int3 or mov lds add imul or mov in push xchg aam inc jg out sub pushf xlat adc enter movl add add jle stc xor fistp pop xchg int dec add mov fist dec jns fimul cmp sub es pop jl mov out or inc popa jle mov lock pushf mov dec imul xchg xor xchg dec insb mov xor outsb mov ss outsl mov cmp nop lods leave out and int3 call ja mov jmp js mov ljmp mov in or mov inc arpl mov inc sbbl lahf mov dec test notb das dec push loope sbb push jo stos (bad) jecxz sbb push jb lods lret pop cmp jbe scas lret call add add int3 jmp ja mov ljmp pushf mov dec data16 lahf mov dec push notb xor mov xor xchg push insl mov cmp stos (bad) jecxz sbb lods enter cmp nop lods lret pop cmp jne scas lret and int3 jmp js mov out or inc pusha jge mov out or inc popa jle mov repnz sub sbbb dec gs lahf mov dec push notl push insl mov ss outsl mov aaa push jo test cmp nop lods lret and jne scas lret out and int3 jmp add inc arpl cvttps2pi (bad) lahf mov dec test clc add mov and mov adc mov rcr sbb push je scas lret add or mov out or inc popa jle mov dec sbbl mov xor mov cmp stos (bad) in sbb lods leave out pop cmp jne scas int3 call js mov ljmp mov in or inc pop jl mov loope sbb push jb lods leave in pop cmp xchg scas lret and jne scas lret call jbe scas int3 jmp ja mov out or inc bound adc mov dec push mov xor xchg xor xchg xor mov push cmp (bad) lods leave in push cmp nop lods lret and pop ja mov ljmp mov ljmp mov jmp daa inc pusha jge mov out add sub gs sahf mov dec data16 sahf mov dec sbbw dec push notl xor movsl ret pop xor insl mov xor outsb mov xor ret (bad) sbb (bad) ss outsl mov cmp jne scas lret out and out and mov in or inc pusha jl mov out or inc popa jge mov lock inc bound mov dec imul xchg push insl mov xor (bad) loopne sbb (bad) aaa push jo test cmp xchg lods lret pop and pop jp mov in or xchg mov out or inc popa jle mov lock inc bound mov inc arpl adc dec test add pop xor mov xor (bad) loopne sbb push outsl mov cmp mov cmp lret call jbe mov jmp js mov ljmp mov jmp and pop jns mov in or pop jp mov out or inc bound mov inc arpl mov inc arpl cvttps2pi sbbl sahf mov dec imul xchg xor mov xor insl mov xor outsb mov xor enter ds ja mov jmp add mov in or inc add pusha jge mov out or inc bound mov inc arpl cvttps2pi test das dec push notl dec add test loop push cmp xchg scas lret out and pop js mov ljmp mov out or inc sbbb dec gs sahf mov dec andl adc dec imul xchg xor insl mov cmp jne scas lret call js mov ljmp mov jmp and pop jnp mov in or inc pop jnp mov out or inc gs sahf mov dec push clc adc mov aaa push jo test cmp (bad) stos leave call jbe mov jmp daa inc pusha jge mov out or inc popa jle mov lock sub add sbbl dec imul mov shr or dec push notb das dec xchg xor mov xor mov xor outsb mov ss outsl mov cmp (bad) lods enter cmp nop lods leave out pop cmp nop lods lret pop cmp mov sbb cmpsl aad das pop xchg mov mov adc mov xchg (bad) mull xorl gs (bad) repz mov lret js jmp pop xchg enter test mov mov and ficomp push xchg into or mov fcoms dec test cld cmp in pop xchg iret or mov in sub movsb fistp push xchg rcrb mov stc arpl add xchg rorl inc cmpb ljmp xchg cld cmp loopne push xchg lret or int3 or (bad) (bad) cmp ljmp jg cmc sub call sbb nop leave pop inc add xor insb movsl jecxz push mov add jo iret add lods in push mov stc das fs xbegin (bad) das arpl stos loopne push mov cmp fs daa insl test and ficoml push xchg rcll push xchg rorb dec mov add jp out pop xchg enter mov sub push inc je fmuls cmp out pop (bad) popa pushf fcoms inc jle stc xor stos call pop bound or les cmp repnz daa pop xchg lret imul jno jmp add add add pusha cltd rolb xor (bad) sti arpl addr16 lret add cmp pop xchg leave stc xor (bad) repz xchg (bad) cli sub ret arpl movsb fisttpll cmp das pop lea cmpsl (bad) inc jbe jecxz dec (bad) mov adc je dec mov push jns,pt divl push ficom pop dec xorb (bad) cmp mov jmp movsw out pop mov xlat adc cltd out data16 and adc cmp outsl stos in pop mov rclb dec jg lock ljmp xchg rolb inc js loop dec jl fisttpll inc jns in daa stos out bound mov dec gs lahf mov dec insl mov xor lods enter push cmp nop lods lret pop cmp jne scas lret out and pop add mov in or inc pop jl mov out cvttps2pi sbbl lahf mov dec test notb cs test notb xor mov xor xchg xor insl mov ss outsl mov aaa push jo stos in dec orl adc fist push mov mov adc pop dec jl stc cmp call sbb int dec add adc ret add mov xor fcomps push mov mov sub cwtl int3 add mov and int dec add sbb (bad) cli sub dec test sbb mov add jno ficoml push mov (bad) cmp mov xor js icebp xor push ficomp imul ficoml mov add jle add mov out sub fstpl dec jnp cmc xor pop pop popf fcoml mov add and pop repnz insb cmpsl fist xchg iret push dec cmpl fistl push xchg lret add jle repnz in push xchg rorl inc test clc xor mov sub stos jecxz pop popf xlat push push nop lret add mov in sub ficomp dec (bad) lds jle repz stos in fs sbb dec mov cld cmp out sub xlat or mov in and jns divb insb lods in daa popa xchg xlat adc inc jl cli aaa jae icebp das gs loope pop nop into or cmpb and into add mov add loop add (bad) adc mov lret insb mov leave or ret inc test divl pusha fwait aad push mov or rorb (bad) enter mov and push nop into push cmp arpl test stc xor out pop pushf fistpl push xchg iret or add cmp clc xor icebp xor out pusha lcall inc jl stc xor mov das imul mov ret (bad) cmp ljmp ja lock ficoml inc movsl (bad) in and xchg enter stos fisub inc sbbl mov cs test notb das dec imul xchg aaa push jo test add mov in or inc pop jl mov out or sub data16 lahf mov dec push notl dec push movsb rcr (bad) sbb jbe scas int3 jmp jns mov in or mov out or inc popa jle mov lock popf mov dec gs lahf mov dec imul xor insl mov ss jo test aaa push jo test cmp stos (bad) loop sbb push je lods lret pop cmp jne lods lret pop cmp jne scas lret and jne scas lret and int3 call jbe scas int3 jmp jp mov in or mov in or inc pop jl mov out or inc pop jl mov out or inc pop jl mov out or inc pusha jge mov dec data16 sbbl dec push notb das dec push (bad) sbb insl mov xor insl mov cmp jne scas lret out and jne mov jmp ja mov jmp js mov ljmp mov or out and jp mov in or mov in or inc pop jl mov lock ss into std cmp fisttpl inc je (bad) cmp cmpsb (bad) inc jns jecxz inc jne fmuls je,pt loope dec mov mov xor insl mov cmp mov push je mov in or inc pusha jl mov lock pushf mov dec gs sahf mov dec data16 lahf mov dec test cmc adc dec imul sti pop xor insl mov ss jo test cmp nop lods add jmp es popa jge mov lock inc bound mov dec addl rcr pop xor mov ss outsl mov cmp lea cmp mov cmp xchg scas int3 call ja mov ljmp mov jmp and pop jl mov out or inc popa jg mov aam adc dec push std sbb push outsl mov cmp (bad) lods int3 jmp ja mov ljmp mov ljmp mov in or inc bound mov dec gs lahf mov dec imul xor mov ss jo stos leave in pop cmp xchg scas lret call add jp mov in or inc pusha jge mov dec gs sahf mov dec test add sbb push jno test cmp nop mov ljmp mov (bad) cvttsd2si andl movsb rcr sbb enter cmp shr or inc popa jge mov dec imul xor mov cmp mov cmp nop lods lret and pop jns or inc arpl mov dec push stc adc cmpsl (bad) cmp mov pop jbe mov ljmp mov out or inc data16 lahf mov dec insb mov push in sbb lods leave in pop cmp int3 call ja mov in or add mov inc arpl adc mov dec push cld sbb leave add or pop jnp mov lock dec push movsl rcr sbb push outsl mov and mov dec imul nop lods leave out and repnz dec imul mov aaa push jno lods lret and ja mov ljmp mov out or inc bound mov dec sbbw dec imul xor ret (bad) sbb ret loopne sbb push outsl mov cmp (bad) lods enter (bad) repnz mov dec data16 lahf mov dec push notl xor xchg xor add outsb mov aaa push jo stos (bad) jecxz push cmp xchg scas lret call ja mov jmp and mov in or add cmp xchg mov ljmp mov jmp and pop add mov out or inc bound mov dec test das dec push notl xor insl mov xor insl mov xor ret loopne sbb (bad) aaa push jo test cmp (bad) scas int3 call ja mov ljmp mov ljmp mov ljmp mov ljmp mov in or mov lock popf mov inc sbbl lahf mov dec push clc adc add push jo test aaa push jo test loope sbb push jno stos (bad) in sbb push jb lods leave out pop cmp jne scas lret out add pop jge mov dec sbbl mov pop xor mov xor insl mov xor (bad) loopne sbb push jae lods lret pop cmp jne lods lret and jbe mov ljmp mov ljmp mov in or mov dec gs lahf mov dec data16 lahf mov dec push clc adc movsb rcr push xor mov xor (bad) jecxz sbb scas lret pop cmp jne scas lret and pop js mov ljmp mov ljmp add jp mov out or inc bound mov inc sbbl mov xor xchg xor mov aaa push rolb inc jbe fimull aas test ss outsl mov cmp popl mov ljmp or inc pop jl mov out or inc popa jge mov dec andl adc dec push movsb rcr push xor mov into add popa xchg call mov jge mov lock dec push notl xor xchg xor xchg push insl mov das lahf jmp pop xchg lret add insl mov mov aaa pop jns mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov lock inc bound mov lock inc bound mov hlt adc mov dec andl adc dec andl adc dec push notb das dec push notl dec imul jb stos (bad) in sbb push jb stos (bad) in sbb lods enter and pop js mov jmp jns mov in or inc popa jle mov out or inc jle repz sbb into ljmp mov in or inc pusha jge mov out or inc popa jle mov notb das dec imul xchg xor xchg xor mov xor mov xor mov cmp mov cmp (bad) stos enter cmp nop lods leave in push cmp nop lods fisub add stos fist push cmpl fisttpll push aas jae fcoml jge xor ljmp xchg aad dec mov add jae in and lods in movsb fistl push xchg add add cmp loope dec jge clc xor rcll push mov add dec test fstl xchg iret add jno mull add mov int inc jle (bad) cmp cmc das imul xlat ficom movl cmp sbb aam pop xchg rorb mov cld das pusha xchg rcll dec test push inc test std aas jge cli cmp xlat push imul add imul dec mov add jnp hlt sub pop pop lcall cmp jb icebp sub jmp pusha sahf faddl adc xchg rorb (bad) sar jge divl jo ljmp lcall add enter mov out mov iret add sub fistp xchg aad jne out arpl into or jp imulb pop lcall ss repnz xlat push dec xchg add add sti cmp bound les inc jnp cmc xor loopne push mov imulb cltd iret add push pop xchg lret or cmp xor out das imul dec test push inc jp divl pop xchg xlat adc inc jnp out sub inc ja in dec xchg add jl clc xor arpl push push xchg lret jge lock loopne push xchg iret or (bad) cmp push lahf fcomps pop xchg int dec mov incb mov and mov and pushf rorl dec add xchg lret jne stc xor cwtl enter mov rolb push lret pop pop repz mov test mov cwtl lret (bad) sub xor cltd (bad) push inc jp divl push xor mov ss jo test aaa push jno stos (bad) jecxz sbb push jb stos (bad) jecxz sbb push jb stos enter cmp nop scas int3 jmp ja mov jmp jns mov in or inc pop jnp mov out or inc je add xchg mov in or inc pop jge mov dec data16 lahf mov dec test notb xor mov xor mov add (bad) push xor mov xor mov cmp stos (bad) in sbb lods enter cmp js mov jmp and pop jns mov jmp and pop jp mov out or inc bound mov inc arpl mov inc sbbl mov cs test notl xor mov pop cmp xchg scas lret out and int push and pop jns mov jmp and mov in or mov out or dec sbbl dec push clc adc test jecxz sbb scas lret and pop js mov ljmp mov icebp cvttps2pi andl dec push movsb rcr sbb push jb dec insb mov add push jb stos leave out pop cmp jbe scas int3 call cltd rcr sbb push jo stos (bad) jecxz sbb lods lret and int3 add or inc pusha jge mov lock pushf mov push insl mov ss outsl mov aaa push jo test cmp nop lods lret and jbe mov jmp jp mov dec gs add xor mov push outsb mov cmp (bad) lods leave out pop cmp xchg mov jmp jl mov out or inc popa jle mov repnz sbbl movsl ret sbb outsl mov aaa push jo test aas pop jp mov out or inc pusha jl mov out or inc bound mov dec push add test xor mov cmp scas int pop and pop jp mov in or inc bound mov dec imul mov stos (bad) jecxz and jbe mov jmp jg mov dec push notl dec push mov xor mov aam or sahf mov dec push movsl rcr pop xor insb mov push cmp nop scas lret and pop jbe mov ljmp mov jmp and pop jnp mov out or popf mov dec gs sahf mov dec andl adc dec push mov xor mov ss outsl mov cmp xchg scas lret and int3 call jge mov repnz add cvttps2pi (bad) lahf mov dec push cli push xor mov cmp mov inc pop jns mov in or inc popa jge mov dec data16 sbb push jo lods leave out and pop jp mov in or mov dec push clc adc movsl ret sbb pop jne mov out or inc bound mov push insl mov cmp jbe add pusha jge mov dec imul xchg mov jmp and mov dec sbbw iret in or inc popa jge mov icebp movntps test ss jno lods enter cmp ja mov lock sub test xor mov xor outsb mov add cmp into in or inc popa jle mov icebp cvttps2pi mov push insl mov cmp (bad) lods leave out pop cmp jbe scas int pop and pop jge mov dec add ret loopne pop cmp js mov jmp and pusha jge mov out or sahf mov push outsl mov cmp xchg mov ljmp mov out or inc sbbb dec test clc pop add push je lods leave out pop cmp jne mov jmp jnp mov out or inc pusha sbbb dec imul lea cmp mov inc pop jns mov in or inc popa jle mov repnz cs push cld sbb push outsl mov cmp (bad) lods leave in add cmp xchg mov jmp jns mov in inc xchg into in or inc push cld sbb push jo stos (bad) out push cmp xchg scas lret and shr or inc popa jle mov lock inc bound mov ss jno stos (bad) in sbb lods leave out push cmp xchg lods lret and int3 call js mov ljmp mov dec imul mov xor scas lret out and jns mov jmp and mov out or inc gs lahf mov dec imul mov aaa push jo stos (bad) in pop cmp jne scas lret call jp mov in or inc arpl mov dec sbbl lahf add mov dec push notl xor mov xor cmc sub sbbl movsl rcr sbb (bad) ss outsl mov aaa push jno stos enter cmp xchg scas int add sub lcall arpl adc (bad) lock inc bound mov inc arpl mov inc sbbl mov xor xchg xor mov aaa push jb stos enter cmp (bad) stos enter cmp xchg mov jmp js mov ljmp mov jmp and pop jnp mov out or inc pusha jl mov out or dec gs sahf mov dec imul mov dec insb add add sbb outsb mov xor (bad) ss outsl mov cmp xchg mov jmp ja mov ljmp mov jmp and pop jp mov in or inc pop jnp mov out or inc arpl clc adc movsl rcr pop xor insl mov aaa push jno test cmp (bad) lods leave in push cmp xchg scas lret in or inc pop jl mov out or inc bound mov lock fwait mov dec fs add xor mov ss outsl mov cmp (bad) stos leave in pop cmp xchg mov jmp ja mov jmp and pop jns mov in or and mov dec data16 lahf mov dec test add notb das dec push stc adc movsl ret sbb (bad) loopne sbb push jae lods leave out pop cmp xchg scas lret out and pop ja mov jmp jns mov jmp and pop jp mov in or inc pop jl mov icebp push sub sbbl mov push insl mov (bad) repnz mov cmp in push mov stc xor test cs (bad) cmc outsb out sub ds inc insb mov ss jo test add push inc outsl popf int3 cli sub mov add popa xchg sarl das dec push notl dec push mov xor mov and inc jnp adc ret sbb push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp xchg lods lret pop cmp js mov in or inc pop jnp mov out or inc popa jle mov lock pushf mov inc sbbb dec sbbl mov xor add sbb push jo test aaa push jno stos (bad) jecxz sbb stos (bad) in sbb scas int3 jmp js mov ljmp mov jmp and pop jp mov in or mov in or sub sbbl mov xor mov xor insl mov xor ret loopne sbb push outsl mov aaa push jo test cmp xchg scas lret call ja add mov xor insl mov xor (bad) ss outsl mov aaa push jo test cmp je lods lret and jne scas lret and pop ja mov jmp js mov ljmp mov ljmp mov out or inc popa jge mov lock inc add mov cs push notb xor test xor xchg push outsl mov ss outsl mov aaa push jo test cmp mov cmp (bad) stos enter and pop js mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov lock dec sbbl sahf add mov dec data16 sahf mov dec data16 lahf mov dec test notb das dec push stc push xor mov xor mov xor mov xor outsb mov xor ret (bad) sbb (bad) jecxz sbb push jno stos (bad) jecxz sbb stos add jmp ja mov jmp js mov ljmp mov out or inc pusha scas out push jb lods enter cmp nop lods leave in push cmp nop lods leave out pop cmp nop lods lret pop cmp je lods leave add or inc bound test sbb mov mov xor mov push insb mov xor outsb mov cmp jne scas lret out and jbe scas int3 jmp js mov ljmp mov jmp and mov in or mov lock inc bound mov inc bound sysexit push outsl mov cmp (bad) lods leave in pop cmp jne scas lret out and pop jl mov out or inc popa jle mov icebp or pushf mov add mov xor xchg xor mov push outsb mov ss outsl mov mov pusha jge mov out or inc popa jge mov out or inc popa jle mov lock dec add (bad) push xor mov xor mov xor ret (bad) sbb ret loopne sbb (bad) in sbb lods enter add in sbb stos enter cmp (bad) lods enter cmp (bad) lods leave in push cmp nop lods leave out push cmp xchg mov jmp ja mov jmp ja mov jmp jnp mov in or inc pop jl mov in or inc pop jl mov icebp or pushf mov inc sbbb dec sbbl xchg xor xchg xor mov aaa push jo test aaa push jo test aaa push jo test aaa push jo test cmp test cmp xchg lods lret pop and jns mov jmp and pop jns mov jmp and pop jns mov jmp and jns mov jmp and pop jp mov out or inc popa jle add lcall bound mov lock inc bound mov lock fwait mov inc bound mov dec data16 lahf mov dec sbbw dec andl adc dec sbbw dec test notb das dec push stc adc movsb rcr push xor mov dec insb mov dec imul sbb push jo test cmp lods lret pop cmp xchg scas lret out and lret out and int3 call jbe mov jmp js mov ljmp mov out or add sbbl sahf mov dec data16 lahf mov dec sbbw dec andw add dec push mov xor xchg xor insl mov xor (bad) sbb push jb stos enter cmp int3 jmp jns mov jmp and pop jns mov jmp and pop jns mov jmp and pop jp mov in or jle out pop aas pop jns mov jmp and pop jns mov in or mov in or in pusha cltd iret pop cmp jnp divl addr16 cmp ret je stc outsl stos repnz ficompl inc cmpb adc mov jmp adc (bad) (bad) cmp outsb mov int dec cmpb in sub xlat or xor mov les inc cmpl mov loop add add adc scas int3 jmp js mov jmp and mov out or inc bound mov dec gs lahf mov push jae lods leave in push cmp nop lods lret and jbe scas int3 call ja mov jmp js mov ljmp mov out or inc add lahf mov dec xorw mov cmp (bad) lods leave in push cmp jne scas lret call js mov out or pushf mov dec data16 lahf mov dec andl adc dec push clc adc dec imul mov xor insl mov xor (bad) loopne sbb push outsl mov aaa push jo test aaa push jo add inc add mov ljmp mov ljmp mov ljmp mov ljmp mov ljmp mov lock inc bound mov sub jp mov in or inc pusha jge mov lock pushf mov dec sbbw push outsl mov dec add lods leave out pop cmp xchg scas lret and int3 jmp js mov jmp and pop jp mov lock pushf mov dec gs sahf mov dec test notb xor mov xor xchg dec imul ss outsl mov cmp mov cmp xchg scas lret and int3 jmp js mov jmp add sub (bad) sahf mov dec sbbw dec andl adc dec push notb das dec imul mov cmp mov cmp nop lods leave in push cmp xchg lods lret and jne scas lret out and int3 jmp jl mov lock inc bound mov cs push notl xor mov xor xchg les aaa outsl mov mov xor insl mov ss outsl mov cmp mov cmp (bad) stos enter cmp nop lods leave call js mov ljmp mov jmp and pop jp mov in or mov out or inc bound mov lock add add mov push xor mov xor outsb mov xor (bad) loopne sbb push outsl mov aaa push jno stos (bad) in and lret call ja mov jmp ja mov ljmp mov jmp and pop jns mov in or mov lock sahf mov dec sbbw xor xchg push insb mov xor insl mov xor jo test cmp mov cmp (bad) lods enter cmp nop lods leave out pop cmp xchg scas lret call ja mov in or inc pop jnp mov out or inc pusha jge mov out or xchg (bad) cmovns loopne dec jp loop inc jb roll popa pop stc sub xchg int3 (bad) das imul dec xorl rolb jl,pt out and inc jae fmuls cmp int3 cld sub dec (bad) mov push inc jns call push inc jle sti xor fstpl push mov adc mov jecxz pop nop rorb dec mov add inc xchg push inc mov add mov jecxz cmpsw loope push xchg rolb cmp aam ss out and add and cmp lods out arpl push push mov in and movl sbb mov pop inc jne loopne push (bad) into or data16 lret or cmpb sub mov (bad) (bad) mov std cmp mov xor sbb lret or mov cmc xor in bound cmc xor insl mov loop push xchg rcll dec (bad) add aam inc cmpl push mov (bad) cmp in pusha popf fsts dec add out pusha cltd rcll cmp add jb jmp pop xchg rcll push (bad) (bad) jle out sub in pop cltd (bad) cmovbe test and rorb dec add inc jnp in sub fstl push xchg int3 add jle repz loop push mov aad dec jle stc outsl test and cwtl rorb mov cli cs dec test sub ficomp pop pushf fcoms dec add cmp lock pop nop leave push inc xorl int3 or das push frstor pop fwait iret push jns,pt out es cwtl jmp pop xchg leave add xorl lret insl movsb add ficoml inc jle jmp pop xchg int inc js lock fstpl pop xchg iret add push mov add jge icebp sub loopne push mov or mov out pop xchg int3 or mov ljmp mov add outsl cmpsb fcoml inc jl call clc xor mov lret cmpl pop xchg rorl pop cltd into or mov loope push xchg fcoms dec mov push inc jp sti aaa add cmc xor cmpsb cmc xor in pop lcall aas jnp loop push nop iret adc fstps pop xchg fcomps pop lcall dec mov add aas jle add mov clc cmp cmp cld cmp jg cld cmp stc cmp mov or int3 or (bad) rclb push xchg (bad) push pop fwait add sbb test add cmpsl jecxz pop cltd rolb jno,pt call push inc xchg mov and push mov fstpl inc jnp add inc pusha jge mov dec test stc adc movsb rcr pop xor insl mov aaa push jno stos (bad) in sbb lods leave out pop cmp jns mov in or mov out or inc pusha jge mov repnz sub sbbl mov xor insl mov cmp (bad) lods leave out and lret call ja mov ljmp mov in or inc pusha jl mov out or inc popa jle mov dec test notl dec imul mov xor insl mov add sbb push jo test cmp jbe scas int3 call ja mov ljmp mov add or inc bound mov inc sbbb dec gs sahf mov dec push movsb rcr push xor mov aaa push jno stos (bad) jecxz sbb push je lods lret and jbe scas lret call jnp mov out or inc pusha jge mov lock popf mov dec sbbl mov in or sub sbbl movsb rcr push xor mov xor insl mov ss outsl mov cmp stos (bad) jecxz sbb lods leave in and pop js mov ljmp mov in or inc pusha jl mov out or inc popa jle mov lock inc bound mov inc sbbb dec imul mov xor mov sbb lods enter cmp xchg scas lret out and iret jmp and mov in or inc popa jge mov lock inc bound mov inc arpl cvttps2pi sbbl movsb rcr push xor mov xor outsb mov aaa push jo stos (bad) jecxz sbb push jb add aas pop js mov in or inc pusha jge mov lock inc bound mov dec sbbl lahf mov dec push clc adc cmpsb ret (bad) sbb (bad) sbb mov jmp and mov in or inc pusha jge mov lock fwait mov dec push notl movsb rcr pop xor (bad) loopne sbb push outsl mov pop cmp xchg scas lret out and iret in or mov out or inc popa jle mov icebp or sahf mov dec sbbw dec imul mov aaa push jo test cmp mov cmp nop lods lret and ja mov ljmp lcall sbbw dec push notl xor xchg xor xchg dec insb mov xor outsb mov cmp nop lods lret pop cmp jne scas int3 call ja mov jmp add pop js mov ljmp mov jmp and mov icebp push sub sbbb dec data16 lahf mov dec imul outsl mov cmp (bad) lods leave call scas out dec jnp call call cmc and fadds cmp inc jg jmp out and mov mov rolb ja,pt in dec cmpl add andl movsl ret sbb push outsl mov cmp jnp mov out or inc pusha jge mov out or inc bound mov dec sbbl lahf mov dec test notb xor mov ss jo test cmp mov cmp add nop lods leave out pop cmp jne scas lret and shr or inc pop jnp mov out or inc popa jle mov inc sbbb dec gs sahf mov xor mov xor (bad) jecxz sbb lods leave out pop cmp jne scas lret call ja and jle mov lock pushf mov dec push clc adc dec push mov xor mov xor insl mov ss outsl mov cmp mov cmp mov in or inc pusha jl mov out or inc bound mov inc arpl movntps sbbl mov xor mov xor (bad) aaa push jo test add add add push jb stos enter cmp xchg lods lret pop aas pop jns mov jmp and mov in or inc pusha jle mov icebp push sub sbbb sbbl mov aaa push jo test cmp (bad) stos enter cmp nop lods lret and jbe mov ljmp mov in or inc pop jle mov dec sbbl lahf push test xor xchg push insb mov xor add sub sbbl dec push mov mov (bad) lock es mov cmovno ficoml inc (bad) mov pop push test hlt and xor loopne pop jbe mov add add pop and pop jp mov in or inc pusha jge mov lock mov xor xchg push insl mov aaa push jo xchg scas lret and int push and pop jns mov in or inc bound mov dec gs sahf mov dec test notl dec push movsb ret sbb outsl mov cmp mov aas pop js mov jmp and pop jp mov in or inc pusha jge mov out or inc bound mov inc sbbl movsl ret sbb vpaddd aaa push jno lods enter cmp xchg scas lret mov push xchg out and mov out or dec mov (bad) imull xchg enter mov ljmp add or sbb jge ficom inc jp jecxz dec jg in sbb (bad) mov stos ficom and into add jl jmp push loop pop xchg (bad) imull pop lea (bad) pusha xchg and rorb dec test divb insb mov adc mov sbb mov cli bound xchg (bad) stc xor cmpsb in dec ja in pop xchg int3 add push dec xorb imull sub cmp rolb aaa push gs vcomiss int3 pushl addr16 adc mov and lret jno fist push mov clc imul mov clc sub xchg leave add push xlat or sbb mov rorl inc xorb or mov sbb mov sbb pop push test add out and ret cli ss loop dec jl loope inc jnp fist inc jp ljmp arpl cltd iret or inc jns jmp pop cmp push xchg enter outsl lahf iret add sub pop inc je into sti sub scas fisttpll aaa fs ret dec jns sar sub xchg lret pop mov popf int sub xchg leave (bad) xor or or sahf mov dec imul mov cmp (bad) lods leave out sub int inc je loop (bad) in pop cmp jbe scas int or pop jnp mov out or inc bound mov dec gs lahf mov dec imul mov cmp xchg scas lret call ja mov in add daa inc pusha jge mov icebp or pushf mov dec sbbl mov xor insl mov xor (bad) sbb push jo stos (bad) in sbb add inc out xor mov xchg les (bad) mov sbb test and jge mov icebp or sahf mov dec push clc sbb push jb stos enter cmp xchg lods lret and int push and jns mov jmp and pop jnp mov out or inc pusha jge mov dec sbbw dec push clc adc movsl rcr push xor mov xor (bad) loopne sbb enter cmp nop lods leave in pop cmp xchg scas lret call add xchg mov ljmp mov in or mov icebp push sub sbbl lahf mov dec test notl xor mov xor mov xor dec test adc jmp js int3 jmp jp mov in or inc pusha jge mov lock popf mov dec test negl xor (bad) sbb push jb stos (bad) in sbb lods leave in push cmp jne scas lret call ja mov ljmp mov dec sbbl mov xor xchg push insl mov ss outsl mov aaa push je lods leave out and pop jns mov in or inc pop jl mov add add or inc pusha jge mov out or inc bound mov inc arpl adc dec push movsb rcr push xor mov xor (bad) cmp stos (bad) jecxz sbb stos enter cmp xchg mov add or inc bound mov inc sbbb dec push stc adc movsl ret sbb (bad) in sbb mov jmp jle mov dec sbbl dec imul xchg push insl mov cmp nop lods lret and int push and jns mov adc sub cwtl rcrl mov out or inc popa jle rcr push xor mov push insl mov add aaa push jo test cmp nop lods lret and int3 jmp jnp mov out or inc popa jle mov lock pushf mov inc sbbb dec sbbw dec imul mov pop cmp xchg scas lret out and int3 jmp jns mov jmp sub lcall bound adc dec push clc adc dec push movsb rcr sbb outsb mov aaa push jo test cmp (bad) lods enter aas pop js mov ljmp mov in or inc pusha jl mov out or inc bound mov inc sbbl mov xor mov xor outsl mov add add push jb lods lret pop cmp jne scas lret call jns mov jmp and mov icebp push sub sbbb fildll push cli pop xor outsb mov cmp xchg scas lret call js mov out or inc bound mov dec add movsl rcr sbb (bad) aaa push jo stos (bad) jecxz sbb lods enter cmp xchg mov ljmp mov in or mov in or inc pusha jge mov out or inc bound mov dec sbbl mov xor mov ss jo test cmp mov cmp xchg scas lret jmp js mov out or inc popa jge mov lock pushf mov add add sub gs sahf mov dec test stc push xor mov xor leave out pop cmp jne scas lret call js mov jmp and pop jp mov in or inc pusha jge mov out or inc bound mov dec andl adc dec imul jo stos (bad) jecxz sbb push jb lods enter cmp xchg lods lret andl push insl mov xor (bad) aaa push jo stos (bad) in sbb lods lret and int3 jmp jns mov out or inc bound mov inc sbbb dec test stc adc movsl ret sbb push je lods lret pop cmp js mov ljmp mov jmp and add jns mov jmp and pop jp mov in or mov in or mov lock pushf mov inc sbbb dec sbbl sahf mov dec data16 lahf mov dec data16 xor enter cmp nop lods leave in pop cmp pop jns mov in or mov in or inc pop jnp mov out or inc sbbl lahf mov dec test notl xor mov xor mov xor mov cmp mov cmp (bad) stos enter cmp nop lods lret jne and (bad) cld sub inc jbe in push xchg lret add or inc popa jle mov inc arpl add inc sbbb dec data16 lahf mov dec andl adc dec imul xor mov xor (bad) loopne sbb (bad) ss outsl mov aaa mov (bad) cmp mov (bad) xor (bad) jecxz sbb lods leave in add aas pop js mov ljmp mov jmp and pop jp mov inc sbbb dec sbbl sahf mov dec sbbl lahf mov dec push mov xor xchg xor xchg dec insb mov xor mov xor outsb mov cmp (bad) stos enter cmp popl add cmp nop lods leave out pop cmp xchg lods lret pop cmp jne scas lret and iret jmp and mov jmp and mov in or inc pop jnp mov in or inc pop jl mov out or inc pop jl mov icebp or fwait mov inc sbbb sbbl add xor xchg xor mov xor (bad) ss outsl mov ss outsl mov ss outsl mov aaa push jo test cmp xchg lods lret pop cmp jne scas lret out and lret call jbe scas int3 call jbe scas int3 call ja mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jge mov lock inc popa jle mov lock sahf mov dec sbbw dec andw dec imul mov ss outsl mov cmp (bad) stos enter cmp ljmp call jbe mov ljmp fwait mov icebp or mov xor xchg xor xchg dec insb mov xor insl mov xor insl mov cmp (bad) stos enter cmp nop lods leave in push cmp nop lods leave out pop cmp jne scas lret and lret call jbe scas iret in or mov out or inc pusha add mov lock inc bound mov inc arpl adc mov dec push movsb rcr push xor mov xor jo test cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas lret out and jns mov in or mov in or mov in or inc pusha jl mov out or inc bound mov xor xchg ss outsl mov cmp (bad) lods lret and jne scas lret out and lret call cltd (bad) inc jne (bad) or je fmull outsl lahf into pushl pop mov ret popa cwtl int cmp mov call and xlat adc iret or mov sub fstpl mov add add mov fmuls cmp and cwtl aad inc jbe fisttpll cmp ficompl pop pop clc bound mov ficoml dec mov pushl mov and ret add mov pop push (bad) lret or lods jecxz push xchg int cmp pop cwtl rorl inc xchg clc xor cld cmp and push xchg iret or sar jno out daa popa mov enter add add ret std cmp cld xor jmp bound into push dec xchg cli cs in push xchg ficoml pop xchg iret or mov loope inc jbe in pusha xchg lret add jne in and rorl cmp pop pop xchg into add sub fstpl push mov or mov cs movsl ficom pop cltd rorl dec mov add jne imulb mov rclb dec xchg sti cmp std aaa jb out sub fcoml push mov or cmpl imul mov out pop xchg aam dec xchg (bad) cmp stos fist cmp das data16 ficomp (bad) push inc (bad) mov jmp or test add outsb movsl jecxz pop (bad) int3 or mov in push mov or lods in sub rclb mov cli cmp add sub push dec mov add sub ficomp dec test lret add jo fimull dec (bad) enter mov cmp in das insb stos in popa popf aad push mov add ss in es sahf fcompl push mov cmovs lock ficomp pop xchg rorb inc add xor pop xchg lret add outsl movsb ficoml inc jl in sub fsts mov add mov out pop ficomp push mov push inc jp repz push pop xchg iret push inc mov std xor mov pop pop mov lret jbe repz fistl push mov push inc jle lock movsl in insl test ficompl popa sahf fmuls dec mov or lret mov or lret or lret push inc xchg add inc cmpl inc add inc xchg or mov or dec mov adc adc xchg rcll dec nop rorl inc jbe lock pusha xchg (bad) js lock push xchg out push lcall aas je in dec mov imulb pusha xchg leave std cmp in push push mov call push push xchg (bad) adc adc scas out inc jp loopne dec jp add loopne pusha cmpsl ficom inc jbe repz pop mov std arpl roll xor leave cli sub (bad) mov mov fistl dec xorl cmpsb ficoml aaa push jno stos (bad) in sbb lods enter cmp nop lods int3 call jge mov lock inc bound mov lock inc bound mov lock fwait mov inc arpl mov inc arpl mov dec andl add xor insl mov xor ret loopne sbb push outsl mov add nop lods lret pop cmp jne mov ljmp mov in or mov in or inc pusha jge mov out or inc popa jle mov lock inc bound mov dec data16 lahf mov add add cs test notb das dec push notl xor mov xor mov push insb mov aaa push jo test cmp stos (bad) jecxz sbb push jb stos (bad) in sbb stos (bad) in sbb lods enter cmp xchg mov ljmp mov jmp and mov in or mov in or inc pop jl mov out or inc pusha jl mov movntsd sbbl mov dec insb mov xor outsl mov ss outsl mov push cmp xchg mov jmp jns mov jmp and pop jns mov in or mov out or inc pusha jge mov icebp or pushf mov dec andl add fdecstp adc dec push notl dec imul xchg xor mov xor outsb mov cmp mov cmp (bad) lods enter cmp nop lods leave in push cmp xchg lods lret push outsl mov aaa push jo lods enter cmp lret call ja mov ljmp mov ljmp and pop jl mov out or inc popa jge mov dec data16 lahf mov dec test movsl adc rclb mov sbb lods loopne inc jae aad inc ja fisubr test sbb lods leave in push cmp nop lods leave out pop cmp jne scas lret pop cmp jbe scas lret call jbe scas int3 jmp jb fidivr mov add xor dec xchg stc das imul (bad) or push int3 std imul mov jmp and pop jp mov in or dec gs sahf mov dec andl adc dec push notl das dec imul xchg xor mov push outsl (bad) stos enter cmp nop lods leave in pop cmp xchg lods lret and jne scas lret out and xor (bad) lods int3 jmp ja mov jmp ja mov xor cmpsl add pop dec jg in push or or inc popa jle mov dec gs lahf mov cmp mov cmp (bad) lods leave in pop cmp xchg scas lret out and int push and pop jns mov jmp and pop jp mov (bad) lock pushf mov inc sbbl lahf mov dec push notb xor mov ss jo test cmp stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp jne scas lret out and iret in or inc pusha jge mov lock sub sbbb dec gs sahf mov dec andw dec push notl dec insl mov xor (bad) ss outsl mov cmp pop jbe scas int3 jmp ja mov ljmp mov jmp daa inc pusha jge popf mov dec sbbw dec test notl xor mov xor insl mov xor add cmp xchg lods lret and pop ja mov jmp js mov jmp and pop jp mov in or mov lock mov das dec imul xchg dec insb mov xor insl mov ss jo test cmp jbe scas lret call ja mov jmp and pop jns mov in or mov out or inc pusha jge mov out or inc popa sbbl mov das dec imul mov cmp mov cmp (bad) stos enter ds js mov jmp add inc bound adc mov dec imul xor mov xor add add pop cmp jne scas int3 call ja mov jmp jns mov in or mov out or inc bound adc imul pop nop lret ljmp mov in or inc pusha jge mov out or inc bound mov dec gs sahf mov push insl mov ss outsl mov cmp mov cmp (bad) lods enter cmp nop lods leave out pop cmp xchg mov ljmp mov in or mov in or mov in or inc pusha add adc sbbw dec imul xor mov sbb push jno stos (bad) jecxz sbb push jae lods leave in pop cmp jbe scas int3 call add mov icebp push sub (bad) lahf mov dec push clc adc dec imul mov push outsl mov aaa push jo lods leave in push cmp xchg scas lret and int3 call ja scas int3 jmp js mov ljmp mov in or inc popa jle mov lock inc bound mov inc sbbl mov push loopne push mov rorb push xchg lret std xor cmpsl out popa pushf fsts push mov add and xchg cmpsb (bad) push inc jle out and pop inc (bad) mov loop pop mov int aas jle repz lods loop popa add out outsl mov sub addr16 loopne pop xchg int3 or add je loopne dec jge fcoml dec mov std xor rorb mov imulb popa cwtl (bad) push push mov add jns ljmp jnp divb gs rorb inc cmpb or dec jge ljmp (bad) lret pop cmp gs fistp mov or aaa jo jecxz pop lcall inc add inc ja repz jecxz popa fwait rorl dec mov clc cmp out movsb fstl dec jg icebp das imul lret or mov lret je in dec test add insl movsb ficompl pop xchg lret jge out and xchg rorb xor fstps add aad dec mov add jl cmc sub push xchg iret or clc aaa add add clc xor lock fistl inc jle repz add add insb mov rclb push (bad) add jns out and dec mov or mov ljmp pop cld xor in pop xchg rcll inc jnp icebp xor lods in push mov or ja divb mov rcll xor jmp pop xchg rorl inc jp repz fcoms push xchg int cmp out and fmuls inc jg cli xor jecxz push (bad) lret or mov sbb inc jl call or cmpl ficomp xchg int3 add xor pop lcall inc jns lock adc (bad) (bad) jge out sub insl stos out pop cltd aad dec xorb sti xor rcll dec cmpl cmpsl loop pop pushf ficoml dec xchg add add add in sub ficompl push mov push inc jge out xor jecxz bound int3 add jp repnz push push nop iret or mov xor fisttpll inc jge cmc ss add ret add movl inc jle clc xor out arpl in movsl in movsw out imul in imul icebp xor jno icebp ss cld cmp or dec mov pushl push loop dec xorb or jle (bad) cmp in pop xchg movl ss out push mov (bad) cmp jbe fimull fdecstp adc dec push clc adc xchg scas lret out and int3 jmp js mov ljmp add lods lret add and int3 call jnp mov in or inc pusha jl mov lock inc bound mov lock pushf mov inc arpl push sub sbbb dec push clc adc dec push mov xor xchg push insb mov xor insl mov xor insl mov cmp stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave in push ds ja mov jmp ja mov jmp ja mov ljmp mov jmp jns mov ljmp mov out or add (bad) mov das dec push notl xor mov xor add loopne sbb push outsl mov aaa push jae lods leave out pop cmp nop lods leave out and jne scas lret out and lret out and int push and pop js mov ljmp mov in or inc pop jnp mov in cmp sbb push jo stos (bad) jecxz sbb push jno stos (bad) in sbb push jb stos notb test cmp stos (bad) in sbb lods leave in push cmp xchg scas lret out and int3 jmp js mov out or inc pusha jge mov out or inc popa jge mov lock inc bound mov inc sbbb dec sbbl mov xor push jo test aaa push jo test cmp (bad) lods leave in push cmp add add aas pop js mov ljmp mov lock pushf mov dec sbbl lahf mov dec andl adc dec test stc adc movsb rcr push xor insl mov xor insl mov ss jno stos (bad) in sbb stos enter cmp int push and pop js mov ljmp mov in or mov in or mov in or inc pop jl mov repnz push nop mov (bad) pop pop clc cs int xor sbb mov ret popa xchg (bad) repnz ret push mov sti xor test sbb in sub sahf roll jp,pt ljmp gs sahf mov add test add push outsl mov cmp int3 call ja mov ljmp mov jmp and mov in or inc pop jnp mov in or inc pop jl mov icebp or pushf mov inc sbbl sahf mov dec data16 lahf mov dec andl adc dec imul xor mov xor outsb mov ss outsl mov aaa push jo test cmp mov cmp int3 jmp ja mov jmp jns mov jmp and popf loope sbb stos enter cmp nop lods lret and pop jp mov in or inc pop jnp mov xlat hlt adc mov dec add test xor mov sbb push outsb mov cmp nop lods leave out pop cmp xchg scas lret out and int push and jns mov jmp and mov in or inc bound mov inc sbbb dec gs sahf mov dec andw dec push clc adc dec push movsb shl sbb push outsl mov aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave out pop cmp jne scas lret out and add cmp jbe scas int3 call ja mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov lock fwait mov inc arpl dec imul add jae stc sub rorb cmp sbb leave out pop cmp jne scas lret out and int3 jmp js mov jmp and pop jnp mov in or inc pop jl mov out or inc gs lahf mov dec push clc adc dec push mov xor mov push insl mov xor (bad) push cmp pop js mov ljmp mov in or mov out or inc pusha jge mov lock inc bound mov inc arpl adc dec imul jo test cmp mov cmp nop lods leave in push cmp jne scas lret out and jp mov out or inc pusha xchg xor sub lock xchg add sbb mov mov and into add jae loope pop jnp mov dec data16 lahf mov dec test notb cs test je fmuls cmp rorl inc jne roll cmp roll inc xorl call jmp push mov fistp push nop enter scas jmp pop xchg rorl inc jg hlt and mov mov aad inc jns mov sbb int ss enter mov mov cmpsb fstl dec test into add adc xchg std outsl movsl fmuls inc jae add sbb ss into or imul jp aad xor mov adc pushf into std sub mov adc popf fist inc insl cltd (bad) repz dec js rolb xor nop mov cmpsb aam xor xchg mov lods fimull aaa gs mov movsb roll das pop mov popf int3 sti sub mov or ja loopne dec jns loope pop xchg leave add lahf mov dec imul mov aaa push jo test cmp stos enter cmp nop lods leave out pop cmp xchg scas lret and jns mov jmp and pop jp fwait mov lock dec sbbl sahf mov dec sbbw dec andl adc mov xor mov cmp stos (bad) jecxz sbb push jae lods leave out and jne scas lret out and into jmp and pop jp mov in or mov in or add add jnp mov in or inc pusha jl mov out or inc bound mov dec data16 lahf mov dec andl adc dec test notb das dec test notb das dec imul out pop lea (bad) cmc daa je mov ljmp mov in or mov in or inc pusha jl mov out or inc (bad) add data16 xchg lret cld sub cmc xor add adc jbe fistp push mov cmp nop lods leave out pop cmp jne scas lret out and shr or inc popa jle mov icebp or pushf mov xor mov xor xchg xor mov aaa push jno stos (bad) in sbb lods leave in push cmp xchg add lods leave out pop cmp jne scas lret out and pop ja mov jmp js mov in or inc pusha jl mov out or inc popa jle mov lock inc bound mov inc arpl cvttps2pi (bad) sahf mov cmpsb out push test stos (bad) jae fisttpll inc js (bad) cmp into or outsl mov cwtl (bad) mull push mov leave cld cs into add or je fisttpl or outsl add sbb repz movl fdiv adc dec push stc adc stos enter cmp nop lods leave out and jne scas lret call pusha jl mov lock inc bound mov inc sbbl mov xor xchg add add xor mov xor outsb mov ss jo test cmp xchg scas lret out and lret call ja mov ljmp mov in or mov in or inc pusha jl mov out push sub (bad) sahf mov dec andl adc dec push xchg in or inc pusha jge mov out or inc popa jle mov lock mov cs push notl dec push mov sbb push jo test aaa push jo stos (bad) jecxz sbb push jno stos enter cmp int3 jmp ja mov jmp js mov ljmp fwait mov lock pushf mov inc arpl adc dec push notl xor add add add xor xchg dec imul xor outsb mov cmp (bad) stos enter cmp (bad) lods enter cmp nop lods lret and int3 call js mov ljmp mov out or inc pusha jl mov lock inc bound mov inc sbbb dec data16 sahf mov dec sbbw dec imul xor mov xor insl mov xor lods enter cmp jne scas lret and jne scas lret call jp mov in or mov out or inc pusha jl mov lock pushf mov xor mov aaa push jo lods enter cmp je scas lret call add mov ljmp (bad) aas andl push outsl mov aaa push jo stos (bad) jmp js mov in or mov out or inc pusha jge mov lock popf mov dec sbbl mov xor insl mov aaa push jno stos (bad) in sbb lods leave out pop cmp jne scas lret call ja mov ljmp mov lock popf mov dec push mov ss outsl mov lods lret and int pop and jns mov icebp or sahf mov dec sbbw dec test notb das dec push testb xor insl mov ss jae lods leave in push cmp nop lods lret add pop cmp jne scas lret and jne scas lret jmp js mov ljmp mov jmp sub jle mov lock inc bound mov inc sbbb dec sbbl lahf mov dec andl push xor mov xor vpaddd aaa push int3 and in dec cltd fdivrp sbb push jno stos (bad) in sbb mov jmp js mov ljmp mov in or mov lock add xor xchg xor mov aaa push jo test cmp (bad) lods leave out pop cmp xchg scas lret out and int3 call pusha jl mov icebp push sub sbbl add andl dec push notl dec imul xchg xor mov cmp mov cmp xchg lods leave in push cmp xchg lods leave out push cmp xchg lods lret pop cmp xchg scas lret call jp mov in or inc pop jl mov out or inc pusha jge mov lock fwait mov dec sbbl pop xchg vucomisd vandnps dec data16 lahf mov dec test notb das dec imul outsb mov aaa push jne scas lret out and jne scas lret and int3 call jbe scas int3 call ja mov ljmp cltd mov movntsd sbbl add sub gs rclb dec jl fstl or inc pusha jl mov out or inc pusha mov sub (bad) imulb pop mov imull pop mov out dec jl fisttpll aas jo rolb xor enter mov repnz mov mov adc or imul out pop cmp xchg scas lret and js mov ljmp mov ljmp mov in or mov dec test notb das dec push notl xor mov xor mov xor push outsl mov cmp (bad) stos enter cmp nop lods leave in push cmp nop lods lret pop cmp jne scas lret and jne scas lret call jbe add inc bound add sub sbbb sbbl sahf mov dec sbbw dec push mov xor xchg push insb mov xor insl mov xor outsb mov xor (bad) add stos enter cmp (bad) lods enter cmp jne scas lret and int push and pop js mov jmp and jl mov out or inc popa jge mov lock fwait mov inc arpl mov inc sbbl lahf add push outsb mov ss outsl mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods enter cmp nop scas int push add inc add add popa jle mov lock pushf mov inc sbbl lahf mov dec sbbw dec imul xor insl mov xor (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp nop lods leave call js mov ljmp mov in or inc pop jl mov out or inc popa jle mov lock fwait mov inc andl dec test notl xor mov xor xchg xor mov push insb mov add pop ja mov jmp and pop jp mov in or mov out or inc popa jle mov inc sbbb dec sbbl add dec imul mov xor (bad) mov in and (bad) icebp and mov ret stc sub iret add xor xchg (bad) lock dec jge ficom mov lcall push jb stos enter cmp nop lods leave out pop cmp xchg lods lret in or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov out or inc popa jle mov lock inc arpl mov inc arpl adc dec test notb das dec push notb das dec push notl dec push mov xor xchg push outsl mov pop cmp jne scas lret and int3 call ja mov jmp js mov ljmp mov out or add add inc popa jge mov out or sub mov dec andl adc dec push notl dec imul mov ss jo test cmp stos (bad) jecxz sbb push jae lods leave in push cmp xchg scas lret and lret jmp and pop jns mov in or mov in or inc pop jl mov out or inc pusha jl mov out or inc bound mov inc andl dec push notl xor mov xor xchg xor mov xor mov cmp nop lods leave out pop add jns mov in or mov in or inc pop jnp mov out or inc pusha jl mov out or inc popa jge mov add add adc mov dec test cmpsb ret sbb ret loopne sbb (bad) ss outsl mov aaa push jae lods leave in push cmp nop lods leave out pop cmp jne scas lret out and int3 jmp js mov ljmp mov out or inc bound mov icebp or pushf mov dec sbbb dec gs sahf mov dec data16 lahf mov dec push sti sbb outsb mov ss outsl mov cmp stos enter cmp (bad) lods enter cmp nop lods leave out and pop ja mov ljmp add inc bound mov lock fwait mov dec sbbl lahf add (bad) push xor mov dec insb mov sbb push jno stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out pop cmp xchg mov jmp js mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jge mov repz gs lahf mov dec andl adc dec test notb das dec push notl dec imul mov ss outsl mov aaa push jo test aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in and pop ja mov jmp ja mov ljmp lcall bound mov inc arpl movntps add add adc dec push mov xor xchg dec insb add sbb push jno stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret call ja scas int3 jmp js mov jmp and pop jns mov jmp and pop jp mov in or mov icebp push sub gs sahf mov jmp pop (bad) pop outsb scas jmp std sbb push jo test rolb jl loopne dec test or mov mov dec imul mov ss outsl mov cmp (bad) stos enter aas pop jns mov jmp and inc pop jnp mov out or add sbbl lahf mov dec push add notb xor cmpsb ret (bad) sbb (bad) aaa push jo test cmp popl mov jmp js mov jmp and pop jp mov in or inc bound mov inc sbbl xor insl mov xor (bad) loopne sbb (bad) cmp nop lods leave out pop cmp xchg scas lret and fcoml dec xorb loopne inc jns loopne sbb push jo test loope sbb push jo scas lret call jbe scas int3 call ja xchg mov in or inc pop jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc sbbb dec sbbl lahf mov dec sbbw dec andl adc dec test stc adc movsb rcr push xor mov cmp stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave in push cmp xchg mov jmp ja mov ljmp mov jmp and pop jnp mov in or inc pop jl mov in or inc pusha jl mov icebp push sub sbbb sbbb dec data16 lahf mov dec data16 lahf mov dec andl adc dec xchg stc push xor mov xor mov push test bnd fsubl push (bad) movb sahf int dec fdivrs mov inc jne ficom jb pop fwait aad jae ljmp pushf fistl dec (bad) add jae jmp pop mov inc jge sbb stos out cmp xchg rorb jl add jl in sbb push fdivrs lods loope push addb adc inc cld mov sbb mov and test (bad) fbstp or mov sar mov popa ret mov push sub mov es dec (bad) sbb mov push sbb inc mov xchg sti jl pop xchg add scas lock aad arpl dec fdivs xchg mov int3 push scas ficom test (bad) enter adc push push mov outsb test daa push dec mov inc mov push mov mov repz sti aaa insl pushf into std cmp (bad) lods jne,pt imull cmp icebp pushf jmp lret out mov je jge,pt push test jae add add adc addr16 ja out ds push jns pop movsb repz mov mov dec mov cmpsl aam fldl and xchg leave or sub sbb dec adc inc test adc push mov aaa ja adc or dec subb in mov mov cmp push sahf das vmovaps xor pop mov cmpsb fisubl imul mov sti bound cmp fistp xchg in mov xor lods out sbb (bad) sub iret push xor xchg int jns adc add je js add inc xchg adc out push in dec jl ljmp jnp sbb fidiv jg push mov pushf in shll or fwait dec mov xor test pusha movsl fmull (bad) shrb icebp dec cwtl in outsb jecxz movsl dec cltd sarb in sahf jmp sbb ds jle or sbb in es popf add mov call pop movsl loope dec xchg roll xchg (bad) and test fs loop inc ja fimull sarb mov xor push jns sub sub repnz (bad) int3 jb,pt in cmpsl cmc xor (bad) push test jo out test and popa fwait xlat or rcrb (bad) mov sbb mov adc mov sbb cld xor cmpsl fsts dec test push dec xchg (bad) divb push imul stos jmp push movsb (bad) or outsb mov stos in dec xorl jge out push cmpsl loopne jne ficomp dec test add lock stos loope dec xchg in push xchg into add jo fsubrl addr16 (bad) cmovne jmp xor loope dec (bad) mov adc pushf rcll imul sub call or xchg leave sbb sbb and (bad) xor stc inc jge cli xor fistl push mov cli xor divb cmpl je push dec jge cli xor pushf aad inc jnp clc das push jl add xchg loop pusha xchg shrb ja add mov and lret jle stc das addr16 aam pop xchg loopne dec adc push xchg into or push test ret sti xor sti xor repnz loope pop movsb cli xor jmp push mov cmp sti xor add add xlat sub cwtl rclb inc nop aam push scas call pop pop (bad) jecxz outsb test sub (bad) adc sub roll fs cld xor movsb fistl xorl sbb mov hlt sub xor repz fist pop xchg lret add in dec test stc cs xlat es cmpsb fist push xchg or mov dec cmpl sub pop cmpsl loopne dec xchg aam dec test cs testl xchg int3 add xchg into push aas ja and (bad) incl fistl inc xorb sbb jmp js sti xor jmp pop xchg repz in bound mov mov inc mov cmp leave pop cmp stos loop jg out and cmp roll jb out gs aam inc js call js out push (bad) ret test aad inc xchg jmp pop xchg int inc jl sti xor fdivs pop mov cli xor fsts push fwait call cli das jle out ss inc add int3 push cmp stos in fistl dec test pop leave test cmp sar sub mov or cmp loope outsb lahf (bad) test jg fist dec test add mov and (bad) imulb cmc xor mov sub add jge or mov divb popa popf xlat push pop xchg (bad) dec (bad) int3 add das imul jae icebp cmp sbb sbb mov in push cmpl sbb cmpl dec (bad) mov add add or pushf rcrb push test dec sahf stc cmp cmovo loope push mov adc and mov sub in push sub cwtl rorl inc cmpsb in es stos fisttpl inc jnp ljmp addb sti push xorl and mov mov inc sbbl lahf mov dec push notl push outsl mov aaa push outsl mov aaa push jno stos (bad) jecxz sbb lods leave in pop cmp jne scas lret out and int3 in or mov in or inc pop jnp mov out or inc pusha jge mov out or inc popa jle mov lock inc arpl mov inc add pop xor mov xor insl mov xor add ss outsl mov aaa push jo test cmp lret call ja mov jmp js mov ljmp mov jmp and pop jp mov in or mov icebp or andl dec imul xchg xor mov push insb mov xor (bad) jecxz sbb push jb stos enter cmp int3 call js mov ljmp mov jmp and mov out or inc popa jle mov lock pushf mov inc sbbb dec sbbl mov xor movsl ret lcall push jno stos (bad) in sbb lods enter cmp add leave out pop cmp jne scas lret call jbe scas int3 call jp mov out or inc bound mov lock movsb rcr pop xor mov xor (bad) loopne sbb push outsl mov cmp nop add inc pop jns mov in or mov in or inc pop jnp mov out or inc pusha jge mov out or inc gs sahf mov dec andl adc dec push notl dec push mov xor mov xor (bad) xor cwtl mov out or inc popa jle mov lock pushf mov dec sbbl lahf mov push insl mov add push jae lods leave out pop cmp xchg scas lret out add cmp int push and pop js mov ljmp mov out or inc popa jle mov icebp push sub sbbl lahf mov dec test notb xor xchg xor mov cmp stos movl pop ja mov ljmp mov in or inc pop jl mov out or inc popa jle mov lock lahf mov dec test notb xor mov xor mov ss outsl mov aaa push jo stos leave out pop cmp jne scas int3 call js mov jmp and pop jp mov in or mov out or sub (bad) sahf mov dec imul xor outsb mov aaa push jo stos movb add jecxz sbb (bad) push cmp jne scas lret call gs or mov jecxz push mov push cmp roll push icebp and ret imull mov shrb pop xchg fistl inc jno ficoml dec xchg and lahf ret loopne jb in popa xchg ret pop mov push dec jg repnz pusha xchg enter stos imulb lcall add push jb loope pop stos in bound movsb fsubrl jbe jecxz pop xchg rorl inc jnp out cmp inc outsb pushf aad dec js fmuls cmp mov mov (bad) push mov cmc dec (bad) jb or enter mov outsb add mov lcall xlat adc rcrl pop mov cs jmp jge cmp pop and pop jns add add xchg mov in or mov in or inc pusha jl mov out or inc popa jge mov hlt das test (bad) sbb (bad) loopne sbb pop je lods lret and jne scas lret out and lret call jbe scas int3 in adc dec andl adc dec push notl dec imul xchg xor mov dec insb mov ss outsl mov aaa push jo test cmp inc gs lahf mov dec andw push jae lods int3 in or mov in or mov in or inc pop jnp mov in or inc add add inc pop jp mov out or inc pusha jg mov inc ja mov jmp js add mov ljmp mov in or inc popa jge mov out or inc popa jge mov out or dec andl adc dec test cmc adc dec subl and int3 jmp ja mov jmp and pop jns mov out or inc popa jge mov out or inc popa jle mov lock inc bound mov lock fwait mov dec sbbb dec push notl das dec imul xchg xor mov dec insb mov xor ret loopne xor xchg xor mov push insb mov xor insl mov sbb xchg mov jmp ja mov in or inc pop jl mov out adc dec push add add xor xchg xor mov xor insl mov popa jle mov lock pushf mov pop js mov aas jl in inc je (bad) sub fimull dec mov and test push xchg push dec mov sub inc pop jp mov in or inc pop jl mov out or inc popa sbbb add ds jge mov lock dec out push lahf add mov add movl xor and jl mov out or inc bound mov inc fs mov pop jns mov das jns fdivr push xor mov xor insl mov ss outsl mov pop and pop jns mov out or inc bound mov inc addb add popf mov dec gs sahf mov dec data16 lahf mov dec sbbw dec xchg stc push xor mov push insl mov ss outsl mov cmp jbe scas lret call jbe mov jmp jnp mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov dec sbbl lahf mov dec data16 lahf mov dec andl adc dec andl adc dec push movsb rcr push cmp test cmp mov cmp (bad) lods enter cmp xchg lods lret and inc pop add mov dec test notb das dec push notb inc pop jnp mov in or inc pop jnp mov in or inc pop jl mov or imul sub out mov mov xor mov xor mov ss outsl mov ss je scas lret and lret call jbe scas int3 call ja mov jmp ja mov ljmp mov in or inc bound mov lock inc bound mov icebp or pushf mov inc arpl mov inc arpl movntps andb dec test notl dec imul mov xor mov xor mov sbb inc pop jp mov in or add add mov in or inc pop jnp mov out or inc pop jl mov out or inc pusha jl mov out or inc popa jge mov repz sbbl lahf mov dec sbbw dec push idivb repnz ret sbb leave out and into ljmp mov out cmp xchg scas lret call ja mov ljmp mov in or inc insl mov push outsl mov cmp stos (bad) in sbb lods leave out pop cmp jne scas lret call ja mov ljmp mov lock inc arpl mov dec andw dec imul cmc adc dec push clc adc add inc pop add mov in or inc pop jl mov out or inc popa jle mov dec gs lahf mov dec test notl xor outsb mov cmp mov cmp nop lods lret out and pop ja mov ljmp mov out or inc sbbl mov xor mov xor outsb mov ss jo test cmp nop lods leave out and shr or inc pusha jge mov lock pushf mov dec gs sahf mov dec test notl xor xchg ss outsl mov cmp mov cmp xchg scas lret and pop js mov ljmp mov out or inc pusha jge mov add add das dec push clc adc movsb rcr pop xor cwtl mov out or inc popa jle mov inc test notl dec push movsb rcr pop xor outsb mov ss jo test cmp (bad) stos enter cmp sahf mov dec imul xor insl mov ss jo cmp lock popa jle mov dec data16 lahf mov push outsb mov inc pop jnp mov dec imul mov xor (bad) jecxz sbb lods lret and shr or inc pusha jge mov lock popf mov pop jp mov in or inc pusha jge mov lock popf mov dec push movsb rcr add add xor jno add inc pop jp mov in or inc pusha jl mov stc cmp rolb cmp lock mov sbb cmp fbld pop jp mov out or inc popa jge mov lock popf mov dec gs lahf mov dec imul mov cmp xchg lods lret and jbe mov jmp jns mov in or mov out or inc pusha jge mov lock mov ja sti inc jb rorb aas imul cld sub pop xchg fistl dec mov incb movsl fcoml push xchg std cmp cmp (bad) push movsl fcompl xchg or ficompl popf ficompl arpl test xor repz push push xchg out xor add add icebp adc add aaa push jo stos (bad) jecxz sbb push jb stos (bad) in sbb lods leave out pop cmp xchg mov jmp and pop jp mov in or pop jp mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jl mov out push sub sbbl lahf mov dec andl adc dec test notb das dec push notl xor xchg xor insl mov xor vpaddd aaa push jo test cmp stos (bad) jecxz sbb push jb stos enter cmp lret out and lret out and int3 call ja mov ljmp mov in or pop jp mov lock add add inc bound mov lock pushf mov pop xor outsb mov xor (bad) loopne sbb (bad) sbb push jae lods enter cmp nop lods enter cmp nop lods leave in push cmp xchg scas lret and lret call jbe scas int3 call jp mov std sbb push outsl mov cmp (bad) lods leave in push cmp nop lods leave out pop cmp nop lods leave out pop cmp jne mov ljmp mov ljmp mov ljmp mov in or inc pop jnp mov in or inc pop jnp mov in or inc bound mov lock inc bound mov inc arpl push sub sbbb dec data16 lahf mov dec sbbw add notl xor mov xor mov xor push outsb add sbb stos enter cmp (bad) stos enter cmp xchg scas int3 jmp ja mov jmp js mov ljmp mov ljmp mov ljmp mov jmp daa inc popa jge mov out or stos (bad) in sbb push jb stos (bad) in sbb lods enter cmp xchg lods leave out xor mov ss outsl mov aaa push outsl mov aaa push jo mov inc sbbb dec sbbl mov das dec push notb das dec test notl dec (bad) push (bad) lock add popa xchg lret enter cmp jne scas lret dec push notl dec imul xchg sbb aas pop js mov ljmp mov in or inc pop jl mov inc sbbb dec sbbb sbbb dec sbbb dec data16 sahf mov dec imul xchg xor mov dec insb mov dec insb mov xor mov push jo test aaa push jo test aaa push jo test cmp mov cmp nop lods leave in push cmp xchg scas lret call jbe mov jmp ja mov jmp ja mov jmp js mov ljmp add add dec test cmc adc dec push cmc adc dec push notb das dec add test aaa push jo test cmp lods lret and outsb mov ss outsl mov ss outsl mov cmp mov cmp mov cmp mov jmp and pop jp enter cmp xchg scas lret call js mov ljmp mov in or inc pop jl mov out or pushf mov inc arpl mov inc bound mov inc arpl mov ljmp push and pop jns leave out pop cmp jne scas lret out and int3 call ja mov jmp and pop jns mov in or pop jp add add inc arpl adc dec andl adc dec push sti sbb (bad) loopne add xchg mov ljmp mov out or pushf mov dec andw dec andl adc dec push mov xor mov xor insl lea cmp lea cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas lret call ja clc xor test hlt aas je or pop jns mov lock inc bound mov lock pushf mov dec sbbl lahf mov pusha jl mov out or inc pusha jge lret pop cmp jbe scas lret call jbe scas int3 call ja mov add add add xchg mov in or inc pusha jge mov out or inc popa jle mov inc arpl mov inc sbbl outsl mov aaa push jae lods leave out push cmp xchg scas lret and test gs loope inc lahf aad push and addr16 cld aas jbe fisttpl cmp add lods lret and jne scas sbb mov scas int3 in pop stc ds imul jecxz sbb push jb stos enter aas pop js mov jmp js mov jmp and pop jns mov in dec mov int push and jns mov in or vpaddd aaa push jo test cmp mov cmp (bad) lods leave out pop cmp jne scas lret out and add add int3 jmp jnp mov clc adc dec push mov xor mov xor mov xor ret loopne add xchg mov in or inc pop jl mov out or inc pusha jge mov notb das dec push notl dec imul mov push insb mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp nop lods leave out and int3 jmp js mov ljmp mov out or inc pusha jge mov out or inc bound mov lock pushf mov dec sbbl mov xor mov xor outsb mov ss outsl mov cmp mov add add lods leave in pop cmp js mov ljmp mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov icebp or test sbb push jo sbbl mov pop into adc mov dec push mov xor mov xor (bad) lods enter cmp nop lods leave out pop cmp jne scas lret call ja mov jmp jns mov in or mov in or inc bound mov inc sbbl lahf mov dec test notb xor mov xor xchg xor (bad) ss outsl mov ss outsl add push cmp nop lods lret xchg int or inc pusha add adc movsl rcr pop xor (bad) ss outsl mov aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret out and lret call ja mov jmp xchg xor xchg xor mov cmp mov cmp nop lods lret and jne scas lret call in pop jbe sbb mov test mov iret or mov and nop int cmp sub daa pop mov mov rorl dec jge out push mov inc out bound repz pop js mov jmp and pop jp mov in or inc pusha jl mov (bad) repz add sbb xor mov (bad) testb pop mov mov pop dec (bad) mov cmp sbb les cwtl loope cwtl xlat pop and inc jo pop pushf sub pop mov (bad) cmc daa push xorl or sub leave or mov out sub inc cmpl mov xor sbb ret repnz mov mov sbb jge jmp and dec jg add jo in sub loope pop xchg fistpl push nop rclb dec mov or add repnz jmp sbb push (bad) rcll dec xchg or roll js fistl push mov add inc jns sti cmp mov cld cmp pop xchg roll inc jle imulb add push pop fsts aas jbe repz popa add aad push mov add jp divb insb movsl call pop push mov push inc jge or mov xor fistp pop xchg rclb push mov or mov std inc jle repz scas out pop pushf aad dec mov stc cmpsb jecxz pop pushf fistl inc cmpl fistp pop xchg aad dec xchg add mov sub push mov or mov xor cmpsb in popa xchg iret or mov jmp sub aam dec test (bad) cld xor xlat push push (bad) lret cmpb xor out pop xchg (bad) pop push nop rclb dec mov or add jb repnz movsb in pop xchg aam dec mov add mov and (bad) imulb bound popf fcoml push (bad) int add into or movl ss repnz fcoml pop fcoms dec mov push inc test cld cmp out sub in arpl adc das pusha xchg (bad) divl mov mov das jne repz xlat push cs test notl dec push movsb rcr pop xor mov aaa push jno scas int3 jmp jns mov in or mov out or inc bound mov dec gs sahf mov dec push notl push outsb mov cmp mov cmp xchg scas lret call js mov jmp and pop jp mov in or inc pusha jge mov repz and mov in or inc popa jle mov lock popf mov dec gs lahf mov xor mov cmp stos (bad) in sbb xchg mov jmp and pop jp mov in or inc popa jge mov lock inc bound mov int cmp fmull inc jbe call or popf mov dec data16 lahf mov dec test notl xor mov xor stos (bad) in sbb lods leave out pop cmp jne scas lret call ja mov ljmp mov jmp and mov icebp push sub sbbb dec sbbw dec push notl dec imul xor outsb mov ss outsl (bad) lods leave in pop cmp xchg scas int3 call jp mov out or inc bound add sub sbbl mov sbb push jae lods lret out and int pop add inc popa jle push ds js mov in or inc arpl mov dec push movsl ret sbb lret pop cmp xchg lods lret and pop ja mov jmp jns mov in or inc pusha jl mov lock sub (bad) sahf mov push outsb mov cmp (bad) scas lret call jp out sub and mov dec gs lahf mov dec imul mov cmp nop lods lret and jne scas lret call ja mov jmp js mov ljmp mov out or inc pusha jge mov out or inc arpl mov add dec sbbl sahf mov dec andl std sbb push outsl mov cmp mov cmp pop js mov jmp and pop jns mov in or inc pop jnp mov in or inc pop jl mov dec sbbl sahf mov dec data16 lahf mov dec test notl xor mov ss jo test aaa push jno stos (bad) jecxz sbb push jb stos (bad) in sbb lods enter cmp xchg scas lret call jbe scas iret jmp and mov in or mov out or inc bound mov inc sbbl sahf mov dec imul mov cmp (bad) stos enter add cmp xchg scas lret out and jbe scas int3 jmp js mov ljmp popf mov dec andl adc dec imul mov imull dec (bad) mov ret popa xchg rorb cmp inc jnp jecxz pop jns mov in or mov in or inc pusha jge mov out or inc arpl pop inc xorb in inc jb aam aaa imul test sbb repnz insb mov xor (bad) sbb push jno mov jmp and pop jp mov in or inc pop jl mov out or inc bound mov dec sbbl lahf mov dec insb mov xor (bad) ss jo add mov cmp mov cmp xchg lods lret and shr or inc pusha jl add dec data16 lahf mov dec imul jb stos enter cmp xchg lods lret call jp mov out or inc pusha jge mov lock popf mov dec sbbw dec push notl dec push movsb rcr sbb push jo test cmp (bad) lods leave out pop cmp xchg scas lret out and pop jns mov in or inc pusha jge mov lock sub sbbl movsl rcr pop xor insl mov aaa push jo stos enter cmp xchg scas lret out and pop js mov jmp and mov inc sbbb out add xchg scas lret call js mov jmp and mov repz mov push jo stos enter add jl mov out or inc bound mov dec push (bad) sbb push outsl lea cmp cltd mov icebp push sub andl dec push movsb rcr push xor mov xor lret and int3 jmp andl cmpsl (bad) cmp (bad) lods enter cmp nop lods lret and or inc popa jle mov icebp or mov xor xchg xor xchg push outsb mov aaa push jo test cmp xchg scas into ljmp mov jg mov fdecstp adc dec imul cmp (bad) lods leave out pop cmp jbe mov jmp jnp mov dec test idivl mov add cmp int3 call js mov jmp and popf mov dec sbbw push jo test cmp lea cmp (bad) lods enter cmp (bad) lods leave out pop cmp xchg scas lret and shr or inc pusha jge mov out or inc arpl mov inc arpl mov dec sbbl sahf mov dec imul xor mov push insl mov aaa push jae scas lret out and lret jmp jns mov out or fwait mov inc arpl add add mov dec push mov xor xchg push insl mov cmp xchg scas lret out and jns mov jmp imul jns jmp and into jmp and add pushf mov inc imul mov ljmp mov dec push cli push xor outsb mov ss outsl mov cmp lret call jbe scas lret call ja mov ljmp mov in or mov out or inc arpl movntps sbbl mov xor mov xor xchg dec insb mov aaa push jo test aaa push add jo stos (bad) jecxz sbb push jb stos enter cmp nop lods lret pop cmp jne scas lret and ja mov in or inc pusha jl mov out or inc bound mov lock andl dec andl adc dec push add cmp mov cmp nop lods lret and int add xchg mov jmp and pop jp mov in or fdiv adc dec push mov xor xchg je,pt scas lret call js mov ljmp mov jmp and pop jp mov in or inc sbbb dec data16 lahf mov dec test notl xor xchg xor xchg xor mov push outsl mov std sbb push outsl mov cmp mov cmp (bad) lods enter cmp nop lods lret pop cmp js mov ljmp mov in or mov in or inc pop add adc data16 sahf mov dec imul jno stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret and int3 call ja mov ljmp inc test adc adc push push (bad) mov pop dec jge fmuls cmp js,pt loopne dec jge in dec test mov adc mov sbb xor rolb jns lock dec xorb out sub lret cli sub repz mov hlt sub int3 add jbe out and cltd lret add insb add add cmpsb (bad) inc jns hlt dec cwtl out pop xor (bad) aaa push jo stos (bad) jecxz sbb lods leave out es pop jnp mov out or inc pusha jge mov out or inc popa jge mov lock inc bound lahf mov dec andl adc dec test add sbb push outsl mov ss outsl mov aaa push jo test aaa push jo test cmp stos (bad) or int sub xchg lret add jae fist inc jns out cs mov cmp nop lods lret and jbe scas int3 jmp jns mov icebp or pushf mov dec sbbl mov xchg (bad) stc daa push mov clc daa pop mov clc sub es mov add add sbbb dec sbbw dec push notl xor test xor xchg ss jo test cmp stos (bad) jecxz sbb lods leave in push cmp xchg lods lret or mov out or inc popa sbbb add mov push insb mov xor (bad) sbb push jo stos (bad) jecxz sbb push jb lods enter ds ja mov jmp js mov jmp and mov out or inc bound mov ljmp mov in or inc arpl movntps sbbl sahf mov dec sbbl popf mov inc sbbb pusha jge add sub sbbb sbbl mov loopne jo,pt rolb xor mov jno push es pusha jge mov out or inc arpl mov dec sbbw dec push clc adc movsl ret sbb leave out pop cmp jne scas lret call js mov add add sub mov dec push mov xor mov cmp xchg lods lret and int push and cmpsb sti xor inc js fsts dec jge fistp and mov jp,pt in pop nop iret or mov repnz mov (bad) xor sahf rolb cmp (bad) or insb sahf aam cmp popf rolb imul add jmp (bad) jp,pt fadds sti arpl xchg (bad) cmc es mov mov mov aam jle,pt out sub rorl dec cmpl push dec cmpl fwait rorl inc jbe out push mov cli xor ficoml inc jp out push xchg iret or jge icebp sub fstps push mov mov mov insb mov stos in daa pop xchg into pushl dec (bad) mov leave cld xor inc js out fs (bad) repnz dec js sar sub xchg xchg (bad) icebp pop dec jle loopne inc jbe sub mov dec test cmp xchg mov in or mov out or inc popa jle mov icebp push sub sbbl mov add (bad) push xor mov ss outsl mov cmp in push cmp xchg lods lret pop cmp jne scas lret call jbe scas int3 jmp jl mov out or inc pusha jl mov out or inc pusha jge mov lock inc bound mov lock fwait mov inc arpl mov dec data16 sahf mov dec sbbw dec andl adc xor push outsl lea aaa push jo test cmp xchg lods lret cmp xor xchg push insb mov xor vpaddd aaa push jo stos (bad) jecxz sbb push js mov jmp and mov out or inc pusha jge mov lock pushf mov dec sbbl lahf mov add add inc jle loope inc js fisttpll inc jb (bad) inc jp in inc jp in dec jl loop dec mov mov int sub cmp mov scas in push mov fwait (bad) adc cmpl inc jne jecxz push xchg aaa insl cmpsl fsts inc jp cld sbb push jno stos enter cmp xchg lods lret pop cmp jne scas lret and or mov aaa push jo test cmp int3 jmp js mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov lock inc bound mov inc bound mov leave out and into ljmp mov in or jnp mov repz gs lahf mov dec andw dec imul xchg xor xchg xor mov ss outsl mov cmp test cmp stos enter cmp nop lods leave out push cmp nop lods leave out and pop js mov ljmp mov in or pop jp mov in or mov in or sbbl dec test clc adc movsb rcr pop xor insl mov xor (bad) aaa push jo test cmp stos (bad) jecxz sbb pop jne scas lret call jbe scas int3 jmp repz dec push mov xor mov xor outsb test in push cmp xchg mov in or inc pop jl mov in or inc pusha jge mov icebp or pushf mov inc arpl mov inc sbbb push testb out or inc popa jle mov lock inc popa jle mov lock inc arpl mov inc sbbb dec imul xchg xor xchg dec insb mov xor insl mov add cmp shr or inc pop jnp mov out or inc pusha jge mov out or inc pusha jge mov out or inc bound mov inc arpl mov inc sbbw dec test notl dec imul xchg xor xchg xor mov cmp stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret call jbe scas lret call ja mov jmp js mov in or dec andl adc dec imul xchg push insl mov ss outsl mov cmp xchg scas lret pop cmp jne scas lret call pop xor insl mov xor vpaddd add jl out dec xchg push xor mov xor (bad) sbb push jno stos (bad) in sbb lods leave in pop inc pop jp mov in or inc pop jl mov lock popf mov dec gs sahf mov dec andl add (bad) adc dec imul mov cmp (bad) stos enter cmp xchg scas lret call js mov jmp and mov in or inc pusha jg mov dec sbbl mov das dec imul mov xor outsb mov cmp nop lods leave out pop cmp xchg scas lret out and pop ja mov jmp jns mov jmp and pop jp mov in or mov xor insl mov xor (bad) loopne sbb (bad) ss outsl mov cmp test cmp jne scas lret out and mov dec gs lahf mov dec push clc adc add dec imul xor mov cmp (bad) stos enter cmp (bad) lods enter cmp (bad) lods leave out and in push mov ss jo test cmp jne lods lret pop cmp jne scas lret out and lret out and lret out and int3 call jp mov in or mov jmp and pop jns mov ljmp mov ljmp mov jmp ja mov jmp jnp fwait add push notb cs test notb das dec push notb das dec imul (bad) and andl dec push notl dec imul xchg xor add xchg xor xchg ss outsl mov ss outsl mov ss outsl mov ss outsl mov inc scas sbb scas lret call jge mov out or inc popa jle mov lock pushf mov dec sbbl sahf mov dec data16 lahf mov dec imul xor mov xor insl mov xor (bad) sbb push jo stos (bad) jecxz sbb push jne scas lret out and fwait loop jne in das addr16 rolb xor enter sahf rolb cmp (bad) adc push push mov adc stos enter cmp xchg lods lret and sub lret push mov push inc jp xor xchg scas lret call jle mov icebp or pushf mov dec gs lahf mov dec andl adc dec imul mov out xor (bad) pop sahf (bad) push inc je fimull jnp loope movsb or out and lods leave out pop cmp xchg lods lret and jne mov out or inc popa jge mov out or inc bound mov icebp or fwait mov inc arpl mov inc sbbb dec push notb xor add push cmp nop lods leave out pop cmp xchg scas lret call ja scas int3 call ja mov in or inc pop jl mov out or inc popa jge mov lock inc popa jle mov lock add movntps sbbl mov xor mov xor insl mov xor vpaddd aaa push jno add imul ljmp mov in or mov in or inc pusha jl mov out or inc popa jle mov lock inc arpl mov inc arpl adc dec push notl dec imul adc mov dec push clc adc movsb rcr sbb lods enter cmp nop lods leave add add sub jg mov inc sbbb dec sbbl mov xor xchg xor mov push insl mov add sbb (bad) jecxz sbb push jb stos enter cmp int3 jmp js mov jmp and pop jp mov out or inc popa jle mov lock pushf mov dec sbbl mov xor mov xor insl mov ss outsl mov aaa push jo test cmp xchg lods lret and int push and jns cmc inc push movsb rcr pop xor mov ss outsl mov cmp xchg mov ljmp mov out or inc pusha jl mov add add dec imul xor insl mov xor (bad) cmp nop lods leave in push cmp pop jbe ret loopne sbb (bad) loop sbb add add (bad) lods enter cmp xchg scas lret out and shr or inc popa jge mov out or inc bound mov inc arpl mov dec sbbl sahf mov dec imul xchg dec imul xor mov xor insl mov xor (bad) add stos enter cmp xchg mov jmp ja mov jmp js mov ljmp mov in or inc pop jle mov inc sbbb dec sbbl outsb mov aaa push jo test cmp (bad) stos enter cmp pop jge mov dec push notl xor mov mov dec imul xor insl mov ss je lods lret pop cmp jne scas lret out and jne scas lret out and int push and pop js mov jmp and pop jnp push movsb leave out and int push and jns mov in or inc pop jl mov out or inc arpl mov dec sbbl movsb rcr pop xor insl mov ss jo stos (bad) jecxz sbb lods leave out and jne scas lret call js mov jmp sub jle mov inc sbbl mov xor push add lods lret and into jmp and pop jnp mov dec sbbl movsb rcr sbb add cmp nop lods leave out and jbe scas int3 jmp jle mov dec gs sahf mov dec push clc adc dec imul xor hlt cmp cmc adc dec push std sbb push outsl mov cmp mov cmp nop lods leave out pop cmp xchg lods lret pop cmp jbe mov jmp jl mov out or inc popa jge mov icebp or pushf mov dec gs in (bad) push jb,pt jecxz dec cmpb add mov out or inc popa jle mov lock pushf mov dec data16 lahf mov xor push jno stos enter cmp nop lods lret and jns mov in or mov out or inc popa jle add inc sbbl mov xor xchg ss jo test cmp (bad) stos enter cmp xchg scas lret out and pop ja mov ljmp mov in or inc bound mov dec sbbl mov xor xchg xor mov ss outsl mov cmp xchg scas int push sar xor mov mov sbb mov sbb mov scas fisttpll ds sahf iret (bad) cs xchg leave cld xor insl lea cmp xchg repz movsb out movntps (bad) lahf mov dec push testl jb stos enter cmp xchg mov in or inc pop jl mov out or inc popa jge mov add add or inc bound mov inc sbbb dec gs sahf mov dec push mov xor mov xor (bad) ss jo test cmp mov cmp nop lods int push and pop jns mov jmp and pop jp mov in or inc pop jl mov out or inc bound mov inc arpl cvttps2pi test xor mov xor xchg xor mov xor insl mov xor (bad) loopne sbb lods enter or (bad) sar mov in sub lods lret and int3 jmp pusha add adc dec insb mov ss jo test cmp add pop cmp xchg mov insb xchg mov jmp and pop jnp mov out or inc arpl adc dec outsl aad inc jge cmc xor call std sbb push jo stos (bad) jecxz sbb push jb stos enter cmp xchg lods lret and mov out or inc pusha jge mov out or inc bound mov inc sbbb dec gs lahf mov dec test stc push xor mov xor outsb mov ss jo test cmp mov cmp nop lods leave in push xorl arpl mov dec sbbl lahf mov dec push sbb (bad) sbb leave out pop cmp jne scas lret call ja add add aas pop js mov ljmp mov in or pop dec test cli sbb (bad) aaa push jo test int push and jns mov in or mov out or inc popa mov cmp pop cmp xchg scas lret call ja mov ljmp mov in or inc pop jl mov out or add (bad) lahf mov dec push sti sbb (bad) sbb push jb stos leave out pop cmp jne scas int3 call pusha jge mov lock sub (bad) sahf mov dec insb mov xor (bad) cmp mov cmp xchg scas lret out and pop js mov ljmp mov icebp or popf mov dec test mov dec push mov xor ret adc cwtl mov push and (bad) enter mov adc jg in daa pusha fwait (bad) cmovne ficom inc jg out and and xchg rorl jg lock mov imul dec (bad) int3 adc cmpsl (bad) cmp mov cmp (bad) lods enter cmp xchg lods lret es repz insb lods out sub push nop out daa inc popa jle mov inc sbbl lahf mov dec test clc adc xor (bad) aaa push jno scas lret and int push and pop js mov jmp and pop jp mov in or mov out or inc popa jge mov lock lahf mov dec imul add add clc adc movsb rcr push xor mov xor (bad) loopne sbb push outsl mov lds dec jge fisttpll add push ja call loopne inc cmpb or push roll cmp (bad) divl bound mov loopne popa lcall push inc add dec mov popa mov cmp mov cmp pop jns mov dec sbbw dec imul mov ss outsl mov cmp ja mov ljmp mov dec data16 lahf mov dec push mov xor mov cmp stos enter cmp xchg scas lret call jge mov lock (bad) sahf mov dec push stc push xor mov ss jo stos (bad) in sbb mov ljmp mov out or inc popa jge mov icebp push sub (bad) lahf mov dec imul mov aaa push je scas lret call js mov jmp and mov out or inc bound mov dec andw dec imul and int pop and pop add mov add cvttsd2si (bad) lahf mov jmp outsb movsl jmp fldl pop cmp int3 jmp js mov jmp and mov out or inc pusha jge mov lock pushf mov dec gs mov xor xchg add fdivr adc cmpsb ret sbb (bad) aaa push jo stos (bad) jecxz sbb lods lret and jns mov in or mov out or inc bound mov loopne and into jmp and mov out or inc popa sbbl mov das dec push notl dec imul xchg dec insl mov cmp mov mov jmp js mov jmp and pop jnp mov in or inc pop jl mov out or inc popa jle mov icebp or popf add fdivrp pop xor outsb mov movsl fisttpl inc jb (bad) aas jne ficom inc ja fadds cmp imul popf mov dec imul add fdivrp sbb insl mov aaa push jno stos (bad) jecxz sbb stos enter cmp nop lods leave out pop cmp js mov ljmp mov in or inc pop jnp mov in or inc pop jl mov out or inc arpl push sub sbbl mov xor xchg xor mov dec insb mov xor mov xor enter cmp nop add aas pop jns mov jmp and mov in or inc pop jl mov out or inc pusha jge mov out or dec gs sahf add dec insb mov xor insl mov xor (bad) loopne sbb push outsl mov cmp stos (bad) out pop cmp jne scas lret out and int3 jmp js mov jmp and pop jp mov in or inc pop jnp mov out or inc pusha sbbb sbbb dec data16 lahf mov dec test notl xor mov xor lret add addr16 (bad) pop cmp xchg scas lret and pop js mov jmp and pop jnp mov out or inc popa jle mov dec gs lahf mov push outsl mov cmp mov mov jmp jp mov in or inc pusha jge mov lock popf mov dec andw xchg jecxz and inc pusha jge mov icebp push sub sbbl mov xor xchg push outsb mov cmp jne add and pop js mov jmp and pop jp mov in or inc popa jle mov inc sbbl movsb rcr sbb (bad) sbb push jb stos enter cmp jbe scas int3 jmp js mov in or inc pusha jge mov out or dec data16 lahf mov dec imul mov ss outsl mov cmp nop lods leave out and int or inc pop jl mov lock popf mov xor xchg push outsb mov cmp (bad) lods leave in and jbe mov in or inc pusha jl mov add adc mov dec push movsb rcr pop xor outsb mov cmp (bad) lods leave out and jp add add sub jle mov dec gs lahf mov dec imul mov cmp (bad) stos enter aas pop js mov jmp and mov out or inc bound mov dec gs sahf mov dec push clc push xor mov cmp nop lods leave out pop cmp int3 jmp jns mov in or inc pusha jge mov lock popf mov dec imul mov dec test testb xor outsb mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp jns mov in or mov out or sub data16 lahf mov dec imul mov cmp nop lods leave out add and jns mov in or mov out or inc popa jle mov dec sbbl movsb rcr pop xor insl mov cmp nop lods lret and int3 jmp jp mov in or inc pusha jge mov out or inc arpl adc imul xor outsb mov aaa push jno push cs xchg sti pop xor insl mov ss jo test cmp xchg mov jmp js mov in or inc popa jge mov out or sub mov dec imul mov cmp nop lods lret and iret in or pushf mov dec test notb xor xchg push insl add add add sbb outsb movsb lock dec test notb das dec push clc ds xlat sbb mov sbb ret repz mov sbb call jnp mov out or inc pusha jl mov out or mov pop mov mov fimul inc jbe fcoms dec jg lock int xor aas jae fisttpl inc jae loop inc jp out push mov (bad) stc sub mov iret add cli sub leave sti sub fisttpll ja fmull inc jbe out sub leave cli das arpl add hlt adc mov dec xchg mov out or inc andw dec push notl xor mov sbb vpaddd aaa push ja inc (bad) (bad) sbb add add cmp jne scas lret out and int3 call ja mov call ja mov jmp ja scas int3 call ja mov in or inc pop jnp mov in or inc pop jnp mov in or inc pop jl mov in or inc pop jge mov out or inc popa jge mov lock lahf mov dec sbbw dec andl adc dec test cmc adc dec andl adc dec test stc adc mov rcr pop xor mov ss outsl mov pop cmp jne scas lret call ja mov in or inc pusha jl mov out or inc pop jl mov out or inc pusha jl mov out add sub sbbl lahf mov add adc mov dec imul xchg xor xchg xor xchg xor xchg xor insl mov xor insl mov xor insl rcll jne scas lret out and pop ja mov ljmp mov adc (bad) cmc daa pop xchg (bad) (bad) xor ds ja mov ljmp mov in or mov in or inc pop jnp mov in or inc pop jg mov inc sbbb dec data16 lahf mov dec andl adc dec test movsl rcr pop xor insl mov cmp mov cmp mov cmp (bad) stos enter cmp popl mov ljmp mov add or pop jp mov lock inc bound mov lock pushf mov inc arpl movntps sbbl lahf mov dec push movsb rcr adc movsb rcr pop xor mov xor insl mov xor ret loopne cmp pusha xchg int cmp loop dec (bad) rcrb outsb mov cmp mov cmp xchg add clc pop xor insl mov ss outsl mov cmp int3 jmp ja mov jmp js mov jmp and mov in or add sbbb andl adc dec push notl das dec push notl xor mov xor push insl mov add fdivrp sbb insl mov aaa push jo test cmp mov cmp stos (bad) jecxz sbb push jb stos (bad) in push mov (bad) sbb push jo test ds jbe scas int3 call ja mov jmp jbe scas aad jo fstl inc jl repnz ficom dec (bad) les aas pop jns mov icebp push sub (bad) sahf mov dec andl adc dec push clc adc movsb rcr push xor mov xor enter cmp nop lods lret pop cmp jne scas lret call js mov jmp and pop jp mov in or inc pop jl lahf add push xchg icebp and (bad) icebp and mov mov ret popa xchg (bad) stc sub xchg vmovaps mov repz (bad) pop pop pop cmp pop xchg (bad) stc sub push inc jb fcoml adc movsl (bad) inc js in push xchg or jb fmuls aas jp loopne dec jge loop bound pop jns mov in or inc pusha jl mov out or inc bound mov inc sbbb dec push mov xor mov xor insl mov ss outsl mov aaa push jo test cmp mov cmp jbe scas int3 call ja mov jmp js mov jmp and pop jns mov jmp and leave xor into or (bad) add cmp jne scas int3 jmp jns mov in or mov out or inc popa jle mov add icebp push sub add adc stos (bad) jecxz sbb push jae lods leave out pop cmp jbe scas int3 jmp jns mov in or inc pop jl mov out or inc bound mov dec push notl dec insb mov xor push je lods lret and pop ja mov ljmp mov in push sub sbbl mov xor xchg push outsb mov aaa push jno stos (bad) in sbb mov in or mov out or inc popa jle mov inc sbbb dec test notl dec imul xor jno add ds js mov jmp and pop jp mov in or inc pusha jge mov lock add add popf mov dec sbbw aaa push jno stos (bad) in push cmp xchg scas add mov dec sbbl sahf mov dec sbbw dec imul xor mov xor ret loopne sbb (bad) loopne sbb (bad) loopne sbb push outsl mov cmp (bad) lods enter cmp (bad) lods enter cmp nop lods leave in push cmp xchg scas lret out and cmp fistl inc adc test notb das dec push notb xor mov xor mov xor xchg xor (bad) loopne add cmp nop lods leave in push cmp nop lods leave in push cmp nop lods leave in add push cmp (bad) lods leave in push cmp (bad) lods lret call pop jnp mov out or inc pusha jl mov out or inc pusha jl mov in or inc pusha jl mov in or inc pusha jl mov out or inc bound mov icebp or fwait mov lock fwait mov icebp push sub sbbb dec sbbl sahf mov icebp es mov hlt sub iret add xchg iret or sar xorb gs lahf mov dec test notb das dec push sti pop xor insl or dec test notb das dec imul xchg xor mov xor mov cmp (bad) stos enter cmp nop lods lret pop cmp pop lds xchg mov add add cs test notb xor mov ss jo test cmp (bad) stos enter cmp (bad) lods enter cmp nop lods lret pop cmp jne lods lret and jbe mov jmp and pop jp mov in or mov in or mov out or inc pusha jl mov out or inc pusha jge mov out or inc sbbb dec sbbl sahf mov dec gs sahf mov dec gs sahf mov dec andl adc dec push mov mov and lahf into add fs int sub xchg ret imulb pop xchg (bad) imull arpl mov adc jle jmp pop xchg lret add jbe xlat or push inc jb (bad) or ja jmp add add add fisttp inc jp call add test cmc adc dec insb mov ss outsl mov cmp (bad) lods enter cmp xchg scas lret call ja mov ljmp mov out or inc bound mov dec gs sahf mov dec test notb xor movsb rcr push xor mov xor (bad) in sbb lods leave out pop cmp jne scas lret call js mov jmp and pop jp mov in or inc pop jl mov lock mov xor xchg xor mov enter inc pusha jge mov out or inc bound mov inc test notb das dec push clc adc dec push mov xor xchg add clc adc xor ret sbb insl mov aaa push jno stos (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos enter cmp (bad) stos enter cmp (bad) lods enter cmp xchg scas int3 jmp js mov ljmp mov ljmp mov ljmp mov jmp and pop jp mov jmp daa inc pusha jge mov out or inc popa jge mov lock popf mov dec sbbl lahf mov dec sbbw dec push mov xor xchg xor mov xor insl mov xor (bad) loopne sbb (bad) jecxz sbb push jno stos (bad) in sbb lods lret pop cmp jbe add cmp mov out or inc pop jl mov icebp push sub jg mov inc sbbb (bad) out pop cmp xchg mov ljmp mov out or inc popa jge mov lock mov dec push movsb rcr pop xor mov ss jo test aaa push jno stos enter cmp nop mov ljmp mov in or mov out or inc popa jle mov icebp or fstpl push mov stc xor mov scas jmp (bad) cmp xlat or insb lahf roll cmp roll aaa imul lcall add insb lahf mov mov sbb mov (bad) divl push (bad) inc jg ljmp stos fldl add inc jb fmuls cmp jne sbb test xchg ret out sbb lahf int3 mull push jnp aad sub push inc jbe fisttpll cmp (bad) sti sub xchg aad aas jae jecxz dec (bad) mov xor mov cmp stos (bad) jecxz sbb stos enter cmp (bad) lods leave in push cmp nop lods leave out pop cmp xchg scas lret call jp mov in or mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov dec andl adc dec imul xchg xor xchg xor mov dec insb mov aaa push jo test aaa push jo test cmp stos add jecxz sbb push jb stos enter cmp (bad) lods enter and jnp mov in or inc pop jnp mov in or inc pop jnp mov in or inc pusha jl mov out or inc pusha jge mov lock movsl sub (bad) es jne scas int3 jmp jns mov in or mov out or inc bound mov inc sbbl mov xor insl mov ss jo test cmp (bad) lods enter cmp xchg scas lret call js mov jmp and pop jge mov lock popf mov dec test notb xor xchg xor mov xor (bad) cmp xchg scas lret and int push and jp mov in or es pop jge mov lock inc arpl cvttps2pi (bad) lahf mov aaa push jno stos (bad) jecxz sbb lods leave out and jbe scas int3 jmp js mov jmp and mov out or inc gs lahf mov dec push clc adc movsb rcr sbb insl mov aaa push jo stos (bad) jecxz sbb lods leave out and pop jns mov in or inc pop jl mov out or inc bound mov xchg ljmp (bad) jecxz sbb push jno stos (bad) jecxz sbb pop jbe scas lret call jbe scas lret call jbe scas int3 call ja mov jmp ja mov jmp ja mov in or mov in or mov in or add mov in or inc pop jl mov out or inc pusha jge mov out or inc gs sahf mov dec add mov xor mov push insb mov les xor mov xor leave out and jne scas lret out and lret and jne lods lret and jne scas lret pop cmp jne lods lret pop cmp js mov ljmp mov in or mov in or inc pop jl mov out or inc pusha jge mov out or inc popa jle mov hlt adc mov dec data16 lahf mov dec data16 lahf mov dec test notb cs test notb cs xchg clc adc dec push mov xor jns mov add in or mov out or inc popa jge mov lock pushf mov dec push mov xor push jno stos (bad) jecxz sbb lods leave in pop cmp jne scas lret out and pop ja mov ljmp mov lock inc bound mov dec sbbl mov xor mov xor mov cmp stos (bad) in sbb lods leave out pop cmp jbe scas int3 call ja mov ljmp mov in or mov inc sbbl lahf mov dec push clc adc movsb rcr pop xor outsb mov cmp nop lods leave out and jbe scas int3 call js mov add pop and pop jp mov in or inc pop jl mov out or inc bound mov dec test notl dec push mov sbb push jo test cmp (bad) lods leave out pop cmp xchg scas lret and shr or inc mov or dec sbbl mov das dec imul mov aaa push jno scas lret and int3 jmp js mov jmp and pop jnp mov in or inc pusha jge mov lock inc arpl mov dec push clc adc dec push mov xor mov ss outsl mov cmp mov cmp nop lods int push and jns mov in or mov out or inc add add lcall arpl cvttps2pi (bad) lahf mov dec imul xor insl mov ss outsl mov pop cmp jne scas lret call ja mov ljmp loopne sbb push jae lods leave out pop cmp jne scas lret call ja mov ljmp mov in or inc pop jl mov out or inc popa jle mov dec push pop cmp xchg lods lret and jbe scas int3 call js mov ljmp mov in or inc data16 xor mov ss jo stos (bad) jecxz sbb push jb lods enter cmp jbe scas int3 call js mov jmp and pop jp mov icebp or popf mov dec gs lahf mov add dec push notl dec push movsb rcr pop xor mov xor leave in pop cmp xchg scas lret out and pop ja mov ljmp lcall sbbl mov xor outsb mov aaa push jo stos (bad) jecxz sbb lods leave out pop cmp jne scas lret call ja mov ljmp mov lock pushf mov dec andw dec push mov xor mov ss outsl mov cmp xchg scas lret call ja mov ljmp mov in or inc pop jl mov out or inc bound mov dec gs sahf mov dec push movsb rcr pop xor insl mov cmp (bad) lods enter cmp xchg scas lret call lcall mov push insl mov aaa push jo stos (bad) jecxz sbb push jb lods enter cmp add out or inc popa jge mov lock sub andl mov xor mov ss jo stos (bad) jecxz sbb push jae lods enter cmp xchg scas lret call jnp mov out or inc bound mov inc sbbl mov xor movsb rcr push xor mov cmp (bad) stos enter cmp xchg scas lret and int3 jmp jns mov in or mov out or inc pusha sbbb dec test notb xor mov add add dec imul xor insl mov aaa push jo test cmp iret in or mov out or inc bound mov dec sbbw dec imul cld sbb push jno stos lret and int pop and jns mov in or inc pop jl mov lock iret add push sub sbbl movsl ret sbb (bad) sbb push jb lods lret and int push and mov out or inc bound mov dec push clc adc dec imul xor (bad) jecxz push cmp xchg scas lret and int3 jmp jl mov lock sahf mov dec test add xor mov xor (bad) jecxz push cmp xchg lods lret and pop jp mov in or inc popa jle mov icebp push sub (bad) sahf mov dec imul out sub mov xchg mov icebp push sub inc imul xor mov aaa push jo stos (bad) loop jo pop jno mov (bad) cvttss2si sbbl movsb rcr push xor mov push insl mov ss outsl mov ss outsl (bad) out xor mov push outsl mov cmp mov cmp nop lods leave out pop cmp jne scas int3 call js mov ljmp mov lock sub sbbl mov mov dec push movsb rcr push xor mov xor (bad) loopne sbb push jae lods leave out pop cmp jne scas lret call js mov ljmp mov out or inc popa jle mov icebp push sub sbbb xor insl mov aaa push jb lods enter cmp xchg scas lret call js mov in or mov out or inc popa jle mov dec test notl dec push mov xor mov xor vpaddd aaa push jo stos (bad) jecxz sbb mov jmp and mov out or inc pusha jge mov out or inc arpl mov dec sbbl mov xor outsb mov ss jo stos enter cmp nop lods lret and ja,pn mov in or inc pop jl mov out cvttps2pi (bad) lahf mov dec push clc adc dec imul xor mov aaa push jo stos (bad) jecxz sbb scas int3 jmp pusha jl mov lock pushf mov dec sbbw dec push clc adc cmpsl (bad) aaa push jae lods leave out and pop ja mov ljmp mov in or inc pusha jge mov out or inc arpl mov dec gs sahf mov push insl mov ss jo test cmp (bad) lods lret pop cmp jbe scas int3 call js mov jmp and mov inc sbbl add andl adc dec push mov xor insl mov ss outsl mov cmp xchg scas int3 jmp jns mov in or inc pop jl mov out or inc popa jle mov sub (bad) lahf mov dec push notl xor insl mov and int push and jns (bad) or fwait mov dec sbbl mov xor vpaddd aaa push jno stos (bad) in push cmp nop lods lret and int3 jmp jns mov jmp and mov hlt adc mov dec push movsl ret sbb (bad) loop sbb push jb lods enter cmp xchg scas lret out and pop jp mov in or inc popa jle mov lock add add inc sbbl mov xor xchg push insl mov cmp nop lods lret out and pop ja mov jmp jp mov in or inc pusha jge mov lock inc arpl mov dec gs lahf mov dec imul xor push jb stos enter cmp xchg scas lret out and pop ja mov ljmp mov in or mov dec gs lahf mov dec push notl dec push movsb rcr push xor mov ss outsl mov cmp jne scas int3 call js mov dec jp mov out or inc bound mov inc sbbb dec sbbw push insl mov ss outsl mov add add cmp nop lods leave out pop cmp jne scas int3 jmp js mov in or mov inc sbbl mov xor xchg xor mov xor (bad) sbb pop jne scas lret out and int push and add mov lock popf mov dec gs lahf mov dec push sti sbb (bad) cmp stos (bad) in sbb lods leave out and pop ja mov jmp and pop jp mov in or inc popa jge mov dec test notb xor xchg xor outsb mov aaa push jo stos (bad) jecxz sbb push jae lods leave in pop aas pop jns mov jmp and add mov mov pop and pop jp mov in or inc pusha jge mov lock popf mov (bad) cmp xchg scas int pop and pop jp mov in or inc pusha jge mov lock popf mov dec andw dec imul mov cmp xchg scas lret call js mov in or mov out or inc bound mov dec test xor mov aaa push jb stos enter cmp xchg scas int3 call js mov jmp and mov out or addr16 inc je (bad) inc outsb mov mov cwtl int3 (bad) cs lea sar fs (bad) cli sub (bad) cld xor (bad) or icebp cs movsl jmp add inc add add adc data16 lahf mov dec andw dec push clc adc dec push mov xor ret loopne sbb push outsl mov aaa push jo test cmp and imul stos out inc js (bad) or push aam cmp bound iret in or inc pop jl mov out or inc popa jge mov lock mov das dec push notl dec imul xor insl mov ss outsl mov aaa push jno stos (bad) out and int3 jmp js mov jmp and pop jnp mov in or inc pusha jl mov lock inc bound mov loopne push cmp nop lods into xor cli inc add add adc stos loopne dec js ficom inc jp ficom inc je (bad) or cmp lcall push inc jle out dec cmpl sbb pop js mov jmp and mov in or inc pusha jge mov out or inc popa jge mov cmc adc dec test notl das dec push notb das dec push notb das dec push notl dec imul mov xor mov xor insl mov xor ret (bad) sbb insl mov xor ret (bad) sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret call ja mov int3 jmp ja add pop jnp mov in or inc pusha jge mov out or inc popa jge mov lock dec data16 sahf mov fisttp cs push notl dec push mov xor xchg xor mov xor jno stos (bad) jecxz sbb push jno stos (bad) in push cmp nop lods leave in push cmp nop lods leave in push cmp xchg lods leave out pop cmp jne scas lret and jns mov jmp and pop jp mov in or mov in or inc pusha jge mov out or inc pusha jge mov lock inc bound mov dec data16 lahf mov dec sbbw dec sbbw je adc test loop sbb lods into ja,pn lcall cmp jbe add scas lret call jbe mov ljmp cltd mov out or inc add xorl divl pop xchg hlt pop xor jae lods leave out and int3 jmp jp mov in or inc pop jnp mov out or dec mov and mov repz add inc pop jl mov out or inc popa jge mov icebp or sahf mov dec push clc adc dec push movsb rcr push xor mov cmp (bad) lods enter cmp xchg scas int3 call js mov ljmp mov in or inc pusha jge mov out or dec data16 lahf mov dec push notl dec push mov xor mov xor insl mov ss outsl mov ds ja mov add add push and jp mov in or mov out or sub gs sahf mov dec test notl xor mov xor (bad) loop sbb push jb stos enter cmp xchg scas lret out and int push and pop jns mov jmp sub jle mov icebp or popf mov dec gs lahf mov dec imul mov xor insl mov cmp nop lods leave out pop cmp jne scas int3 jmp js mov jmp and mov in or jne stc sbb insl mov cmp xchg lods lret and int3 jmp js mov jmp and pop jp mov in or inc pusha jge mov out or inc bound adc dec push notl dec push mov xor mov xor lods leave out pop cmp jne scas lret call jp mov in or inc pop jl mov lock inc bound mov inc sbbb dec sbbw dec push cld sbb push outsl mov aaa push jno stos (bad) jecxz sbb lods leave in and jbe scas int3 call ja mov ljmp mov out or inc bound mov icebp push sub sbbl lahf mov dec push clc adc dec imul aaa push jo stos (bad) jecxz sbb push jb stos enter cmp xchg scas lret and int3 jmp js mov jmp and pop jp mov lock add add popf mov dec test notl xor xchg xor int and pop add (bad) lock inc sbbl movsb rcr push xor mov ss jo test cmp (bad) lods enter cmp nop lods lret and cmpsb fisttpl jb fistl inc mov ret hlt inc jo aam mov sti pop xor insl mov ss outsl mov cmp movsl aad inc ja in dec jnp loope jo ficomp push xchg iret add sbb vcomisd enter nop (bad) push mov mov push dec jge loope inc jbe ficoml inc jae fmuls cmp iret add fs lret or outsl test push pop nop enter mov int cmp mov push push xchg rorl add clc ss jmp push loopne push pop add jg stc xor out pop xchg int dec mov or add add jae jmp push inc cmpb sbb xchg int3 or mov loope push nop lret add jg divl je lock loope push xchg leave add sar push aam aas (bad) (bad) divl imul mov add mov xor movsb fcoml inc jl in and pop push nop lret push dec mov add data16 int dec test cld cmp and loop pop xchg rorl jae,pt out sub aam dec (bad) leave add sub pop pop xchg rcll dec mov add jbe jmp imul ljmp jo ficom dec mov clc xor gs fcoml dec test add outsb cmpsb loop pop lcall das arpl (bad) ret clc xor ficoml dec jge loop dec cmpl pop fstl pop push xchg roll push insb cmpsb fist push test movl sbb ret imull pusha enter mov (bad) pop (bad) mov (bad) hlt xor (bad) hlt sub icebp cmp xlat or jns out push mov cld xor js,pt in sub push mov movl add jae loop push mov add mov pop push mov (bad) xor rorb dec cmpb pop pop xchg lret sti xor stc sub jg mov dec data16 lahf mov dec push clc adc movsb rcr pop xor mov add push jb lods enter cmp xchg scas lret and into ljmp mov jmp and mov in or inc bound mov das dec push notl dec push movsb rcr push xor mov xor outsl mov rcr pop xor insl mov cmp xchg scas lret and int push and jp mov in or inc pop jl mov out or inc popa jge mov lock dec test notb xor mov xor xchg push insl mov xor (bad) ss jo test cmp jne scas lret out and into ljmp mov in or inc pop jl mov out or inc popa jge mov lock mov add (bad) adc dec imul mov ss outsl mov cmp (bad) lods leave in pop cmp xchg lods lret and jns mov in or sub sbbb dec gs sahf mov dec test notl dec push mov xor mov cmp (bad) lods leave out pop cmp jne scas lret call ja mov jmp jns mov jmp and mov in or inc sbbl mov das dec imul jecxz pop mov cld sbb vpaddd aaa push jo test ds jbe mov jmp js mov ljmp mov in or inc pop jl mov out or inc pusha jge mov out or inc bound mov dec sbbw dec push notl dec imul mov push insl mov cmp mov cmp nop add inc pop jp mov out or inc popa jge mov movntsd sbbl mov xor mov xor insl mov cmp stos (bad) jecxz sbb stos enter cmp (bad) stos enter cmp xchg mov jmp jp mov in or inc pop jl mov in or inc pusha jl mov out or inc pusha jge mov out or inc popa jle mov movntsd sbbl lahf mov dec push stc push xor mov push outsb mov ss outsl popl add lods enter cmp xchg loopne xchg in and mov out or inc popa jle mov lock popf mov dec test negl xor (bad) sbb push jo test add jbe scas lret call jbe scas int3 call ja mov jmp js mov out or inc pusha jge mov out or inc popa jle mov icebp or popf mov dec sbbl sahf mov dec push mov xor mov ss jo test cmp stos (bad) jecxz sbb lods leave in push cmp nop lods lret and pop js mov jmp and pop jns mov in or mov in or inc pusha jl mov out or inc popa jle mov lock add add adc dec andl adc dec push notl xor xchg xor xchg push outsb mov cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas add in or mov in or inc pusha jl mov out or inc popa jge out mov lods fist jg out push xchg mov push inc js fisttpl cmp mov xchg (bad) push test ret fs int3 or push mov sub aam movntps sbbl mov xor xchg dec jo stos (bad) jecxz sbb push jae lods enter mov adc imul adc add jle imulb jo jmp movsw loopne add fistpl push xchg lret push inc cmpb xor jmp pop xchg rcll dec mov add mov out sub popa lcall jge xor add ret cmpb adc ret add ret jo add sub movsb loop pusha popf xlat adc lret cmpb cmp daa addr16 pop mov rorl add cmp out sub pop fcoms dec xchg (bad) cmp in sub loop push xchg rorl cmp ljmp (bad) enter mov das insl stos out popa sahf fsts cmpl adc mov (bad) cmp out sub ljmp (bad) leave xor loope mov add cmp cmc das imul adc ret jne out sub ficomp add pop lcall inc cmpb es fcoml dec test add ja ljmp test repnz divl lods jmp mov rcll dec mov jmp sbb aad dec xchg or sar mov dec mov push inc cmpl sub mov ret hlt sub (bad) lock mov mov scas in test and pop xchg aad push (bad) lret add mov sub loopne push nop into or mov lods out sub fistp add loop push xchg iret or sar jne hlt aaa jbe in and fistl cmp in sub ficomp pop xchg (bad) cmova mov daa mov aad dec mov (bad) cmp hlt xor in sub xlat adc inc (bad) in push lcall insb mov and mov repnz test and aad dec mov or ret jae in sub ljmp xchg rorb xor test aam dec mov push inc jp hlt outsb lods out pop xchg fcoms dec mov add mov out cs in popa popf xlat pop push (bad) enter ret jne out popa popf ficompl push (bad) lret push inc cmpb sub aad dec xchg (bad) cmp sub ficomp push mov add add out arpl aaa jne hlt xor jmp popfw fstps push (bad) int3 pop inc (bad) mov icebp sub lods in sub pop cwtl rorb dec add cmp icebp sub add push loopne pop xchg rclb inc jg out dec jnp fmull add imul int xor ret hlt and sbb scas jecxz inc outsl mov movsl fmuls inc js loopne dec jg in dec xorl (bad) (bad) hlt es (bad) ret pusha xchg leave (bad) xor aam cmp stos fmull dec mov fsts inc jne ficoml mov (bad) gs in jne repnz int inc (bad) mov xlat adc mov (bad) cmp repnz movsb jmp sbb test rolb movsl jmp or test pushl push add xor jmp add pop popf fistpl push xchg fcompl push cwtl aad dec xchg rclb dec mov add jle (bad) cmp mov xor jmp sbb aam dec mov add add mov in das push call and fstps push xchg aad dec mov add adc xchg aam dec mov add mov repnz push loope pop fwait (bad) adc or movl aas jl divb outsb scas jmp sbb dec mov push inc test add jp repz jno in sub fistl pop cwtl ficompl pop fcoms push xchg iret or sar js cmc xor in sub jmp pop pop popf fistpl push xchg rclb dec mov or xchg add jg clc ss hlt xor jmp sbb pop cltd fsts xchg rcll jae and fstpl push xchg (bad) add push xchg int3 or dec (bad) lret or inc add cmp mov jmp and fcompl push xchg rclb mov or movl add cmp out das imul and fstpl pop xchg rorl dec xchg sti cmp in sub out arpl (bad) pop push xchg rorb dec xchg add cmp hlt cmp divb jne jmp sbb xchg rcll dec mov or movb mov or ret mov je in sub data16 and fcompl push xchg rclb dec mov add jg stc xor jmp sbb rorl jl,pt cld cmp mov sub test loopne pop cwtl aam push mov or movl xor out arpl fcoms push xchg aam dec mov repnz and fistpl push cltd add pop pop popf fcoms pop xchg xlat adc dec mov add jnp repz in sub out pop popf ficompl pop add add enter sar lahf in and int xor flds aas outsl mov test or add movsl jecxz pop xchg rclb dec mov (bad) cmp mov sub in pop cwtl fcomps pop xchg rorl dec mov add cmp repnz jmp movsw loop pop lcall inc test cld cmp cmc xor jb in sub loope pop cwtl aam dec mov add jnp repz in sub movsb loope pop sahf ficoml dec xchg add jle clc ss repnz in sub pop cltd aam dec mov imul adc mov push inc jl cli cmp out das insl stos jmp in pop popf fistp pop cltd fadds sbb int inc jle stc cmp jmp pop pop cltd aad push nop lret cmpb xor mov sub out pop lcall dec mov push inc add cmp divb je in sub test and fstpl pop xchg sarb jae jmp arpl iret or roll jge repnz outsl stos out pop fistpl pop xchg aam push nop int dec mov pusha movsl fstpl xchg rcll dec mov pop inc (bad) sar jp repz ljmp sahf fistl insl lods out pop lcall inc mov add mov lock in push test aad inc jnp jmp sti ss call sbb rorb xchg add and dec xlat push dec test cld xor pusha cltd rorb je,pt loope and (bad) (bad) xor fldl sbb xor xor loopne push (bad) (bad) insl cmpsb fcompl push mov cmp frstor mov pop ds daa arpl mov fcoms dec test ficoml dec test aad inc jg out and inc jnp icebp sub xlat adc mov sub sahf aad inc jnp in and int3 add jne out pop xchg int3 add jne out pop nop leave add jb in push mov cld xor push mov stc aaa jo fistp push mov stc xor xlat cmovbe mov sar push fistl push (bad) (bad) jb jecxz push mov (bad) outsb cmpsl loop pop xchg lret add jno loop dec mov cmp ret cld xor fistp push mov cli xor test ret insb movsb loopne push mov sti xor loope dec xchg (bad) outsb test sbb add pop inc jnp jmp pop xchg into or js jmp pop cltd add rorb inc jnp ljmp jbe ljmp jnp out daa pop xchg rorb inc jp in and inc jge in sub aad dec (bad) mov fcoml addr16 dec cmpb sbb (bad) aaa jo jecxz push xchg lret insb mov test lods jecxz inc jnp xor movsb (bad) or inc jne fist inc jns ficom inc jl loop dec jnp jecxz dec jnp jecxz mov (bad) xor rolb xor xor fwait into add lcall or mov movsl fmuls inc jnp in dec jg in dec jg in dec xorl mov ret pop xchg lret outsb movsl fcoml dec add (bad) mov sbb push mov mov add ret clc sub (bad) pop xchg (bad) stc sub cs xchg movl add or adc mov es xchg jmp dec xorb repnz sub xchg leave (bad) xor lahf fimull adc jnp in dec (bad) mov and (bad) imulb xchg leave pushl addr16 rolb cmp cmpsb fistl inc jp jmp push mov ret divb lods out push mov ret push (bad) daa bound lds aaa insl movsl ficomp push mov fcompl xchg iret add insl mov lret add push int3 add lods in push xchg iret adc add mov sub (bad) adc ret je call adc lret lods loopne push jge in add mov push inc jbe flds adc test dec xorb ljmp ret sti xor rolb outsb mov in jo hlt das jo ljmp ljmp (bad) add xor in pop xchg iret pop inc jle repnz mov xlat adc add jnp repz jecxz pop cwtl aam dec mov add ja in and dec mov push inc jp cld xor aad ss jo rorl cmp or popf iret dec movsl in sub add inc arpl adc mov dec push lcall cmp (bad) stos enter cmp xchg lods lret and int3 jmp jns mov in or mov out or inc sbbl mov pop xor mov add push cmp nop lods lret and int3 jmp js mov out or inc pusha jge mov lock rcrl (bad) push inc xchg (bad) cvttsd2si (bad) lahf mov dec imul mov cmp nop lods leave out pop cmp popf stc xor ljmp fs shlb push jb xchg mov jmp and pop jp mov in or inc pop jl mov dec gs lahf mov dec data16 lahf mov dec andl adc dec andl adc dec test notb xor xchg pop and pop jp mov in or sub (bad) lock pop (bad) ret repz mov mov adc sbb mov and ret push sar imul int add add jb fist push mov pushl push js in dec xorb adc cs xchg lret jno loop push xorl fmuls imul test mov lcall fimul imul sub xchg lahf into cld sub mov adc insb lcall mov or in sbb cmpsl xlat add pop mov xor nop mov stos (bad) cmp mov mov (bad) (bad) cmp fstl dec jnp loope dec jg ficomp dec test rorb je,pt out pop xchg int inc jl out and lahf ficoml dec mov fistpl dec test hlt xor sub sbbb sbbw dec push add test xor xchg push insl mov ss jo test cmp xchg scas lret out and int push and jns mov in or mov out or inc popa jle mov icebp or mov xor xchg xor mov xor (bad) loopne sbb push jo stos movb add cmp int or inc popa jge mov lock pushf mov jmp jl mov out or inc arpl adc mov push insl mov ss jo test cmp xchg lods lret and mov out or inc popa jle mov icebp or popf mov dec imul mov add add xor (bad) loop sbb push jae lods leave out pop cmp jne scas int3 call js mov out or inc popa jle mov inc sbbl mov xor mov and mov mov dec push movsb rcr push xor mov xor insl mov xor (bad) aaa push jo test add int3 in or mov out or inc popa jge mov lock pushf mov inc sbbb dec data16 lahf mov dec xchg stc push xor mov mov dec imul xor mov dec cwtl repnz dec imul and pop js mov jmp and pop jp mov add shr or inc pusha jge mov out or inc bound mov dec sbbw dec push sti sbb outsb mov ss outsl mov cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas int3 jmp jge mov out or inc bound mov inc sbbb dec sbbw dec push stc push xor add sbb pop ja mov ljmp mov in or inc pop jl mov out or inc popa jge mov lock pushf mov inc sbbl mov xor xchg push insl mov aaa push jo test and int3 jmp jl mov lock inc bound mov sub sbbl mov xor xchg xor mov cmp (bad) stos enter cmp xchg scas lret and pop jns mov in or mov out or inc popa jle mov lock mov xor mov xor outsb mov cmp mov cmp nop lods leave out pop cmp jne scas int3 in or sub sbbl mov das dec imul xchg push insl mov xor enter cmp xchg scas lret and int3 jmp jns mov in or inc pusha jl mov out or sub mov dec insb mov xor add aaa push jo stos (bad) jecxz sbb lods lret and int3 jmp and pop jp mov icebp cvttps2pi (bad) sahf mov dec andl adc dec push mov xor mov xor insl mov ss jae lods leave in and int push and pop jp mov in or inc pusha jge mov lock inc bound mov dec sbbl mov sbb (bad) mulb popf iret or jb fisttpl or or js fmull cmp inc outsl mov inc pop jp mov out or inc popa jge mov icebp push sub (bad) sahf mov dec test clc adc dec imul add push jb lods lret call js mov jmp or pop jp mov in or inc pusha jge mov lock popf mov dec sbbw dec insl mov aaa push jb stos enter cmp xchg lods lret and pop ja adc (bad) repnz out dec jge fisttpl jo aad jae,pt cli sub cmp roll dec nop lret add mov xor loopne dec (bad) ret stc xor loopne inc je fmull inc jle out sub lret (bad) cmp push mov fstl dec (bad) mov daa pop xchg roll cmp pop nop leave cld sub mov ret pop mov stc sub mov push dec jge icebp das imul adc aam inc xorb repz (bad) ret std cmp in push mov fsts add fsts push xchg aam dec mov add add add jl sti aaa outsb lods jmp in daa cmpsl (bad) xor jno stos (bad) jecxz sbb push jb lods enter mov or dec push notl xor xchg xor xchg xor xchg xor mov xor mov aaa push jno stos (bad) loop sbb push jno stos (bad) jecxz sbb gs imul imul xchg push jno stos enter cmp nop lods leave in push and pop js mov jmp and pop jp mov in or mov in or inc pop jnp mov out or pushf mov inc arpl or pushf mov inc arpl mov inc bound mov inc bound mov xor add add mov xor xchg xor xchg xor xchg xor xchg xor outsb mov aaa push outsl mov cwtl int3 add fs lret pop xchg enter xchg enter enter sbbl movsl ret pop xor insl mov xor (bad) loop sbb push jb stos enter cmp xchg lods lret and int3 in or pop cmp mov mov and pop xchg (bad) sti xor cmp in dec cmpl imulb pop xchg leave std xor lret cld pusha mov push cmp xchg scas lret call ja mov jmp js mov jmp and pop jp mov in or inc pop jl mov lock inc bound adc add mov xor mov dec imul xor xchg xor xchg push outsl mov aaa push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jo test cmp stos (bad) jecxz sbb push jno lods lret pop cmp jne scas lret out and lret out and pop jbe scas lret call jbe (bad) dec andl stc das pop xchg vcomiss ret imulb out and jp mov in or fwait mov lock pushf mov dec sbbl popf mov dec imul lret jns mov jmp and mov out sub fstl lahf fisub inc popa jge mov out or dec test mov dec add (bad) pop xor insl mov xor ret loopne sbb (bad) ss outsl mov cmp (bad) lods leave in push cmp xchg scas lret and jne scas lret and jne scas lret and lret call jns mov in or fnop adc movsb rcr pop xor mov aaa push jo test cmp (bad) stos enter aas pop js mov ljmp mov in or mov in or sub (bad) sahf mov dec andw dec imul mov ss outsl mov cmp adc cmp inc lods shr or inc popa jle mov lock mov add mov dec insb mov add push jae lods leave out pop cmp jne scas lret call ja mov ljmp mov in or jnp imull in and (bad) mov adc jge ljmp fs rorl (bad) std xor aad inc jge in pop mov cli outsl cmpsb ficomp data16 mov dec push mov xor xchg xor xchg push insb mov xor (bad) cmp (bad) stos enter cmp nop lods lret pop cmp jne scas lret out and jbe xchg mov in or inc pop jnp mov out or inc bound mov dec andl adc dec push notl dec imul mov xor (bad) loopne sbb add add clc popa cmpsl repz nop leave add int3 call ja cwtl mov in or inc pop jl mov out or inc popa jle mov lock fwait mov dec imul xchg xor mov xor mov xor insl mov xor (bad) loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb stos enter cmp nop lods enter cmp (bad) lods enter cmp lret call ja mov call ja mov ljmp mov in add sub sbbb sbbl mov das dec push notb das dec push notb xor mov xor xchg xor mov xor (bad) loopne sbb push outsl mov pop cmp jne scas lret call jbe scas int3 call add cs outsb mov ss outsl mov cmp nop (bad) cwtl rolb cmp aaa insb mov movsb fimull lea ret std xor (bad) cmc and xchg mov jmp and mov in or inc pusha jge mov lock sahf mov dec gs lahf mov push insb mov push (bad) loopne sbb push jae lods leave out pop cmp jne scas lret out and mov in or inc pusha jl mov out cvttps2pi (bad) lahf mov dec test notb das dec push clc adc movsb rcr pop xor insl mov xor (bad) in sbb lods enter cmp xchg scas lret and jne add inc pop jp mov in or mov in or inc sbbl sahf mov dec sbbw dec push mov xor xchg xor mov cmp stos enter cmp nop lods leave out pop cmp xchg scas push pop mov cmp jne scas int3 call jp mov in push das (bad) (bad) std aaa imul loopne mov mov jmp js mov jmp and pop jp mov in add popf mov dec imul xor (bad) cmp mov cmp nop lods lret pop cmp jbe scas int3 add add cwtl mov lock inc arpl mov dec sbbl mov sbb (bad) loop sbb push jb lods enter aas pop jns mov jmp and mov in or inc pusha jge mov out or inc bound mov dec gs sahf mov dec test cli push xor mov xor (bad) sbb push jno stos (bad) jecxz push cmp nop lods lret and int3 jmp jl mov out or inc bound mov dec fs sahf mov dec test notb xor mov sub (bad) add aaa push jo test cmp nop lods lret pop cmp jne scas lret call jbe mov jmp js mov add iret jmp and mov icebp or pushf mov dec sbbl mov cs push (bad) sbb (bad) loopne sbb push jae lods leave in push cmp xchg lods lret and jne scas cmovl in push cmp jne mov jmp jp mov in or mov dec sbbl lahf mov dec test notb das dec imul xchg ss outsl mov aaa push jo test cmp mov cmp (bad) lods enter cmp nop lods lret and mov out or inc bound mov movntsd sbbl dec andw dec push add add adc dec imul ss outsl mov aaa push jno stos (bad) sub xchg xor insl mov cwtl mov dec mov or mov divl insb in pop nop ret clc arpl faddl and int3 call ja mov ljmp mov jmp and pop jg mov dec sbbl lahf mov dec andl adc dec push notb das dec push notb movsb rcr push xor mov xor insb mov xor insl mov xor ret loopne sbb push outsl mov and aas jl mov test adc fwait rcr pop xor insl mov ss jo test add cmp mov aas pop jns mov in or sub sbbb jo,pt add inc pop jns mov in or mov in or mov movntsd sbbl push xchg into add loope pop mov adc dec test notl dec push mov xor insl mov cmp jbe scas int3 call js mov jmp and pop jp mov in or inc pusha jl mov out or inc popa jle mov inc test notl xor xchg dec insb mov xor insl mov xor (bad) cmp stos (bad) jecxz and jne scas lret jmp xchg mov sar andl push jo test add add aaa push jo test rolb pop inc insl popf rolb ss add adc ja (bad) pop cmp (bad) cmp js sbb mov pop rorl mov std inc js fimull inc jb fmuls cmp fadds cmp fistl adc ljmp inc jp loop dec mov stc xor mov mov jmp cmc daa push xchg ret insl movsb loope push (bad) jo loop dec (bad) mov es xchg lret add xor cltd lret insb movsb loopne push test ficoml inc jns fisttp cmp vmovaps stc sub sub mov mov sbb scas loop inc js xlat adc lods fmull cmp fisttpl jnp in dec lahf add jns loopne js in es xchg lret insl mov add add add inc jp out push test mov ficoml sub iret add sub (bad) or js in push add movsl ficomp dec mov clc xor roll aaa imul fisttpl adc mov in dec jge jmp out and lock xor lret push int cmp loope inc jns call pushl outsb movsl fistl dec xorl mov mov adc outsl sahf lret clc and add fdivl popf rorl cmp aad cmp inc jne fimul inc jbe (bad) cmp fnstcw jge fimull ss mov pushf lret mull push xorb fimull ss int xor aad cmp shrb pop jne scas lret call jns mov in or inc pop jl mov out or inc bound adc dec push mov xor mov sbb lods lret and inc pop jnp mov out or inc bound mov dec push notl dec push mov xor mov xor (bad) sbb push jb stos enter cmp xchg scas into jmp and pop jp mov out or inc bound mov dec gs lahf mov dec push clc adc movsb rcr sbb (bad) in sbb scas int3 jmp js mov in or inc pusha jge mov icebp push aas lods adc mov cld inc xchg fdivrp sbb push jno stos int pop and js mov ljmp mov jmp and pop jp mov in or add xchg mov in or inc pop jnp mov in or inc bound mov dec data16 mov das dec push testb xor insl mov ss outsl add pop cmp jne scas lret out and jns mov inc jl mov lock pushf mov inc sbbl jne scas lret call js mov lock pushf mov dec sbbl lahf mov dec test notl xor mov xor mov xor (bad) loopne sbb push outsl mov aaa push jno stos (bad) jecxz sbb stos enter cmp (bad) lods enter cmp int3 call ja mov jmp ja mov ljmp add add mov ljmp mov in or mov lock inc bound mov dec sbbb (bad) sti sbb stos enter cmp xchg scas lret or mov repnz insl mov cmpsb fstl inc jbe xlat cmp or jo in push mov sbb push jae lods leave out pop cmp jne scas lret out es pop jl mov out or inc pusha jl mov out or inc popa jle mov lock inc bound mov lock inc bound mov inc bound mov dec andl adc dec push clc adc mov xor mov xor ret loopne sbb push jno stos (bad) jecxz sbb stos enter cmp (bad) lods leave out pop cmp add add xchg lods lret pop cmp jne scas lret and into jmp and pop jns mov jmp and pop jp mov jmp and pop jnp mov in or inc add lahf mov dec andl cli push xor mov aaa push jo test aaa push jo stos (bad) in sbb stos (bad) in push cmp nop lods leave out push cmp xchg lods lret and mov out or inc pusha jge mov out or inc popa jle mov lock inc bound mov dec sbbl mov xor xchg dec imul xor mov xor insl mov cmc sub mov cld das fs adc fdiv adc dec imul dec push mov xor xchg push insl mov cmp xchg scas int3 jmp js mov ljmp mov in or mov in add pushf mov inc add push xor mov xor insl mov xor (bad) loopne sbb push outsl mov ss jo test inc mov cld mov inc pop jnp mov in or inc pop jl mov out or inc popa jle mov out or inc bound mov lock inc bound mov dec andl adc dec push notl das dec push notl xor mov xor xchg xor outsb mov ss outsl mov cmp lea add add add stos (bad) in sbb stos (bad) in push cmp nop lods int3 jmp js mov ljmp mov jmp and pop jns mov jmp and pop jp mov jmp and inc popa jle mov out or dec push mov push insl mov ss outsl mov ss outsl mov aaa push jo test aaa push jo test cmp xchg lods lret pop cmp jne scas lret out and jne scas lret and jne scas int3 jmp mov roll cmp adc lods fisttpll inc ja (bad) adc mov ret cld sub cs xchg lret popa xchg leave std xor rolb ss loopne inc cltd xlat add or and stc sub ret icebp add movsl fmuls cmp dec mov es mov cli inc jge jmp push (bad) lret push ljmp push cmp xchg lods lret and int push and jns mov jmp and add dec imul jo test cmp (bad) lods leave out and int push and pop js mov jmp and pop jnp mov in or popf mov dec sbbw dec push clc adc movsb rcr pop xor insl mov ss jo lods leave out and jne scas int3 call js mov ljmp mov in or inc pusha jl mov out or inc bound mov dec imul mov push outsb add add sbb push jo stos (bad) jecxz sbb push jb lods enter cmp jne scas lret jmp and mov out or inc popa jle mov icebp push insl test out dec js fsubrl mov loope sbb push jb lods leave out pop cmp pop jns mov lock fwait mov cs push notl dec imul xchg dec insb mov ss jo stos (bad) jecxz sbb push jno test cmp mov cmp (bad) stos enter cmp nop lods leave out pop cmp jne scas int push and pop js mov ljmp mov jmp and jns mov in or mov in or inc pusha jl mov out or inc sbbb dec sbbl add add sahf mov dec data16 lahf mov dec sbbw dec push cli pop xor mov xor lds push xchg fdivr sbb push jae lods leave in and lret call jbe scas int3 call add mov dec sbbb xor xchg xor xchg push insl mov xor (bad) in sbb loop sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb push jno stos (bad) jecxz sbb lods enter cmp (bad) mov ljmp mov in inc mov xlat or or cmp xabort push test stos fimull aaa insb pushf fimull inc jb roll xor push cmpl add add mov adc ja in dec jns out pop cltd rolb inc cmpl mov and into or mov aam sub addr16 fimull (bad) ret cli das data16 aad inc cmpb or mov add jg clc sub xor cmp push aaa insb mov test add pop (bad) (bad) hlt sub mov imull pop mov cmc sub mov mov sbb mov sbb and mov and in inc jae xlat or gs (bad) cmc sub into add outsl test push inc jnp in and repnz lret jns loop push xchg ret imulb pop xchg (bad) popa cltd fdivrs lret and pop jns mov in or inc pop jl mov out or inc bound mov shrb pop jns mov in or add jl mov out or inc bound mov dec sbbl mov xor mov cmp mov cmp xchg scas lret call js mov jmp and pop jp mov out or inc pusha jge mov repz mov xor (bad) cmp add and pop js mov in or inc pop jl mov out or inc arpl adc dec imul mov xor (bad) sbb push jb stos enter cmp xchg scas lret jmp jl mov out or inc arpl adc data16 lahf mov dec push movsb rcr pop xor mov ss outsl mov cmp jne scas lret call add add jns mov in or inc pusha jle mov lock sahf mov dec test notl dec push cmpsl (bad) aaa push jno stos (bad) in sbb lods lret and pop jns mov in or push popf in adc sbbw dec push cmpsl (bad) aaa push jo stos (bad) jecxz sbb xchg mov jmp and pop jnp add dec andl adc test cmp xchg mov jmp and mov out or pushf mov dec sbbl lahf mov dec andl sbb push jo test cmp nop lods lret pop cmp xchg scas lret and lret call jbe scas int3 call ja mov out or inc popa jle add dec sbbl mov xor xchg xor xchg push jno stos (bad) in sbb lods leave out and jne scas lret out and int push and pop js mov ljmp mov hlt adc dec push notl xor movsb roll lcall push jno stos (bad) jecxz and mov in or inc bound adc dec imul mov aaa push fwait in sub xchg xor mov cmp mov cmp jbe mov in or inc bound mov inc arpl mov dec sbbl js fisttpll jo fisttpl or (bad) icebp daa pop test add add xorb jmp push xorb out push push xchg fmuls jno,pt (bad) or mov mov sbb mov adc scas in push xorl mov push cmp jne lods lret and int3 call ja mov out or inc pop jl mov out or inc pusha jl mov out or add jnp mov in or inc pop jl mov out or inc popa jle mov dec push movsl rcr pop xor outsb mov nop (bad) cli sub xbegin pop nop ret stc sub sub (bad) cmc and movb je loope dec test cmpsl fcompl bound sub sbbb dec gs sahf mov dec sbbw jl cmovo add lret and pop ja mov ljmp mov out or inc popa jge push inc jns sti pop xor insl mov cmp nop lods leave out pop cmp xchg lods lret and mov or lcall cmp xchg scas lret call ja mov jmp jl mov in or inc pop jl mov out or inc pusha jge mov out or inc pusha jge mov out or inc popa jge mov out or inc popa jle mov dec data16 lahf lock mov cmp stos (bad) jecxz sbb push jno stos (bad) in sbb push jb stos (bad) in push cmp mov dec scas iret in or mov in or inc arpl test das dec imul xchg xor xchg push jo test cmp mov cmp nop lods leave in pop cmp jbe scas int3 call ja mov ljmp mov out or inc bound mov icebp or pushf mov inc addl adc dec imul xor mov xor jo test pop sbbl lahf mov dec push notl dec imul mov push jo stos (bad) in xchg imull lahf rolb jbe ljmp dec sbbw dec push clc adc dec push movsb rcr sbb lods leave in pop cmp xchg scas lret and add cltd mov out or inc bound mov dec gs sahf mov dec push add fdivrp sbb (bad) sbb push jno stos enter cmp xchg scas lret call js mov jmp and pop jp mov in or inc arpl adc test adc loope and int push and popa jge mov lock popf mov dec push std sbb push outsl mov cmp (bad) lods leave in and jbe mov ljmp mov out or inc popa jle mov lock sub test xor xchg push (bad) iret or ret sbb (bad) sbb push jb stos leave out pop cmp jbe mov out or inc popa jle mov lock popf mov dec imul jo stos (bad) jecxz sbb push jae lods leave in pop cmp add js mov jmp and pop jp mov in or mov out or inc popa jge mov lock loopne sbb or mov xor mov xor insl mov xor mov xor insl mov stos enter cmp (bad) stos enter cmp xchg mov ljmp mov in or inc pop jnp mov in or inc pusha jl mov out or inc pop jl mov in or inc pop jl mov out or inc arpl push sub out and jns mov in or inc pop jl mov out or inc bound mov inc sbbl mov xor mov xor insl mov xor lods enter cmp nop lods leave in pop cmp xchg lods int pop and pop jns mov jmp and pop jp mov jmp and pop jns mov jmp and mov in or inc pusha jl mov out xor mov and int3 add mov jmp and mov in or inc pop jnp mov in or inc pop jl pushf mov mov sbb mov lock inc bound mov dec sbbl mov xor mov xor mov xor (bad) in sbb lods leave in and add mov cmp mov cmp (bad) lods enter cmp xchg mov ljmp mov in or mov in or mov out or sub sbbl lahf mov dec imul xchg xor xchg xor xchg dec imul xor (bad) jecxz sbb push jno stos (bad) jecxz sbb push jb stos enter cmp (bad) lods enter cmp nop lods enter add pop ja mov jmp jp mov in or inc pop jl mov in or inc pop jl mov out or inc pusha jl mov out or inc pusha jl mov out or inc pusha jge mov repz gs sahf mov dec mov arpl adc test cs test notb das dec push cli pop xor insl mov aaa push jo test aaa push jo test cmp mov and pop js mov add add jmp and pop jge mov lock inc bound mov inc arpl mov inc arpl mov inc arpl push sub sbbb dec push mov xor mov xor mov xor mov xor xchg lods lret and inc pop jnp mov lock pushf mov dec sbbl lahf mov dec push notb das dec push notl xor movsb rcr pop xor mov xor insl mov xor (bad) loopne sbb push outsl mov cmp mov cmp xchg mov pop mov cld outsl movsb fistl dec cwtl (bad) lock popf mov dec test notl add outsb mov aaa pop jbe scas int3 call js mov jmp and pop jp mov out or inc pusha jge mov lock pushf mov dec sbbl movsl rcr pop xor insl mov ss outsl mov sbb sub (bad) mull pop xchg lret add pusha xchg (bad) testb gs (bad) cmc sub ret pop xchg (bad) (bad) xor mov jecxz push xchg aam dec mov add jbe in sub fistp xchg int inc test in dec jbe fcomps pop xchg enter mov sar jnp out cs movsb loopne pop xchg leave (bad) cmp mov rorl inc jp out mov lds sub loop gs loopne pop xchg ficompl push (bad) into or js,pt cld ss lock fcompl add (bad) push push (bad) int dec add inc jl ficom mov add roll jns cli xor push subb push aas cmpb and mov enter mov aaa jno in pop xchg into adc ret jge divl jb jmp pop pop xchg rcll push xchg push inc jge hlt cmp add xor es cltd fistpl push mov or (bad) sar jno rep jecxz push xchg rorl xor call add cmp jmp imul enter mov cs cmpsl loopne fs xlat adc mov sti cmp mov sub (bad) adc rorl inc xchg add imul adc iret push inc (bad) mov out push mov stc xor aad inc adc push mov ret add aaa jbe call repz out xor loope pop fwait aam mov xlat es xchg rclb push mov or in pop xchg rorb dec test stc das data16 rorb aas jne jmp pop push xchg iret or movb xchg in xor out arpl iret adc roll jg cmp je in sub popa add xlat push aas jno rorl dec cmpl sbb mov repnz xchg (bad) ja loopne inc ja aam cmp xchg mov out inc jnp add cbtw lret dec js add inc pusha jge mov icebp or popf mov dec imul xor mov xor (bad) loopne sbb push jo test cmp add jno stos (bad) in sbb lods lret and inc popa jge mov lock inc bound mov inc arpl push sub sbbb dec sbbl mov xor xchg xor mov dec insb mov xor mov ss outsl mov cmp (bad) lods leave in push cmp pop jns mov jmp and pop jp mov in or inc pop jnp mov in or inc pop jl mov out or inc pusha jge mov dec gs sahf mov dec sbbw dec test notl xor mov xor mov xor mov aaa push jo test aaa push jo test cmp stos (bad) jecxz sbb add push jb stos enter cmp (bad) lods enter cmp mov out or inc pusha jl mov out or inc pusha jge mov out or or sub sbbb sbbl mov xor mov push insl mov xor insl mov ss outsl mov aaa push jo lods lret pop cmp jbe scas int3 call pop jnp mov out or inc pusha jl mov out or pushf mov inc arpl movntps test xor mov dec insb mov xor outsb mov xor (bad) aaa push jo test cmp xchg lods lret and int3 call ja mov ljmp add add and pop jp mov in or mov dec gs lahf add dec imul xor mov xor mov sbb mov in or inc popa jge mov dec sbbw dec test notl xor mov xor xchg xor xchg xor (bad) loopne sbb pop test push mov sbb push jo test aaa push jb stos enter cmp (bad) lods enter ds js mov ljmp mov jmp and pop jns mov jmp and pop jp mov in or mov in or inc pop jl mov repnz sub (bad) sahf mov dec data16 lahf mov dec sbbw add xchg dec insb mov xor jo test aaa push jo test and pop ja mov jmp jns mov jmp and pop jp mov in or inc pop jnp mov out or pushf mov inc sbbl sahf mov dec imul xchg xor mov cmp mov cmp (bad) lods enter add pop ja mov jmp and pop jp mov out or inc pusha jge mov out or inc gs sahf mov dec data16 lahf mov dec andw dec test notl xor xchg xor mov cmp (bad) lods enter cmp xchg scas lret and jne scas lret out add add add and int3 jmp ja mov jmp jl mov out or inc popa jge mov out or inc bound mov cs test notb das dec imul xchg xor (bad) loopne sbb push outsl mov ss outsl mov cmp jbe scas lret jmp js mov jmp and pop jp mov lock dec gs lahf mov dec push notl xor mov sbb push jno stos enter cmp nop lods lret and shr or inc pusha jge mov icebp push sub (bad) sahf mov dec andw dec imul mov aaa push jb mov ljmp mov dec insb mov sbb push jno stos enter aas pop js mov lock mov cmp xchg scas int3 jmp js mov jmp and fwait mov dec andl sub jg mov dec push notl xor xchg xor xchg xchg xor insl mov xor outsb mov cmp jne scas lret out and int3 call ja mov jmp pusha jge mov lock fwait mov inc arpl adc dec push notl dec imul xchg xor mov xor insl mov aaa push jo test cmp nop lods leave in push cmp nop lods lret out pop cmp jne mov jmp js mov jmp es pop jnp mov inc sbbb dec andw dec jge mov fdiv adc mov dec push test loope sbb push jae lods lret and int3 ljmp mov in or inc pop jl mov out or inc popa jge mov repnz sub sbbb dec push movsb rcr push xor mov mov in or inc pop jl mov out or inc popa add adc mov push je lods leave out pop cmp jbe mov jmp jns mov jmp and pop jl mov out or inc arpl mov dec sbbl movsb rcr push xor mov ss add outsl mov aaa push jo test cmp nop lods lret and pop jns mov in or mov out or inc bound mov dec andw xor mov cmp (bad) stos enter ds ja mov jmp jns mov jmp and mov out or inc popa jge mov cvttsd2si (bad) sahf mov dec push sti pop xor insl mov test xor xchg xor xchg dec add test cmp mov add xchg mov in or mov std dec test inc pop jl mov out or inc xchg sub mov xor outsb mov cmp (bad) stos enter cmp nop lods leave out add cmp jne mov call ja mov ljmp fwait mov repnz sub andl dec push notl dec insb mov xor mov ss outsl mov ss outsl mov cmp nop lods leave in push cmp xchg scas lret and pop ja mov jmp jns mov jmp and pop jp mov in or inc pusha jg mov dec sbbl lahf mov dec andl adc dec test outsl sahf int3 add xchg (bad) lock (bad) cld add fs rolb ds fwait into add dec adcl test push cmp nop lods lret and into in or mov hlt adc dec push push imul add (bad) mulb push xchg mov and movl xor jecxz dec add mov (bad) stc xor leave sti sub ret imull bound cltd into add cltd roll jb out push xorl fcompl dec (bad) mov sbb stos fimull push cmp fmull sbb sub fwait rorb inc jne loopne push test rorl inc xorb (bad) cmp dec xorb cli xor inc cmpl pop xchg lret add jns in sub ficom inc jns loope dec jg in sub ret cmc daa pop xchg les aas jp in and ret outsl cmpsb loopne dec xorl cwtl aad cmp roll cmp push dec (bad) aam xor mov (bad) imul sub mov cmpsl fidivrl js mov out or inc pusha jge mov hlt add movsb rcr push xor mov xor insl mov ss outsl mov cmp mov cmp xchg mov jmp jns mov jmp and pop jp mov in or inc pop jl mov out or inc pusha jl mov out or inc popa jle mov lock dec push clc adc dec push mov xor xchg dec insb mov xor insl mov xor enter cmp nop lods leave out push and pop jp mov in or inc popa jge mov icebp or pushf mov dec sbbb dec imul xchg stc push xor xchg dec insb mov xor sarb js fistpll sbb (bad) repz pop fwait rorb inc enter lret add push pop xchg ret clc das insb mov mov and (bad) (bad) lock sub aam outsl mov pop jbe mov jmp and pop jp mov in or inc pusha jge mov lock fwait mov inc sbbl movsb rcr pop xor outsb mov aaa push jo stos (bad) in push cmp xchg testb shr or inc pusha jl mov out or dec andl adc dec push testl mov aaa push jo test cmp stos (bad) jecxz sbb lods fcompl push test icebp adc mov add fprem1 adc dec test notb cs test notb xor xchg xor xchg xor (bad) loopne add cmp nop lods leave out pop cmp nop lods leave out pop cmp xchg lods leave out pop cmp jne lods lret pop cmp jbe mov jmp and pop jns mov jmp and mov in or mov in or inc pop jl mov in or inc pop jl mov out or dec sbbl mov das dec push clc adc dec push mov xor xchg xor mov ss outsl mov ss outsl mov and int or pop jp mov in or inc pusha jle mov lock inc sbbl add add mov push insb mov xor (bad) loopne sbb push jo test cmp scas lret call ja mov jmp pop jl mov out or inc pusha jge mov out or inc popa jge mov out or inc bound mov dec test notl dec imul xor mov xor (bad) sbb push jno lods leave in pop cmp xchg lods int push and pop js mov jmp and pop jp mov in or inc pop jnp mov in or inc bound mov lock pushf mov dec test notl dec imul mov sbb push jb lods enter cmp nop lods leave out pop cmp xchg scas lret call jns mov jmp add add and pop jp mov in or inc pop jnp mov in or inc popa jge mov lock fwait mov dec gs mov xor xchg xor lods leave in push cmp nop lods lret pop cmp jbe scas int3 call ja mov jmp jp mov in or inc pusha jle mov out or popf mov dec data16 xor xchg xor mov cmp xchg scas lret call jl mov out push sub sbbl mov xor mov xor leave in pop cmp jne scas lret out and iret in or add dec sbbw dec push cmpsl ret loopne sbb pop jne scas int3 jmp add and pop jns mov in or inc pusha jge mov lock fwait mov inc arpl adc mov dec imul ss outsl mov aaa add xchg mov jmp jl mov out or inc popa jle mov dec test xor xchg dec insb mov ss outsl mov cmp xchg scas lret out and shr or inc bound mov inc arpl inc fwait int3 jmp and pop jnp mov lock sub sbbl lahf mov push insl mov cmp stos enter cmp xchg scas lret and into add or inc arpl xor xchg push jb (bad) lods enter cmp jne scas lret out and pop jns mov jmp and mov out or inc popa jge mov lock movsl ret sbb (bad) aaa push jo test cmp add and jns mov in or inc pusha jge mov out or dec gs lahf mov dec insb mov cmp (bad) lods leave out and int3 jmp js mov in or mov icebp push sub sbbb dec andw dec push movsb rcr pop xor insl mov xor (bad) sbb push jb mov jmp and pop jns mov in or inc pusha jge mov icebp push sub sbbb dec gs add xor mov ja repz add cs push notl dec imul mov aaa push jo stos (bad) in sbb lods leave in push cmp xchg mov in or inc pusha jge mov lock inc arpl adc data16 lahf add dec imul xor mov ss outsl mov cmp stos (bad) in sbb lods leave in push cmp nop lods lret and int3 call js mov in or inc pusha jl mov out or inc bound mov dec sbbl dec push sti sbb insl mov cmp (bad) stos enter cmp xchg scas lret and pop jns mov jmp and mov in or inc popa jle add dec push add adc movsb rcr pop xor mov aaa push jo stos enter cmp jne scas lret call ja mov ljmp mov in or inc popa jge mov lock inc bound mov dec andl adc add test lcall gs lahf mov dec push mov xor mov cmp nop lods leave out pop cmp jbe scas int3 call ja mov out or inc popa jle mov lock inc arpl movntps sbbl mov xor mov xor insl mov cmp (bad) lods enter cmp jne scas lret and int or pop jp mov in or popf mov add add xor xchg dec insb mov xor vpaddd cmp (bad) stos enter cmp (bad) lods enter cmp xchg mov in or mov lock inc arpl mov inc sbbb dec imul jno stos (bad) in push cmp xchg mov jmp and pop jnp mov in or inc pop jl mov icebp or sahf mov dec push stc adc movsb rcr sbb push jo test cmp jmp lods enter jl mov inc sbbb mov xor insl mov cmp nop lods leave out pop cmp xchg scas lret and iret in or inc pusha jl mov out or inc popa jle mov lock add rcr push xor mov xor vpaddd aaa push jb lods leave out pop cmp jne scas lret out and int or inc pusha jge mov out or inc popa jge mov icebp or popf mov dec andw dec test fdivrp pop xor insl mov cmp (bad) lods enter cmp int3 call js mov jmp and pop jns mov in or inc pusha jge mov lock mov das dec push notl dec insb mov ss outsl mov aaa push jae lods lret and pop jns mov repnz sub sbbb dec data16 sahf mov dec test clc adc dec push movsb ret pop xor outsb (bad) in cmp addl add add xor push jno stos leave in push cmp xchg lods lret and into jmp and pop jnp mov out or inc pusha jge mov out or inc bound mov push insl mov cmp (bad) stos leave in pop cmp xchg mov ljmp mov in or inc popa jle mov add adc rcr pop xor insl mov cmp nop lods leave out pop ds js mov in or inc pusha jl mov lock inc arpl adc dec push notl dec imul xchg xor (bad) jecxz sbb push jb stos enter cmp xchg mov in or inc pusha jge mov lock pushf mov dec gs lahf mov dec push cli push xor mov add movsl ret sbb (bad) loop add cmp jbe mov ljmp mov jmp and mov out or inc popa jle mov lock popf mov dec push stc push xor mov xor mov out dec jle loopne push (bad) rolb inc js fisttpll push add stos in push xchg leave add clc xor and push xchg rorl xor loope push xchg fcomps pop lahf fistp pushf in push fwait rorl jbe jmp adc mov or and ret cmpsb in push mov fstpl pop fwait aad dec mov (bad) xor mov movl es (bad) ret divl jo call stc aaa je in pusha add lcall pop xchg iret adc ret jl add cmp out sub ficomp pop xchg rorb inc (bad) mov jmp adc xchg movb jns in daa movsb loopne pop lcall daa fs fcomps push xchg rcll dec mov pop cmp mov and sub ficom cmpb push pop sti cmp repz mov ret add sub fcoml dec (bad) add js cmc sub fistl dec xchg add imul (bad) jnp hlt inc jnp repz sbb inc test divl jb jmp pop pushf ficoml cmp mov sub fstps push mov push inc cmpb push dec cmpb sub fsts push xchg int3 add bound enter cmp insb mov fsts xchg leave pushl jo call (bad) adc clc cmp sbb int cmp lock xlat adc roll jno in sub int dec (bad) mov lret insl movsb (bad) dec xchg (bad) xor jns out sub pop xchg into pop inc (bad) ret pushl jo in sub fistp pop xchg aad push mov (bad) cmp xorb push push nop rorb inc jg cli xor cmpsb in pop xchg lret insb mov scas in pop fwait (bad) cmovl ret add je hlt sub push xchg add mov sub push xchg rolb aas (bad) mov out pop lcall inc js divb jno in fs aam pop xchg iret lcall movb test add cmpl add popa mov ljmp lret nop aam dec (bad) lret or mov push push nop rorb push xchg rcll push xchg aad push xchg rclb push (bad) lret or push xchg aam pop fwait loopne pop mov push xchg enter pushf ficomp aaa imul add jl jmp mov rolb cmp push test mov (bad) aas jno in pop fwait xlat adc ret (bad) cmp sar jl hlt daa pop mov push jne,pt jecxz dec jg in push mov imulb pop lea mov push inc ja fmull cmp enter fs (bad) cli xor fstpl dec add inc cmpb pop push add cs (bad) cmc add pop (bad) sar popa xchg iret add jno fcoml dec jg fmull jne (bad) cmp add inc jns jmp pop xchg movb insl cmpsb xor in push (bad) leave (bad) cmp out sub movsb loope pop nop (bad) std cmp lret jg jmp dec xchg scas jecxz dec jns fisttpl sbb test int3 push xchg cmovns mov (bad) outsl test sbb sbb mov or mov sub aaa push roll cmp test or scas loop dec xorl jmp sti cs roll inc jae adc mov sbb (bad) sti xor xlat pop dec test out pop pop (bad) aaa jne jecxz dec test cli xor fist add (bad) cld xor mov mov fcoms dec (bad) mov in push xchg rorl dec test movl sub adc mov xlat push inc cmpb add dec mov std xor test sbb enter mov and leave (bad) aaa outsl stos call adc add ret std xor arpl clc cs fcoms push mov add mov cmp mov pop popa out pop xchg aam dec xchg cmp in pop fcoms mov stc xor in pop xchg aad xchg cmc outsb movsl add fistpl push (bad) int3 add jns repnz call sbb movb mov xor call adc enter cmc xor in movsb loop pop xchg rorb cmp out sub loopne pop xchg int inc mov das push fild and into push jns,pt ljmp jae ljmp jle jmp pop xchg int3 add add mov stc sub xchg ret pop pop add add and daa pop xchg leave pushl mov leave push inc ret cld xor aad dec xchg add jne out pop xchg rorb jl out sub rorl inc jns cmp ljmp xchg movl sub fcompl push (bad) lret pop inc cmpl sub sbb int3 or ret je jmp pop cltd (bad) adc add xor mov insl movsl ficomp cwtl fsts popa popf ficoml push mov add mov in pop xchg rorb dec mov (bad) cmp sub push xchg cld ss ljmp push (bad) or jl cmc outsl movsl fistp nop int inc jge in and (bad) cmc sub gs ficoml push (bad) int inc add aas jl std cmp out sub in pop lcall add (bad) or ret cld ss cmpsb add pop push xchg rorl inc ja jmp (bad) cmp test vcvttss2si roll cmp ficoml pop mov mov rolb jbe fist jge and lods loopne inc jno sar cs mov movsb roll xor mov loope push mov rorl inc js loop push test fcoms push pop std xor fcoml dec xchg rorb inc jbe roll aaa imul enter stos in push (bad) mov mov lret pop mov scas loop dec jp loopne inc jl ljmp (bad) ret insb lods jmp xor loope pop xchg into or cmp jmp imul and fildl sbb rorb add add outsl mov sub lret pop mov (bad) cmp push xchg loop dec mov or jnp imull cmpsb loop push mov in push mov add jne loopne dec add aaa insl mov rolb cmp cmpl es xlat adc lret (bad) mov in and push (bad) rorl dec mov (bad) cmp out sub out pop lcall inc cmpl (bad) je repz push fstpl sub rorb inc js in sub fstl mov add insl cmpsl call add mov in push mov pop inc jl sti cmp in mov xchg into push dec mov (bad) ss icebp sub ficomp push mov push inc mov outsb mov sub add jecxz pop nop int3 adc ret jge out sub pop xchg rorl inc mov add jne cmc xor out pop xchg rclb dec test fistl dec test add jae repz fistpl push xchg leave or mov icebp cs rorl cmp jmp or mov fistl cmp loope pop xchg int jl,pt out and test (bad) adc lds cmp and (bad) cld xor aad inc js in pop xchg jmp imul dec mov add jae divl imul sar je call sbb roll inc test cld xor lods call or xor test xchg enter pushf rolb inc jnp lock bound int3 or mov add ss out pop add lret add cs scas call adc lret ja cmc xor fistp dec cmpl xlat adc scas in pop xchg rcll push xchg rcll push xchg fsubrl arpl ljmp mov divl js push pop fstps pop cltd fcomps lcall pop lcall pop pushf fistp pop movsb in insb stos jmp insl lods icebp xor repnz clc xor das arpl out arpl lods jmp push dec mov pushl js out es mov mov iret push inc mov add push fs int aaa ja hlt sub mov aad aaa outsb mov imul inc jne fstps dec jnp xlat or add insl popf rolb cmp (bad) divb add cmp mov sbb ret cmc and icebp and mov sbb cmp call cmc sub int3 add pop fcompl push xchg fistpl push xchg (bad) cmp push xchg pushl das pusha xchg (bad) icebp and mov mov int3 add imul pop mov std das pop mov mov lret std xor fcoms push (bad) sar popa xchg xabort pop nop shr pop lea mov and mov pop push xchg int sub xor add outsb mov cmpsl fimull cmp push inc jg divb push loope pop xchg iret or insb mov ret sti cmp sub in pop xchg into or dec xchg add scas in push mov std xor lahf fmuls imul add fs int cmp cmpl scas in and mov aad push mov adc int3 or enter mov sub fsts inc test add add jo fimull inc (bad) mov and mov ficompl push mov fisub cmpsw out pop xchg aam push xchg xlat sbb lret sub push in sub jle add sar jb in movsb jecxz push mov add jne in es cltd rorl jl ljmp pushf aam inc ja in and loop pop cwtl rclb dec cmpl or cmpb or iret add sub fcoml push mov stc xor sbb ret insl stos jmp arpl add or cmp add add and jecxz push (bad) enter mov lock mov mov fstl movsb fcoml dec cmpl js call adc test (bad) aas jl divb jp hlt xor pop pop xchg rcll dec test add jp in sub loope arpl loope pop xchg int dec test cld cmp lock out outsl stos out pop xchg enter lahf roll or mov and add jb in push insb movsl ljmp jg repnz fsts dec cmpb pushl dec mov (bad) cmp mov mov and mov aam inc jnp repnz fsts push (bad) movl xor rorb jnp clc xor inc je ficoml inc jge out pop pop repz pop xchg add (bad) cli sub xchg (bad) imulb pop mov icebp and mov (bad) imulb xchg (bad) stc sub fwait aam cmp rorl cmp lods in dec (bad) mov rorb inc jge cmc sub lret cmpl mov jmp jne jmp sub dec test add jns rep out pop xchg rorl inc cmpl adc (bad) int dec mov rorb dec mov std ss jmp pop xchg xbegin cli xor loope inc jns loope dec jle in sbb xorl jno fistl inc jnp jecxz inc jb ficoml inc xorb push inc mov imulb cltd rolb add or xorl mov int aaa push js fimull add jo add sbb test ret sti dec jg in push push mov clc sub ret push test mov sbb mov push dec mov sti xor or addr16 int xor mulb push mov (bad) pushl gs (bad) push dec mov std outsb stos loope dec xchg add js repz pop lcall xor in inc js loope dec scas fistp test (bad) imull xchg roll inc jle out es mov add je loop push xchg sti xor dec test rorl xor fcoml inc jbe call push mov std inc test rorb dec (bad) rclb cld xor test rorl cmp sub fistl fsts dec cmpl push jl jmp popa add fwait rorl lods clc xor xor fistp push mov cli je add jnp clc xor loope push xchg iret cmovl sar jnp in and int3 add jns in arpl lret push inc jge repz push xchg iret or mov fstl pop xchg rorl lcall inc jl cmc xor mov sub adc mov in pop xchg iret push cmp mov (bad) incb mov mov sub loope pop cltd fcomps pop xchg rorb dec test or cmp and rorl inc js ljmp xorb inc jp in es xchg lret add imul stos loop dec xorl mov and xchg rolb inc jle repz mov mov add out sub fcoml xor scas in add iret or mov xlat adc sbb lret cmpl (bad) (bad) hlt and mov mov sbb jg out push test aam cmp fmuls inc jb rolb cmp out dec jg loopne dec test sti outsl stos ljmp jl repz movsb fistp pop xchg int3 or divl mov and fistpl xchg rorb inc jg divb add and xchg iret or mov cmc xor jmp sbb loop push (bad) add jp lock fistp push mov cld xor test int3 push cmp dec jge jmp pop fwait xlat adc mov sub xlat cmovbe jecxz dec cmpl sbb xchg aam dec mov add jle,pt divb imul sbb rclb add rorl push mov cld xor test scas in pop xchg rorl aas ja out push mov sti xor loop push test stc arpl test sahf roll cmp fmuls cmp push push mov jecxz dec xchg (bad) cmc sub (bad) lock mov and mov and mov sbb mov fcoms dec (bad) add je in pop std outsb mov aaa add ret add lret jg sti xor cmpsl loopne push xchg rorl inc jns loop push xchg (bad) ss mov (bad) or fistpl popf fistpl pop xchg (bad) sbb sbb cwtl (bad) sbb adc fstps pop xchg (bad) adc push xchg fisubl movsb loop pop lahf call add mov out xor add test and aad inc jge enter mov stc cmp in sub mov xor addr16 pop popf fcoms push xchg rcll push (bad) leave or int3 or mov (bad) cmp add inc xchg pop pusha lods hlt cmp mov pop inc add cmp jno jmp push sub mov or bound cmc cmp fisub jno pop popa test xlat push dec xchg enter fdivr sbb pop jle shl and mov or mov cmc push aaa pop jg ret es imul mov pop jg ret and int rdtsc push jae mov clc sbb pop jge mov imul add add out adc push je mov (bad) and test dec outsl nop mov repz push js mov inc xchg dec jo mov stc sbb loop and mov or dec jo mov negl cmp ret and xchg push jb mov negb cmp mov test dec insl mov pop js mov test dec insb mov xor push push xchg int3 or arpl dec mov xor shl and xchg dec insl (bad) mov repnz push ja mov xchg dec outsb mov push jbe mov pop jle shl and cmpsl enter dec insb lea push jbe mov add add mov inc push or dec jo mov cmc push aaa pop jns mov pop andb add scas (bad) icebp adc push js mov pop jg ret and imul mov hlt adc push jns mov pop andl into out adc push jae mov clc sbb pop jnp mov test dec insl mov push jne mov pop andb imul jne mov clc sbb pop jl mov bound or dec outsl nop mov repz stc sbb pop jle ret in es mov push je mov clc sbb pop jle shl and xchg dec insb lea push jae mov notb cmp sahf add xchg dec imul jbe mov pop jge shl and lret jmp sub mov sti sbb pop jg shl and xchg dec outsb (bad) mov icebp adc ja mov pop jg ret and leave ljmp aam push aaa pop jns mov pop andb xchg dec outsb (bad) mov icebp adc push jbe mov stc sbb pop jge mov push lods int wrmsr push jno mov notb cmp fwait mov pusha andl scas iret icebp adc push je mov arpl dec imul ja mov pop andl lret in or push jno mov cmc push aaa pop nop call add insb mov push je mov negl cmp mov arpl dec imul jb mov clc sbb pop jnp mov dec push lods int3 in wrmsr push jae mov notb cmp lcall (bad) mov inc push push cs jo mov hlt adc aaa jnp cmp add jns out sub fs fsts cmpb inc mov adc mov add cmpl mov icebp outsl stos call inc test adc fbld imul push ficompl bound decl jmp outsb mov bound inc xchg add dec (bad) enter mov push dec xchg add xchg ficompl cwtl roll add adc or and loopne pop stos idivl ja idivb mov adc enter fistpl xchg (bad) adc lods sti inc test or jb add dec (bad) (bad) push mov adc out push sti inc mov push push cwtl fbld lods adc in push incb int3 pop pusha lods out aaa add or fcompl mov adc loope jno out imul cmc cmp sti inc test or nop in outsb lods out xor add int3 adc pusha movsl out outsb mov push push xchg xlat and lock add push xchg fbld test jns decb fcomps pop movsb jmp jb incb int pop mov add mov sbb ljmp aam imul divb push jecxz pop xchg iret or adc popf loopne jno icebp xor inc xchg sbb pop push xchg fisub insb stos out xor mov adc jne sti inc (bad) rcll jno cld dec (bad) int arpl add ret xchg aad push cltd jecxz movsl out jns cld cmp faddl (bad) or fcompl pop mov ljmp sahf ficomp pop pushf loope jo lock into andps stc cmp roll push cmpsl out cmp rcrl pusha mov std aas mov adc insb stos out cmp (bad) bound sti cmp leave or cmp mov incl rclb jb cmc cmp out jne repnz loop add add push repnz lret or in addr16 cmp sahf fbld pusha fwait rcrl bound push pop lahf ljmp out jp incb into sqrtps arpl sbb sti inc xchg (bad) mov xor rclb mov and add jne or jmp adc push (bad) mov pop cwtl fbld push cmpsl repz js add mov cmp or rclb push pushf fcompl pop mov jmp inc (bad) fcompl pop fwait aad dec mov sbb push xchg fcomps je out push (bad) aam pop hlt sub xlat adc cwtl ficoml mov pop inc jns divl insl clc xor fstl dec xchg (bad) cmp out pop xchg rorl cmp add clc cmp mov sub out push xchg xlat adc out movsl out gs out pop xchg iret or xor repz (bad) aas jns sti inc jg pop sahf out ja decl rcll arpl xor fcoml push xchg std inc add test add or add insl lods call sbb cwtl xlat pop pop cwtl xlat adc (bad) rcll dec mov or mov or (bad) rclb jle std cmp (bad) or (bad) int dec mov add sub jecxz pop sahf fistp pop cltd loopne jo stc cmp xchg aam pop sahf out jns hlt xor incl or mov sub jg incl les test das outsb scas out pop mov sti xor loope push mov cld xor in sub cmpsl loope popa mov lock repnz stc ds add add movl outsl mov ds push dec mov sbb (bad) (bad) cmp lock out gs fstpl popa mov lret mov sbb pop sahf loope pop mov fistp pop sahf jecxz mov or rcll pop mov sub scas repnz jmp add adc ficompl pop popf loop outsb mov push dec xchg aam push sahf in jae cld inc test adc sbb cmpsl call xor cld jg,pt or rclb pop xchg (bad) (bad) sti cmp mov or leave or (bad) sbb call inc mov pop push lcall add test add (bad) adc fsubl imul adc (bad) sbb loop outsb mov inc xchg adc mov or (bad) sbb pusha out cmp call dec mov push push xchg (bad) and cmc xor mov je incb lret adc leave adc and repnz jnp or mov xorps adc loopne jg or int push xchg fcoms pop cltd fcomps pusha lahf fstpl pop mov mov (bad) cmp mov cmc xor push inc jle cmc das imul dec (bad) lret adc fcoms pushf loop insb mov imul dec xchg xlat sbb inc mov adc ficomp pusha popf fisub stos in sub mov sbb in push repnz push dec xchg fcompl jl or imul push push xchg fcomps popa test clc inc test or arpl push inc mov adc loopne lods clc inc xchg adc and jge add rclb pop mov icebp xor icebp cs scas in sub in xor mov adc pushf fstps popa popf ficompl pop xchg rorl data16 hlt cmp popf in je add fsubl push stc inc mov pop arpl iret push pop cmpsl icebp ss aam pop lcall push xchg ficompl mov in sub lods ljmp popf (bad) sbb aad push (bad) leave add inc cmpl out xor fstl cmp loope dec xchg imulb gs fsts dec cmpl mov sbb rorb dec mov or mov or les inc jle incl mov icebp das jno lock repnz add repnz jecxz bound (bad) push push cwtl loope fs (bad) adc leave add xor outsb test sbb ficomp push xchg rorb inc jnp add jl cld inc add inc add inc cmpb fs ficoml pop mov fstpl push xchg xlat sbb fbld arpl fcompl mov movsl in xor rorl mov push push mov or int inc mov add sub pop xchg int3 or mov add add dec (bad) rclb mov icebp xor add fsubl imul insl into add inc xchg dec outsl nop mov stc sbb add inc xchg dec insl (bad) mov repnz stc sbb pop jge mov add add and test dec jo mov hlt adc mov pop andl lret in push das push jb mov notb cmp pushf mov arpl sub (bad) hlt push cmp fwait mov popa andl mov jb mov notl cmp fwait mov xchg xor xchg mov clc sbb pop jl mov arpl dec insl mov add stos lret in or mov hlt sbb pop jnp mov bound sub lea push je mov dec mov add cmp lock loope jne add jl cmc cmp es cmc ds or pop push mov add mov das imul add add dec mov adc in xor push inc nop fcomps pop mov repnz sbb inc test cmp nop (bad) bound cli aaa je loope push xchg fsubl popa movsb loope pop fwait in jb in sub inc add bound inc test add mov pop bound repnz jmp jp,pt sti cmp rcrl pop add or loope fs cmc cmp adc pop mov add into sbb out xor add rcrb (bad) lds dec xchg fcompl jns sti cmp or rcrl popa stos repz ret lcall dec xchg fsubl bound sti cmp or push cld inc cmpb push popf in push repnz add add rclb pop pushf jmp inc mov or jmp push cld inc add pop lcall jge adc loope jo icebp cmp out imul popa test pop dec mov sbb jnp add fistpl pop sahf jmp jbe repz add aam push roll mov sbb out jb stc cmp cmp xlat sbb mov mov or (bad) sbb outsl mov xor push inc test or pusha lods clc cmp fsubrl jo icebp xor add jge,pt cli cmp repz or xlat sbb jl push dec xchg (bad) bound push push xchg fcomps push int3 adc push sub out jnp pop dec mov push add mov divb jb add xchg pop pop mov sti cmp fstps lods jmp jge or (bad) jl add fstps lahf in xor mov adc icebp xor or pop push lds test inc (bad) (bad) outsl add or add push cltd (bad) data16 sub or call pusha test pop add decb in xor pop movsl jmp jl pop bound sbb cmc inc mov pop push pop push mov sbb mov add inc jle repz add inc (bad) iret adc aad popa mov std cmp fstpl push (bad) rcll mov sbb dec xchg incl mov sub inc add inc mov add add std cmp mov ficoml dec cmpl adc (bad) jae out pop nop fsubl gs sub mov cmc xor ljmp mov or or movb jbe repnz fisub pop lcall pop xchg (bad) jno idivl leave adc bound in sub ficomp push lcall outsb scas lock jmp cmpsb call icebp das insl stos call daa movsl in cmpsl out imul repz outsb mov xor push pop xchg aad push xchg rorb dec (bad) aad jp push dec xchg rclb insl mov dec mov or fbld push xchg rcrb bound call inc test xor pop xchg iret push cmp xchg or add inc jle sbb adc rcll dec (bad) lret (bad) (bad) aad pop lcall mov outsb mov cmp add push cltd fcomps gs clc cmp ret xchg roll inc jp hlt cs stos out cmpsl call sbb movl inc jle stc cmp ret jg sti cmp stc cmp std cmp dec mov adc out push cli inc cmpb inc mov or (bad) rcll push xchg aad push add repnz js (bad) jle,pt push dec xchg fcomps pop mov cld inc mov adc stos ljmp mov cmp add push dec mov adc (bad) gs out sub cltd fsubs lods idivl enter out outsl mov inc mov adc (bad) lods jmp cmp add add rcll pop popf loop insl mov ss add (bad) sbb in xor incb iret sbb xor cld inc xchg sbb in xor std inc mov or adc jo add aad fs repz jg or fbld imul inc (bad) rclb outsl mov jle,pt add rcrl lods out xor add fisub insb scas in sub insl mov ss stc ss sti cmp incb mov mov in outsl stos out pop popf ficomp push xchg rorl pop sahf fisubr insb scas hlt ss hlt cmp add xchg xlat sbb loop jo divb test add test add fldenv fs xor mov and mov inc mov adc jb std inc mov pop pop cmpsl jmp jne add add pop xchg rclb push cltd fisub jle or fisub add dec mov sbb call dec mov sbb jl add nop aad pop cmpsb ljmp enter rclb push hlt xor jmp daa imul cmp push push xchg aad mov fstpl pop sahf jecxz jo repz mov sbb mov inc test adc je incl (bad) and cmp data16 icebp ss add push xchg rcrl pop (bad) or ret mov pop dec mov adc aad dec (bad) iret rsqrtps ret add mov jmp and fstl push (bad) aad push xchg rorl dec cmpl and lcall sub popf xlat adc sar jno jecxz push xchg aad pop mov fcomps pop lcall push mov push inc test or mov add jns clc ss cld cmp addr16 fcoms mov add adc mov sti xor adc dec xchg add mov sbb call cmp ret mov and call inc xchg sbb mov dec (bad) loop ja add xchg fistpl pop cmpsl out das jbe lret xchg fisubl bound (bad) cmovl enter iret cmovnp stos repz cmpl push imul repnz incb movl pop cltd xlat sub mov adc insb mov cmp or push fs out cmp add nop fcomps pop mov (bad) ds push push cwtl loop add sub in xor mov adc outsl mov and repnz dec cltd fbld fs clc cmp clc das imul add pop popf (bad) outsl mov xor add leave or jo add mov adc call push cwtl ljmp ret adc frstor jge or arpl or faddl sub mov dec mov pop pusha cmpsb out outsl mov sbb sub idivb xchg adc out add sti inc fistpl push xchg rcrl push icebp xor nop fsubl data16 jmp dec xchg fstps jae repz or push pop lahf sti inc mov pop inc (bad) aad pop cltd (bad) push ljmp lds pop lcall add mov xor xchg push push fwait jmp jp sti inc mov adc into push dec mov or push xchg ficompl push sahf ljmp les push cwtl fistpl popa scas clc cmp fistpl insb mov ss dec nop aad pop mov stc cmp jecxz outsb mov inc xchg adc rorl dec (bad) lret or mov add pop fwait in jne repz sahf out insb mov lods repnz mov adc insl mov dec mov adc in jo sti cmp pop dec mov sbb outsl mov incl int push xchg call das push mov sub or in ss adc loop insl lods repz push addr16 inc mov and cli dec cwtl ljmp repz (bad) aad jb add in js rorl lahf jmp pop mov sbb adc stos idivl xchg sbb and je in jne push dec mov or xlat sub jns add rcrl popf loopne jb divl jbe jmp jo in cmp ret add sbb dec jle out and push xchg rorb dec mov clc xor out cmp (bad) cmp idivl js repz lahf fcoms dec test add rorb dec mov add jo add sub out push xchg into or cmpl movl inc mov or mov mov xor push loopne push (bad) lret push inc test push dec fstl push xchg into or dec mov add ss cli cmp jmp push cmpsb out bound ljmp roll add pop dec xchg (bad) popa pushf fsts inc cmpl sbb (bad) (bad) (bad) cmp cmpsb loope push xchg ficompl pop popf fbld arpl sbb or cwtl aad imul adc rcll push mov add addr16 aaa outsl test pop push xchg rorl inc jge add xlat sbb ficompl pop popf jecxz jo jmp popa mov fbld push testb inc add inc test adc fstpl imul pop inc xchg pop dec (bad) rcll push xchg fcomps push cwtl xlat push push cltd fcomps push xchg rcll push xchg rclb dec xchg rcll push mov cmp into adc rcll push ljmp mov (bad) mov cmc xor mov xor cld inc mov push pusha movsl ljmp jecxz pop sahf loopne outsl scas jmp mov in sub xor dec xchg ficompl push mov (bad) cmp out sub xlat push dec mov pop inc test std jge,pt sti aas (bad) les inc xchg or push pop fbld bound add andps daa pop lcall jg cmc xchg add ret jne lock nop iret or test cmc cmp cmp clc xor mov cmp add ret push inc mov push pop sahf loopne cmpsb out xor in sub jg add enter enter xlat sbb test sub mov adc jle or frstor jne incl (bad) or int3 push push xchg fistpl bound icebp xor sti inc (bad) enter loopne data16 in jb add rclb pop lahf out sub mov and idivb (bad) int push xchg fistp fwait loopne add icebp cmp fsubl insb mov cmp std inc mov sbb in outsl mov inc mov adc fildl xor add add push lcall jl pop dec xchg (bad) jae (bad) cmp ret mov sbb call inc xchg adc fsubl test jl or aad pop cmpsl in xor add xchg (bad) imul pop lahf loop mov cmp add int3 adc rclb fstps push xchg aad pop lcall bound fisub pop lcall cmp call sbb sbb sbb test outsl mov imul add iret adc and in xor hlt das je add add xchg (bad) sbb out xor add (bad) iret adc js inc xchg adc out jb ficompl xchg fstps pusha cmpsb out xor add arpl or rcll jp add push pushf in jo sti inc xchg sbb ljmp fcomps mov idivb jns add rclb cltd (bad) adc dec mov or ficoml push pushf in imul cmp mov idivb xchg sbb in xor or pushf fbld stos icebp cmp or cltd loopne push adc sub mov and jmp and fs sub mov cmp divb jp cmc data16 jecxz pop popf fsts push xchg rorb dec mov or out xor repz or mov loope push (bad) add jle cld xor pop xchg int cmp xchg push inc test add nop int3 or cld ss lock stos jmp push pop xchg iret or daa push mov sti cmp or cmp cmp cmc xor call push inc test sti xor in bound rorb inc jp repz sub imul sbb enter mov jmp imul aam pop cwtl fsts jl repz popa pushf fsts imul insb mov sbb fstpl push xchg rcll dec mov pushl pop xchg iret or mov sub lcall xchg rcll xchg aad pop lcall add add jo repz nop fsubl insb mov cmp incl mov clc sbb pop jl (bad) in daa inc add mov icebp adc push jne mov pop jge mov bound daa dec imul mov hlt adc mov bound dec imul push jb mov cmc push aaa pop jp mov pusha andb xchg push jno mov cmc push aaa push js mov pop jg shl and xchg dec insl mov push jae mov clc sbb pop jg shl and cmpsl enter dec insl mov push jne mov stc sbb pop jge mov loopne pop xchg in adc push je mov bound sub add dec push lods int wrmsr push jb mov notb aaa pop jp mov bound sub mov je mov clc sbb add mov dec imul mov clc sbb pop jl mov bound sub (bad) mov repz push ja mov pop jle shl and xchg push jno mov cmc push aaa pop jp mov pusha andl iret lock push je mov clc sbb pop jl mov arpl dec imul push jae mov negb cmp mov inc push or mov hlt adc mov popa andl int3 in or mov negl cmp popf mov add add test dec outsl nop mov repnz adc jg shl and test ljmp (bad) clc sbb pop jl mov bound or dec jo mov hlt adc mov popa andl int3 in push das push jns mov arpl sub mov push jae mov clc sbb pop jnp mov arpl sub outsb (bad) mov stc sbb pop jle shl and xchg dec outsb (bad) mov repnz cld push aas pusha andb mov or push jae mov clc sbb pop jge shl and int adc push jae mov clc sbb pop jge mov xchg dec jo mov stc sbb pop jge mov add test push jae mov clc sbb pop jge shl and cmpsl enter dec insl mov pop jl mov arpl dec js or (bad) ljmp (bad) cmc push cmp pushf mov arpl dec insb xchg mov cmc adc mov pop andb push or mov hlt adc mov pop jg ret in sub scas (bad) icebp adc push jbe mov pop jg shl and xchg dec outsb (bad) scas (bad) repnz push jbe mov pop (bad) mov dec imul mov stc sbb pop jge mov mov dec outsl nop mov hlt adc mov arpl sub add add mov jno mov cmc push cmp fwait mov arpl dec insl mov push jns mov bound daa dec imul add test dec insb lea pop jns mov fs xor cwtl mov pop andb mov push xor xchg mov cmc pop cmp lcall test push je mov clc test dec insl mov push jbe mov pop andb insb lea pop jl shl and mov or mov negl cmp sahf mov test dec outsb nop mov cmc push aaa pop jns mov arpl dec add add scas (bad) icebp adc jne mov cli sbb (bad) movsb (bad) call mov push jne mov cli sbb add lods into out adc push jae mov negl cmp popf mov arpl xor xchg mov cmc push aaa pop jp mov xchg dec insl mov push jbe mov pop jg shl and cmpsl enter dec outsb (bad) mov dec mov add jbe jmp imul adc frstor dec xchg fldenv lods icebp xor xchg fbld popf aad inc jl jmp push xchg into (bad) xchg lret adc lret andnps divb jge adc jecxz jb stc inc mov or push pop scas testb and add jae add xlat pop pop mov add inc mov add jns out push mov jmp movsb out ss repz add enter (bad) aas (bad) lret adc fcomps push cwtl in insb test repz scas in sub std cmp jbe add les push lcall cmp dec xchg xlat and lock push dec xchg fcompl pusha cmpsb in xor cwtl loop imul sub add into pop pop sahf jmp je cli outsl lods cmc cmp ret or outsb mov inc or or mov inc mov add rcrb push xchg xlat ss pop inc add push cltd fcomps pop mov idivl xchg (bad) adc movsl call inc (bad) rcll push cwtl in insb lods testb pop push cltd fistpl je decl lret adc outsb mov std jge,pt adc fisubl insb scas lock add mov adc loope je clc inc mov or movsl out aaa jns repnz or xchg ljmp int pop sahf frstor jno clc cmp lret or popa lods icebp xor mov adc gs jmp cmp mov or cltd jecxz arpl cmp test adc xlat and jmp ja cld inc or or ret jg add pop cwtl fsubl mov sbb in ja lock pop inc xchg sbb xchg rclb pop mov sti cmp popf (bad) lods repz add mov adc xor jae in sub stos ljmp mov sbb cmp or fistpl gs add icebp xor or (bad) rcrl pusha mov sti cmp xchg in insb lods icebp ds add fs clc cmp push cwtl fsubrs jb idivl jp cmc inc test or lcall cwtl fisub jo cli inc mov pop bound or lock mov inc xchg fsubrl jp or cmc cmp idivl scas incl fisubr jbe or adc push fisubl rorl pop xchg rclb lods in add movb xchg fsubs imul inc test add mov or in mov rorl add jle,pt imull outsl mov daa fs (bad) adc mov rorb inc jge jmp pop mov add je jecxz push mov das jno add push inc test fstpl pop xchg iret push dec mov push inc xchg std xor pop xchg lret or lret adc loopne pop cwtl ficomp pop lcall jae mov xor mov add jbe in sub (bad) push push xchg xlat sbb loop pop mov (bad) adc sahf ficom pop xchg xlat adc and popa mov jmp insl lods jmp sub jmp push push mov or mov idivl add xor mov inc xchg or xchg fbld sub ss call push movsl loope pusha mov cli inc xchg or xchg std xor cmpsb out pop xchg rorb jnp out sub in pusha sahf fcoms pusha lahf loop lods in je,pn hlt xor jle add nop aad pop popf jecxz imul lods out xor in sub fcompl push xchg rcll dec cmpb cs fistpl push cltd fcompl pop fwait (bad) adc rcll pop xchg (bad) adc xchg rorl dec xchg aam jno icebp xor out xor mov inc mov push dec xchg aad pop cltd aad pop mov call sub lods ljmp mov ds ltr xlat sbb sub cmp (bad) or pushf loopne cmpsl ljmp mov xor cld inc cmpb push xchg rcll jne std cmp roll lds aas (bad) (bad) or pop test jbe,pn add rcrb bound pop dec (bad) int push popf ficomp jns push xchg loop insl mov aaa jnp add push xchg push popa cmpsb jmp jae stc cmp add rcll jo cli cmp lret xchg fisub push add lods clc cmp rclb push xchg fnstenv or pop frstor data16 repnz add sbb test or in outsb mov inc mov sbb out jne std inc mov push pop lahf in push lods ljmp mov icebp xor xchg add inc jl (bad) js,pt repz mov push out pop xchg rorb cmp in and mov fcompl pop lahf ficomp pop fcompl pop cltd xlat sbb in jp add (bad) or fsts pop sahf loope imul ret mov rcpps icebp cmp or loop outsl mov inc mov and sti cmp or ficompl jp pop dec xchg aad pop mov cmc cmp fcoml push cltd fisub outsb mov inc add aaa jl pop dec xchg xlat sbb scas idivb (bad) lds dec cltd loope imul add movl push (bad) into or roll mov push pop lcall jo lock scas jmp mov frstor push into push pop mov or loopne insl mov inc nop fisub insl mov inc mov sbb inc add inc add inc jl sti cmp popf ficomp pop sahf fistp pop popf fcompl pusha mov (bad) adc leave push inc jl cli xor mov das imul and fadds sbb enter mov in pop cltd aam inc cmpl call sbb jmp sbb xchg int inc jl divb insl cmpsb loope pop xchg rorl outsb lods hlt xor jno out pop mov iret or mov aad inc jge out sub fistpl xchg iret or (bad) sbb popf cli cmp fwait jecxz imul pop mov in xor adc aaa jge sbb clc cmp xchg fisubl pusha mov in xor divb jae loopne push mov and stos out bound repnz add push nop rcrb data16 sub mov sti inc mov pop inc add push lcall cmpsw in data16 ljmp les pop mov add cltd ficomp insl mov push add cld cmp int3 adc fildll insl mov inc mov sbb in jnp incb adc cmpsl in xor push xchg fcomps push xchg fldenv movsb ljmp loope push add jmp jno in sub push inc (bad) ret adc fcomps bound in xor idivl mov push push xchg frstor test push dec xchg fcompl pop mov cld dec (bad) rcll push mov idivl jle add fnstenv js or adc loope insb mov cmp cwtl fldenv push mov sbb mov hlt cmp (bad) add cli inc (bad) rolb add push lcall test adc sub hlt cmp lret nop xlat sbb xor mov dec xchg xlat push pop mov lock jle std ds adc nop add sub out xor (bad) ret andps cmp fsubl jne cmc xor jle clc ss out cs test sub cmp pop dec mov lret mov sti inc xchg push pop fwait loope jne stc inc mov adc in xor add movb xchg fistpl pop mov cli inc xchg push inc xchg fcompl pop popf fcompl push lcall push lcall js add lret andps jmp inc xchg or loop popa stos repz mov sbb scas out das xchg xlat push mov mov inc mov or xor cli xor add rcrl fs idivb or popa stos idivb or xor mov xor pop dec xchg jecxz jae pop push pushf jmp or pop test aaa or add mov and mulps and inc mov and decb fldt jne lock mov cmc cmp (bad) mov xor add add cmc cmp rcll lahf jmp xor out xor cli dec nop iret or mov sub rorl inc test stc xor mov and ficompl pop xchg rcll dec (bad) mov ljmp mov and mov xlat adc hlt imul rorl inc test sti xor stos jmp and repz (bad) cmp sub fstl push mov leave add dec mov add je repnz push dec xchg or mov sub mov fstl dec mov pop inc test add mov jmp push xchg into or (bad) ja add mov adc loop popa mov inc mov adc push xchg rorb dec mov cld xor push (bad) add sub fcoms push int3 adc cwtl fcompl popa movsb ljmp add pop dec nop iret adc mov add aam add std push aas pusha andl int wrmsr push jae mov negl cmp mov or xlat pop pop xchg xlat sbb leave add outsb mov mov daa pop xchg rorb inc ja out xor or (bad) hlt push aaa pop jp mov imul mov negl cmp popf mov add lods into out adc push je mov stc sbb pop jg shl and (bad) icebp adc push jbe mov pop andb imul mov stc sbb add inc jl or xor ljmp xchg iret or movb cmpl or mov add add jle add jb in es mov adc push js mov inc xchg icebp xor in movsb add xor add lret jns hlt xor out fs repz mov add lds push xchg aad gs repnz cmpl inc mov cmovle int3 or mov adc or lret mov or leave or rclb pop popf fcompl lahf ficomp pop fwait aad add push dec mov or lret xchg fsubl je sti inc xchg fcompl popa cmpsl out cmp stc push xchg aam push pushf fbld pop lcall push cltd ficompl push xchg fsubs bound sti cmp mov xor fmuls push (bad) (bad) (bad) cmp push pop fsts push nop iret or push scas or fcoms rclb add incl mov or leave cmovg jmp ss ret push dec xchg xlat adc (bad) cld cmp lock fistpl dec test or inc mov adc rcrb pop xchg (bad) adc pop cwtl fcomps pop pushf frstor lods out xor xor imulb insb mov aaa jp cld cmp test push inc xchg adc fistpl bound idivl add dec xchg rclb push lcall outsb mov cmp inc add fcomps pop mov in das outsb mov cmp sar mov adc sbb (bad) sbb ja add pop mov repz dec mov adc call inc test pop pop fwait in jo idivl jg add test or gs add aad pop mov std inc or push cltd (bad) addr16 ds or aam pop add add adc call add (bad) sbb out xor or fistpl pusha cmpsl in xor inc mov adc jecxz jo idivb add or or (bad) sbb and movsb fistp sahf fcomps pusha mov rcrl push xchg rorb jne jmp or mov sub pop xchg rorl push xchg aad push add and loopne push hlt inc test or sbb loop movsw ljmp mov cmp dec (bad) rclb pop mov add aad pop sahf out jo idivl movsl jmp jno add or lods repz add add hlt cmp pop push (bad) iret adc fstpl pop mov push dec xchg frstor movsl jmp inc test rcll pushf loop outsb mov xor sti inc mov or push xchg fsts push cwtl fcomps pop pushf loopne cmpsb loope pop xchg (bad) push pop sahf fistpl bound repz add inc jge out xor and mov pop pop mov add rcrl pop mov adc out jne incl sbb in xor hlt xor scas lock clc ss icebp xor mov aaa add idivb je lock lock sbb lahf fstps push nop iret or roll ja jmp test popa fwait (bad) adc xchg (bad) cmp push in imul adc leave add jl stc cmp ret or lds cmp mov sub push push mov add mov fisub push (bad) leave add jns stc add ja out sub popf xlat adc lret add add test add mov xor aad dec mov or les inc add inc cmpb cmp jmp adc into or xchg add (bad) cmp jbe stc aas jl repz out sub imul dec xchg fisub imul ljmp lea rorb inc cmpb sub pushf xlat sbb fstps pop sahf fistp pusha mov in das jo repnz add rcll pop popf call dec mov rorb push das push jno mov negl cmp popf mov add xchg dec outsb (bad) mov repnz (bad) sbb ret sub (bad) mov repnz ja mov pop andb dec outsb (bad) mov repz push ja mov inc xchg dec jo mov and or mov ficoml dec test add mov int3 push aas jns cld xor arpl fistpl pop lahf fistp pop mov aad push xchg (bad) dec jno mov clc sbb pop jge shl and data16 dec jo mov cmc push aaa pop jns mov andl xchg mov negb cmp sahf mov in adc mov popa (bad) mov dec imul mov cli sbb pop jge mov arpl or dec imul jb mov notb cmp fwait mov pusha andb imul push jae mov notl cmp fwait mov inc xchg dec insb lea push add mov popa (bad) mov dec insb lea push je mov negl cmp pushf mov popa (bad) mov dec imul mov cmc push cmp mov test dec insb lea push je mov stc sbb pop jl mov arpl dec add mov negl cmp pushf mov bound dec insb lea push jne mov clc sbb pop jl mov popa (bad) mov dec insb lea pop mov add outsb (bad) mov repnz jne mov pop jle shl sub mov jb mov clc sbb ret and lret jmp cs jo mov repz sahf mov test dec outsb popl mov notb cmp mov dec imul mov cmc push aaa pop jns mov pusha andl lret sub (bad) repnz cmp popf mov xchg dec outsb (bad) mov repnz cli sbb pop jge mov test dec imul cmp popf mov bound sub mov push jbe mov pop andb mov adc push jne mov stc sbb pop add add loopne and test ljmp fdivr sbb pop jge mov test dec insb leave sbb xchg dec outsl nop mov repz push ja mov pop andb dec imul push jb mov add sbb enter dec insl mov push jne mov stc sbb pop jl mov bound sub mov push jb mov sti sbb (bad) out sub mov push jne mov clc sbb pop jl mov bound daa dec imul mov add and andl insb lea push jae mov negl cmp pushf mov popa (bad) mov dec push adc jne mov add add pop aas pusha andl lret in or mov hlt adc pop jns mov pusha (bad) mov dec insl mov push jne mov pop jle ret and lret sub mov stc sbb pop jle cli cmp cmp dec test call xor mov cmp in jb add cmp push mov push inc add jge,pt (bad) cmp xchg loop outsb scas decb into push fs in sub rolb lret adc and dec xchg fisub mov hlt aas nop (bad) adc sahf out add inc cmpb adc cmpsb call adc pusha lahf loopne addr16 push nop rcrb pop cmpsb in ja (bad) aas xchg add add push push xchg aam pusha cmpsl in pusha mov cmc xor out das jl or rclb pop sahf out jns incb rcll pop test xor xchg fsubs insb scas icebp aaa add dec xchg fildll outsl mov cmp daa imul add jmp jl add sti inc nop rcll inc mov adc jg and ljmp mov or into pop pop mov clc cmp or into adc jl pop dec mov sbb in jb repz (bad) int3 or fstps mov inc mov adc imul pop pusha stos divb js or rcrb add dec (bad) xlat push pusha add add xchg aad dec mov adc in jb (bad) cmp nop rcrb imul add add dec (bad) xlat sbb popf ficomp arpl or gs add add push xchg rcll pop cmpsb jmp push mov sbb fisubr imul cmp cmpsl lock cld inc test add add inc jle add test sub clc ds push ficomp jne or rcrl imul sbb jecxz je hlt aaa (bad) enter fisubl popa movsb out xchg xlat sbb lahf in ja stc cmp repz in sub in cmp fcomps pop lahf jmp jno std inc mov push push mov std inc add push cwtl fisub outsl mov xor (bad) or aam arpl idivl test adc pop test aaa jnp add rcll pop movsl call and cmc inc xchg add sbb sti dec xchg fildll ja add fcomps arpl push pop mov adc cmpsl out cmp rcrl lods hlt inc (bad) fisubl insl mov dec xchg (bad) je push push movsl out aas mov sbb cld dec xchg fisub jno add mov addps das outsb stos call adc lret pop push pushf fistp pop movsb idivb xchg fcoms push mov ljmp int3 pop pop xchg (bad) sbb sar jo jmp data16 out pusha fwait xlat adc enter movsl fstl xor fistl scas repz clc xor loopne pop lcall xor in data16 in jb call or aaa ja add lds jg,pt add (bad) ret dec mov adc fsubrl outsl mov adc test add add inc ja repnz ss stc aaa jbe divl outsb scas out outsb mov xor out bound loope popa mov out outsb mov ss cmc xor test and mov repnz mov adc fsubl jb stc cmp int push nop into adc bound pop pop mov cld cmp add rcrl bound or mov and inc jle repz in sub and ljmp mov add enter rcll pop mov lock add cs movsl in data16 ficomp pop xchg rclb push mov add js divl jae clc cmp clc aaa jb jae,pn in bound add js add mov or add xchg fcompl pop cwtl fstps mov xor divb js cld aas test push push cltd ficompl pop lcall jp add rcrb pop sahf loopne pusha mov cmc aaa jp clc cmp add (bad) or lret or (bad) rclb push add in imul inc mov add pop mov incl iret adc xlat and loope jle pop dec mov push pop mov out ss add pop dec mov adc pop popa mov pop dec xchg fcomps stos lock push dec xchg loope push stc cmp rcrl sahf out outsl mov cmp enter fistpl movsl in xor add insl scas idivb enter frstor js add aam pusha test add dec mov or rolb or pop popf frstor popa cmpsl jecxz push roll jg add ret jl std cmp jmp bound lds js,pt lock outsl scas icebp xor repnz js add ret mov rcpps ljmp les sbb fistpl cmpsb call inc test or imul ficompl stos in xor pop dec mov pop push les dec cmpsb in xor std inc xchg adc sub cli inc xchg adc fstps fs adc pop mov stc cmp lret mov cli inc xchg pop pop sahf loopne imul cmp mov or dec mov add xchg rclb bound repz icebp cs lods jmp push add add out jno push dec nop fstps scas repnz mov push arpl pop dec xchg fstps bound add movl cmp incb roll mov or in xor divl je icebp sub stos out push loope push nop lret or inc test mov in sub and jecxz pop xchg fiaddl push pop xchg aad push xchg rorl inc xorb sub cld aaa jne call and fwait (bad) adc mov (bad) cmp ljmp cltd fstpl pop xchg iret or jg add ja jmp add addr16 pop xchg xlat adc xlat and fildll jo icebp aaa xchg push dec xchg fildll push rcll xchg (bad) push pop cmpsb out cmp cmc cmp rcrb jp sti inc mov add add or add sub cld cmp mov sub fcomps pop lcall imul adc fisub cmpsb in arpl icebp xor inc xchg add (bad) sbb push xchg fbld jp sti inc (bad) xlat sbb cmc cmp push dec (bad) rcll add out xor (bad) or fbld imul jnp cld add aad pop lahf jmp inc xchg or insb mov cmp jnp add aad fs repnz or ficompl push cwtl rorl inc test adc lret or jecxz bound idivb xchg or pop mov repz or leave adc pop addr16 adc daa outsb mov xor mov sbb fildll jb divb add frstor arpl add inc mov pop dec cwtl loopne imul push lcall je add mov adc loop insl mov cmp or pop inc xchg sbb loope jne clc cmp rcll sahf call inc mov or rcrl pop lahf call inc mov or bound mov adc rcrb bound sti cmp mov or gs aaa jbe or or pushf fdivs jne hlt xor out sub fs xor xchg ficompl bound andnps ljmp leave adc frstor outsb mov aaa or sbb fsubl imul push xchg rcrb pusha mov loopne pop lcall pop lahf loope outsb mov add ss or aam cmpsl jmp jge add sub add rcll pop movsl ljmp (bad) adc (bad) push out cmp fcomps imul inc test adc ficoml dec mov and lock inc mov sbb mov cld inc mov push pop cmpsl out cmp nop fisubl or cmp into sbb add xchg frstor je or cld inc xchg (bad) jno add sahf ljmp testl hlt cmp cltd testl ret add push lahf ficomp mov push push mov in sub idivb roll jnp repz cmpl pop xchg rorl inc jne ljmp lcall cmp mov rorl inc cmpb add dec mov add test add jae in push (bad) add ret or (bad) cld inc jg icebp sub lahf fildl sbb cmp arpl mov fistl push mov or divb push fcompl push xchg rorb or inc jl icebp sub arpl mov cli cmp call sbb ficoml dec mov (bad) cmp xor jne lock sti inc add and cli inc (bad) enter mov hlt sub push mov add mov addr16 push xchg aam pop add hlt aaa jnp incl ret pop dec xchg rcrb pop mov or popf loopne jl enter dec insl out imul adc in sub outsb (bad) mov icebp adc cli sbb add gs cmp loop and lret in push das push jno mov sti sbb shl and add lods into out adc push jb mov notb cmp fwait mov bound es push or push jb mov cmc push aaa pop jp mov pusha andl lret in or mov repz push ja mov pop jge (bad) in daa dec imul mov cmc push aaa pop jns mov pusha andl lret in or mov repz pop jnp mov inc mov or mov hlt adc mov pop jg shl and cmpsb (bad) call lea push jbe mov pop jge shl and add test dec insb lea push jb mov notb aaa pop jns mov arpl sub mov ss js mov sub xor hlt xor in pop xchg lret add jo loope dec test ficomp pop mov adc jg shl and data16 dec outsl (bad) mov repz add aas jg and push andl aad pop fwait jmp ret mov dec test fist push nop incb loopne (bad) jecxz imul sub push fs inc mov add (bad) push pop xchg aam pop popf loope data16 lret jle sti inc (bad) int push xchg int dec mov or mov push push pushf fbld mov inc mov push popa pushf xlat adc xchg lret push inc mov or push xchg aam dec mov or inc test add mov add lds dec mov or rclb push xchg aam push cmpsl call out pop cwtl rorl dec mov pop inc add inc xchg xlat pop fs xor rolb (bad) push mov inc xchg push dec (bad) mov sbb movsl ljmp mov cmp les inc (bad) mov fcoml dec mov add jge repnz scas jmp arpl loope arpl and cmpsl call cmp add rclb gs out bound fistl dec mov add add hlt xor cmp hlt cmp add jl sti aaa jbe cli cmp std jle,pt clc cmp fsts push xchg aad pop fwait aam push cwtl add add sbb fcomps pushf fistpl pop popf loopne data16 out xor stc cmp add (bad) (bad) sbb scas idivb (bad) rcll xchg fstps mov mov xor add enter int dec xchg (bad) sbb xlat pop pop xchg rorl mov add popa movsb in das jno cld ds or xchg aad push fwait xlat sbb push stc aas test or popa movsl call inc mov pop pop pushf fisub sahf in jne cli aas xchg adc in jno sti inc mov push pop mov jmp jno repz or out jb stc inc xchg or data16 lock test push push xchg fstps (bad) lds dec xchg fcomps bound push dec xchg (bad) push movsw in sub je cli cmp popl int inc test or or (bad) iret or (bad) lret or ret jnp hlt das push loope push mov add sar js icebp sub adc rclb pop fbld popa mov in add inc add dec (bad) rcll push cwtl ficompl popa cmpsl in sub add sbb jmp cmp pop dec mov pop pop mov add mov adc in insl mov cmp cwtl loopne push stc inc xchg push push cltd loope imul dec xchg fcomps pusha movsl ljmp lret xchg fstps jnp add mov adc insl mov jbe,pt in sub repz add (bad) or lds jle,pt clc cmp or rcpps out sub mov incl xlat pop push jl or loope insb mov ds adc loope jo cli inc mov sbb out xor cmpl mov adc aad push nop iret adc lret (bad) iret or movl cmp (bad) cmp cmc cmp xor add mov add sar ja lock mov fsts nop into or enter mov lock jae add mov jmp push mov add jbe jmp sub fstpl pop xchg leave add jne lock rcll dec mov adc ficoml push (bad) aad push fcomps arpl lock or mov sub jecxz pop cwtl add push bound cmp mov sbb loopne jno std inc mov and test pop add lock aad data16 cmp aam push popf out test js repnz aad dec xchg fcompl push pushf in movsb loop pusha stos hlt cmp or rcrl movsb jmp js repz mov or rorl dec mov push popa popf fstpl pop fwait call cmp xchg loope addr16 aaa jp or fcomps push repz or fsubl mov pop dec mov and icebp cmp ret lcall or dec nop xlat and and ljmp (bad) pop pop movsb ljmp mov cmc aaa jns cli aas mov or aam pop fstps imul add add clc cmp add iret adc out scas stc aas jg adc fisub mov add cmp andps cmp fbld cmpsb out cmp dec xchg fstps jae repz cmp fsubl mov xor add lret adc frstor jl add inc mov adc jmp jno add pop mov add test or fcomps lods in sub test push push xchg rcll pop mov hlt cmp cmp sbb bound inc or pop fwait loop jo icebp ss sti cmp jbe cmc ss out sub rcll push lcall jne add scas out xor add adc outsl mov xor fstps je testl pop mov sti dec xchg xlat adc push xchg rorl dec mov adc mov cli cmp or aad push jmp jnp or fldenv mov cld inc (bad) fldcw insl mov dec mov adc jmp inc or push xchg (bad) frstor jge or (bad) (bad) cmp lahf add ds bound or jo std inc mov pop bound jae add xchg fisubr jo or fbld jo add daa jo or in ds and decl fisub movsl out aaa test sbb sti inc xchg fisub popa fwait jecxz outsb test out fnsave outsl mov inc mov pushl jge adc push add jl divl jnp pop inc xchg push inc or and stos out push mov sti cmp out es xchg int test dec mov or add inc jge hlt das arpl or jmp fs aam dec cmpl leave add scas in push pop dec (bad) int3 adc les aas jnp in daa data16 in push nop rorl inc cmpl pop push nop int add into or test out das outsb scas repnz fsts dec (bad) lret sub add dec xchg aad bound loope pop fsts push xchg into or jge repz adc (bad) adc mov clc cmp inc add adc xlat sbb loop data16 inc mov sbb mov negl pop andl (bad) repz push js mov bound daa dec imul mov hlt adc mov arpl (bad) call lea push jne fisubr imul repz jae jmp (bad) xor (bad) or push (bad) lret or cmp add (bad) rorl jge (bad) icebp adc push jbe mov pop jge mov add xor xchg mov (bad) pop inc popa (bad) mov dec push lods int rdtsc push jae mov negl cmp fwait mov bound sub mov jne mov cli sbb add mov wrmsr push jb mov notb cmp fwait mov popa andl push stos (bad) icebp adc push jne mov stc sbb pop jge mov xchg dec outsb (bad) mov hlt adc push ja mov pop andb imul into out adc push jae mov negl cmp pushf mov bound sub mov jae mov negl cmp popf shl and mov or repz push ja mov pop jg ret and lret sub mov sti sbb popa andl lea push jbe mov pop jle shl and xchg dec outsl nop mov cmc adc mov arpl dec outsb (bad) mov repz push ja mov pusha andl or fistpl popa (bad) inc jo mov cld sbb ret in es push push das push jno mov hlt adc mov pop andb xchg or jb add inc test dec jo mov hlt adc mov popa (bad) mov dec push lods (bad) repnz add inc test jo mov negl cmp pushf mov xchg test adc sar js in and fild sub idivb js add jns repz mov (bad) xchg rcll pop lcall dec mov push dec xchg fbld bound or fcoml dec mov add jnp cld cmp add cli cmp idivl ja repnz insl lods out addr16 daa push scas hlt aaa jp decb lds dec (bad) into push dec (bad) lret js out sub fistp lcall push hlt aas test push push fbld data16 stc cmp jl or add mov or leave push inc xchg or fsubs push ljmp xorb or mov fisub push xchg rclb pop mov call aas add dec (bad) iret sbb frstor popa movsb in imul (bad) adc push inc jnp cld cmp jecxz pop cwtl fistpl arpl loope imul loope fs inc test add les dec cwtl fcompl lahf loopne cmpsw jmp and jmp jae divb js cli cmp std inc (bad) ret add (bad) int push xchg aam pop sahf in imul sub mov aaa jns incb ret test push dec mov adc ficompl pop lcall push icebp xor cmc ss out cmp add add push dec (bad) rclb pop movsl jmp inc xchg rcpps jmp xor cld inc test and fbld data16 jmp jo clc cmp rclb cwtl (bad) push mov push pop mov cld inc mov adc loope outsl mov inc mov adc fstps pop sahf loopne pusha stos sti inc test or fcomps add dec xchg (bad) sbb mov cmc cmp fisubl lods hlt aaa add dec nop xlat pop gs repnz inc xchg or int dec mov or pop cltd aam pop sahf loop mov push xchg xlat pop push fcoms dec test pop inc jle repnz pop lcall cmp cld cmpl or pop mov stc cmp ret push dec mov push push add add (bad) fsubl lods lock xchg xlat sbb jnp add nop (bad) push gs hlt cmp or fisub addr16 aas mov adc call ds pop mov hlt cmp or jb cli inc mov push push fwait jecxz jb sti inc mov adc loopne imul push xchg aam push xchg fistpl pop mov test ficomp pop mov out jo sti inc test or mov add lret or in jae add (bad) (bad) sbb test push pop lahf in outsb mov inc mov sbb out xor cwtl ficomp pop sahf loopne fs loopne bound cld aas add inc xchg add in addr16 and loop pop fcoms push nop enter mov hlt xor cmpsl fldl add pop xchg xlat push pop cwtl fcoms dec xchg add jge sti cmp in daa movsb in popa pushf fstps pop mov int cmp pop pop pushl outsb movsl fist push mov rcrb pop cltd aad push mov add jo in daa pop fcoms inc jg lock pop xchg lret add jp icebp sub mov das imul cmp iret adc out insb mov pop dec lods in sub std inc xchg sbb out ja or out jle adc stc cmp out jo sti dec mov or pop xchg int cmp add lds inc jg add leave pop inc (bad) lds pop pushf fisub outsl mov cmp rcrb fs jmp push mov hlt aas test add jge sti inc xchg or rcll push xchg fsubl test or jmp jno add into sbb test sbb jle or xchg fisubl imul cwtl ficomp arpl dec xchg fcoms dec mov pop pop pushf loope jo incb iret sbb jae out sub out jo jmp outsb mov cmp add push fwait loopne pop mov add aam push cltd jecxz jno out cmp (bad) movsl out add lret mov cld aas jg adc frstor outsl mov push pop mov adc sub repz (bad) ret xchg (bad) push pop stos repz or fsubs insl mov cmp or nop xlat sbb jge pop inc cmpb push lcall jge rcpps repnz mov push arpl push dec (bad) fstps pusha lahf fsubl outsl mov xor mov mulps out das outsb lods call cmp push dec nop frstor stos cmc inc (bad) ret xchg rclb push (bad) shll test and fcompl push xchg frstor push adc in outsl mov inc mov or and jnp or (bad) sbb jno,pn or adc loopne imul push xchg (bad) sbb ljmp popf add and loop outsl mov cmp sub inc mov or in push (bad) or push idivl jge or xchg xlat push push lock or fidivr xchg or fstps pop movsb hlt cmp cvtps2pd (bad) lods clc inc (bad) xlat and add loop ja add sbb in outsl mov es add jns,pn or frstor mov dec xchg loopne jns or lock rcrb arpl sbb sti inc xchg (bad) jb add lahf out jge adc aad bound std cmp sti inc (bad) iret or xchg fidivl jl cld cmp (bad) or gs jmp and movsb loopne add popa cmpsb jecxz popa lahf fmuls sub mov (bad) divb jb repz gs xlat adc loope push cwtl fistpl popf (bad) or std cmp outsl mov sub pop cwtl iret adc ret (bad) cmp out pop xchg into push inc je jmp adc mov out sub out sub loope pop cltd xlat adc inc cmpb sub fistpl push repz lock add add rorl mov add std cmp outsl lods out pop xchg (bad) cld xor dec xchg sti xor test xlat pop pop mov in sub inc xchg adc fstpl push mov add and (bad) adc ret je loop pop popf fistpl pop pushf loopne fs xor mov inc test or fisubr insl mov inc mov sbb and test dec imul scas in sub shl and xchg mov hlt push aaa pop jns mov pusha (bad) mov dec push stos int3 in or mov cmc push ss js mov pop andb push stos int3 in push das push jb mov notb cmp fwait mov popa andl int wrmsr push jb add add cmp sahf mov test dec imul push jae mov clc sbb pop jl mov arpl dec insb lea push js mov pusha (bad) mov dec insb mov push jne mov pusha andl (bad) repz add out sub mov push jbe mov stc sbb pop jge mov arpl dec insb lea push jne mov test stos int wrmsr push jne mov pop andb push jae mov negl cmp popf mov bound sub outsb (bad) mov repnz (bad) sbb ret in and int adc push jae mov clc sbb add cmp popf mov arpl sub outsb nop mov repz push ja mov popa (bad) mov sti sbb pop andb push lods int or dec insl mov pop jl mov arpl sub scas iret lock push jne mov clc sbb pop jl mov xchg push jae mov (bad) sbb ret and lret sub bound inc popa (bad) mov dec push lods into out adc push js mov add test jmp sub (bad) hlt adc mov pusha andl dec mov pop sub mov push ja mov pop jg shl and lret sub (bad) repnz add cmp loop sub mov jno mov negb cmp pushf mov bound sub mov jb mov notb cmp sahf mov arpl dec imul jb mov cmc push aaa pop jns mov popa (bad) mov dec push stos int3 in adc push je mov negl add pop andb xchg dec insl mov push jne mov pop jle mov mov dec jo mov cmc add cmp jle shl and test in or dec outsl nop mov repnz (bad) sbb push sub mov push jne mov clc sbb pop jl shl and xchg das push jne xchg mov pop jg ret daa dec jno mov cmc pop cmp fwait mov bound sub lea push je mov clc sbb pop jge shl es push adc push jne mov bound sub outsl xchg mov clc sbb jecxz es imul jp mov data16 push jne mov inc xchg dec outsl xchg mov stc sbb pop jle shl and mov dec jo mov negb cmp mov xchg xor mov clc sbb pop jge shl and xchg dec outsb (bad) mov hlt adc ret es imul mov cli sbb (bad) jmp cwtl mov add inc data16 push js mov test dec outsl xchg mov sub in and lods jmp and fstpl pop stos in pop mov out gs jmp sbb dec test rcpps leave add cmp hlt cmp ret pop dec xchg stc cmp sahf (bad) cmovl les inc test or iret push dec mov add or les inc jle stc cmp clc cmp divl add dec (bad) iret or mov push push xchg aam dec mov add mov push mov add jp idivb jl push dec nop aam pop cwtl fcoms dec mov adc xlat adc int inc jbe clc xor pop dec xchg fcomps mov push dec mov and add (bad) lret adc fcoms dec mov std xor dec mov divl addr16 ficoml push xchg fcomps push xchg int3 push inc test pop dec mov adc fcoms pop ficompl popa movsb call ss add enter aad pop movsb loope push pop cmovl mov sub jecxz movsb adc out pop cwtl aam pop lcall dec nop int3 or leave or (bad) or push mov adc fsubl imul add les cmpsl in sub ljmp mov xor cld inc (bad) ret push dec mov or nop shlb gs push push pushf frstor arpl lock repz jge add (bad) or iret adc aam push fstpl pop mov in addr16 add push dec test aaa add push cwtl fisub lods out das jae std inc add mov adc pushf fisubr imul sbb in sub (bad) xlat sbb sub mov push push xchg ficompl arpl pop dec nop rcll pop sahf loope je add int3 adc loope imul pop sahf loope outsb mov cmp popf loope push enter xlat pop fs xor or xchg (bad) push clc jp adc out outsb scas testb or adc rclb push xchg fadds movsl call sub icebp xor in sub arpl out pusha pushf aad dec mov (bad) cmp lock mov fcomps jae divl jne lock add rcll pop lcall je cli cmp xchg add lret adc sahf loope push idivb jge add add mov pop pop mov std inc xchg adc sbb loope push add fldenv bound or fistl and out xor add xlat sbb call inc xchg push push xchg sbb out xor mov jne sti inc xchg adc and in xor cli cmp add int push xchg aad push nop into or mov push dec xchg ficompl pop popf jecxz jne cli cmp mov sti aaa jb icebp aaa jp adc out jb add xlat add jo cmp and idivl (bad) lret adc jmp pop mov clc aaa ja divl jb ljmp mov ss clc aaa ja mov add jle repz mov outsb stos in push in data16 fstl push xchg xlat sbb adc lds aas test add add add icebp xor out sub mov call sbb outsb scas repnz xor hlt cmp ljmp outsl test mov int xchg in popa xchg aam dec mov (bad) cmp cmc xor out pop xchg lret add jge in and rcll dec (bad) mov daa pusha xchg lret or mov jmp outsb lods out sub mov jg,pt (bad) imul cmp mov aam dec mov add js jmp pop pushf (bad) adc xchg imulb pop xchg iret add (bad) iret sbb push push xchg (bad) fs push push xchg loopne push fcoml dec mov fistpl push xchg rclb push nop into or in sub std inc add pop mov sti inc jle sbb je cli inc mov pop fs inc mov sbb idivb add mov or xchg loopne pop movsb in xor cli inc test (bad) cmp scas in pop popf in jno jmp data16 in xor jno push dec mov adc pushf (bad) outsb mov xor out ss cld cmp incb ret add jl add (bad) or lret xorps divb jle push push xchg fisubr outsb mov inc mov or fcompl xchg arpl add nop fcomps pop movsb in xor leave adc fisubl mov stc inc mov adc out insb mov inc add inc jge or fsubs insb mov add pop test sub stos in pop lahf out push mov xor xchg add cltd fistpl push fwait out outsl scas in xor add rcll pop cwtl add xor cld inc mov sbb xor into or out ss cld aas test adc add add jmp inc mov pop pop mov std dec xchg (bad) pop pop mov add pusha cmpsb out imul push xchg iret or mov push popa mov rolb xchg fcomps pop cmpsl lock xchg xlat push mov or lahf add jae,pn add lds push lahf loopne pop movsl out xor hlt cmp xchg fcompl insl lods jmp fisub popa mov add xlat sbb fldenv mov ficomp pushf ficoml push xchg xlat sbb je cld cmp int push xchg frstor stos hlt inc mov adc mov incl lds pop lahf fisub data16 cmp or int pop test add or aam push (bad) int dec (bad) lret mov sbb lahf fisubr jae sti cmp add lock fisub pusha mov xor adc loop ja incb ficompl pop movsb lock jbe add mov adc in jb,pn std inc or pop sahf fstpl sub cli inc (bad) xlat sbb stos hlt inc mov and mov cmp jecxz ja add pop cmpsb repz adc in cmp cld dec xchg fisubr jno pop push cltd in jns or mov sbb inc xchg fldenv mov adc adc cmp (bad) lret (bad) mov sbb and in addr16 adc cltd fcomps pusha cmpsl jmp and jmp push cwtl rcll dec mov (bad) ss stos jecxz push mov or mov out movsb loope arpl repnz add add mov ret push ljmp mov xor pop xchg aam dec cmpl and iret or leave or mov inc add ss lods in cmpsl fistp push mov add sbb (bad) or sar xchg (bad) pusha cmpsb repz or aad data16 jmp add loopne jno sti inc mov adc jmp push inc mov sbb aam dec fwait out bound stc inc mov adc in pop popf jmp jae out das jp add mov or rcrb pop lahf jmp jle or jecxz outsl mov adc out xor add push pop movsb out xor xchg loopne gs cmp frstor push ret (bad) cmp jmp (bad) enter frstor scas add icebp sub pop test idivl jle add xchg rcll pusha stos in sub mov adc loop jae idivb lcall nop int dec xchg add je in pop cwtl fsubrs pop xchg iret push aas js in sub out imul jmp aas jns lock loopne pusha mov xchg rorb dec mov (bad) outsl scas out sub mov cmp repz cmpsb fcoml xor stos in push (bad) enter mov cmp cmpsl loopne pop mov aam pop mov jmp and test fcoms xor ficomp push (bad) int3 or scas out pusha lahf fbld cmpsl out imul jge pop inc or push fwait jmp jle adc cltd (bad) adc movl add jle divb insl rorb push lcall push (bad) rclb push xchg aam push in outsl test sub and jmp dec xchg lock pop mov ficomp popa movsb in push test and test movsw in mov mov xor add inc test add les test push aas jne in add icebp xor repnz add lret xchg iret adc in jo out sub sbb jmp jno adc lret adc lret add mov sti inc mov push inc jle pop dec xchg fsubs lods hlt cmp aam inc jnp call std cmp cli xor ljmp ret xorps in xor mov push push popf fisub popa stos cld dec mov and lahf call add add pop movsb loop jo stc cmp inc (bad) mov ficompl gs xlat adc movsl loop outsl mov cmp jmp jnp std cmp mov or pop pushf ficompl pop xchg rcrl stos out pusha mov icebp cmp mov cli inc test push dec xchg aad pop cmpsb in das jno add pop add push cltd ficompl lods out das ja push dec mov and icebp cmp pop dec xchg fcomps pop cltd rcrl popa mov add rcrl scas lock mov xor sti aaa jne decl (bad) or cmp cld inc mov adc fs daa outsb mov cmp add pop dec xchg fstps pop cmpsl out xor incb enter fstpl jle adc fiaddl add add mov cmp dec (bad) rcrb bound cld aas xchg sbb ljmp aad pop test das jb or rcrb jg adc rcrb pop lahf fcompl push cltd loope imul inc (bad) aad pop pushf jmp inc mov push cmpsb jmp inc mov add jbe decl lret or lcall jne icebp xor dec xchg fldt insb stos ljmp mov sbb fisubr jno stc cmp test add mov clc xor xchg adc sahf frstor imul push arpl add sbb call inc xchg pop dec mov sbb out je hlt cmp fsubs jle std jl,pt clc ss lock mov cmp add dec xchg fstpl pop mov cmc inc mov or and idivl jg add cwtl ficompl pop stos lock movl sub push xchg rclb mov mov and int inc ja out push enter lods jecxz dec (bad) mov int3 add outsb mov cmp jge push add es hlt cmp cld cmp hlt xor xchg fsubl jne or add jmp inc (bad) aad outsl mov das jnp or in jp push push popf jmp pop mov push popa stos stc inc (bad) xlat and idivb mov sbb cwtl jecxz je push push fwait out jge cmc xor sti outsl scas ljmp mov add iret pop pop xchg fisubl insb scas repnz sbb jecxz popa popf fsts pop pushf aad pop test cmp jmp pop pop cld xor jecxz pop movsb jecxz push mov or xor stos in sub into or jg pop inc jge add jg cli cmp fistp dec test fcoms dec cmpb sbb fcoms xchg rorl dec xchg xlat push push xchg aad pop mov repz inc mov add movsb in jb cmc xor outsb stos jecxz pop pushf aad dec mov std cmp jmp xor in and sbb sti cmp lock mov cmp repnz in arpl es jmp aaa jns std inc xchg push dec (bad) les nop rclb push lcall pop sahf fsubl fs xor incb leave or xlat sbb ja stc ds push push nop rcll mov in sub add add hlt cmp add add lret adc pop pop mov mov cmp add xchg fsubl arpl stc cmp enter rcrl popa stos jmp je cli cmp xchg aad pop movsl in xor add aam pop movsl ljmp int push cltd fcomps arpl push dec mov adc add adc fbld imul sbb cmpsl icebp xor add xlat sbb js divl jg or frstor pusha mov loop push lock data16 in arpl rorl cmp repnz les (bad) roll (bad) int3 or nop into push push xchg (bad) adc iret adc fwait loopne cmpsb out outsb mov cmp leave cmovg add add xlat sbb add dec xchg fcomps gs icebp aaa jp pop dec xchg frstor lods hlt cmp aad fs xor sti inc test pop pop movsb out je (bad) pop mov cli inc test adc frstor mov aaa jle add aam arpl add pop mov add adc fistpl bound out xor roll ret add mov add mov or xchg aad popa movsl in push loopne pop mov in jno incl aad fs icebp cmp or frstor imul pop test aaa jl or in insb lods out xor idivb nop int3 add ja lock aaa jne repz jbe cmc ss repz jl incl mov xor insl stos out bound ficomp add and out arpl into or pop pop pushf ficoml push xchg into push dec mov or rorb dec mov cmovle iret adc ljmp mov lret imul jmp es fwait aad dec (bad) rolb ja jmp arpl icebp cmp out es ficomp cwtl rorl dec mov cld xor lock scas add cmp icebp sub rorl jge out sub push fistp dec test sbb add outsb movsl call sbb ficompl pop sahf ficoml pop cwtl aam push xchg int inc cmpb imul loopne popa mov in pop sahf fstpl push xchg (bad) sbb iret or mov pop jne,pt in push mov std xor test rolb or mov sqrtps xor or cwtl aad push popf fbld pop lcall cmp jmp pop xchg aam dec test cli xor bound sub jp incb enter int dec (bad) into adc loopne outsb mov xor jb mov notl inc bound sub mov push je mov clc sbb pop jge shl push daa dec imul mov notb cmp fwait mov xchg dec outsb nop mov repz push js mov pop jg shl and lret cs jo mov cmc push cmp mov test (bad) sub lea push jbe mov pop jg ret es imul xor jbe mov pop andb push adc push jbe mov mov push jb mov stc sbb or cmc push ss jns mov mov push xor xchg mov pusha andl imul cmp jg shl and lret in or mov clc sbb pop jge mov xchg lods into out adc push je mov stc sbb pop jge ret in sub mov push jb mov negl cmp mov test dec jo mov cmc push aaa pop jns mov xchg dec outsb (bad) mov repz pop jl mov test dec insl mov push je mov data16 daa imul (bad) mov cli sbb add inc xchg dec outsl nop mov repz cmp pushf mov arpl sub mov repz pop jnp mov bound sub (bad) call xchg mov negl cmp pushf mov test dec insb lea push jbe mov pop jle shl and mov or dec outsl nop mov repz aaa pop jp mov inc imul mov bound sub outsl xchg mov cmc push cmp mov dec imul mov bound das push jo mov notb cmp popf mov arpl sub mov pop jge (bad) out sub mov notb cmp add pop jle (bad) in es push adc push jbe mov popa andl mov jbe mov pop andb mov push ja mov pusha andl into out wrmsr push jb mov notb cmp pushf mov mov rdtsc push je mov negl cmp popf mov xchg dec jo mov repz push js mov inc xchg push jb mov notb cmp popf mov arpl dec jo mov hlt adc mov pop (bad) mov dec outsl nop mov repnz stc sbb add jmp mov push js mov add add (bad) cmpsb (bad) call mov push jbe mov pop jg ret and lret sub (bad) repz push scas add mov dec insl nop mov repnz lods lock jge shl and enter jecxz pop xchg lock loopne pop fistpl push xchg iret or xchg or mov repz ljmp xchg mov cmc pop cmp popf mov arpl dec insb mov add mov inc mov or dec outsl xchg mov hlt adc mov pop andl into out adc push jae mov cli sbb pop jg shl and xchg dec jno mov cmc push aaa pop jp mov popa (bad) mov dec imul add out adc push ja mov pop andb push wrmsr push jae mov negl cmp popf mov test dec insl mov lods cmc xor loop push mov add jbe jmp push push cwtl aam dec mov or pop popf fbld pop xchg lret add lods out arpl mov leave (bad) aaa jno loope push mov (bad) cmp cli cmp out jno hlt bound enter scas call and das insb add loope mov mov fistp push xchg (bad) sbb fsts pop xchg iret cmovl ret jg push push pushf call pop mov dec pushf xlat push push xchg xlat cmovp rclb push xchg aam push (bad) into cmovge rcll dec popl add lret pop inc mov adc aam push xchg fcomps popf jecxz insb lods in sub jmp and enter mov lock out xor les dec xchg rorl inc xchg push inc (bad) into (bad) xchg lret or icebp xor jmp jns cli ds sbb repnz (bad) or in ss or add jg out and cmp jmp popa cwtl fstps pop xchg aam dec xchg pop dec (bad) aad pop cltd fstps popf fisub cmpsb in xor idivl xchg fbld push sar cmp push in pusha xchg rorl dec test add jl in sub in xor in cmpsw out imul repz xor idivl or push nop rclb push xchg aad pop lahf frstor mov xor in xor add add idivl (bad) adc lcall jbe and out das jno add or xlat sbb fisub data16 jmp jo repz test add pop lcall insb scas out sub jge push dec (bad) rclb pop mov idivb or pop popf frstor arpl hlt cmp add cwtl loope push hlt cmp push inc mov push push lcall jl add bound or xchg fbld jp add pop mov hlt ss std inc xchg rcll pop mov std inc mov adc jae incb enter fisub push (bad) or loope imul pusha mov bnd (bad) aas add push push xchg rorb push xchg xlat and out data16 call sub in sub ficomp push (bad) lret pop inc jge hlt das imul ljmp mov xor roll mov sqrtps out xchg adc (bad) sbb aad pop lahf loope push hlt aaa js add pop pop mov cld aas xchg adc fisub push ret cltd loopne imul pop mov clc inc test or xchg fldenv gs xor add into adc fisub lods repz or fldenv mov inc mov adc fcompl pop mov in add jnp mov out sub das jae add jg or ljmp les dec fiaddl (bad) pop push (bad) adc loopne push les push cwtl jecxz jo cld inc test adc jmp outsb scas add xor cmp mov or mov adc push pop xchg (bad) sbb loopne pop xchg (bad) push push xchg into or mov add test add cmp mov xor stos jecxz arpl in movsl in arpl jecxz push test sub xchg fcomps lcall movsw in pop xchg int movsb add and xchg leave add cmpb and int dec mov add dec xchg push pop lods in pop cwtl xlat sbb cmpsb ljmp fcomps imul mov sub loop pop xchg frstor jbe cld ds adc jecxz imul or out jl or mov push bound add and icebp jbe,pn or lds cmp loop outsl add add add add insl aad push xchg fldenv jae clc cmp rclb push xchg aad push lcall popa stos hlt xor jmp imul push pop cwtl fldenv push icebp xor or cmpsl lock dec xchg aad pop cmpsb jmp jb add int3 adc cmpsb in xor sti inc test push push frstor outsb mov inc mov sbb add cmp lahf fcoms pop movsl out scas stc inc mov adc lahf add jae,pn cli cmp ljmp sbb cmpsl out lods add enter in pop stos repz mov ds or mov stc cmp fbld outsb scas out ss incl aam pusha mov add xchg (bad) pop pop mov std inc test or cwtl fstps jb add enter add push push xchg xlat sbb idivl jle or pop outsb mov xor lret push dec mov push mov xor add movb xchg (bad) sbb repnz add pop mov sti cmp popf fcompl push out cs scas cld inc add dec lcall imul cmp (bad) adc rcrb bound ss or aad pop add fistp push xchg xlat and lock mov pop add in js sti inc mov adc cltd in insl scas repnz xchg or jecxz imul mov cmp and jmp cmp mov hlt xor in cmp fbld lods repnz jns std dec xchg rcll mov cld jg,pt push push cwtl ficompl fs icebp xor add push pop popf frstor outsl mov ss adc outsb stos in dec xchg loope arpl sti cmp in cmp fildll jne or xor leave or fisubr or push pushf loop jbe or out cmp testl cmc inc mov and xchg fisubr jp or xor adc hlt cmp in sub mov sub xlat add jo in ja,pn (bad) cmp ret or jbe add dec xchg adc loopne pop cltd rorb addr16 cmp mov sub jecxz or and int inc pop mov xor mov fistp pop xchg aam inc cmpl cmovns ret std ss jecxz push xchg lret xchg (bad) adc ret jne in add add pop sahf fsts dec test lock pusha xchg fmuls dec mov add jns out sub push xchg iret push inc xchg add sub mov out and push xchg rorb dec mov add jl sti aaa jns sti cmp jmp cmpsb ljmp xchg into or lds cmp out push aad push fisub pop xchg int inc xchg or xchg fstps pusha stos in xor add (bad) rcll push popl (bad) adc (bad) ja call or ret outsb lods add sub das jno repz (bad) xchg aad push xchg fisub fs repnz loope jnp shl and imull push jno mov cmc push cmp fwait mov imul dec mov push dec xchg in sub cli ds clc xor mov sub test xor add aas jnp cld cmp push dec test mov pop push mov daa movsl jmp cmp (bad) jp,pt stc cmp clc cmp sub movsb jecxz bound loop push mov cmp divb pop cwtl aad dec mov or into orps repz int3 adc popf fistpl push xchg rcll pop mov orps sub int push fwait in jae std aaa add in and cwtl rorb dec cmpl pop cwtl push push xchg add cmpsl out jo lock clc cmp add pop mov repnz add (bad) lret or mov repz jmp jo in pop cwtl (bad) mov fbld movsb loop pop cltd aam push xchg aam push xchg fstps pop lcall add adc fcomps movsb jecxz pop lahf loopne push mov add lret or pop lahf jecxz arpl aas add push fwait loop jb xor push inc xchg or iret cvtdq2ps cli cmp aas test or xchg fcomps mov fbld scas icebp cmp or fsubl gs out xor add pusha scas bnd cmc cmp incb iret pop pop mov cli push xchg fcoms pop add add leave or ret pushf jecxz push add sbb cmp loop jae stc cmp xchg fisubl data16 out xor pop popa movsl ljmp fcomps jg or jmp jb add (bad) and in xor add lret xchg (bad) push push xchg rolb add add push xchg aad pop popf fistpl pushf loope data16 daa cmpsl out imul add add divl push lock idivl mov adc fbld lods out xor leave or xchg rcll push xchg fstps pop mov sbb idivb jle add mov sbb je,pn add rcll pop mov add pop movsl call inc test adc jecxz outsb mov cmp add into add je add adc call push popf fild sub mov adc pop bound lock add mov cmc xor add dec xchg fistpl pop mov stc aaa je repz or pushf sti addr16 cmp lods hlt cmp add dec xchg fsubl fs repnz xchg fsubs addr16 sub inc xchg or iret adc fistpl popa mov out outsl mov cs hlt xor mov xor hlt cmp int dec mov add cmp cmp stc cmp clc cmp (bad) cmp (bad) cmp jle add ret add add inc (bad) movb mov cmovg test fistpl (bad) enter push dec xchg ficompl pop xchg (bad) pop push xchg rclb push (bad) lret test incl jbe,pt icebp das outsl scas out outsb lods repz jbe clc xor mov sub fcompl pop cltd fstps pop frstor pop popf fcompl bound or fstps bound rorl xchg fisubl mov fistp xchg rolb sbb enter mov das push fadds adc rcll push cwtl ficompl stos out xor idivb jnp push push xchg loope je dec (bad) cli sbb (bad) in daa dec push lods int adc push jae mov negl cmp popf mov test dec outsb (bad) mov clc sbb add inc xchg dec outsb (bad) mov repnz cli sbb add jmp sub (bad) negl cmp popf mov arpl dec insb lea push jne aam imul mov negl cmp mov inc xchg dec insl mov push ja mov pusha andl lret in or xchg mov pusha andl scas (bad) icebp adc push jne mov stc sbb pop jge mov arpl dec insb lea push js mov pusha andl lret in or mov notb cmp fwait mov inc xchg dec outsb (bad) mov negl cmp popf mov bound dec imul mov hlt adc mov pusha andb push lods into lock push jae mov negl cmp popf mov bound sub mov push jno mov cmc adc mov arpl sub mov in pusha popf repz cmp pushf mov arpl dec push lods int (bad) cmp pushf mov bound sub outsl add nop mov repz push jbe mov pop jge mov arpl dec insl mov pop jns mov pusha andl lret in push das push jno mov cmc push aaa pop jns mov pusha andl iret lock push je mov clc sbb pop jnp mov dec imul jae mov stc sbb pop jle shl and scas (bad) icebp adc push je mov clc sbb pop jl mov bound dec push lods int3 in push das push jno mov hlt adc mov test dec imul jb mov cmc pop cmp lcall andl jbe mov bound or dec outsl nop mov repz add cwtl mov inc bound sub (bad) mov repnz fdivr push inc popa andl outsl nop mov repz mov bound mov adc into or ret insb lods repz pop jle (bad) jmp (bad) mov repnz push jp mov arpl dec insb mov dec outsl xchg mov cmc push aaa pop jns mov mov or dec outsb (bad) mov hlt adc mov pop andl int3 in push xchg fcoms dec (bad) lret out wrmsr push jae insl mov add jl hlt pop jmp aad pop cmp fwait mov bound sub mov je mov clc pop inc bound add repz add push jbe mov add movsl (bad) out sub mov jb mov notb cmp sahf shl and cmpsl (bad) call mov push je mov clc sbb pop jl mov bound sub mov jne mov stc sbb pop jge mov test dec imul bound dec insb lea push jp mov bound sub mov jb mov notb cmp popf mov test dec insb lea push ja mov pop jle shl and test dec imul jb mov notb cmp lcall xchg dec insb lea add add pop aaa pop jns mov pop andb dec insb lea push je mov clc sbb pop jl mov xchg dec outsl nop mov repz push ja mov pop jg shl and xchg dec insl mov pop jnp mov arpl dec imul push je mov clc sbb pop jl mov test dec insl lea push jns mov pusha andl lret in or test dec outsb (bad) mov repnz cli and test dec push lods int push das push jno mov cmc push aaa pop jns mov pop jg shl and data16 dec outsb xchg mov notl cmp fwait mov add add aas pusha addl sub scas (bad) icebp adc push xchg ret in or dec insb lea push jne mov cli sbb pusha (bad) mov inc push lods int rdmsr push jae mov negl cmp ret and xchg dec jo mov hlt adc mov arpl dec insl (bad) scas (bad) icebp adc push jne mov cli sbb jle shl es push or dec jo mov hlt adc mov arpl dec insb lea push jbe mov pusha andl into out adc push jbe loop and leave in or mov notb cmp pop jnp mov test dec insl mov push js mov xchg dec jo add xchg mov notb cmp fwait mov inc push push das push jb mov testb ds jg ret in sub lea pop jns mov bound sub outsb nop mov repz push js mov pusha andl int wrmsr push jbe mov pop jg shl and xchg dec jno mov negb cmp pushf mov bound sub mov push ja mov bound sub mov push jne mov pop jg shl and lret in or mov pop jle shl and xchg dec outsb (bad) mov repz push js mov pop andb push adc push jne mov add add cli sbb ljmp add cli sbb add inc xchg xor xchg mov notb cmp jecxz and lret sub jo mov cmc push aaa pop jns mov pop andb xchg dec outsb (bad) mov cmc push aaa pop jns mov pusha andb push comiss xchg mov negl cmp fwait mov popa (bad) mov dec insb lea push jne mov stc sbb pop jge mov arpl dec push lods int push das push jb mov notb cmp mov inc xchg dec outsb (bad) mov repnz stc sbb pop jge shl and cmpsl enter dec insb lea pop jns mov add add std push inc pusha andl int3 in push das push jno add pop jle shl and cmpsb movl jo mov negl cmp imul push ja mov popa (bad) mov dec imul mov cmc push aaa pop jns mov mov or mov cmc push aaa pop jns mov pusha andl int wrmsr push jb mov negb cmp mov inc xchg push jno mov cmc push aaa pop jns mov pusha andl into out adc push jae mov cld sbb ret es push lods int rdtsc push jae mov notb cmp fwait mov bound sub mov push ja mov add (bad) sbb ret daa dec imul mov notb cmp jg ret and lret in or add popa (bad) mov dec imul mov clc sbb pop jge mov test dec insl mov pop jl fwait mov test dec insl mov push jbe mov pop andb imul mov cli sbb add inc test dec insb lea push jae mov notb cmp lcall andl into out wrmsr push jae mov negl cmp popf mov bound dec push lods int push das push jno mov cmc push aaa pop jp mov add add add inc mov dec outsb (bad) mov icebp adc push jbe mov pop jge mov inc push or mov hlt sbb pop add and mov wrmsr push jb mov notb cmp fwait mov popa (bad) mov dec push or mov pop andb insb mov push jne mov cli sbb in daa dec imul mov arpl sub mov push jo mov cmc push aaa push js mov pop jg shl and leave ljmp aam push aaa pop js mov pusha andl lret sub outsb (bad) mov repz push js mov pop jg roll add add push daa dec imul mov negb cmp fwait mov pusha (bad) mov dec push add xor jne mov stc sbb andl mov cmc push aaa push jns mov pop andb xchg dec outsb (bad) mov hlt adc push ja mov bound dec insl lea push jbe mov stc sbb pop jl mov xchg dec insl mov pop jnp mov arpl dec push lods int wrmsr push jb mov cmc push aaa pop jl ret in daa dec push imul outsb (bad) mov stc sbb jg ret daa dec imul push js mov bound dec outsb (bad) mov repnz mov add add and mov push jb mov negl cmp popf mov xchg dec outsl nop mov repz mov dec imul mov inc push adc push je mov stc sbb pop jge shl and xchg dec jo mov cmc pop cmp mov inc imul mov clc sbb pop jge shl and test ljmp (bad) hlt adc mov imul mov pop andl lock push jne mov pop jg shl and (bad) icebp adc jbe mov pop jg ret es push push das push jb mov jecxz daa inc imul add xchg mov std push aas pusha andb xchg dec outsb (bad) mov repnz push jne mov stc sbb pop jle shl and test xor lcall (bad) mov add xchg mov cmc push aaa pop jns mov pusha andl lret in wrmsr push jb mov stc sbb pop jge mov bound sub mov push jo mov repz push ja mov pop jle shl and mov push jb mov notb cmp fwait mov bound sub mov push jb mov notb cmp pushf shl and data16 dec insl mov push jne mov stc sbb pop jge mov xchg dec insl mov push ja mov pop andb xchg dec outsb (bad) mov (bad) call (bad) mov repz push ja mov pop test das push jno mov cmc push aaa pop jns mov inc test dec push lods int push das push jno mov hlt adc mov arpl dec imul jb mov negl cmp popf mov bound sub mov jbe mov pop jge mov xchg dec insb lea push jae mov notb cmp fwait mov bound dec insl mov push jbe mov cli sbb jge mov xchg dec insl mov push jne mov pop andb mov or dec outsl nop mov repnz stc sbb pop jl mov test dec imul jbe fwait mov popa andl add mov imul mov negl cmp sahf mov imul je mov negl cmp pushf mov test dec imul jne mov stc sbb pop jge ret in daa dec imul mov negb cmp pushf mov test dec insb lea push jne mov clc sbb pop jg shl and xchg dec outsb (bad) scas (bad) repnz cli sbb add add inc xchg dec insb xchg mov hlt adc mov pop andb xchg dec outsb (bad) mov repnz jbe mov pop jg shl sub mov push jbe mov pop jge shl and mov je mov clc sbb pop jge shl and mov push ja mov das outsb nop mov repnz jne mov pop jg shl and cmpsb (bad) out sub adc dec cmpb ja add negl cmp popf mov test adc add popf mov bound sub nop mov repz push ja mov pop jle shl and cmpsl (bad) call mov add xor inc jp hlt ss in and into or cmpb add sbb (bad) (bad) cld xor stos loop push (bad) (bad) pushl dec xchg add dec mov sbb das outsb stos out sub fdivrs movd pop push xchg (bad) pop pop mov hlt xor ja add xchg or push idivl jl add fcoml pusha cmpsb jmp jl or push in jo,pn hlt aaa jl add adc jb cmc aaa jnp add (bad) fsubs lods cmc inc xchg sbb call xor cmp test xor clc cmp add aam pop test cmp xchg fcompl pop cwtl int inc add je cld cmp in cs xchg rorb cmp xchg or fstps push xchg add add sbb ljmp fcomps mov sbb repnz or rclb pop xchg (bad) sbb in jo repz cmpsl jecxz push (bad) aad pop movsb loop pop xchg aam pusha cmpsl lock jbe decb daa outsl mov inc mov adc jmp push pushf in jb incl rclb pop lcall dec add adc arpl repnz (bad) push dec test add jo ljmp xchg into or rcll dec (bad) aad inc xorb or mov xor mov jecxz push xchg rclb push xchg (bad) cmp call (bad) or mov pop push xchg int3 push inc xchg (bad) ss test movsb fcompl push xchg iret push push xchg fsts pop test xor jge lock mov xor add ljmp add add adc push je mov clc sbb pop jl mov push or shl and mov or mov cmc push aaa pop jns mov pusha andl (bad) repnz (bad) sbb pop andb mov or mov hlt adc mov pusha andl iret icebp adc push jne mov stc sbb pop jle shl es imul mov cli sbb add inc xchg push jb mov negl cmp pushf mov test xor xchg mov cli sbb add iret lock pop jp mov arpl sub mov repnz sti sbb add add in sub mov push jne mov (bad) pop inc popa (bad) mov dec insb lea push ja mov pop andb push push das push jno mov negl call mov pop andb mov push das push jb mov notb cmp fwait mov popa andl mov push ja mov pop andb push adc push jae mov clc sbb pop jge mov xchg push jno mov cmc push cmp pushf mov arpl dec insl nop mov add sbb pop jge shl and lret sub mov xchg dec jo mov hlt adc mov pusha andl iret icebp adc fdivrp and mov dec jo mov stc sbb add lods into out adc push jae mov clc sbb pop jl mov xchg push jae mov negl cmp mov xchg dec outsb (bad) mov repnz ja mov xor lahf shl sub lea push jbe mov pusha test dec insl mov push jne mov stc sbb pop jg shl and push adc push jne mov cli sbb add jmp sub rolb negl cmp pushf mov arpl dec outsl nop add pop jge mov test dec insb lea push js mov pop andb mov adc push jae mov negl cmp mov dec push lods int adc push jae mov clc sbb pop jl mov test push jae mov stc sbb jecxz and lret in or mov cmc sbb pop jnp mov arpl sub outsl nop mov stc sbb in daa dec imul mov negl cmp pushf mov inc insl (bad) mov cmc push aaa pop jp mov insl mov push jne mov stc sbb jle shl and mov or dec outsb nop mov add sbb pop jle shl and data16 je add pusha (bad) mov dec imul add add add int3 in wrmsr push jb mov notl cmp sahf mov arpl sub (bad) repnz std push aas pop andl lret in push das push jae mov stc sbb pop jge mov arpl dec outsl nop mov repz cli sbb pop jge shl and cmpsl enter dec insl mov push jbe mov pusha andl lret sub (bad) repz push jbe mov pop jle shl and xchg dec outsl xchg mov negl cmp fwait mov bound sub lea push pop mov jae mov fdivr sbb (bad) out xor xchg mov stc sbb popa addl sub mov add adc cld sbb pop jg ret and leave ljmp aam push aaa push js mov pop jle shl and cmpsb (bad) call lea push jb mov notb cmp fwait mov xchg dec insb lea push jne mov stc sbb pop jge mov test dec imul jbe mov pop jle shl and xchg dec imul jb mov notb cmp fwait mov bound sub scas (bad) repnz cli sbb loope and xchg dec insl mov push je add arpl dec insb lea push add fild add jmp inc arpl dec sahf fcoml push xchg jmp mov aam dec mov push inc cmpl loope pop test sub nop mov hlt adc mov bound sub scas (bad) icebp adc add inc test dec insl mov push ja mov pusha (bad) mov dec push lods int wrmsr push jae mov sti sbb ret es push push das push jb mov negl cmp popf mov test dec insl mov push jp mov test dec insl (bad) mov repz push js mov test dec insl mov push jbe mov inc push wrmsr push jb mov stc sbb add add add add movsb (bad) sub insl lods iret icebp adc push jne mov stc sbb pop jge mov mov push je mov clc sbb pop jl mov xchg dec insl mov push jbe mov pop andb insb lea push je mov clc sbb pop jl mov xchg dec jo mov cmc push aaa pop jp mov mov dec outsl xchg mov hlt adc mov arpl dec insl mov push ja mov pusha andl (bad) icebp adc push jbe mov pop jg ret and lret sub (bad) repz push jns mov popa xchg xor xchg mov pop jle add loope and xchg scas iret lock push js mov pusha andl int3 out adc (bad) sbb (bad) call mov lret cs jo mov cmc push aaa pop jp mov bound sub xchg mov cmc push aaa pop jns mov pusha andl in sub lea push je mov clc sbb pop jl mov mov or dec outsl (bad) mov repz push jbe mov pop jge mov arpl dec imul jbe mov pop jle shl and cmpsb (bad) call lea push jae mov negl cmp pushf mov popa (bad) mov dec insb lea aaa pop jns mov add add (bad) push aas pusha andl mov repz push ja mov pop jg shl and stos lret in or mov hlt adc mov pusha andl int3 in push das push jno mov notb cmp lcall test dec imul inc xchg add fisub jae add insb mov ds adc mov sbb repz sbb rorb (bad) mov out pop cltd aad dec mov cli xor je incb mov out daa pusha xchg rorb dec mov add mov sub xlat adc movb js cmc xor ficoml push xchg fistpl pushf fcompl pop xchg xlat push pop movsb loop fs (bad) push dec jle icebp add jne add ficomp pop mov push xchg ficompl bound mov sub out pop xchg rorl dec mov or pop popf fstpl push xchg fisub lahf xlat push inc xchg add or push pushf loop push ficoml push xchg (bad) adc ret (bad) mov add mov pop inc cmpl rorl inc jp in and inc jl out daa popa popf fcompl cltd rorl push mov std xor movsl loopne pusha mov loope push cwtl xlat adc movl dec xchg iret adc xchg hlt pop fbld scas repz icebp xor mov cmp cld inc xchg pop dec mov or into adc fcomps push xchg fcoms pop popf fstpl cmpsb in cs scas lock repnz mov cmp (bad) cmp add xchg push dec mov push dec (bad) roll adc add push pop mov out imul hlt add jg add movl push xchg rclb pop movsl in imul (bad) dec xchg aad pop popf fbld arpl icebp aaa js sti cmp jle push inc xchg pop dec mov or mov adc aam push xchg (bad) adc pop cltd fcompl sahf fistp bound icebp xor divb ja sti cmp xchg push inc test or jbe or lret adc (bad) pop push xchg ficompl pop lahf fistp mov push add cmc xor xor clc cmp add int dec mov or rclb push nop shrb jge add ret push inc xchg or xchg aad push cltd xlat pop pop lcall sub in das jae lock mov pop add iret rcpps (bad) sbb fcompl lahf loopne test insl scas repnz mov add mov pop dec mov adc xlat pop push lcall pusha lahf loop cmpsl in sub ljmp mov xor jns std cmp mov add int dec xchg xlat sbb ficomp pop popf fbld incb movb mov or mov adc fcomps pop mov in cmpsl jmp jo hlt ss add mov cmovle adc aad pop frstor arpl sub jmp jno hlt xor cmp (bad) ret add push xchg aad push cltd fistpl pop fstps lahf in gs sub repz xor js cld cmp sar add adc push mov add add add dec (bad) iret adc pop fstpl imul std cmp mov or int3 push dec nop rorl dec xchg rorb push xchg rclb push xchg ficompl pop popf fstpl popa mov in sub mov xor divl js sti cmp add or aam pop pushf fistp pop pushf fistp pusha mov jecxz popa lahf loop popa mov call add lret and das jno hlt xor jnp std inc add dec mov adc pop test inc xchg mov pop jg shl or dec insb lea pop jns mov popa andl int wrmsr push jae mov negl cmp popf mov arpl dec add mov add add sbb pop jl mov test dec insb lea push jbe mov pop jle shl and xchg push jb mov notb cmp pushf mov bound sub mov push jae mov negl cmp popf mov push push das push jno mov cmc pop push dec outsb (bad) mov repnz (bad) sbb pop jg ret and leave jmp sub xlat stc sbb pop jge mov test dec imul push jno mov notb aaa pop jns mov pusha andl mov hlt adc mov pop jle shl and lret sub (bad) repnz stc sbb pop jge ret in add scas iret lock push jne mov clc sbb pop jnp mov bound daa dec imul mov hlt adc mov bound daa dec imul mov repz pop jnp mov arpl dec insb mov pop jns mov pusha andb push or mov repnz stc sbb pop jl mov xchg mov arpl dec insb lea push jne mov stc sbb pop jge mov xchg aaa pop jp mov pusha andl lret sub (bad) repz push js mov pop jg shl and mov stos int3 in or xchg mov stc sbb pop jge mov xchg dec insl mov push je mov stc sbb pop jl mov mov sub scas iret lock push je mov clc sbb pop jl mov bound pop inc mov add lret in or mov pop jle mov test xchg int inc xchg add xchg sti cmp mov push and mov out pusha popf fcoms cmp aaa jno cld pop mov push je mov clc sbb pop jl mov bound sub nop mov hlt adc sahf mov xchg dec insl mov push jbe mov pop jle shl and cmpsl enter add jmp xchg mov hlt adc popf mov arpl dec push lods int wrmsr push jae mov negb cmp popf mov bound sub outsb (bad) mov repnz cli sbb add ljmp (bad) repz push ja mov popa (bad) mov jg and imul mov notb cmp fwait mov pusha andl lret xor mov jae mov clc sbb pop jl shl and mov dec jo mov cmc push cmp fwait mov bound sub mov clc sbb pop jnp mov bound daa dec imul mov notb cmp add add inc fs ss cld pop inc popa (bad) mov sub scas (bad) repnz push jne mov stc sbb pop jg ret and lret cs jne mov stc sbb pop jge mov test dec imul jae mov negl cmp pushf mov pusha andl int3 in push xor xchg mov negl cmp pushf mov pusha andl lret cs jo mov repz pop jnp mov popa (bad) mov inc push or mov repz push ja mov pop inc outsb xchg mov cmc push aaa pop jle shl and xchg xor xchg mov negb cmp fwait mov pusha andl int3 in or add push jno mov stc sbb jge incb rolb outsb test push push xchg iret or push mov or mov sub in sub ficomp push pop cli xor ja divb jo repnz aaa outsb test jns,pt repnz jne mov pop andb mov or dec outsl nop mov clc sbb pop jge mov xchg dec outsb (bad) mov icebp adc push jne mov clc sbb pop jl mov mov or mov pop andb mov or dec outsl scas fild and cmpsl enter dec insl mov push jne mov jmp inc test dec push lods int (bad) xor (bad) sbb ret and xchg dec insl add mov push jns mov pop andb mov or dec outsl add pop jnp mov popa (bad) mov inc push adc push jae mov notl cmp fwait mov pop andb xchg dec insl mov push je mov clc sbb pop jg shl and cmpsl enter dec imul jae mov negl cmp pushf mov bound daa dec imul mov negl cmp pushf mov pusha andl leave ljmp (bad) repnz push jne mov clc sbb add inc xchg dec outsl nop mov repz cmp sahf mov test dec imul add add jb mov cld sbb shl and xchg dec insb lea push add mov pop andb xchg push jno mov cmc push aaa pop jp mov pusha andl lret sub (bad) repnz stc sbb pop jl shl and leave ljmp (bad) icebp adc push jne mov stc sbb pop jge mov test dec imul ja mov pop jg shl and cmpsl (bad) call lea push je mov clc sbb pop jnp mov popa (bad) cmpsl enter dec insb lea push jb mov notb aaa pop jns mov inc xchg dec insb lea add push jae jne mov push lods int wrmsr push jb mov negl cmp fwait mov bound or repnz push jne mov stc sbb pusha andl sub jmp cld xor rorb dec cmpb sub cmpsl cli xor (bad) pop inc popa (bad) mov push jno mov notb cmp pushf mov arpl dec insb lea push je mov stc sbb pop jge mov push or mov hlt adc mov pusha andl lret in or mov cmc push aaa pop jp mov xchg dec insl mov push jne mov stc sbb pop jge mov dec push add lods int wrmsr push jae mov notb cmp lahf shl and mov pop andb push or mov add sbb loop and mov adc push je mov clc sbb pop jle shl and lret in or mov cmc push aaa pop jns mov popa (bad) mov dec outsb (bad) mov repz push ja mov pop andb push push das push jb mov negl cmp popf mov arpl cs jo mov hlt adc mov pusha (bad) mov dec imul mov negl cmp popf mov push push das dec jo mov cmc push aaa pop jns mov popa (bad) mov dec push nop mov add (bad) repz push ja mov pop andb imul jne mov stc sbb add inc xchg dec outsb (bad) mov add sbb pop jl mov push into out wrmsr push jb mov notb cmp fwait mov popa (bad) mov dec imul mov repnz jmp inc bound es push or mov hlt adc mov pop andb xchg push das push jno mov hlt adc mov pop jg shl and xchg dec insb lea push je mov negl cmp mov inc mov or icebp adc push jne mov clc sbb pop jl add inc push or mov notb cmp lcall xchg dec insl mov push jne mov stc sbb add inc add xor mov stc sbb pop jge mov arpl dec push lods int adc push je mov clc sbb pop jl mov bound repnz ja mov pop jg ret and lret sub aad pop cmp sahf mov xchg push jae mov clc sbb pop jle shl and xchg dec jo mov hlt adc mov pusha andl (bad) repz push ja mov pusha andl int3 in push das push jno add add jnp mov inc push adc push jne mov cli sbb add inc push wrmsr push jb mov clc sbb pop jl mov arpl sub push jno mov pop andb mov or mov cmc push aaa pop jp mov bound sub mov push js mov pusha andl int3 in push das push jno mov notb cmp pushf mov arpl jmp inc data16 dec outsl nop mov repnz cli sbb add inc test jb mov cmc push aaa pop jns mov bound ja mov pop andb mov add add dec jo mov hlt adc mov pusha andl iret or mov loopne and cmpsl enter dec outsb nop mov repz push ja mov pop jle shl sub scas iret lock push je mov negl cmp pushf mov popa (bad) mov dec push lods into sysenter push ja mov pop jg (bad) daa dec imul mov hlt adc mov pop jle shl and test dec imul ja mov sti sbb ret and add out adc push jae mov notb cmp fwait mov pusha andl iret lock push jae mov clc sbb pop movsb cld cmp ficoml inc jle push add add clc sub mov cli and lea sbb mov jecxz scas jmp jnp shl and xchg dec insl mov push je mov clc push inc popa (bad) mov dec imul mov hlt adc mov pop jg shl and xchg dec outsl xchg mov notb cmp fwait mov pusha andl lret sub (bad) repnz int ss jp mov mov or mov cmc push aaa pop jns mov pusha andl mov repz push ja mov pop (bad) movsb (bad) sub mov push jae mov clc sbb pop jl mov add and test push lods int wrmsr push jb mov cli sbb pop jg shl and mov or dec outsl nop mov hlt adc mov pusha andl lret sub xlat clc sbb pop jl mov test dec insb lea push je mov clc sbb pop jge mov xchg push jno mov notb cmp fwait mov bound sub mov jae mov negl cmp popf mov mov or mov notb cmp fwait mov bound sub mov negl cmp lahf shl and lods into out adc push jae mov notb cmp fwait mov pusha (bad) mov add inc push or mov repz push jbe mov pusha andl leave ljmp (bad) icebp adc push jne mov clc sbb pop jnp mov arpl dec insb nop mov hlt adc mov pop jle shl and cmpsl enter dec insb lea push jb mov notb aaa pop jns mov arpl dec push stos int3 in push das push jno mov hlt adc notb cmp sahf mov mov or mov pusha andl int wrmsr push jb mov negl cmp popf mov test das push jno mov cmc pop cmp shl and cmpsl enter sub lea push add mov clc sbb pop jnp mov bound daa dec imul mov clc sbb pop jl mov popa (bad) mov inc push or mov clc sbb pop jnp mov test dec insb lea push jae mov notb cmp fwait mov pop andb mov or cmc push cmp lcall andl lret sub (bad) repnz stc sbb pop jge mov xchg dec insl mov push jne mov clc sbb pop jge mov arpl dec imul adc jns mov pop andb data16 dec outsb add xor cwtl mov pop jg shl and cmpsl lret in or mov repnz add dec push lods int wrmsr push jb mov notb cmp pushf mov bound sub mov pop jge mov xchg dec insl mov add ja loope pop fstpl dec mov stc xor or popa (bad) movsb (bad) das push jae mov notb cmp fwait mov popa (bad) mov inc push or mov repz push jbe mov pop andl lret sub outsl nop mov repz push ja dec mov aaa je out push in sub fist test hlt add sub loopne pop lahf fcompl push cwtl aad arpl leave or add mov push test pop jle shl and cmpsl enter dec insb xchg mov negl cmp fwait mov popa andl lret sub (bad) repnz stc sbb pop jge mov mov or dec outsl (bad) mov push inc xchg or repnz fdivr sbb pop jl mov arpl dec insl mov push je mov stc sbb pop jl mov bound sub mov dec jo mov repz cmp fwait mov pusha andl lret sub std xor addr16 popa mov mov in pusha mov dec xchg add jno,pn out xor in sub pop cmp add add in xor stc xor outsl mov and inc jnp ljmp into push inc mov adc lret add and fsubl gs xchg dec outsl nop mov repz push ja mov xchg dec outsb (bad) mov repz mov pusha andl lret in push das push jno mov cmc push aaa pop jge mov test dec insl mov push jbe mov pop andb push push das push jno mov stc sbb pop jge mov test dec insl mov push jbe mov pop andb push or mov sub jl add in sub mov add add mov notb cmp fwait mov pusha andl int3 in adc cli sbb add inc test dec insl mov push jne mov stc sbb pop jge mov mov dec outsl nop mov hlt adc mov pop jg shl and leave ljmp (bad) icebp adc push jbe mov pusha andl lret jmp cs jo mov repz push js mov pop andb mov or dec jb mov negb cmp fwait mov popa (bad) mov dec push lods int comiss xchg mov cmc push aaa pop jp mov pusha andl iret add jo mov add sbb pop jge mov add loopne and test dec imul push jno mov hlt adc xchg mov cmc push aaa pop jns mov pop jg shl and xchg dec insl mov push je mov negl cmp pushf mov test dec imul je mov imull adc mov add mov mov dec insb lea push js mov pop andb xchg dec insl mov push jne mov stc sbb pop jl mov bound sub mov push jae mov notb cmp fwait mov bound sub mov jno mov notb cmp mov bound dec imul add adc push je mov negl cmp fwait mov popa (bad) mov inc push lods (bad) icebp adc push je mov clc sbb pop jge mov arpl dec imul cmp jge mov arpl dec jo mov repz push jbe mov pop jge mov test dec push lods int push das push jno mov cmc push aaa pop jns mov bound daa dec imul mov hlt adc mov pop andb xchg push jno mov cmc push ss js mov pop andb xchg dec insl mov push jae mov notl cmp mov inc xchg dec insb lea add add xor add cmp jle shl and cmpsb (bad) call lea push ja mov pop jle shl and cmpsl enter dec insb lea push jae mov notb cmp fwait mov arpl sub mov bound es push push das push jno mov cmc push aaa pop jns mov mov xor (bad) xor jl mov arpl dec imul push jb mov cmc push aaa pop jns mov popa (bad) mov dec insb lea push jae mov notb cmp lcall jg shl and cmpsb (bad) call mov push jno mov negl cmp pushf mov bound add push daa inc push or add xchg mov negl cmp fwait mov pusha andl int wrmsr push jb mov cmc adc mov pop jg shl and cmpsb (bad) call lea lods int wrmsr push jb mov cmc push aaa push js mov pop jg shl and xchg dec outsb mov push je mov stc sbb ret and lret sub outsb (bad) mov icebp adc push je mov clc sbb pop jnp mov popa (bad) mov dec imul mov notl cmp pushf mov pusha andb mov or dec outsb mov push jne mov cld sbb ret and leave ljmp add add (bad) mov icebp adc push je mov clc sbb add mov inc mov or dec jb mov notb aaa pop jns mov pop andb xchg dec insl mov push jne mov clc sbb pop jnp mov test dec insb mov push jb mov notl cmp lcall andl leave ljmp (bad) hlt adc mov pop jle shl and test dec push scas (bad) icebp adc push je mov stc sbb pop jl ret and leave ljmp (bad) repnz push jne mov stc sbb pop (bad) mov inc mov push cs jo mov hlt adc mov bound sub add lods int wrmsr push jb mov cmc push aaa pop jns mov inc test dec push scas (bad) icebp adc push je mov clc sbb pop jl mov bound sub mov push jae mov notb cmp fwait mov arpl dec push lods int3 in push das push jno mov cmc adc mov pop andb mov or cmc adc mov pop andb data16 dec outsb (bad) mov icebp adc push je mov negl cmp popf mov xchg jmp sub aam adc mov pop jg shl and cmpsl enter dec insb lea push jae mov pop jg shl and xchg add test ljmp (bad) repz push jbe mov stc sbb pop jge mov dec push adc push jae mov negb cmp pushf mov popa (bad) mov dec imul mov repnz jne mov stc sbb pop andb xchg dec outsb mov push je mov clc sbb pop jnp mov bound sub mov push js mov pop jg (bad) out sub lea push jbe mov pop andb mov or mov clc sbb pop jl mov xchg dec outsb (bad) mov cmc push aaa pop js mov pusha andl aam sbb pop jl mov xchg add or dec insl mov pop jnp mov test dec insb lea add sahf mov data16 dec insl mov push je mov cli sbb add inc xchg dec jo mov cli sbb pop jle shl and cmpsl enter dec imul jbe mov popa andl iret lock push ja mov pop jg shl and xchg dec insb lea push je mov negl cmp popf shl and lret xor jne mov stc sbb add scas (bad) icebp adc push jne mov clc sbb pop jg ret es mov push xor xchg mov bound add add nop mov hlt adc mov pop andl nop mov repz push cmp mov sub sar outsb mov arpl ret add int dec mov add jle or cmp jmp popa stos jmp adc push jbe mov pop jg shl daa dec imul mov cmc push aaa pop jns mov bound sub aam add cmpsb hlt push test dec outsl nop mov repnz stc sbb add inc test push jo mov hlt adc mov pop jg shl and test dec push lods int wrmsr push jno mov cmc push cmp cmp sahf mov add add add add lret pusha mov outsl lods call add dec jo mov cmc pop cmp fwait ret es push push xor xchg mov negl cmp popf mov test dec insl (bad) mov repnz ja mov xchg dec jo mov cmc push aaa pop jns mov or mov sub fsts dec cmpl pop xchg int3 push inc jns divb insl scas repz sti jb out sub xor std add dec push lods int rdtsc push jae mov negl cmp sahf mov xchg push jae mov negl cmp pushf mov arpl dec outsl nop mov hlt adc mov pusha andl (bad) icebp adc sti sbb cmp jecxz es push push das push jb mov negl cmp pushf mov dec imul mov pop andb imul mov stc sbb pop jle shl and data16 dec jb mov cld push inc popa (bad) mov dec imul mov negl cmp mov xchg dec outsl nop mov cmc pop cmp mov dec insb lea pop jnp mov inc mov or mov hlt push cmp fwait mov xchg push je mov stc sbb add inc push push das push jno mov negb cmp pushf mov arpl dec outsb (bad) mov repnz add cwtl mov pop andb mov or icebp adc (bad) sbb movsl (bad) jmp sub (bad) hlt adc mov pop jg ret and lret sub (bad) repz push jbe mov xchg dec outsb (bad) mov icebp adc push jne mov sti sbb add add lods into out adc push jae mov mov aaa pop jg shl and int adc push add mov popa (bad) movsb (bad) sub lea push jbe mov arpl dec insb lea push ja mov pop andb aam test xchg push jb mov notb add aaa pop jns mov popa (bad) mov inc push push das push jo mov hlt adc mov pusha andl mov notb aaa pop jns mov pusha andl lret sub (bad) hlt adc push ja mov popa (bad) mov inc imul mov hlt adc mov pop andb xchg dec outsb (bad) mov notb cmp fwait mov pusha (bad) mov dec imul xchg mov pop jg shl and lret xor xchg mov negl cmp pushf mov arpl dec imul jae mov sti sbb pop jg shl and (bad) repnz push jne mov stc sbb jg shl and xchg dec jo mov hlt adc mov pop jg ret sub outsb popl mov negl cmp pushf mov popa (bad) mov dec push lods int wrmsr push jb mov notl cmp pushf mov bound sub outsb mov push ja mov pop jg shl and xchg notb cmp fwait mov pusha andl (bad) repnz push jns mov pusha andl lret in or add pop jl mov xchg push jb mov cmc push outsb (bad) mov icebp adc push jne mov clc sbb pop jge mov test dec outsb (bad) mov repnz push jns mov add (bad) pop inc popa (bad) mov dec imul mov hlt adc mov pop jg shl and cmpsl leave in push das push jno mov add sbb add inc test dec insb lea push je mov clc sbb pop jl mov xchg dec insl mov push jne mov pop jg shl and cmpsl enter dec outsb jmp inc jl push push xchg fldenv pop xchg int cmp in daa pusha popf fstps pusha mov ljmp nop leave add jo in push add loop push mov fisub popa fwait xlat sbb aam push xchg rcll push xchg aam push cwtl xlat pop pop fistpl pop popf fcoms push mov or mov jo,pn divb je clc cmp incb add add jle adc fistl pop cwtl jecxz pop cltd aad dec mov std cmp in and jecxz pop pushf frstor insl scas ljmp mov sub fbld jbe add pop pop lahf fcoms dec add in das outsb mov sub dec add cmp in es loopne push xchg roll inc jge stc cmp jmp adc or mov cmp adc push pop lcall push xchg fstps pop mov add loope jno add insl stos sub out sub cmc cmp mov cmp daa mov rclb jg add ret mov or sahf out je sti ds adc rolb test adc sbb pop cmpsb out jo cmc cmp push xchg fsubs data16 out xor mov or ficompl add add xchg ficompl scas clc inc xchg sbb icebp xor rorl (bad) pop gs clc aas test adc mov add aam pop movsl in xor decl frstor scas testl jecxz jo mov sbb test adc jecxz ja incb sbb ljmp rcrb imul pop lahf in jns add imul pop fwait loopne jb add xlat sbb jae cmc cmp fbld xchg or lcall mov adc pop gs out cmp fisub imul sub or movsb out ss push push mov cli inc test mulps incl int3 adc sub inc mov push pusha test std mov sub ficom push cwtl fsts push xchg fcomps scas cmc cmp pop movsb ljmp aam pop sahf jecxz jnp dec mov sbb icebp ss or sub cmc cmp in xor rcrl pop cmpsb in xor add dec lcall mov sbb repz or cwtl fistpl pusha mov inc (bad) aad jae add push adc out jne add xchg fistpl lods hlt cmp xor jecxz jno sti inc xchg adc call inc xchg adc loope imul push sahf loopne insl mov adc mov std inc mov sbb lods lock sbb lock jl or xlat sbb in jo cld inc mov pop pop movsl out xor mov and repz adc frstor push cli cmp into pop pop mov or loop outsb mov cmp xchg clc inc mov sbb icebp xor push dec xchg fsubl imul xchg fldenv push lret fistpl data16 inc mov pop pop enter in js lret mov or jo sti aas mov or fsubl scas idivl leave push push pushf loop jo add lock add test (bad) fsts pop int3 push push test push stos icebp cmp fbld gs aas xchg adc add fstps jp or fbld outsl mov inc xchg sbb jmp inc (bad) (bad) sbb cmpsl in xor push dec fwait loopne jae (bad) push push lcall jge pop dec (bad) rcrb pusha mov add mov adc xor add rclb add clc cmp sbb cmpsb ljmp fcompl add dec in jae add fcomps scas icebp xor add popa movsl jmp jg sub dec xchg fstps arpl push push xchg fisubr jo clc cmp fisubl insb add sbb jle or fisub outsl mov inc mov push data16 ds adc cmpsb jmp jo clc cmp or (bad) push enter (bad) sbb jmp jg or fldenv arpl push push cltd in jbe or loop insl mov inc mov sbb cmpsl ljmp frstor jmp dec (bad) xlat sbb movsb lock jp pop dec xchg (bad) add push iret sbb ljmp fstps push int3 push mov sti add add iret adc movsl dec mov inc mov sbb test adc fstps pop mov dec xchg fisub or push cwtl fisub js push push pushf jecxz jp or jecxz imul push xchg fdivrs jmp jl add xchg sub std inc mov sbb lods repz mov sbb cmpsl hlt ss or loop insl mov cmp lahf call inc test minps ficom dec xchg out bound movl or mov sub push (bad) int3 add ss ljmp xchg rcll dec mov push inc cmpb xor das outsl add out sub call popa cmpsb ljmp lods cli inc lcall bound add frstor push stc xor mov ds xor cli inc mov adc jmp dec xchg fsubl mov cmp adc fisubr imul pop cmpsl icebp aaa jle or jb or lcall xchg (bad) lods cmc cmp push push fwait jecxz jne or fldenv lods repnz jg adc aaa jl or fildll outsb mov sub add rcrl pusha cmpsb jmp jns push dec xchg fsubl mov cmp mov cld inc mov sbb out xor add (bad) scas hlt cmp int3 add pusha cmpsl in xor decl aam pusha movsl jmp ja add rcrl or pop mov add aad imul imul fsubs addr16 inc mov sbb out in inc mov adc popf loop jno add add idivb lahf in jge or in ja push dec xchg frstor addr16 inc mov pop popa stos icebp ss orps add aam arpl push fwait loope ja pop dec xchg fsubs imul xor xchg fsubl mov pop pop mov or xlat sbb cmp pop pusha movsl in xor ret or xchg loopne jno add fcomps push int pop movsl ljmp (bad) imul pop mov add (bad) sbb test xor or lahf jmp dec xchg aad arpl adc jmp jp add jo incl iret adc mov add xchg aad fs lock (bad) sbb lods hlt cmp loop outsl mov inc mov push pop add movsl out xor mov push pop movsb jmp jbe pop dec xchg frstor (bad) int3 mulps push dec xchg rorb inc mov and ds adc out jne add rcrb pusha cmpsl out ss lret popf in jo add rcrb pop stos in ss push push popf loope outsl mov inc mov pop pusha movsl jmp jne incl rcrb test xor mov sub sti aas test adc in outsl mov inc xchg adc test or insl mov cmp in ja add cltd loop jns add (bad) sbb jmp cmp mov sub cmc cmp add insb mov aas jge add rcrl pop mov add fisubl mov cmp in jbe add insb mov cmp lahf in jae add mov sbb out xor or fcomps aam fs or fsubl push leave adc call dec nop (bad) push push int pop mov call fbld mov adc movsb jmp inc (bad) into pop pop movsb out jb cld inc xchg adc mov add xlat sbb scas cmc cmp (bad) adc and hlt cmp lret push push lcall mov push pop mov stc cmp lcall test andnps inc mov sbb add daa jno add xchg fstps fs icebp cmp in jo decb (bad) sbb icebp cmp icebp cmp mov add roll jg (bad) cmp push popa stos lock add add inc xchg adc mov add enter ficompl arpl add rcrl push fistpl pop cltd fsts push xchg (bad) pop pop xchg ficompl pop pushf fcoml push mov incl iret adc fcompl cmpsl out jo cmc xor add inc mov or pop push xchg fcomps pop sahf loopne popa mov loop push mov inc xchg pop dec mov adc aad pop lcall movsb in imul xor xchg or adc fstps pop sahf loopne movsl in xor (bad) ds dec mov or adc cltd fistpl pop popf frstor popa add repz mov add leave or rclb push xchg (bad) pop pop mov fbld pop popf ficomp pop mov out addr16 mov add test pop inc xchg or aam pop sahf loopne arpl in das jo cmc cmp std cmp int3 rsqrtps ficompl lcall popa movsl jmp xor add mov adc aad pop lcall stos in jo,pn icebp xor stc cmp add les inc mov or int3 (bad) xchg rcll push cwtl ficompl je clc cmp divb jbe ljmp mov add je in jnp lock movsl loopne push xchg iret or mov in pop xchg aad push (bad) int3 or ret add mov xor push pop xchg rorl inc (bad) mov sti aaa je in sub and push xchg rorb test (bad) cmp in daa arpl lret jl repz out sub in arpl lods in jo,pn imulb addr16 pop xchg into push dec mov add jl (bad) cmp mov sub pop xchg rorl dec xchg (bad) cmp repz and ficoml push mov pop inc cmpb jne lock out bound iret or aas jl cmc xor out pop pushf fcompl push xchg rorl dec xchg add aaa jne out sub cmpsl in pop ficomp pop pushf loopne push nop leave add les push xchg (bad) sbb int dec (bad) int dec mov adc fcompl movsl in jo clc cmp add rolb movsb call and fldenv insb mov ss repnz mov cmp or fsubl arpl enter fldenv arpl inc mov pop fs incb rclb pop pushf loopne push repz frstor push test adc loopne imul and icebp ss add rcrb popa lock jp add (bad) rclb pop mov incl rclb push movsb call inc mov adc mov cld dec mov sbb call inc mov adc jo cli inc test or lcall jp add rclb pop mov idivb int3 sbb jmp jbe cld inc xchg adc loop mov rcpps cli inc or push cltd loop jb std inc mov adc loop outsl mov inc mov push pop sahf in bound adc dec iret push aas jle add aas jg add ret add dec nop rclb push xchg rcll pop lahf loop bound jecxz mov in pop lcall add dec mov add mov sub fild and fsts mov add (bad) rolb lret mov sub xlat lock movsl sti mov lds (bad) in sub mov push jne mov cli sbb add jno mov notb cmp pushf mov arpl sub mov repz push js mov pop andb imul mov pop jg (bad) sub mov push je mov clc sbb pop jge mov xchg push jae mov negl cmp popf mov test dec outsb (bad) mov repz push ja mov pusha andl (bad) repnz ret jecxz es push or xchg mov cmc push aaa pop jns mov bound sub lea push js mov popa (bad) mov dec imul mov notb cmp pushf mov arpl dec imul jns mov popa (bad) mov dec push lods into out adc push je mov cli sbb pop jg shl and xchg push jae mov clc sbb movsb fidiv imul and iret pop inc jg in imul sub stos out push xchg lret add pop mov dec jp mov arpl dec imul jb mov negl cmp fwait mov bound dec jo mov repz add movsl (bad) out sub mov add add out adc push jae mov negl cmp fwait mov pusha andl iret lock push jae mov negl cmp fwait mov pusha andl lret sub (bad) repnz stc sbb pop jg shl and xchg dec insl mov push jne mov pop jg shl and data16 dec insb lea pop js mov pop jg ret and lret jmp sub (bad) repz push ja mov pop jle shl es push or dec outsl nop mov repnz sti sbb add inc test dec insb mov push jae mov pop jle shl and dec add mov add add repnz jne mov stc sbb pop jl mov arpl sub mov jne mov pop jg shl and xchg dec insl mov push jne mov pop jg shl and stos int wrmsr push jno mov cmc push aaa push js mov bound sub mov pop jp mov pusha andl int wrmsr push jb mov notb aaa pop jns mov pusha andl lret sub (bad) hlt adc mov popa andl push or mov hlt adc mov pop jg shl and xchg dec jo mov repz cld add and dec imul mov negl cmp pushf mov bound sub mov push js mov pop andb mov or repz push js mov pop andl into out adc push jae mov notl cmp fwait mov pusha andl int3 in or mov clc sbb jmp sub (bad) repnz jne mov stc sbb pop jge mov arpl sub scas (bad) repnz (bad) pop inc arpl sub mov push jae mov notb cmp fwait mov bound dec imul push jns mov pusha andl inc push add add pop jp mov popa (bad) mov inc push push das push jb mov (bad) pop inc popa (bad) movsl (bad) out sub mov jb mov negb cmp mov bound sub mov push jbe mov pop andb mov wrmsr push jno mov negl cmp pushf mov test dec insb mov push js mov popa (bad) mov dec insl nop mov repz js mov test dec outsb (bad) mov repnz jp mov bound dec imul enter or mov or mov stc sbb pop jge mov imul jno xchg mov notb aaa pop jns mov add mov push jo mov hlt push aaa push js mov bound dec push lods int3 in push das push jno mov cmc push aaa pop jns mov popa (bad) mov inc push or mov negl cmp pushf mov bound daa dec imul mov negl cmp pushf mov popa (bad) mov dec insb lea push jae mov negl cmp fwait mov pusha andl lret in or mov notb cmp pushf shl and xchg dec outsb (bad) mov icebp adc push jne mov stc sbb pop jge mov test dec insb lea push js mov pop addb add add inc mov dec outsl (bad) mov add add shl and xchg dec insl mov push js mov pop andb xchg dec outsb (bad) mov repnz push jne mov stc sbb pop jge shl es imul mov negl cmp pushf mov mov or dec outsl nop mov repnz push jbe mov pop jle (bad) in daa dec imul mov cmc push aaa pop jns mov pop andb mov or mov cmc sbb loop and iret lock push jne mov stc sbb push daa dec push or mov cmc push aaa pop jns mov arpl (bad) out sub mov push ja mov pop jle rolb add dec outsl nop mov repz push ja mov pusha (bad) mov inc push or mov hlt adc mov pop jg shl and xchg dec insl xchg mov cmc push ss js mov pop andb imul jbe,pt pop xchg add lret std pop mov pop jge shl and cmpsl enter dec insl mov push jne mov stc sbb pop jle shl and test dec outsb (bad) mov repnz push jne mov pop jle shl and cmpsb (bad) call mov push jb mov cmc push aaa push js mov add add add dec imul je mov negl cmp pushf mov add mov jno mov cmc sbb pop jnp mov bound sub mov push je mov clc sbb pop jl mov bound sub mov hlt adc mov pop jg shl and xchg dec outsb mov push jbe mov stc sbb pop jge mov push or dec outsl nop mov repnz sti sbb loop and data16 dec outsl (bad) mov icebp adc push jp mov popa andl lret cs outsl nop mov repz push ja mov pop jle shl and xchg dec jo add xchg mov repz push js mov pusha andl lret in or mov repz cmp pusha andl int wrmsr push jb mov negb cmp pushf mov bound sub mov jno mov notb cmp lcall andl mov jb mov cmc push aaa pop jns mov pusha andl out sub (bad) mov icebp adc push jne mov pop jle shl and cmpsl leave ljmp (bad) repnz sti sbb pop jg shl sub lea push je mov stc sbb pop jge shl and test jmp sub (bad) repz push js mov bound add (bad) sub mov je mov cli sbb add ljmp (bad) repz cmp pop andb imul jae mov negl cmp popf mov bound daa dec push lods into out adc push jae mov clc sbb pop jg shl and xchg dec outsb (bad) mov repz sti sbb loope and data16 dec jo mov cli sbb jge mov xchg dec insl mov push jne mov clc sbb pop jge mov xchg push jae mov clc sbb add inc arpl sub mov push jae mov notb cmp fwait mov pusha andl add or dec imul jb mov negl cmp pushf mov arpl sub mov push jae mov stc add add mov push jae mov negl cmp popf mov bound daa dec imul mov hlt adc mov arpl dec push lods int wrmsr push jb mov notb aaa pop jle shl and mov dec outsb mov pop jns mov pusha andb imul mov clc sbb pop jl shl and xchg dec insl (bad) mov cmc push aaa pop jns mov popa test dec insb (bad) mov icebp adc push jne mov pop jle shl and cmpsl enter add add cs jno mov cmc pop cmp fwait mov arpl dec insl mov push jne mov stc sbb pop jle mov test add pop jnp mov arpl dec insb lea push jbe mov pop jle shl and cmpsl enter dec jo mov repz push ja mov pop andb data16 sub sub mov repz imul sbb cli clc mov out xchg jmp lock mov jb jl lds js lods faddp push mov jno cmp dec add add inc sbb and pop dec or dec mov cmc or outsl fisttp pushf mov push pop leave mov push mov test mov push ljmp out or arpl lods pop lcall icebp mov pop fstps je jl fwait shr ficoml mov fisttpll andb mov scas xchg lcall jnp (bad) xchg mov adc lret (bad) test sbb inc fcoml out lahf sbb sub xor jmp inc dec add test cmp test cmp mov cmp test test cmp cmp mov test cmp test test cmp mov cmp cmp cmp cmp test jmp cmp cmp test test cmp cmp test cmp test test xor cmp cmp cmp cmp cmp test cmp cmp test test ret call cmp cmp test cmp test mov test cmp cmp cmp cmp mov cmp test cmp cmp test inc test cmp cmp test cmp mov test test cmp cmp cmp mov cmp cmp test cmp cmp ret pop test test cmp cmp test clc adc cmp test test cmp cmp jmp jnp jl xchg out popf push mov (bad) idiv sub ret push (bad) jmp fildl add cmp test cmp jmp cmp test test cmp cmp pop test cmp test test cmp add cmp cmp cmp cmp test mov cmp cmp test test cmp mov inc cmp test cmp test test cmp cmp test test cmp dec test test cmp test test cmp cmp test cmp test dec test cmp test cmp cmp cmp test cmp cmp test dec test nop cmp cmp test cmp cmp test test nop dec cmp cmp test cmp cmp test test nop cmp cmp xor test cmp cmp test test nop cmp cmp test cmp or cmp test test nop cmp cmp test cmp cmp test call test nop cmp cmp test cmp cmp test test nop push cmp cmp test cmp cmp test test nop cmp cmp test jne mov test cmp cmp test test add nop cmp cmp test cmp mov cmp test test nop cmp add cmp test cmp cmp test call test nop cmp cmp test jmp cmp cmp test test nop pop cmp cmp test cmp cmp push test test nop cmp cmp push test cmp cmp test test push nop cmp cmp test cmp mov cmp test test nop cmp call cmp test cmp cmp test pop test nop cmp cmp test cmp jl test cmp cmp test test mov cmp cmp test cmp test sub cmp test test test cmp mov cmp test test test cmp sub test test test cmp cmp call test test test cmp test mov test test cmp cmp test push test test cmp test test mov test cmp cmp test test push test cmp test test test push cmp cmp test test test push cmp test test test cmp call cmp test test test cmp jmp test test test cmp cmp pop test test test cmp test inc test test cmp cmp test push test test cmp test test pop test cmp cmp test test inc test cmp test test test or cmp cmp test test test call cmp test test test cmp mov cmp test test test cmp cmp jne test test test cmp cmp mov test test test cmp test test test cmp cmp test dec test cmp test test cmp dec test cmp cmp cmp test dec cmp test test cmp test dec cmp cmp cmp test cmp pushl test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp xor test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp cmp test cmp test test cmp test cmp cmp test test pop cmp cmp cmp test cmp cmp cmp test test cmp cmp cmp test test cmp cmp test cmp test cmp test cmp cmp cmp test test cmp cmp cmp test or test cmp cmp test cmp test jne test cmp test cmp cmp jmp cmp test test cmp cmp mov mov out ret lcall add lret mov cmp fs or shlb pusha dec xchg fimul jle xchg es xor or shrl movsl pop adc aas sub push daa stc jo,pt sbb xchg push mov adc adc dec aas scas sbb mov les and xchg cs pop push outsb and and pop gs ss cmpsl xor shrl sub outsl (bad) popa push pop push sub add stos in sub (bad) jno out pop jecxz stos scas cmpsb mov dec inc xchg test lea push das loopne xchg testl mov lods and jl xchg out popf push icebp psubq sub ret push mov (bad) mov out lcall add lret mov cmp fs je or shlb dec xchg fimul jle xchg es xor push or test test cmp cmp mov test cmp test cmp test pushl cmp cmp cmp test test pop cmp cmp cmp test test mov cmp cmp test cmp test mov cmp test cmp cmp cmp push test test cmp cmp cmp mov test test cmp cmp test mov cmp test cmp test cmp mov cmp cmp test test cmp cmp jne cmp cmp test test cmp mov cmp test cmp test cmp cmp jne test cmp cmp cmp test pop test cmp cmp cmp test mov test cmp cmp test cmp mov test cmp test cmp cmp mov cmp test test cmp cmp add cmp test test cmp cmp mov test cmp test cmp test mov cmp cmp cmp test test add cmp cmp cmp test test mov cmp cmp test cmp test add cmp test cmp cmp cmp lods test test cmp cmp cmp test je test test cmp cmp test add cmp test cmp test cmp mov cmp cmp test test cmp cmp jne cmp cmp test test cmp mov cmp test cmp test cmp cmp jne test cmp test cmp cmp mov test test cmp cmp push test test cmp cmp test pop test cmp test test cmp push test cmp test cmp test push cmp cmp test cmp cmp push cmp test cmp cmp cmp push cmp test test cmp cmp push test test cmp cmp push test test cmp test test push cmp test cmp test cmp push test cmp cmp test cmp call cmp cmp test cmp cmp add cmp cmp test test cmp ret and or shrl movsl hlt pop adc aas sub push daa stc adc imul mov push mov mov cmp mov andl sti (bad) cmc pinsrw pop fstpl jg xlat loop aam xor or mov jle add add inc xor test and imul and inc pusha (bad) rep in call test cltd es outsl sbb fisubl enter les xchg call jg scas cmpsb mov dec inc xchg test lea push das loopne xchg testl sub sub les cmp add mov fs mov insl pop xlat xchg add push add add jb xchg mov outsl sbb (bad) jbe in jae test cmp jns in imul cmp push sub in stos mov adc ret movsb aaa jecxz pushf std scas pop xchg mov (bad) sub lahf into inc sub aad pop pop push insl and cmp cmp (bad) jns cmpsb jbe (bad) shrb mov sbb outsb bound add jnp jmp (bad) adc (bad) xor ret movsl mov mov test mov xchg cs (bad) lcall mov stos data16 mov push mov mov cmp xchg shll (bad) cmc pinsrw clc pop fstpl jg xlat call nop jb jg mov push int3 pop pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov push insl in mov mov xchg mov pop int3 pop xor push inc push mov push xchg mov pop int3 pop xor push xor mov ds mov push int3 pop inc ret enter xchg jb imul mov push int3 pop fdiv aam mov (bad) mov mov push int3 (bad) icebp push and add pop mov push int3 xor fcompl push cmpsb pop inc ret fcompl push icebp pop mov int3 push ds pop mov nop in mov push int3 xor (bad) int3 pop mov rorl dec mov pop ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov ret push mov sbbl or pop mov int3 sarb lret mov push cld pop mov push cmpsb pop (bad) test mov push fisttp pop mov push int3 pop push ss mov push int3 sarb pop int mov push int3 cmovae dec add rcll xor push int3 cmovae les push dec mov lea push rcrl push lret and leave (bad) dec lahf mov jo pop mov in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in aas aaa dec cld pop mov (bad) das sub jecxz mov push ret stc xor aad pop aas scas int cmp add pop mov scas out mov push int3 sar push and add jp pop out popf pop mov fldl pop mov push int3 sar sbb jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb jg jb fldl pop mov push int3 sar push inc push mov push xchg mov push int3 pop xor push and add pop mov push int3 (bad) icebp push and add pop mov push int3 (bad) icebp push and add pop mov push int3 (bad) icebp push and add pop mov push int3 (bad) icebp push and add pop mov push int3 (bad) icebp push and add pop mov push int3 mov jnp pop in int3 sar push lods mov movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds dec movsb ds stos push int3 sarb sahf int3 pop mov pop and mov sbb mov addr16 sbb push mov pop mov cmp pushf mov dec int3 pop push jo pop mov es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es sub es mov lods push int3 sar add mov push int3 pop push icebp xor jl pop in int3 sar push dec mov mov jge pop in and cmpsb push int3 sar push dec mov mov add mov pop dec pushf movsb pop int3 pop jmp xor push xor test int3 pop aam int3 pop mov push int3 or mov fwait movsb sub pop mov push xchg fidivrl int mov push mov shr pop dec cltd cmp int3 pop aaa sbb pop mov xor aas fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test fdivs test cld (bad) hlt fs lods test inc push mov shll imul push mov dec pop mov pmullw fnsave push mov push int mov cmp xor cltd adc and fdivrs inc pop aas nop enter inc push pushf add negl push or nop (bad) pop out pushf movsb jmp test and mov mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov and push mov cmpsb pop (bad) push fwait xor inc push call shr cmpsb inc test cwtl sar push (bad) sbb fisttpll mov insl sbbl sub int3 cs fnstsw aaa (bad) call and push call fdivrs popa fidivr pop mov frstor fmul cmpsb dec and and add add in add mov xchg rcrb mov fisttpll aaa sbb ror push xchg xor fild (bad) xor int mov scas dec lcall mov repz dec lcall sbb mov mov das mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov mov pop mov push mov push xchg mov test movsb inc xchg xchg mov inc push nop mov xchg rolb push mov pop xor test cmpsb pop (bad) push cmpsb pop (bad) push cmpsb pop inc and movsb leave jp into mov scas int cmp xor push xchg (bad) icebp pop and add movsb inc fisttp mov dec int3 pop out and sbb push and cmpsb push int3 (bad) icebp pop and add sbb mov dec int3 pop out adcl or fwait inc test (bad) pop mov push jle push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in jmp push in push mov sub mov stos xor push and add push inc fiadd int3 pop aas scas int3 das cld fldl pop mov test inc adc test mov mov pop dec lcall dec cwtl mov test dec mov mov int3 mov fbstp fidivrl int mov loope pop mov fldl into adc pop (bad) push movsb pop mov movsb or int mov test int3 sarb (bad) int3 pop mov test int3 movsb or int3 pop mov add movsb mov call sbb push int3 lods dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp dec mov cmp mov mov movsb lret push inc or test dec mov mov int3 sar jb pop icebp cmp xor and shr pop xor add fadds (bad) pop int3 pop aaa inc stos (bad) notb adc pop cmpsb pop aaa inc dec cltd inc push int3 pop (bad) in ficompl (bad) ficoml movsb into inc inc add fstl or add movsb mov int3 push cmp pop mov xor mov inc or push int aas jmp pop mov dec int mov icebp xlat pop mov test inc or test dec mov mov int3 sar dec and xchg jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add jo add mov aad pop out fstl pop mov pop inc or test xor mov jmp mov xlat por inc dec mov fldl pop mov test inc or test dec mov mov int3 mov push int3 pop (bad) push movsb pop mov xor inc or test int3 pop mov push int3 aas sbb fisttpll aas xchg in lods push int xor push inc push mov push xchg mov scas xor mov int3 pop out test int3 shr pop xor xchg inc movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam movsb dec aam (bad) push cmpsb pop xor push int3 pop out fstl mov stos int mov test cmpsb pop (bad) push inc adc fstp pop idivb (bad) sbb int3 pop xor push int3 pop out fstl mov push into pop mov test cmpsb pop (bad) pop inc mov xchg je mov out pop mov push int3 or add movsb mov fcomps push inc (bad) or int3 pop xor cmp or js mov test and add push cmpsb jge test int3 shr pop xor add mov push int3 pop aaa sbb mov dec int3 pop out mov fidivr push int3 pop push xchg int3 pop mov movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl aas test movsl inc push mov push xchg mov mov dec pop mov pop xor icebp push and add movsb inc mov xchg or sbb mov stc cmpsb pop (bad) push cmpsb pop aaa sbb aaa or movsb (bad) mov stos ret pop mov sbb mov dec int3 pop out loope inc test xchg push aas xchg les push and add movsb inc cmp movsb insb fbstp fidivrl int mov push fcompl test les push int3 pushf cmp pop mov fldl pop mov test int3 pop xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor fild xor push and lods push int3 add push inc or test dec mov mov push and add movsb inc fisttp mov xlat or or add movsb mov lret pop mov pop dec jne test ret pop mov push int3 pop aaa sbb mov dec int3 pop out push scas inc test int3 pop aaa add movsb mov and add movsb inc fisttp mov push and add movsb inc fisttp mov push leave pop lods push int3 sarb (bad) int mov push int3 jbe inc int3 pop xor push and jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out xor int3 pop xor push int3 or mov mov push int3 pop mov push int3 sarb lret mov xchg ret fbld push int3 pop orl int3 xor fwait mov inc pop mov push int3 push cmp int mov push ret (bad) push int3 pop orl xor push int3 pop mov lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds pop lds imul xor pop xorl fistpll int3 fwait enter mov imul mov sbb data16 icebp pop mov sub pop mov xchg mov pop jl dec sarb push int3 (bad) push daa insb aas jmp leave das cwtl cmp movsb sub int3 pop mov push xor and int3 pop inc loope pop mov push int3 pop push insb xor test rdpmc mov loope pop mov push int3 pop inc (bad) mov mov mov mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov lds mov aam int3 pop cld test int3 movsb or int mov push int3 mov test movsb aam int3 pop mov push int3 movsb or int mov push int3 mov test movsb aaa sarl mov pop dec testl ret fistp test movsb xor push int3 pop out cmp xor enter xor ret pusha pop mov xchg mov xor test int3 movsb or int mov gs adc pop aam int3 pop mov push int3 movsb or int mov push int3 loop pop int3 pop cmc aad pop leave lods cmpsb push inc ret pop pop mov push int3 andl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp push lahf xor push int3 movsb or int mov gs adc pop push test int3 shr pop xor add mov mov lock fbstp int3 pop fdiv aam mov fisttpll stc inc dec mov mov xchg loop push int3 pop aas xchg into cmp aaa inc ret test fdivrs xchg aas xchg into cmp leave mov mov cmp push aas pushl sub fidivrl enter xor push dec pushf mov xlat and push int3 or ret aam mov xlat or push int3 pop jl or push mov pop mov push int3 (bad) je dec mov push or pop mov push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or push pushf or mov pop mov xlat or push int3 test mov xchg sarb xchg int3 pop mov push inc xchg in add push push int xor mov rclb fcoms outsl pop cs sub add int3 pop mov aad pop enter movsb mov xchg mov mov rcr push leave pop mov push xor inc cmp xor int mov test inc es xor jl pushf or mov mov xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor inc scas xor xor cmp or sbbb int3 pop in add into pushf push int3 pop ljmp push mov push sbb adc les push mov test mov fnop push test (bad) shlb or cmp push cmpsb pop (bad) push cmpsb pop (bad) push cmpsb pop aam int3 pop cld add push hlt fisttp rolb dec (bad) push pushf movsb lret sbb jmp ljmp or int3 pop mov in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in jbe push in inc mov mov push int3 push (bad) fdivrs inc mov or pop leave mov stos fadds push ficoml dec mov mov stos pushf mov xchg into cmp mov xchg enter dec lcall int3 rol pop inc movsl cmp push cmpsb pop (bad) push cmpsb pop (bad) push cmpsb pop aam int3 pop lods add push hlt fisttp mov inc int3 pop in dec lahf mov inc int3 pop in or push int3 mov push int3 pop aaa rorl pop mov dec (bad) shll pop int3 cs push add in xchg pop mov pop inc movsl cmp push xchg push fnop push cmp int3 das mov rcr inc or mov adc sub xor jp xor mov push int3 or sub rolb or push int3 add lahf inc inc mov aaa pop enter sti aad pop push cmpsb or mov xlat cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp cmpsl xor cmp mov xor pop int3 pop (bad) push lcall nop enter xor mov test int3 movsb jmp push int3 add outsb int cmpsl fldl pop mov test or push int3 xor test popf mov push cmpsb pop (bad) push lcall adc push push cltd ret pop mov and mov cmp xor cltd arpl inc inc xor mov outsb int3 cs xchg std xchg lea push jp ret pop mov (bad) aaa pop leave mov int mov push int3 pop push inc fcompl or loopne mov push int3 push (bad) ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp ljmp gs add dec inc (bad) xchg push int3 pop (bad) push movsb pop mov movsb or pop mov test int3 sarb jb pop mov push int3 mov pop int3 pop out xlat rol pop test mov pop aaa push les pop testl push jbe lods push int3 bound (bad) (bad) rorb cmpsl dec mov inc int3 pop xor fstl shr add cs sbb mov loopne enter int3 pop mov mov dec lcall int3 add dec inc (bad) mov pop aaa lret lock mov push int3 pop fcmovu clc push fisubl imul int3 das mov inc outsl scas aad pop aas xchg into mov aad pop aas xchg into shrb jle pop mov push int3 pop xor push jbe fcoml shlb outsb int mov (bad) xor push inc inc mov rorb lods mov push int3 pop xchg js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js jne js ficoml lods pop mov push int3 pop aaa fneni(8087 pop mov lods int3 cs fisttpll mov xor aas xchg into sarb jb pop mov push int3 cmp push daa pop fnstsw dec mov ss pop xor xlat push pop fcoml shr jb pop mov push push pop mov jb push pushf push push lods fstl pop lods push int3 pop fisttp lods fist mov push int3 pop inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos inc pop mov aas push rclb and xor xchg jb aad pop leave push inc mov jge mov shl jb sarl aad pop lea je inc (bad) mov mov fstp push neg mov add mov mov ds dec mov test int3 add or pop jp je xor mov sahf fnsave pushf sub xor test pop push fisub movsb inc in int3 pop mov enter mov leave cmpsl mov fild (bad) hlt pop inc push aaa push rcl push inc sbb jb mov xchg and gs mov mov inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor inc stos xor mov xor push and imul sub cmp pop push xchg sbb xor inc pop test test sub and xor das int3 mov xorl pop frstor mov addl ds iret cmp mov mov movsb repnz or fnstsw cmpl mov test movsl cmp adc int3 mov push int3 pop outsb test mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov mov movsb repnz or fiaddl mov mov call cmp sub aaa test push cmp movsb inc sbb das flds movsb sub aaa test les inc pop test mov shlb int3 mov mov movsb repnz cmp xor cmp sbb pop push pop int mov jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out inc and or and movsb sub aaa test push add movsb inc sbb xor and sub aaa test push bound movsb inc sbb xor and sub aaa test push pop sub inc adc fnstsw test aad test mov test mov sub adc lds ret push test mov aad (bad) xor xor iret push and fs lods das flds mov sub push and push test mov or cmp xor cmp das mov push adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov xchg adc popa mov pop test mov xor xor iret push and imul fnstsw pushf sub and pop push daa sub sbb and push and outsl test mov aaa sarb scas push les xchg mov data16 imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul or aas mov fisub stos push lret das mov test mov xor xor aas mov test mov aas into xor mov enter shll cmp and xor push and pop test mov pop fnstenv cmp and xor into xor aaa flds int3 mov (bad) xor adc pop push cmp aas (bad) xor mov mov (bad) mov fbld mov or mov lcall add or ljmp or ljmp or ljmp or ljmp or ljmp or ljmp or ljmp or ljmp or ljmp or inc test sbbl add movsb inc and ljmp mov lahf ds fsts mov cs mov test mov (bad) xor mov test movsb out ds fbld mov imull xor and cmp ds cmp xor movsb inc add cmp xor iret push and push and xor xor mov (bad) xor cmp mov push (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc (bad) cmc adc and dec test int3 mov mov in push into and sub test das mov lahf ds aam movsb sarb in pushfw adc test cmp jle or xor loop aam mov push shrl xchg lds jnp push xchg jmp and push aad mov das loopne movsl xor loopne mov das ljmp pop out and pop mov test mov aaa sarb fildl mov lds int3 mov mov out or adc push jmp movsb or xor xor mov xor jp movsb inc push int3 pop mov test and outsb test int3 mov xorl mov (bad) sbb test mov ds xor inc test stos xor xor mov test mov adc das in adc push (bad) pop movsb inc xor jb push and dec test and mov jl ficom fwait test mov mov int3 pop push js movsb inc std xor sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jae sub sbb jb xchg mov sub add and sbb cmp xlat je out test rorl stos cltd dec or mov xchg mov sahf xchg xorb jg jle cwtl mov push in adc aam cmp add sbb movsb sub and add test stc pop leave cmpsb ljmp cmpsl pop out xor and lea sbb mov pop cmpsb out jo mov add mov sub bnd jl and aad les shlb nop or or stc xchg adc pushf jle mov imull push loop xchg aaa add inc push cmp inc sbb or jns clc add movsb (bad) adc pop enter pop fisttp xor xor sbb adc mov add test out adc and lret ret xchg lea repz mov dec and bound sbb cmp out xor (bad) imulb sub and shll stc push sahf pop or push and test fcomps inc shlb mov jae mov mov inc add (bad) jnp and xchg rorl mov pop cmpsb sbb sbb in out add lock (bad) jge and pop or les pop cmpsl scas lods xchg jbe nop or or stc xchg int3 loopne leave mov jle insl das push (bad) icebp xchg mov push loop push aaa ror jp inc cmp or lods test std push (bad) adc pop enter loope or sub in sbb xor (bad) test out adc adc lret xchg xchg lea repz adc js and dec insb aas inc add test es mov (bad) xchg je jno mov dec test stos jae fsub lea pop xor sbbb cmp out div lcall fimul ja inc fcmovne sub int3 add pop or imul les cmp sti push push in push cmp sarl inc inc popa shr sub push mov add sbb adc pusha por loopne loop std test pop call dec adc rcl adc sbbl dec push adc cmpsb aaa inc test push and xchg cwtl nop daa fnstsw (bad) pop mov push imul clc sbb ss dec cmp xchg outsl sahf cmp shll cld pop adc push push pop addr16 cmp arpl and stc loope das dec sbb or imul dec insb mov add mov add mov xchg jl jno mov je pop and icebp jb lea pop sub cmc xor jg sbb cmp repz jns out push mov aad lock push fcmovne sub int3 inc rcll (bad) addl cli inc ret imul les cmp push sarl inc inc sbb jmp mov sub call pop ss push int3 js pushf pop lret in mov aas jge out lds sbb jne mov ret add xor fimull out aad outsb mov shll pop sbb or into shlb jle jp imul (bad) iret fs gs in mov mov aam inc jnp adc loop and outsl fnstenv sbb ljmp inc popf loopne mov pop fmulp clc pop fbstp in cwtl pop bound test mov xchg jae arpl pop in add mov cmp jo sahf je (bad) data16 xlat popa push dec cmpsb jno jmp ds loope (bad) int hlt xchg ja call pop adcb push dec lret in pop mov mov rol aas aas mov out sub mov jne adc mov xor fimull out sub outsb inc sarb mov pop mov stos sbb or and jle sarb jp (bad) shlb gs iret fwait mov dec in mov aam sub xchg cmp loop and adc mov stos scas outsl sbb ljmp inc (bad) loopne fstl mov lret fistp push clc cltd and in add jmp mov xor lret pop arpl in add mov or jo xorl fcompl scas xor mov cmpsb xchg jmp nop stos jmp dec ret rcr aam and stos out mov inc lods push test cmp hlt xchg xchg roll or aam stos leave aad testb dec pop loop push pop push out cli xchg rcrl or lods cmc jb paddb outsl repz das pop stc jns add and mov int sbb popa dec push sti pushf and fbld or test mov aaa lcall jbe ret dec inc inc outsb cwtl out scas dec aas xchg push cmp xor ja xor fs xor xor cwtl mov in mov in repnz pop fdivrl jmp divl scas adc pop lahf push push xchg mov fwait nop call (bad) out inc les repnz add sub mov sbb lds ficoml and jmp mov mov out lods push mov push test hlt mov rcl inc sbb jl leave aad testb dec pop mov push out cli xchg cs cltd cmp (bad) rorl cmc jb paddb xchg std pop stc xor das and mov int mov sti sbb dec cmpsb mov xlat test mov int3 lcall jbe ret dec incb inc outsb pusha out rorb push cmp xor xchg icebp xor fs imul (bad) in je in mov repnz pop in fnop and fdivl jle cmp adc mov pop adc insl or adc scas xchg pushf out cwtl and lock adc xor inc std pop mov mov aaa inc test sbb inc adc mov cmp dec popa sbb test (bad) js scas call inc jno ss shlb aam push dec cli repnz mov stc cs cmpl dec and mov push data16 mov fwait lret mov push mov add dec cmp xchg and ret (bad) pop dec adc push movsb pop je xchg cmp cmp iret mov cltd jbe imul int3 mov add test mov add jecxz jp dec lahf mov xlat mov pop loopne pop and pop cmc lods lds inc cmp repz mov and (bad) movsl xor mov mov push adc xor inc xor lods daa pushf pop cwtl and or xor inc std stos mov pop push aaa xchg test inc testb cmp pop or mov mov jp xchg popa add ds scas test js inc call arpl mov dec cli rol push or mov lcall in aam jns outsb mov (bad) mov pop push out pop mov loop push out jge xchg mov and pop mov data16 clc scas enter inc scas stos dec call es in ss and mov cmpsb lret jo (bad) push adc xor mov mov sub repz addr16 sub enter lods dec add add popf cmp je stc xchg aas sbb adc jg negl pop push test xchg test add jp inc jmp jl aad mov std (bad) mov mov loope or jl (bad) insb dec popa gs jle insl fisub stc add mov push xchg xchg add push sub (bad) mov or daa dec push sub cmpsl mov out pop pop sti fsubr dec (bad) int3 aam jns in xor fldl push mov shr in out mov sarl and js data16 clc scas mov scas enter pop (bad) es in ss and movsl into rolb stos lahf clc mov adc roll xlat les adc imul mov jmp cmp sbbb out sub pop fidivr and add in popa sti aaa dec add and jl nop in push sbb (bad) pop es gs cmp or test rcrl and xor push add sub or adc xor jns repnz loope frstor ss data16 ja push mov lods dec inc out out mov std pop fwait jl out and jne mov pop orps cmc pop iret pop xchg cmpsl bound add hlt xchg jns inc cs jp sbb push inc pop or cwtl dec push das dec in ret xchg cli (bad) mov pop arpl into shrb inc pushf adc rcll leave inc xchg jg lret xchg adc or adc push jmp cmp mov dec orb adc je adc mov mulb dec xchg mov out fsts into and aas js rcll inc ljmp inc daa fisttpll fdiv ss ja mov (bad) and insl sbb cmp or xchg sub je (bad) push int gs mov notl and arpl (bad) inc shrb jnp in pop jbe jno popa sub imul loope stos inc lds loopne in or sbb jae xchg mov sub push out test and sbb cmp fdivs out test ret jns lcall push sti xchg mov lahf mov xorl repz mov push in adc aad cmp add sbb cmp add test pusha lret pushf mov test out xor and mov jl adc sarb or (bad) adc mov dec daa fdiv (bad) pop ja mov mov or sbb (bad) in lock sbb cmp xchg inc cld mov repz popf daa jmp lret insb aaa xchg add jns dec mov scas loop xor push xchg cld xor into (bad) adc jg push data16 inc cltd inc rolb mov xor dec (bad) add cmp (bad) fidivrl leave ret sub xchg jecxz sub and addl mov ljmp cwtl test mov push aas outsb mov enter popa push rcl adc pusha jp lcall test out xlat lahf jnp jo xor sarl or and mov fistl dec aad movsl and sbb and lret dec inc mov or stc pop xchg fsub loope stos hlt lds ficom sarl in pop gs leave add sar icebp repz cmp popf daa (bad) divb cmc es jmp mov scas cmpsl jns dec mov scas loop xor sub into push xor scas cmp inc outsl lahf gs adc addr16 std pop mov addr16 mov and jmp sbb mov ja mov cmpsb outsb dec insl aas inc add mov jg daa jl mov xlat xchg jne jb mov dec stos and movsb stos je (bad) lea mov sub sbbl enter div fwait jp xchg push mov (bad) add js inc fcmovnbe sub int ret addl pop lds fdivrp push push out pop cmp sarb dec inc (bad) shr sub jge mov sti popa adc xor in or call dec adc ss adc test lods dec push push mov aaa inc test xchg cwtl xchg sub cmp pop mov push push dec push sbb mov push ds xor lahf cmp gs loopne pop adc push push pop addr16 cmp out loop xor jmp cmp jecxz jnp adc mov and stos insl icebp sbb mov imul inc add and jbe sahf loope mov pop fist and ss cltd xchg arpl daa xchg xor je shrb dec cld add pop jecxz mov cmp out jno lahf jne enter fmuls xor push movsl les mov xchg into push cmc xchg outsb test subl push int imul lock aas jle out lds mov jbe mov ret adc add xor out (bad) cmp sarl mov repz stos or fdivp scas fcmovne shlb rorb lds jp push push mov test push dec in mov cmp jns jnp adc jecxz and outsl fidivl sbb jmp add pop fnsave sahf loope mov pop (bad) stc sbb mov push jae and mov repz in fcmovbe and fnsave jg cmp adc adc add xor inc sbb xor cmpsb clc lahf cli (bad) pop aas add stos or and jno,pt (bad) lods mov movsl and mov int3 cmp pop loope mov rcl sub xchg xchg or inc jge insl (bad) adc push stos leave pop notl dec out popl sti cmp jl ret adc (bad) push jb mov push adc dec add pop and and xchg daa adc sbb into cld sbb mov and loopne test fsubrs int iret jmp fs fwait ja or popa dec or inc inc cwtl out mov lret xor icebp punpckhdq xor gs xor out jne in mov repz in fcmovbe inc clc fnstsw in and (bad) push adc adc add adc inc inc mov sbb add clc lahf mov pop cmp dec inc fs sub mov add int (bad) fs xor out lar jge and imul aad les push sbb cmp mov rcrl ds pop mov push insb shrb pop and push lock aaa jne fdivs cmp mov xlat imul adc push mov and cld in xor jmp ret into insb jns adc mov xchg inc add repnz je mov sub push ja jbe nop scas mov fcomi or int3 xorl clc ss pushf and (bad) lret icebp push rcrl hlt jp push (bad) sub rolb sub or pop std inc (bad) outsb loope (bad) pop call aam inc dec inc sbb insl fs sub incb adc int out lar out popa in jge and imul aad push xchg dec les mov cmp loop std es add jle xchg push out adc xor (bad) mov and push jb mov jae xchg inc push mov nop enter mov jp imul clc jns xchg mov dec fidivr ja inc cmp test gs hlt pop les add loope das jmp cs or push cli movsl add mov add lahf xor pop test orl and out jnp jo mov je pop (bad) pop inc dec adc stos push dec ss daa or xchg xor cmp pop sbb (bad) sbb dec push sbb cmp lods aam scas xchg jno inc int3 sahf sarl rorl push pop pop inc and mov push xchg mov arpl fildl js dec jne push mov sub add insb pushf inc pusha lods std (bad) in add jle es out out xor (bad) mov and (bad) jb mov inc mov push nop enter cmc mov mov push scas clc jns xchg mov dec fsubrp push xor cmp test andl hlt cld les add fcmovnbe das jge inc loope cs push mov cli add dec xor jecxz or orl and nop sbb adc jbe adc mov jmp jo mov call cmc and cmp (bad) pop fcmovb sti mov icebp sub push mov repz dec fdivrl xor enter aaa pop (bad) loope add test cli clc adc or pop pop loop fcomp fiaddl cmc jnp push fistp jno adc lret mov inc dec or loop or (bad) dec sbb mov mov (bad) jb popa les adc adc sub xor int3 xchg xor pop lret pop xlat hlt push or add jg xor pop out pop fnop fldcw aas pavgb es pusha outsb roll xchg popf lcall xchg test idivl push inc out jbe mov push mov inc imul fiadd std and in sub jbe adc adc push das in jmp jo in mov (bad) xchg xchg dec rol and les mov sti sub in push icebp cmp dec fdivl dec xor enter aaa adc loope add test and adc cli pop loop fcomp pop add sub push ficompl jno adc out or jp lret mov or (bad) dec sahf lds test mov in cmp xchg add and xchg pop inc push and push inc inc pushf dec ret pop cmp mov ss test fisubrl fdivrl int3 les out mov pop dec cltd and sub xchg orl loop bound in mov or push inc jo push sub lret xchg arpl (bad) fsts lods bound cld repz sbb xlat stos pminsw fldenv aaa loope ret mov and stc or gs push jmp fstl dec fcomp test enter call and mov pop sub mov or fsubp jecxz lods test ret inc (bad) out pop addr16 xor add roll hlt (bad) dec cmp mov movsb data16 sub into in cmp or mov jnp push rcrb aas sahf mov mov dec xor pop inc xor push push addl hlt mov ss test fisubrl fdivrl int3 les sub dec out mov pop mov sub xchg xorl push shrb mov or push inc xchg jo xchg sub (bad) jmp or cld repz add (bad) jle ljmp xor loope pop jg mov mov cmp adc out xchg mov or rorl sbb xor inc mov mov (bad) mov ret mov movsb push lahf fdivs test add mov js adc add int3 je ror in cld pusha inc push flds xchg bnd jae mov test shlb hlt cmc data16 mov push lock clc ficompl sbb push xchg mov leave fld or push pop aas dec repz sbb xor add mov andl xchg (bad) push pop pop add inc divb add xor sub outsb call push pop push sub insb add cmp fldt aam shl pop out scas stos jg mov xchg inc dec lea xchg xchg fwait test jns fistpll cmp adc and and adc add push adc add add and add add or test add add add sbb add add add push add fimul add adc add add or push sldt sub add and add inc add add add add add add add add add add push or adc or adc or adc adc add adc adc push sbb add rcll add sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor inc xor add adc dec cs add or dec sub add add dec sub add add push sub add pop xor add add pop xor add push add add or pop cmp add or pusha cmp add push add adc arpl adc arpl adc arpl add add add push add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add and roll add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub je sub jne sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push inc add insl dec add outsb dec add outsl push add jo add jb add jne add jns add jnp rcll jg add andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov mov mov mov mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb lahf add movsl mov add test cmpsl add lods cmpsb add mov add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add lock add icebp lock repnz add repnz repz repz add cmc testb idiv add clc stc add stc cli add sti sti add cld cld add std std add std std add or or push add add or (bad) fldz out neg call adc adc or (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock stc std std movsb cmpsl xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg into mov mov mov (bad) xlat (bad) fsub loop out stc std std std std std std xchg mov mov mov mov mov enter mov rcl rcl rcl (bad) loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl sarl (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol rcl fldl mov (bad) pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div out out stc nop mov (bad) fcoml jle mov call div out out out not mov rcl or outsb outsb outsb imul div hlt out out call movsb mov test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe shr fcoml mov jb xor cmp loop jmp sub outsb js (bad) fdivrl test lcall xor mov call outsb outsb outsb imul jle test pop jb xor inc ds idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor cmp inc inc inc imul test mov mov mov xchg cltd cltd lcall cltd lcall lahf lahf lahf lahf lahf lahf lahf lahf pushf lcall cmpsl cmpsl stos mov add add add sub add sbb add xor add add or add add mov add add add add xor add xor xor add push add adc dec cmp add sub push cmp add add cmp fs adc fs sbb imul pop inc add sub pop inc sub inc inc add aaa add cmp add add cmp dec inc add xor push dec cmp add cmp bound add daa add add add and add sub imul imul jae add xor jp xor add cmp dec inc inc add inc add inc add inc add dec add dec add add push add inc add inc add dec add add dec add dec add dec add dec add add push add push add inc add dec add dec add dec add dec add push add push add pop add pop add push add push add push add pop add add add pop add add push add insl add outsb add ja andb andl add outsl dec add imul jo add jae add jbe add pop add ja add jp add jge add jge add jge add jge add jg add andl xchg subl xchg subl xchg pushf mov xchg test xchg mov lcall add xchg mov xchg mov xchg mov lcall add lea mov (bad) jns cmpsb xchg jns cmpsl xchg jle test jge lods cltd jg xchg lea add xchg mov lahf xchg mov popf lcall stos lcall lods fwait test scas popf xchg cmpsb xchg mov movsl cltd mov stos popf mov mov xchg mov mov mov fwait xchg add popf nop add mov xchg add movsb xchg add cmpsb sahf add movsl nop add cmpsb xchg add test add stos lcall stos cwtl add lods lcall cmpsb mov add stos movsl add lods movsl add lods test mov test mov mov add mov add mov add mov add mov add mov mov (bad) mov add mov add mov scas add mov mov sarb add mov mov mov add sarb enter enter into (bad) mov add mov int3 mov add leave lds ror lds ror leave add into int3 add ror add rcl add aad add (bad) rolb fcom aad fstp roll fcmovu (bad) add (bad) add fcmovu add (bad) add fstp add fstp add (bad) add loopne add loope add loop add in add in add out add call call add in ljmp out out add icebp icebp add repz add cmc testb stc stc add cld cld add add add adc adc or add add xor fwait int out clc cli repz lods push sbb adc push (bad) mov fsubp out repz sti std std std mov test xor mov fneni(8087 out repz sti std (bad) (bad) cmpsl jns dec xor jge mov (bad) fucom ljmp (bad) xchg insl inc cmp mov enter jecxz lock cld (bad) (bad) decb mov mov mov rcl fsubrp repz test mov mov xchg (bad) (bad) jle popaw inc ss (bad) movsl push jbe mov movsb mov inc cmp adc fldenv pushf arpl aaa sub cmp mov into mov mov cwtl lods mov repnz stc sti divl mov xchg push jae ret repnz cli sti sti sti cli cli stc call ret pop and push pop imul cli stc cmc cmc lret stos ret jbe and sub push pop mov cmc icebp in cmpsb mov pusha es adc push cmp cli hlt lock xlat test sub es or or adc sbb repnz xchg outsb sub pop jo cmpsb (bad) (bad) dec and xchg jne xchg pop sub mov shlb daa push lret pusha pop push jne bound shll add pop jns lock or mov imul pop and call es lret fs push push pop pop imul and scas (bad) sbb test sub pop pop inc adc push add jae or or sub push pop adc add cmp push and and sub and insl push daa daa daa daa daa push push daa daa daa daa sub push push push push pop pop pusha inc adc lahf xchg xchg lcall lcall cmpsl stos scas mov jb add roll add add add add add add add add add add add add add add add add add add add mov lcall mov xchg mov xchg stos xchg jnp mov xchg scas popf test mov mov mov mov mov popl mov mov inc add daa add pop xor add add (bad) gs add add pop xor add add adc push dec sbb je and add sbb dec add or insb dec push add sbb push and add ljmp je and outsl dec push add push and xchg add jae add sub add cmp add sbb push daa add xchg jnp add (bad) incl dec sub add xor jno sbb into int add xor nop jbe add jno cmp daa add xor rcrl add lods sahf xchg add (bad) incl hlt hlt testb jbe add dec push add jecxz add jbe add xchg mov jge cmp sub mov mov mov mov add (bad) add std incl out out icebp add or add in add (bad) lret jae add mov shrb add or pop adc dec xor add adc add add cmp add pop dec xor loop fild call jle add cwtl addb mov add cmp add push and andb xchg add and cwtl mov out out out add jmp add in in add cwtl jle mov mov sarb xor mov scas add adc xchg add mov testl lock out add lock lock aad add cwtl add iret leave add inc add mov push mov pushf add lret loopne aam in loope std cld incb mov mov add mov add andb mov mov jo push add sub xor and add and add inc cmp jae push add mov lods add fmul add inc add test mov mov stos add (bad) jbe popf mov jg add add dec add cmp cmp xor jecxz ret add fcmovne add xor add dec xor cwtl nop mov (bad) sarb sarb add lds add ror add in add in in ljmp add jnp add inc add push add mov mov lods add sarb fcmovnu fiaddl out out div testl cli sti sti add mov nop add jb pop push inc add movb rcl add lret leave add int3 leave add aad add loopne add ljmp stc cli stc add push add sbb add and sub and and adc add add add daa and pop push push add lods lods add iret into add out add hlt hlt add rol roll add loopne loop in out call in jno rcl rcl aad xlat fcomp fcmovu (bad) (bad) xor ret (bad) (bad) enter int3 int into iret (bad) mov mov mov mov (bad) xor stos stos lods lods scas scas mov mov xchg xchg xchg xchg cwtl cltd lcall mov mov xor xor nop xchg xchg xchg jns jnp jge jg addl insl outsb sub xor jae jne ja pop pop pop pop pusha popa bound fs dec dec dec dec push push push push push push push push pop pop pop pop cmp ds inc inc inc inc inc inc inc inc dec dec dec dec sub xor xor ss sub sbb and and es sub sub sub movups adc adc sbb sbb add roll or or or and add jp gs xor popf or add adc add inc add add orl orl test (bad) (bad) (bad) incl add add adc (bad) incl add add add xchg orl orl orl add add add add add add add jo inc add (bad) (bad) incl add add add xchg orl orl orl add add add add add add mov (bad) (bad) incl add add add xchg orl orl orl add add add add add add add pusha push inc add (bad) (bad) incl add add add (bad) (bad) (bad) incl add add inc add pop inc add dec add inc add inc add add inc add mov add inc add and fs add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor cmp mov mov mov mov mov mov mov mov mov mov mov jne mov push push call jmp mov mov mov push push call fnclex cmp jge mov push push push push call jmp mov mov test jne push push call mov mov push push call fnclex test jge push push push push call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov push push push lea push call add push call lea call lea call call mov mov lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov mov lea lea call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call mov lea lea mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call call lea lea mov mov call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call cmpw je push push push call mov push add jo push push push push push push call mov add push push push call push push call push push call mov mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov lea push push mov call fnclex test jge push push push push call mov test je cmpw jne mov mov mov sub cmp jb call mov lea jmp call mov mov mov mov lea call mov cmp jne push push call test je lea lea movl movl call lea mov movl mov call mov push push push call push push call push push call push push push push push push mov call mov lea call push push call mov neg sbb inc lea neg call test jne mov cmp jle push lea push lea push movl mov call mov mov call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov lea lea mov mov call mov push push call push push call mov mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push push mov call push push call mov call mov push lea push mov call push call mov mov test jne push push call mov push lea push call push push lea push call push call add push jmp lea call lea call lea call ret mov lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret call nop nop sahf sahf sahf sahf jl or (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or add add jle or mov or cmpsb mov or enter fsubs or mulb or and or xor or push mov or je or jle or mov or mov mov or call mov add push mov or inc mov or pusha mov or enter xchg mov or popa add xorb or shlb or repnz or push mov or cmp add push mov or imul or nop mov add stos mov or shlb add mov or add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add pop pop jbe popa push popa jb imul popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor jae pop pop jbe popa inc jns fs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add pop pop jbe popa push je inc insl jo or pop pop jbe popa push jne dec ja gs add jns pop pop jbe popa inc jns xor add pop pop jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add pop pop jbe popa push gs jb add mov pop popa fs data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add lods add fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add add jbe popa dec popa je dec gs inc popa insb insb add pop add jbe popa push popa jb outsl jo add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound 