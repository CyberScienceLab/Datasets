push mov push lea push mov call movl mov pop pop ret int3 int3 int3 int3 movl jmp int3 int3 int3 int3 int3 push mov push mov movl call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl ret int3 int3 movl movl mov test je mov test je mov mov ret int3 int3 mov cmp je mov test je mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test jne ret mov ret int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov add push push lea push call movl movl jmp mov add mov cmpl jge sub mov mov lea call mov sub mov mov lea call mov lea push call mov movb lea call sub mov mov lea call mov sub mov mov lea call mov lea lea call sub mov mov mov mov call mov lea push call call movb lea call jmp sub mov mov lea call mov sub mov mov lea call mov lea call mov movb mov mov mov mov lea call add mov movl push mov sub mov call add mov mov mov mov mov mov lea jmp dec dec dec dec movl movb lea call movl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push lea mov addb lea mov lea mov lea mov lea mov lea mov call mov mov push push push push call push push push push call mov call mov call push push call mov push push mov push lea push call test je mov lea mov lea push push push call test jne lea push call lea push call push push push lea push call test jne mov pop pop pop mov pop ret int3 push mov sub push mov push push movl movl movl movl movl mov call push push mov call mov mov push push movl movl movl call lea push mov call pop mov pop ret int3 int3 int3 int3 int3 int3 mov call mov ret push mov and sub mov xor mov mov mov sub push mov je sub je sub je mov mov push push push push call pop mov xor call mov pop ret mov movzwl sub je dec je mov push push push push call pop mov xor call mov pop ret push call xor pop mov xor call mov pop ret mov push push push push push call xor pop mov xor call mov pop ret lea push push call lea push push call xor pop mov xor call mov pop ret push call mov pop xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub je dec jne mov cmp je cmp je xor pop ret mov movzwl push push call mov pop ret int3 int3 int3 int3 push mov call mov push call add movl pop ret int3 int3 int3 int3 int3 mov mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add mov movl mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 push mov sub lea call mov xor test je mov test je mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov mov mov pop ret mov mov mov mov pop ret mov mov mov mov pop ret int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl mov test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push xor cmp je lea cmp je dec mov jne mov cmp jne push mov cmp jbe lea mov dec cmp lea je mov push call add cmp ja mov pop cmp je push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push call add movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test je push call add movl movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 mov test je dec mov jne movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl movl test je mov mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov movl movl test je mov test je mov mov mov mov pop ret mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov mov mov push push push push call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push mov xor push lea mov mov xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov mov push sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov mov pop pop pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push sub mov mov mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub xor test je cmp ja push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push xor push mov call add cmp je mov xor mov xor mov mov mov mov mov mov mov mov pop mov pop ret lea push lea mov call push lea push movl call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov mov mov ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov movl call mov xor test je mov test je mov mov mov push mov push mov push sub mov mov movl movl test je mov test je mov mov push mov call mov mov pop pop pop pop mov pop ret mov call push push call int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov xor sub mov mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov lea mov call sub mov mov mov mov mov cmp je mov cmp je mov mov mov push mov call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov call mov mov mov sub mov lea lea mov call mov cmp sete test jne shr cmp ja movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov add testb mov jne mov add shr cmp ja call mov test jne mov shl mov dec mov shr cmpl jne push call add test je mov mov mov mov and add je mov mov mov mov add sub mov mov jmp lea push lea movl call push lea push movl call mov mov cmp jae lea mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl jmp lea lea lea call cmp sete test jne mov xor test je mov test je mov lea test jne xor jmp mov mov mov shr and cmp ja sub mov mov mov add mov add mov test jne add shr cmp ja call mov mov add mov mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov mov and add je mov mov mov add sub mov jmp lea push lea movl call push lea push movl call mov mov cmp jae lea mov call cmp jb push push call sub mov mov mov call mov sub mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov xor mov mov mov mov xor mov cmp je mov cmp je mov mov mov xor cmp je mov cmp je mov mov mov push sub mov mov mov mov cmp je mov cmp je mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov push call mov mov pop pop pop pop mov pop ret mov call xor push push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push call add test jne mov lea push lea call push lea push movl call mov pop ret int3 int3 int3 int3 push mov sub push mov testb push jne mov add shr cmp ja call mov test jne mov shl mov dec push mov shr cmpl jne push call add test je mov mov mov mov and add pop je mov mov mov incl mov pop pop mov pop ret lea push lea movl call push lea push movl call int3 mov test je incl push mov shl cmp pop ja movl dec mov jne movl ret int3 int3 int3 int3 push mov sub push mov mov mov add push test jne add shr cmp ja call mov add mov push mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov and add pop je mov mov mov incl pop pop mov pop ret lea push lea movl call push lea push movl call int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor test je mov test je mov mov add movl movl mov test je mov test je mov mov pop ret int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov xor test je mov test je mov mov dec test jne xor jmp mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov mov mov ret int3 push mov sub mov mov sub movl cmp jae push call mov shr cmp jae mov jmp cmp jbe mov sub cmp ja mov mov push push mov xor shr add mov mov cmp jbe cmp ja lea push call add mov cmp je mov mov add add lea lea sub add sar add add push push mov mov lea push call mov add mov add cmp ja sar mov mov mov add add push push push mov call mov add add sub je mov xor mov rep mov test je mov mov jmp lea mov sar add add push push push call mov lea sub add mov sar add add push push push call mov add lea test je xor rep mov pop pop test je push call add mov mov add mov mov pop ret lea push lea mov call push lea push movl call int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test jne xor jmp mov mov mov and push mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push push sub mov movl movl mov mov test je mov test je mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret int3 int3 push mov sub lea call mov mov xor cmp setne mov pop ret push mov and mov sub test je mov test je mov test jne xor jmp mov mov push mov push test je mov test je mov test jne xor jmp mov mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov cmp je cmp je mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov mov test je mov test je mov test jne xor jmp mov pushl push push push push push call mov mov mov sub add add mov mov movl movl mov test je mov test je mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub xor test je cmp ja lea push call add test jne lea push lea movl call push lea push movl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov lea mov call mov mov sub mov mov mov mov cmp je shr cmp ja movl cmp je testb mov mov jne mov add shr cmp ja call mov test jne mov shl mov dec mov shr cmpl jne push call add test je mov mov mov mov and add je mov mov mov incl inc mov mov jmp lea push lea movl call push lea push movl call mov mov cmp jae mov call cmp jb push push call mov sub sub mov mov mov push lea mov call mov mov call sub mov mov mov call call mov add mov mov push mov push lea mov call mov lea call mov mov call sub mov mov mov push lea mov call mov mov call sub mov mov mov call lea jmp movl lea cmp je mov mov mov add mov test jne add shr cmp ja call mov add mov mov shr cmp ja sub mov cmpl jne push call add test je mov mov mov and add je mov mov mov incl inc mov jmp lea push lea movl call push lea push movl call mov mov cmp jae jmp lea mov call cmp jb push push call sub mov mov mov call mov sub mov mov push lea mov call mov mov call mov sub mov mov push lea mov call mov mov call lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea call mov mov cmp sete mov pop ret push mov mov test jne mov mov mov pop ret mov mov mov mov pop ret push mov mov mov push push push cmp je dec mov cmp je mov mov mov shr and cmp ja sub mov mov and mov mov shr cmp ja sub mov mov mov add mov mov mov mov mov mov mov mov inc mov cmp jne pop pop pop pop ret push mov push mov mov mov push mov push mov push mov push push push call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub pop ret int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov sub mov mov test je mov mov mov sub dec cmp jae push call mov mov sub add sub cmp jae mov shr or sub cmp jae movl mov jmp add mov cmp jae mov mov push lea call mov movl mov mov sub push push push mov call add add push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov sub push push push call mov mov mov sub add add test je push call add mov add lea mov mov mov mov mov pop pop pop pop mov pop ret mov push call add push push call push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov call mov mov lea cmp je cmp je push mov call mov add add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov sub push sar lea mov push push push call add add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push xor mov rep pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov test jne mov mov mov ret mov mov mov mov ret int3 int3 int3 int3 int3 int3 mov movl movl test je mov test je mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov or shr sub cmp pop jae xor jmp add cmp jae mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp setne ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 decl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov and push mov mov mov shr push push cmp ja sub mov mov mov mov shr and cmp ja sub mov mov mov mov mov add mov add mov pop mov pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov push push mov sub mov sub mov mov mov cmp jbe mov mov test je mov cltd idiv mov mov test jne mov cmp jge test jle jmp mov mov mov add mov add mov mov cmp jne lea mov mov jmp mov lea mov mov mov mov jmp mov mov mov mov shr and cmp ja sub mov and mov mov mov shr cmp ja sub mov mov mov add mov mov mov add mov mov mov mov mov mov mov sub mov cmp jge mov add mov mov lea jmp mov mov sub add mov mov mov lea mov mov cmp jne mov dec mov test jg pop pop pop mov pop ret push mov mov mov sub add pop ret int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 push mov push mov push xor push test je mov test je mov mov mov xor test je mov test je mov mov mov push sub mov mov movl movl test je mov test je mov mov sub mov mov mov movl movl test je mov test je mov mov mov mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je cmp je push mov call add sub lea pop pop ret pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push mov mov add dec jne pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov and push mov mov mov shr cmp ja sub mov mov add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sub ret int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov mov sub add pop ret int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov push sub xor mov mov mov mov mov cmp je mov cmp je mov mov mov mov sub mov mov mov mov mov cmp je mov cmp je mov mov mov mov mov call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub pop ret int3 int3 int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov push push push call add add pop pop ret int3 int3 int3 int3 int3 push mov push mov mov pop ret int3 int3 int3 int3 int3 push mov push mov cmp je push push mov mov test jne xor jmp mov mov mov mov shr and cmp ja sub test je mov mov mov mov inc inc mov cmp jne pop pop pop pop ret int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov sub mov sub mov mov mov mov test je cltd idiv mov mov test jne mov mov cmp jge test jle mov neg mov mov neg mov mov neg lea mov mov jmp nop mov lea mov cmp jne mov mov neg movzbl mov movzbl mov mov mov lea mov mov cmp jge add add jmp sub mov add sub add add add mov mov cmp jne mov dec dec mov mov test jg pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub add pop ret int3 int3 int3 int3 int3 int3 add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 incl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov pop ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov ret int3 int3 int3 int3 int3 int3 int3 push mov mov lea lea mov inc test jne sub pop ret int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov mov movsbl mov push push push call add pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 push mov mov movzbl pop ret int3 int3 int3 int3 int3 push mov mov mov mov xor cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push mov call movl mov pop pop ret int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov call movl mov pop pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov lea push mov mov call mov mov mov movl mov mov pop pop ret ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov push mov push mov mov lea push mov mov call mov pop mov movl mov pop pop mov pop ret int3 int3 push mov and mov and sub mov mov and push push je cmpb je push push call mov test je call mov lea push lea movl call push lea push mov mov movl call test je call lea push lea mov movl call push lea push mov mov movl call call lea push lea mov movl call push lea push mov mov movl call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 testb mov setne ret int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov call movl mov mov mov pop mov movl mov pop pop ret push mov push push mov push mov call movl mov mov mov pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov push push mov call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call pop mov pop pop ret int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call mov pop ret int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov push mov movl call mov mov mov xor test jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call movl call mov mov pop pop mov pop ret int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret mov mov mov mov ret int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test jne or ret mov shr xor test je mov mov mov shr test je mov add mov shr test je mov add mov shr test je mov add test je inc ret int3 int3 mov shl mov test je mov mov mov shl test je mov sub mov shl test je mov sub lea test je mov sub test je dec ret int3 int3 int3 int3 int3 push mov push mov cmp jb xor pop pop ret movzbl mov inc and push cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov and shl inc or cmp jb cmp jae movzbl mov shl inc or cmp jae mov pop mov pop pop ret pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or mov cmp jae shr mov add ret mov shr or mov cmp jae shr mov add ret mov shr or mov cmp jae shr mov add ret mov shr or mov shr mov add ret int3 int3 int3 int3 int3 int3 int3 int3 mov cmp ja push push call ret push sub push call ret int3 int3 int3 int3 int3 cmpl jne xor ret cmpl jb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 mov push call pop ret int3 int3 push mov push mov push xor lea mov cmp ja sub push mov cmp jne add add cmp jbe mov pop cmp ja mov xor call sar add pop mov pop ret cmp jae mov cmp jne inc inc cmp jb mov pop mov pop ret int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov mov ret int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 imul shr ret int3 int3 int3 int3 int3 int3 int3 mov imul shr ret int3 int3 int3 int3 int3 mov mul shr lea ret int3 push mov push push mov movl sub mov mov dec inc test jg pop mov pop ret push mov mov sub cmp jge lea mov mov mov mov mov sub add add sub mov sub cmp jl test jle lea shr inc mov mov mov mov add add dec jne pop ret int3 int3 int3 push mov push mov lea cmp jge add add mov inc cmpb je cmp jg mov mov mov mov mov mov mov mov lea pop pop ret push mov xor inc test jle mov sar inc inc test jg sub add add mov pop push push push call add lea pop pop ret int3 int3 int3 int3 push mov push push mov movl cmp jge cmp jae add mov shr add and sub or mov or mov mov add pop mov pop ret add add sub or mov mov add pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push push push mov xor push lea mov mov xor mov cmp jl lea shr mov neg shl add mov lea test je and push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call test je and push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call test je and push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov movb mov add decl mov jne mov cmp jle test je and call test je and call test je and call mov mov subl movb mov lea jmp mov test je and call test jns and call test je call mov mov cmp jge cmp jae add mov shr add and sub or or lea mov mov inc mov mov pop pop pop mov pop ret add add sub or mov lea mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push lea push lea movl call add test je mov mov mov mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push lea mov mov xor mov mov mov mov lea cmp jae add cmp jb lea test je push push lea movl mov mov call movl mov lea mov call movl test je and mov call movl test je and cmpl jb mov push call add cmp jbe push push lea movl movl movb call or or movl lea mov call movl test je and mov call movl test je cmpl jb mov push call add movl movl movb cmp ja mov jmp mov cmpl jne push call mov add mov mov mov mov lea push push push mov call add mov mov mov pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov mov mov xor mov mov mov mov cmp jbe movl mov test je and mov call lea test je push push lea movl movl movb call or or movl lea mov call movl test je and mov call movl test je and cmpl mov jb mov push call add test jne or jmp mov shr xor test je mov mov mov shr test je mov add mov shr test je mov add mov shr test je mov add shr je inc mov sub mov test je and mov call mov mov lea mov mov cmp jb mov inc imul mov shr mov lea test je and mov call movl mov lea mov mov mov mov test je and mov push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov inc shr mov mov add mov add mov cmp ja mov mov mov imul shr mov mov mov movzwl add mov test je and mov push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call test jns and mov push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov mov mov sub mov mov cmp jne test je and mov call mov mov sub lea cmp jge mov add add mov inc cmp jg mov mov mov mov mov mov mov mov add mov jmp mov xor lea test jle lea mov sar inc inc test jg sub add add mov mov push push push call add add mov jmp lea mov mov mov add test je and mov push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov lea xor cmp ja mov add sub lea mov cmp jne add add cmp jbe cmp jae lea mov mov cmp jne inc inc cmp jb mov sub add add testl je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov push push push call mov mov mov add add mov cmp jae testl je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call testl je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov mov imul sub mov shr testl lea mov je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call testl je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je or cmpl jne or push push call mov mov mov imul shr movzwl add testl mov mov mov mov je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call testl je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov cmp je mov test je and mov call test je and mov call mov mov mov imul mov shr inc mov mov mov jmp cmp ja mov mov mov xor mov shl mov test je mov mov mov shl test je mov sub mov shl test je mov sub lea test je mov sub add je dec sar add jmp mov mov cmp jae sub lea cmp jge mov add add push mov inc push push call add lea jmp mov xor lea test jle mov sar inc inc test jg sub push add add push push mov call add lea jmp mov mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 mov xor mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push call ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push xor mov mov lea mov mov mov mov lea push call cmpl je mov mov mov mov mov push call movzbl and mov shl or cmp jb add cmp jb pop xor pop mov pop ret pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov cmp jne mov mov mov mov push call mov mov mov lea push call mov mov test jne movb xor mov pop ret add mov movzbl push movzwl push mov shr inc sub mov cmp jae push lea push push call mov mov mov mov add push call movl jmp lea mov mov mov mov lea push call mov test je mov sub mov cmp lea jb lea mov push push lea push call mov mov mov add push add call cmp jb mov lea lea mov pop mov mov pop mov pop ret pop xor pop mov pop ret cmp jae push push lea push call mov mov mov mov add push call lea pop mov movl mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov xor mov mov mov mov mov lea push mov call movl mov mov mov push mov call mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push sub mov xor mov push push push push lea mov mov movl mov mov mov mov mov call mov cmp jae mov lea jmp mov lea call mov mov mov lea sub push push mov call xor mov mov mov mov mov cmp jbe jmp jmp lea mov xor mov mov lea push mov call testb mov je andl push mov movl call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add cmp je mov or cmp jne or push push call call push mov movb call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add cmp je mov or cmp jne or push push call mov testb je andl cmpl jb mov push call add cmpl mov ja lea mov mov movl cmp jb mov jmp cmpl jne push call add mov mov mov push push push call mov mov add push mov call jmp lea mov mov mov lea push mov call mov sub cmp mov lea jb lea mov push push mov lea push call mov mov mov add push add call cmp jb testb je andl call mov mov testb mov je andl push mov movb call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call call push mov movb call mov mov xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call push lea lea call mov mov mul shr cmpl lea jne push call add mov mov mov mov mov push push call mov mov mov mov push push push mov mov call mov mov mov mov add sub push push call mov mov mov mov add sub push call cmpl ja mov push call mov push call mov push call mov add mov mov pop pop pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add mov pop ret mov xor cmp sete ret int3 int3 int3 int3 mov push mov sub cmp jae xor pop ret push push push call add add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push cmp ja cmpl jb mov sub cmp jb mov mov mov mov mov mov mov mov add mov mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push mov sub lea sub movl cmp ja pop xor pop mov pop ret cmp ja cmp jb cmp jb mov sub mov mov mov mov mov mov mov mov mov add mov pop mov pop mov pop ret lea cmp jb mov sub mov mov call mov add mov pop mov pop mov pop ret cmp jb mov sub mov mov sub lea mov mov dec inc test jg mov add mov pop mov pop mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov mov movl mov mov lea push lea call add mov mov pop mov pop ret push mov sub mov mov mov push lea call add mov pop ret int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov lea add push movl call add test jne xor mov mov pop pop pop pop mov pop ret mov mov mov xor xor add adc mov jne cmp ja cmp ja push push mov call jmp sub push push mov call cmp jne xor jmp cmpl jb mov mov mov mov movl mov mov movl mov mov lea push lea call add mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov xor cmp sete ret int3 int3 int3 int3 int3 add mov cmp sbb inc ret int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 add mov cmp sbb inc ret int3 int3 int3 int3 push mov push push mov push sub push mov xor push lea mov mov movl mov mov xor lea mov push lea mov call add mov mov pop pop mov pop ret int3 int3 int3 push mov push push mov push sub mov xor push lea mov mov movl mov mov movl movl mov lea lea movb call mov mov sub mov mov mov pop mov pop ret int3 int3 push mov push push mov push sub push push mov xor push lea mov mov mov mov mul shr lea cmp ja push push mov call jmp sub push push mov call cmpl jne xor jmp cmpl jb mov jmp mov mov movl mov mov movl movl mov lea lea movb call mov movl mov sub movl movl cmp ja push push mov call mov mov mov pop pop pop mov pop ret mov sub push push mov call mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov mov push mov mov push movl movl movb lea mov inc test jne sub push push mov call pop mov pop pop ret int3 int3 int3 int3 int3 int3 push mov cmpl jb mov push call add movl movl movb pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl mov jb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl jb mov ret int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp ja push push call ret push sub push call ret int3 int3 int3 int3 int3 xor cmp sete ret int3 int3 int3 int3 int3 int3 int3 push mov call mov call mov ret int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov mov xor mov mov cmp je mov mov call mov mov mov cmp jne mov cmp je mov call mov mov cmp sete mov mov mov test jne lea jmp movb mov mov cmpl je mov cmpl jle decl mov mov lea mov mov mov movzbl jmp movzbl mov push mov call cmp jne lea mov jmp mov mov mov add mov or cmpl jne or mov push push call mov mov ret mov mov mov mov add test je mov or cmpl jne or push push call movl call test jne mov call movl mov mov mov test je mov mov call mov mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov mov mov push xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call pop mov pop ret int3 push mov mov test je mov or cmpl jne or mov push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push lea lea mov inc test jne sub push push call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp ja push push call ret push sub push call ret int3 int3 int3 int3 int3 push mov cmpb push push mov mov je cmpl jb push mov test je push push push call add push call add pop mov movl movb pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmpl jb mov ret int3 int3 int3 int3 int3 mov cmpl jb mov ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl mov jne or mov push push call pop ret int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmpl je mov cmpl jle decl mov mov push lea mov mov movzbl pop ret mov mov movzbl push call ret mov cmpl je mov mov cltd ret xor cltd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov mov mov mov mov test je mov mov call movl mov mov cmpl jne mov test je mov call mov mov cmpl mov sete mov mov mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push push mov xor push lea mov mov movl call test jne mov call movl mov mov mov mov test je mov mov mov call mov mov pop pop mov pop ret int3 int3 xor cmp setne dec ret int3 int3 int3 int3 int3 int3 push mov push mov push mov mov or sub cmp ja push call test je push lea cmp jbe push call mov cmp jae push push mov call test je mov cmp jne cmpl jb mov mov mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov mov mov jmp cmpl jb mov jmp mov movsbl push push add push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 push mov push mov push mov test je mov cmp jb mov jmp mov cmp jb cmp jb mov jmp mov mov add cmp jbe cmp jb mov mov push sub push push mov call pop pop pop ret mov mov push sub push push mov call pop pop pop ret push mov cmp jbe push call mov cmp jae mov push push mov call test je cmpl jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov push cmp jae push call mov sub cmp jae mov test je mov push cmp jb mov jmp mov cmp jb mov jmp mov sub add push add add push push call mov add sub cmpl mov pop jb mov movb pop mov pop pop ret mov movb pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl mov mov jb mov movb pop ret int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 push mov push push mov push push push push push mov xor push lea mov mov mov movl mov mov testb je xor testb jne mov mov mov mov call cmp jne mov mov mov add test je mov or cmpl jne or push push call mov mov pop pop pop pop mov pop ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov decl mov mov lea mov ret push mov mov mov mov pop ret int3 int3 mov mov mov mov test je mov mov call mov ret int3 int3 int3 int3 int3 int3 int3 mov mov mov mov test je mov mov mov jmp ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov push mov cmp jae push call mov sub cmp jae mov cmp jne push add push mov call push push mov call pop mov pop pop pop ret cmp jbe push call mov cmp jae mov push push mov call mov test je mov cmp jb mov cmp jb mov jmp test jne mov cmp jb mov pop movb mov pop pop pop ret pop mov pop movb pop pop ret mov push add push push call add cmpl mov jb mov movb pop mov pop pop pop ret mov movb pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jne cmpl jb mov mov mov mov pop ret cmpl jb mov add push movsbl push push call add pop ret int3 int3 push mov push mov push mov cmp jbe push call mov cmp jae mov push push call xor cmp sbb pop neg pop pop ret cmpb je cmp jae push mov cmp jae mov cmp jb mov test je push push push call add push call mov add mov movl xor movb cmp pop sbb pop neg pop pop ret test jne mov cmp jb mov movb xor cmp sbb pop neg pop pop ret int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov jmp mov cmp jb cmp jb mov jmp mov mov add cmp jbe mov pop pop ret xor pop pop ret int3 push call int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov or cmp jbe mov jmp mov mov mul mov shr shr cmp jbe mov sub lea cmp jbe mov xor lea mov cmp jbe cmp ja push call add test je mov jmp lea push lea movl call push lea push movl call mov mov mov inc mov push add movb call mov mov ret mov mov mov test je cmpl jb mov jmp mov push push mov push call add cmpl jb mov push call add mov movb mov mov mov cmp jb mov movb mov mov pop pop pop pop mov pop ret mov cmpl jb mov push call add push movl movl push movb call int3 int3 int3 int3 int3 int3 int3 push mov push push mov push sub push push push mov xor push lea mov mov mov mov mov mov mov mov mov mov movl mov test jl jg test je mov cmp jbe sub mov mov mov jmp movl mov mov movl test je mov mov mov call movl mov mov cmpl jne mov test je mov call mov mov cmpl sete mov movl test jne mov jmp movb mov and cmp je test je mov mov mov mov mov cmpl je mov cmpl jle decl mov mov lea mov mov mov movzbl jmp mov movzbl push mov call cmp jne orl cmpl jne cmpl jb mov jmp dec mov jmp mov mov mov mov mov xor push pushl push mov call cmp jne cmp je movl mov mov xor mov mov movl mov mov mov add test je mov or cmpl jne or push push call movl call mov test jne mov call movl mov mov mov test je mov mov call mov mov mov pop pop pop pop mov pop ret mov test je mov mov mov mov mov cmpl je mov cmpl jle decl mov mov lea mov mov movzbl jmp mov movzbl push mov call cmp jne orl jmp dec jmp mov mov mov add mov or cmpl jne or push push call movl mov ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp jb mov ret int3 int3 int3 int3 int3 int3 int3 push mov and push push mov push sub mov xor mov push push push mov xor push lea mov mov mov xor mov mov mov mov mov mov mov lea push lea call test jne movl mov mov mov mov push call xor jmp mov cmp ja mov add push lea mov call cmpb je mov cmp jne mov jmp xor movl mov mov mov mov push call mov mov mov pop pop pop pop mov xor call mov pop ret push mov push push mov push sub mov xor mov push push push lea mov mov xor mov mov mov mov mov lea mov push lea mov call test jne movl mov mov mov mov push call xor jmp mov cmp ja mov push lea call cmp je mov cmp jne mov movl mov mov mov mov push call mov mov mov pop pop pop mov xor call mov pop ret push mov mov mov mov push mov push mov push call pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov add push mov call cmpb pop je mov cmp jne mov pop ret xor pop ret int3 mov push mov call cmpb je mov cmp jne mov ret xor ret push mov sub mov push mov sub movl cmp jge mov call test je mov push mov mov inc test jne mov movzbl mov shr inc cmp ja mov sub cmp jb mov sub cmp jb mov mov mov mov mov mov mov mov add testb mov je andl call add mov sub cmp jge mov mov call test je mov jmp cmp jb lea mov and inc add mov sub mov cmp jae mov mov mov sub mov cmp jb push push push call mov mov mov add mov mov mov sub mov mov add push call mov mov mov lea push call mov mov mov mov test je mov lea mov cmp jb mov mov sub mov cmp jb push push push call mov mov add add mov jmp movzbl movzwl mov shr mov and movzbl and add mov push add call test jne pop pop mov pop ret int3 int3 int3 push mov sub push mov push mov movl mov mov sub cmp jge call test je mov push mov inc test jne movzbl shr inc cmp jb lea mov and inc add mov sub cmp jae mov add mov cmp ja mov sub mov mov mov push call mov mov mov lea push call mov mov test je mov lea mov cmp jb add mov cmp ja add jmp movzbl movzwl mov mov mov shr add mov and mov and lea mov cmp jbe movzbl add cmp mov setbe test je mov sub cmp jge mov call test je mov jmp pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub add pop ret movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov cmp je push mov push push push call add add pop pop pop ret mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov andl movl movb ret mov push mov mov mov movl mov mov movb pop ret mov test jne mov ret mov push mov cmpl push mov je push pushl call lea push call pop pop mov test je pushl push push call add movb pop pop pop ret mov push mov cmpb je pushl call pop andl movb pop ret mov push mov mov push mov andl movl movb pushl call mov pop pop ret mov push mov push mov push mov cmp je call cmpb je pushl mov call jmp mov mov mov pop pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov andl movl movb call mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop mov inc add addl test and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea xchg add add add add add add add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov test mov inc add test mov pop pop leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop inc test test mov add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea loopne inc add test lock clc test add inc add xchg and mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov cmp inc add add add inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov pop jmp mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov push push push lea push mov movl call movl mov pop leave ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov mov jne orl push lea push mov movl call push mov call pop push lea call push lea push mov call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp je xor ret mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret push push call lea push call xor cmp jne push push push push call mov cmp je mov jmp mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov call test jne push call pop call test jne push call pop call mov call test jns push call pop call mov call mov call test jns push call pop call test jns push call pop push call pop cmp je push call pop call testb je movzwl jmp push pop push push push push call mov cmp jne push call call jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov call ret call jmp call test je push call pop testb je push push push call add push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov pop jmp mov push mov pop jmp pushl call test je call push call push push call add jmp mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne mov jmp mov sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret mov push mov cmpl jne call push call push call pop pop mov test jne inc push push pushl call pop ret mov push mov push mov cmp ja push push cmpl jne call push call push call pop pop test je mov jmp xor inc push push pushl call mov test jne push pop cmp je push call pop test jne jmp call mov call mov mov pop pop jmp push call pop call movl xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov cmpl je pushl push pushl call test jne push call mov call push call pop mov pop pop ret push mov and test jne mov and shr je jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqa movdqa lea lea dec jne and je mov shr je mov mov lea lea dec jne mov and je mov mov inc inc dec jne pop pop pop pop ret mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push call mov xor ret mov push mov cmpl je pushl pushl pushl pushl pushl call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test je lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp mov push mov push push push mov push pushl call pushl mov mov call mov cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call mov pushl mov call mov add push call mov mov jmp xor pop pop pop leave ret mov push push push call pop pop mov push call mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov mov mov pop ret mov push mov push push call pop pushl call pushl mov call push mov call pop mov pop pop ret push call pop ret pushl call ret mov push mov pushl call test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push call mov push call push call push call push call push call push call add pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push push push call mov mov pop mov cmp jae mov test je call add cmp jb cmpl pop pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl mov call mov mov test je pushl call mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call cmp jne cmp je mov mov mov mov mov mov jmp movl cmpl jae mov mov test je call addl jmp movl cmpl jae mov mov test je call addl jmp movl call cmpl jne movl push call pop pushl call cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push mov call pushl call pop push call int3 mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret mov push mov sub mov xor mov push push mov push push call mov xor pop mov cmp je push call pop cmp je push call pop test jne cmpl je cmp je push push mov push call add test jne push mov push push mov call mov test jne push push push call add test je xor push push push push push call push call inc pop cmp jbe push call lea mov sub push sar push sub push push call add test jne push mov push push call add test jne pushl push push call add test jne push push push call add jmp push push push push push jmp push call mov cmp je cmp je xor mov mov cmp je inc cmp jb push lea push lea push mov call pop push lea push push call mov pop pop xor pop call leave ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret mov push cmp je add lea cmp jb add pop cmp jae cmp je xor ret mov push mov push call mov test je mov mov mov push cmp je add lea cmp jb add cmp jae cmp je xor test je mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov push mov mov mov cmp jne push pop mov andl add cmp jl mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call pop mov pop or pop pop pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call cmpb pop lea je push push call pop pop mov test je push push push call add test jne add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp xor push push push push push call int3 mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov sub push push call mov xor cmp jne xor jmp cmp je add cmp jne add cmp jne push mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov push call mov jmp push call xor pop pop pop leave ret mov push mov sub push lea push call push push pop push call pop pop xor cmp jne or jmp lea mov mov cmp jae add orl movw mov movw movb mov mov mov add lea add cmp jb push push cmp je mov cmp je mov add mov add mov mov cmp jl mov cmp jge mov push push call pop pop test je addl lea mov cmp jae add orl andl andb andl movw movw movb mov add add lea cmp jb add cmp jl jmp mov xor test jle mov mov cmp je cmp je mov mov test je test jne push call test je mov and mov sar shl add mov mov mov mov mov mov push lea push call test je incl addl inc incl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp lea neg sbb add push call mov cmp je test je push call test je and mov cmp jne orb jmp cmp jne orb push lea push call test je incl jmp orb movl inc cmp jl pushl call xor pop pop pop leave ret or jmp mov push push mov mov test je lea cmp jae lea cmpl je push call mov add add lea cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret push call ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call mov push pushl call mov pop ret mov push mov pushl pushl pushl call call pop ret mov cmp je push pushl call call orl mov cmp je push call orl jmp push push call push call mov movl andl xor inc mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call call pushl call mov cmp je push push call pop ret jmp jmp mov push push call mov test jne call xor pop ret push mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl mov call pushl mov call pushl mov call pushl mov call mov call test je mov push pushl call call mov cmp je push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret push push push call xor test setne mov mov ret pushl call andl ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test js jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov or shl or mov not mov pop pop pop leave ret mov push mov mov mov pop ret mov push mov sub mov xor mov push mov push cmp je push call pop andl push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov mov mov mov mov mov mov call push mov call lea push call test jne test jne cmp je push call pop mov pop xor pop call leave ret mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push push mov push push call add push call push call pop ret mov push mov pushl pushl pushl pushl pushl call int3 mov push mov pushl call test je pop jmp pushl pushl pushl pushl pushl call int3 xor push push push push push call add ret xor push push push push push push call push mov push push call add push call push call int3 mov push mov pop jmp mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov mov cmp je add jmp mov add mov imul add lea cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov movl call cmpl jne mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl call or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call pop lea mov jmp mov sub je sub je dec je call movl call jmp mov mov jmp mov mov jmp mov mov movl push call mov xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov sub mov xor mov cmpl mov push push push mov mov jne andl push lea mov push pushl pushl push call mov add test jne call cmp jne push push pushl pushl pushl call add mov test je inc push push call mov pop pop test je pushl mov push pushl pushl pushl call mov add test je push push call mov xor pop pop cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test jne cmp je push call pop xor jmp push push push push push call cmpl jne mov xor push push pushl mov pushl call mov test je push push call pop pop mov test je push push pushl pushl call test jne pushl call andl pop jmp cmpl jne andl push lea push mov or push pushl call test je mov mov jmp mov push mov mov mov pop ret andl ret mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push push xor mov cmpl jne lea mov push pushl add call test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl add inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne cmpb jne inc inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov mov cmp jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete lea jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne lea mov pop pop pop ret xchg inc add mov inc add inc add inc add inc add inc add inc add not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne add pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test jne push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je mov test je mov mov pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test je sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub andl andl mov and and push lea push push lea push pushl call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test je mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov test jne mov jmp mov lea push push call movb jmp test je movb pop mov pop pop pop ret mov push mov push push mov mov test je push push mov call test je mov orl movl mov mov jmp xor mov test jne movb pop pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp mov andl andl movb jmp mov push call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test je mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push push mov xor cmp je andl movb mov jmp push mov cmp je mov cmp je sub je dec push mov je push call cmp je pushl mov push call jmp push call cmp je mov movl mov jmp xor mov cmp jne movb jmp movb pop pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne cmp jbe push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl push lea mov mov mov cmp jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne mov mov mov jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl and push pop or mov mov shr not test je and sub je sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret mov push mov mov mov test je cmp je mov andl andl movb pop ret mov incl push call jmp mov push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub pop pop cmp jle mov cmpl je lea push call lea push mov call cmp jne andl movb mov cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov sub push xor cmpb jne inc mov mov mov test jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov jmp push push xor xor jmp test je cmp jl cmp jg movsbl shld sub cltd shl add adc inc mov mov mov cmp jne mov inc mov cmp je mov andl andl movb jmp mov push call mov jmp cmpb push push je test je lea call jmp lea call jmp test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push lea call mov call mov mov jmp mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret nop cmp inc add rolb aas rolb aas rolb pop rolb inc rolb dec rolb dec rolb mov push mov mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov andl andl movb leave ret mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret lea push call pop push lea push push lea call mov call push pushl lea jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push xor xor incl mov mov movsbl push mov sub push mov je dec je dec je cmp je mov mov cmp je cmp je mov andl movb jmp addl add movsbl add lea cmp jbe andl andl push lea push lea movb mov call push push lea call push lea push lea call mov mov jmp mov mov push lea mov call mov cmpb mov mov mov mov jne incl jmp mov push lea mov call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp mov push call mov jmp mov movl jmp cmp jne mov andl and movb push lea push lea movb mov call jmp cmp jne mov mov cmpb mov je mov mov mov incl mov and mov pop pop pop leave ret mov push mov mov sub push xor cmp je call mov cmp jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je lea push push call pop pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call cmpb jle cmp je test je lea push lea push mov call mov mov mov jmp push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov cmp je push lea push push lea call mov call mov mov mov push lea mov call mov mov mov push lea mov call mov mov mov push lea mov call lea jmp lea push push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub lea push push call pop pop push lea push push lea call mov call push pushl lea call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc mov cmp jg mov cmpb je lea push call mov pop mov mov push lea mov call push lea push lea call mov mov mov mov cmp jg mov cmpb je push jmp mov mov test je cmp je lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push lea call mov call mov mov mov mov mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne mov dec push mov call mov leave ret mov inc mov mov mov mov mov leave ret mov andl andl movb leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push mov push movsbl cmp jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne andl andl movb jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push mov call jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp lea push lea lea push cmp jne push call mov call push push lea call jmp push jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov pop mov pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push lea push push lea call mov call mov mov jmp test je lea push lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc mov mov mov cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push lea call mov call mov mov mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call pop push lea push push lea call mov call lea push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push lea call mov call mov mov mov mov cmp je lea push lea call jmp dec mov mov push call mov jmp cmp je jle cmp jle cmp jne movsbl inc mov cmp jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp mov mov mov mov lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call lea jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je mov andl movb mov jmp lea lea push pushl call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc mov cmp jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov mov add lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call pop push lea push push lea call mov call lea push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov pop mov mov mov pop mov mov pop leave ret mov andl andl movb leave ret mov push mov sub mov xor mov push mov mov movsbl push mov sub mov cmp ja mov push inc push mov call mov jmp andl push mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov mov mov movl mov test je cmp jne inc inc decl jne movzbl movzbl sub jne add mov jmp mov push mov mov pop mov test je cmp jne inc inc dec jne movzbl movzbl sub jne addl mov lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp lea push call lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp cmpb je mov cmpb jne mov xor and incl mov mov jmp push push lea call mov mov mov mov cmpb pop je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov mov and push mov call mov mov mov add mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call mov mov mov mov mov mov cmp jne incl jmp cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call pop push lea push push lea call mov call mov mov mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov andl andl movb leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov cmp je testl movl jne mov cmp jne mov andl movb mov jmp cmp jne push push pushl call add mov jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call pop push lea push push lea call mov call mov mov mov mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push push call pop pop mov lea push lea push push lea push call mov call push lea call lea push call mov pop test jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push push call mov mov mov mov lea push push call mov mov mov mov lea push push call add jmp cmp je mov and cmp jne lea push push call pop pop mov mov mov mov lea push push call mov mov mov pop pop mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push lea call mov call lea push lea call jmp mov mov mov mov and xor mov cmp je lea push push call pop pop push lea push push lea call mov call lea push lea call testl je mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov push lea mov call mov mov mov mov lea push lea call jmp test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp push lea call mov mov mov push lea mov call lea push lea call lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push lea push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call push pushl lea call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push lea call mov call mov mov jmp lea push lea push call pop pop mov mov mov jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push lea call mov call mov mov mov mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push lea call mov call mov mov mov mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push lea push push lea call mov call mov mov mov mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call mov pop test je cmpb je lea push lea movb mov mov call mov cmpb mov mov mov mov je lea push call mov mov mov mov mov mov mov lea mov movl call mov mov mov mov lea push lea call mov mov jmp mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je mov andl andl movb jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne mov push call mov pop pop pop leave ret mov push mov sub push push mov xor push mov mov and mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push lea call mov call mov mov mov mov cmp je push lea push push lea call mov call mov mov mov mov mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call mov mov mov mov mov cmpb jne incl jmp lea push call pop push lea push push lea call mov call mov mov mov push lea mov call push lea push lea jmp push push lea call push lea push push lea call mov call mov mov mov mov mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call mov mov mov mov cmp je mov mov cmp je cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call mov add leave ret cmp jl cmp jle cmp je mov andl andl movb leave ret push movsbl sub inc mov cmp jne mov test je movsbl sub inc mov cmp jl cmp jmp pushl push pushl call mov add jmp test js cmp jle or cmp jne mov andl andl movb jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push lea call mov call mov mov mov mov mov cmpb je lea push call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov jmp lea push lea push push lea call mov call mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test lea push je call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov mov jmp call pop push lea call jmp mov andl andl movb jmp lea push pushl lea push call mov call jmp call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov push push mov call cmp je mov andl mov mov jmp xor lea push push call lea push call add push lea push push lea call mov call mov mov mov push lea mov call lea push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl mov dec and add sub xor and mov mov sub je dec je sub jne mov shr not test je test je mov push lea mov mov call push call add push lea lea jmp push jmp mov shr not test je test je mov push lea mov mov call push call add push lea push lea call mov mov mov mov jmp push call add push lea call mov jmp mov mov shr not test je shr not test je test je mov push lea mov mov call push call add push lea lea push call mov mov mov mov jmp push call add push lea call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub mov jmp mov mov mov jmp cmpb je inc mov cmp ja mov push lea call xor mov mov mov lea push lea call cmpl mov mov mov mov je mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov test je mov push lea mov mov call mov mov mov mov lea push lea call mov mov mov mov test je cmpl je mov andl andl movb jmp cmpb je lea push lea push push lea call mov call mov mov mov mov mov cmpb lea push je lea push lea push call pop mov call mov mov mov jmp lea push push lea call mov call mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmpl jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push lea push lea call jmp test je mov mov mov mov jmp push jmp mov cmp je push lea push push lea call mov call lea push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push pushl lea call jmp push push pushl call add jmp mov cmp je push jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call pop push lea push push lea call mov call mov mov jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp mov push pushl lea push pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov pushl pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or movb cmp jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp je add cmp ja push jmp pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp je cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push jmp push jmp push pop mov mov andl and mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push lea push push jmp lea push lea push push lea call mov call mov mov mov mov mov cmpl je push lea push push lea call mov call lea push lea call mov mov mov mov mov jmp cmpl jne test je push lea call test je push lea call jmp test je push lea call push lea push lea push pushl call add jmp pushl push pushl call add mov pop pop pop leave ret mov test or mov or rorl inc add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call push mov mov incl mov lea push lea push pushl or mov call add jmp mov mov cmp je cmp je mov andl movb mov jmp addl mov movsbl mov cmp jg je sub je sub je dec je dec jne incl and push lea push push lea push push mov call push pushl call add jmp incl push push pushl call jmp incl push pushl call jmp push jmp sub je dec je dec jne mov incl push call jmp incl jmp push lea call cmp je push lea call push jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push pushl lea push call jmp incl andl push lea push push lea push lea push mov call mov mov mov mov lea push pushl call add jmp lea push pushl lea push call mov call mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call mov add mov mov push lea mov call pushl lea push lea call mov mov mov mov mov pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call test je andl call jmp xor inc ret mov movl call int3 push call mov ret mov push mov mov mov pop ret mov push mov push push pushl call mov mov test jne call push pop mov call mov jmp andl push test jne push call mov test jne call push pop mov call mov jmp push push call mov test jne call mov mov call push call pop mov call call push call pop jmp push push call mov call push push mov call cmp pop je pushl call push pushl call test jne call movl call mov jmp xor pop pop leave ret mov push push xor pushl call mov add cmp jb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test je mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret mov push mov sub mov xor mov mov push mov mov push push mov call andl cmpl mov jne push call mov test je mov push push call test je mov push call push push mov call push call push push mov call push call push push mov call push call mov test je push push call push call mov mov mov mov cmp je cmp je push call pushl mov call mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call test je call mov test je mov cmp je push call test je pushl call mov pushl call test je pushl pushl pushl pushl call jmp xor mov pop pop xor pop call leave ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne xor mov jmp mov cmpw je add dec jne test je sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov push mov push push test jne test jne cmp jne xor pop pop pop pop ret test je mov test jne call push pop mov call mov jmp test jne xor mov jmp mov test jne xor mov jmp mov cmp jne mov sub movzwl mov add test je dec jne jmp mov sub movzwl mov add test je dec je dec jne test jne xor mov test jne xor cmp jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov mov add test jne sub sar dec pop ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne mov jmp mov sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov test js cmp jle cmp jne mov pop ret mov mov pop ret call movl call or pop ret mov push mov mov mov pop ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add mov add test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb lea jmp cmp ja orb lea mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov add cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov mov add add dec jne mov call jmp orb inc cmp jbe add cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push mov test je mov test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop jmp xor pop pop ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl pushl add push call pop pop mov movl call jmp push call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop push sub subb add mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea daa sub adc inc add inc add inc add sub hlt sub in sub in inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov inc sub dec sub push sub push inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop loopne inc add inc add inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea subb add sub cwtl sub mov sub mov inc add sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov fsubrl inc add sub hlt sub or add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov mov push xor push push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov call mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov sub mov mov inc cmp je dec jne jmp mov sub mov mov inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov sub mov xor mov mov mov mov push push push mov xor push push pushl mov pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl push call add cmpb je mov andl leave ret push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov mov test je push xor pop div cmp jae call movl xor pop ret imul push mov test jne inc xor cmp ja push push pushl call test jne cmpl je push call pop test jne mov test je movl xor jmp mov test je movl pop pop ret mov push mov cmpl jne pushl call pop pop ret push mov test jne pushl call pop xor jmp push jmp test jne inc push pushl push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor pop pop pop ret call mov call push call pop mov jmp call mov call push call pop mov mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call movl xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret push call pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push xor push push cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov cmp je mov test je mov cmp je cmp jg push pushl push pushl pushl pushl call jmp mov cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov push push mov xor mov push xor push push mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp jne xor jmp jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub push movzwl push mov movzwl mov test jne or jmp andl push mov lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call push push push or lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or mov add mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push push pop lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call add push push pushl or lea push push call add or pop pop pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl push mov je push push call mov pop pop test jne xor inc jmp mov mov call test je push call push call pop pop jmp movl jmp mov mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp mov push pop mov push rep call xor pop mov cmp jne push call pop jmp mov mov cmp je push call pop mov cmp jne xor inc push call pushl call pop pop mov jmp mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call pop or jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp push pop mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret call mov cmp je mov test jne call mov ret mov ret call mov mov cmp je mov test jne call mov ret pxor push push mov and test jne mov and shr je lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne test je mov shr je jmp lea movdqa lea dec jne and je mov xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov neg add sub xor push mov and je mov inc dec jne shr je mov lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov sub push pushl lea call mov mov test je mov test jne call movl call cmpb je mov andl xor jmp cmpl je cmpl jl cmpl jg andl mov push mov push lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test js cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne mov add or xor divl mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov mov xor cmp je mov cmp jne call movl call cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg mov push mov push mov mov mov lea cmpl jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp je mov mov inc jmp cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne mov add mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov ret mov ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret mov push mov push call mov push pop test sete lea mov cmp je test je cmp je cmp je call movl call or jmp and jmp or mov jmp orl mov pop pop ret mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push xor xor cmp jle push lea add pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test jne mov jmp push push push push push call push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test jne cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret xor push push push push push jmp mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret push push push push push call int3 mov push mov sub push xor inc push mov call pop mov test je push lea movb mov pushl mov push pushl push push push call lea add movl mov push push push call add test jne mov lea pushl mov pushl call pop pop test je andl mov pushl addl push mov mov pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp xor push push push push push call pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add test jne test je mov mov mov mov test je andl mov jmp xor push push push push push call push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test jne xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test jne mov jmp push push push push push jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov push mov push mov mov call mov push lea push lea push push lea push pushl call add test jne xor mov pop xor pop call leave ret shl add pushl lea push call pop pop test jne mov jmp lea push call add push mov call pop pop mov test je mov mov mov lea mov mov mov lea imul add push push mov lea push call mov lea push mov mov mov add add push push call add test jne mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov lea mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add add pushl call test jne pushl call pushl call andl pop pop mov mov add add movl mov jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp add mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test jne mov mov mov lea push call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp push push push push push call xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je lea push mov call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call andl cmpl jbe call movl call xor jmp call mov mov call orl andl xor inc push push call pop pop mov mov test je push call pop mov mov mov call andl call pushl mov mov call pop mov test je cmpl je push pushl call pop pop test je mov push call pop movl lea push push call push call add testb jne testb jne pushl push call pop pop mov mov mov mov mov mov mov andl call jmp mov mov xor inc push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl mov cmp jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle add cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl mov cmp jg lea jmp mov incl mov mov add mov mov movzbl cmp jle mov add mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne movb jmp mov cmpb je inc dec jne test je sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jns dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov push test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je mov leave ret push call pop mov jmp push lea push push pushl call test jne xor leave ret cmpl jne call leave ret mov push mov xor mov cmp je add cmp jb xor inc pop ret xor pop ret mov push xor jmp lea inc cmp ja add jmp lea cmp ja add movsbl add lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov push push mov push lea push mov and push or push call test jne xor jmp cmp je cmpl je mov mov push mov call push mov call pop cmp pop je xor inc pop leave ret mov push mov sub mov xor mov push push push mov call mov lea call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov lea call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call lea mov test jne orl jmp mov add lea mov je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je mov call jmp mov call cmpl jne push push push call add test je mov test je cmpb je mov call jmp mov call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov mov sub neg sbb and call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea ret movzbl movzbl sub je xor test setg lea ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp nop out inc add addb test outsl js add jl add jg add addl ja add jg add inc add inc add jnp add jle add jbe add inc add inc add (bad) inc add inc add jns add jge add jne add add add addl jmp inc add addb call in push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret mov cmp inc add xchg inc add mov insb nop inc add xchg inc add cwtl inc add mov in inc add xchg inc add popl das xchg inc add xchg inc add mov (bad) mov test inc add mov dec mov and inc add mov enter lcall add lea adc inc add push andl push mov test jne xor jmp push cmp jb lea test je mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov mov jmp mov test je cmp jne inc inc inc cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl jmp lea push push lea push push call test jne and movzwl movzwl and leave ret mov push mov pop jmp mov push mov pushl pushl call pop pop pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp mov cmpl jne push push call pop pop jmp sub push movzbl lea push push call mov movzbl lea push push call add inc test je cmp je sub mov pop cmpb je mov andl pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je pop jmp push pushl pushl call add pop ret mov push mov sub cmpl push push push je pushl lea call mov test jne call movl call cmpb je mov andl mov jmp mov test je mov cmp jbe call movl call cmpb je mov andl mov jmp mov cmpl jne pushl push push call add cmpb je mov andl jmp sub movzbl lea push push call mov movzbl lea push push call add inc decl je test je cmp je sub mov jmp xor pop pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je cmpl ja pop jmp push pushl pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop mov call mov jmp push cmp ja call push pop mov call mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov cmp je xor inc movb lea neg mov xor divl cmp jbe add jmp add mov inc inc test je cmp jb cmp jb movb jmp movb dec mov mov mov dec mov inc cmp jb xor pop pop pop pop ret mov push mov cmpl mov jne test jns push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub xor push cmp jne call push pop mov call mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov push mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov cmp jbe add jmp add mov mov inc inc mov test jne test je cmp jb mov pop cmp jb movb call push pop mov mov jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret mov push mov push lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov mov push mov lea push mov call movl mov pop pop ret jmp mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push pushl mov call movl mov pop pop ret mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov sub mov mov lea push lea call push lea push movl call int3 mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov movl ret movl ret mov push mov xor cmp sete pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov ret mov ret mov push mov mov mov mov mov mov pop ret mov ret mov ret mov push mov mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov push mov mov mov mov mov pop ret mov push mov push push pushl mov pushl lea push call mov call leave ret mov push mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov movl movl ret mov ret movl ret mov movl movl ret mov ret movl ret mov movl movl movl ret mov ret mov push mov mov mov mov mov pop ret movl ret mov ret mov ret mov ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov push pushl andl call pop mov push call mov leave ret mov push mov push andl cmpl jne push jmp pushl call pop push mov call mov leave ret mov push mov sub push lea push push call mov mov mov movsl movsl movsl pop movsl pop pop leave ret mov push mov push push mov cmpl jne push lea call cmpl jne incl mov mov lea call mov pop leave ret mov push mov push push mov push lea call mov cmp jae inc mov lea call pop leave ret mov push mov push push push mov push lea call mov test je cmp jae dec mov mov neg sbb not lea and call pop mov pop leave ret mov push call pop ret movl ret mov push mov mov mov movl mov pop ret mov push mov mov push mov mov mov call mov pop pop ret mov push mov call mov call mov call mov pop ret mov test je call test je mov push mov call ret mov push mov mov push mov cmp jae mov mov jmp xor test jne cmp je call cmp jae mov mov jmp xor pop pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov mov mov mov movl pop ret movl ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov mov pop jmp mov push mov sub push push lea push mov call add mov movsl movsl movsl pop movsl pop pop leave ret mov push mov mov mov and or mov pop ret mov push mov push mov mov andl push mov mov call mov pop leave ret mov push movl call pop ret mov movl ret mov push mov push mov push movl call testb pop je push call pop mov pop pop ret mov andl movb ret mov test jne lea ret mov mov movl ret mov push movl call pop ret mov push mov mov mov mov pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov mov test je push call pop andl pop ret mov movl ret mov push mov push mov push movl call testb pop je push call pop mov pop pop ret mov mov ret mov push mov mov mov mov mov mov mov mov sub mov mov pop ret mov push mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov mov pop jmp mov push mov mov mov mov mov mov mov sub mov mov pop ret mov mov test je mov ret add ret mov push mov mov sub push mov push mov lea push push movl call lea mov movsl movsl movsl pop movsl pop pop mov pop leave ret mov test jle pushl call pop ret jns pushl call pop ret mov push mov movzbl add push push call pop pop pop ret mov push mov push mov cmp je push lea movzbl push push call mov inc pop pop cmp jne pop mov pop pop ret mov push mov movzbl add push push call pop pop pop ret mov push mov push mov cmp je push lea movzbl push push call mov inc pop pop cmp jne pop mov pop pop ret mov push mov mov pop ret mov push mov mov sub push pushl pushl call mov add pop ret mov push mov mov pop ret mov push mov mov sub push pushl pushl call mov add pop ret mov push mov movl call movl pop ret mov push mov push mov movl call testb movl je push call pop mov pop pop ret mov push mov push pushl call pop ret mov push mov push xor push push mov mov mov movl movl mov mov mov mov mov call push call pop cmp je mov call jmp xor pop mov pop ret lea mov mov movl push movl call pop ret mov push mov mov mov mov mov mov mov mov orl pop ret mov push mov mov test je push call pop andl pop ret mov push mov push mov movl test je mov call push call pop pop lea pop jmp mov push mov mov mov pop ret add jmp add jmp or ret or ret xor xor ret or ret mov ret xor ret ret mov mov ret mov mov ret mov push mov mov mov sub mov add pop ret mov decl mov mov lea mov ret mov xor cmp je mov mov cltd ret mov push mov mov mov sub mov add pop ret mov push mov mov mov mov mov mov xor mov mov mov pop ret mov push mov mov call cmp jne or pop ret mov decl mov mov lea mov movzbl pop ret mov push mov push push xor push mov mov mov cmp jl jg cmp jbe push push jmp xor mov cmp je mov mov cltd mov mov test jl jg test je cmp jg jl cmp jae mov mov push pushl pushl call add mov add add adc sub sbb sub mov add jmp mov mov call cmp je mov incl addl mov adcl addl adcl cmpl jg jl cmpl ja pop pop mov mov pop leave ret mov push mov push push xor push mov mov mov cmp jl jg cmp jbe push push jmp xor mov cmp je mov mov cltd mov mov test jl jg test je cmp jg jl cmp jae mov mov push pushl pushl call add mov add add adc sub sbb sub mov add jmp mov movzbl mov push mov call cmp je incl addl adcl addl adcl cmpl jg jl cmpl ja pop pop mov mov pop leave ret mov push mov mov mov mov mov mov xor mov mov mov pop ret mov push mov mov mov mov mov mov xor mov mov mov pop ret mov push mov push lea mov call testb je push call pop mov pop pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov lea cmp jne mov push mov mov mov mov mov sub mov pop ret lea mov lea mov lea mov lea mov lea mov xor lea mov mov mov mov mov mov mov mov mov mov mov mov ret push mov call mov mov xor push call mov mov mov mov mov mov mov mov mov movb cmp jne lea push lea movl call push lea push movl call pushl push call pop pop mov call ret push mov call mov mov push movl call mov pop test je push call pop andl mov test je push call pop andl mov test je push call pop andl mov test je push call pop andl orl mov call call ret push mov call mov andl test je cmpl jne push call pop mov andl test je mov mov mov test jne lea push lea call mov push push movl call jmp xor orl testb mov je lea call push pop call ret push mov call mov mov lea movl call andl push call pop test je mov call jmp xor mov mov call mov call ret mov push mov cmpl push mov sete mov movb call mov test je lea mov mov lea mov mov mov mov mov mov andl mov pop pop ret push mov call push lea call mov andl mov mov call mov push call mov test jne test je mov jmp pushl lea push call pop pop cmp jne push lea call push lea push call mov mov mov call push call pop orl lea call mov call ret mov push mov push mov call push pushl mov movl call mov pop pop ret mov push mov mov mov mov movl pop ret mov jmp movl ret mov ret xor inc ret xor inc ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov pushl call pop cmp jne xor pop ret mov mov mov pop ret mov push mov movsbl pushl push call pop pop xor cmp setne pop ret mov push mov mov movzbl pushl push call pop pop xor cmp setne pop ret mov test je push call pop ret mov test je push call pop ret mov push mov cmpl je mov push call cmp je pushl call pop test jns or pop ret xor pop ret mov mov mov add ret mov mov mov add ret mov incl mov mov dec mov ret mov push mov mov mov andl andl mov mov mov mov mov pop ret mov ret mov mov ret mov cltd add adc ret mov push mov mov pop jmp mov push mov mov pop jmp ret mov push mov mov mov lea neg sbb and pop ret mov push mov mov mov test je mov mov mov add cmp jae movzbl pop ret mov push mov call mov or cmp je mov push mov call mov pop pop ret mov push mov lea cmp je mov mov mov push mov add pop mov mov mov mov mov sub mov add mov pop ret mov push mov mov mov mov movl pop ret movl ret mov push mov mov mov mov mov mov push mov pop pop ret mov push mov mov mov mov mov mov push mov pop pop ret mov push mov mov mov push mov pop pop ret mov push mov mov sub cmp jae mov pop ret mov push mov testb push mov movl je push call pop mov pop pop ret mov push mov push mov push mov mov mov test je mov cmp jae cmp je movzbl cmp jne mov incl mov decl lea neg sbb and jmp mov test je cmp je cmpl jne push lea push mov call pop pop test je mov jmp mov lea cmp je mov mov call jmp or pop pop pop ret mov push mov push mov mov push mov mov call test je andl jmp mov mov call pop pop pop ret push mov call mov andl test je cmpl jne push call mov pop mov andl test je mov mov mov test je mov jmp add push lea call andl movl movl jmp xor orl testb mov je lea call push pop call ret mov push mov push mov mov xor cmp je cmp jne mov or jne push pop pushl push pushl push call add test jne push pushl mov call mov jmp xor pop pop ret mov andl movl movb ret push mov call lea push call andl push call orl pop lea mov call pushl mov mov call call ret push mov call push lea call mov andl mov mov call mov push call mov test jne test je mov jmp pushl lea push call pop pop cmp jne push lea call push lea push call mov mov mov call push call pop orl lea call mov call ret mov push mov push pushl mov call pop push mov call pop pop ret mov push mov push mov call mov andl push mov mov call cmpl mov jne mov or push push mov call cmpb je push call pop pop pop ret mov push mov push push mov mov cmp jne push call push push call test je pushl mov push push call cmpl mov jb mov jmp mov movb pop mov pop pop ret push mov call mov mov xor mov cmp je movl movl mov movl mov mov pushl movl mov mov pushl add call mov call ret push mov call mov mov mov xor cmp je mov mov mov mov add cmp jae mov decl mov mov lea mov movzbl call ret cmp jne or jmp mov call cmp jne pushl lea push mov call pop pop test je movzbl jmp movl mov mov mov jmp push push lea call cmpl mov mov jae lea mov add mov mov lea push lea push lea push lea push push push lea push call xor cmp jl xor inc cmp jle cmp jne cmp jb cmpl mov jae lea push push push lea push call add jmp lea cmp mov jne cmpl jae lea mov sub push push lea call pushl call pop cmp jne or push push lea call mov jmp cmpl jae lea sub add mov jmp mov pushl dec movsbl push call pop pop cmp jg movzbl jmp mov push mov push pushl mov andl pushl movl movb call mov pop pop ret push mov call mov xor cmp je cmp je mov push call cmp jne xor jmp push push lea movl mov mov call mov cmpl mov jae lea mov mov mov lea push mov add push push lea push call sub je dec je dec dec je xor push push lea call mov jmp mov jmp movb cmpl mov jae lea mov sub je cmpl mov jae lea pushl push push push call add cmp jne cmpb je test jne push push lea call jmp mov jmp mov call ret push mov call mov mov cmp jne xor call ret mov mov xor cmp je mov mov add cmp jae decl mov mov lea mov mov mov jmp cmp jne or jmp mov call cmp jne pushl push call pop pop test je jmp push push lea mov movl mov movb call mov cmpl mov jae lea mov add mov mov lea push push push lea push lea push lea push lea push call test js cmp jg cmpl mov jae lea mov sub je cmpl mov jae lea pushl push push push call add cmp jne lea movb cmp jne test jne cmpl jae push push lea call jmp mov jmp cmp jne pushl pushl call pop pop test jne or push push lea call mov jmp mov jmp mov push mov push push push mov mov push lea xor cmp jne cmpl jne cmp jne addl adcl cmp je mov call test je mov or jne cmpl je pushl pushl pushl pushl call add test jne lea push pushl call pop pop test jne mov call mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov pop pop leave ret mov push mov push push mov push mov push mov cmpl mov mov push mov mov je call test je lea push pushl call pop pop test jne mov or je push push push pushl call add test jne lea push pushl call pop pop test jne mov mov mov call mov mov andl andl mov mov mov mov jmp mov mov mov mov mov xor mov mov pop pop mov pop leave ret mov push push mov xor push mov cmp je call test jne xor pushl call pop test je xor mov mov mov call mov mov mov mov pop mov pop pop ret push mov call mov mov movl andl cmpl je call cmpb je mov call orl mov call call ret mov push mov push mov call testb je push call pop mov pop pop ret jmp mov push mov sub push mov test jne call mov mov call jmp mov mov mov cmpl mov jne mov lea cmp ja add jmp push mov push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sarl call movzbl movzwl and jmp mov mov sarl mov and movswl shr and test je mov push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push pushl push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop leave ret mov push mov push call mov mov mov call push push mov call pop pop mov test je push call push pushl call add movl jmp call andl mov mov pop pop ret mov push push mov call test jne push mov push call add pop cmp jl pop mov pop ret push call test jns push mov push call add pop cmp jl pop ret push call test jne push mov push call add pop cmp jl pop ret push call test jns push mov push call add pop cmp jl pop ret mov push mov andl push call pop mov pop ret mov push mov mov push mov mov cmp jge imul add push call pop mov pop pop ret mov cmp jge imul add push call pop ret push call pop ret mov push mov mov mov and mov imul add push call pop pop ret mov push mov mov mov imul add push call pop pop ret mov push mov mov and imul add push call pop pop ret mov push mov mov and imul add push call pop pop ret mov ret mov push mov mov mov mov pop ret mov push mov mov mov mov mov mov pop ret mov call test je mov push mov call ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push call pop test je mov mov mov mov jmp xor mov pop ret mov push mov mov mov test je call test je mov push mov call pop ret mov push mov push push lea call push call andl pop lea call leave ret mov ret mov push mov cmpb jne push movb call pop mov mov pop ret push mov call push lea call mov andl mov jmp mov dec lea cmpl je mov call test je mov push mov call test jne pushl call orl pop lea call call ret xor cmp sete ret mov test jne lea ret push mov call push lea call andl jmp mov mov mov mov call push call pop mov test jne orl lea call call ret push mov call push lea call andl jmp mov mov mov mov call push call pop mov test jne orl lea call call ret mov push mov mov mov test je push push call pop pop pop ret mov push mov push mov mov push mov cmp je test je push call pop andl test je cmpb mov je inc cmpb jne sub push lea push call pop mov test je push push push call add pop pop mov pop pop ret mov push mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret mov push mov push pushl mov andl movb call mov pop pop ret mov push mov push mov mov xor mov lea movl movl mov mov mov push mov mov call mov pop pop ret push mov call mov mov movl push movl call mov pop test je push call pop andl movl call ret mov push mov push mov call testb je push call pop mov pop pop ret push mov call mov xor mov cmp jne push lea call mov mov mov cmp jne push call pop cmp je push mov call mov push mov call lea movl movl call mov mov call mov mov orl lea call mov call ret call mov ret mov push mov push andl call push call pop test je push mov call jmp xor mov mov mov leave ret mov push mov push push mov mov jmp pushl push pushl call mov add test jne pop pop pop ret mov push push push mov call mov test je mov push call pop mov test jne mov andl test je mov push call pop mov test jne andl pop pop ret mov push mov push push lea call mov movl mov mov test je cmp je mov inc mov cmp jb mov mov mov incb lea call leave ret mov push mov push mov cmpl jbe mov lea decb cmpb jg mov call mov test je mov call push call pop pop pop ret mov push mov sub push mov test jne call mov mov call jmp mov mov mov cmpl mov jne mov lea cmp ja sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sarl call movzbl movzwl and jmp mov mov sarl mov and movswl shr and test je mov push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push pushl push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop leave ret mov push mov cmpl jne pop jmp pushl decl call mov mov pop ret jmp mov mov incl push call test je call cmpl jb ret mov push push mov call push mov call pop pop mov pop ret mov push mov pushl call pushl call pop pop pop ret pushl call pop ret pushl call pop ret mov push mov push call mov push mov call pop pop pop ret mov push mov push mov pushl call pushl call pop pop pop pop ret mov push mov mov pushl call pop pop ret mov push mov mov pushl call pop pop ret mov push mov push mov push push pop cmp je push push call test jne call jmp cmp jne mov jmp push call cmp jne pop pop pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret mov push mov pushl call pop ret int3 jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov push mov push push mov add mov mov mov mov mov mov mov mov jmp pop leave ret pop pop xchg jmp pop pop xchg jmp pop pop xchg jmp mov push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop leave ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret mov push mov mov pushl pushl push pushl call add pop ret mov push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret mov push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop leave ret mov push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop leave ret mov push mov push push push push mov mov mov mov mov jmp cmp jne call mov dec mov imul add cmp jge cmp jle cmp jne decl mov mov cmpl jge mov inc mov mov mov cmp ja cmp jbe call mov imul add pop pop pop leave ret mov push mov mov push mov mov call mov mov call mov mov pop pop ret mov push mov call mov jmp mov cmp je mov test jne inc pop ret xor pop ret mov push mov push call mov cmp jne call mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne pop pop jmp mov mov jmp mov push mov sub mov andl lea xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov leave ret push pushl lea sub push push push mov mov mov xor push pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov mov pushl movl lea mov ret mov mov pop pop pop pop pop mov pop push ret mov xor call jmp mov xor call jmp mov push mov push mov test js call cmp jl call mov call mov pop pop ret mov push mov push push call mov xor cmp jne mov jmp push mov cmp jne push push call pop pop mov cmp jne mov pop pop pop pop ret pushl mov call push push push call add test jne mov jmp push push push push push call int3 mov push mov push push xor cmp jne call push pop mov call mov pop pop pop ret mov cmp jbe lea push pushl call pop push push pushl call add test je push push push push push call int3 push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov mov mov movzbl incl jmp push pushl call pop pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov mov mov movzbl incl jmp push pushl call pop pop mov movl call mov call ret mov push call pop ret mov push mov push push mov push or testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb je call movl call mov pop pop pop pop ret mov cmp je mov test jne test jns test jne cmpl jne push call pop mov cmp jne cmpl jne inc mov decl testb mov je cmp je inc mov jmp mov mov incl and or mov mov and jmp push push call xor cmp setne test jne call movl call or jmp pushl call pop andl pushl pushl call pop pop mov movl call mov call ret pushl call pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov mov cmp jge andl add push call pop pop ret add push call pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret push push call andl xor mov test setne test jne call movl call or jmp mov cmp je test je cmp jne test je cmp jne mov lea cmp jbe jmp mov and mov push call pop andl push call push call pop pop andl mov test je or lea push pop jmp mov test jne push call pop test jne incl orl jmp orl jmp or mov mov mov mov andl movl call mov call ret pushl call pop ret mov push mov push mov test jne xor jmp cmpl jne call push pop mov call mov jmp cmpl je cmp jb push pushl pushl call add jmp pushl push pushl call add cmpl je cmp jae call push pop mov mov jmp push pop pop pop ret mov push mov sub push push push mov test je cmpl je mov test jne call movl call xor pop pop pop leave ret mov test je or xor div cmp ja imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je js mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl call xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov cmpl jne call movl call or pop ret push mov test jne call movl call or jmp pushl call pop mov mov and or mov cmp je xor pop pop ret mov push mov push mov mov push test je mov test je cmp je cmp jne and mov cmp jne push call add pop adc xor push call mov pop test jns and mov jmp test je test je test jne movl push pushl pushl push call pop push call and add cmp je xor jmp call movl or pop pop pop ret push push call xor cmp setne test jne call movl call or jmp mov test je cmp je cmp jne pushl call pop andl push pushl pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov cmpl jne call movl call or pop ret mov test je push pushl pushl pushl call add pop ret mov push mov push mov push or test jne call movl call or jmp testb je push call push mov call push call push call add test jns or jmp mov test je push call andl pop andl mov pop pop pop ret push push call orl xor mov test setne test jne call movl call or jmp testb je andl mov call ret push call pop andl push call pop mov movl call jmp mov push call pop ret mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push push mov mov test je lea cmpb je mov mov cmp je add push push call pop pop test je xor jmp testb je testb je mov mov test je testb je test je testb je xor inc pop pop pop ret mov push mov mov mov mov cmp je cmp je cmp jne call andl jmp call cmpl jle call decl xor pop ret push push call mov mov cmpl jg movsbl jmp mov mov call incl andl cmp je cmp jle cmp jl call mov mov mov mov movl cmpl je mov push push mov pushl call andl jmp pushl call pop ret mov andl mov mov mov mov jmp movl call cmp je call mov call ret mov mov call cmpl jle call decl ret mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call xor inc mov mov ret xor ret push push call mov test je cmpl jne mov test je mov test je andl push pushl call movl call ret xor cmp setne ret mov call int3 mov push mov mov mov push mov add cmpl jl mov mov mov mov add add pop pop ret call xor cmp setne ret mov push mov mov push push mov test je mov test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call mov pushl push call pop pop call mov mov call mov mov call mov jmp orl orl call decl call cmpl pop pop jge call andl xor inc pop ret mov push mov mov test je mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call incl xor inc pop ret xor pop ret mov push mov push mov cmpl je push push push call cmpl pop mov mov jne call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne call mov pushl call pop test je push call pushl call pop pop call mov cmp jne call mov cmpl jne call mov cmp je call mov cmpl je call mov cmpl jne cmpl je call decl call mov mov call mov pop mov pop pop pop ret push pop ret push push call andl mov call jmp pushl call pop ret mov movl call ret push push call andl pushl call pop jmp pushl call pop ret mov movl call ret push push call andl pushl call jmp pushl call pop ret mov movl call ret push push call andl pushl pushl pushl pushl call jmp pushl call pop ret mov movl call ret mov push mov xor sub cmp jne call call mov mov cmp jle push mov push mov mov mov mov lea jmp mov pushl mov push mov add push call add test jne dec add test jg jmp movb incl mov addl cmp jl pop pop mov leave ret push mov call call cmpl je call andl call orl call call mov push push mov call int3 mov push push xor xor cmp jle mov mov push call test jne inc add cmp jl xor pop pop ret mov jmp mov push mov push mov push test jne call mov test jne call cmpl jne cmpl jne mov cmp je cmp je cmp je call mov mov mov lea jmp mov mov mov add push call push call pop pop test je dec add test jg xor pop pop pop ret xor inc jmp push push call mov mov mov mov andl mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl push pushl push call add mov andl jmp mov call ret mov call andl mov mov cmpl jg movsbl jmp mov mov andl mov cmp jae imul mov cmp jle cmp jg mov mov push push push push call add andl andl mov movl movl call mov call ret incl jmp mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne cmpl je pushl call pop test je pushl push call pop pop ret push push call xor mov mov mov cmp je cmp je mov cmp jne testl je mov mov test js lea mov xor inc push test je mov pushl call pop pop test je push push call pop pop test je mov mov mov add push push call pop pop mov jmp mov mov pushl test je call pop pop test je push push call pop pop test je pushl mov pushl push call add cmpl jne mov test je add push jmp cmp jne call pop pop test je push push call pop pop test je pushl add push mov pushl call pop pop push push call add jmp call pop pop test je push push call pop pop test je pushl call pop test je testb push pop setne inc mov jmp call movl mov jmp xor inc ret mov call xor call ret push push call mov testl je mov jmp mov mov lea andl mov push push pushl mov push call add dec je dec jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 mov push mov mov sub test jne leave ret push mov push mov push mov test je cmpb jne mov cmp je cmp je test je cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov mov or mov mov mov lea jmp mov pushl mov push lea push call add test jne dec add test jg jmp call incl cmpl je pushl lea push pushl push call add jmp cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call cmpl jne xor jmp call incl xor inc pop pop pop leave ret mov push mov cmpl je pushl push push pushl call add cmpl pushl jne push jmp pushl call pushl pushl pushl push call mov push pushl inc pushl mov pushl mov push pushl call add test je push push call pop ret mov push mov sub push mov cmpl je push call cmpl je call lea call cmp je mov cmp je cmp je pushl pushl pushl pushl pushl pushl push call add test jne mov cmpl jne call mov lea push lea push push pushl push call mov add cmp jae add mov push lea cmp jl cmp jg mov shl add mov test je cmpb jne lea testb jne pushl mov pushl push pushl pushl pushl pushl call mov mov add incl mov add mov cmp jb pop pop pop leave ret mov push mov sub mov push mov mov push push movb cmp jg movsbl jmp mov mov cmp jl cmp jl call mov mov cmp jne cmpl mov jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov call mov push push mov call pop pop test jne call cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call call cmpl je call mov call pushl xor mov call pop test jne xor cmp jle mov mov push call test jne inc add cmp jl call push pushl call pop pop lea push lea movl call push lea push movl call mov mov cmp jne cmpl jne mov cmp je cmp je cmp jne mov cmpl jbe lea push lea push pushl pushl push call mov add cmp jae lea mov mov lea mov cmp jg cmp jg mov mov mov mov test jle mov mov lea mov mov test jle pushl mov push pushl mov call add test jne decl add cmp jg decl addl cmpl jg jmp pushl mov pushl mov pushl movb pushl pushl pushl push mov call mov mov add incl mov add mov cmp jb mov cmpb je push push call pop pop cmpb jne mov and cmp jb mov test je push call pop test jne call call call mov call cmpl mov mov push jne pushl jmp pushl call mov push push pushl pushl call add pushl call mov cmpl jbe cmpb jne pushl pushl pushl push pushl pushl pushl push call add call cmpl je call pop pop pop leave ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push push push call cmpl mov mov mov mov mov jne mov cmp je cmp je mov and cmp jb testb jne testb je cmpl je cmpl jne push push pushl pushl call add jmp cmpl jne mov and cmp jb cmpl je cmp jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl pushl pushl push call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call pop pop mov pop mov push mov cmp jne mov push call pop pop pop leave ret mov ret mov ret mov push mov push mov test jne call movl call jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov test je cmp je testb jne push call pop cmp je push call pop cmp je push push call sar push lea call and pop shl add pop pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or andl or pop pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec mov cmp jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret push push call xor mov push call pop mov push pop mov cmp jge mov mov cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push mov mov call mov xor mov mov push mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call movl call or jmp mov sar mov push lea mov and shl mov add sar mov mov cmp je cmp jne mov not test jne call andl call movl call jmp testb je push push push push call add push call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call xor cmp je cmp je cmp je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add mov cmp jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete add addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov testb je cmpb mov jne mov cmp jbe mov xor sub lea cmp jae mov inc inc mov cmp jne incl movb inc inc mov inc inc cmp jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmpb jne mov cmp jbe andl mov sub push lea pop cmp jae movzwl add add mov cmp jne add push pop mov mov add add add mov add cmpl jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov mov cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop mov pop xor pop call leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret push push call mov cmp jne call movl or jmp test js cmp jb call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop push call test jne call mov jmp andl cmpl je call mov mov call movl orl movl call mov call ret mov push call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov mov call mov xor mov push push mov push push call mov xor pop mov cmp jge mov push push push push call add mov mov mov test jg jl test jae or or jmp mov sar lea and mov mov shl add mov add sar testl mov jne mov mov cltd sub sbb mov mov jmp mov mov mov sub mov test je cmpb jne xor cmp je shr mov cmp jne mov mov jmp push pushl pushl pushl call mov mov mov add mov cmp jne cmp jne push lea push push lea push pushl call test je push pushl pushl pushl call add test jg jl test jb mov mov cmp ja lea test je lea dec cmp jae mov cmp jne lea cmp jae lea cmpb jne mov jmp movzbl movsbl add inc test jne lea sub xor add adc jmp testb je mov jmp cmpb jne incl inc cmp jb mov or jne mov jmp test js call movl jmp testb je mov test jne and jmp sub testb lea je push push push pushl call add cmp jne cmp jne mov lea jmp cmpb jne inc inc cmp jb testl jmp push pushl pushl pushl call add test jg jl test jb mov cmp ja mov test je mov test je mov mov mov testb je inc cmpb jne shr sub sbbl cmpb jne shrl mov xor add adc mov pop pop xor pop call leave ret push push call xor cmp setne test jne call movl call or mov jmp pushl call pop andl pushl call pop mov mov movl call mov mov call ret pushl call pop ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call andl mov mov movl call mov mov call ret pushl call pop ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop mov jmp call movl orl movl call mov call ret mov push call pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov xor inc cmpl jne xor pop ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call movl call or jmp mov sar push and lea mov shl mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl call jmp mov shr mov cmp jb mov pushl call mov pop mov test jne call movl call movl or jmp push push push pushl call mov mov add mov mov add testb mov je mov cmp je cmpl je decl cmpb mov mov lea movl movb je mov mov cmp je cmpl je mov mov inc decl cmpb movl movb jne mov mov cmp je cmpl je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov test js cmp ja mov add lea testb je cmpb je test je cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne add mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov testb je inc mov cmp jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp test je cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov add add mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov add mov cmp jb jmp mov lea testb jne orb jmp mov mov add sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne andl jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call andl call movl jmp push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov mov cmp jne call movl xor pop ret test js cmp jb call movl call jmp mov and sar mov shl movsbl and pop ret mov push mov push cmpl jne call mov cmp jne mov leave ret push lea push push lea push push call test je mov leave ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbl mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret mov push mov mov push push test js cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor push push cmp jl cmp jae mov sar mov and lea mov shl testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret test js cmp jb call andl call movl call jmp mov sar mov and shl testb je mov pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret jmp jmp jmp jmp jmp jmp jmp jmp jmp int3 int3 int3 int3 mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov and je andl mov add jmp ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea push call ret lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov xor call mov jmp int3 int3 int3 int3 int3 mov jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea push call ret lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov lea mov xor call mov jmp mov and je andl lea jmp ret mov and je andl jmp ret mov and je andl lea jmp ret mov and je andl jmp ret mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp jmp jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call add mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and je andl lea jmp ret mov and je andl jmp ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp jmp jmp mov lea mov xor call mov xor call mov jmp int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov lea mov xor call mov jmp push call pop ret push call pop ret push call pop ret mov call push call pop ret mov push push call mov mov lea call push push mov movl call push call pop pop pop ret push push push mov call push call pop ret mov jmp mov call push call pop ret push call pop ret push call pop ret mov call push call pop ret push call pop ret movl mov jmp movl ret movl ret movl ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp xor inc add add add aas inc push bound pop arpl je jae fs inc add xor inc add add add aas inc push bound pop je jo imul add add xor inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add xor add add cs inc push je jo pop imul add add add add dec out mov (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add add add add pop dec inc add inc add add inc add add inc add add inc add inc add inc add dec inc add inc add inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc add inc add inc add inc add dec inc add inc add add inc add add inc add inc add add add add add add add inc add inc add inc add inc add inc add inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc add dec inc add dec inc add inc add dec inc add inc add inc add inc add add inc add dec inc add add add add add add add add add add add add add add add add add add add stos inc add inc add push inc add inc add test add stos inc add stos inc add add add add add (bad) (bad) (bad) incl add add add add add add stos inc add dec add dec add dec add dec add dec add dec add dec add dec add dec add jg jg jg sub inc add les adc dec add les adc dec add les adc dec add les xor inc add inc add add add add add add add add add add add add xor add add cs inc push insb outsl imul jb jae fs inc add add xor add add cs inc push imul pop popa jb jne outsb je jae fs inc add xor inc add add add aas inc push insb outsb addr16 pop gs outsl jb jae fs inc add xor inc add add add aas inc push outsl jne pop outsl pop jb outsb addr16 jae fs inc add xor inc add add add aas inc push outsl jbe jb insb outsl ja gs outsl jb jae fs inc add add xor inc add add add aas inc push gs outsl jb arpl outsl jb inc jae fs inc add add xor inc add add add aas inc push pop inc outsb gs arpl jb outsl jb arpl outsl jb inc jae fs inc add add xor add add cs inc push pop dec outsl jae jb popa insl pop gs outsl jb arpl outsl jb inc jae fs inc add xor inc add add add aas inc push pop push jns je insl pop gs outsl jb arpl outsl jb inc jae fs inc add add lock inc add pop inc add pop inc add pop inc add inc add pop inc add pop inc add xor add add cs inc push popaw arpl inc insb outsl arpl gs jae fs inc add xor inc add add add aas inc push arpl gs bound gs jae fs inc add add xor inc add add add aas inc push imul gs jae fs inc add xor inc add add add aas inc push aas and dec outsl jae inc dec inc jae fs inc add xor add add cs inc push aas and popa jae arpl jae jb popa insl inc inc push aas and push jb imul fs inc inc jae fs inc add add xor add add cs inc push aas and popa jae arpl outsl jae inc push aas and push jb imul fs inc inc jae fs inc add add xor add add cs inc push aas and je jo inc inc inc jae fs inc add xor add add cs inc push aas and popa jae arpl je gs insl bound inc inc push aas and push jb imul fs inc inc jae fs inc add xor add add cs inc push aas and popa jae arpl imul push aas and push jb imul fs inc inc jae fs inc add add xor add add cs inc push arpl arpl pop bound gs jae fs inc add xor inc add add add aas inc push aas and outsl fs inc inc inc dec inc jae fs inc add (bad) (bad) pushl xor add add cs inc push pop dec outsl arpl jo insb outsl arpl gs jae fs inc add add add add or add add add inc outsl jo jb addr16 sub xor cmp sub and and dec and popa jne gs and outsb jae and and imul popa jb sub dec je and dec and inc dec push push and push inc push push inc inc add add add add pop add add add (bad) pop add add add adc add add add add add add add add add xor add add cs inc push bound pop gs gs imul inc inc add add inc add arpl adc add bound loopne inc add bound mov inc add inc add add inc add inc add bound sbb inc add inc add popa inc add popa inc add popa inc add popa inc add popa inc add popa inc add add inc add add inc add inc add inc add inc add pusha inc add pusha inc add pusha inc add pusha inc add inc add bound test add inc add add inc add pusha inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) incl add add lock lock jmp mov mov add push mov add xor dec inc lods xor movsbl cmp je ror add inc jmp cmp jne pop mov add mov mov add mov add ret pusha xor xor add mov mov mov mov mov cmp jne cmpl jne jmp mov lea mov xchg push call pop add mov pop mov call push call pop add mov pop mov call push call pop add mov pop mov call push adc incb or adc lret call add or push add or fimull sbb popa ret push mov sub call add (bad) into add add jbe mov mov lea mov add and sub pop add add add push push push push call test je mov add (bad) adc mov movsb jmp add push sbb lea push adc iret push push call mov mov pop push mov add rep lea movzwl pushl push push call pushl pushl call push push mov and push mov add push jmp push mov pusha mov add push mov mov test je test jne mov mov add add mov add cmpb jne inc jmp push call ret (bad) je bt jae and jmp add add push push push call pop stos jmp pop add jmp pop popa leave ret push push or mov add mov mov add rep pop add dec jne popa leave ret push mov pusha mov mov add push call mov dec add xor push call test je sub cmp jl add add add add dec pop nop add add add sub mov add inc add cmp add add pop mov int mov push push jb addr16 insl and outsb outsb outsl je bound jb outsb and and and fs pop sbb pop xchg add stc push adc cmp push push jno stc push cmp addr16 inc add add stc push pop inc jp push add dec add pop cmp sub push push arpl push add push cmp push push imul adc add dec add push adc add add add lret add add add adc add loopne sub add add add or add add mov addl or add inc add pusha push add or jo add sbb add sbb inc add or add add mov leave pop add and je js add add enter in or and add jb popa je add cmp cld or add add sbb add or adc inc testb add add dec add shrb jae arpl add in and push add or add mov sub xor jb insb outsl arpl add add add sub mov inc xor add add incb add add incb add add or mov push mov movzwl push push push call movzwl xor mov cmp jle lea mov cmp jne mov push add push call jno adc add cmp xor pop pop leave ret imul mov jmp test je cmpl je mov clc and rolb je or call and xor mov xor add rolb pushf or mov incl jmp test jne xor jmp push push lea push call mov test jne push call add push call pushl push call pop pop ret xor jmp mov call push push mov lea call andl lea call movb call xor mov orl mov mov pop mov pop add or mov inc adc or dec add add add jl add mov pop cs add pop push mov mov sub push test je test je test je mov mov mov cmp jbe cmp jbe cmp je jbe mov push push lea call mov jmp mov jmp mov mov push lea push push lea pop call and xor pop add flds (bad) je and and (bad) mov call add lock pop pop ret push cmpl push push push mov je test je xor push lea pop mov mul seto neg or push call mov pop test je push push push pushl push push call test jle call cmp je pushl mov mov mov call jmp push call pop xor pop pop pop pop ret mov call sub push push push lea call xor mov mov mov call test jne and call or ret sub ret pushl mov mov mov mov call mov jmp mov sbb push push push mov mov mov xor mov mov mov xor push pop div mov cmp jg xor jmp call orl push lea push push pop mov call mov mov cmp jge imul add mov add push push call push push push add rcrb dec add incl mov cmp jbe cmp jbe cmp je jbe cmp jbe decl incl jmp mov mov test je pushl push call je add nop jne call pop jmp push pushl mov mov call jmp push mov add push mov adc in push call popl jae jle mov mov sub pop leave ret and mov ret push mov sub push inc sti or lock inc decl jle push mov imul add mov inc mov mov cmp jge mov imul mov mov mov add mov cmp jne mov cmp jne incl addl cmp je mov lea movsl movsl push movsl push pushl movsb call mov adc or mov mov mov mov mov mov add mov mov addl inc add mov inc lea cmp jl pop pop mov inc fiadd dec add gs add test je and mov mov cmp jle xlat rolb add add add lea mov mov mov mov call lea call mov cmpl jle or dec clc mov cmp je cmpl jbe mov push sub pop cmp jb mov cmp ja add mov mov cmp jbe cmp jbe cmp je jbe cmp jbe jmp movb and or in cmp ja mov push lea push lea call or push inc cmp call jne jmp push mov mov push call cmpb jne push push push pop add dec mov add push pop sub lea add incl popa push sub mov cmp jl jne call mov pop pop leave sub lock or xor push push mov mov mov mov mov push xor pop div xor test jle mov mov cmp jne mov cmp jne inc cmp je movb jmp cmpb jne inc add cmp jl jmp mov mov pop pop pop popa mov orl push push subl incl shr cmpl je andl jmp mov mov mov ret push push pushl mov mov call and mov add mov add inc or inc add mov add mov pop add add push xorl incl jl push pop xor div push pop mov imul add movzbl movzbl shl or movzbl shl or mov shr and mov mov mov shr and mov mov adc push adc sbb rorl or fadds add add decl jne test jne movb jmp movzbl shl dec movw je movzbl shl or mov shr and mov push add add inc add and mov or pop mov pop and lea push mov push movl add cmp and push push call mov pop leave ret cmpl push mov push push push mov and sub sub inc clc add test std (bad) call add add call jle cmpb je xor add lea push or add or add cmp call cmpw mov je push adc or pushl adc call lods adc add or or add add mov ret test je cmpl jbe cmpl jbe push push xor inc mov call neg pop sbb pop inc add xor or push push lea push xor mov mov cmp jae push mov add cmp (bad) jne mov xor inc inc test je movzbl shr add add dec js lea jmp inc inc cmp jb pop mov pop pop pop ret xor or cmp ja xor jmp mov movzbl xor and shr xor inc cmp jb ret mov push mov shr mov cltd push sub xor sar mov cmp je jae mov jmp lea mov sub cltd sub sar add cmp jl pop pop ret push mov push push push push mov mov push shr call mov cmp jge mov cmp jne xor jmp push mov call jmp andl push inc adc (bad) mov inc clc mov sub lea shl push lea push push call add mov jne lock push andl push push mov shr push mov test jle mov mov mov call testb jne mov push call push call incl cmp jl (bad) xor mov lea sub jge add push push jge sub xor push mov xor mov test inc cmp jl mov xor movzbl mov inc add jl mov add movzbl add and jns dec or inc mov adc mov lea sbb mov add and add inc inc mov jl xor movb cmp jle add mov inc adc mov inc and dec or or or mov lea mov movzbl add cmpsb test or movzbl sti sbb and dec or movzbl mov adc inc cmp jl out inc add leave ret mov call adc call or mov and dec mov imul lea push pushl push call or add (bad) ss and add mov movb orl inc add mov lock or in inc push push push push lea mov call xor mov mov mov mov mov cmp jne xor orl lea call mov jmp lea adc in cmp je push call popa xchg rolb add adc add sub mov cmp jb call mov mov mov adc lea movb inc dec jne mov mov lea push push lea push push in adc inc add push mov mov mov mov call mov cmp je mov imul pushl push call cmp je cmp jne incl adc jne call call sbb jne cmpb mov mov je mov jle call jge or or incl jle push push call lea mov call add push cmp jae push jmp lea xor divl cli cmp adc mov adcl jmp call sub add jle movl sub lea mov cmp jne mov cmp je lock push test jle cmp jl andl mov cmp ja test jne inc add cmpl mov jne call test je push call pushl push pushl adc or add inc add rorb into shl add mov mov shl add cmpl inc mov mov mov add add sbb and add push or sbb cmp call cmp push incl mov add cmp mov (bad) (bad) incl dec and adc inc in shrb xor add fdivl sbb add and push hlt or sbb add inc cmp jne xor and mov cmp or lds and add rclb add je mov mov mov and xor add mov mov mov add or cmpl mov add shl add mov mov mov or add add or ss mov add sbb push or in clc push and and jl movb dec sbb pushl stc add or inc add mov pop add call mov cmp test jne inc add push adc call add add sbb or test std add adc add leave mov leave je mov push mov adc push push call push lea call mov pop test jne andl jge xor xor cmp sub cmp jne mov cmp jle cmp jl inc add add add fildl xor and dec xor adc fildl jne cmp sbb jne or je lea add test mov adc add or push in mov mov mov jmp push adc add (bad) adc mov mov adc or adc adc add popl loop mov loopne push lea push push call mov into xor mov adc mov add shll loope add add mov movb cmp je pushl call mov jmp mov mov or and mov add sub mov mov add mov pop fiaddl mov adc popf add (bad) (bad) (bad) cmp lahf add cmp pop adc add xor lods or pop mov inc adc pop push notl inc push push xor call mov push call rclb pop lds shr call push call pop mov pop ret push call mov imul cltd sub mov sar call dec call add aaa add in call push jmp jmp xor test jne xor pop ret incl mov adc or push mov push into cli lods fsubrp inc cmc gs add mov sub pushf xor pop add sahf add sbb or (bad) adc and pop push mov push push push mov sub push xor push test jle mov mov cmp dec mov call test je mov mov add add add lea mov mov cmp jg call xor cmp je push pushl call mov cmp jae cmp je mov mov inc sub inc cmp jl xor push sti wrmsr push pop sub add mov jmp mov add pop es add push xor xor imul pushl pushl push call jge insb or inc adc mov push movb call inc xor mov cmp je movb inc dec jne push xor repz or jns add push divb test push sti sbb jl push lds add add mov gs inc or or decb sbb ss and clc cmp jg mov mov mov lea mov add push push push add dec or hlt add add push add sub add arpl xchg sbb dec clc or mov mov cmp jle add pop adc add jo mov mov test je add mov mov lea add call test je push push call adc mov mov push push (bad) adc push lea push call add or jbe movb mov push xchg or inc and sub push push xor push mov mov push dec or adc sbb jne call mov mov mov add and mov mov lea push push lea push push push pop and push pusha or clc cmp je call mov inc push adc push call popa or jns add cmp jne call inc add or or push or call arpl pop cmp jne call push push pop call incl call enter (bad) divl mov mov call push or cmp ja mov cmp jne pop mov mov mov call mov call mov dec add pusha cwtl push pop add call movb mov pop pop pop mov pop and push call or add sub adc and call mov rorb and push stos or sbb pop call cmpl jmp dec sti (bad) decl sbb rorb jle dec sbb and inc xor (bad) ja inc lea cmp jl add test jle dec mov jmp andl call mov call movl cmp jae shr cmp jae call cmp jl pushl call pop test je mov jo add push push call lea push push sub std (bad) lcall test jne incl cli (bad) decl add mov call sbb sub leave test jle or pusha xor inc cmp jl call push call jmp call or test (bad) loope add (bad) ljmp call int3 push push push or xor call cmp daa xor call cmp jb call mov inc add call daa mov fisttpl add mov pop ret mov call push push push xor testb push jne orl pop cld call adc (bad) cmp test pop or test jle xor call cmp jg sahf add jbe add mov jne mov pushl mov pushl pushl pushl call add or mov push ret pop lock add or cmpl je add sarl dec or xor push push push imul mov loop sub sbb leave ret mov sbb sub sub adc push call push xor and lea push pushl movl push movl call je push adcl mov pushl call push push mov add mov leave push adc dec inc or push mov cmp jge push push aas or pushl call inc add or jl pop pop ret mov xor push mov mov mov mov lea mov inc dec jne mov mov mov adc sub xor cmp je pushl call and adc shr xor add ret cli and push xor cmp jne push and pop clc pop mov call jmp adc or std adc call and mov cmp jbe push incl pop add (bad) sub pop push dec sysenter push call pop ret mov pop pop push (bad) push sub cmpl push je push arpl cmp call push add adc mov sbb lea push mov call pshufw movl cmpl sete mov mov mov inc xchg add mov inc adc jae movsb pop push mov add lock call mov mov call add sub inc add and mov push scas push add mov adc add push add mov mov mov add popa add (bad) push pop or repz pop ds add dec push mov add inc add or inc adc adc inc adc dec add add push push mov mov fldl testl add call pop push and dec test add xchg sbb push cmp add and cmp push add push mov push mov mov call adc add mov addb shll pop mov mov cmp sbb (bad) je cmp jne movl jmp movl sbb inc xor add push sbbb mov jge loope push push or push push movl mov pop mov mov call add dec jns push mov pop mov call xor mov mov mov (bad) jmp pop inc add call sbb call mov push push adc (bad) jmp rclb mov call push call sbb inc add adc call sbb call adc and loope add mov sbb incb mov add add inc add dec add or inc add add add xor mov call mov call sub push mov mov mov adc jl or xor pop mov xchg or and add mov sub hlt push inc add repnz add add call add add inc add add add and pop inc add imul orb ljmp pop inc add call mov mov call push insb add add add or call call add add add cld inc xor enter sbb or mov add push mov js inc add dec and pop pop pop mov or push or pop or add push pop mov lea xor mov inc dec jne push pop lea or pushl xor mov lea push mov movl adc aaa pop or or xor xor cs (bad) rcll inc test push push push push push push or adc adc je cmp je mov push sub push popa or add add add fistl call mov cmp jne xor pop pop ret push push push pushl push call cmp lock jne push call pop mov pop jmp push or adc push push pop and loopne add push call jne leave cmp jne mov push call jmp mov push (bad) sbb je add (bad) neg sbb neg jmp adc sbb (bad) push (bad) adc mov mov inc push lock call jge call mov lea call push jne or or sbb add repz xor adc or or jge test je jle push push call loope dec or call lea lea call or lea mov movl call push pushl call jne movb mov jmp xor movb add ret inc mov call or hlt ss push or add scas push add sub push push lea xor push mov mov call mov push add or add push or add lea push push mov call or test call test fistpl jge cmp jbe jle push push add sub add sub sbb lea call pop enter call lea movl call je add and mov call sbb or dec mov inc add into call cmpl jle push lea push mov and jne add mov inc sbb adc inc add sbb add lcall sti pushl pushl call or push push add add sbb lds sub divb add (bad) call add sub call call push or push ja add in lahf add mov sub call push call or (bad) je adc sbb push jp adc xor add sbb or sub push jns sub or add and add sub adc inc or mov cs popa pop inc mov xor add push pushl lcall cmp push or inc adc or mov and or push lret ret cmpl jne andl add sub xor call mov add pop push xchg pop or push push and ret push fstps adc or je xor mov and adc call mov lea or xchg add push popf or add add das push add (bad) decl mov and jne mov mov mov inc xchg push mov jmp test leave xor mov cmp jle push adc lea or push cmp cmp jl xor push pop mov lea cmp rolb test popa mov sub push add push mov test ljmp jne sbb and mov add mov add sub add xchg or stc or mov mov movl mov call push pop push movsl fisttpll lea popf add sbb stos call push or sub or push call xchg sbb adc loop call (bad) call add push push jbe or pop xor movsl mov sub inc push push lea push call or test jmp jo lret add or or (bad) jne push mov push or adc or add xchg sub fisttpll add clc loope add push call xor cmp je push push pushl call push lea push add mov call lea test je push mov push add add add adc add push add add add jo lea add sub testb sar test je cmp jae push or adc jmp push shrl add mov add rorl adc (bad) sub (bad) mov adc loopne inc or and cld call adc or (bad) adc dec or pop push xor or adc cmp mov or jne push push call add mov add or pop push mov push sub push sbb push push call pop popa mov push push stos or popa cmpsb and dec or and pop adc mov sbb inc add jne push mov push push push push push mov call test jne in mov add xorb or push push pop sbb push push pushl adc je mov jmp push pop or adc call sub inc loopne xor xor imul add xor divl mov ret or jno sbb push push push pop push imul pop fsubl push lahf invd gs add aas adc inc mov mov jmp adc adc adc add cld adc mov xor decl jne add add add xor add ss or (bad) (bad) jmp jne jbe pop imul push mov add push adc inc jo jmp add xchg push (bad) sbb cmp jne inc cmp jl xor mov imul adc popa gs dec adc mov pop add cwtl push sbb push (bad) or testb jne orl and add decl pop aam stos call mov ja or pop incl dec hlt mov push or and push xor push mov pop div xor push lea sub lea div pop mov xor rep test je push push pushl lea call pop jmp mov (bad) imul push jge loopne push out sub xchg adc push push jnp add push ss dec clc mov call mov lea lea imul mov push scas adc inc inc dec pop add pop in add xchg or adc hlt add jne xor jmp ret imul mov test and push and decl test rcrl or xrelease dec xor shl cwtl or jl mov push call mov mov movzwl push call pop pop cmp je or aas je cmp jne mov test je test je movzbl inc jmp std sbb dec ds add leave inc cmp jle test je test je or push or add je inc mov lea mov jmp cmpl jbe jmp mov inc cmp jb inc clc pop jne mov or xlat push call incl mov cld es or add cmp jb mov xor test je mov lea std and (bad) je inc add cmp jb jmp xlat adc call sbb adc mov pop dec inc push jne mov call inc bound xor xor movw cmp sbb push or add mov add add ret add pop and call mov jmp lock inc sbb test jle push push lea call lea push pushl popa (bad) and sbb sub jecxz add jecxz adc inc or rcrl add and stos pop or scas add add lock cmp jae test jne lea cmp jl cmp jbe incl cmpl jg enter in add out push out push in dec in enter cmp jne cmp jne cmp jb cmp jbe cmp add or xor cmp add or jbe loopne push or jbe lock push and and pop (bad) (bad) pushl sbb aam negb sbb push and adc inc jl adc idivb decb test add add fimul mov push movsl or mov call or sti push inc sbb jnp cmp mov jne xor jmp push call push push cs pop adc (bad) jne push jmp jmp xor cmp je push add push call pop or and lea cmp aaa cmp jne xor inc add imul call je orl push or xor lret add sbb (bad) lret add or cmp add (bad) push lahf push cmp pop mov jmp xor pop pop pop ret test push sub or push push push mov add test js mov add inc adc or add imul xor cmp popf xchg or or push (bad) or mov pop ret push push xor or jle xchg (bad) adc je clc and xor push test jle mov lea cmp jge inc add cmp jl imul push push and adc call add add mov pop cmp ja mov mov mov pop ret push pop mov imul sub imul add lea push add push push call push push push call sbb mov sbb in push adc push scas adc xchg or arpl add mov adc clc and lea push adc leave test jle add add cmp jge inc add cmp jl imul push lea push push call or add add xor mov test jle lea stc add add dec jne add test inc and fdivrl fld fldz fld fucomp fnstsw fstp test jp fstp fld1 fxch xor xor test jle lea add fmul fcomp jmp or icebp adc (bad) lea add push push call push push push call push sbb addr16 (bad) decl add inc cmp jge incl xorb add lret fcompp fnstsw test je add sbb add cmp (bad) fstp mov fstp push jno add arpl adc (bad) xchg lock mov add add and jg sub and lds push push call add incl pop xor add add push push call add add (bad) xor ret push scas daa or rorb test mov add xchg cmp adc push cs adc leave push mov test jle mov lea cmp jg inc add cmp jl imul pushl lea push call or add add cmp sub imul (bad) lea add add xlat push or and push call sbb mov add cmp or sarb sub add dec add push and or xor sub jle jecxz sub xchg or ret mov inc inc adc sbb push adc (bad) pushl fisttpl xor adc mov cmp je push lock call adc jbe call pop mov push cld sub inc or adc inc inc add mov cmpb je mov cmpsb or push lea push call adc push sbb add sbb or and add add mov mov push mov lea mov lea mov mov mov mov lea dec add (bad) adc xor or push push push mov dec push in add mov or aad mov or fwait push pop or push sub incl mov add (bad) adc adc and jl pop pop pop mov add ret mov push inc loope add loope adc mov mov push add add xchg sbb pushf xor or add and push call push mov incl and mov adc mov adc add push add fistl lahf inc int3 or jno xor xchg push lret or sbb repz in push push shrl add call push repnz jge pushl lea add push mov in mov pushl add sub jmp (bad) addl cmp push mov mov fdivrs push or dec push lahf out decl lret cmp add xchg add dec push xchg sub nop sub sub cmp inc add push push mov rclb sub jl xor test jle push push mov lea xor lea push push push push and mov mov adc adc mov xor jl or je cmpb jne push out xor adc push mov add add out add adc add add cmp nop pop pop mov pop pop pop ret and in push push mov push mov testb jne orl and add int (bad) ljmp aad add sbb add pop orl mov cs mov cmp add push push push movl adc push jno push ret lea call adc pop push add dec push call pop pop cmp jne push mov jmp cmp or (bad) je adc (bad) jne pop sbb pop push pop or jns add jge or ret push mov push dec je dec je dec je dec je dec je dec je mov mov push push push push push push cli adc call and (bad) pushl or jmp add add mov push jmp adc add jmp adc add out cmpl jne push adc push or adc mov pop pop pop push fisttpl sub cmp sbb inc cld push pushl push mov sub loope add fcomps shlb cld leave push cmp sub add loop sub mov push jo and push push call cmp push call test jne cmp je push adc das or lea add movsb push in adc pop push (bad) or mov call mov push adc or jg sbb test jne push call or setne xor and sub adc ficoml mov test adc or cmpl je push xchg dec jne cmpb je cmpl jl mov push stos and call push call mov push and test je push adc and call lea adc (bad) add adc mov add xchg (bad) or adc add je pushl lea aaa or call add enter rolb add cltd push inc cmp or sub or test dec sbb add outsl add add sbb add imul adc add inc push cmc adc dec add (bad) pushl mov sub jne mov pushl dec inc out adc and push call add imul sbb call or test push adc or and call out adc adc push adc add adc add sub xor push mov xor lea push push call inc cmp jne xor jmp push mov cmp je inc movsl push mov add sbb adc add lea add popa mov mov inc add (bad) je cmp jb push das and adc push popa xor repnz popa xor lods push arpl das or lea cmp pop loope test inc adc push sbb add add sub lea push push call add or out es insl lea push push push call adc or add or add push imul xor (bad) lea cwtl repz lcall xchg adc addl movsl or push call jge movsl or push xor sub push call lret das cmp add adc push push add lods add repnz mov adc cmp add push push push test lea call push or test adc dec or pop int test jne mov call sbb pop cld cmp je sbb dec push or jne lea call cmp je adc (bad) jne or jmp push lret adc push call mov cmp je pushl pushl push call push cmp je mov call cmp je push push call cmp je push call push pushl mov call push or test je mov jmp jmp adc jne call adc push adc add adc str bound loopne arpl add or cmp sti add or add add mov and (bad) inc cmp call pushl lea pop sbb jo (bad) decl push rorb and add ljmp mov call push or divb or std and add negb or cli (bad) cmp add dec adc add adc add test jo sar cmp add test sub or and jge lea rep call xor lea mov inc sbb or jmp push push call mov cmp je push push push add in adc inc sti mov push add inc adc add push rol lea cmpl sbb add jae test pop test stos call movzwl mov test jne push daa sbb push cmp jne mov push pop jmp mov add push pop mov movzwl push xor pop lea adc adc push push ds test mov (bad) (bad) jmp cmp cmpl movzwl mov jne cmp jne movzwl dec jmp push pop xor add adc aas sbb (bad) decl sub inc adc inc fmull jbe add adc pop fdivrp push out or in push push or add push push and jmp push call adc (bad) pop pop pop leave dec pop push xchg add enter or push sbb push call sub je sub push or add sbb add and and or push lock push pop test je mov mov sarl push mov lea movl movb mov call sbb mov add and or dec call lea cmp je mov push loope sbb push arpl inc add inc add push add adc inc add in dec insl sbb int3 push add das sbb mov add push push jo add mov push mov push lea call mov push pop inc ret add out or mov adc add lea inc sbb inc sbb add mov sbb add lret je mov cmp jle mov cmp je mov push push xor repnz cmp xor pop mov call leave or and call lea lea call push adc push pop adc mov push push decl scas daa adc je inc add call or push add adc add dec and pop sar lea add xor push or sbb pop add call push mov push xor push mov cmp je push push call adc inc in lea adc add sbb sbb inc in inc lock push inc or push call mov adc push xor or sbb push pushl pushl imul push cmp and test mov div (bad) ljmp mov call push call cmp jbe jmp adc adc lock decl dec cmp xor adc call add push jle xor pop clc xor cmp je pushl add or push sbb rorl add (bad) sub pushw sbb add add adc add shr push popf cmp push push movsl pop add out mov sbb lock and jne call or pushl adc sbb lods (bad) (bad) lcall pop ret pop or in sbb in push ret or jecxz dec or mov jmp add and lock call push push call (bad) (bad) pushl inc push sub add or or or sbb lea mov push mov mov test je push call ss scas add add or jne mov or push or stc and or add push cli and inc add add mov add adc jmp cmp xchg push mov add push lea and inc in add add and push mull or add add dec add add in inc adc mov mov cmp je lea push push push lea call adc add push push sub adc pusha sbb rorb add stos call push movzwl xor push movsl push adc mov pop push jecxz decl inc in push xor pop mov xor mov testb push dec pop add popf add xor stos call xor push pop or lea rep call pop add xor or adc pop add or stos call sub xor adc adc (bad) (bad) decl rep call mov imul xor sbb pop pushf rep call adc add xor adc add add or stos call sub xor adc add rep call mov add cli sbb mov push xor stos call add xor lea jp add loope dec lods or pushl dec and inc or inc cmp or sarb sarb je push pushl push and dec push fisubr push pop cmp jecxz jbe and sbb call pop mov adc cmpl push mov cmp add add cmp or fildl add mov mov mov movw mov popa add pop and mov mov jne adc push mov add lea push push mov inc clc popa or call jne add sahf sbb add adc je test adc push call or pushl call push mov push jp add add and out adc push lea push ja add lock add cmp add in adc add cmp add call push push add or in adc add adc push adc push mov loopne add mov cmp je adc push push add sub adc pop cld je mov movl hlt call cmp adc add push sub add add sub in adc add push sub push loope push inc es cmp adc add push sub add add sub in sub in sub add sub loopne sub loopne sub add add xlat pop pop and add adc push fcoml or mov push inc sub or shrb add push mov lea push push adc pop or loope push or or add push inc ds in cmp jb sub mov mov leave and or gs cmpl and mov lea cmp jae mov movb lods cs cmp mov sarb push mov inc inc jmp movzbl movzbl shl add movzbl add shr add enter add add and mov mov sub mov or mov cmp jb cmp je mov cmp jne mov cmp jne mov cmp jne mov mov or movl rclb (bad) mov cmp jne incl inc cmpl jb mov sub shl mov shr or mov mov add add jmp or cmp jb jmp push jge mov mov test je sub mov mov inc dec jne and jmp adc in push sti or ja mov add add push mov movl (bad) jae cmp jae shll cmpl mov movl inc incl inc clc test je movzbl movzbl mov shl or add movl inc or push lea mov pop mov mov inc inc incl dec jns jmp mov mov inc inc incl cmp jb cmp jae push pop jmp mov mov dec xor icebp sbb pop leave ret push mov adc mov adc call mov adc push push push sbb push pop and add sub push xor cmp je cmp or mov push mov push call add lds or xor adc or inc add cmp or and add les push xor and call mov ret add sbb add loopne stos and inc sbb adc inc inc and add inc and inc push xor mov movl call or and cmp ret jne xor mov mov mov pop ret or and fldcw scas push sbb jne push call sbb and mov andl add and add sar inc shl push mov mov call sbb sbb jne push ret adcl cmp nop push dec push add adc add sub adc or lcall or inc add (bad) push mov sub push test jle mov jmp or or inc add mov test jne inc add jnp adc push jb add test je test je cmpl jle pushl push push call add mov add push cmp je cmp or cltd add add stos call call sbb call data16 add std adc or add mov mov and mov les push je call sub (bad) inc inc or or sti out sub adc fdivr inc fisubl jne xor mov mov pop sub icebp sbb cmp jne push sub inc or inc add inc or cmp jg add add push add shl xor mov cmp jne call cmp jl dec inc and cmp jne movl inc cld add mov cld and mov pushl inc xchg add or mov cmp jne mov xor adc add sbb imul ds imul imul add xchg adc push sbb ss call or mov aad (bad) decl orb push sbb mov add sub and mov push mov push je cmp je cmp jl cmp je add cmp jle push push call add cmp pop add add push add push push adc push call add push hlt dec add or and mov mov incl adc or aaa sbb pop push insb sbb push lea push push pop call push cld dec or lock pop add push inc sbb add add call sub jbe mov push add push call addl or add add mov ss or pop adc adc push aaa adc call push push and mov cmp jle push movsl push cmp sub push lea push push call sub dec or add push push xor test (bad) (bad) mov push call test je push add in cmp cmp out add incl add testb je call pushl call andl inc cmp jl call call push call pop pop pop pop pop push jnp adc lock aaa sbb add add repz lea push dec or jge aaa dec or cld in mov push cmp jg dec pop lds push mov cltd add test inc sbb and clc inc mov add dec mov inc clc jmp mov cmp je cmp in incl cmp jbe mov (bad) sbb push and push call add cmp je mov mov movl jle call or cmp and and mov sub or adc ret jne jmp jno sbb ret jne call push sbb call xor push fwait aaa or mul push je add icebp sbb mov mov call push ds and movl add add sbb dec sbb inc cld mov mov mov movl mov mov add dec sub or mov add xor mov add push sbb mov mov push aad sbb fdivl (bad) or rcrb cld add call and or inc xor call cmp cld mov add or (bad) cmp call push call or or push cmp or out push sub or add mov gs (bad) (bad) call orb push cmp out call fimull add clc push lahf inc and sub (bad) decl inc adc je lea cmp ja mov mov jmp call das add sub add push mov push and sbb push cmp ja mov call setne adc push cmpsl sbb push push xor call add jmp sub pop push pop inc adc add adc or or movzbl cmp jne inc dec jns call sbb idiv decl push or push call mov add je cmp clc add inc faddl push scas dec or jge mov int3 daa sub hlt add xchg or lock inc cld mov lea mov mov mov test je test je cmp je mov mov cmp jne mov mov sub sub cmp jne mov cmp seta jmp setb mov jmp setb jmp test je cmp jne xor test je mov mov mov decl sub cmpl jl test jne incl mov incl addl cmp jle mov cltd sub sar mov test jg mov add push movsb and pop cmpl je inc push fbld sbb or mov push add push into or add out add fildl push call push call mov ds (bad) (bad) pushl call inc cmp jl mov call sbb push xor out push adc push xchg and cld push call shrb or mov push aas and shll adc push add rorb add ret xor sbb sub sbb popf or or test call movl lock pop add rolb add or add pushl push call jo or cmp jb inc pop pop leave ret mov movb xor jmp push in adc inc add mov add pop push rcrl pop add mov cmpl jge movb jne testb jne orl dec push mov or in cmpsb xor fldt fs add call mov mov push mov sub mov call adc mov adc adc cmp mov mov mov lea sub cmpw test or add cld (bad) (bad) aas jne cmpw insl lea cmpw jne xor mov test add test test adc push pop mov test je push ss shll iret push sbb add push adc adc je mov add adc mov push adc push sub add add push cmp add outsb pop push dec enter adc jmp mov xor cmp ja jb cmp jae hlt xor pop or add cmpw je add add je mov jne cmp jne test je xor cmp jne call jmp mov inc or mov add push das and and add adc pop or xor mov sbb lea push mov or xor adc adc push mov adc push movl sub dec xor jmp xor inc cmp jbe push pop cmp push mov push jbe movl jne cmp jae cmp cmp add add or adc add lds push or xor add add push or jo fnstsw xor sub pushf push add push movsl icebp add xor xchg adc or jne pushl mov movl adc je out or sbb inc adc stc adc push movsl mov test je pushl jmp mov cmp jb cmp je add or jne xor add jne test je mov call pusha push adc mov mov or sbb jne adc sbb jne sete pop pop push adc adcl testb sbb push add add dec pop or mov adc adc sbb sub jne je and adc call add jns jmp add mov pop leave push adc add add cmp push jg sub mov push mov call jne push inc or sbb pop adc cmp push cwtl cmp fmull add and das pushl or or jne push push lock add push and je incl cmp add jb add mov xchg adc pop or test loopne push dec and push cmp push aad adc jbe push test or dec add es push and sbb sub cmpsl aaa add add pushl push push adc jne mov push jns add in adc push call incl push or ss pop decl movsl or cld sub jne add aam arpl and sbb or mov mov mov call or mov push push ss inc or sahf pop add add dec push push push adc push mov mov or push add xor push add adc sub add sub push or outsb mov inc dec sub inc dec push call push pop dec push call pushl lea pushl ss ficoml call mov mov mov call push push lea push sub sbb cwtl or push call push mov adc xor add push inc adc test je push call mov adc rclb inc push mov add add ret sub push xor push push cmp xorl dec push push lea push cmp jne push jmp lea push adc cmp adc adc push pusha dec adc pushl xchg dec or jmp adc adc and inc dec sub je dec je dec je dec je xor jmp adc add cs and and push add push push test je add and push ss add mov pop or aad push or aad push or dec push add addl push add adc sbb push add push call sub decb popf or pop pop pop add ret cmpb sbb push and add push sbb and cmpsl add or pop movb push adc xor push push mov mov lret decl push std or push adc push push pushl sbb cmp je cmp ja or cmpb jne mov call or mov pop leave ret mov add push push jb adc orl push cmpsb push inc cli lea mov call xor mov mov xrelease call pop push push cwtl sbb push pushl jge or add inc adcl (bad) (bad) cmp je pushl pushl call sbb or jne or call cmpb fwait or call sbb aam inc call sub out push (bad) sub (bad) cmp adc xor (bad) add xchg adc insl push mov sbbl mov call idivb jne jbe jle push pushl mov call xor mov rolb jne add sbb pushl pushl or add adc daa insb mov mov cmp je cmp jle push push call mov mov push pop or mov (bad) decl sub enter cmp jg sub mov and (bad) std inc or and push push push xor lea push mov cmp add mov inc cld add call cmp je jo lea pop mov mov inc dec jne mov push mov movl movl mov mov movl lea or adc dec xor push push push adc xor sub jne push push call sub cmp je push push call and add call adc movl add dec adc pop push or sub lea movl (bad) sbb add add ret push pop add cs ja or add add add add or je adc loope add adc loop add je test je push lods or xchg push out add adc cmp push push push mov push mov call push push xor or ljmp call call mov mov jo call mov test jle push push call call cmpl push inc adc add adc sbb jne or dec shr cmpsl call test jne lea mov call and lea call inc (bad) push jbe add sub or ret mov sbb lods add in sub pop cld mov pushl call sub lea mov call xchg sbb inc adc cmp data16 fsubr (bad) decl or inc rol (bad) (bad) cmp je mov add mov push push lea call mov lea call xor mov lea call or adc adc mov (bad) adc push push sub call pop orl sbb xchg (bad) (bad) ljmp push push sub leave lods push push sub dec adc add and sub clc mov call andb push call push fisttp push sub sbb inc daa mov cmp jle add push call or inc or scas rorl or or push cli push or adc adc and mov pop add inc dec sub movl movl movb push call mov mov mov addl js rcl or incl inc cmpl jl inc decl jne lea push aad adc inc add dec or add add or roll dec jns dec or inc cmpw je add cmp jl lea push movsb sbb mov or push call mov jo call call adc sub adc pop sbb add sbb fisubrl iret add xor inc and cs add xor iret add iret or add testb push add push call sub cmp ja inc cmp jle call ja fildl xor inc mov fdivl fsubl or fstpl jmp xor inc fildl push fdivl and fsubl xor jae fldz fstl push lods inc sbb pop and call pop pop fldl fmull fldl fmull fsubrp faddl add adc inc and add add fld fmulp adc sbb add jne movl and and jl call ja lea cmp fs adc movl jg,pt add and inc and jg,pn add and xor lds and or inc and mov dec jne cmpl pop add push inc cmp jl incl cmpl mov (bad) (bad) call sub incl cmpl xor decb sub or adc xor add sbb pop add sbb inc and faddl add add add faddl fimull call adc mov inc add add (bad) (bad) call les inc les add lds pop xor adc add push into or jg cmp clc lea push call call add test push push call push call cmp jl push dec push add or gs add or add lds or mov sbb addr16 je call xor mov mov cmp je push lea push push push or test add imul (bad) (bad) cmp jne push call inc or mov mov dec xor je cmpl jne call mov xor call xor jmp call add sub adc or and add je sub repnz je adc (bad) call test outsl or pop dec add or pop or pop int or cmp jg push cmp adc add push mov push mov sbb ds or stc push and push mov push invd push clc or cmc or push or lea popa mov xlat cmpl push sub add and inc inc jne add jmp add call mov add (bad) pushl rorb cmp div xor div mov int3 (bad) ljmp aas add mov sbb xor push push outsl xor push mov (bad) pop or fistl pusha ds idivb leave push imul call rclb pushl push dec add sahf add mov shrl cmp jl push sub rclb cmpl sete push mov push lret sbb jle add mov jne mov cmp pop sub add add ja push fcoml add add and and inc add pushw or xchg sbb lea push push call push jb add adc or add or inc push movsb (bad) mov call adc push mov call pop adc (bad) (bad) pushl lea call daa add or cwtl cmp push call push inc push add inc push or push inc sub (bad) es jmp push cld xor test mov push jmp adc adc add xchg add call mov mov and jae pusha aaa add or scas es inc add (bad) add jmp xchg adc mull adc test jne lea or push push jmp jnp call push push inc or lods mov push arpl add push pushl call push push pushl cmp add or popa jns je call lea mov call sub call call sub cmp jbe mov lea call mov jmp mov push fcoms xlat test je push in sbb lock clc inc or sbb jnp sbb call lea call or sbb mov or adc sbb pop or jbe push cmp add jmp scas xor or inc add push or mov add add mov adc jne call adc pop cld mov push fmull push or push push add pop add adc adc inc add mov add mov jmp mov push call push mov lea pop out adc add jl and (bad) push push arpl loope (bad) (bad) call add push mov call mov call or call dec jge xor mov mov shr xor test jle add add or push pushl push call mov cmp jne add inc add shr cmp jl jmp pushl call pushl call dec pop sbb and sub mov mov call push mov jmp lea or call mov lea roll cld adc xor fbld gs inc and push push jmp call mov add sti shlb adc call sbb jge mov adc call adc push add call sbb mov push xchg pop add xor adc push in push pop sub adc cmp or adc mov imul lea call andl lea dec and push cmp movzwl push lea mov add push adc add fisttpl or add sub pushl add add lea push mov adc mov lea mov lea add leave and jne push inc nop add add nop add lahf cmp inc add mov or xor cmp push lcall add pop add adc popa add push adc je cmp jne push push push push push add add push push mov pop push mov lea push push call mov adc push lea push push xchg push adc enter push orl add push mov lret inc add aas add dec sbb roll mov mov lea mov mov call and adc loope inc jmp add aas push add or add xchg add mov add add aam call cmp test inc cld push add xor sti sbb inc cld pop (bad) xor jne call sub xor inc lea push call push adc inc mov call add es push add fistl call sub push lea add inc cld or push sahf and ja jmp or jg add mov sbb jne dec dec pop adc std (bad) (bad) pushl adc call or call add add imul inc (bad) (bad) (bad) mov or add add pop adc ds xor mov sub add dec push movsb pop and incl cmp imul add push push out dec or (bad) call or mov stos pop or call push sub xor lea push push push push cmp mov call add or ret je push lret pop loope adc inc add push stos and imul mov int3 push mov imul sarb popa gs cmp lea push push jmp inc mov mov add mov xor ret mov dec dec push je sub jne push xor mov inc or push jne mov call add cmp jl pop pop ret xor mov mov shr test je mov call inc cmp jl adc adc inc or call adc push dec dec je sub jne mov sub ds je sub jne call sbb jg add cs add or and adc add xor and jecxz add daa pushl and adc cmp xor mov call mov xrelease and adc pop pop pop push stos or push push push push pop push mov push jle adc push push call push mov mov add mov lea mov push movl movl mov mov mov mov mov movl fmuls xor sbb add push push push mov push push push mov push push loope add jecxz sub jecxz add push mov xlat addl xor or add sub pop push lea push push call and adc add push mov movl xchg xchg add dec adc add cmp pop setne push js adc add or lock inc hlt xor lea stos stos push pop mov lea rep movsw xor mov or je mov mov call cmp jne push lea and rclb push lea or lock (bad) in cmpsl or cmp or and push add add add mov imul mov or add xchg popa pop adc cmp jb adcl sbb mov mov aaa xor call adc xor repnz inc inc and add inc (bad) call int3 or fmuls bound ljmp push stos add add (bad) add decl sbb or push cltd sbb adc add popa jo call sbb add call or dec call cmp lds pop push push or call push push inc sbb inc and push decl outsb or ljmp adc add call rclb jmp orl aam sbb push jmp sub push mov inc or xor call mov push sbb or inc clc cmp jbe mov movzwl cmp jne add push or call add push dec or or call add add jmp or inc mov inc mov cmp jb add or lea cmp call mov push add (bad) ss cmpsb aas or sbb notb (bad) je mov call push arpl call or test add call cmp je andl or test and dec lea push push call adc test add dec pop and push push call or rorb push sub xor inc movsb add add fisttpl mov add push xchg sbb sar movzwl sub call add popa or call and gs adc cmp fwait add add test push call mov cmp jae xor loopne sbbl call repnz mov add call pusha adc lea xor call xor call or add adc mov jmp mov das je cmp je cmp jle dec cmpb add add (bad) or add out mov lea dec or (bad) mov std sbb add (bad) mov xor add js mov add in and cmc inc push fisttpl push or add push mov add mov cmp sbb mov add and or adc pop sub sbb inc add lahf lock sbb adc (bad) jne push mov push mov loope or out (bad) ljmp jg,pn or aaa mov cmp mov lcall push popa add hlt and jne xor call xor push mov test je mov sbb femms mov adc push pushl lcall xchg and sub popf sub out sub cmpsl add out or or call mov pop pop mov inc sbb call xchg sar (bad) jmp push andl andl call mov pop add adc sbb jne mov lea stos or mov in sbb sbb xlat lea push adc adc test add add call jo (bad) (bad) lcall rorb pushf add add hlt mov or call lock test rclb push lea push push push call push call test je call mov mov call mov push call push call mov add incl cmpl movsb fiadd ja cmp jbe call push mov call call call call mov sub cmp jbe mov mov call mov jmp mov push push call test je push add or pop push push call pop pop test jne call lea in (bad) decl and dec mov pop pop leave ret push mov sub push push pushl call cmp je cmp je cmp je test je xor jmp pushl lea push call push adc inc add call adc cld loope add mov call push call cmp je and std (bad) lcall or sbb adc push push call test jne push call mov pop pop leave ret push call call mov (bad) lcall mov call sub push push push lea call movl ljmp push call mov xor shr mov cmp jle mov push lea mov pushl call adc stos mov sti (bad) (bad) call or (bad) incl cmp jl mov xchg inc push or push push and lea ds (bad) decl ss sbb sbb sbb sbb cs add cs sbb sbb (bad) jmp mov mov in rorb or mov lea rep movsw mov mov call lea call je sar incl sti sbb movl lea push call orl and decl mov dec js and push push mov mov in xchg add les push mov xor sbb and add or fmulp (bad) inc test je sbb int adc add mov jmp pushl push pop call lea call adc lea mov inc and mov (bad) mov call push push call call sbb adc and inc add bound adc lea adc sub adc js adc dec add or inc jno lea call push ret call mov call imul (bad) jmp add jmp leave jle mov pushl call sub mov inc shr cmp jl imul add add mov call jno or lods mov dec and call xor adc add call jmp push mov jg sub adc add adc lea push pushl call add call and adc call lea push call mov test je push push pushl mov call test je push test push or (bad) push push push sub (bad) call push call pusha mov pop mov pop ret push mov call push mov call mov sbb cmp jge xor cmp setne pop ret mov pop ret push mov push call (bad) je xor ret push mov push call push call mov pop and sub push push pop mov mov xor mov inc dec jne mov mov mov lea push push push push pushl movl call mov mov mov shr and or mov and shl push or push lea shr shl push pushl or mov call mov push pushl pushl pushl call push lea push lea push push pushl call cmp jae mov pushl lea push pushl call sub add pushl call incl addl cmp ja pop lods mov mov push cmp call sbb movsw movsb mov inc fsubs call mov mov mov andl movl mov cmp jbe add mov mov jmp movb movb movb movb add sbb or inc add je lea push push incl test je sub mov cmp jbe decl jne cmpl jne add add inc clc mov sub mov jns xor jmp mov mov mov mov in xor pop push pushl mov lea push lea movl movl call add push push push push subl inc add ror push lea push push pushl call setne leave ret cmpl je pushl call cmpl je push or dec and inc add push mov mov push test je push call inc add cmp dec add xlat mov test je cmp je push call pop inc pop sbb rolb or xor push mov cmp jbe push pop mov sub mov jmp xor mov mov mov shr and or mov shl push and or lea push lea push push push shr and pop shl or mov mov mov mov mov call cmp aas mov mov lea mov add cmp jae mov jmp sub xor test je mov xor inc cmp jb add incl cmp jb mov pop and xor jmp adc or or ja push mov push pushl mov call or fdivrs add cld movsl xor pop pushl lea fstl inc add adc loop add add push or add stos jo fs mov mov call adc sbb inc inc sbb add inc and push call xor mov inc adc xor add or rorb inc add inc adc inc and sbb xor cmp or decl inc and xor lea mov mov mov test jne orl jmp push adc lock call mov mov mov cmp je push push call push mov push push push push pushl mov call mov cmp je push push push push push call xor clc movb and cmp je xor pusha sub inc and push push call add test je mov shr cmp ja cmp jne xor inc add cmp jne call cmp je push call push push pushl call cmp jne push call xchg xor jmp mov cmp jne mov pusha adc sti je push insl adc loop add pop and je pushl call cmp je cmpl add (bad) mov orl sbb jl decl jle dec or adc mov call sbb cmp jne mov or lcall xchg xor xor mov cmp jbe mov add push and rorb call mov add add push push lea push call add inc cmp jb pushl mov pushl push call pop add je dec call or add and and mov push pop call or sbb dec sbb sbb cmp je xor add mov lea movl call push sbb call add or push call cltd xchg (bad) (bad) pushl lea add or or lods or insl enter adc adc (bad) (bad) call or js xor call add bswap (bad) decl add mov call cmp jle and push mov add sbb loop (bad) ljmp popa push add (bad) decl in lea and add mov push push push call or add add inc pop or lods xchg cmp or idivl gs hlt or call or call or fldt or adc mov push push push push push lea or mov jmp add (bad) add ret jns pushl mov add es or or clc sub or push push mov lea push call mov shll add cs add push inc push or adc add dec inc push pushf or mov add sbb test adc push sbb fistl les xchg or mov and add pop add add test jl clc pushl adc adc or lea adc rorb or mov add or adc je push add xor decl lahf push add push lea lea je loope or psubd (bad) je push test adc pop push add pop push push or mov push sbb or add pop push adc and call or lods or add push mov aam pushl leave mov movl cmp je mov add add insb adc push push lea call xor mov inc or inc and and cs inc and lea push push add sbb inc and push call je push push push add and je and adc je add and lea call lea sbb je and (bad) imulb xor add add call pop pop orl xor iret ret mov or or idiv add inc add add (bad) mov lea ret call mov pop inc add xchg push inc add movl add pop inc adc test je push inc or or inc and sbb orl mov testb je dec inc sbb and push call test push inc adc mov inc add mov or xchg movsl lods inc inc add push push (bad) or jno pop push dec adc sahf pushl push dec adc mov mov call mov jmp movl mov test je push call ret mov call sub push push push push movb call mov mov call xor mov cmp jne xor jmp or push xor cld movl sbb cmp je pushl or or in push push push push pushl call mov cmp je cmp test add add je fimul in xchg add add or bnd inc inc cld add sbb mov push lea call mov sbb or adc add xor je mov mov push aaa or push push pop lea movl movb movl or inc add (bad) je mov mov add add sbb add inc mov sar add mov add add call add add inc call incl mov cmp jb or adc mov add vmovshdup add inc and or adc adc mov mov push push call add jae jns adc (bad) cmp jne mov mov add and cmp and sbb push lea push push and and je add mov cmp je cmp je mov jbe mov push sub push mov call add incl mov cmp jb xor xor add or mov jecxz,pt add hlt adc out hlt adc sub imul push push mov mov mov call add jb or adc shr add add mov movl pop call jmp or inc xchg push and add push dec scas adc mov cmp push scas add add scas add push mov add loopne pop mov push lods sbb lea push call or mov pop xchg inc sbb pop dec lea call cmp je xor out add and jb (bad) cmp je mov sbb or loope inc add aad sbb pop adc cmp adc push or jbe xor push add add add sbb or jp lret add add jb fistp push pop cmp je inc loop mov inc orb rol subb inc movb mov call push hlt test je mov mov push lea adc add out push movb mov call push inc nopl mov mov add (bad) sbb insb fisubr (bad) incl cmp cmc push xor add cmp je mov mov push jae,pn add or test cmp push add push mov je mov sbb or inc (bad) ja clc and jno ljmp pop cmp add add sbb or in push add add add add and jns push add add and inc mov cmp je cltd push add push adc push push mov call mov mov sar lea mov test je mov push pop mov push lea push lea movl movb mov xchg mov mov test or add sub add inc and jnp add add jnp cwtl mov test jnp add (bad) (bad) dec add add test add jnp cmp jnp adc sti mov cmp add int3 sbb cmp je mov jo xchg add or dec movb (bad) mov inc xor add cmp pusha cmp add inc movb add add cmp dec or add cmp add xor test add cmp mov and add or scas and dec or pop add add and js or call or add or and jnp add adc jnp and mov int3 inc out call adc pushl lea or call add adc push test add outsl rorl push push loope sbb (bad) je in or or add rcll mov cmp jb cmpl and dec cld inc mov ss dec dec push insb in movl add xor testb push jne orl cld push mov insl (bad) jmp add cmp xor add add in jne int add jne aaa pop add lds orl jne sub (bad) jae in ja fcoms inc adc js adc or (bad) mov add pop fdivrs fimul test jne cmp jbe add lea push call inc mov lea mov test je mov push lea add sbb movl add or mov or mov popa lea call dec test or icebp test je mov push push and jmp add insb and (bad) add or mov push ss add pop add fisub mov adc adc (bad) push movsl or lahf cmp decl movsl or cmp movsl or add sti add (bad) jge in add aam jp mov sbb mov mov mov cmp loope add icebp or push push pushf adc cli push add or push push loope adc mov sub adcl push mov xor movb lea push call add rol rorl cmpsb or adc lea call or push add arpl and or mov gs insb std push add or pop or cmpl and jp popa push sub movb mov push call sbb sbb xor cmpl sub cli xlat add add ret inc add mov adc push sbb dec hlt sbb leave ret mov jge and in pusha and aam or sahf cmp sbb jnp fsubrl add mov int3 xor jl or mov mov lea jns or mov ss and je jge cmp jbe and lea push call add clc sub jmp cwtl call xor inc add (bad) add inc cld and lea mov test je mov push subl inc mov movb movl loope xorl and cmpsl popa add add out sub mov cmp jb and cmp je xor mov adc inc push add es test dec mov jmp mov call add and lods and push xor cmp test add call and add in lods or pop in popa sbb in jno or push push popa or cmp jne inc in cmp je add pop mov push push cmc or push add pop mov movl movb mov call sbb add cmp je push orl rcll inc enter sub enter pop movb mov call adc add lea lahf or or pop cmc add mov call adc pop add push popa mov mov jbe inc lods add mov push add add ss inc jae or xor sbb call test and jmp jp and js dec push add and pop fwait cmp cmc pushw fwait or in fwait or outsb jns or mov and jns,pn add and aam jns fcoml push add push push push push and dec aam pushf push es or je pop in cmp jbe adc lods data16 sub pop dec lea call push pop push or inc or sbb addr16 rorl add push rorl adc leave push lea and lea movl movb movl mov das push cmp add push cmp adc mov adc jmp dec movb movl add sbb mov mov dec add addr16 dec add repnz or inc xor sub loopne mulb inc push or jne cmp inc add add je insb add pop and sbb fmuls jp add (bad) sbb sbb cltd cmp add gs add fdivrl aam call jne call mov cmpl and dec inc or sbb call push and inc loopne (bad) cmc out add inc in test je cmpl jbe lea test fs add es or ljmp gs jne clc sbb or jmp add gs add sub cmp and add inc shll and sbb test je mov inc pop add push cs add (bad) pushl mov xlat mov cmp jge pushl call jmp mov push pushl lea add loop jb adc push call or sub push clc adc (bad) je cs add stc push push add jl and add or cltd (bad) scas insl inc dec add adcl cwtl push call decl jne dec add inc sbb cmpsb add jne and sub or std std mov jmp mov inc (bad) inc inc add add pop push sub add inc add inc xchg (bad) (bad) mov sub call mov xor cmp movsl popl nop push add pusha inc in push push mov mov call cmp jne mov call sbb sbb or call sbb movlps xchg sbb inc lock mov cmp je pushl call mov push fimul add push fimul add add add jmp xor mov (bad) (bad) decl or xlat push push lea push call lea add or out pop add (bad) decl lea test je test je mov push push lea movl movb mov call push lea dec mov mov js add inc out push (bad) or incl sub add movl push push or add test (bad) incl sbb scas (bad) decl sarl push lea add sbb test or movl cmpl je sahf add insb test add int xchg xor add cltd push adc (bad) mov push push sub and loopne test add mov sbb push call mov adc unpcklps push lea sub cmp movb mov call or mov popa test add pop add add addb sbb adc and sbb mov xchg pop movb mov call add mov xchg call add mov lea push add popa inc add push adc or push fdivl sbb inc add add jmp lea push call lea push push add and adc sbb adc push add (bad) decl lret aam add pop push push add (bad) lcall in add adc push push orl add popa jecxz pop or out mov sbb add or int3 or call sbb aad add sub arpl add shlb add xlat add xchg jns add pop loope add ret gs mov or dec call call mov pop cmp je cmp jne mov call add add cmp fstps cmpsl (bad) (bad) cmp jne mov jmp scas loope or push xor adc add in push les add rclw andl pop rcll lea adcl push call movsl out add movsl out add push push or pop movl movb mov call cmp je push arpl push std or pop adc adc xchg add adc or jge call lea cld or es test mov movsb or sub fs adc call std or adc das dec adc call adc ret or sub cmp (bad) push or sub pop add push (bad) xor ljmp ss movb mov call add or rcrb out push inc or xor pop sbb dec in add cmp jb push add xchg dec push add cmpsb dec push add sbb pop or add xchg pop dec add pop pop dec add movsl add push push xor mov push inc sbb jne call add push add movsl shll jne xor jmp (bad) inc add clc jmp xor cmp je push imul cwtl inc aas sub cmp jne mov and data16 pop adc pop (bad) decl and (bad) push push add add rcrl add test or add add pop add pop insl stos or mov clc mov test je mov mov inc ret or movl movb movl test lds (bad) push push add rcrb jmp cmp je call push call adc sub xchg fimul add into push scas or adc or in jb push stc sbb jne mov lea call dec je call cmp je pushl pushl call push xor je pushl push push call sub xchg jne or push outsl or dec adc call sub mov pop sbb adc ret mov sbb add sbb push jne orl cld add inc sbb push (bad) orb mov loopne adcl xor cmp add (bad) adc fmull fisttpll mov sbb fdivr push lea mov or jne push mov add push gs loopne push push jge add (bad) jne pop loopne adc icebp add add mov loope and sbb or je push sub shr leave add push inc add sarb div lea mov test je cs adc xor adc add aaa or mov or add popa mov dec mov aaa cmp call lea test push rclb add adc cmp inc mov call adc je mov mov add add out cmp movb mov call or add test add sub sub dec dec adc loopne push add int3 inc push add lret adc movb call or pop decl out or idivb (bad) and adc test adc adc cld movl dec sbb cmp jge sub add add push push call and adc in mov mov push call mov mov push mov call or mov add and push mov call sub sbb xor call xor call push push mov call or push push call add in or repnz sub xor or pop sbb inc add and dec mov push push mov push push mov adc or (bad) incl add add mov inc adc push (bad) ljmp push cmp sub call mov call sbb je push mov or adc mov mov mov push dec push adc inc fmull and pop loopne add rorb outsb or jae add std or shrb push add mov push lea pop or int3 aaa mov or pop rcrb push or adc add cmp sbb push push fcoml add and or push call sbb push cmp jne xor add add add add push push xchg pop sub call mov mov or (bad) ljmp jecxz or pop icebp push and inc repz mov cmp je jg and sbb push adc call adc or inc call in mov mov add add add fldl xor call or jmp adc (bad) decl ret hlt pop pop lea add leave and das or call adc pop call or inc or pop and push push pop mov call add cmp add cmpsl add sbb mov call or add mov or and add add push push sbb add adc inc cs call and mov loop push cs jle mov dec mov rcrb lea call and sub add sub or fsubrp mov inc and mov mov push out add test bound adc call cmp lea push mov call mov pop add cmc (bad) decl adc or iret sub sub add and adc cmp pop push lret je push mov push call add adc into cld (bad) lcall sbb add add sbb lea call orl call adc dec and inc mov call push push mov mov and pop call testb je push call pop mov mov xor push add cmp push push push push xor push xor call push jmp add adc sub push call jmp sub test je push call adc sub dec push outsb adc test je cmp jne push push call or lea push (bad) add decl ret das add jl adc inc je mov push call push call call mov mov push add cmp inc add adc push sub jmp push mov mov call (bad) je push mov (bad) call ret movl call and sub inc add (bad) je lea and push push push push and jge call adc call lea call cmp je push or push call movsl fmuls add add dec or push xchg decl lods adc add gs enter je push daa or and xor and or push movsl or xor lock (bad) ljmp or jp pop jecxz dec or add call push or push arpl pop or in sub mov push call jne push push call sub push add or call push dec and mov loope inc out sbb push push call push and add int3 sub rdpmc adc and push call sub cmp icebp add insb inc add outsl mov push sbb push push call sub or add fucomip add call ljmp decb notb add push mov adc sub call push out mov mov add add lea mov mov push call sub dec jne pop pop ret incl addl and cmp cmp add mov call or xor lea push mov call adc mov mov mov cmp push push push push push mov and sbb jecxz add (bad) jge popa inc sub shr pop add mov lea call sub mov lea movsl movsl movsl movsl inc or or add or sbb call test jns add mov mov inc and lea mov or dec jne jmp mov mov lea push adc sub push call test jns sbb push in push add dec (bad) (bad) decl add (bad) mov dec or push mov push call test js mov or and push add outsb add ret sbb add (bad) (bad) ljmp or call sbb call push les or cmp or call les add add add test call add xchg add popa bound add inc add add call std and add and or push push decl add pop bound push stc adc mov or dec add inc xchg add int lcall add mov cmp push mov add or jb add imul or adc dec add xchg add cmp add pop add dec add jge sub mov mov push push call inc dec add cld pop loop add add push add inc add fs repnz xchg add add mov add add mov push push add inc dec add pop bound add int3 or lret inc int3 pushl data16 add mov push xchg and je aas adc mov mov and add add mov add fcoml mov mov mov loop pop or add add push fmull push dec sbb pop add or pop adc push call push fimull and or push push call sbb push push add adc hlt add sub push or add popa add add sbb jo push add dec add add adc lea push push call test jns add cld xorl test inc mov out add fbstp jmp push push mov lock pop repnz cli xorl push and fmull ljmp mov and adc (bad) jge xchg movb add inc add enter addr16 sub lea push movl or adc or test enter xchg add and sbb jge or jae add add test cmp xor stos sbb or push add fmuls shrl call push fcoms in adc in sub jne mov movsl movsl movsl mov mov jne jge push lds leave aaa dec movsl mov push pushl lea push jmp push push pop add push movsl lds add jg call sub sbb test je add ss add fmuls incl adc je mov inc ljmp shrl add clc pop add clc inc add add sub add adc sbbb xlat or pop jmp addr16 ljmp xor push push mov call or je push push push call push mov repz repz adc sub or and and jl xor je push or dec push push push push call push push push call adc xlat push call adc or rcrb xchg or push push push push push push push push push call or adc mov jmp pushl mov call cmp jl pushl lea pushl call xorb and pop mov jmp xor sbb nop adc subb jle and sarb pop and jmp sub and mov lea push mov adc popa in add push mov or ret jge sbb jo or add or push push cmp sbb stos cmpl adc xor and inc and push orb push movl je or and push jmp push adc or call add cmp add fisttp or xchg push or or dec call sub xor pop cmp mov cmp jne call add and leave sub clc push rorb add push test push (bad) or push lds or sarb adc lods sbb add add mov push xchg xor adc mov sub add or movsl add nop cs add stos push push call jbe push mov add and push and push or rorb adc and push push call cmp sub or add mov mov add add add push or add add ss mov add add shlb pushf rorb and or add mov add mov add inc sbb and mov adc in adc sbb push push js sub call mov add add je or or call add push mov adc movb cmp je push call mov add std push mov add stos mov pop or jne xor push mov call popa and add movsl adc aam inc add mov push push insb and sbb jne pushl push call adc and jne push call dec sbb imul add mov call mov cmp je movb lea push push lea sbb mov call adc cmp hlt call cmp je mov cmpl jl adc sbb out inc add add pop or push mov xor inc inc leave cmp add add push adc push test or pushf and push jno push fwait ss pop and orl mov call adc and cmp jne xor adc add or (bad) (bad) mov xchg xor inc (bad) ljmp adc add icebp js or add add and add fisttpl push add push adc push add lds push add push add add and push add push add push adc out inc add cltd or add add add push and add orl add inc push pop xor mov or test clc aaa add or test add add or test or test add test add je and je incl (bad) push cmp pop and movl incl push loop push lcall and push call adc call add push lcall add movb insb push call add int3 sub je adc jl sbb adc (bad) mov sub push cmp test adc sbb push lea or mov adc push adc adc les add xor rorl cmp mov push jns add jmp mov adc push add and sub call rcl lcall test pop or push or add scas add push and fcomp mov adc adc adc jbe sub dec and jp pushf cmc rclb call or adc call sub dec adc xchg sub add push adc xchg xor rcll cmp pusha adc in dec jg mov sbb mov jb push decl or je sbb sbb xor je xor lret in push push call inc sbb (bad) je mov movb test jne inc add add or sub cmp add gs sbb jne push flds inc and call inc cmp jl jmp mov call adc push test (bad) (bad) pushl rorb es adc test mov jle cmp jge cmpl je push pushl pushl call and pop and mov jmp xor dec lahf or add push jmp mov mov push push lea lea mov call push jl or (bad) adc jae call pop mov pop ret sbbl lea push xchg sbb pop hlt push xor mov call jne dec lock xor push mov add dec mov inc movsb mov inc dec jne mov push lea push push call mov mov mov sarl enter sarb push lods jb mov cmp jl mov mov cmp jbe mov push xor sbb push mov push add xor clc add mov ret jne add sub jmp cmp jne cmp jb adc xchg mov pop mov mov push mov and and lea push call or mov movzbl push movzbl add add add add add or mov push movzwl add lea gs sbb add pushl push push sub or adc adc nop jae ljmp adc add fcoms xor or call sbb call call sbb out gs xor hlt adc or push or add add sbb adc sub or xor or cmpsb add xor push add andl pop mov cs add inc mov and test test aaa or cmpsl decl imul (bad) add add add jne push call mov push cmp inc sub jne xor orl inc push call (bad) cmp (bad) push outsb push add ret outsb push add add fs push jns or add and inc or mov xor add popa aad ficoml push push call add popf movsl mov mov or decl add adc or push call inc and mov ss or mov mov add inc test add add push out sbb or add add movl inc add sbb xor mov ljmp or lea push push popa into dec sub jl sbb cmpl je push add push sbb mov mov mov sub movb inc dec jne lea push lea xchg add or sub push mov xor sub (bad) incl and test push pop or mov or call adc jl jmp or jmp or xor push lea push push call movzwl push push push movl add push fisubl movl call leave shlb inc or les push pop or or inc lock push sbb in call or push push fcoml dec loop add xor xor pop leave ret mov jmp push cwtl pop add ja cmp cmpsb add push call cmpl je push out or call pop push push sub add push scas or loopne call call test jle push lea mov call jmp call xchg or mov jmp add in push push or add and call pop or and add push call add adc mov aad or xchg or dec push xor lea stos stos stos push stos call push add cmp mov adc call add add add and add xor mov push push cmp enter add dec and push push push xor mov je sbb inc and popa inc or add xchg popa inc push outsl or or cmp push or xchg push adc push call add lcall insb call add push mov call or jo dec add cmp push cmp add aas gs and add out adc jbe adc in push add push adc or into sbb push adc or mov and gs push sbb add sbb push pop or pop adc sbb mov xchg or aas (bad) lcall mov or add push xor or (bad) push add push jg add test mov test daa xor cmpsl or mov xor test push jne add add xor (bad) adc adc or rorl mov (bad) call adc and pushf xor push imul push or pop add add jae adc pop add test je sub cmpl push add insb test add and inc adc test and inc lods adc xor call and (bad) jne mov imul push push inc cmp and jge add ds mov into mov mov push add inc xor and add adc push adc pop pop mov test jne sub or and call adc orl or mov push dec add adc lret cmp or inc adc or push or push scas or push call add je and inc adc xor test test or in mov and call push xor inc push sbb or lock add inc inc add cld push into adc or add push push sub sbb push pushl pushl push pusha push or call adc cmp je jne push call push pop push sbb pushl push call add add fisub mov jmp inc or mov push mov call xor cmp jb mov lea push push push add adc hlt call push inc mov je add sub cmp jne call jne push sub mov sbb inc clc push lea dec sbb call mov or jecxz add inc and add or jne incl sarb cld pop sete or xor add and add push inc push add ss inc push and call push add push adc and add cwtl or add add adc and add (bad) or add add adc add push sub push add push adc add add push loop sbb (bad) call inc push add adc xor outsb add xor aaa cmp das cmp daa cmp pop cmp pop cmp (bad) (bad) je incl add push fimul stc adc or cmp add andl push inc add lock movl cmp shrl and mov dec (bad) (bad) call push pop mov push xor lea push lea rep call mov call add cs add pop push dec adc jp add js inc add pop adc adc imul jbe (bad) incl mov mov call push pushl lea xor pushl test loopne in or sub add mov inc dec push jo add push or test lock aam es push pop dec add cmp adc sub rclb dec dec and lock mov mov into ds jge mov movl and add in lea mov movl fistpll or add notl inc in ljmp movl call jne add add add add cmp mov mov adc pushl push adc add hlt cmp push adc or test jne mov imul sub incl mov cmp jb jmp movb mov or in add sub push push lea call adc mov adc call movb call add jg sub xor push movsl or or movsl or adc add push mov (bad) push add xchg in add xchg or in or call xorl sub pop add daa adc call or (bad) mov call and out or je adc je dec or and dec xor incl dec or call mov cmp push (bad) or in pop push push mov movsl or push addr16 and clc push movb call jne adc cmp je inc dec pop lea movb inc dec jne mov push lea adc or mov jbe mov cmp jae mov mov cmp jae test jle push push call test je jmp mov mov mov mov lea push mov sub push add push push call test jne add jmp cmp jne cmpl je push icebp or jb cmp jb mov push sbb add inc sub push push push mov call fistl jne push call push push and dec (bad) (bad) call adc or inc subb or or add push out or add xor xchg add cmpsb or es or or dec push loope sbb push push call sub or sub call or or sbb add dec push es or push add es lret push call jnp cs mov (bad) inc add cs add hlt add add cs orb add pop and add sbb add dec push arpl and je mov pushl xor add adc popa mov mov pop leave ret mov call and cmp xor adc jne call adc pop cld lea call sub add add add jae shrl (bad) call push add push sahf (bad) inc mov inc shr sub int adc mov adc or add jne mov call and pop inc add add push add dec adc adc mov push lea push mov sbb ss (bad) decl in push mov adc jne call sbb mov cmp jne push lock add stos jnp decl sti jg jmp push mov or or pop adc aam cmpl add jnp lea or adc ret mov jae add sub push xor push cmp je cmp jle add or sub mov call pop add xor mov push pushl call adc pop test je push std sbb add cmp je cmp push push adc inc cld add cmp fwait add jp or adc xor mov push cmpsl and add add call or lea call or call or add add mov mov push lea call push and or lret lahf or inc or adc andl idiv lcall push add xchg add add (bad) and cmp scas shrb lret cmp jl mov call add scas add and lea (bad) call push lea push add push and cmp jle push xor add add or es bound inc int3 push pushl call and mov cmp je mov bound add sub pop out and test bound fsubr js (bad) decl or sbb pop jns out adc jp mov out inc jne add add xchg cld daa adc push call adc insb push insb dec or adc ds jae add popa es adc sub jmp sbb jno adc push call add mov inc cmp movl incl push and movsb or scas das adc call add mov or add cmp movsb jmp push adc adc rorb push pop or (bad) inc aad or test movsl pop adc dec add and sbb inc or add adc sbb push add popa call je dec adc adc or sbb icebp or or xor add add adc or into dec adc xor adc sbb adc xor adc sbb adc or lea push dec and enter movzbl push add add add push add push add add push sbb push movzwl add pushl lea push cmpsl or xor or incl and lea rep call or push jne mov rorb lea call mov or jbe rclb je adc test push add test add add add ret add stc mov mov imul mov cltd idiv mov imul cmp je inc andl mov test add add and push (bad) or test cmpl push mov call or add (bad) adc sub xchg or inc cmp jge adc add enter jne xor add sub mov and add adc add dec jne add inc mov adc jge add sub test and add adc dec adc xor add or adc add or insb add ret outsb add jno or pop and popa cmp add sub add mov gs cld and mov add mov add cmp push add popa cmp hlt add or xchg sub push xor mov inc adc iret adc or add adc jbe adc mov pop adc jne push add push xchg adc jb add push add push pop adc sbb jno gs inc adc jnp add add inc adc adc pop adc mov or or lahf add add add jl mov nop adc add sub jecxz or or mov popa and or adc sbb push lea call push rcll adc or adc pushf and add add add dec and sbb mov adc stos call push mov call adc fdiv inc add push sbb xor push push sbb xor add bound add std adc sbb insl adc mov roll add jo add sub fildl fs xor and pop lea rep mov push lea push jb add xor jb sbb add push pop push and and mov mov pop adc or jns or es add movsb test add add push add pushl mov lea dec adc lea push and testl push inc and and lods adc leave daa dec cmp jge cmpb je push sub jmp mov push in adc sbb in or push add test je push push call adc jo decl xor add (bad) push call adc push pop and or test imul call xchg add fstl lret punpcklwd push push push call sbb cmp je adc and loop (bad) decl cmp je out pop sarl add push (bad) and pop (bad) decl adc xor or xor add mov cmp jbe adc cmpl test push daa or movsb pop push push unpcklps push call mov ds or jne push je inc test je mov jmp mov mov call and cld sub push add push push mov add addr16 add loopne or push call call unpckhps or sbb add push push push iret or mov call adc je mov cmp jbe mov xor mov cmp jle movzbl ret xchg add add lret jl mov or and ret jb (bad) call push pop nop mov cmp jne adc pushf pop and sub mov push call jne push pop pop add jb insb add adc pushl call lock inc push and lea call pushl or pop hlt mov incl add cmp jb add pop test add pop xor and pop push or sbb lods adc shr push nop aaa add xchg push je push mov push es push or cmp fimull sub call or popa add push into bound insb push or clc pushl cmpsl add push push pop and cmp inc or or or call pop mov pop mov mov call add lods push mov add insl adc push or push mov add (bad) or jne jle push push lea cmp adc clc movsl subb movsl sub push push pushw add fs dec push sbb sub imul outsl in ss push add in sbb or adc into or xlat push test add (bad) and xchg or jbe push dec xorl jmp push sbb (bad) push inc test and pop inc adc idiv mov imul sbb xlat add add call movb decb jb inc mov sub add push jg sbb orb add mov push or or add mov repz sub and shll sarl movlps xor jg decl add call adc add add movl cmp push add add push rorl push or ret inc loope add out push add out push adc and adc cmpsl push add push adc push add push cmp push push or test adc pop adc call pop adc test je push movsl xor insl es add mov lea add jecxz adc sbb das mov imul push or add sub jp sbb push push push push es lea jnp add sub add rolb or or call mov orl pusha push xor adc call push imul inc add mov inc pop add addl dec add dec adc shrl sbb sbb add test add adc and adc add lahf add adc or push and sub add xchg mov and fdivrs call add xor sbb test or pop xor xchg int push call sbb pusha (bad) (bad) call arpl call cmp pusha push adc sbb push push loop adc push call fwait pop add push ds pop add push cs pop add add sbb in push pop or push pop sub rorb add lock sahf add add nopl or fldl add inc push add test mov and xor adc loope lea popf add popf add inc dec mov add inc xchg add dec mov cmpsb add and or lds xchg or add push cmpsb or test or mov pop push lret insb add dec add dec imul inc imul clc inc add call pextrw push mov jnp decl xor ret add sub add icebp and add add or or test and std add jbe sbbl cmp push mov aas sbb sub inc rclb xor aas add jns push call xchg push leave addl add sub into call mov call add mov add call push push (bad) inc loope fistp add lods icebp or pushf jmp push jecxz add dec inc outsl or cld sub pop sbb call lea enter (bad) ljmp sbb mov call sbb addl add adc add iret or outsl add nop add mov add mov call inc add mov adc adc xchg or xor adc les jg adc pop add faddl imul pop or pushl leave mov cmp je cmp je or test add test add test add movsl (bad) and dec sbb test or add inc lock movl mov in add xlat and or test lea sub inc add fimul push add and (bad) ljmp add adc call add add adc and mov adc push add pop add pushf or cmp or mov cmp je cmp je cmp je cmp jne incl cmpl jb xor pop pop leave ret mov jmp push mulb sbb add test adc or add icebp leave scas inc xor mov mov cmp je lea push push push push test add jno sub je or std add add dec cs add inc add enter dec add test adc jge dec or mov rclb or sub sbb push mov push pop lea push cmp push add push fist add insb inc scas push incb adc push call add inc cmp push xor push xlat or push lea push add pusha call add test je lea push push call pop pop jmp cmpl jb mov xchg sbb lock incl push or pushl push push sbb xor mov movb jmp add ret inc jge inc push mov call mov mov push adc push and rolb mov add add push loope sub xor lea push push call or push push sti or push push cmp test adc add call pop and in (bad) pop and push xor adc and pushl ljmp cs adc shll inc mov lea add pop push out adc jl add pushl or add sbb popa push cmp cmp call mov push xchg xor push push pop mov mov movl dec data16 ljmp sbb dec pop add xor pusha adc push push arpl and xor (bad) mov push lds add sbb sbb adc lods push sbb add or adc xor daa sbb and push adc popa sbb mov call add sbb or adc jmp mov sub mov xor or adc inc and push mov or sbb mov call or adc push andb adc sbb mov push je adc push insl bound aas push pop cmp adc and push sub call or orl or xchg rolb inc or push lret sub xor xor cs das add push arpl (bad) jmp push mov push push push call adc adc push call adc add test cmp sbb call add test jne push inc inc and jne push push jne call add cmpl je push pop or add push call pop call adc mov call adc sarb push test or test loope or lds in push (bad) or push inc lods cmp push add push call mov mov push inc and std or jge push ja add adc or sbb push fs test pop or lea add add or adc adc add cmp outsb or call mov pop pop mov call or mov or inc or jmp or nop and push pop test jne push call cmpb je push xchg popa or pusha push ss pop adc push cli sbb subb adc or test push mov or cmpsb and (bad) or test inc or mov sbb add sub cmpsl adc pop or push or add leave dec add test stos adc xor cmp or lret push (bad) or test mov ss adc add and or add xorb inc and inc popa add xchg or inc push (bad) or xchg dec aas add push (bad) or adc or pushl adc add call add xor mov or jne cmp cs add js push add into push leave or push add decb add add or add or inc push adc cmp add cmp or add test add push adc insl orb push and pop sbb add sarb add pop gs and popa jns xor gs sub (bad) call push mov sub add mov fist movsb and sbb xor loop call add cmp mov lea mov call add pop xor mov lea adc and outsl insl popa dec or test push fsts and push lea call push sbb pop add call add adc push jge push lock adc sarb mov add adc adc jp prefetch inc outsb or add cmpsl adc inc and adc sbb xor mov adc add adc or inc and add inc inc rolb push mov add mov add push and lea push jo add xor addr16 pop adc and jb and call sbb sbb add invd mov adc push iret jb and orb push xor xor movsbw shl mov inc cmp jl lea out sub pop mov mov add add mov add adc aaa adc pusha cmp jbe or and lea mov mov mov mov repz add adc fildl push push adc add (bad) jl mov mov es adc lock aas adc cwtl adc and mov imul cmp push in add push cmp add push xor iret jne mov xor mov mov cmp je inc cmp dec jge cmpw je add cmp jne mov jmp xor mov add mov jmp mov jmp mov mov mov mov mov mov mov mov call xchg inc loopne or jecxz cmp mov push sub and jne cmp je add push jno push and add add jno sbb (bad) ljmp sbb out adc push call popa and cmpsl addr16 xor push push cld (bad) xor and push add add push mov call inc push jno xor xor jl sbb repz dec adc adc sub or je lods add dec add scas cmp add inc adc or call add push or xor jae adc or xor stos mov sub sbb adc push repnz aaa sub or pushl call and pop add push push sbb dec sbb movsl xor movsl add push pop adc xchg inc adc fwait inc cs add cmp add push mov push mov mov mov mov mov mov or sub bound add dec mov call (bad) push nop sub fs adc xor xchg pop (bad) ljmp sub andl imul push call and push icebp sub or or add push push mov adc call sbb insb add insb add pop dec adc adc cmp lods add mov pop ss add mov ficompl decl adc call adc call add int mov mov add je push mov and cmp je fs add dec jmp sub jo mov add inc cs add cmp mov xchg adc mov add inc and mov push add add mov add and in sbb test mov inc push call push mov call mov inc push call mov inc push call mov inc push call add inc and dec adc adc cmp push add or cmp add mov sbbl adc mov inc push call or inc es and inc adc dec or je inc xor cmp je push call add cmp sub (bad) call sub call cmp je push mov push pop sbb inc and mov cmp jb or and add subb or add sub adc pop push icebp pop or jl push call mov xor or ljmp add clc call or call and (bad) je push mov adc and and daa or mov push or inc push movsb adc push push push decl sbb sbb cmpl je and add call pop pop adc or push jg add sub cmp push mov push call pop sub mov data16 es call add push pop push add xor push push xor add add lret sub in add push push dec push (bad) or test dec adc lea push add jne push cwtl jae push sub je sub jmp cmp je call jo and ret ss (bad) cmp je xchg ja add add daa push and cmp and adc push adc adc ds add push add add mov call or push or sub fadd inc cmp or dec add pop add xchg sbb inc add push mov or add shrl adc push add dec push lds add out popa enter xor pushf xor add add inc dec jne xor add (bad) add cmp jb add lea add testl lea mov mov mov jbe jmp mov mov mov mov add add add orl adc or into xor mov call or icebp xchg add in xchg add inc and test mov push inc push call adc mov add adc adc call or push call and add jp xor push mov lea mov pop call push lea push mov lea mov call xor push (bad) (bad) call mov add sub cmp add inc and add add call add or inc push call mov mov lea push lea call je inc mov push push push call push push pushl add call orl lea call inc sub add inc and shr cmp jb mov add inc add rorb mov pop mov pop ret push mov and push push mov mov sub push push push lea call xor mov mov call cmp je push pushl mov pushl lea push call test je cmp jle and and lea call add cmp decl inc sbb jne push call lock add add inc and mov shr xor mov test jle mov mov test je lea push pushl call pop pop pushl call xor test je mov cmpw je inc add cmp jb jmp mov xor mov lea inc add sub shr cmp jl orl jo sbb lahf push (bad) decl pop mov ds add clc add push push push call mov mov call and cmp je add add push push push lea push mov call test je cmp je mov mov test jle mov mov dec lock cmp je lea push push push push incl push add or add push push jmp add push push pushl call (bad) add inc lea push lea push push pushl movl sub and stos and (bad) cmp jne call inc je push call push push incl (bad) loopne add add mov xor mov mov mov xor mov add movzbl push lea push push call add lea push push call inc cmp jl movzbl push bound and add add mov jne call add inc add lock cmp jl push and mov pop push inc inc add or push push push call mov mov call push call mov jmp push call xor pop pop pop leave ret push push push call call call push mov call sbb jecxz add outsb lock push push push mov push push lea push push movl call add cmpl je push push pushl mov push lea call test je cmpb or xchg add push xchg add add pop and cld push movl cmc pop (bad) decl add pop and inc cld or add push call push add cmp cwtl adc add mov dec add add add (bad) incl add leave add mov add (bad) cmp push mov call push jo je sub pop dec (bad) pushl fisttpl add lea call movb push add lea push push call or add push add add or lea push push call call mov xor cmp jne call jmp mov xor push push lea push call mov push call mov cmp add or or push imul or decl add test add mov call or shll es adc xchg add push and jl call leave add add jecxz push add loope add cmp je push push lea push push call mov mov mov mov lea push push call add inc and push call mov add push mov and push mov and call mov mov lahf add sbb lea out adc mov mov or push lea popa push aaa sbb dec (bad) (bad) incl mov and cmp add cmp add sub inc add dec ds add cmp jb lea call or push test inc scas sbb pop and call and clc decl test add loope or push add decb inc dec or test add inc cmp add xlat adc in adc push lea mov call inc and add push lea call add add and lea pushl push adc clc or push pop add adc test or jl lea adc add test roll add (bad) sbb mov lea sub add add inc or test or or adc add cli add mov and call testb je xor insb lidtl (bad) adc adc add pusha or and inc and mov and (bad) cmp lcall lea lea xchg add movsl aad push add decb add add add adc test add (bad) je and or (bad) dec add dec (bad) call dec and and call sbb pushl or loope add je fs inc fildl or adc add std add adc adc adc adc pop call or push push sbb gs and dec (bad) (bad) jmp push push je dec call or inc add dec push push call add add je mov mov cmp je mov imul dec and jae cmp je push push or add sbb popa std add (bad) ljmp imul add pop inc push xor push decl mov cmp je test inc adc or dec mov mov mov mov mov inc add mov adc dec (bad) (bad) jmp sbbb cmp ja add (bad) or test mov add xor inc add add push mov iret mov imul add add add call and add add xor dec (bad) decl adc mov lret push or je sub push push mov call or clc cmp and push mov call mov sub (bad) adc decl inc (bad) incl push or call mov mov movsb or mov call sub push xchg or mov call andl mov push xor pop div test je mov mov call pushl push push call add xor add pushl pushl call mov call mov call orl lea call mov pop pop mov sbb or lock enter or add pop or xchg cli (bad) jmp in or call add add xchg sbb call add add inc or orl push or push call cmp jne inc and mov lea push push call add add pop sbb or push adc adc push ror pop and je pushl push repz push lea call lea test je mov push pop push (bad) loope pop lea movl movb mov call adc and push push inc xor and call inc jo adc cmp je pushl or js dec and lea call mov cmp je cmp je mov pushl mov lea inc and pop divl pusha movb mov call add mov je sub lods inc (bad) incl add mov std incl or call or call add lea push push push call push pusha or fdivr (bad) call cmp cltd std adc or call sub or adc movb clc incb and call add and dec push call rorl add add xor sub in push push mov mov mov mov mov add cmp jbe cmp jb cmp sbb cmp add push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop and inc add inc add add rorl inc add add jmp add add pop add adc add sbb add add add add movb or add dec add sbb in inc add sbb aam inc add sbb les inc add mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add xor add add and sbb and inc add and sbb pop pop leave ret nop add cs or or add and adc mov mov or je cld lea sub test rep cld jmp mov neg jmp lock sub xchg add sbb nop mov inc add sbb cld sbb mov and mov sub ds and pop add out add mov sub mov mov push sbb inc add and adc (bad) push (bad) (bad) lcall add inc add inc add inc add inc add inc add inc add add lock mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea pushf add cmp add inc add add adc mov or mov out cmp pushf sub add pop mov mov test je xor mov test jne cmp jno pusha add add stc cmp jb neg and je sub mov inc mov (bad) mov shl add add dec adc rorl jmp stos test je or add add jl and pop ret mov ret mov push mov pop jmp movl jmp add icebp movl jge add testb je push call pop mov pop pop ret daa and jne mov call or cs adc or into and add (bad) je add cmp leave ret testb mov mov sub or add iret movl call push mov aas add add lea call push lea push mov call int3 add lock push pushl call pushl mov mov call mov cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call mov or or mov add push call mov or add rcrb adc mov push push push call pop mov push lcall inc add jne push pop pop ret andl xor pop ret push push call call push jo and pusha or mov movl or loop xor call ret call sub add mov (bad) push fcomps (bad) neg pop dec pop ret int3 out add leave add add pop add add test and add pop roll pop inc add inc add add add test test (bad) cmp push add dec add or pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add incb push aad and add add and and and inc add add xchg fs mov add pop add add flds add and add and nop mov inc add and cld and push or fsub xchg add push add inc mov jo and pop and pusha and push and js inc add add incb push leave add dec xor lods and mov inc add and fadds adc pushf out add test or icebp movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov sbb or call je mov testb jne orl movb jmp mov mov mov mov movsb add push mov cmp je push jmp or dec in call mov mov xor cmp jne mov lea cmp ja add movzwl jmp mov push cmp jae pushl call in mov pop je mov movzbl jmp lea push push lea push push push call add test add inc je movzwl cmp je mov andl test in push iret add js pop pop ret mov andl movl movb lds mov mov or dec add sbb pop ret mov test jne mov sub mov stc je sarl add mov mov add (bad) je pushl push push call or inc or pop pop leave out xor mov cmpb je pushl call andl movb pop roll add mov pushl call mov xor cmp stc cmp je call add jbe mov call jmp mov mov mov pop in add add dec add jnp inc and in add adc push fwait add clc push fwait pop mov add add sbb insb sub add add popa add or or es mov push movl pop and or adc icebp call mov cmp pop mov add push add push call neg pop sbb pop inc sub push mov push push mov mov sub je dec je insb or add or lock adc add or and xor add je mov movzbl sub je xor test setg lea test jne movzbl movzbl sub add or pop adc movzbl dec add jo movzbl sub je sbb xor test jne mov cmp je movzbl movzbl dec dec add mov movzbl dec pop add test pop adc movzbl dec pop add or adc movzbl pop mov add mov cmp add mov or add sbb dec adc movzbl dec pop add add mov or add fisttpll pop adc movzbl pop mov push into adc jo cmp add mov or dec add xchg or or dec pop add je pop adc movzbl dec pop add push or adc movzbl pop mov add add cwtl or cmp add mov adc add or dec adc movzbl dec pop add add mov adc add int pop adc movzbl pop mov add jo cmp add mov adc dec add orl adc dec pop add or adc movzbl dec pop add inc or adc movzbl pop mov add add jno add mov sbb add sti movsl popf adc movzbl dec add fmull pop adc movzbl dec add mov movzbl pop mov add jo cmp je movzbl movzbl cmp add mov sbb inc sbb and jo movzbl inc sbb and mov pop movzbl cmp add fs add add sub cmp jae add add cmp ja and mov mov jmp push in push in imul push in bnd xor sbbl add jo movzbl inc sbb and mov out sbb and movzbl cmp add push call jne ja call xor xor test decl mov jmp dec pop add cmp movzbl dec pop add push or adc movzbl push addl jne mov cmp adc add in movzbl dec pop add mov pop adc movzbl dec pop add xchg or adc movzbl pop xchg add or cmp adc add dec or icebp movzbl dec pop add das or and add dec pop add adc pop adc movzbl pop xchg add push adc push hlt cmp popa xor mov hlt dec dec add std and mov cmc dec pop add cmpsl or adc movzbl dec pop add mov pop adc movzbl pop mov add mov cmp xor add dec dec add aas or stc movzbl dec pop add and pop adc movzbl dec pop add add pop adc movzbl pop xchg add cld inc sbb cld je dec movsb add sub cmp test jne movzbl movzbl inc sbb and movzbl movzbl jg,pn add mov jmp movzbl movzbl sub je xor test setg lea pop dec rolb pop jmp mov cmp xor add cs add or test in mov push or jno ds add sti add imul out push out xchg ds add scas or call add (bad) pop pop int add pop jno cs add xchg dec add push jmp xchg xchg add or in movzbl add or pop pop int add cli and xchg add cli and or cmp adc add mov movzbl add orl add pop jno dec xchg add add push repz add sbb dec or movzbl int3 add stc add add or jno dec xchg add stc and or cmp test jo fdivrs mov add movzbl add jb pop pop int add pop jno dec mov add add push sti xor popa fdivrs xchg add or cld movzbl ds add clc and pop add int3 or jno dec xchg add jmp sbb rorl cmp (bad) (bad) jge add sub push loop cmpsl add dec rolb add inc or jecxz mov icebp add inc or pop icebp add and dec cmpsl add clc and out xchg sarl add mull pop add mov add sahf or jno dec xchg add testl push ljmp add push or leave xchg add or pop icebp add pop or jno dec xchg add testb or cmp adc into mulb xchg add add nop or jno dec xchg add xchg cmp adc inc or leave xchg add or pop icebp add or pop jno dec xchg add cmc and or cmp rorb movzbl leave pop add cmc and (bad) add mov movzbl mov pop or movzbl mov pop add push cli xor dec leave pop add add sgdtl sbb pop pop icebp add hlt add jne dec xchg cmp hlt (bad) jmp push (bad) cmp je push (bad) loope adc bnd sub jne jmp loope push loope inc adc movzbl dec fildl add orb movzbl add pop or pop or cmp pop xchg or add hlt and or cmp xor lds ds repz ds add aam pop pop or mov pop xchg or add repz jmp or insb or add xchg add pop pop or or xchg or add or push in adc in and xchg add or pop or cmpsl or xchg or add repnz or cmp inc sbb jo rorb add dec push add add or pop or pop or xchg or add icebp add cmc xor add dec movsb add icebp and xchg add or pop add cwtl or icebp stc dec xchg add xchg cmp adc add dec or cli pop rorl add or push rorl ds adc pop xchg or add lock je add add mov popa push xor mov movzbl movzbl sub add lahf ret adc test jne adc add mov add add ret adc movzbl dec pop add mov movzbl push inc or xchg push pop cs jmp addl or nopl sbb or mov jns dec add movsb jbe add and inc or add js jl cmp or add mov jmp push mov push and inc add xor mov cmp pushf sub add inc add inc add sub add das inc add inc add das inc add ss add sub mov inc add ss add inc add xor call sub cmpsb sub inc add inc add sub inc add xor add xor mov pop loop add shrb call push push call mov or dec sbb push mov or sbb fs push (bad) cs call push call pop adc ret push push add or scas adc push stos das call push inc add push push push push call mov cmp je mov jmp mov cmpl jne mov enter inc add cmpl jbe xor cmp setne mov call test jne push call pop call sbb adc inc add add mov call nop jns push call pop call mov call mov call test or call call or call push call cmp je push call call push inc les je movzwl jmp push pop push push push push pop ss decl in push push call call jmp mov mov mov mov push push call xor mov mov mov cmpl add adc push add call push xchg sbb call ret call jmp push mov and popa aas add inc loope roll pop je jmp lea push movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea add dec jne test je mov shr test je jo,pn inc jg lea lea dec jne and je mov push pop and lea lea dec jne mov push nop and mov mov inc inc dec jne pop pop pop pop ret mov sub sub push mov adc or mov add add inc add dec jne pop jmp push call xor inc add rol pxor push push mov and mov and shr je lea add jg and add add xor sldt add pusha add or mov out push dec jne test je mov shr je jmp lea movdqa lea dec jne and je mov xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov neg add sub xor push mov and sbb add jne shr je mov lea dec jne pop jmp jmp push jno inc je pushl push pushl call adc sbb jns push ja cmp adc push call pop mov test push mov push mov cmp ja push push cmpl sbb mov add push call add add sub (bad) ret jmp xor inc push sbb fidiv push mov test jne push pop cmp je push call and jne jmp call mov call jo adc adc call call movl rcrb add mov fstps adc or add jns fisub add rorb call rolb xor or and out sbb push push pop mov lea rep mov mov pop mov pop test je testb je movl push and or jne push or sbb adc leave push iret sbb orl xor push mov add push xor clc pop test jne cmp jbe push call lea cmp adc decl jne add or pop sbb (bad) xor call clc add cmpsb dec add ret cmp decl dec add add xchg adc inc or lcall inc xor jne call add mov add or pop ret xor or push sub fcoml lret sub je push xor add push adc pushl call or enter adc int3 push call pop ret push call adc call movsl push inc lcall call shlb push call add sub push add add add adc pop add sbb sbb xlat sbb xor jmp test jne mov test je call add cmp jb xor cmpl je push shrb inc mov or pop call push push add test jne push push push call mov mov pop mov cmp jae mov test cli and movl cmp adc je push push push push push adc push inc mov mov push (bad) push add call pop andl xor inc cmp je mov mov mov cmpl jne pop and gs call push pop and rolb addr16 call mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call or dec adc cmp jne cmp je add pop rorb pusha mov jmp movl cmpl jae mov mov add and inc in jmp movl loopne or and loopne and and hlt sbb sub add sub or mov loope sbb call add adc or call ret call push pop add add and call add dec outsb or add add cltd adc push nop or xchg or adc femms mov pcmpgtw or rclb sbb add xchg or (bad) (bad) ljmp xor sbb nop inc inc add mov orb and sub push push push mov xor xor push mov pushl mov in jno mov lea fs pop or add mov sbb sub pop pop pop pop pop mov pop push push cwtl daa add and jae xor mov movb movl jnp cmp je mov add xor call mov mov or add or inc add jne lock dec adc cld mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test js jg mov mov cmp jne cmpb je mov addl inc add dec or push add xor adc ret movl leave mov cmpl jne cmpl push inc and and jnp push call les stc or push or adc add mov cmp je push mov call mov mov ds add and add lock mov call mov cmp je or shll add sbb (bad) ljmp je sub je sub je dec je xor ret mov ret mov add add adc or mov push push mov push xor lea push push call or enter jle mov mov shl or lea stos stos stos mov push xlat cmp inc sbb into mov adc mov inc dec jne lea mov adc mov inc dec jne pop (bad) lock in sbb add inc jo xor mov push push lea push pushl call mov rorb cld in or xor (bad) jb mov movb (bad) je lea cmp movzbl cmp ja sub inc push lea and fcom gs push ret add pushl lea pushl push push lea popa push inc shrl add xor push pushl lea push adc jbe push call add add and or add add pop or pop add rorb mov addr16 roll push orb mov adc roll adc add adc (bad) decl or pop mov mov sbb test cli (bad) lcall leave sub add or pusha add lea cmp ja orb lea jmp cmp ja add jo lea mov jmp movb inc cmp jb mov pop xor pop call leave push pop sub fsubs (bad) (bad) call mov mov test je cmpl je mov test jne push call and cli sti (bad) inc push call repz in xor and test je push call jne cmp pop push call pop mov inc push mov push call lea call jmp mov push call add mov adc or xor push push mov (bad) decl adc (bad) jne movl cmp pop cld je mov push or cmp jne and inc (bad) jmp cmp jne mov mov sbb cmp pop mov andl mov pop leave test and test adc push call xor xor mov cmp jne mov call or jmp or cmp je incl add cmp jb cmp je cmp push mov push call je or call sbb rorb aaa add add push push call xor inc add mov mov cmp jbe jge add test push cmpsb or jne mov test je sbb decl mov jmp add rorb sbb cmp add imul mov lea pushf lock jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov add cmpb jne mov incl add cmpl mov jb mov mov movl add imul mov lea lea pop mov mov add add dec jne mov call jmp orb inc cmp jbe add cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor jnp stos or cmpsl cmp test incl add or and or clc popa or fprem (bad) incl mov popa or call mov mov call push sbb cmp je and add call sub test je mov push rep andl push pushl call pop pop mov test jne jne pushl jne adc mov cmp call pop mov push mov dec testb jne testb jne or call sub add sub inc add add xor inc add rorb jge mov mov inc jmp add mov jge mov mov inc jmp or popa push adc mov mov add out gs mov adc adc mov or xlat jno add popa rclb push call and and and push call call or add gs push in sbb idiv inc cmpl jne push call pop movl mov xor push cli cmp call mov adc add or cs or or movl cmpl je mov test inc sbb jnp add inc loope add add decl jne mov add call pop pop push in or decl test insb adc fwait mov loop add pop pop mov pop sbb push mov xchg mov push cmp je cmp je mov ret je cmp jne mov ret je cmp jne push call pushl shlb mov add and inc add add call sub popa add xchg jae cmp je cmp jne mov sub call mov mov sub push call add push or adc push call add call or mov push cmp adc and add mov sbb call add jle faddl jg fdivl mov cmp je cmp jne push call cmp je mov sbb add pop add (bad) and call in pop or pushl inc or mov cmp je push mov call test je push call or add add in push mov (bad) pop adc subl call call add jmp je cmpl je call jo in xchg push test (bad) call or cli push lock jns sub xor add push call sub xor xor adc add jne ret push lret or ret call adc xor call mov test jne pushl adc stos adc push xor and (bad) pop ret mov clc pushl pushl call orl add and push call orl adc add int3 int3 push push arpl (bad) ljmp call mov rorb (bad) repnz add incl jle mov movb movb movl push call movsl push orl mov xlat add and or inc insb push sub and insb call add xor or call cmp repz inc xor inc mov push call or or mov or daa or call jp add xor clc call add and adc push inc push or int push xchg add or push or or xor test je push push call pop call dec add mov jmp push call pop xor push call jle add insb push pop adc jg je and add cmp sbb or and sbb push sbb jne test je inc and (bad) je push call mov or add or add or add or add push add add push add push add push add cmp add adc or inc nop sbb jle test je push aad or cmp call je push sub or inc cld mov insb test je push call pop cmp adc jmp and aas add push call add push in sub shr lcall pop icebp (bad) incl and and call add push cs add jmp xor push jmp adc push mov push xor (bad) push mov (bad) push adc (bad) push rorl (bad) cmpl xor popa or push cmpl or add je push das add mov add add dec inc add imul aam imul pop adc in (bad) (bad) pushl xor xor dec outsb add xchg or call or cmp or add dec adc xlat call mov add add jmp rolb xor rolb add incl add inc int3 add cld mov sbb rolb call add pop jmp push ljmp adc jge adc sbb jne pushl add push adc call adc push adc and cmp jne xor leave ret adc xor (bad) jae push add cmp or movzwl jmp lea push push add sbb push push call adc and push xor mov or rcrl or push or test je mov adc es add push pop mov call mov jmp mov test jne mov jmp mov sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop push or add push pushf cmp rorl cmp and add add adc jne add lea mov or mov add xor xor add test je mov test je test je test je test je jmp lea mov sbb rol inc incb jo or std adc or or andl (bad) call add and add popa test pop xor inc ret mov jno add mov (bad) inc call jl and and mov (bad) ljmp push lods inc addl and add mov or push mov mov add add fs (bad) ljmp call pop mov mov test je mov mov mov push xor jne mov mov push call pop pushl call mov lods (bad) dec or add call ret mov jmp push call and mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test movsb mov add pusha adc or je add lds in mov mov xchg adc adc push call testb je push push push call sbb call push pop adc dec or add xor push or push or shll enter or or mov cmp je inc cmp jb push lods adc fs jne add in mov add rorb or mov xor pop mov cmp je push call cmp je adc adc cmp or test push cmp add push fisttpl je push push mov push call adc mov push jg push cmc inc sub push push mov or repz or sub push push push call je xor push add or mov dec adc add inc pop cmp jbe push call lea mov sub push sar push sub push push call sub pop repnz add push call sbb mov repz push call xchg push push push call or pop push add add jns pop or call je cmp je cmp je xor mov mov cmp je inc cmp jb push lea lea mov call adc call dec cld push xchg push add adc xchg push or call sbb add add fwait add pop sub push and repz or push loope dec sbb mov cmpl dec sub and inc adc and cmp push cmp pop cmp jne call xor push jg or pop popa mov add jbe or call push outsl or xor test push or je add lea cmp jb add jae cmp je push movsl sub je mov test jne xor jmp cmp jne andl sbb in add cmp push inc sbb dec or mov mov mov cmp jne cmp mov andl add cmp in mov mov cmp jne movl jmp cmp mov or outsb cmp test cltd push or xchg adc add cmp (bad) add or cmp xchg adc cs mov adc cmp push add cmp pop movl jbe push call pop mov jmp add add or or pop pop and (bad) cmp in or add and xor mov jl jo inc add or je cmp jne xor test sete mov push popa dec or sbb inc je inc inc jmp cmp ja inc mov test jne adc push cmp mov (bad) call xor push xor fwait xor sbb lcall inc push call pop lea add add push call mov pop pop mov test je or push jmp push call cmpb pop lea je push push call add aas push push push call gs adc add add push and add incl loop incl add and sbb prefetcht2 pop pop ret pushl repnz add push lret jmp xchg add or stos cmp rclb mov mov (bad) push rclb lock inc or pop or adc and xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call or incl push scas sbb je mov mov incl mov inc mov fildl test je cmpl jne cmp je cmp jne test je movb inc ds add test add and cmp jne inc jmp dec jmp add fldl jge or or xor inc xor jmp inc inc cmpb je add add add je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test jge add pop test jne mov and add push add and or (bad) mov je call adc mov mov or add pop sbb or or cmp inc incl incl mov inc jmp push xor or add and add or jmp inc or push sub add add bound and in or xor push push cmp jne call dec or or sbb adc repz push push adc mov cmp jne mov mov push inc push sbb lea call add jb sbb jae push hlt cmp jae mov shl lea cmp jb push call adc repz or push push add leave push and add call xor adc jmp out push sbb adc adc push push call pop fdivs idivb fidiv xor jmp cmp je add cmp jne or mov push push push sub push sar inc push push push push mov call mov cmp je push call adc cmp je push push pushl push pushl push push push call test push lcall or call adc cld push call inc cld jmp or mov adc inc mov push and push push pop push call adc leave cmp jne popa rolb femms mov add add mov mov cmp jae add orl movw mov movw movb mov mov mov add lea add sub jb push push cmp je inc call add or add mov add mov sbb jl mov cmp imul add lds fmull (bad) or add lea cmp jae or add andb andl or and or inc das add add lea cmp jb add or jl jmp mov test jle push jecxz adc fistpl adc mov mov push js and test jne push call push cmp pop mov sar shl add add mov mov mov push lea push call je inc or incl cmp jl xor mov add aaa push mov or jl push orb jmp movb test jne push pop jmp lea sub add push sbb sub cmp je test je push adc push dec es ds jne inc sub jmp cmp jne orb inc xchg add sub inc or or push insl and incl sti add mov fnstcw jmp test lods dec pop pop pop leave ret or jmp mov push mov mov push lcall adc cmp add push push mov loopne add arpl and shll rol or add adc adcl push js add mov mov cmp je test je not mov jmp adc push or adc jne xor call lock dec push add add add or adc inc hlt xor xor cmp jne mov jmp test jne mov or shl or mov sbbl xor pop jno mov inc or leave cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add or pop cmp sbb and add pop ret call test jne mov ret add ret push adc fs mov cmpl jne lea mov and add push push cmp or cmp jl xor inc pop pop ret andl jmp mov push mov push mov mov test je cmpl je push call push call andl pop add cmp jl add push test je add adc push call sbb or pop pop sub pushl adc or push push or (bad) decl adc jge xor cmp sbb jg (bad) ljmp call or faddl or cmp je mov jmp push call sbb cmp jne call add or pop push pop and cmp jne and gs adc pop push call adc cmpsl (bad) decl in or call adc mov jl push clc adc or sub (bad) jmp jmp or add adc add add push call push sbb call adc pop push mov mov test je push xor pop div cmp jae call xor dec imul push mov test jne inc xor cmp ja push push add push add adc es (bad) jne cmpl je push call test jne adc adc push xor dec adc add adc add pushl call pop ret push mov test jne pushl call adc jmp push jmp add mov xor mov or push call test je cmp jbe push call call rorl ret call push rcll call adc push jmp call add or or (bad) jmp gs adc inc or es in push or add adc pop sub pop or sti pushl call pusha andl push lea push push call lea test push sbb lea sub or test cld (bad) decl sbb xchg fadds push add aam push add rolb push and data16 (bad) in add add add add std (bad) lcall sbb add dec add (bad) hlt and add add mov dec cld mov dec or lea cwtl adc add cld push fistp push add or lea adc adc cmc add adc push pop sbb or add add add add push push call sbb or call sbb adc pop imul sub pop jmp pushl pushl pushl adc push lret decb add incl dec add cmp aam add in add mov or push cmp je mov imul add add cmp jb imul add pop cmp jae add add inc (bad) or xor or loop add push push call xor mov mov push pop or jg je mov push pop sub je sub je sub je sub jne call or mov test jne push xchg or push push or add and push pushl mov call lea mov jmp mov sub je sub je dec je call adc daa sbb (bad) (bad) (bad) jmp mov add add add or add add test mov xor cmpl movhlps pop dec cmp jne push call cmp je push call push ljmp je cmp je cmp jne mov mov mov cmp jne mov mov movl add inc sub or mov mov add fdivrl mov imul mov mov incl jmp call mov push xchg adc adc sti or pushl push call pop jmp mov mov cmpl and or call add add or mov xchg sub mov mov xor call adc mov push push add mov sbb call imul mov movl pop pop ret push lcall dec or mov or je inc add inc cmp roll or xor mov dec sbb xchg ret push out adc inc or movzwl push push movzwl xor push lea push add push dec or stc jb mov add cmp jb inc add cmp jb adcl push push push lods add push sub mov lds mov add and sub and inc or push or add sbb lods sbb mov shr not and sub add shll add adc cmpl add push adc or add or jne repz jmp and push mov mov addr16 sub push push push push push push daa test inc and sbb and mov push xchg xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne adc and mov call mov sbb sldt jmp fs adc or les pop push push or dec and testl mov xor dec or enter (bad) call push pushl pushl call or add adc adc inc adc jno pushl pushl call ret push push push push mov push movsl push and (bad) xor xor call pop pop (bad) icebp and mov mov push call or xor xor xor jmp push mov push push push push push push push call adc xor insb and push push pushl call pop ret mov push je inc adc fstp add jne push call push out popa push add fwait or push test sarl mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp jne inc rolb add icebp dec adc and xor adc pop sub pushl setne pushl lea pushl push stos sub cmp jne lret adc add add push push or jb lea cmp ja call mov cmp je movl jmp push call cmp je movl rorb inc hlt jmp mov cmp je push push jmp lds adc add (bad) sbb loopne fcompl add push push or lds add push xchg sbb mov dec adc inc and adc pop adc clc jg push pushl cmp add push stos adc mov cmp jle sbb mov push call cld cmp je movl (bad) or sbb (bad) sar pushl mov jmp xor cmp je pushl push adc (bad) dec (bad) test je push push cmp jne push push jmp pushl adc sbb clc push push and adc mov push call adc jne call or lea popa and xor call loope adc jne push adc and mov (bad) pushl lea add pop stc inc or in push adc jge add sub sbb or imul inc push or sbb push add inc push add push add push add sti adc adc jg cmp push (bad) (bad) jg xor aas xor add or add iret inc aas add test je lea push push push call adc or inc add sbb inc add push sub jne push in sub loop (bad) decl in xor dec sub and push jbe and or jmp imul push and push jmp add adc call sub or push add dec add inc add cmp xor or ss jbe call and sbb adc or add stc int pop or icebp add jmp call adc pushl call inc call dec call dec call push call push call pop call pop call pusha call fs push or add jbe or je outsb add add jl pop or add push add add call mov add call xor add das add add and or xchg add add add or push add add add or clc int3 push out and movsb add add add or loop or mov add add add push add add add mov or int3 add add int3 sub add call mov add or xchg or jl or add add add call add or push add add or loope add cmp and das add add and or scas add sbb add push add add add or clc lret or add call add add add add or aam or sbb or leave add or mov add add add add add add add add add add add add add add add or cmp or add inc add add or inc add add or test inc adc add add or sub or pop or and push add add or or or add xor in ja je mov cmp pop push call movups cmp or push call or add mov cmp lahf and cmpsl add cmp push call imul sub inc or add outsl add adc inc adc add pop or or cmp dec or or cmp cmp adc cmp daa or or cmp adc cmp add adc cmp push call or cmp fisttp adc cmp int adc cmp mov cmp test dec cmp push call decb sbb push or adc cmp je inc add cmp jb push mov and es mov push mov mov push push mov call inc gs add add mov jne push and adc sbb inc mov pop and add push call test je adc and call push push mov xlat add add add inc or adc dec adc sub test je push xor mov mov dec call cmp je cmp aas push push or add add clc push sub sbb pushl (bad) lea sbb or dec lock push dec pop push roll inc clc add orl jmp mov inc call in and rorb je mov add or or pushl add add adc or or pushl add push inc or cld pop pop push test add hlt aad inc repz test je lcall (bad) call lcall push adc push push adc jae loopne mov jmp mov cmpw je add dec jne test je sub movzwl mov add test je dec jne xor test jne mov call push mov add push or pop adc push test jne test jne cmp jne sbb add (bad) jmp lea outsb add test or sbb aam ret pushl mov sub or inc daa dec jne jmp mov sub movzwl mov push dec sbb and dec dec je dec jne test jne xor mov test jne xor add adc mov pop jmp mov call and andb jmp add push fcoml or or or sub sar dec dec leave inc pop add das add push pop mov call sub stc and add mov sub movzwl mov mov dec add and out ljmp push pop adc push cmp jle cmp jne mov add or and verr test add push (bad) or stos push push aas xor or dec hlt mov test jne adc add push push insb add mov inc and inc dec push jg or rolb or add gs lcall ret andl ret push call jl xlat adc pusha (bad) inc add add pop add add push add add push add and data16 or sbb add and sub pushf popl mov mov add push inc or test jns adc add push fwait adc mov fs add add or rol pop add push adc mov cmp add adc aad add call add add mov add sub add cmp jne push call add pop xor sbb add and add push push push adc push bound or pop ret inc push push add adc push sbb xor call push sub mov push mov push call add or push or push push mov sbb push push movups inc and push jp or inc and push sbb push push pcmpgtb je cmpl je cmp jbe lea mov mov push pop unpcklps add push sbb adc call or pop push mov add sbb (bad) xor mov cmp cmpl adc or push or adc mov push push mov jmp or insb push dec or or push push pop pop pop pop pop ret call cmp jae inc or enter add sbb or pop jmp adc push push out and push and adc (bad) jne mov push or (bad) div mov push orl lock mull mov mov add and shr inc mov mov adc pop pusha inc and shr rcr shr rcr or jne div mov mull mov and mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret cltd or add enter shlb enter add (bad) (bad) cmp jb mov pop xchg mov mov ret sub test jmp insl int3 dec sbb jne lea call mov lea adc sbb mov mov jmp mov sarl push out xor inc or push call pop push aam mov mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push push xor add call or and pop cmp cmp push (bad) and andl xor jmp push adc adc inc or jge adc push adc andl pop cmp add push and out add or sti pop sbb loope adc push mul sub adc sub pop ret mov dec or dec movsl test add xor addb cmp push mov push sbb adc mov lea mov or xlat sbb bts jmp mov or lea add mov add bt jae mov add pop cs add incl dec or lea or lds fstps call (bad) adc aaa and fidiv mov cmpl jle and add mov and add jmp mov loopne test je mov movzbl jmp and mov jmp mov cmpl push add lcall cld mov movb pop jmp call add push aaa cmp leave mov movb and add push clc push push push lea push push pushl mov and sbb les rcrl inc clc je movzbl shl or xor add mov or adc fistpl cmp ja add pop push push das or or ret add aad add push push and push mov or je mov mov mov mov mov and lock es mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret int3 jmp adc cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret mov mov movl movl movsb push add push add test mov movl adc and push add mov test loop add xchg and jge add inc sldt fnclex cmp add icebp sbb or jne mov outsl add xchg icebp sbb icebp mov jmp test add jle mov add test add or cmp jbe dec xor mov pop jne xor push mov add mov mov mov int pusha inc or cld mov jmp pop leave ret pop pop xchg jmp add push push push push push mov ss movl push push or pushl and add or inc add loopne push dec sbb inc add mov cld mov mov or or adc sbb push push push cld mov gs or jne and aaa sbb insb sub mov loope add clc in add popa int cld mov mov xor call sbb push pushl pushl add cmp or cli sbb inc sub push cmpl jne mov push daa adc add rolb pop and fadds movl lea adc adc or sbb push jno sub inc sbb inc in mov mov push add rcrb adc gs mov push mov fmuls or inc enter dec mov mov mov mov call mov adc lea mov call pop pop andl orl adc pop xor fmuls jmp mov pop or pop add push push int push mov call add or adc push cmc femms dec sub insb jmp push mov pushl add push sub add les and js add push push inc sbb call push decb or lea push push mov mov inc cmp sbb imul loopne rolb push stos pop adc mov mov jno mov jmp cmp jne call dec adc (bad) imul add cmp jge cmp jle add and decl mov mov push jl pop jge mov inc mov mov mov cmp ja cmp jbe call aas inc push test sbb jne mov call push pop adc mov adc adc mov push add (bad) push adc and fisub cmp je mov lahf xor inc sub or mov sub jne cmp call dec add mov push adc ret call insb push jmp mov cmp je mov cmpl jne pop pop jmp jne mov jmp inc rorl in sbb dec nopl dec call or cmp mov inc movl mov popa cmpsl adc sbb inc call pop or jne push push xor add add mov mov pop sbb call xor push subl mov lea push sub sub push (bad) jmp (bad) decl push push call cmp jmp inc movzbl push call sub pop jne add xchg sbb clc js add push jg mov mov mov mov inc mov mov mov mov inc test jne pop cmp push or clc push or add or test je mov mov cmp je inc mov test jne mov push xor ss cmp je cmp adc sub mov dec cmpb je mov push mov cmp pop jne dec mov inc inc mov cmp or pop ds add fldz mov fcompl fnstsw test jp xor popa inc add push mov je push cmp or mov add and and or xor jne (bad) or add or adc jne jmp pop or mov test je push call inc push push add push call or adc negb add or call and sahf push or push sub adc sub push jle dec sbb dec lock call xor cmp jne call (bad) in (bad) incl stc adc leave ret cmp jbe cmp jle mov push and and rorb inc or call and ret push cmp je mov xor cmp setg xor cmpl sete mov add mov call mov cmpl mov jne movb lea popa cwtl sub adc inc lock mov mov inc mov xor cmp sete add add cmpl jne or jmp sub add push push push call dec or (bad) jne lea cmp je movb mov and jl mov dec jns neg movb cmp jl cltd push pop idiv add mov cmp add add add ret add add add adc cmp jne push lea push push call xor adc shr decb test add add call xor sub mov sub push or mov push pop push lea push lea push pushl pushl call adc popa (bad) cmp (bad) decl (bad) decl xor cmp jmp add shr xor cmpl dec sub (bad) xor test setg sub add lea push push push fwait pop add sbb movl push mov (bad) je movb jmp pushl lea push lods sbb mov push add ljmp push add loop adc es sbb inc push lds add dec pop adc add dec fadd inc in incl add xor movl call cmp jge mov mov cmp jne call add fiadd add inc pop add popa (bad) mov jmp cmp jbe mov add movb cmp ja call adc or mov mov shr mov push and xor cmp jne or jne add adc xor incb (bad) and push call adc pop adc jge add push add test dec in lods or jmp cmpb jne movb inc cmpl movb sete dec and mov inc add add push call pop pop test je cmpl sete dec and add mov movb jmp and xor or je movb inc mov test sete dec and add neg sbb movb mov mov and and xor add xor or jne movb mov mov and add or jne mov jmp movl jmp movb add mov inc mov cmp jne mov jmp mov mov mov mov mov mov inc lock mov add mov movl cmpl jle mov and mov movswl and and call add movzwl cmp jbe add mov subl mov mov shrd shr inc decl cmpw mov mov jge add push add hlt add clc or lea mov cmp je cmp jne movb dec jmp cmp je add dec cmp add mov jmp inc mov jmp incb add jne push push call add add mov cmpb jne mov and data16 pop mov call xor and and sub push pop sbb js jg cmp jb movb add jmp movb add neg adc neg mov movb cmp jl mov jg cmp jb push push push push call add mov inc mov mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov cmp jne test jl jg cmp jb push push push push call dec or lock mov add mov movb cmpb je mov andl xor pop pop pop leave ret mov push mov sub push push push pushl mov mov mov lea dec call test jne call push pop mov call cmpb inc add add mov jmp lock or jbe cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push lea call inc push push push call movb add mov jmp add cmpl jle add and inc mov decl inc xchg mov mov mov add test jns neg add jge jl mov mov mov call push push push call add xor pop pop pop xor mov xor mov mov push push mov push pop push lea push lea push pushl pushl call add test jne call mov call mov jmp push mov test jne call or fcos add pop push or cmp je xor cmpl mov sete sub mov add dec fadds into push push xor add and adc push call pusha adc pop add adc jne lea push push push mov call xor pop mov pop xor pop call pop roll mov push push pop push roll and add adc divb call mov call (bad) jmp mov test je push mov xor dec or xor or jmp sub lea push pushl push push call or jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push pushl mov pushl call add jmp adc and jne mov pushl and mov sbb adc adc clc gs cmp je cmp jne pushl pushl pushl pushl pushl call adc ret cmp je cmp je and sbb add (bad) (bad) (bad) jmp add adc stc (bad) (bad) jmp dec sbb add add cmp push decl jnp pop incl and sbb and push push xor push call or (bad) je push add inc call pop ret movl jmp gs adc icebp movl loop (bad) push inc or je push call pop mov pop pop ret or adc jge mov je inc lea cmpb je mov mov cmp je add push push call rcll add shr testb je testb je mov mov test add or je test pop sbb je xor inc pop pop add in mov mov mov cmp je cmp je cmp jne call andl jmp call cmpl jle call decl rcrb adc inc inc add and (bad) decl or add jg movsbl jmp mov mov call incl gs add jne je cmp jle cmp jl call xor rorl add sub roll adc add add push mov pushl call add jmp pushl call pop ret mov add or mov jmp movl call jae add decl mov inc mov mov call add sbb test adc mov cmpl cmpl jne mov cmp je cmp or sbb cmpl jne call xor inc mov mov ret xor ret push push add or cmp inc sbb (bad) je mov test je add sbb add (bad) call mov sbb sarb or xchg rolb adc mov (bad) dec inc and mov mov push mov add cmpl jl mov mov mov mov add add xor lock xor sub cmp jne call call mov mov cmp jle push mov push mov mov mov mov lea jmp mov pushl mov push mov add push call fmuls add test jg jmp movb incl mov addl cmp jl pop pop mov leave ret push mov call call add call add add daa add sub (bad) call call adc add mov jg (bad) dec push push (bad) mov decl jne mov andl mov mov pushl lea push call adc add orb aam dec add push sbb call mov xor sbb sbb xchg and rolb adc sbb pushl push call or mov add sbb outsl mov call and call andl jne mov cmpl or add mov loopne mov cmp jae imul mov cmp jle cmp jg mov mov push push push push call xor andl xchg or or inc adc ds adc (bad) xor call ret incl jmp sub inc mov mov pushl call pop call or mov add ljmp inc cmpl jne mov cmp cmp cmp cmpl jne cmpl je pushl call test je pushl push call inc ret push push call xor mov cmpl je cmp je mov cmp jne testl test adc jne test js lea mov xor inc push test je mov pushl call or add add call loope add inc sbb mov icebp cld add lret add xor adc inc or jo test je call stos or add add pushl sub andl sbb cmpl jne push test je add push jmp cmp jne call les adc popa push push call push pushl add or call push push call jmp call sub call sbb call sub (bad) je testb push pop setne adc jmp call sbb inc in push xor inc gs add call ret push push stos lods push cmp add sub je mov jmp mov mov lea inc mov mov push push pushl mov push call adc pop dec jne push lea push add inc sub pushl push call jmp adc add ljmp test cltd add mov or je pushl push push loope add xor cmpl pushl jne push jmp pushl call pushl push or xor mov inc add add add je inc pushl mov add inc add sti and je push push call int or or add inc pop sbb add add push mov and je call lea mov je mov leave repnz jmp jne adc or sbb xchg sbb jne push call adc cmp cmpl jne call push jne lea push lea push push pushl push call mov add cmp jae add mov push lea cmp jl cmp jg mov shl add mov test je cmpb jne lea testb jne pushl mov fisttpl add push je adc stos (bad) (bad) decl clc add incl add rclb clc cmp jb cs inc xor dec or mov mov push push movb cmp add mov or (bad) jl cmp jl call jne mov jne,pt or adc mov test popa mov ret je mov add test dec jne cmpl jne call andl add add fdivrl popa adc add movsl jge push push mov call sub call cmp jne add jne or xchg or push jne call call sbb add test jno pop add mov or (bad) mov call pop test jne xor cmp jle mov mov push call test jne inc add cmp jl call push pushl call pop pop lea push lea movl call push lea push movl jecxz and and jne add inc jbe lea push lea push pushl inc inc add jmp inc inc or jae lea mov mov lea mov cmp jg adc jg pop mov in sbb test jle mov ret pop add add jle pushl mov push pushl mov call loope push add cmp jg decl addl cmpl jg jmp inc mov jge pushl mov pushl in push xchg push jbe or pop cld add in xchg inc lock add mov cmp jb or sbb or push call sbb test (bad) (bad) lcall inc push or (bad) pushf add cmp test je push call mov mov add mov incl or rcll jne pushl sbbl add push gs or pop add jbe call mov cmpl jbe add std inc cmp add loope push fs push call and or insl inc gs mov (bad) jmp push push sbbl (bad) adc or (bad) rorb push push push call push and or sbb mov in mov xlat je cmp je mov and cmp jb testb jne testb je cmpl je prefetcht2 jne push push or and sbb jmp cmpl jne inc add cli loope nop jb cmpl je cmp jne cmpl jb cmp jbe mov mov test je movzbl cmpl sbb call add jmp movsl or and sbb xchg sub adc or pop ret int3 or adc push push mov test push pusha (bad) push pushl mov mov call push push call pop pop mov pop mov push mov cmp add add daa fdivrp lcall pop leave ret add push mov push sti or xor or repnz add neg sub mov std repnz add cmp adc or add sbb lea call and cmpl jle popa pop add add xchg fisub sub jmp mov dec or mov dec and sbb adc clc andl adc cmp and inc or add mov inc and pop ret mov test jb add pop push daa push or adc push rorl jge lea call lea push xor push push push push push lea gs or verr sbb inc lock push call (bad) testb jne cmp jne cmp and adc add das cmp jne xor add add call jne testb jne cs xor rorb int call (bad) test add pop test add push sbb (bad) test bound test mov push mov xlat and sarb jne call movsb adc jle (bad) decl lock inc or in push adc add or push call push pop mov mov jmp push lea movb mov test jle mov test je movsbl inc jmp push pop mov inc dec test jg mov movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp push call inc push push push call add xor pop pop pop dec add mov movzwl push mov shr and push mov dec ficoml inc or inc add or mov mov and mov test je cmp je add jmp mov jmp xor cmp jne cmp jne mov mov mov mov jmp add adc sti mov shr shl or or outsl mov loope jmp mov mov shr add or add add mov mov test je mov or pop pop mov pop push in in xor xor pop adc inc fcoml sar inc rclb and shll sub lea mov movsl movsl movsw call or fmull inc loop add mov add inc in in or call adc mov jae pop mov inc popl lret or rclb fsubr pop (bad) (bad) dec push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov sbb sbb push and or jne mov add xor div mov mov div mov mov mull mov mov add adc shr inc mov add adc and shr rcr shr rcr or jne add lock mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov add dec jne adc pop pop pop ret int push sbb (bad) push jmp enter test je test je push repz or and sbb adc push in add jmp push mov je call mov jmp call and rcrb push pushl lea sub push push push mov mov sub lock movl or mov and rolb or jne push (bad) adc push adc sub or movl mov or flds mov mov mov mov movzwl and add add loopne push mov mov cmp jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea cltd and add sar lea and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea mov cmp jb cmp jae movl dec mov mov mov jns mov mov or shl push pop and mov inc cmp jge lea sub xor rep cmpl je inc mov mov sub fnstcw sub or add cmp jg sub lea mov lea movsl sub add and sub or fadds push je lock or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl sub dec jns mov dec lea cltd xorl add add nop or push push pop sub xor inc shl lea mov test je or cmpsl add mov cltd push cmpsl add pop and into loopne add or shrb into add dec test mov lea cmp jb cmp and sub jmp test je add jb xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop cmp enter inc or add mov outsl add add fistpl push push dec or cwtl and sbb jl or orl rorl and mov lret sbb add add inc jmp add lock (bad) (bad) jg cmpsl add into inc movl (bad) mov mov mov and dec lds mov or mov adc dec (bad) out dec lret fdivrs mov add xor pop inc cmpsl and mov neg sbb orl or mov or cmp jne mov mov mov mov jmp cmp jne mov mov mov mov or call (bad) push add push add push add push add mov add (bad) push add push add add push add (bad) (bad) push add push add sbb (bad) push add int3 movsl push add (bad) push add push add add add push add or xor push xor mov mov inc push mov lea mov mov mov mov mov mov mov mov mov cmp jne call movl lock mov jmp mov mov mov cmp je cmp je cmp je cmp jne inc jmp push mov mov inc cmp ja jmp lea cmp ja push pop dec jmp mov mov mov mov cmp jne push pop jmp movsbl sub je dec dec je sub jne mov jmp push pop movl jmp andl push pop jmp lea mov cmp jbe mov dec add add add scas cmp je cmp je cmp je cmp jle cmp jle sub cmp ja push jmp dec push jmp lea pop push (bad) adc dec add je cmp je push lods jmp mov jmp cmp jg cmpl jae incl sub mov inc jmp incl mov inc cmp jge mov dec add push sub sub decl xchg adc mov dec and jne jne jmp decl add jmp cmp jg add pop adc js in mov movsb cmp ja push jmp lea mov lea push jmp movaps and je andl add jmp pop dec cwtl ljmp pop jmp push jmp mov jmp or or dec jmp or jbe cmp jmp push xchg sbb inc or insb lea mov je dec dec je mov cmpl mov mov je push pop cmp jbe cmpb jl incb dec incl mov cmpl jbe jmp push pop dec cmp jne jmp mov xor jmp cmp jg imul movsbl lea cmp jg add jmp mov mov jmp cmp jg or or jmp sub incl dec cmpb je push out or jne push nop (bad) aam add add mov xor add cmp jge neg add cmp jne add cmp jne sub cmp jg cmp jl mov sub mov cmp je jge neg mov mov sub cmp jne xor mov cmp je jmp mov xor mov sarl add and mov cmp je imul lea mov cmp jb mov lea movsl movsl movsl decl lea mov xor mov mov mov mov movzwl mov xor mov and and and push dec push je or mov movzwl cmp jae cmp jae mov or ja mov push rorb jmp xor cmp jne inc testl jne cmp jne cmp jne add ljmp and inc or jae jne cmp jne mov mov mov jmp cwtl lea movl loopne mov add mov test jle lea mov lea mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp push cltd or mov cltd or xor push mov je incw addl subl decl cmpl jg add incl decl cmpl jg add test jle mov test js mov mov shll shr mov add or shr lea or add and fmuls leave jg add push dec test jns mov neg movzwl add testb je xlat mov jge mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw fdivp inc aam adc (bad) incl add add cmpl jne andl cmpl jne andl mov cmp jne mov inc jmp incw jmp incl jmp incl mov cmp jb xor xor cmp mov sete mov dec and add mov jmp mov or mov mov mov push repz push inc lret dec into jmp xor test sete andl dec and add cmp inc int3 cmpl jne push push les lret adc das movl jmp xor add cmp inc xchg push pushf push adc (bad) inc xchg and (bad) xor xor mov or mov mov mov mov mov pop push in adc int call enter clc lods inc add inc add lods inc add scas inc add inc add inc add scas inc add scas inc add scas inc add sub fsubl movzwl movzwl mov rcll sbb inc mov and cmpw push mov movl movl int3 int3 sti aas movl push movb jmp movb mov sti sbb jne test jne test jne and dec mov xchg push data16 add inc add xor inc add add or or jne dec or rolb add enter inc adc test jne push jmp xor loop add mov sbb push cmp je cmp jne cmp jne push push cmp jne add cmp add push call adc test and jmp push ret adc inc add xor jmp movzwl mov imul mov shr shr lea imul lea sar movzwl xor mov movswl mov dec neg mov mov mov mov mov je fstpt mov call test je insb inc cwtl push mov sar and je imul add mov mov and or mov lea movsl movsl lea movsl decl mov xor mov mov push and add clc push push adc (bad) xor mov loop in mov mov and and lea movzwl add (bad) jae into jae mov ja add ja xor mov mov mov jmp sbb inc call add add lods add movsl add inc testl jo jne cmp je and lea movl lods mov add mov test jle lea add mov mov mov movzwl mov movzwl mov imul andl lea cmp jb cmp xor adc jge add push addl subl decl cmpl jg mov add incl decl cmpl jg add (bad) jle (bad) push jo push add hlt mov shll mov add shr or push cld sbb inc clc shr add or sbb push sbb test jg add sbb (bad) jns mov cmp testb dec mov jne mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw mov inc lock mov push popa sub stc xchg incb repnz adc add decb testb push adcl cli jne incb inc test add cmp or repnz cmp jb add test inc in mov add cmp jne dec call (bad) aas add or (bad) lahf add add mov mov push mov push lock mov mov xor and and and xor mov movzwl cmp jae rorb addl add ja pop or ja loope adc mov jmp mov or mov mov mov mov mov mov jmp xor xor cmp sete mov call push adc cmp jne inc push xchg inc adc inc in push cmp jne mov jmp (bad) jne inc testl cmp jne cmp je mov lea xchg loopne lods mov add mov test jle lea mov lea mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl add pop subl add decl cmpl jg and push lea add mul xchg test xchg add (bad) icebp mov (bad) and inc mov mul xchg idivb or sbb idivb mov dec mov lock mov mov mov jge mov out or mov add mov mov xchg mov inc mov inc pop mov or jb xor add or or inc add add ljmp add xchg je add sbb mov mov mov mov je cwtl add test jg push xchg or add sbb add (bad) inc add (bad) incl push pop mov shr sub adc cmp inc mov inc loopne pop in dec in gs call fmuls andl mov inc call jns neg and or mov or push or add add add adcl add idivb lea lea mov mov test jle push loopne inc in jne movsl lock jge add ljmp mov mov shr xchg sbb rorl lea mov shr or mov or lea cmp adc inc add sarb (bad) jb cmp cmpsb push je inc mov test je inc mov lea mov cmp jb cmp jae inc add cmp lea mov mov mov testb call or dec mov jae and movb jg js incl jge mov jmp cmpb jne movb dec cmp jae mov add fs incw incb sub sub movsbl mov movb mov push in or pop push add scas push out or cmp jne dec cmp jae add and jae xor mov mov cmp movb setne dec and add mov movb movb jmp inc test je inc test je or test add or test add or test add sbb test add inc add add and push mov je push dec and push cmp je cmp jne or jmp or jmp or mov push leave adc or test sub add or jmp or pop add add je or ret xor test je adc es push push mov ret add ret test add adc add test add add add add add and add mov test or mov mov je cmp je cmp je loope or add cltd or add push in xor pop and pop pop cmp je add or (bad) jne or or ret or mov cmp in adc push push fstcw mov xor and pop sub add or dec add add pop sbb or test add add and push or mov mov mov (bad) mov and add or add sub or (bad) jne or jmp or add and add and je cmp add add add sbb add add mov test add add xchg sub shlb ret loope adc ret adc and fsubr pop push leave (bad) rorb fstcw mov out add (bad) je or sbb (bad) jne or add loope push pop movb test mov mov xor cmp je and mov stmxcsr mull test jns push pop test add inc adc or test or sub adc or test push or enter adc lret je cmp sbb stc inc sbb or lret jne or push or add mov movl add push adc inc add add add add and not and or cmp jne mov jmp pusha adc (bad) call inc hlt call pop stmxcsr mov xor test add or roll inc xor or test add shll add into sub adc add dec or add and iret or jne sub push sub or and sub je sub add add or movl ret xor or test scas or add sub mov push xor push push movl mov mov mov cmp jbe or adc and movsl movsl movsl mov lea movsl mov sub andl mov mov mov mov xor clc add shr or mov mov movsl mov call pop or add mov mov mov cmp jb cmp push in push inc adc cmpl mov je mov add lea cmp jb sbb sbb sub je inc mov mov add cmp jb cmp ss add pop or lock mov add mov add fildl rorb fimul or adc mov movsbl lea mov cmp jb cmp add clc push in or add dec rcrl jb cmp pop push test je mov inc mov mov decl mov incl push mov dec dec or xchg (bad) (bad) pushl fstpt pop or mov mov addl mov mov shr shl shr or shl mov mov cmp je mov mov test jne mov mov addl icebp mov add add leave mov or mov mov mov xor je lds mov pop leave push out sbb les add push testb je cmp je mov ldmxcsr jmp mov mov xlat xor or add rcrb sub andl or push push xor or adc cmp ret mov jmp mov jmp sub xor adc das inc add mov push lock cmp sbb movsl add xor (bad) (bad) mov xchg add push push add and dec mov add add sub (bad) (bad) mov jmp jo or pop or (bad) (bad) mov dec add hlt add add add adc xor jmp movsb add xor mov push inc add or ret mov adc dec cmp add jmp mov sti mov sti inc add ret jmp mov jmp mov dec add or mov (bad) mov aam sti cwtl (bad) (bad) mov mov adc enter adc mov adc mov or cwtl (bad) decl jmp call add inc test (bad) (bad) jmp mov jmp jmp inc add add adc inc in and je cmp (bad) pushl call ret lea jmp je sub mov call or jmp test sbb adc mov sbb enter (bad) decl add in and icebp mov mov call fsubr sbb sbb sbb add aad (bad) (bad) mov lret mov sub ret lea jmp fisub or pop loope xchg and jmp mov cltd add test call daa add mov (bad) add or call or push call call incl sbb aad (bad) mov jmp adc add push call ret mov or sbb xor outsb xchg (bad) (bad) mov daa add or ret mov lmsw jne jmp mov mov or ret mov in sub or loopne sbb sub ss add roll adc mov loop (bad) jmp lea cli xchg add add or mov or xchg (bad) (bad) mov popf add or add dec and add int3 add or and jns and jne jmp jne jmp mov add xchg add mov sbb lock add sbb jp sbb shr add push and aaa inc add and pop add adc test call adc push call mov std mov clc cli (bad) (bad) jmp test sti add or add or das add add or add or add or and stos add mov std (bad) (bad) jmp lea call lea and or inc add jnp das adc push call inc add add adc jmp adc push call adc or sbb dec shr rcl (bad) (bad) mov xor rolb add add fiadd sub inc cwtl push call int3 jmp dec int3 jmp fadds ss mov dec add or lea jmp inc aam call mov inc or jmp and mov ret jmp loopne call dec loopne cmp and pusha add fwait add sub call inc nop push call push add add add and jmp mov push add call mov cmpl and push call mov jmp mov (bad) (bad) (bad) jmp mov add add or push add sub mov adc add add and add push or add or and les and dec int3 jmp add fldl mov imul sbb aaa sar (bad) mov xchg add and push call mov or add add jmp mov jmp jne jmp adc push call and jmp mov aaa add insb add add add adc jmp adc push call inc or movsb inc add or call or call add add add mov rorb call add add call adc cmp add lret add test and dec add xchg inc in add movl add add xchg (bad) (bad) mov xchg add (bad) (bad) jmp mov add add jmp fcoml wbinvd jnp fsubr icebp sar (bad) mov push add or loopne test pusha add mov cmp add (bad) (bad) jmp add in add addb add add add xchg add add or cmp into sbb mov out inc pop adc idiv (bad) jmp mov adc or (bad) add inc add xchg add jo or in add add call sub add add sbb sbb inc add xorl adc push call mov jmp rclb add shll test call add add add push add jmp mov call sbb cli stos add and jmp mov or enter jmp int3 push call cmp aas inc add in mov (bad) mov jmp xor adc flds adc call or adc pusha add lds adc pop add add nop addl add in adc mov mov (bad) mov jmp add mov inc add sbb inc add je cmp add cmpsl add add adc je inc add xchg add push add test adc jg adc xchg add cmp adc sub jns imul add add and adc sbb adc push add in add adc adc clc add add adc sbb add cld push lods cmp push and lea mov xor call mov loope (bad) (bad) mov call push add (bad) (bad) push mov sub (bad) ljmp lds call dec cld ljmp aad add insl push push sarb mov leave ret cmpl (bad) xor out (bad) ljmp add add es push xor push in sub lea push push call push and and mov pop ret mov call and sub and ljmp (bad) inc add cli push add dec and sbb out xor jbe xor mov xor push add add dec xor add add call addl add mov push lea call lea push movl movl movl movb call mov call pop add mov les adc xchg mov decl in mov jg adc push mov call jecxz and icebp dec (bad) lcall ret mov jns dec inc nop add inc adc daa add add cmp add fwait add add xor add adc xor xlat inc add xchg dec xor add add call add xor fs xor inc xor add pop cmp sub jo xor or call add jb xor add cmpsb cs add mov dec or inc das adc or jno inc cmp call push mov mov scas lcall add dec push dec aas or jo pop adc mov ljmp add add dec jg add jg,pn add cwtl or pop add add outsb adc je ret add jg ret add pop cmp or add inc add inc add lahf cs add mov inc je mov pop add or jo pop mov push movl movl movl movb call mov lock pop pop add inc add movl cmp add movl mov jae (bad) mov lock pop nop hlt inc add xchg hlt inc add and inc movl add shlb add rolb add mov call test inc add rolb add inc movl movl sub mov call mov aad ds hlt inc add add hlt or hlt inc add inc add add mov call push movl add add sbb cmp movl mov lock add mov jb cld add fs (bad) lcall inc adc lock add sbb inc add jno xor add dec and inc add add mov mov inc add add push adc xor inc add out inc add lock and xor add push and inc and lock add xchg add call cmp call sub in testl ljmp inc out cmpsl dec test mov pop mov pop or movsl addb mov loope add or and and clc jno insl cmp clc inc add inc xchg (bad) ljmp add aaa add ret push mov call push and pop dec insl add push xchg add or inc xchg add jno jns call roll add dec add std or inc dec add cmp dec add and roll add and dec add or add ja dec test nop add jae inc add scas mov call add dec inc fldl add xor cltd add add addr16 xor dec inc xor inc stos add push cmp adc add stos add inc and add xor inc add clc add imul or inc add push sbb or add inc add outsl and inc push xchg or lcall aas or mov adc adc push mov push lods or sub and adc (bad) call cmp xor fcoml add (bad) push add add inc add or adc or call add fisttpll and jmp mov push scas (bad) call mov loopne or cmp jmp push or lods or or lret or xchg pop sbb add push adc xor call call jl xor adc or jg xor enter call dec inc xor adc add xor jns or cmp xor sbb xor sbb add xchg add adc or std push cmp add add test int adc loop adc push push int xor scas inc xor adc add or push call jg xor add out (bad) call mov pop test cmpsl (bad) faddl push add js jmp insb add or test inc adc push call adc imul (bad) add adc push call in cmp add movl mov icebp dec push sbb incb add add incb add add incb add add incb add add lock push add dec push add int3 push add mov push add xchg push add test add add add dec push add cmp add add adc add push add lock add loopne add rclb add add xchg add add pusha push add push push add cmp add add add add in push add ficoml add push add mov push add nop push add jp add bound add push add add push and add or push push add or push add or add dec add sub add dec add inc dec add pop dec add orb mov add add mov add ret add dec add out dec add push dec add push dec add ss add dec dec add pop dec add push add jl add xchg dec add cmpsb dec add mov add rorb dec add out add (bad) dec add push dec add push dec add sub add cmp add push dec add jo add jle add mov add dec add les add dec add in dec add adc add add inc dec add pushf dec add jle add mov add pop add sbb add pop add ljmp add push add xchg push add push add pop push add ds add sub add push add clc push add decb add dec add pop dec add dec dec add cmp add dec add push dec add adc add dec add repnz add call dec add into dec add nop inc add mov dec add xchg dec add mov add add add inc dec add ss add es add sbb add dec add cli dec add out add rorb add dec add mov add cmpsb dec add xchg dec add jle add jbe add push add push dec add inc dec add ss add sub add add add add inc add fiaddl add inc add mov inc add call push add (bad) push add mov add cmpsb push add cwtl push add mov add add insb push add push push add cmp add xor add add adc add push add in add into push add mov push add pushf push add mov dec add int3 dec add mov add stos dec add pusha dec dec sbb jl add dec xor or add or add pop sub add push add into push add fcoml xor push add add add lock or xor add and add dec jo jl or decb add push add les add dec add nop dec add orb outsb dec add push dec add inc dec add xor sub dec add ljmp add dec add rorb adc add dec add mov or mov or aaa inc or add inc or add pop push add push push add mov add or pushf aam inc add int add int add inc add inc add int add into inc add inc add into inc add into inc add iret inc add inc add iret inc add iret inc add rolb jne inc add rolb das roll insl roll stos roll jmp rolb jne inc add rolb pop roll inc roll pop roll cmpsb roll repnz ss add inc add inc add mov inc add dec inc add sbb add or aam push add and or dec loopne add loopne add inc dec aaa cmp mov add adc mov adc aad cmp inc add inc add and insb outsl arpl imul inc add and add imul outsb and arpl je pop and xchg and inc add inc inc push fistl adc sbb add add add add jb js je jb arpl jae add jae arpl outsl add add add add add dec add add insl add add fimull add fs and dec or adc adc jns add add sbb das add push add pop add inc or add add bound add sbb dec add jbe adc sbb arpl je outsl adc add je add inc add add jae je dec sbb jne insb add or outsb add or inc add jb imul arpl xor add add jb jne adc cmp popa add adc mov add cwtl add or test add outsb and push or add je sub push add add fs scas sbb or add adc push add fs push add gs outsl add xor push add adc add add or pop add add mov add add dec dec cmp cmp xor add fs dec dec dec dec and or jns jns dec dec das fs jns push cmp add inc dec add inc arpl bound icebp or jbe or dec arpl pop or gs adc jne je add insb add outsb and jb insb add push bound popa jb and popa outsb add arpl pusha add push add add dec popa jns inc dec add jb inc bound dec popa outsb add je jb popa add imul or add push gs gs or or outsb add or add cmp xor sub and and add push add inc add add add add add sbb jae jb add sbb je popa insb jne or inc sbb or sub add add add gs jb rorb aas or add and push add and or sbb dec add inc dec sbb and add add inc add or sub add add add add add and inc add popa cwtl add gs add mov mov or test fs mov insl add imul popa test adc sbbl outsb add and outsb inc movsb add and dec add and imul jp sub add inc lret add adc add and add add mov adc add outsl add jo jo push or add push sbb add add je xor mov insl add jbe and gs push add mov xor outsl add mov or addl or and jo test faddl add add add insb add sub and data16 push or push add sub add movsb inc cmp mov push cmp mov cs lock add outsb add into add or and jae jo popa movsl rolb nop or add add add add insl and pop add xor pop add inc lock xor inc add push add and mov push (bad) jb cs sbb push sbb ds add xchg xor dec ret fs jo xor cmp insb or bound scas inc push add or jo cmp add push add add mov and (bad) xor les add adc ss loope popa movsb add jo add gs adc imul jb cwtl and or add or adc add add or js pushf add and mov (bad) push sub add jo xor cmp movsb adc add and or jo mov mov enter outsl dec adc fimull add dec add mov dec and pop push xor in add pop inc add insl (bad) out xchg add jl popa add addl into xor popa mulb or sub or sub mov push sbbl mov popa or pop dec push and xor add cmp add pushf mov mov mov cmp inc or lock add add jae push add adc mov movsw mov leave jb jo outsl test shr sbb push and or add push aam or icebp inc push pushf push sub test inc add add add inc adc or lock push mov adc mov inc add add dec out inc add add add out inc add add add push cltd aaa or inc add xchg or lock inc add push sub add add add in inc add add shr add add and inc add add add or push jmp add add add inc add dec add inc adc and inc add push cld add push dec xor call hlt and add hlt add adc push out or insb add add sub sub and push inc fisubl pop or dec add push or outsb adc or or cs cmp push or outsl add jb popa in push cmpsb or xchg push add or imul add add inc add lcall add push adc cmp add add push inc sub and add or or add rorb xor add mov or nop sbb or xchg sbb or mov sbb sbb and or das incb add add incb add add adc add add adc inc adc or adc add test add xor add lcall (bad) sbb add adc jl incb add add incb add add inc aam add add mov sbb sahf add xor add add add add add add incb mov add data16 adc or or adc or add add xor sahf lock sub add or or add ja lock addl mov xchg xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl add add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc popa bound gs imul jo jb je jbe js jp pop pop pop pop pusha data16 adc jge jg add incb add addb addb add cli addb inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop pop pop and addb addb addb insl jo gs and push arpl push ret push or daa push mov and insb popa jae and gs mov inc gs jb jo pop adc and jae or jb jns ss sbb sub popa je sub and gs inc pusha insb outsl arpl and popa je arpl je jb popa and popa jb daa add popa outsb popa gs arpl and jo and outsb jae jb arpl and gs je lods add and jbe add add adc push pusha fs popa insl imul imul or outsw jb add outsb imul jb push or gs sbb inc adc sbb sub pop xor and pusha jo popa arpl outsb add inc add pop pop and outsl jae jb or and sbb insl outsb imul jae addr16 add inc cmp gs pop add fcompl jbe je bound xchg adc and daa add push push dec add dec inc dec add fs jb je jb imul push add push add add cwtl push aas add xor pusha jbe jb jne insb and cmp or popa jo add gs lods outsb test push lods push addl pop addl popa insb popa jb jae imul sbb popa jne je inc add sub push inc add mov or jb test mov lods add adc jns outsl or daa add bound pusha xor pop cmp add es cmp add cmp add sub and jl add add jl xor jno xor add sub add sub add ds add inc or add push mov add sub add add add add sub add sub or add outsl jo aaa add add cmp push and add ds cmp add inc rolb sub pop pop jne popa insb imul pop jb adc arpl pop pop jo jb xor pop pop gs bound adc arpl incl add or popaw jae or push insb add or or add popa add or fs pop or adc add push sbb inc add add add inc add add in add loopne inc add add int3 add les inc add add jo inc add inc add add nop add mov inc add add addb add hlt xor add insb add push add pusha add pop add pop add push add push add dec add dec add inc add inc add cmp inc add add xor inc add add sub inc add add and inc add add sbb inc add add adc inc add add or inc add add add inc add add cld incl clc incl in incl loopne inc add incl int3 incl mov inc add incl je inc add add inc add inc add incb sar inc add inc add inc add inc add inc add inc add incb adc inc add incb fdivr inc add std inc add std inc add std inc add add add inc add cld inc add inc add add inc add inc add cld inc add inc add sti inc add sti inc add inc add gs jb push mov outsl ja (bad) mov outsl outsb add je jae jb inc adc outsb outsw jb adc push or add sbb dec popa jae inc arpl gs outsl jo jo adc adc inc cmp dec gs popa addr16 outsl js add push adc je,pt sbb inc add or or add adc add rolb arpl push mov repnz mov push pop or add add or add xor in or sub add jmp (bad) ds aas xor sub or add add jmp or and add out add add push add dec add dec add dec add jo pop add add add xchg pop push xchg sbb and add add adc adc adc adc popa add ss insl adc add sahf sbb jbe push (bad) adc pop and add cmp jb add push add add and add imul add mov enter push or add sbb dec add dec add inc adc adc mov adc stos cs add pusha push xchg and bound push sahf adc sbb inc nop add inc and or imul arpl imul push or jae sub add sub fs add adc jbe push and mov fcomps je push cli adc push mov xor add jo and pusha push add sbb sbb push call out sbb sbb sbb xor push or push dec push cmp add push jne jb push jns je insl popf enter sub outsl ja xor imul and push gs add jbe jb add add jns je outsb jo outsl je arpl je add arpl jb jns xchg ss add jae inc and and scas adc shlb and push sbb sbb xor xor xor xchg sbb arpl push fcomps add and add and adc add add pop add cs push add adc adc add incb data16 push add push mov add mov dec push add push pop or and adc popa inc push call sub add dec add jns inc add or push repnz push sbb mov add push jo cmp das adc xor add push add push mov sbb outsl add imul adc ja push clc push or pop dec ret pop add je add ja jae pop add je add push or add push sbb pop add js dec pop push sbb test pop add fs outsb gs mov inc sub inc add inc add sub fsubl or pop adc and add cs cmp push and push mov adc dec add and popw mov add and dec add add add or add cli or je testb add jbe insl adc mov jns add bound outsl add lcall sbb add and push cs sbb add cmp add sbb jae pop cs add nop inc push add push add push add insl sub inc add push add push and inc add add add add and adc add inc add mov xor add add sub add xor cmp xor add add add add xor or test xchg or add call adc add mov add xor inc add add add sub xor inc add add add add inc add add inc add add inc sbb out fsubl push push sbb cmp add cld add (bad) push les add add popa xchg gs and data16 xor add adc add insb loope push pop or (bad) or push adc xor adc or xor lods test xor add or add cmovne jo mov insb dec insb imul push jo push sbb cmp sub cs and push xor add and popa les jns and imul adc and inc add mov push or add ds pop add cs xchg xchg push pop and sub jae push add add adc push sub or and push adc jne adc or outsb dec add add push inc sbb mov cwtl add add push add pop add add dec add inc add inc add push add push add push add dec add dec add add daa or add sbb add pop sub xor dec add mov or or or add add and ja and push add add or outsl in or add cmp ret or je xor jo add sbb jp jp cmp add jb or test js push add sahf adc add add push rcl push push cwtl and cmp sub jbe jo outsb add add add jb insb add add js gs insb adc insl add sbb outsl add push or arpl js or push jae push sbb add add add jb popa add jns xor outsl add imul add jae adc add insl adc jns jae cmp xor xor jb outsl add dec and and data16 insb adc ja imul outsl add jae pop add push sbb push add insb add push and dec add add insl add je imul mov add or jne pop and add and add sub inc add popa add xor add push add data16 add mov imul add or push add arpl push add fs add add add jb fs je popa insb jae add cmp adc or add add add insb add add insb inc push dec outsb je addr16 nop add jp and dec add push add pop sbb pop add jo jo insb add arpl cmp and inc add ret add dec gs jne jb inc imul outsb outsw jb popa je outsl outsb add outsb add je popa add imul je jae jb gs jb jne inc sub jne add dec outsl arpl add je gs bound jae sbb add push push smsw push gs add jo inc imul inc fs jo gs add jo push or cmp gs jo outsl jb popa jb push popa bound cmp je gs outsl jb push popa jb insl cs fs insb jae gs je inc add sbb popa insl gs add and gs gs outsl imul sbb jo inc jne data16 jb add add inc add inc add sub dec mov or pop or or sub and je or sub or add or or add inc add dec add inc add inc add add pop add scas gs or je movsb sbb add popa and pop add add scas add call add add push add jbe add popa add imul add and add outsb inc outsb or pop and or gs dec add and add dec add sub arpl push add add add dec inc rolb or gs sbb popa add add mov add add inc add push add add (bad) or add and sbb push add add imul or add or dec add add push add add push add push add xor pop add add push gs fadds and push add jb jbe aam pop and inc add add add sbb outsb gs jo outsb add outsb outsb arpl or inc je add popa add push gs add adc imul inc insb outsl jae dec popa outsb fs add gs jne jb outsb je imul jns add add or add sbb add xor add xor add add add add or add sub push adc or jae out xchg loop dec add sbb add add add or lcall or or dec and inc insb outsl arpl outsb addr16 je gs insl push add push sub cs add das add add add add add arpl popa inc inc call add inc je,pt and fisub adc fs inc in add push adc add adc push add push add or xchg add pushf add xor dec in loope inc sbb sarl xor pusha add or addr16 add pop push and add or add inc adc or addr16 adc add in xor add sbb add push or add and and clc push add mov mov cmp xor add sbb push pop dec outsb imul push push ja dec or push dec xor pop rorl je jb popa insb dec gs insb outsl je sbb add adc jne push popa je popf add push inc push pop inc arpl jo add popa jae ss adc outsl fs cmp add push inc inc dec push inc dec add gs add push sbb mov jp push add add insb imul outsb xor sbb add or and push jb rol add add or dec test inc add add rcrl add xchg jno xor push in or or add push into or js mov addb addb mov or imul mov dec add jp inc sbb add add and imul mov add gs arpl fs push popa insl gs jne inc dec inc insl imul and jae ja jb or inc das add adc add adc sub and outsl insl and jp insb outsl imul and pop add out gs js mov insb adc or add scas loope popa rcrb or and or dec cmp push push add dec popa bound cmp cmp cmp aaa sub sub sub xor bound data16 add add cmp inc inc xor aaa sub sub sub sub inc xor inc xor loope in add or add enter or dec in add or add adc or push inc or add xchg push adc add push dec add dec add add inc add push add dec add inc add add and dec add add push add add add cs add out sbb outsb jne gs je mov popa add sbb es or sub inc and push add add add add add movsl add arpl add adc or insl add add add adc or int3 or add dec add dec sub mov adc add add add or jl insl ret mov add insl adc or sub and dec add bound dec ss add nop pop inc add add add add movsl repz and popa add add sub push add push push in or in add sahf (bad) xor pop movsl (bad) push push push or ss add xor push cwtl or jae outsb sbb jbe arpl jae das add push and add push sbb add jb push push or add jae ss addr16 stos adc adc test bound add fcoml popa add test add je adcl push add clc or cli mov and add dec or pop add push push adc inc add push pop inc add add add nop add adc addb push adc loopne (bad) add and push or cmp rolb cs add insb push je sub or add lock add add push push push cmp sbb inc add dec lds push mov adc adc or or fcoms popa movb adc and inc add ficom push xchg push mov and (bad) or imul movb cmp add (bad) jo and jns dec adc or add stos or add mov enter add cs or add and push add pop xchg call jbe or push add mov nop adc or add out add inc add or sbb adc jg add xor push cmp inc add inc add inc add and arpl push pop adc add and inc dec add or dec inc add or bound or and sbb add mov (bad) add and push add sub pop push clc adc push inc push jo addl rcr jl add add push push inc pop dec dec push push dec pop push push dec inc push inc push dec dec dec pop inc outsb gs add xor xor outsb pop bound jo,pn bound add inc add inc adc pop and inc add sbb inc add or (bad) incl or inc cmp add adc lds js xor add and add adc or add pop add xor add adc or add add adc inc add sub les add push add cmp add adc sbb push cmp rclb add dec add in add add add add xor cs add add loopne inc add cmp inc add es add sub and dec add cmp add adc movb daa or add int3 adc daa inc add daa sbb dec dec add cmp add adc add dec add push sbb dec add cmp add adc inc add daa inc add sbb dec add cmp add adc cmp add inc add sbb add dec add cmp add adc movb sub xor adc add dec add dec add cmp add adc inc add cwtl sub movsb sbb dec add cmp add adc inc add cmp in inc add sbb dec add cmp add adc movl add sub cmp cmp add dec add cmp add adc dec add jl inc add dec dec add cmp add adc movl adc sub aam dec add dec add cmp add adc inc add clc adc sub and sbb add dec add cmp add adc add dec add pusha sbb add fadds cs add adc sbb test inc add inc add dec add cmp pop add imul cmpb jmp add cmc addl add ret push ret add sbb add sub add cmp add inc ret add push ret add (bad) add insb ret add jbe add add add ret add int add in add test add sub add les add add jnp add xchg les add les add les add lds add lds add add test add pushf lds add lds add lds add movb xor add dec movb data16 mov add scas movb ffree add add add xor add inc movl add movl add enter enter enter enter enter enter leave add push leave add je add xchg add mov leave add sbb add sub lret js add cwtl lret (bad) add lret sub add mov lret add ror add out add cli lret add push int3 add and add aaa int3 add dec int3 add pop int3 add jae add xchg add fwait int3 add scas int3 add mov inc add or or inc and inc add cmp pusha or xor add in or aam or adc push or add cmp (bad) cmp and add sbb test and ds add inc and add cmp add dec and ds add dec and add cmp add push sbb add sub add push sbb add sbb adc push inc add data16 adc cmp add mov add push ss add and add arpl and ds add push mov inc add or push cmp add xor push add add sub out add in add adc sbb add jmp sbb and adc and push and adc inc add dec dec orl add inc add or inc add inc add add add or add in sub add dec mov add add test add xor cwtl add xor add ret sbb add sbb sub add sub add add add add add and movsb add and add hlt das inc and in push mov inc sbb adc or add add sbb add xor pop add xor pop add add pop sbb and adc adc add add inc inc test add sbb test loopne pusha add push adc add add inc inc pop add xor faddl xor faddl xor inc inc pop add sbbb add mov and adc add add jp add ret dec hlt add or and inc faddl adc add xlat or push jp add out sbb sub add les add les xor mov add xor or jbe add dec sbb sub add mov jae xor mov fs add test xor cwtl jp add mov les int3 add or add les xor movsb add xor add and and add add add adc add xor and cmp imul add ljmp or lds adc lds adc add xchg dec cmp adc add or fdivrs add xor or dec or inc add add jbe add lds add lds jl jns cmp jl dec jp add mov test add cmpsb sbb sub add jp add rcrb jbe add loop in add or inc in add (bad) cmp add (bad) sub add add xor add xor lods jp add push or xor loopne xor add xor js sub add add aaa jbe add xchg or cmp movsb sbb cmp add or cmp mov add out cmp hlt or enter add (bad) sub add (bad) sub add add jp add cmp cmp jbe add (bad) imul add adc jb or push dec adc jp add test dec add or dec add mov or dec enter adc in dec add jp add (bad) or or enter dec cmp add enter and sub add or test add enter push or xor add add js jns cmp add add lea or mov cmp add mov add add int movsb add or mov icebp or fadds leave sub or push add jp add pop or sub add or dec inc mov sbb jbe add pop or or insb or fs add jle sub sub mov nop or mov mov or dec add add or or fmuls sbb lock leave dec mov (bad) or sub or push jp add and cwtl jp add lret add or dec or inc and add jp add gs xor push call xor lea xor add or cmp pop add cmp add or lods jp add in pusha add lret add or inc adc add or or add pop add push cmp adc add add push add add push imul inc or pop add and pusha or inc add add add add add add inc add add adc add xchg inc add add add adc lret sub adc sbb add add add push or add add push or ds les add lods or dec xchg and add dec sub adc add enter sub aas inc pop add add sub fcompl sub add sbb sub add int3 or jp add sbb sub add jbe add inc sbb sub add sub pusha jp add imul sbb sub add jp add movsl sbb data16 add push test add cmp adc mov jle inc add cs adc fs inc add inc adc adc add xchg imul adc and add test in mov xchg inc dec in movsb cmp add mov add xchg or add xchg sbb gs inc add or adc rolb (bad) xchg inc add xchg or add (bad) or inc push add add inc push mov mov add adc push in add lcall (bad) ret test inc add or and dec add movsb loopne add inc sbb sub add add faddl adc loop add add add int3 sbb add lock add sbb and jecxz add push add int3 loop add add loopne add je mov xor cwtl loopne add and add mov add lock add adc add dec sbb add jo add pop sbb add jl enter cmp add jecxz add and add nop loopne add add shl out add lock push add dec push add int3 push add mov push add xchg push add test add add add dec push add cmp add add adc add push add lock add loopne add rclb add add xchg add add pusha push add push push add cmp add add add add in push add ficoml add push add mov push add nop push add jp add bound add push add aam add add push add push push sub add sbb add dec add cmp add add pop dec add orb mov add add mov add ret add dec add out dec add push dec add push dec add ss add dec dec add pop dec add push add jl add xchg dec add cmpsb dec add mov add rorb dec add out add (bad) dec add push dec add push dec add sub add cmp add push dec add jo add jle add mov add dec add les add dec add in dec add adc add add inc dec add pushf dec add jle add mov add pop add sbb add pop add ljmp add push add xchg push add push add pop push add ds add sub add push add clc push add decb add dec add pop dec add dec dec add cmp add dec add push dec add adc add dec add repnz add call dec add into dec add nop inc add mov dec add xchg dec add mov add add add inc dec add ss add es add sbb add dec add cli dec add out add rorb add dec add mov add cmpsb dec add xchg dec add jle add jbe add push add push dec add inc dec add ss add sub add add add add inc add fiaddl add inc add mov inc add call push add (bad) push add mov add cmpsb push add cwtl push add mov add add insb push add push push add cmp add xor add add adc add push add in add into push add mov push add pushf push add mov dec add int3 dec add mov add stos dec add pusha dec add adc jl add dec xor or add or add add and push add into push add fcoml dec adc push add add in addl push add sub add push add (bad) dec jo jl or decb add push add les add dec add nop dec add orb outsb dec add push dec add inc dec add xor sub dec add ljmp add dec add rorb adc add dec add mov or add add xorb pop push add inc or add pop push add push push add mov add or dec outsl popa fs imul jl dec add arpl outsb push add inc gs jb arpl fs jae add inc or lock insl jo push add add inc popa fs gs fs je add add insb je inc jns gs outsl push imul add inc gs popa jae inc jb outsl jb add inc outsl insl jo je jb push lcall dec outsl fs gs cli xor mov add insb add xor test and gs jo popa je push add aas add push pusha xor scas add push imul adc add dec or jo push add mov push insb gs stc add popa imul insb gs bound arpl add gs imul jb popa add je,pn add sbb inc js je or adc loopne inc gs adc inc outsl adc rolb sbb cmp adc and add outsb fs imul push add dec add outsb inc add pop add sub sbb outsl fs bound push pusha sub cmpsb add test nop or add outsb push fs push cld and inc imul push jns je insl push imul add or add js sbb inc sub push add xchg add push imul je add sbb jne inc outsl jo add push add movsb and outsb jae insb add cs inc push add inc add jo add cltd add jb outsl jb je add dec outsl jbe stc or cs add add scas add adc leave or xchg add and cwtl sbb or js sbb mov outsl outsl insb push xor popa jo push add imul adc add mov pop arpl jle push adc ja xor sbb ljmp je jb bound and das add or add or icebp adc sbb imul and and add gs sbb or popa adc test outsl insb jne gs or jb or add rolb dec gs jo gs insb insb outsl arpl int3 add insl jo arpl add iret add add int or inc jb add add jae jl dec jns add add je inc imul jb je arpl push arpl shll sbb cmp dec gs jbe pop add out add jae das add rorl add push or dec push add jae outsl outsb inc js add and xor adc mov cmp outsl jae gs arpl add and imul jo arpl cmp aas add cmp add jns or dec or add add mov or push imul pop xor outsl insl insl popa outsb fs imul and je js add roll and inc jb jbe push jns xor addr16 outsl pop rorl add push (bad) adc sbb add insb gs jae inc or add sub cmp add popa outsb fs outsb jbe jb outsb insl outsb je je imul add inc imul dec popa jo imul adc (bad) add outsb insl xor add mov dec popa jo imul add outsl bound dec outsl arpl add or insb add adc add and add xchg add or add dec and lods add mov add push add xor add add and add aaa add sbbl and push dec inc dec xor cs insb push and leave cmp gs add xor ja jo imul adc inc add outsl push test add and je push popa addr16 adc lods cmpl jb imul sbb je imul imul fild push push adc add push bound add add add in sbb dec outsl and push gs add inc adc popa jae add add add jae push jne je sub pop add or add or insb imul add adc je add sub outsl jb addr16 jne fs and add inc add xor adc popa jns jne dec sbb test add jb xor outsl imul add imul jb jbe insb gs popa insb jne push add add push jae push add adc push or ds arpl out add mov inc jb jo inc arpl imul leave cmp stc add dec popa outsb popa addr16 adc push add leave add popa jb ljmp dec and outsb push popa outsb outsl insl push push popa outsb adc inc outsl outsb imul add or gs add add add gs outsb fs add and push add sbb inc push (bad) sbb jo add ret outsb jne dec gs add add dec xor dec gs iret add adc adc add push add sbb jne xchg sbb gs jb jo push mov add add popa arpl add pop or popa sbb xor adc jns jle push or je sub cmpsb add outsb je imul insb push add les dec adc jae adc aas add int adc push gs sub lret or add or adc jo jb sub or add nop aaa or add add add gs jb jns stos add and adc or add push je je jae add push inc push dec push mov dec inc gs outsl insb fs push cmp add and push push js arpl and fnstsw xor jb jbe add push dec inc dec xchg xchg add outsl insl dec dec inc add inc outsl push popa jae dec gs lds dec inc add adc inc outsl or xor outsb jae popa outsb arpl add add cmp sub add outsl push outsb imul add and xor adc add gs inc inc push push or add imul add arpl addb adc add add add outsl or push inc push push xor pop add enter add lock dec dec push dec dec push inc push dec cs dec dec add pop add push sub std xor pop add add add gs outsl jb add cmp pop push in or cld or aad (bad) add and adc add fs or mov sbb push add sbb gs outsl outsb jae add push dec dec dec dec inc push add xor push or mov and or insl sbb or push jo arpl xor fs popa arpl insb popa jae push add call inc add push sub outsb fs add dec push and dec mov push outsb jo outsl je arpl adc inc push pop push xor dec push gs add sbb outsb xor push add or adc dec push push add inc outsb arpl and or add adc add or rcll sbb add gs inc and add movsw sbb sbb add lods mov gs je jb push jb jae outsb je mov push popa imul add aam push adc jp add jb je push add add add sbb dec outsb arpl push jmp or add sbb push movsl cmp add push popa insb imul addr16 add insb jae insl or add add inc lea xchg lcall dec add lds outsl inc push mov add sub popa jo xlat add imul loope add bound gs je push dec or add push bound adc or add popa movsl fimul or adc inc (bad) push outsl and add fiaddl mov add outsl push test or mov add cbtw or inc outsb fs jo outsb or add add add or push gs dec inc add arpl dec or jb roll sub dec add fsubs ret or jae dec adc insl gs add xchg push xor add dec jae bound addr16 or add xchg or sbb je push outsb ja outsb fs add incb add add incb add add incb add add or add in mov and aas inc push bound pop popa push mov adc je inc push shlb jns gs imul in and add xchg add adc add jl and add and add incb add add fs bound gs imul jo jb je jbe js jp fisubl inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop or incb add add incb add add add add incb incb lcall add or cli or add add sub add movsb add add jns and or add movsl or or lahf loopne add or addb add mov add incb or add or mov xor add xor mov add iret mov in call sbb jle add add push ficompl and pop fisubrl push add add and rcr fsubp stc add xor cmp loopne lock add add inc add inc add inc add add add add add inc add add add call inc add call inc add call inc add call inc add call inc add call inc add call inc add out add out add out add inc add out add out add out add out add out add out add out add inc add add add dec and add out add add add add add inc add pop lock out add inc add inc add out add out add out add out add out add out add out add inc add inc add inc add inc add inc add inc add inc add out add or mov add inc add in add in add in add inc add in add inc add inc add add add or xor (bad) adc push mov add add add push fs js inc add stc inc add gs add pushw fdivs add cs push jp add adc orb and add add push add and or cmp cwtl and or and je push mov add cwtl sbb adc addl push mov test add add pusha add or adc adc add adc sbb sbb xor or adc add push in add push add add add add push add add push add sbb add add add push stc push add dec sbb mov orl add (bad) sbb add or add sub add sahf or mov add add add and xlat or sub and and add and adc adc adc adc adc adc or adc adc adc adc or adc sbb adc incb add add add or inc xchg add sbb inc mov aas inc add add shrb add aam (bad) add add add aam jl aad add add popa xchg add testb add add or add add push add lock or inc add and sbb inc add and mov inc add and rcrb inc add inc add push inc add push inc add push inc add sbb inc add add sbb inc add add add inc add inc add pop add dec add je push inc add inc add dec add dec add push add push adc adc dec add dec mov inc lock (bad) movsb stos das test xchg and aas aam test movsb cld dec mov inc jb dec bound dec mov (bad) lock cmp fidivl cli ds mov lock aad adc mov add sub adc add cmp add and adc add sub (bad) adc inc add nop test add pop inc lock sub add and pop add int mov and jae and outsl addr16 insl add arpl outsb outsl je add and outsb and outsb and and andb or add sbb mov pop lods fildl aad sub adc fisubrl push add jp cmpsb sub adc cmpsl adc mov imul inc add add add add adc loopne add sub add or push or lock add adc add add add add incb or add add sbb sub pop add add add pop add add or and add add xor add or or or je,pn js je sbb roll adc adc add jb,pn popa je popa add lcall fmull add adc add add inc jb,pn pop jb add add or add and add and cld or inc cld inc cld inc pop cld inc cld inc pop inc push lea add enter shlb enter and cmp enter rcrl inc add push rolb int3 add push mov add sub lea and push push add push and inc and add call add rcrb ret mov push push push inc call lock divb (bad) or push or or adc add inc add inc sub push push push add adc push push add test dec push adc test jne add xor and push push push push add test sbb inc and add (bad) add das mov sub push add test je add add adc push add or add je xor rcrb add ret xchg sbb add movb add add add mov sbb and add sub sbb or addl and incl rolb or push mov push incl add add add jb add adc add incl mov call push call add sbb or add insb and inc xor push adc sub push push lea mov call add add rcrb or add push sbb addb and adc inc adc add jo call adc mov cmp int3 sub pusha lea push push add or add add dec call jle add pusha sbb lea dec adc add push mov push add add inc add call mov push add add or mov add std (bad) incl in ret add paddb inc fs inc pop and add dec add cmp and add aad or add add add sbb add add mov adc adc push adc add outsb inc add push push sbb inc add or adc or add sbb add push rcrl and or and sub movsb push lock add jae sub add jae,pn or add and dec add push add add inc insb push add add lea or and and add add add add and add adc and hlt or adc mov adc add add and insb add push add push and sub xor in xor push add push add inc push or push dec cs inc push add popa je push add push push sbb rorb add add clc push add add mov outsb add sbb adc push add push out push or gs push xor xor pop push and sbb (bad) sbb adc outsb add push gs test add add popa add dec add adc inc inc push add mov insb rclb sbb add add rorb add sbb imul add inc (bad) and inc add push add xor push out and pop and add adc add xor cmp or aam dec add add add add jne insb add add (bad) gs pop in jle cmp cld adc dec add add jbe add add add cmp outsb xchg (bad) aad add int aad add and int aad or stos aad adc or adc or or jl add (bad) jecxz or int aad or sub popf or push imul fs add push mov add cmpb loopne add or nop or add pop inc or adc or or add add or rolb inc add add add add inc add add or sbb and aas add inc add xor add mov addb shrb push sbb and add xor lods add cmp je,pn gs add xchg lcall in adc and add jb,pn popa je add dec push popl adc push add add pop adc add cs add pop aas add inc add add add pop add sbb add shrb gs xor arpl push faddl dec mov xor adc aas cld or fdiv jl insb inc push mov in push push subb add mov sub push push push mov adc inc clc xor lock gs or pop addb call adc jbe adc or ret mov and (bad) incl pushl rorb or pop pop pop mov in ret add inc or add add jmp adc or adc ds ret or push lea cwtl fldl es add or int3 and add and push push adc sub mov test add push adc xorb push lea or mov mov sbb test fildl je add add add xor push push lea add loope lock adc inc call add mov call add mov movb or call add adc add mov mov lea sbb mov call add or push add push call add or jge push adc add mov add call add push or or push add into sbb adc add mov mov add ds adc stos add mov jg add call rolb adc add add clc add sbb add (bad) add adc jbe call mov add jecxz cmp add add or mov cmp xchg and mov cmp (bad) call add shufps sub call movl add adc add mov (bad) cmp je mov mov sub dec rorb mov das call rolb sub aaa add js add add inc and lock add add lods add and dec pop pushf add xor adc (bad) and sub flds add aaa add cs add es xor call xchg add add add add add add nop push mov mov add push sbb add test xorb adc add or jle testb add push test add je sbb or dec add mov pop xor add add test adc call testb cmp test into jo mov adc lock call (bad) clc or push mov fdivr adc inc or add or or (bad) push pop add ret push insl pop pop js rcrb add dec add mov push mov adcb rorb or add add sub mov push add push mov push add lea push mov or or movl rclb call repnz mov add mov xor enter add add das push cld push mov mov add push or mov add lea call push sbb adc cld push push add insb add inc sbb call std pop pop mov pop or add mov add push mov sub repz or add cmpl push add dec lea call add stos and or push sub test jne sub jne add leave or push mov repz sbb xchg pop or jne add add mov or ficompl pusha inc add add inc cld add adc push dec clc add inc clc call adc push adc adc cltd adc push call fs and xchg add push ljmp add mov add push push mov adc lds inc hlt add mov mov cwtl movl rorb je add pop mov jl or jl push ja mov in movl inc cld add cmpl je addl or jne cmpl add mov add and inc or add push in (bad) add movl mov pop pop adc add push dec scas mov mov add add mov adc mov pop add mov add rorb pop and movsb mov (bad) jo or (bad) cmp sarb int3 add icebp cmpl add test add push mov or push mov call cmp push adc aam add push mov out adc dec adc add lea push sbb and inc adc mov call add scas cmp jbe push add adc inc or call dec or clc push push test (bad) push mov inc and sbb mov add je add cld mov add call cmp call jmp sbb mov mov add or pop adc push dec call pop pop pop dec ret add mov or orb add inc or mov add inc adc dec or fadds add or push push incl add pop ret cmp add pop xchg push mov mov inc adc inc adcb mov neg add add shlb push or pop push mov jae xor pop je sbb mov xor rorl add add mov or adc push addl call inc add movl inc adc inc or add data16 jmp cmp add add movsb sbb sbb or add xor add clc add std adc pop pop mov pop pop ret add add push pop xor or int3 push push test dec sbb movl sbb lock xor mov call add mov pop ret add or sbb rcrb add push loopne or sti mov dec push fldl sub push mov pop mov push loopne or adc or xchg add add add jge and jb xor add call add or adc sbb or add cmp add mov cmpl xor mov add call or inc (bad) pop jb mov cmc addl or call cmp add add dec cmp (bad) incl or xor push and das add add adc jb add add movl dec or inc or mov pop bound add sbb sub (bad) incl dec pop or or sbb dec sub or add movl or or or add pop adc add add in adc push jne add jne hlt sbb adc and add xor push lea add mov or rolb inc and movl and push add dec dec and add add and dec and call adc pop mov sbb add pop mov mov or push mov add push push dec add push cmp sbb add mov add adc xlat inc movl add mov push mov cmpl add jae je pop add push mov push push subb add xlat add and adc cmp xorb dec add pop add pop pop ret mov adc xor add or pop roll add fcomps add neg pop ret int3 sub add rolb sbb push push mov mov or dec clc add add push jb hlt mov adc or inc clc add add (bad) xor xchg pop pop add clc rclb lock add cmp add and clc add lea push push push add dec cld or push or mov pop pop xor add dec or add call xor leave cmp pop sete rcrb mov or int3 pop xor in cmp or lds lea or inc add add scas jne mov add int3 movl jne lea adc inc aam add inc fmuls jne movl movb mov andl push add mov in adc push add add cli inc cmp je add cmp jne mov cmp je push call xor mov push inc pop or mov or push and add call in push push push mov in movl add push mov cmp mov rolb push add call test push or rorb jmp lea loopne mov cld add (bad) call mov dec inc mov push push mov ss add push xor and mov imul add arpl ficoml hlt mov add push add pop sarb ret test sbb cmp jecxz test push push or pusha adc in fmuls test and add add add push mov add push add sbb icebp dec and add sub add add add and add mov adc adc cmp push add adc inc and add out pop add add adcb je sbb add in add push add sbb or push push je add push add push add pop jne mov dec cmp je push call add pop dec and push sbb pop or or mov dec add mov je xchg dec and xor scas cmp (bad) push add inc call mov push push add cmp adc push add cmp je mov push or adc add pop or call add orb or push push mov add inc adc call push push push call mov cmp jne push addr16 push call dec or push add outsb fisttpll add out or push mov add push mov lea mov add rorb dec add add push add push push add add pop pop pop ret inc add mov push push push call decl or add test push inc fs push and jo aas mov hlt sbb sbb add pop add add add mov pop and add js inc and push add or inc and add cmp add add add inc add or dec and add sbb push add scas jl call push add sbb pop notb add sub xor or jle or or pusha or push cmp aaa mov aaa test add stos inc or or and adc or push push mov add inc add adc add or add add push add add loop add push call jecxz mov inc in (bad) add add add add loop mov jo inc and add int3 add dec sbb leave jne push xor pop add and or add cmp add add add push adc adc cmp push push call or xor sbb sbb cmp and or sarb push or or je mov adc sub jge add adc push call pop pop cmp adc add add pusha push mov icebp add test inc je add mov add ret inc or movl or (bad) lret clc movb add add push mov mov and add mov xor add ret je dec add sbb add sbb push push push add add add call and add add push lea sbb incl add cmp je inc and push push or jmp sbb add je mov mov inc and add mov add push push push push mov call add push or or stos adc or call push xchg sbb cmp add lock pushf sbb push push push push push nop call mov add je add adc add sti and push call les jmp inc sbb jne mov xlat add add inc add dec add add dec add lea je cmp adc flds add add adc sbb mov push inc add jmp dec and add push adc sub xor add cmp mov add movb add sub mov and call movb in (bad) or (bad) add pushf call add pop rcll pop pop pop mov push lds dec add or nop adc call dec cmp add add in push pop sub or in add lea dec cld push lea push lea dec or add sbb inc inc or lock inc clc or cld add push and inc clc mov dec or push hlt push push lds mov ja xor push add cmpl je mov push or push call mov inc adc dec or push adc add cltd cli lcall sbb or pop mov mov and push lock add add mov in fs mov out jo out xor mov popa push add call add push pop and add dec js mov dec add inc push popa hlt add imul out add add sbb test and add add add mov cmp xchg push add add add and or or push incl je sbb (bad) push add sub in adc or or fiaddl push fs adc push pusha jne add push inc and cmp je xor out jnp out (bad) dec and jo mov or or inc adc add dec mov mov (bad) add adc or sub stos add call scas add xor mov or mov sahf pop stos inc or cmp jo lods add push push call call fadds inc movl push aam sbb mov push add add lea push incl roll dec pop adc or adc jne or dec sbb or je pop mov (bad) pop pop ret test je push pop adc add pop pop xor pop ret adcl inc push push mov push sbb mov mov push xor add pop pop pop ret add or lea push mov incl mov lea add rclb call sub or inc adc dec or mov ficom add pop std decl call sbb add rolb sete pop ret add adc push push mov add or add xor addl add (bad) je add add jo movl adc adc movl ret xor pop sbb or add ljmp mov add lds adc pop prefetchw call mov xor incl (bad) je pop mov add mov add jae push pop sub inc add or outsl mov mov adc inc adc xlat inc add inc into test je add movl aam inc fmull inc loopne das mov add push mov push shr add xor outsb hlt add ljmp or add mov inc or mov add add mov lea movl add outsl add lea lea push lock call add fildl push add add cmp jne mov mov add ljmp inc je mov jmp add mov clc add mov cmp nop cmp je add or out add mov mov mov pop or mov xlat add adc (bad) mov hlt adc mov pop ret pushf xor inc push add je rolb lahf (bad) or mov or sub mov mov dec add or add push cli add or sbbb js movl dec sbb dec adc dec and sbb call add ret lods cmp add sbb pop add pop dec and push push ds stc add add pop add lea movl mov push adc insb add cmpl je addl or jne cmpl add add add inc ja add push add testb movl adc inc push adc pop sbb jecxz adc call xor addr16 push add and adc mov or les sbb les inc and jo mov cmpl add cmpl add inc or jnp adc mov or push mov dec or push adc faddl or inc bound adc movl add mov lea add cmp (bad) test and or rolb mov add rolb and inc and push mov add add sub movsb or mov xor mov adc sbb and add sbb add sbb or lods inc add add push xor push push mov lea sub call mov add rolb push sbb js dec and lea add jbe sub inc mov add add adc mov cmp add xor or inc mov mov sbb cmpl and xor xlat pop and add inc adc adc add add movb call fnstenv mov adc add add xor jmp push add das dec or mov add inc add adc jp (bad) push add lea add add add call xor or push add and add xor (bad) je call mov jo dec and pop xor call in ss mov lea inc cld push mov push add call adc cmp mov cld push call dec cld inc push mov call sbb pop add pop test inc push mov orb aad aaa (bad) je push add daa push stos jno popf push call mov push (bad) int3 cmpl push add add pop or adc sbb inc add add push push push push add roll nop and adc adc add push dec or add push sbb add pop pop ret pop adc pushf add add mov xor or and xor mov adc stc mov mov mov push mov inc call add xor add and ja pusha icebp mov or dec add rorb push add xchg or push hlt int3 add push add adc mov or mov jns sti and mov adc add adc aam adc mov add add cmp add call inc and mov cmp push or or add inc dec add add or push (bad) int3 inc cld add add fadds mov call push cmp cs add jne or enter pop xor add cli ret mov push add call push adc and pop mov (bad) pop or decl mov add push push add test stc mov pop mov or add or jo inc mov mov or add or add rorb ret je or pop or add inc or inc push mov mov dec rolb add pop or movl add sbb push hlt add lock push mov mov jge lea push push mov push mov call add push push call enter jno add call les pop cmp ret add add sub add mov xor cmp or add xor add lock mov jmp xor call add or (bad) pop pop and jno divb icebp adc add add add push push cmp push push push mov adcb adc sub push roll xor cmp jne lea mov pop pop adc mov ret add insb add pop xlat add add pop and roll sub mov or mov add add adc push lret dec and add and add cmp or add or add push add xor mov call lds add xchg fimull addb mov ret cmpl push je sub or call mov add add mov push push push call adc add sbb inc adc or pop ret xor pop ret push mov add sub push lea hlt adc movl adc daa mov adc lea movl jne movl inc add add stos and jne cmpl jne addl add outsl add adc inc add movl push pop mov add dec hlt pop sbb mov push add (bad) push inc or je or push or adc or push mov push xor movl mov mov add adc inc push and jo popf adc add push push push push mov sbb aad mov adc scas movb push add or (bad) push add add xor cmp add mov mov mov add add xor jbe sbb sub push or push or sbb dec inc data16 add adc add rolb adc add or mov mov add enter xor add mov sub cli mov add add cmp jbe or or push sub adc add mov fiaddl shrb cltd add sub lahf sbb mov add push add call add test xor scas or add push add and test bswap test xor add pop inc adc jl cmova test sbb add add inc add and add sbb inc add add call add and xor test nop call sbb add cmp add roll mov add mov je adc add add cmp dec add push push xor xchg add lock lock (bad) call pavgb ja xor insb add add mov push mov or call add mov pop mov add add movl adc or pop xor rcrb inc add call mov add sub add adc adc add add or inc adc ds inc sbb adc pop mov mov sub xor push call add mov pop pop ret test divb push mov push add add push add add xor leave add cmp je add adc sub jno dec add add pop ret pop add sbb add mov xor cmp add xchg rorl add push push adc stos push sub add mov xor hlt mov stc gs pop add sbb add mov add push add add movb sbb adc cmpl popa cmp push mov add xor push call mov rolb testb or xor jle or or pop and or push nop mov mov fs or pop mov inc and or add push add cmpl je add call mov add mov dec or pop insb sbb adc or inc or adc add mov cmpl add mov lock add cmp sbb pop inc jp add pop add or add adcb mov mov add mov call add adc lea pop add call mov add add push mov cld add adc push add add cmp enter call and adc rol mov jge mov mov mov add mov popf lea add seto (bad) neg or push call add incl je xor test je add stc add add lss cmp sbb add xor roll mov add add xchg inc cmp jb rcll add push xor add adc mov pop pop inc or movl lahf or add add add push add loopne or xor push mov dec roll int3 int3 mov sbb add rorb sbb add add sbb inc outsb icebp mov jne movl decl mov add (bad) je adc mov mov add dec adc iret je add lock inc mov mov sub adc mov sub or adc adc mov sub sbb ss adc roll rolb call add add xchg dec bswap add mov add rorl cli add mov add in or les or js mov or pop pop dec pop ret sahf int3 int3 add sarb mov add hlt ret leave add mov mov push add enter xor add cwtl jo dec jo push adc add push mov jns cmp jne mov jns mov mov and js rorb push add rolb adc pop or pop hlt call add sub movl popa ret add adc cmp add adc mov roll call add add mov mov push or or adc and pop test add add mov add add adc add int3 sbb push mov add push adc decl adc add outsb sbb mov xor hlt mov sbb dec sbb inc aam dec xlat add mov (bad) or sbb sbb inc or inc cld add mov fmull add mov add in mov lock lea lea inc mov call inc add add mov mov pop ret add add or or push xor rolb inc adc add sub dec or add adc xchg add and in cmp and mov push mov mov add push mov mov enter add pop add inc fdiv lods push add aam cmpsl push add pop shlb fcompl cmp add mov add test divb sub sar lea add adc add add sar lea xor mov seto add (bad) enter and add lock mov mov add add movb leave jne lea (bad) jmp lea mov dec add mov xchg mov mov add push mov add sub lret add rep mov and repz mov sbb lods pusha add push sbb cmp add lea xor addb or adc jb jmp xor mov pop mov test or mov and call mov push aam inc hlt add clc mov rorb fmuls (bad) je pop pop add rcrb cld xor or mov call inc dec clc mov push inc in add inc in or hlt or aaa sbb call add add add mov add inc aam jge add add adc call add mov and add enter add lret je mov inc add inc loopne inc sbb movl inc or lock roll add push loopne movl jno adc inc adc add push sbb mov add leave add subb dec or or push add push aam sbb mov add enter add mov pop test add gs ljmp pop adc jno mov adc add adc jnp cmp or mov fadds (bad) mov fimul int3 sub aas add inc mov mov cmp pop or test (bad) incl pop or test or or test cmp je mov add int ret adc les lods add mov mov inc cmpb test cmp inc adc rolb ficom or fmulp int3 add in and pop orb lret ret divb xor add or add add push add xorb lea mov add or add adc adc clc cmp jb out jge push mov adc xor pop or add inc xor inc xor movl add add add call jb cmp add mov add sbb cmp add add add leave cmp sete pop dec pop mov or scas pusha or int3 add push mov cmpl add mov sub sbb arpl add add adc icebp call add test je mov dec sbb jbe mov add add adc inc inc or xchg add inc adc mov dec or ret add ret adc add sub mov mov add add push jo mov cmp jo inc jno or mov cmp add mov mov cwtl mov or add mov inc and fistp mov or clc mov mov adc mov mov mov pushl add push or pop add in mov add sub sub inc mov push push mov xor and add cmp jb inc add add incb jb xor add cmp add inc add cmp add sbb pop pop add dec add inc mov and push call add add add sar add incl and dec sub adc pop adc or ljmp rolb adc mov into inc push lea mov add dec or rorb pop rcl add mov add dec or adc mov add pop adc add mov mov sbb stos mov inc add out ljmp (bad) mov hlt mov fimul and push sub orb jne or decb adc push add add call orb add inc adc loopne adc pop add mov add xor inc jnp andb or lock adc dec inc jo mov addb pusha sub adc loopne rcrb add incl pusha sub and adc shlb add mov enter fxch or add lock addr16 rorl and subb or xor lods or add inc mov rcll fs xor shrb pop (bad) or loop inc cmp jno adc jns push push push mov or jns mov xchg or add dec add push or adc add add mov mov mov mov pop add or test jne test and inc add or sub rolb or mov adc icebp call add and jbe mov movl adc inc or pop cmp add mov or ret add pop xor lock adc outsb sbb sub aas rolb add and inc aam add dec nop fadd inc loopne push inc in les movl push aam mov dec fadd inc add mov sub mov add dec call and call inc lock fmull mov add mov push push cmp add mov lea (bad) mov loopne add add add add call testb add mov push inc addl call hlt mov and sbb or add add sub add push mov or mov movb add jae add jbe sub ret mov jmp xor push adc rcrl add divb push clc mov sbb push add add inc or mov mov mov adc add and ljmp or mov inc lcall pop cmp int3 push add stc mov mov add (bad) cmp jae lea mov out incl xchg push adc dec add and mov (bad) or xchg add sbb xor aas pop ret push dec xchg sub and cld pusha ljmp mov add add mov or lock jle add mov shrb inc or out lock in or int3 add push (bad) mov or out mov add sbb add add lea jb sbb add mov add mov pop adc repz pop ret add xor or add push sti push or sbb add loop add inc or dec mov or mov add add or mov insb pusha sti add in pusha cmp dec adc addr16 rcll sbb add rolb add xchg add pop add add add loopne sbb imul aas xor sbb pusha pop sub nop sub jmp decl pop int3 int3 add sub sub dec clc sub sbb and dec imull cwtl xor dec cli sub test xor xor sub nop mov push clc stos imulb cmp xor xor xor js xor add inc or mov push push call add mov call add fildl mov ret add add add inc mov mov add add add imulb add add add call add cmp je mov mov add mov call pop pop sub inc or add adc add add sub add inc ja adc add push add push push mov adc lds inc hlt fs mov sub sbb xchg add lock fisttpl mov add mov add dec add aad add mov adc sbb pop and push loopne add add push (bad) add jmp mov mov lea movl call add (bad) mov hlt mov mov ret or xor pop inc and dec or add sbb stc call push mov call push testb cmp je rorb or push push or dec push rolb add inc aas add lds mov add push mov call add addb dec (bad) sbb add int3 push add add cmp add add call jmp out pop add sub or sbb out int3 int3 add cmp lock incl out add adc adc add mov lea data16 test add sub sar mov add lea add (bad) sar lea or leave mov loop add enter sbb mov sub (bad) mov mov add add jne lea data16 add leave jne hlt mov jnp lea pusha adc sub mov xor add shr rep mov add fisttpll hlt sbb pop pop ret mov mov cmp xor inc sbb ret xchg mov add inc add add add add movl je or inc add jle (bad) cmp ret add xor add add movl aaa or aaa push mov add push add mov mov push or push add push adc lea mov call add fcomps rolb push or adc adc mov push push mov adcb lock mov add add lea push call mov test je mov push mov or or add pop lock or rorb or test je mov mov add call xor mov add or add dec cld xor call sub push popf add mov pop rcrb pop call sub or or fstl xor rclb in inc call mov add lea in push lea push call add dec mov mov dec call lods cmp add add sub sbb add push mov sbb mov in add mov call add or pop mov push add dec mov or pop dec or add or or xor inc or push clc add mov call decl mov loopne jge cli (bad) lea adc (bad) push mull add dec sbb fsubs add rorl mov add add roll (bad) jne lea mov sldt jne mov mov mov verr jns sub and add mov add enter add dec add add outsl pop pop mov pop mov add add add gs push sbb icebp add or adc sbb dec call or ret add inc mov xor push or adc mov add add call or divl or call (bad) je add or js or adc add movsb xlat add mov add fs mov mov mov into call mov push mov call push pop pop add sbb sub cs adc stc mov add popa js lea or leave push add test je add push lea cld sti (bad) call imul cmp add sub sub push sub add incl sub add push push into jne add jg movl lods add add xchg push add add mov push mov sbb add and push mov xor sar test jne add add mov mov mov add mov or int3 adc adc add push add or dec hlt test je mov testl mov push add add clc push push adc mov adc push push push or and mov add inc and xor mov movl inc and mov add xor adc add sub or lea and add adc push push and add add add pusha movb add add add popa mov ja add add jnp add or add notl ficomp testb in (bad) add add add dec add push cmp je add xor jne mov mov or mov mov mov mov pop add adc imul add std add or jne mov fstps and mov ret and add mov sub scas add clc call enter divl sub mov adc into dec and add and push jne dec fildl inc add add imul push add mov pop add cmp or lea push mov pop push incl sbb mov add sub jl lahf inc jl sbb adc inc add add add dec addl je adc lods mov sbb test adc lea xor add jae (bad) je or sbb das add add adc add add lods cmp xchg add dec and mov decl mov inc inc aas add add add add push cmp jne add sub mov nop add dec and push xor call add or or add push mov mov adc jne or jne mov add add call pop pop ret orl pop inc inc scas inc pop or icebp mov or sbb add ss mov mov push add push or int add add cmp add test add sub and add fwait push add sub xlat add add xchg stos add int3 cmp add add xor dec sbb lea add call (bad) into test jne add jo incl add xchg push add xor dec and add icebp push cs and add add dec add push add je add lea xor sbb add and incl (bad) icebp push xor adc addb roll mov test or mov jnp adc or add add add call push call xbegin dec pushl or sbb mov add or jmp pop mov add sbb lods add add leave add and rorl add sbb pop jge adc js mov dec adc add jmp add sbb push and or push add or mov pop incb mov idiv decl mov clc sub mov mov pop add add pop push call add test adc insb movl inc or or or xchg decl xor push push xor and les add add daa mov mov push add mov adc add push adc add sub add add je xor add adc add or mov add add mov mov lock clc call lock mov mov add jnp jnp mov xor cmpb mov sete add mov or or add ljmp mov adc mov in sbb add mov xor hlt mov xor addl or dec add insl add mov inc add add incl ss je sbb add ss inc js mov movl or or and (bad) or or hlt mov add pop pop pop pop push fmuls add inc fmuls jne add loopne inc add add mov orb rclb or adc or lea push loopne rcrl add add mov mov add into call dec add call mov jbe sub lret add mov fmull inc or lea push call add loopne clc add add notb jmp mov lret lea adc jne pop push add je add imul adc (bad) incl push loop add add pop in xor inc inc cld add fbstp add push or xchg rorb jnp mov mov inc or add jae add mov mov inc or int3 push mov sub sub lahf mov add jge push icebp or mov cmp push lea aam dec call lods add mov jne test add add cmp std inc push add add add adc or add cmp add add mov and (bad) xor lcall int mov in ret call inc push add push lea call stos dec cld pop pop xor js call test rolb or push push inc jge add fild add add into add in (bad) (bad) incl add adc adc repz call clc push test je add addl add add cmp iret incl rorb add (bad) inc add add movl movl mov cli mov xor adc add xor mov add jge mov add adc call dec add mov imul add or xchg mov add inc add add call cmp jne addb adc addl add add jne inc cmp jb push sbb jns inc add pop rcrb ret mov push call add loope xor adc cmp jae mov add inc adc push sbb push call push call adc mov or mov inc dec or push add les add hlt add sub add push pop or adcl add add adc rclb or add lock fsubr fiaddl ljmp jecxz inc adc loopne push push call add mov dec add lds mov push push push push push add xor mov lock (bad) neg add rolb sub pop sbb add add xor mov inc or pop or cmp je and mov add add inc or add adc idivb pop or cmp add je mov mov pop add call inc add pop inc mov push push add (bad) cmpsb add add or inc adc xor (bad) dec inc or or (bad) jmp add add add mov mov inc mov movl add dec jo jmp mov adc (bad) rcrb or mov add mov mov pop mov push or add wrmsr add insl sbb sub push push add xor push and add mov inc xor pop faddl add dec faddl sub shll or cmp or test adc or push mov sub add add add rcrl or add add add inc enter adc push aam inc rolb mov mov lea enter mov sbb or inc lock add push adc inc cld add hlt xchg adc test lret add inc mov push inc sbb or add add je cmpb add inc cmp jb loope cmp xor ret or adc add jb add cmp jne xor add add add jae test je mov adc adc cmp add mov cmp add cmp jbe mov inc add inc add add pop pop ret mov mov dec sbb inc or xor sarb or sete push pop sub push push sub mov xchg hlt add add inc push or scas or add jle mov lea push add clc lea or add jo movl mov mov or or push dec mov in ret das or adc push push mov mov inc add push call add call xchg inc sbb add add jb movl inc cld cmpl or test add add mov push add fldl mov test jge call incl mov mov cmp nop add push add addb add inc add add cmp adc add push clc mov mov inc add rolb ss je or adc add rclb cmpsl cmpsb cltd add xchg les lea add cmp call test rclb sbb mov bound call add mov mov add sbb dec add add dec add adc enter rolb fdivs movsb call pop or add push sbb dec or or and or call mov inc cmp jne pop or or add pop adc add push call add clc push push mov jge call adc inc call ret add inc add push add push add rclb fdivs call les adc add aas mov cld mov call roll dec movsl insb add inc push push push call mov cld add mov lea cld or lea shrb fdiv fistpl fistl and call add pop mov pop add sbb add jo in sbb enter add inc or mov mov push movl call add add adc or lock cmp je push push call add add mov add adc push add clc call add adc call sbb jns add adc mov and loope add inc mov xor add mov add add inc or xchg mov jmp mov rorb add pop add mov push push push add sarb lock (bad) test adc push add push mov push call add test jne jnp cmp je add sub into call (bad) je sub adc or lea dec (bad) cmp jne movl jmp mov add pop mov add inc add xchg cmp jb decl scas (bad) cmp mov cmpsb add add insl cmpl je movl push call mov add imul pusha mov push call mov orb mov movl mov adc sbb add (bad) add ret or add testb push mov icebp movl push call add (bad) pop pop ret or add or add push push adc push mov xor hlt mov icebp mov movl adc inc cld add addl adc je cmpl add cmpl jne pop mov test je adc cmpsb cmp push movl test or add sbb int3 int3 cld xorb mov add mov cmpsb decl gs mov xor push mov xor cmp add jle jne cmp jle jne add cmp je or call mov add add mov mov adc mov sbb ret add add pop xor add jno add add pop mov or fdivs push call push mov push push call cmp mov adcb call xor or dec or mov add push call les sub jne mov push call addl inc or mov mov pop movl jno sub mov push adc and mov sahf xor push push call add xor push mov add and push call (bad) fs pop or pop adc push cs dec int3 push xor lods aaa inc sbb add pop adc add or ret add add lods ja inc or push push push call pop adc adc aas pop ret xor pop adc add jns xchg rcrb add add cmp jae lock mov push lea push cmp jbe sub mov lock add add movsl add xchg or pop mov adc adc adc jmp add mov add stc inc push rolb or in add inc or addl add testb add push call add push add add je mov mov push add inc add add mov add sub cmp je push mov xlat adc add addb push push add and push call inc pop add cs add and pop or pop fs pop add int3 or add adc sub add add and add pop xor leave add setne add mov add adc rclb add icebp add push push call add jne add jne push mov push lea push add push and movl add dec add neg sbb and and and add xor mov push or imul je sub push add add mov and adc or mov push jg rolb stos mov xor call pusha in ret add mov (bad) xor pop call icebp add lock mov lea add sar add aaa add push push adc jecxz push push adc inc push lea mov icebp mov movl cld or inc or xchg adc (bad) mov outsb add movl add inc stos testb movl addb je push call mov mov mov pop add or push and xchg add inc or add add cmpl mov aaa xorb add xor test setne inc add ret add add push add push insb jne or xor add (bad) xor aas ret mov push or data16 test add sub sar cmp add cmpw add outsl add je xor mov inc in inc call mov mov mov inc clc movl push inc loopne pop add add pop in mov push dec fcoml lea push mov adc adc and jne mov cmp pcmpeqd add lock jmp sub inc or inc mov add pop call adc adc add and mov or icebp lea cmp or or cmp or aam add add push push call in dec or aam xchg inc sbb push push fimull insb call push sbb push fisttpl arpl pusha push ljmp arpl and push add (bad) cmp xor add xor add or (bad) adc adc jle pusha mov mov push add rorl sbb sbb or aaa add add jle dec xor arpl sub pop pop pop push xor push add inc add xor cmp jne or pop ret push cmp or add push lcall pushf xor add mov add call mov lock cmp je add mov jmp mov mov add pop cmpsb shr mov pop push rol or add add add call add dec add add push lea push add icebp call add incl dec or add or rolb clc cmp jb jecxz dec cld pop xor or jo call adc scas push sbb push add add add sbb add add adc js mov jmp add notb push push push add jbe push mov add adc clc pushl adc mov add (bad) pop pop xor pop dec ret mov jne add loop jle jne cmpb or or bound mov pop mov pop pop adc add rorb adc enter rolb add lea adc cmp jbe sub add lock mov push push inc add push call inc (bad) or or sbb adc push invd add push add in or or cmp clc cmp jae add dec push add repz sbb add or push add in mov add les mov push inc pop sbb sbb sub add add push clc push push add push add push add rorb (bad) add add push call mov das push call pop add cli add pop or addr16 cmp dec push std dec add add add inc adc and and push push add adc xor cmp setne rorb push lret add add add int3 int3 mov add add add lods sub xor mov test jne ret push mov push add add dec leave mov lret add rol nop inc mov mov add add rclb cmp clc jbe sub add dec or ret cwtl call add ret inc push push mov add xchg lea add add clc mov mov add add mov push or push call add ret or add inc or and adc inc or fs invd sbb add xor mov daa sbb int3 int3 add or push mov cmp mov add add mov mov incl pop pop ret pop lea ret sub or add mov inc or pushf add or mov add or rcrb mov sub add push mov add or push add push lea push cmp add mov sub mov or lea push mov sub mov add push mov add call mov xor add ljmp inc je decl (bad) mov cmp add mov movzbl add lret jno inc add and add ljmp insl add mov push push mov adc lds inc hlt add mov movl adc inc cld orl leave je add addl inc or add add add movl inc je push call add mov mov mov pop mov adc or add orb pusha cmp test or popf sub push add push loopne repz add or push or mov pop jp pop cmp pop push je movl push adc in add sbb add inc call adc lock mov add add or call inc lock and pusha push push inc mov push call lock push push mov lret add push add bound pop xor pop pop or mov dec push or push add (bad) xor cmp sete rcll call cmpsb push pop add sub add pusha mov add xchg fwait add adc push push push xor add popf lock and decl cmp or mov add rolb clc cmp or test jne mov or add add add push add rcrb pop mov cld xor call xor inc add add xor mov mov add into xor call mov add adc rorb mov lea sbb sub cmp pop xor and add push adc push lea add inc mov mov mov dec add clc jne add jne pop mov jmp xor mov adc push adc call adc xor jb mov decb inc mov or (bad) cmp lcall int call loopne push movl adc aas sub add adc pusha and icebp movl push add pop faddl iret scas add addl (bad) or sub xor add mov push adc mov in inc sbb and add xor add icebp call adc inc mov add push push or or cwtl mov incl ret jl add mov pop cld add or add add push out cmp jae lea dec mov adc push mov call cmp in pop mov cmp call sbb call add lea push mov mov or add mov jmp sarb ret jge add mov add rorb cmp or inc aam enter or xor add add incl xor add or sub push call shr mov pop and add lock adc add and adc add insl lea jge call add call xor jmp call and add (bad) push sub dec adc mov pop nop pop mov add mov add add add push inc add mov lds adc mov add data16 jns mov jmp adc test jne sub sar or push mov pop mov in cwtl push mov add push addb mov or lds in mov xor rolb movl add mov mov inc adc mov mov xor inc xor inc and movb call jg push add dec lock add addr16 push add ret add mov add movsb leave or movsb inc or and clc push mov call or call add push jno ror push or call and pop loope cmp pop ret out loopne adc push call dec and cmp imul cli mov or bswap dec add add mov cmp jl stos cmpl jb or inc and dec or and rol xor pop movl mov mov inc cld cmpl sub mov es movl add xor mov pop movl enter ret lods add adc add add xchg add mov inc movl movsl adc add fmuls call or sub nop jo or orl add push push call add incl (bad) jne xor or inc movl add push push or jne jmp add adc inc popf or and add jmp add add sub movzwl mov push stos add push or push sar and add add push or add jmp lea push pushw cmp dec sub sar push add mov call add int (bad) jo call push icebp add add clc add sub (bad) mov sub mov test add add push les test or add mov or mov add or xchg and add push mov call xor decl das mov or cmp jae lea sldt add sub test sub adc push call test shr add into lea movsb call add dec (bad) or adc call fcoms add mov xor push add and (bad) or add add push adc call add adc adc cwtl add incb push lea call xor push add add sbb sbb call mov adc and add push movsb call ret add into add add and call mov cmp sbb mov inc lea push push push push push incl adc test cmovl add add jb or push call adc mov mov or mov add data16 dec and add push mov mov sbb add add jl mov inc and add mov push xchg (bad) (bad) lcall jnp adc jmp push xchg and loopne sub add inc add adc imul add cmp or adc push adc push mov sbb push inc push push call test xchg add dec or (bad) jae adc push add mov add adc cmp add mov cmp push add add addl add jmp add (bad) cmp add dec add cmp add je push adc roll add adc add xor push scas and call mov jb add jl xor adc lea add (bad) leave mov lock pushf add add add inc (bad) cwtl add mov add mov add movsb lret xchg adc mov sbb jg xor adc cmpl test cmp or or inc clc call add test aam cmp outsb and add adc sub mov inc add or fstps push adc mov add add or cmp and sbb es call mov xchg push inc add pop and data16 push add or add pop push push call add popl add bound add jl mov mov push cld inc add or call or sbb add call push clc cmp je mov mov mov incl mov add sub inc and inc and mov add add sub (bad) add xor inc mov mul seto neg or enter and cld add or dec push mov sub icebp lea mov adc adc add add (bad) jne push push add mov les nop cmp je add dec add push jle add fisttpl jecxz add call add cmp lea sbb xlat repz add rolb add and rolb out add mov movsb adc add and add mov call or lahf add ds add into add xor jmp mov add add add or insb add and cmp jb mov add jne add push push mov push push push add cmp and pop jp test xor insb add mov pop call inc add sub aaa pop or sbb es cmp lldt mov ret mov mov pop pop pop pop add (bad) lock xor call inc in ret int3 or push add mov mov in pop add xor mov inc lock push push push lea hlt mov or lret xor lea inc add jne call push fdivs rclb pushf add inc aam or inc lea movl mov call add mov mov (bad) and add flds je jne mov pushl (bad) mov add add add adc sbb mov push add jge add mov push call add mov inc int3 or enter orb lock add jne sub sar push orb jbe dec add call inc aam call adc pop add adc pop dec aam push call rol inc mov incl add mov cmp mov sub push call sub dec hlt andl int insb add or in push add enter jno adc mov addl test sar push add call adc cmp je bound or pop add leave (bad) mov pop add inc adc push add push mov lock adc add mov lea add push call add or add push mov mov adc inc adc inc or movl ret or mov add add jno cmp jae add mov xchg add add repz jae mov cmpb jne lea add sbb add mov ret xor call mov (bad) pop pop ret mov test addl test je add mov pop sub cmp adc add pop jmp mov (bad) mov lea push add call add mov adc mov xor data16 sub int3 adc or fmuls mov adc cmp adc ja add add sarl add adc cmp aam iret or push add lea mov (bad) call lods push pop lods nop lea push add or add push lea push call mov mov and mov mov lods push mov add orb jb adc fdivs and add cmp ret jbe add push mov sub add sar push push call lcall imul adc sbb inc adc lret call sub cmp adc sbb je add or pause jecxz add add inc addl push jb (bad) add dec add push lea push push call loop add xor sub push inc push mov add divb loopne inc loopne sbb lock rol (bad) push push call or push push popa sbb add (bad) (bad) (bad) jg adc mov xchg add add add sbb mov push add add loopne add jb test jne mov adc pop mov adc pop mov sbb rcrb adc push mov add call inc inc or cwtl inc adc add jg xor add add out add mov xchg loopne add add xchg movl je push mov push cmp add push jmp mov or push add add sub add push lea cmp or nop push call inc adc mov sub cmpl mov adc or push or inc rorb sbb adc lcall mov dec adc into jae mov adc jecxz add xor cmp (bad) sbb neg ret test inc jne mov addl add add adc sbb push add push ljmp jns adc add add in sbb add and adc lds lea mov add mov or add lock daa mov mov stos mul mov shr roll ljmp incl (bad) jg rorl jbe mov add rorb inc cmp jbe cmp ja add push call add je or add incl jmp lea push lea fadd inc in add call add lock lea inc fcoml inc fsubrl and adc ja add or lea add and add lods add mov call add adc add jne mov add je addl push call push dec add mov push call adc mov mov adc dec adc add mov dec mov mov pop pop pop pop mov pop inc ret mov add mov push call flds inc adc add or inc adc push add mov push call or in add pop adc call rolb sub dec data16 add call or movl push or push add push mov and popf add movl jo pop ret jno and lock and add in mov add lock add adc addb add adc call or xchg add addl add add and ds add or sbb cld andb xchg add testb je nop push call mov xor xchg or cmp add push push add add push add nop mov add data16 and leave inc mov loop seto cmp hlt in add call lock mov add pause movzwl mov adc add xor jne add (bad) pushl add cmp je mov mov enter dec rorb cmpsl adc add jae jb into test dec add clc add add sti or (bad) jno (bad) jne add push call add je mov mov mov jne movl add movsb add mov mov or add add add call mov or add push orl call clc cmp jne adc add pop sahf mov cmp je or push xor dec add mov or iret call mov add call movl in add and add add cmp jbe mov or shrb add jmp mov lea rclb fsubr pop out add cld add sub js (bad) incl push arpl xchg add add dec sub pop add mov in or sbb inc xchg add push add inc add add lds push and add mov int3 movl inc loopne add mov (bad) xor leave mov mov data16 mov add push and and mov add inc mov dec or inc insb add mov jo sbb js dec or add inc mov mov inc add dec add (bad) xor leave mov mov mov pop call sbb lea pop add adc add sar push lea add or (bad) inc inc cld inc add or sub and jae lea pop push in cmpw je subb cmp add add inc cli idiv decl inc add rorb push into and sub or jne and call mov rolb outsb push test je push xor jb ja add mov add jb add aaa add (bad) and pop pop mov and int iret lsl pop sub or or addl aas fdivl rorb or push hlt add movl inc adc mov mov add add test add push add roll (bad) pop xor and lea pop (bad) cmc add inc or mov stos add adc mov sbb sub push xor mov (bad) mov inc mov call lock call mov push mov lock inc adc into movl mov mov inc inc mov adc shrb add add add push andl inc inc lock loopne gs hlt add push push in mov ret add or or movb add sbb mov cld add push xor add and hlt and push mov dec add add push addl call adc pop cmp sub mov push add push les test add add add call push mov lea and push call or inc fwait add add adcb sbb add add inc or or mov inc inc cmp call add pop mov xor pop call mov loopne insl sbb mov add mov movl clc and push call les inc or adc add data16 add movl je or cld or fiadd push (bad) and jb mov movl adc imul add leave mov pop ret add cmpsb sbb push push mov xor and pushf add add mov loop fdiv mov inc call push lock push call or mov inc clc add add dec add jb mov push add sbb jp ds add inc mov xor inc or add (bad) std inc or add pop pop ret (bad) cld add in sbb add inc or sbb cmp add push push adc leave add mov stos add movl dec add mov testb add sub call mov mov lea dec add jne stc mov sub mov mov inc adc dec xorb push call xor rorb push add inc test jne and ret mov mov or push push call xorb push adc inc rclb inc adc add shlb xor (bad) jne add add movl add and mov add jo lea fwait add adc (bad) je mov int3 add mov mov dec enter cmp pusha jne mov inc add sbb loop jge add rorb add lar jmp add inc int3 inc add cmp jb or lds pop add jge add sarb clc jae les inc rorb sbb je mov lea add sarb loopne jne mov add or sbb add mov mov add jne sub pop add push mov push or rcl cmp jb or add add mov ret add adc sub sub mov add iret add add mov mov add lea mov or inc in push add or add inc rclb xchg adc call in sbb gs push or inc adc or xor call add push call add cmp enter call mov push call inc les enter mov call cmpsb in loop mov inc bound dec add push sub mov add call test fildl call add (bad) mov lea add adc cmp jne sub sar add dec mov loope incl decl enter inc mov add rol inc rorb add add mov mov aam enter add inc and call leave and pushf add mov loop seto add add (bad) add push call push clc push push call or mov (bad) repz add sub mov add push push push call adc add mov mov add mov ret push add add push call add ret je movl adc and movl lock add imulb push mov call test (bad) jne cmp je mov push mov push mov incl mov pop cmp add pop or dec mov mov or push or cmp add into je mov add sub sbb pop inc mov add cmp add lret push call adc cmp call or adc xor cwtl movl dec aam inc addl call xchg inc ss sbb push xor xchg and dec mov adc lds adcb inc hlt mov imul dec add lods mov mov (bad) sub mov cwtl movl jmp push add cmp or inc loopne rorb and push or call dec rol add add pop stc (bad) jmp lock or and lds adc lret push add push push mov fmulp add add add sahf inc add adc or add jmp or (bad) lret das mov sub push cmpsb test cmc add dec inc sub sbb adc add in jmp push adc inc mov pop adc or and add mov add lock cmp push xor (bad) sub movzwl adc or adc icebp push add add cmp je (bad) mov mov rolb xchg ret or add movsb add jo mov adc scas add push adc add rolb dec lods mov mov sbb dec and adc rorb adc aam call add cmp pushf push aam fwait add or dec inc mov add push mov int3 push nop mov or xchg xchg push lea mov in add inc push add inc or add push inc push mov push push add pusha add add rolb or xchg and rorl nop mov addl add or cmp mov adc adc push sub mov and adc adc ds into add or or and sub xor sub cmp add add jne add push mov or inc inc cmp add mov lea add jne add ret mov lea add data16 push or or aaa pop add or testb push lock jb dec mov add aaa jmp lea add (bad) not add rorl add add push push (bad) mov cmp sbb leave not and shl add rorl add mov push call mov add mov adc xor pop lldt add add movsb incl add dec or call mov xlat in ret push int3 add add sub push push add cmp or xchg add jne mov inc add dec and pop or add xor test je lea fs xor inc cmp lret jb mov mov or and rorb mov lea lea inc add push mov mov hlt call mov mov add into add push mov mov pop mov mov push add adc mov cmp or test add add sbb mov call add or sub clc (bad) incl cmp jne push call aad (bad) je mov add mov dec or inc or inc add or add add or add pushf inc cli (bad) lcall pop push fild pop movl movl or pushl fcmovnb pop add xor add mov pop pop ret add sub mov add test sub add mov mov cmp add push call add ret push mov lock jae mov cmp cli jne lea or decl iret mov adc leave call pop pop add add push add or inc adc add adc add pop jmp add push push or ds cmpl adc mov js add add dec and push or add dec mov sti adc xor fdivs add adc mov adc sarb (bad) jbe add adc mov sub das into call add mov or adc addl jbe push add repz adc (bad) jae add push call test je add jb inc add add jb add push inc pop movb pop ret add push rclb data16 or sub fmuls or or add add push mov mov adc insl add (bad) jae mov add adc cmp push jb mov add fimul push add or sub add push add push call add les movl sahf push movb cwtl (bad) pop ret mov adc and and add dec adc (bad) adc or push add xor cmp sbb neg inc ret add or inc add add sbb add adc add push ljmp insb add mov jle sbb push mov adc lds adc mov lock or jae lock daa mov mov stos mul mov shr add ljmp add cwtl sub lea cmp or mov lea add jbe add push call push js mov push or mov movl add dec in push lea adc inc in add add pop incl add push lea push fcoml js adc push js add mov das mov call or adc add jne mov sbb call cmpsl jb rclb call dec dec adc jbe sbb mov push call add add add pop mov mov adc sti movb add push push hlt mov mov pop pop pop or or or jb mov sbb xchg add fsubrs (bad) or (bad) inc pop inc add mov add aam add cmc adc add rolb test addl or inc add inc cld push sbb add call cmovge push movl add pop (bad) int3 add add incb sbb add mov cmp jne adc add and add sbb add inc (bad) mov movzbl sub jne xor movzbl add mov add adc pusha cmp jbe add add jns add adc out add add add movzbl sub sar pop pop or pop ret pop clc xor pop adc lret add add clc js push push sub dec mov lock push push push mov mov add mov or inc sbb lods add adc incl rorb adc add push add call push mov mov add inc rolb cmp push mov rclb into add adc incl sarb ret mov jne mov movb add int3 mov add jne sub inc int3 je (bad) mov str movl movb lea adc (bad) mov add sti (bad) inc inc cld add add add push inc aam push push call add dec xchg and sub inc cmp jb add add dec add add les add add add repz lea add mov push call push mov add inc ret inc add add mov push call lret push mov add push add (bad) and xor call push sub adc add jne push mov sbb and xor mov lea movl mov add call add xchg pusha mov push call jg add add out sub dec add or mov sub in ret add int3 adc or or cmp stc add jne jg add decl pop mov cmp je pop mov adc cmpl adc mov or add add (bad) jb mov cmpl sbb jae lea add (bad) cld (bad) incl cmp jae or add pop xor cmp setne rolb rolb mov cmp jne mov jbe fild add movsb mov or pop add in ret push adc inc or push call add mov or add decl xor fisttpl pop sbb and add add xor add cmp jne mov add jbe loopne dec sbb inc or cmp or xchg xor jbe mov mov add add aam addl jge adc add mov (bad) inc inc cld ret sbb dec in add xor cmp clc je mov inc mov mov mov add mov add jg adc push inc or out cltd clc or sbb pop push mov push mov add orl add fisttpl add gs mov orb add addl add add add push push sub add add jae push (bad) adc add inc push mov mov mov les add call cmp jge add call fwait pop cli mov cs add add add adc mov js mov mov adc mov stc add push pop call mov mov adc call mov dec adc mov push push or adcb inc or les adc adc push inc mov xadd mov mov mov add rolb push repnz mov mov cmpb je lea xor in out movb add repnz (bad) decl push inc aam add in dec rorb push mov decl rcrb psubsb call (bad) sub add (bad) je xor mov enter add pop pop add or add push or xor cs (bad) cmp call or out decl dec add cli and ret add or mov add xor and movl inc xor cmpl adc out and movl inc sbb push movb add out or idivl inc cmp pop pop ret add or add aaa je mov mov push mov mov add mov add push add add lods or xor rclb mov push mov or xchg add mov add mov mov pop repnz add or sbb add push push in adc push push push cmp mov inc add lock add mov cmp je mov push or inc cld mov add lea push movb add movl pop mov add leave pushl fucomi fldl (bad) decl in pop ret mov add or add add push push add sub add lea nop push lea add roll jnp push cmp loopne push movl sbb add and lret or movl adc add loopne inc or push mov movl or jae mov or pop or sbb lock jg and inc adc adc ffreep pop add pop sbb mov mov mov or add mov call mov add add push add cmp je mov mov push sub push and ss (bad) mov ds or in repz cmpb je mov add add push cmp sbb lea dec lock add (bad) and pop or adc add xor mov mov pop adc or add movl and mov (bad) cmp add push mov add shll lock push cmp mov mov lock add dec add xor cmp je mov add rorb inc sbb ret sbb adc add sbb sbb and cmp push sbb inc add pop pop mov or (bad) cltd add add mov xchg add push push lea push mov icebp call dec in push lea push call test add add jmp xor xor mov dec adc dec or inc or ret jl add iret jae pop mov mov xor call add push pop xor xor pop call jl add mov sub mov mov add jle cmp je add sar or add push add jmp std or fisttp add pop stos inc in dec add add dec adc add mov xor pop call add push movsb add add (bad) and add call das dec or lea push call add inc adc xchg inc adc add add pop add add mov inc test fsts hlt add push mov or mov and xlat lock incl nop xor mov or mov or add and or adc loopne add xchg inc loopne dec in add xor in add cld mov es add add call dec add call test pusha je xor pop add or fisttpl adc add cmp jae mov add ja mov cli sub sar cmp and lea call ljmp and mov jmp sbb adc sbb add add add pop pop xor or pop call add inc sbb xor sbb jecxz or add mov sbb mov add adc dec insb adc adc push push sub and push or and mov add divb rorb mov mov or cmp sbb inc and mov adc stc or test add mov mov or pop je add jae cmp ja sub incb ret movb cmp (bad) xchg add mov sub inc add stc add (bad) jbe mov rcl ljmp add icebp jae xor jmp add lret add je and push add add and add or mov mov and jmp cmp bound add xor mov mov add add add icebp cmp je mov add or push add add adc test je push call push adc test and add or sbb xor bnd add int3 sbb adc nop mov mov add mov pushl add dec add sub mov push mov push call adc push mov push call jae sub mov add push mov call or add add jno lock push call rol push add movl movl add or add push mov mov cmp repz dec add mov mov sub sar add mov test jne mov push xor mov sub add lea test or call insl or fistp pop or movb in ret mov push add xlat add cld add sub sar add leave add push push push call mov sub mov or adc pop mov sbb dec or iret add cmp dec cld ja lea mov xlat or push push loopne pop push lock out lods add xchg or movl call add add mov add sbb in add inc add jnp sub add call test je add push call cmp and or push pop lock mov cmp rol push xor aas jbe push adc xor dec or lea mov sbb lock ret mov pop dec adc dec add add lret adc push pop push mov cli dec cmp pop xor add fs add push mov mov andl dec jmp test add push add (bad) jae push dec push call push add inc adc adc push push sbb stos add add jle sub add sbb adc lea inc pop mov mov add add pop add push push dec and in adc rolb xchg lea call (bad) jne add dec lock and cld add call je loope sbb push movl lock add sbb add sub push sar lea or push call add mov shrb push mov sub push cmp adc lds push pusha lea mov lock add add mov mov mov int3 movb call mov push or add pop mov shr inc add or or add add push push call push or sub mov hlt aad add add jge call inc push mov call add add test je mov add mov pop or mov add sub mov orb ltr or inc in push add inc aam add mov int3 adc xor inc add push push adc mov add add add and sub cmp add inc mov add add inc push call add add incl clc add mov dec or add add xchg test sbb add insl prefetcht0 add pop pop add and jl sub adc add adc jo jle adc add jo push mov ja push push mov aas add dec xor fstpt lret je mov mov in cmp inc adc adc adc lahf inc lock mov adc lods inc js call add movl mov push mov js pop cld cmpl sub push push call pop pusha adc inc fs and pop sub pop push jp add call incl test repnz xlat call add and icebp call add add mov inc adc cmp cmpl mov or jl sub rol add mov or add pusha add xchg inc cmp or add cld push mov (bad) aam inc adc inc adc pop ja adc iret movb add xchg (bad) decl mov out rcrl idiv movzwl insb movzwl mov or inc aam out sub mov and loop sub add loopne add lea mov add add inc and lret call inc mov movl jmp mov mov mov enter call mov add mul mov inc adc ljmp lret push repz stc add xchg jo cmp ja mov sub add push push push call (bad) jmp test jne mov ja cmp jb mov push xchg and movb add mov inc sub add andb popa cmp adc mov or xor adc add add mov cmp or mov mov push add add mov adc out movsl in ret add xlat add call leave push mov add add push push popa mov enter sbb mov lods push push dec inc jo or add or call xor mov cmp or test add decb test or or stos inc lock pop mov push or iret call push sbb jle ja mov sbb or jo movl movl lock shrl fsubs add sbb push test add into jmp push inc loopne add inc mov mov mov inc call add mov add dec loopne push push add test add add lret xor lods add in add fwait mov xchg lock movb cmp je add or into add add pop or pop mov pop or xor dec sbb jnp inc jmp cmp je add iret jnp jnp xor and or and sub adc inc int3 add add rcl push call add push adc aad ret inc push push push add pop inc add mov mov inc rorb fnop mov push add mov mov add incl cmp jne pop add sbb sub mov add push or es add add je mov inc rclb call adc stos add sub sti adc mov lea movl push in or add push sbb jecxz adc xor push add add mov movl lea mov movb add add add push jb add rorb in adc add add in (bad) add es push call adc movl idivb adc sub push mov pop stos jecxz add add add in push ljmp xchg add mov sub sldt mov inc and push adc inc and mov add cmpl lea add mov push mov call ret (bad) jne lea or (bad) sti (bad) inc or add cmpl adc add fadds add add add or dec jecxz add add mov add add adc push add adc nop xor mov mov pop pop add sbb int3 call int test int3 add add or es adc jge movl xor push mov or flds dec add (bad) test add inc add add push xchg or test add mov movb add mov add or inc js xlat cld add inc adc xor call lea sub (bad) mov mov inc adc insb add dec mov add add add lea mov inc test add stc or rorl loope push rorb je inc js inc jl mov xchg push or xchg add add adc lea push lea lock push lea add mov add call add ss or and mov add push lea sbb jne adc mov mov aam inc cld lea push inc mov call add push or xor add (bad) dec loopne decl ficompl inc aam push push jb add add iret lea mov mov lea aam inc cld add icebp add fisttpl jge adc mov and sbb add xor add hlt in add inc add or mov pop in sbb push aam dec mov call mov mov jmp add mov lods push or xor test jo inc jo add mov je adc mov add push push xor aam call xchg xor mov fs jge add cs js jo push push adc push lea lock or adc jecxz inc adc inc lock scas inc in or mov mov add add mov push or pusha adc mov cmp pop je add sub mov inc js inc jl xchg or mov or imul in add or lcall push inc loop and and into mov cs inc or mov mov mov mov inc movsb mov push or mov mov add add sarb je add fmuls test add add inc lods add add mov inc mov inc mov inc rolb mov sbb or call incl pop mov iret add or or add into adc or jmp (bad) lea lods movl nop add xchg movl lea movb add lret mov mov loopne cmp add rclb or into mov lea call or lea add push adc movb add add cmpl mov (bad) jae xchg rorb add push add inc add dec test rorb iret jne xor rorb call rorb add les sbb add test add xor xlat fiadd lods and xor add mov call pop sub (bad) je push mov add les dec add call inc jge adc add sub (bad) (bad) jmp orb push push pusha push jg lock xor xor add inc add push or or cld sub (bad) call and push or (bad) mov cmp js mov call add lock adc inc addb out add pop mov jmp cmp je or lret cmpl call add add in push adc lcall and push lret xor popa mov add pop cld mov add movl sarb je mov mov sub add or jno or cmp divl add mov mov call loope sbb mov add hlt push push call fstpt add jbe mov call push in call (bad) daa push pop adc in es pop in cmp ret adc or add fmuls outsl out add pop or add add mov test add rcrb add push lea push or mov jo inc je mov mov mov or xchg adc push xchg add mov lea add mov lock js ret (bad) incl push push push push adc call adc inc inc or pop or push pop add add adc add flds rcrb push mov push mov ds mov cld add add push push push add stc add add mov ret add ret cmp je addl adc jb mov push mov sub or movl inc adc mov add adc push push push call or or or add mov mov inc adc dec adc inc or (bad) fs adc sbb ret adc add push add push mov adc xor push clc sbb adc fdivs and mov inc add ret sbb adc mov sub mov push sub lcall movl mov adc jge or cmp and jo call push add add mov add mov add or (bad) incl aad adc add push add mov add pop mov jb mov pop push pop or (bad) ds adc (bad) aad add loopne dec push or jecxz lods mov jmp or add pop add ret jae mov mov inc or mov mov out cmp add dec mov add push lock push or inc adc mov add inc add or push ret sbb mov adc mov jle adc mov sub add mov mov mov inc adc cld add adc gs inc or insb add add push add add push or xchg add add dec add mov add adc add push add add test mov cld sbb push adc adc mov cmp je or add push lea call dec add jne push repz add stos or push stos or pop mov int3 add push hlt sub add sub adc out or arpl or mov (bad) pop pop add add add add push adc and and sbb sub mov mov test fild add flds je add or xlat or push movl adc add rclb inc adc lea (bad) call mov adc popf ret add inc push mov call test inc cld add inc add push push call adc lock add mov lea add call mov mov push add (bad) or pop add add dec in test je add add call movl lea and push add call mov or cwtl add xor lock enter add pop aaa rolb add sub push push mov rolb stos push add pusha sbb dec hlt push add or or push add xor sub mov mov mov cld mov add add test sub or add sbb push inc incl mov mov js or nop xchg add push mov add les ret je or dec ljmp or dec add sbb add js mov mov add popf add mov ret mov mov mov int3 call add pop call push and or add sub aad sti and add mov inc adc pop add test incl add mov mov data16 mov mov pop movsb mov mov les mov dec add xor mov mov dec int3 mov mov sub lea dec call xchg push add sbb dec call pop xor test push add call mov mov mov iret cmp jne mov push add rorb lret jo or icebp adc jmp mov push add fadds mov mov mov incl rolb dec add adc adc je add pop popf add add je mov lret (bad) pushl fucomi ret add mov adc mov mov push mov add into call cmpl cmp test rorl or push push add rorb or les inc lea les out lea add pop inc add dec hlt fs or mov sub mov loope aam loope jo push add push inc sbb push movsb fadds adc fmull push call add xor adc add mov pop popa push sbb add or xor rorb int3 adc add inc or mov cmpl mov mov jne mov sub outsb inc push push push and rorb rorl mov add add (bad) jne mov add sar add rolb sub pop pop adc push push add (bad) decl pop add fidivrl mov call nop lock push call adc push add pop adc mov push mov mov jne (bad) fiadd inc orb pop add add inc or mov xor add adc inc add push push push add mov or or add push xchg sbb sub lock dec push pop pop add add inc add add enter push inc cld add dec jecxz adc push mov sbb adc push push or and dec add movl dec add cmp xor xor add add mov jo cmp xor add (bad) je mov mov push add fadds or dec inc adc add mov jo mov mov add dec mov cmp mov dec push mov mov les mov add add in mov dec lret or lea push add sbb add or xor cmp adc js rclb push inc (bad) xor add fadds add and add ret je or or pop or inc pop adc fsts xor sbb add mov mov add mov push push lods insl sub add push rclb add popa (bad) hlt or add (bad) xor pop and pop pop add movl adc inc dec sbb neg adc add or adc push mov add jno mov add out add sar mov add pop or or adc xchg add add add add cmpl jb mov push push call add xor mov mov mov movb adc cmp add or mov mov or add pop sbb call mov jle mov mov inc mov mov add adc mov call adc movmskps enter or sbbb pop adc push add or or add add call pop das pop and pop adc add push adc rcll lahf movl add add add mov lea jb add dec lock (bad) or scas push jae hlt out je add add jle xchg or add test pusha sub dec (bad) add push into or push or mov push pop dec or push js mov or mov lock lea addl call (bad) sbb fildl mov call addl (bad) cmp sbb dec adc push push push add push add cmp adc jne lea call pop pop pop sbb add push mov or push lea sub mov push mov or rorb bound mov adc pop add pop call (bad) mov cld add nop xor nop subb adc nop test dec lea je add push add pop mov add mov add adc cmp add mov lea sbb jae mov inc add or enter push test push add xor and add les and add add mov roll add or mov push push mov lods call mov adc adc into mov add adc xor inc mov inc dec jne or mov cmp cmp cmp cmp cmp and xor ret sub mov xor add push push movl in inc aam inc call aam add call pmuludq add lods or push push call add or movl movb jne mov lea jge add call decl dec movl add or push aam call outsb push or arpl jmp push add add mov add adc add or add push call loop lret ror add inc aam mov or jl add push add xchg add add add (bad) cmp jb or dec aam call mov push call add call call mov mov enter jno mov inc add mov inc lea movl inc enter mov call incl popa add adc (bad) je mov mov inc dec mov ljmp je push and add adc jne add mov or int3 jb fwait mov leave or mov mov cs or mov push push cmp or push mov in or inc sbb and repz dec add or add mov sar add mov movsl add inc cld jne mov add enter add push add add add add fsubr cmp add pop loopne pop add movb add sbb or out add add cli add out pop add cmp add dec add data16 adc add sti add sub and add sub orb pop sbb push or rorl adc add sbb cmp xorb add adc cmp push call mov add mov push rorb (bad) pop call lock test je add mov add fs push push call pop cmp add add jge mov mov push add or push call or pop or int3 add ljmp add add push mov sub nop inc or mov mov add fnstenv mov cmp ret ja sub or jmp push roll or adc xor or movl xor leave mov cmp je sub sbb sub mov cld add add pop inc pop push movl add mov or xor fucomi pop (bad) (bad) incl es pop push aas int3 xor add mov add clc jne or cmp decl and jbe push adc xor add add call lea or iret lea or push or add xchg push int3 int3 push mov lock je cmpl adc pop push adc testb add movsl movaps inc or lcall push pop push lock divl pop push ret sbb or push mov push mov jno sub or add add add nop push cmp inc add or adc inc add cmp jbe mov rcl ljmp cmp add shr add add jae mov push call add int3 mov test enter add xor xchg add and ret push add add stos inc add add or ret push add xchg sbb or lock sub add dec or push or add ret add add cmpsl add add push xchg push lock mov add push add mov cltd add add data16 iret sub shr addl add test wbinvd push add pop (bad) (bad) decl pop lds cwtl mov lea adc xchg rorb adc imul or jns add aas ret mov dec in push call add add xlat add pop adc insb add cmp sbb roll rolb push call jp cld sbb lea inc adc sbb inc push testl dec adc xor inc lock mov adcl push push mov push lods or movsl lock mov cmp je sbb push push out ret add and sbb (bad) sbb sbb rcrb pop pop pop add add inc or push lea jo xor lea cmp clc je cmpl sqrtps push or (bad) adc adc adc mov cld inc push add push push call mov jmp mov and add push add mov mov mov cld mov add lea add nop dec or add (bad) pop or add xchg jle adc mov loopne sbb push dec and mov inc mov mov cmp or inc cld add lods and adc inc adc out mov sub ret xor add mov mov add jne mov add or and add or add mov dec ret add add aaa test sbb add shl xchg test add adc in mov jmp lea cmp je or repz adc pop sub mov add ret xchg or add inc adc push sub lock jo mov sbb or or adc xor push push call cli pop mov mov mov adc adc add mov mov addl mov add jmp inc insb je mov add (bad) mov or rolb add push sbb xorb mov push adc lea addr16 add jge mov dec and test je add mov cli add xchg or push jecxz adc test add mov push or mov add and adc add add fs dec or lldt or and xchg add mov addl je movups sbb movl pop adc inc sbb call movb add jmp cmp jb movzwl lea and ret test jae jmp and cld add push movl call outsb add add inc and add (bad) adc mov cmpl mov dec and jae mov push and add jmp add incl inc sbb cmp call add call (bad) jmp add mov add and lea push xor cmp jne push add mov incl mov push add lea aaa or push ja adc jne add or mov mov call adc rolb inc and and int3 call in add or test jne mov add xor jmp push call add pop lods add push push insb dec or jmp mov lock adc loop adc add rol mov adc mov add into call lods (bad) pop ret sbb add adc lock mov add push lock adc push call mov pop add sub xor movsb imul or and add sbb push and add jge add adc add cmp int3 mov mov dec xor dec rcr and mov add push mov push push adc sbb push (bad) push sbb lds mov push push incl push call xor fildl insl cmp je movl lock movl pop or mov add push mov lock testb pop or aaa cmp add inc or call inc mov add inc mov push push push lock add mov mov inc or jae xchg das jge mov pop cld cmp je mov add call mov push and or and mov mov (bad) mov es clc in ret add or adc call inc mov lock call add rolb cmp jb imulb call add hlt aam sti add or mov mov mov sbb add inc or mov add inc and add (bad) xor add add add decl inc (bad) incl add or add iret add call mov and adc push call or add and xor add jb push and dec add ss je xor add add (bad) add stos jo movl inc sbb outsb inc adc pop mov js mov mov push add push or mov call test ret test je and or mov lock push adc leave mov mov or push sbb add adc xchg add jo dec or and mov mov mov sub dec xor or roll push and lock inc add outsl je or outsl int3 push xor jne mov push cmp je orb rolb sgdtl or rolb in mov push or mov or add adc pop pop ret mov add daa add add xor inc add jle pop jbe mov adc mov add adc adc insb jno leave mov adc add sub je xor mov or cmp je inc cwtl add add mov mov or lret add mov add pop adc push add mov add or cmp pop add adc adc loop pop test inc or add sbb addl add push xor movl iret je add mov push dec adc adc sub xor mov sub mov mov sub add adc adc pop or add push push adc pusha push ficomp or sbb enter xor or sbb sbb mov inc add add jle inc and push and (bad) movl mov mov in pop in mov push xor pop cld call orb add insl add push mov lea add push or xchg or add add pop adc dec adc mov pop mov pop add sbb cs loopne imul or dec loopne jne movl adc inc cld add jg lock adc fildl fs mov pop add outsb pop or call jle rorb add add add cmp je cmp or add adc mov add push call cmp movl adc push cmp mov push test add inc sub add add push add add dec adc add add inc and xor cmp ja push push lock adc js xor add test add cmp or test or add mov mov mov adc mov or ret jne inc movl mov call add or icebp jne dec mov add or shlb jmp aaa add (bad) je mov mov sbb aam dec inc adc adc iret mov mov add call mov push mov mov mov adc sarb add jae mov lods sub hlt ds inc je add add rolb add movl mov add add adc sbb cmp lea pop mov inc mov (bad) incl add movsl lea (bad) or call incl add mov pop and and add add sub mov lea movb dec add inc inc mov incl sbb iret adc inc sbb mov add push adc addl testb pop add or mov add adc push add fs push and mov mov push add sbb push add bound call xor mov push and jmp add add sub and pop jl (bad) pushl fucomi jg dec xor into incl adc cmp add xchg adc add add (bad) xor ljmp mov add and add xchg add cs call test jne add jmp movl or je push mov mov mov test ja add rolb cwtl dec or sub add sub adc add add xor call addl mov mov add xor push or add inc and add pop xor mov add add pop adc jne add adc inc sbb fwait adc add popf add add add add mov sub inc sbb hlt adc mov movl adc repnz push pop pop sub pop cmp xor lea movl add adc pop add mov mov movb cld add add mov mov mov pop adc pop sbb pop and pop xor add pop cmp inc sub mov push mov call add xchg mov add ret je mov mov push or push push call add or inc xor jmp (bad) xor jmp movl pop or dec pop adc dec dec add mov push mov dec call inc add dec push add mov push push push call inc adc movl dec movl add fadd inc add add movl push in movl fisttp lea add adc push mov dec cmp add xchg mov mov add pop mov and add pop pop pop mov pop ret add mov int3 mov scas ret or adc mov icebp mov je and iret cmp xor movl mov pop mov mov add add lea mov or rol inc les or enter mov add pop mov push mov add or inc call adc in push lock mov incl or add cmp add cmp je mov add rorb lret pop pop mov adc xor add add push add mov call xor rorb mov cmp adc or push mov add cwtl imul jb stc mov xor fildl jge add mov pop pop mov or cmp pop into call add or in inc add cld adc cmp out lea add mov test push lock inc add mov or imul dec loopne jne mov push mov jge inc cld add or mov or dec (bad) adc ret mov sub push add dec adc adc adc lea jle mov movl add add pop adc pop inc add adc inc inc add or call pop add pop in (bad) add (bad) pusha push test add pop fmuls add push mov call push inc or je or fs mov pop pop pop ret notb or push add addl xor jne add sub movl call test je clc add adc add call mov test add jle add inc mov mov add rorb add mov or icebp add fcoms cld pop cmp pop add cmp test leave add or xor or dec adc adc push mov inc adc adc add add jne call loop add or add adc mov dec (bad) jne xor add (bad) mov or mov add adc inc cld mov mov dec adc or mov mov mov xor pop or add test push mov and adc mov add mov mov mov adc push call add or inc adc or pop gs dec add mov roll int add lock movl in mov push inc lea lea add add jnp (bad) incl popa add add pop lock call add or (bad) inc xor adc and add lock mov adc lds inc hlt adc inc fldl mov push or jle add sbb lea sub add jge call add adc sbb pop xchg aam cmp inc lock nop or inc xor pop add add mov mov mov or mov jle adc add sbb icebp mov mov push mov sub fstpt mov addl mov or add in pop add or push add lods add add add add add push push mov lea dec fcoml les jns idiv cmp pop add pop or imul or push loopne push inc inc icebp mov jne movl dec movl add cmovo add ljmp add add jge jge jg add je cmpl jne push cmpl jne mov inc add (bad) je push call add dec (bad) or in (bad) add test add adc rcrl add push mov call push inc or and call (bad) jo pop ret xor push orb jbe lock sar mov adc add mov add push add add mov test jne xor hlt adc inc sub or enter call mov or rorb add lea orb incl inc push daa mov add or sbb add inc rolb adc lret call mov jmp rol add dec push ss mov orb incl add mov add push add add lea push add je add mov push adc or add inc add into add mov call xor movl mov dec mov mov mov das add std mov mov mov push xor lea jne mov mov movb faddl mov mov or push inc add push fmuls call cmpl add mov push mov lea call incl mov in inc adc add mov or cmp daa add add or pop add jo xor jo add inc adc rcr jmp adc add cmp in adc add mov dec hlt mov pop pop cvtps2pi add jb add rolb mov push call mov sbb push dec int3 mov or inc or call ret adc adc add mov and jne sbb add add mov mov rorb add scas test add and or xor xor or rolb fmuls fadds js add inc xor mov pop sub loopne jl and inc adc or mov add or cmpsl mov add or sbb xor mov push mov inc jmp or rcrb mov push add xor push and add mov add mov add adc inc cld add cmpl add dec add and inc add sbb inc or add daa add movl adc call add and pop loopne in ret jns popl mov xchg call adc and push or adc or push add or push adc std jnp std lea jle mov movl adc inc cld add je cmpl add cmpl jne pop mov lods adc std adc or movl pop adc gs pop pop add rclb icebp call add or or add outsl push add add and push adc push lea inc push or fstpt pop adc and xor mov mov pop pop pop pop add mov mov (bad) or add mov add pop and add add xor add add nop lea add adc push mov add add add xor inc and add dec adc add adcl ret jne movl fcomps shlb mov add daa or adc adc add pop adc je add xor add push cmp mov add ret je push call ja mov adc inc add inc push or add push adc xor push adc push adc lds inc cmp add xor mov add cmp iret je cmp jne add inc push add inc or or or or testb add adc jle mov add cmp sbb or je adc and push addb and scas push or push add add sbb add (bad) add jne cmpl je add and add mov and mov push push push adc xlat or add or inc inc sub add movl adc call inc mov movl add and pop inc lock add sbb mov mov add jne inc add call dec dec hlt xor add add into call mov inc adc aam into adc rolb mov or inc or lret adc or call add mov adc cs adc xor lock sub jne add or mov lock push jbe dec or add data16 leave nop cmp jne adc call dec xor inc aam push leave add mov mov or inc in jg mov add mov and iret add inc in add jne push mov lret add or push pop mov inc or add lea push push add rorb mov push or dec in test je or or sbb call mov sub pushf add sbb add in or pop jmp int3 push lock call sub mov adc es add add or rclb adc shlb mov pop add mov mov mov push mov add or mov inc sbb push inc or rcrl add or add add or add add push call cmp and lods add dec sbb ret inc or add dec add inc in add inc in add add mov add test dec fadd xor faddl pop add xchg mov loopne inc cld add add inc or push mov call call addl add fcomps (bad) neg pop xor or add push push add or les mov mov mov pusha mov mov add popf add mov lea add xor add or mov add pop adc push call add outsl cmp je sbb sbb or add inc add mov pop adc mov jmp xor call incl bound add add pop add fiadd adc xor mov mov and outsb add rorb add mov push add loop or push add add inc sbb adc adc jne or xor pop mov mov or pop pop lods ret push sbb sub or push cmp push or add add dec sbb lret dec sbb xor add add or mov push or push jbe add sbb sbb or push xor lock inc or add cmp sbb push push ds icebp mov pop movl cmp or addl inc or add and add movl add test add je push or es or mov mov hlt mov jmp add add lahf push push add mov mov adc arpl add add test je push call dec test je (bad) and add mov add pop stc add or adc nop add inc cwtl arpl or add inc add aad adc push mov fiadd push movaps (bad) push add and movl testb cmp xor pop cmp add add js add or test pushl pop mov add iret add dec sbb enter sub mov jmp js inc sbb jnp push add add xor mov and add jne leave add pushf adc movl addl and adc dec adc add inc or pop add add pop or add and lds cmpl add jge mov adc test lea inc mov add inc pushf and push add inc mov adc add or push fs add (bad) mov mov add add lret icebp mov dec push push sbb push add add dec mov adc adc push dec cmpl add mov fildl add iret mov fmull fildl jns fadds fnstcw movzwl scas fmulp or add test jge movsb mov mov flds insl scas cmp jbe sub add or dec cld pop xor pop add in lcall ret push lock jecxz push cmc dec scas or call or add jmp repz incl or add xchg cwtl sti sub cmp adc (bad) sub xchg mov sub sub xor cld sub xchg fdiv sub cwtl xor cmp sub push sbb and xor sbb adc xor icebp sbb add adc push cmp add mov add mov push mov and mov (bad) incl adc and cltd push add adc push sbb inc add ret add mov dec inc je inc ret inc testb dec inc pop loope push or mov add pusha add push fs mov in sub into lock push push lea or or add inc or (bad) xor add enter je or add lea mov xor add leave pushl fisttpl inc call push add mov call decl in add cmp ja mov push aam adc and jge inc jae lea mov pusha sbb push mov push call add add (bad) incl push add mov push call xor sbb mov cmp jne test sbb sub sub push aam call hlt add mov pusha add pop pop orb or sbb loope add pop push loopne add fwait inc and cmp add xor add mov inc in inc aam inc or push xor call (bad) cwtl inc cld add stos and dec aam icebp add fcmovnbe call add je mov mov mov mov mov int3 cmp mov mov enter inc mov push lea push or incl dec mov call bound inc mov xchg or movl pop enter jle movb dec aam cmp (bad) ljmp inc inc adc cld add call pop aam test add and int3 xchg add add inc sub inc xor adc lds adc mov add push mov cmp push and push push call add add add call add mov mov mov inc adc lock ret fwait add add add clc mov push push add call cmp lock lea add mov add adc add add add or test jne sub jo clc je or or clc mov lea mov and adc dec add nop xchg (bad) decl push add adc int add dec popa push jge pop jnp add stos fild xchg or pop int3 mov (bad) jne insb push call add inc push jbe xor adc pusha sub sbb add mov mov cmp je or mov (bad) or pop mov call add mov mov mov add push push int3 cmp adc add outsb xor mov aad xchg (bad) incl sbb cld push std and movl inc lea mov add call mov call lfs movups aam or aam lea pop pop setns sub add ret pop xchg sbb dec push push push adc push and add mov movl jle or dec sbb leave je mov add rol inc inc sbb push call dec push sub and add add add cld jo jo sub add inc or inc je push call (bad) or add jbe add add mov push push push add mov mov lea dec sub rorb fmuls adc adc or clc and or add push add or inc inc sub adc and or dec xor and add mov add (bad) clc mov mov mov (bad) je add dec add or jne add or dec sub dec push add xor cmp sti je and popa add test je xor leave inc mov loop add enter rcll pop mov adc rolb inc push push call pop mov inc add or dec dec mov add ret and repz lea inc das sti push je call inc call mov add jmp call add pop xor mov dec inc add cld jne dec add cmp or mov push add rorb (bad) test call out ret je movl adc or push or shrb and mov add add pop or pop add mov mov mov sub xchg inc mov mov add push mov call add or mov mov imul add out add push call and or inc add ret adc lret je add or call jbe cmp repz mov push push into pushl mov inc push shlb sarb jne mov mov inc add inc adc inc sbb inc adc inc sbb rorb mov dec or add scas push movl add add xor mov mov add pop xor inc pop add dec mov mov js or xchg cwtl add add mov rclb mov mov mov adc mov sbb adc add and add movl (bad) and pop pop sbb adc int3 int3 int3 add or call add mov movl and movl dec add xor add int3 int3 add inc xor cmp je add add mov add adc push adc add adc mov sub or dec adc dec adc adc out sub sbb add adc add ljmp push push cmp or icebp mov add mov lock add test je pop lods add test mov lea inc mov movl add add movl add add mov inc mov movl inc adc add movl inc pop mov pop ret add dec (bad) hlt mov adc inc int3 or sbb push add push cmp sub add adc xor add je mov and mov call mov fcomps (bad) xor ret mov rcll dec mov push xchg pop sbb sbb adc push mov call clc mov add adc mov lock push call adc push push call pop or ret add push push call add leave add add je mov mov add add add add or inc sbb xlat push add mov mov mov dec sub push sub dec adc lock xor (bad) mov mov push add (bad) push rcr shlb pop push test push push inc icebp sbb jae out cvtps2pi fildl lret and pop js inc cld add cmpl jb mov inc pop push call add movsb rorb push add add cmpl daa cmp call xor mov mov dec add cmp and cmpl or and xchg adc rorb pop xor push andb pop cld cmpl and add call jle and add (bad) js sbb add cmp xchg add call inc or mov xor mov or pusha test sbb in and add inc add xor mov lock push push push lea sbb add add adc push rorb mov or add jne mov inc shr add lea or clc add and call (bad) mov adc add or jge add inc aam call add dec aam mov movl inc in add jle jb add push jmp mov data16 je push add into call decl add lea add or add jne sub sar push inc mov mov call cmpb jb mov add adc jnp or lea add xor dec lock int aad add mov sub adc mov cmpl add jge jne push mov call fadds pop add mov call push mov and add lea call adc mov add add or lea add fs rol and push lea or call insb or adc test or ret inc add int3 push push push inc icebp call or clc shrb call add mov jae push or or adc (bad) jne add cmp rol ret mov pop pop pop fisttpl pusha inc add push push andl and xor inc cmp jne add mov push push call mov or sbb push call test add push or lea or add add mov call jne and add call call pop cmpl jnp call cmpw lea and or cmp neg mov xchg and or lock adc lock push add add dec js add (bad) xor movl adc inc faddl or enter in jne mov sub add xor aas add add lea movb add and int or sbb add add jne add push mov push call les add mov mov mov inc mov pushf add push add xor fdivl add test push add inc add lea mov addl insb (bad) incl or add push test add and lea movl add add add call jnp or lea push aas lahf xchg ret adc or inc sub sbb hlt mov test rorb inc adc es inc adc add or test or inc cld push or and fiadd call les lea add add push add mov adc adc add or add test jne push sub bound xchg mov call decl adc int3 xchg add push push push add rclb lock adc fisttpl sar add mov push add or cmp jb add js adc mov push call mov orb iret add add and add xor lea mov add seto neg or add mov add lea add add inc adc call adc fistl test je sbb enter in les loope ljmp lret or add mov inc add fidiv mov mov add add insl rorb jge xor mov adc add inc insl call call add pop mov pop pop mov pop adc or int3 and movl adc sbb push mov and push push push add and enter add jne movl and dec sbb xor cmp je add mov call mov mov and sbb dec and and inc or ret je or dec test pop sbb pop insb cld movl or sbb or icebp call inc orb mov add dec rorb sub add adc xor loopne jle loopne in adc push push push cmp flds jne mov mov sbb mov add sbb adc aaa add push or push add test sub mov xor cmp (bad) je and mov je add add add jae cmp je mov push mov mov call addb sbb and jnp cmp je jbe jo add and nop cmp je add js add inc sbb lcall sbb rolb add add and push rclb inc or add sbb jne aas inc add or mov test rolb jno add gs mov clc call push mov add add rolb sbb inc dec push mov add lock out or add mov add add push call add add xor mov cmp divl imul mov mov call out add call or xor mov adc mov add push je add mov or inc add mov mov or sbb add mov mov add xor incl movl push mov call or add movl inc or add mov push inc add jle add inc add xor call adc call add add inc data16 jo call add or add mov nop add add jnp sbb notb mov cmp sbb and rorb add lea mov roll push push mov add dec add dec push cwtl mov add gs adcl add imul loope add adc push repz in call test xor adc add inc adc movl add add push push and incb push add mov sbb inc or add rorb xor adc rcrl sbb pop mov call dec hlt mov sbbb in ret int3 add inc mov mov push repz loopne adc in mov or lea lea add enter push lea or lret push mov add stc sar cmp jne pop mov call inc add xchg or add mov addl inc pop pop pop ret adc sbb mov mov or or add add jo incl adc popf add push push push mov adc lds inc and and add mov lock add mov mov add inc or adc pcmpeqb add push adc mov call incl (bad) add add or or dec or push push call (bad) les inc mov mov add js (bad) ljmp subb lds add sbb cmp jne xor adc subl (bad) imul lea mov or add mov mov push add ret cmp sbb cli stc add dec or sub inc sar cmp jbe and rcl ljmp cli cmp pop jae inc xor jmp add add push call add add push adc add sub sar cmp inc jae push push call or mov add rcl lea add jae mov add sar add jne add jle inc add lea lea pop add mov push pop add push or lret sbb add push mov xor xor rolb dec add pop add sub add mov incl rorb mov or add add call cmp je pop xor mov mov daa addl inc sub sub push or inc clc push lea inc clc push or add sub call add add lret call push call decl xor add mov jne pushl (bad) xor pop sbb push test and mov dec push rclb call ficom push je stos call mov pop add inc push mov sub add add add mov add or (bad) push (bad) mov repnz jne and add cmpw movb add adc add add inc add inc lcall sbb add mov push push or clc add jae mov or mov xor mov cmp and pop add test nop add orb inc sub insb jmp ret lock call sub push push cmp add pop xor cmp jbe lea dec movl adc dec aam jge mov or inc fadds sbb or sbb or cmp jne cmp jne mov dec int3 cmp pop aam (bad) adc or inc out push movb add outsl inc (bad) (bad) cmp (bad) test add mov cmp mov push add dec call mov mov call cmp jne mov mov add add (bad) call decl mov or pop or cmp add mov jmp mov jle jmp test jne cmpl add inc (bad) mov or mov call add jne mov xor cmp rcrl (bad) neg mov inc test je push add add add mov sub add cmpsl jge adc cmpsl adc xor mov mov mov add adc jo inc (bad) decl and add and push add in clc add mov mov push sub push push add xor push rorb add add pop xchg jbe push add cmp xlat add add mov mov add add dec add (bad) add or mov cmp mov cmp add and sbb pop adc sub mov and add xor adc add dec xor add push add push movb mov xchg inc add nop add push push call dec add add mov add sub in (bad) add pusha or cmpsb aas mov sub mov enter jne xchg push add add mov push and mov add inc and push mov add add push push add sub push add sbb fsubr inc xor add mov adc or inc and add add xor push and mov and add or std ds test sbb sarb enter in push push push mov add jle lea lea call add cmp je mov dec adc add adc call add call pop icebp or or add adc add or or push aas rorl add cld add iret add cmp divl inc adc mov mov mov add jb mov cmpb add mov cmpb or mov mov or sub call je jmp mov add pop adc jo jne or sbb adc lock divl lea mov dec add pop add jnp add mov jne lea add into call aas push call add add jg and je push add inc add push add add inc or inc add add add cld add mov mov push push lea jne mov call add adc call add add and cmp or or add sbb and adc pop sti xor push add lock adc loopne add mov addl xor mov xlat or je add adc mov call add pop or add add add cmp je adc add loope adc pop or mov dec adc sbb xor lock jmp add rclb add inc inc add pop aas mov mov add outsl lea mov call add lea in out or mov or inc add add nop push mov lea lea dec add add cmp je mov add push call add mov loope hlt xor cs or add add adc lods push or call mov add dec add add push or inc or add rclb mov add add cmp add or mov push js mov and add inc or cs rorb call sbb add mov and add nop and add push lea mov xor add add and mov xchg add add add xor add xchg add add and adc dec add test and add add add and adc and add scas not (bad) incl mov push add adc pusha add dec add push cmp xor sbb push add cmpb adc fldenv or mov shlb add add adc add add sub cmp mov push add push add push or mov dec push mov call inc adcb or and xor push pop or add sub add or insl or push push push mov mov push (bad) les or add mov mov addb add push cwtl call sub or add jo in adc and jno sbb jns dec mov adc xchg mov add je pop pop movl adc mov call add add dec mov mov add or add movb mov add inc adc jmp sub dec loopne movl add push adc movl call add testb fldl mov push push call add leave test setne mov or add or or add movl leave je add das adc call movl adc cmp mov add xchg sub or or js inc call push add fcoms inc adc cmpsl add or add pop add inc or add stc jmp add inc mov cmp jne add jae jne add or aam cmp jne mov add or push jne mov adc add jne add je mov jmp mov pop add mov jne nop mov mov add je add mov or clc cmp or mov inc or outsl add push add xor mov add adc add mov mov cmp or mov jmp add add jo mov add or dec or pop add inc add push mov add sbb popf add popf inc add add push add push adc and mov add dec add inc cld mov cmp adc test add xchg cmp add test add pop add mov cmp jne add mov adc push mov movb add jmp or dec and add dec jne dec mov add je or jne adc adc (bad) adc xor add mov add adc dec xchg or call js xchg adc adc data16 pop mov adc push adc or pop add add jbe add test mov xor adc cmp and addr16 pop addl aas jo add add add pop add add addl mov add add pop add cmpb push mov jne push add push mov call ss call xchg addb je add sbb pop cli pop mov or inc or pop ret int3 or add mov in or icebp mov push add dec add push sbb mov cmp jae add rorl add pop mov mov add (bad) je mov cmp or or dec cld mov orb ret add lea aas adc or int3 add push inc push and lock flds testl mov add loop xor adc mov je add pop ret add or add dec mov mov or add add push push add cmp jne cmp xchg cmp sbb or inc or sbb push sbb add add adc add pusha dec or and or adc or adc adc pop int3 adc mov add dec movsb and add adc je cmc or inc push or add clc add cmp (bad) jne call dec add mov add ret add lret add mov jne add cmpb sbb loop push lea add je mov jmp pop mov or adc dec and jne mov add adc inc or adcb push call orb dec or mov (bad) mov inc mov or dec sbb or jne adc roll or je mov ret mov push inc adc add je mov or push adc in pop mov add add add mov mov jne and jmp or sbbb clc setb add add jmp or je mov or cmp cmp add push push add iret mov add outsl add push movb pop mov xor inc cld call add inc or mov push cmp jae and dec or add cmp pop mov and and call pop mov push add add push add mov mov cmp jb mov push call push call add add mov or add sbb cmp add std dec add add add jmp cmp je or adc mov add cmp add push add iret cmp inc adc test push mov mov cmp push jne or add jne movb adc inc adc add push add and mov add jmp add cmp xor mov mov cmp add dec dec add jno mov add jae cmp jne add push add cmp push jne mov jmp mov push or push add add sbb add push add xor cmp add add movsl jp mov mov add push add (bad) ja add jmp add push adc movsl add mov add scas add mov ss add cmp mov or mov dec or int3 or inc add pop (bad) jb or dec roll add add add adc nop add mov add dec add inc or adc pop pop ret add sbb add or das je push mov mov ret mov mov mov pop and nop mov adc cmc (bad) mov inc adc inc rcrl inc out mov or add inc add add add addb add push add rolb ret mov sbb or dec or mov cmp (bad) je mov mov add push sbb pop ret add push or call je add adc inc lock add add sbb add add add push push adc out movl mov loop decl add movl in add int3 ret sub int3 push mov push subb add mov push push push mov adc lds inc hlt add push dec adc add inc add or inc or add inc cld add and (bad) cmp je add call inc mov mov sub adc mov sub push push adc inc or or push mov inc adc inc add add pop pop add sbb add push mov add pop adc incl push test push pop adc push mov pop mov out int3 add and add test sbb sub mov mov push adc lea adc stc xor je cmp add fmull hlt inc add add mov add push adc xor call test je add inc sbb push and inc push call mov lea xor add add mov add add fisttpl add adc mov and call add adc and or or xor sub inc call add lock xor mov adc adc pop inc or lcall push adc std decl cmp add mov mov add je mov jl sbb or lea jle add jb mov push call add inc adc add sbb push add sbb divl push call add mov add xor add or in push push mov add rolb add aam add or adc js add mov movl jg add and ja adc add or add test jne cmp add mov sub add imul add rol cli add lret add add cmp jb and call dec adc add mov test je push cmpl jne call ds and je add add mov sub mov mov and test add adc icebp xor fisttpl pop adc je dec or add mov add add (bad) xor mov enter add pop and cmp pushf and add lea add adc cmp jne sub sar and mov add call incl fadds or ret cmp add add dec and or and test sbb mov or dec sub pop fs add lock sbb into call (bad) cmp je add add xor add sub jl and add xor aas add loopne add aam cmp je add add push pop push or xor lea jl pop add sub adc adc add jae mov xor sbb rolb jecxz les loopne and andb and lea loop into add dec and call dec add inc cmp or jmp push jae lea cmp add mov lea and call add add dec jae pop lea mov mov divl add mov push or add je pop dec and cmp (bad) jbe mov cmp sbb add add add out xor jmp add rolb add ret jne cmp jae add xor cmp (bad) setne cmp sete cmp add push inc mov lea fwait nop dec (bad) call leave js add add call add push or lds add mov add add mov pop pushf and add mov arpl call and adc call add or cmp jb add or mov add test adc test test push insl add add add inc or jb or jae aas sarb push pop add mov or mov jb add test call adc add hlt xor adc or add decb cmp or push mov adc add adc push xor add test or add adc jo or sub pop or aaa cltd sbb add push add add inc mov dec mov cmp je add sub adc jb mov inc push call add movl adc mov add cmp jne fcoms jge and sbb jnp stos add dec inc add lea push dec add in add and xor push sub or add stos mov mov push call mov adc pop mov pop adc pop add mov call mov or add in push push adc and push push add sbb and dec sub cmp add mov or cli inc cld movl adc inc or movb cld add add mov mov mov inc sbb push les and or pop or add mov hlt inc add mov push mov add rorb mov mov pop ret add mov adc sar decl int3 int3 push or mov sub push add push cmp inc or fstpt add jne mov popa add lock add cld cmp xorb call add mov movl add decl movl adc adc push jo add cmp mov pop add xor mov mov pop and jle add notb movl mov add add or mov mov push adc lea data16 data16 add fiadd push jo mov mov call or sbb add add mov call mov add sub (bad) adc add add add dec or adc ja add and mov or mov call or inc sbb push lock adc inc or add adc jle add out xor mov push adc iret mov call or mov and in push cmpl jne add rcrl test add or jmp adc pushf add add mov push or shrl lea jle call push mov add mov xor (bad) or mov push mov add (bad) jmp incl test je mov add iret call add decl je sbb lret call mov inc or movl add ret add and movl int3 mov add add orb adc add inc push mov mov sbb adc push mov call and add add sbb mov push add or xor or inc add and push adcb push call add adc aaa pop call add or adc or mov jle add jne mov mov or xchg add jne daa mov sub mov xchg imul add add cli add lret pop addb cmp jb add mov call dec adc gs popa mov add adc adc jb adc je call mov add add test jne add sub ret call inc cmp jb stos add add mov add add push push adc and push sub sbb (bad) add mov mov mov add pop lock mov mov push pop xor add addl inc fdivrl and mov mov mov call jne add call add or add push mov lea push mov ret add add or lea sub popl xchg add jne loopne divb jge add (bad) call call mov add or or pop mov push mov sbb mov lea inc hlt mov jg adc and add dec add mov pop and add rolb lock mov add mov add rolb cmp je push or jb sbb push add or dec and or mov add pop pop lock add add addl adc adc es or inc and dec inc add mov push or in push push call add or inc and out inc add outsl jno push add call add add mov add movl jmp xor push sbb enter cmpl add je add push add add add call or decl jmp aam rcrb add add dec add and xor call push push enter add add ret add add or add in lea push inc push call add rolb jg add pop movl adc add mov addl jne or inc cld add sub add movl or adc fadds movl push testb adc mov jo call mov add add and xchg xchg push push mov incl mov fildl push adc call mov cmp mov add add int3 push mov dec call inc sbb inc inc add mov mov mov lea out add call add or imul sbb sbb sbb sbb jne add adc repz and popa push mov jl sarb rcrl (bad) testl je mov and sub add inc push xor cmp sbb adc ficoml add and sarb add mov and jbe pop add pop movl and add mov push mov or repz add test and xchg add nop je call call pop adc fisttpll or xor inc add jne mov sub sub xchg adc or add shll pushf add pop add cmp jb or (bad) lods add sbb pop pop or jo (bad) add pop push push push cmp mov mov cmp jae aas mov cmp ja sub clc or out add add repnz pop add cmp jne pop mov call or lea mov add cmp xor add and add jae add add add lock movl mov mov call incl mov lock push push mov mov adc (bad) jae add (bad) cmp add mov cmpl add mov jmp mov add je jmp add sbb cmp jne add addl add out jmp (bad) mov cmp sbb addl incb adc divl or enter dec add jne or jmp (bad) decl or jmp adc addb ljmp pop add pop ret mov shrb sarl push or adc add (bad) divl or or or dec add add lea push movl call movl adc and (bad) or add push stc or push add add mov pop add add sbb add push mov icebp lea push call add and mov call add add or push xor push xor jno mov call aam add jnp push add sbb or push pusha and push pusha push xor xor add add call das int3 or inc add push push adc adc adc mov dec and sub add mov mov test add dec or add rolb mov add pop mov mov inc add and mov add add inc push push ljmp xlat push adc addl push sbb rolb arpl push push push lea jle push xor or adc add (bad) pop cmp add sub push xor pop add cmp adc test je add call add adc and or inc or mov arpl loope add add adc jo inc or add inc push push push mov adc push call add add fs adc pop cld cmp sti je movb push xor pop add and add and repz mov inc lea movl add mov push mov add pop adc adc ja jmp add testb xor push push add or push push adc call inc or ret jne add add lret je mov mov add call mov cmp or (bad) sub pop ret mov add mov iret call xor cmp adc adc add jne push add pop sbb add jbe adc or add push mov mov pusha push mov call add add push movl rolb jmp or cwtl adc push je or pop add add mov call testb je rclb xchg push adc xor push mov lock call incl mov add jno int3 (bad) xor xor pop mov inc or add add call adc iret add add call mov lea sbb pop test movsl dec adc add inc adc hlt jl cmp ret add push call pushl add add mov push sbb xor or add pop ret push lea add sub inc adc (bad) je loopne clc movl add (bad) pop push hlt add adc add push add push (bad) push call add and add push mov mov mov push or push mov mov adc je dec adc movl or adc rorb test sub dec add push xor in or mov mov daa and dec and dec add incl rolb pop sbb dec sub cld or sbb pop add pop and and mov add test (bad) adc test mov mov or lret add jb sbb add and rorb adc add rorb into call pop pop pop add add or mov adc idivb jae or and xlat adc fdivrs fdivp je call js or add add or mov mov mov arpl add add lock jge lock pusha inc outsl add or adc sbb and aas pop mov push sub push and (bad) add decl ret add jmp add push call mov sub pop xor mov rolb call push inc or or (bad) ss adc sub push scas sbb mov mov cld push push lea add xchg add add push in xor adc mov in jge mov or (bad) je mov mov dec test jl jg add cmp lret mov sbb ret mov cmp jl add cmp jb mov dec pusha add mov add rorl pop add mov xor call add ret add inc test add push add adc roll sbb cmp jl jg sarb push push jae add pop xorb xor pop call add add or mov pop bound push jmp adc add or add add mov mov pop pop lar adc sub pusha out adc inc in mov add (bad) dec adc (bad) xor call add sbb add inc fsubs mov inc adc push push push or loopne and mov adc add dec and xor je rorb incl rorb lret call inc inc and or sbb mov pop and cmp repz nop add add push mov inc or call add adc repz add movl xor or test je or cmp mov pop adc dec and mov test push add pop pop pop pop orl inc or add and add add add mov mov mov push or add into or pusha jg add add push add add adc add add fmuls or test push add mov add sbb rolb pop test add add test cmp add mov call add rorb adc add nop push add add or push call mov xorb cmp je mov mov mov add or les mov mov mov add or sub fadds xor je dec mov call add call mov adc mov push add mov xor add (bad) je mov mov push add add fwait pop or iret incl rorb fstps mov pop ret add adc pop orb leave add add inc mov mov and call dec cld popa add add add rclb fdivs pop mov mov dec or add add je mov sub or and mov fwait jle or data16 (bad) cmp bound add add xor cmp je inc add add adc test add call incl into push add adc push lea call add adc adc or add mov mov mov pop inc mov mov add je mov jl sbb jo (bad) incl add dec add addl jne jle sub mov add or add xlat push sbb enter add add cmp jae mov inc sub in sbb adc add sub mov sub mov adc adc add adc pop push add aas cmp or call (bad) call sbb mov call incl add xor ret mov or add call mov inc dec mov inc es mov or or inc dec and dec int3 int3 int3 or mov or pop popa lret or dec test adc dec add lock movsb add inc and inc add pop sbb dec sub jmp call push call call mov mov or cmp pop or test adc jge add xor mov push movsb or dec cld jb mov call add rorb jg mov add iret cmp sub add daa or mov mov sub sti or push mov gs add sub lock cmp sub repnz mov add adc in call add movsb lea pop add mov pop xor adc mov add rolb add add or shlb push call cmp add add mov mov mov add add add or adc shrb mov add sbb and adc adc add mov and incl rorb test or mov stos rolb or iret add in sbb or adc sbb xor das mov clc (bad) das sbb push or sbb sbb ja add add adc adc test sbb add in leave adc add adc mov inc mov mov mov add add mov xor inc pop call add ret pop add adc add push push adc ljmp add (bad) loope lock mov add push mov add add or scas jmp cli push loop inc shr add mov and decl and jbe or fadds adc jbe ret iret call or sub lea mov cld add xor cmp inc add adc jne add adc push pop sbb xchg call add push call add adc or and loopne add cmp add jnp lock je cmp adc test pop inc (bad) lcall lea or mov dec add push push call add leave pop ret gs adc mov sub or and or jge add leave mov mov add jge cmp je push jne xor cmp je mov dec adc jno hlt push add inc add incl sub sbb add mov mov adc mov in mov cmp je add imul push cmp jne or mov mov push add add cmp je push mov incl popl xor add rolb or lret pop pop adc int3 int3 mov push int3 int3 add nop push push inc xchg mov mov lock ja add orb xlat add adc cmpl je and push addl adc jne mov addl repz add xchg adc inc add jl testb add push in (bad) add add loope movl loopne or lret xor add ret sub and adc mov jb xor cmp inc or cmp inc adc add mov inc pop add call add add push and call or or add mov inc or or inc loopne add mov jne mov mov or inc lock mov mov pop mov in cmp add or push call mov fs mov inc add pushl adc out inc add add rolb lret mov mov push add dec loopne (bad) xor add clc sete push mov add mov je mov cmp rclb sub adc add (bad) je xor adc add add mov mov jo mov movl jo mov mov jo mov mov jmp add decl adc pushf (bad) incl inc push mov inc pop add cmp je add add push add pop xor add mov pop push mov add sbb push mov xor hlt mov push call lock mov aas test je aas mov mov mov push or movl pop add or add xor mov pop add or adc push add orb rolb aaa or adc and add and loopne jge sbb push push cmp add xor add adc add inc adc (bad) mov inc adc and inc sub inc or leave pushl add movb call incl imul add mov mov test add or xor loopne pop or push mov push mov call inc add or test pop jae out adc xor inc xor fldt mov call mov mov repz sub add mov adc mov sub aas (bad) (bad) call mov add add adc adc out inc inc ficompl fcmovnb add add add adc icebp add or push rorb add ret je mov call incl adc jns or mov mov mov pop sub pop cld cmpl adc mov push call movl mov add push (bad) int3 inc push add int3 int3 mov jecxz stos or mov and or and or pop xor addl cmp je add movl adc inc or or adc js and sbb inc mov mov or sbb cmp je sub adc call mov add and push call adc rol add dec pop mov pop pop pop mov cmp add mov pop pop xor add pusha mov popa stc mov jge movl or add add add add push or add lea cmp in or (bad) or add ss xchg movl std push in movl push mov fidivrl add add (bad) sub push out add lods add add pop mov push aas mov adc js insl mov lret add inc or add add mov incl rorb pop xlat dec add mov lret add (bad) and adc mov xor ret xor sarb int3 adc sbb sub sbb lea xor cmp jle je cmp jne add adc inc add loopne push call add jle mov (bad) or add mov inc fmull mov call movl cld add mov incl push mov hlt dec add adc jg mov push mov adc sbb cmp jne add adc jne sbb lea fdivr rclb dec add add testl mov add jo push dec orb cwtl add xor incl inc or ljmp add add and or call je push or mov and add mov adcb adc mov and xor cs add cs mov or xor mov incl scas xor adc add add mov lea adc xchg mov jbe mov mov add add add leave cmp jne cmp mov add inc push add push or (bad) je mov or cmpsb push push push call sbb test sti xor (bad) (bad) add or or in sbbb dec cld mov add and (bad) add pop dec add add rolb mov call add inc xchg or pop and or nopl leave cmp jo call test je mov ret add rclb push sub cli cmp add incl add stc sub add adc inc or add and jno pusha add sbb and movl add js mov mov lock push inc add dec or (bad) (bad) incl and push pop push and add je mov mov push add mov rolb call pop ret dec sbb mov push in sub adc pop sbb inc hlt or pop sbb inc mov push adc inc add fildl movl test add add pop or sbbb pop adc inc adc mov dec sbb dec and inc sub sub adc lock mov mov sbb inc and dec and dec and inc add movl int3 mov pop aam pop rol inc fadds incl add add mov add add fcompl jge mov or inc call mov pop add add push icebp or scas push add add cmp jbe mov dec loopne add lahf call sub add mov push call popa add lock add adc push lea call add daa push call dec or push xor pop mov pop push ret mov add or cmp (bad) call add inc lock add add push add add cmp jne push sbb adc in aaa inc add jge add add sti je mov hlt lea add add mov mov add sbb sbb (bad) sub xchg add add push mov or add add mov lock insl add xor add sahf push int3 push xor adc add test sub inc adc dec push ret xor push movl or sbb js mov mov mov js mov add fisttp leave adc inc or or mov mov lea add inc and jle jne inc cmp je mov or dec or call add cmp je add mov push push push adc xor inc adc jle inc or test jle adc sbb dec jne mov cmp call add mov or jle adc jne mov jge mov mov decl mov adc mov inc mov add adc rolb adc mov push mov call push push sub cld adc test or and and cmp fbstp add push call out dec lock add rolb mov mov push add or push mov lea fdivr rorb add fadds jle mov call add jb mov imul sub mov or jle cmp je mov push add into call mov or pop pop jae add add add dec adc mov pop sbb mov push add sub push mov push mov addl or aam cmp inc and jp mov inc or lock jne pop pop ret add adc add mov add add add (bad) lahf add add add rolb add nop add mov xor add add jg add inc loope adc cld or dec pusha adc inc js popa add movl add sub add add add adc jle add je jmp jle add and dec xor dec push add push mov mov pop or add lock push sbb lods cmp dec sbb add add ljmp mov add mov jle mov mov add xor rolb loopne inc or adc and add cmp add outsl mov xor rorb mov mov lea jge push push mov mov lock add add je mov dec adc push add push mov push call incl mov les push clc add push mov test or test add sarb jne outsl xorb dec or jb testl subl sub lods sti push xorl adc add xor rolb ret add mov push pop adc push push movl inc add mov xor add cmp je movl adc pop movl add xor push mov or mov sub pop mov addl sbb push scas and inc jle (bad) pusha sbb outsb xor int3 add mov test jne add rol sar incl int3 push push push mov mov or push add adc add rol inc or push inc inc lock add sarb sbb xchg rolb call test xorb ja xor or pop add rorb push ret call lldt add add adc leave test mov rorl ret add push inc push mov mov xlat or testb add shrl add xchg notb lods pop sbb call rcrl stc add int3 or add hlt add fwait sbb orl or add mov mov mov jnp mov mov add and mov mov mov or inc mov jnp mov movl and inc pusha mov mov add adc jnp or jnp movl add add add jge mov jge rcll mov dec rol inc add verr mov movb add sbb (bad) incl push or add insl push or cmpl add mov push call repnz lea lods adc call add jnp sub sbb xor divl jge les (bad) decl push call ret mov popa clc push pop sub lock add dec in xor call add inc push and in add call call add add add pop add sbb mov add inc or or add pushw call xor mov scas inc adc inc sbb dec or sbb decb cwtl add or sbb add inc cld add add sbb sbb add add adc add inc or inc and mov movl add add or push test add add mov push call add imul and add adc lret call add push pusha call add add sbb inc mov mov push add push xchg pusha addb add or sbb add mov mov sub inc mov mov and rorb cmp adc sub add add mov mov cmp add add mov mov cmp call adc add add add sub push push shlb adc addl inc push cmpsl and mov dec sub add push call lock dec je push add into add rclb inc clc call dec push mov add mov into mov call mov adc mov push mov addl mov add nop cmp je add call push mov add add add scas push popl add sub adc call add add add (bad) je mov mov or adc movl dec mov mov add mov call decl gs and ds (bad) jae rorl sbb fcoms add add jo xor adc add or xor add inc adc mov mov mov enter call mov sbb adc and mov adc ja add ja mov or add je sub call inc and pop or mov sbb dec adc adc add dec add (bad) mov inc or inc lock add clc add clc add je cmp je inc add xchg movl (bad) mov inc hlt mov addr16 dec hlt or adc jbe add (bad) or add xor cld or add mov push dec adc insl add add push push mov adc mov or mov adc lock and mov adc push dec inc adc or add cmp add adcl add adc call add movsl push xor hlt dec mov xor mov add inc inc or xchg hlt mov push std or add pop dec or or add add enter adc push push cmp add inc or decl sbb push or add or pop or cmp je xor out mov add js push cmp mov sbb xor inc or jle sub add add add add or push and mov push movl das xchg inc or or add add sub add adc mov lock push and inc or pop add mov mov mov mov or mov mov movl movl add add add mov inc test jne add (bad) mov mov lea aam sub (bad) call dec addl mov add inc and ss mov div mov sbb add push sub dec lea jno lea mov dec inc test add push add mov dec (bad) decl add jne pop call rcl jne mov push adc icebp add incb add jb incl sub mov push or sbb or xor jmp or les push lea call mov mov adc or mov or inc aam call inc mov pop mov lock call loopne mov lock add jo sahf xchg sbb in movsb add dec add push push pop push add push mov mov nop or jge call add cmp je add mov add in push test movb add add in jne cmp cmove mov test or into mov inc add xor add add adc mov in jecxz add nop mov add (bad) inc inc cld add adc jns push lea sub or xchg cmp test js adc add add lea mov mov (bad) cmp jb mov addl call jae add sub incl add adc (bad) jae or (bad) jmp xor cmp lldt cwtl rolb xchg jmp xchg add mov test add lea mov inc push adc sbb imul mov movsb lods addl add or sbb idivb adc int3 add mov (bad) decl add in adc add push lea lea adcb add mov adc jne add mov add xor hlt mov inc add cmp add inc push pushf push call or pushl add add add push xchg addl pop xor cmp ja decl jp mov mov lret mov call add inc add mov call mov or lea dec add rorl mov mov cwtl mov (bad) or clc je or test (bad) lea pop mov or rolb stc repz dec mov enter or dec aam add jmp call add add mov addl or (bad) ljmp mov adc inc add lahf and jge mov addb inc add mov add jns or mov cmpb or pop lock or je add mov inc or jmp lea add js jne mov cwtl mov sbb in add jge cwtl cmp jne add xor xor mov inc mov mov add add cmp je lea push bound fldenv add dec sub aaa add lea movl mov mov call add or and add mov xchg jge adc and repz add or jge sbb dec cmp dec sbb xchg add mov mov pop inc jne mov or pop inc jne mov adc push add and or adc mov add (bad) jo or add inc add je rorb or add or mov insl pop loopne pop mov add push add add dec sub mov mov add add iret sub mov xchg imul add roll add pop add repnz test add or and or add lret xor lea mov dec adc add adc pop mov mov sub mov mov mov push mov inc push call mov add inc cmp adc add lea call add dec popf add add mov in test push xchg pop and call add je adc push call or or add adc inc cld add add pop inc test lea sub push add add sbb xchg decl call push mov pushf add mov mov or pop pop pop mov lock call inc pop ret lea lea or lods add outsb push lea (bad) or sub add inc call int3 add push add or adc pop push push push push add xor sub lock adc add or bound movl mov add call cmpsb mov fwait sahf add push or cwtl sbb push push inc outsl xor mov iret jle xor jb mov push or shlb add xor pop pop sub pop sbb jge xor lock adc mov push adc stos adc adc and and xor mov int3 or sbb add mov cmp add mov cmp ja inc sub push stos out add push stos cmp dec or movsb daa lock fmuls lea (bad) mov lea mov jne xor mov cmp lock movl mov call add add aaa adc mov add push add xor loopne add divb adc inc push fildl movb add test add sbb add add nop addl and pop pop add sbb add push mov test (bad) je mov mov add push push call push add add add (bad) mov movl push or sbb inc push push push push push ds adc lock pop or add jne mov mov lock call mov mov pusha sbbl jle xrelease inc sbb and clc push push call or and or test je mov inc add int3 mov push call pop or push mov jno sub mov xchg imul add sbb (bad) and add or xor add lcall sti or adc ret pop add ret jbe mov rorb fiaddl and inc add cli add clc jae xor jmp add sbb jae mov push call pop pop pop or xor or jne ss jne mov inc push mov call inc nop add inc add orl add or pop mov add add je jmp lea add jns or jne mov or push mov mov or invd and je (bad) mov jmp mov add sbb jne sbb enter jge adc add push lea push push add mov mov dec loopne jne mov adc or add or push mov adc bound sub push mov push mov add add adc add jb mov mov adc add push (bad) repz ret cmpl add add call test add cmp jb cmp add loope hlt inc add mov jg jmp mov mov aas add je mov pop and pop add add adc loopne adc loopne mov inc mov icebp add adc add jle sub cmp add xchg xchg call push xchg add add push add push push mov call sbb call adc sub or jmp inc cli shr add cli adc fildl orb ret push add fmuls add mov push or fistpl add mov or sub mov in lea lea mov add mov mov cs call add add call add xchg sbb rolb rclb inc adc (bad) or js add mov lea mov call mov cmpb je add pop mov or add stc jmp add orb jge lahf add mov add add pop add jmp add adc mov lods aas lock and jmp mov add mov and mov mov scas je add aas mov mov mov in cmp jne or pop add jmp mov xchg mov add add pop mov mov mov or inc or mov and sbb mov lea or dec and mov mov insb dec add cmp fwait inc add push mov add sbb sahf add sahf inc add and mov mov inc mov mov add add mov mov cmp inc jne xchg cmp jns test lock or add dec or jne mov push mov inc movb call inc add add add dec jne or mov or jne add push movb xor sbb mov mov inc mov mov mov push call cmpsl aas fs or or add push add adc push push or pop add add test xor test xchg add add sbb lods aas inc mov pop inc mov add or jne push fmuls add cmpl insb add push call and add mov xor sbb push jnp or insb decl std adc call daa add adc jle adc push add iret add or inc cmp jbe add (bad) mov mov inc add adc add pop rcl in ret push out or or jp pop sbb or adc mov add je mov ret mov cld and mov cmp push jne das push inc ds ret push int3 add add sub xor add stc and adcb int dec adc roll add push call add lea cld push lea movl sbb add lock adc inc lock adc dec sub dec sbb pop or pusha add adc adc mov mov add push push jne mov cmp jne add inc add ret add lods add sbb aas adc fstpt nop jno popa dec or adc mov add and dec xchg or rcll je adc push or add adc movups ds aaa dec cmp and pop es pop or inc ret cmp push and push push push icebp fcomps push mov sbb sbb add addl add push mov jne push mov cmpb add inc xor jne scas mov and lock push inc cld mov jmp adc push add cmpl mov add mov add add hlt add (bad) jae mov mov add repz mov cmpl adc push add add sbb incl add adc repz or push mov andb cwtl rolb add jmp dec mov add je add jne adc add add sbb push push add lret call add inc mov movb adc lea inc cld call push cld mov cmpl mov dec add jb add cmpsb movl push or or notl jb cmp or inc adc lea (bad) lret call or add mov or jb sub adc (bad) (bad) incl notb and push add add mov xorl or cs int3 push add and push ds inc mov cmp add mov (bad) or jne adc adc mov mulps pop xor call (bad) mov movl movb add push xor add jb mov push call mov mov add inc add add push add arpl push or push nop add jge inc mov push or rolb jne mov or add js jmp and or pop or mov jmp push mov add add add cmpb add test add pushf push add sbb hlt movl jbe addb cmpsl add cmp adc add add mov mov add jb mov cmp dec add add add add cmp jne mov add add mov mov mov or push add inc add or or mov or dec push add jp mov mov jnp cmp jne mov add int (bad) add cmp add or mov aaa add mov or adc add and dec add adc jmp or cmp jb mov mov add rorl add add jmp mov mov mov mov add or ret add jp cmp add adc mov mov or incb mov add mov or fs or pop pop adc sbb inc add mov mov ret mov inc cmpb sbb adc mov adc cmc mov adc mov add jne push mov cmp add adc je out mov or add inc sbb or add sbbl sub push add add mov push call fadds xor add mov and fmuls test add or add or cld add inc inc mov jne push in push mov lock inc adc sbb add (bad) incl sbb adc adc mov and ret mov push call add add inc in lea inc in push lea call add inc dec pusha addl fsubrl add push and lock push mov cmp inc or jno lock mov js sub add or add cmp add jle adc inc mov push call mov movl loopne or jae mov inc push add (bad) push push call les or leave jmp mov add mov add in push add mov mov jmp add leave lea lea in cmp je cmpl add mov push call add or cld add movb add mov cld inc push add push push call push in mov mov add cld mov and mov add lea add addl cmp dec or test cmp lcall mov push pop add or adc add add push push mov adc adc add je xor lea jns add inc or add or mov mov inc mov movl cmpl xor push call adc pop adc mov dec jne cmp nop mov sub inc xchg mov addb adc leave mov mov lea add inc or test and add mov imul add movl lea movb cmp adc adc cmp add mov push call lret inc or dec add add cmp adc jns adc push xor test fiadd mov adc push adc mov mov mov adc mov lea sbb lret adc push rolb repz push rclb push push call or jnp adc mov adc xchg call add lock je mov push call aaa cmp mov divl or adc and mov mov adc adc add mov mov xor push add add sbb add lret adc (bad) cmpsb or or add add mov inc add cld adc mov add rolb or xor call loop add loope adc sbb add rcrl mov or cmp jae mov add ja push add incl cmp inc adc lea call inc inc or (bad) je or mov mov add or pop pop pop add add and add push or or or add ljmp push add in or push test xor sub add add dec add jbe or mov sbb inc or and push and mov mov sub adc dec je adc add test add add jnp cmp je cmp pop or add add mov cmp je adc jns cmovle movl mov insb inc inc adc insb xor pop or (bad) or (bad) mov pop inc lea dec or push add loopne adc adc int add push into int3 int3 add push adc cmc testb add call cmp (bad) and dec add add and clc add lcall add lea mov stc xor fstpt pop sub test nop add mov add sbb mov mov adc add add mov push mov push add xor add add add push add cmp aaa adc or add adc add add and movb aam decl popa sbb mov and adc cmpsb adc push dec add add into inc test cwtl add inc push hlt cmp nop mov and add add or mov and add push lea and push add add push or mov add push (bad) incl dec lea add add inc add lret sar incl adc mov call mov add mov add push lea push adc icebp faddl add mov sub scas lods add add add mov push mov push mov pop adc pop add add push movb call add test xor dec mov push add mov add add add add mov add sub xchg lods and add add or xchg add sbb out adc inc inc and or inc jl add add addb add leave fs sub lea xor add or mov add or popf into mov call cmp jne mov cmp jb mov sbb or movl jbe add mov push mov or sahf sti (bad) incl jne mov test in adc rorb mov pop shrb push inc add int daa (bad) call call mov sbb addb pop and je add mov jne add sub add roll or or sbb je adc cmp sub mov xor cmp or inc or or jno cmp add push sub aaa adc add push adc sbb cmp adc cmp push call push ret rolb int jae int (bad) and push lea pop ret mov or push clc add sbb xor push int and add movl (bad) gs cwtl mov pop xor inc push or pop push add mov pusha movl adc mov (bad) push test push dec jl push sub mov mov mov and mov push sub cmp and pop pop add cmp je mov inc pop mov push call aas inc push add sbb dec sbbb push call xor inc pusha add adc add add mov add jo shlb insb mov push je daa sbb and jo add int3 adc inc lcall and or orl push inc sub repnz mov lock add pop jo outsb mov movl pop aam mov mov mov loopne inc fmull add add lea movl mov pop adc mov add add add rorb mov call les test jne or push movb call inc inc cld incl sbb jb add nop push call add push adc cmp sub sbb pop add inc adc test (bad) (bad) decl mov add mov or loopne push add add test or or pushf add dec and mov mov push incl rorb inc add mov call mov add add add mov add add (bad) hlt sub sbb mov cmp cmp cmp cli add add add call decl and xor lcall lock mov add add lock rorb dec or inc movsb or dec test inc adc mov mov mov gs movsb push mov sahf fistl push je add jae adc add or lock or movl cld add add in add mov test (bad) je mov add aam push add inc mov mov add adc or add rorb add add inc call add rorb or push add or lea or in add (bad) mov mov rol mov push inc xchg mov inc mov movl lea movb call test je mov in mov mov add mov mov add or ret and dec lock push mov pushl fcmovnb test js or adc pop mov dec add or sub jne mov fist add add cmp jne mov sbb or in (bad) add adc call (bad) mov jge add std (bad) call mov out pop fmuls push pop or into test lea or or push add add add or add or add mov mov aas rolb jne test add or mov movl sub or lea sub dec or lock push add push add rorb add add mov mov add lret call xor cmp lock or mov xor mov push push call decl clc inc pop mov sub call pop xchg dec mov movl sub inc add test add add or lea and fucomip int movb dec mov mov jo cmpsl add rorb cmp je cmpl adc int3 mov lock lea das lock sub lea push add push int3 call incl fisttp fmuls jmp inc in adc popa mov or sbb inc lock jbe mov jne movl add test (bad) (bad) decl pushf inc mov add mov and push mov mov add add or or incb add mov test je add roll call mov mov push push cltd lea sub enter lcall or movl or or or push cmp test push add add mov call mov lea aaa push jmp add nop push or push add rolb push add add or cmp jne cmp je mov jne push push add call test or test mov (bad) call or and mov or xchg (bad) sub and aad push and add or add add cmp je xor inc push jne roll mov js add push mov vshufpd add mov call or test add (bad) call add mov mov pop pop pop pop mov and sub int3 and push mov in and push push adc sub add sbb pop mov inc xor mov add push adc push lea mov mov xor (bad) mov mov adc ja cmp cmove and cmp add aas fmuls cmp je sub rolb xor adc je mov test inc or sub add lldt inc mov mov add push add add mov mov mov xor and pop jl or add pop nop or mov add mov add inc and push add sub add add add add inc xor test or call je add sbb adc cltd add test in adc sub adc ljmp push push and add and call and jl inc and or push and inc add add add add inc and push add (bad) or call decl or add add add add or adc (bad) mov push add add inc adc add call mov or add push and push or call pop adc adc or adc fs add pop cmp call decl mov or xchg add push push lea push add sub pusha call add jne add mov add dec and lea cmp bnd and push lea add add pop add mov add add xchg and mov pop mov add mov jns add aam or fmuls and add xchg and add lea and test add or mov add add enter sbb pop add int3 add add loope push call add or xchg add or and cwtl add add or pushf add add dec movsb add add adc mov adc add rorb push call pop les sahf add push cmp (bad) xchg and rolb add out push sub mov les call incl cmp xlat and (bad) (bad) incl cmp add or (bad) pop add add js add jne add mov add call inc in add xor enter add mov add adc or aas cmp decl inc sub add sbb dec sbb push call sbb add mov lock mov sub je mov (bad) sbb xchg sub mov xor add lea add enter mov add jae add add xor push push call add lea add (bad) add je test add adc xor call or clc add jb add rcll loopne add dec add add sldt or add pop cmp add add jl and add clc jb add adc mov mov mov mov add add (bad) mov adc adc add push dec mov pop push stos jmp or adc mov test lods add cmp lods sbb cmp adc lret call push cwtl and daa add and and jl or add adc adc movb movsl (bad) call cmpsl cmpsb push add add add add pop sub pop add adc adc int3 add mov add mov pop add add lea cmp or sub jmp lea push mov or jmp push lea or push jmp adc rorb jmp rorb leave roll lea xor add aaa sub or pop push and add xor sbb or push mov add push fs mov jl push push mov adc lds adc mov mov jge mov mov mov push or call mov inc test je inc add push or (bad) push mov iret call mov xor add inc lods adc or or add mov mov and add lea lods push add mov add cmp into incl rolb adc add push and shr push call add sub add sub incb xorb add mov mov add add add jnp or into inc call inc shr cmp jb adc incl rorb mov test decl pop lea jl dec mov mov add xchg mov cwtl mov mov mov jge mov movb add mov dec jle incb out test add mov dec test inc rolb out inc les add mov lea mov (bad) mov movl mov mov mov fadd inc in add mov jne lea push push add pop push mov mov lea adc add adc xchg push rolb hlt add add cmp jne add add add std add add mov or add add imul jmp inc or divl push mov add cmp mov mov add rsqrtps add add add push add add push add add add cmp jne mov add or add ret push add and lock cmc sbb wbinvd pop mov inc daa add pop ret and dec inc in add jecxz sarb jne add add jge je sbb add jne mov cmp add call mov movl mov addb add jge and jge add nop jne adc or xor xor rolb push mov in and add add adc sub push les lea or xor cmp add test add add or mov mov push add add add add pushf and stos add add sbb adc add add xor add add sub sbb or cmp add add add add addb and movb mov push add or hlt add test je mov and addb mov and add pushf and or and add mov push mov push add push adc lea and push call cmp add and and add call dec and mov or dec mov mov or add pop pop pop add mov inc push add push adc mov jne add int3 add mov adc fmuls aam pop mov pop or add sbb pop pop call add test decl fildl add shrb pusha lea push adc call jne add or add add dec roll jl mov add mov test mov xchg and add push mov add or add mov je push and movl and sub or inc pushf or cwtl add mov pop push add push mov and mov in sbb add mov add add add or and or psubsb repz and inc mov call inc mov jne add nop cmp jbe or add loopne movl test or subl and mov pop lea add in call xor roll adc test xchg add add (bad) push (bad) adc call idivb xor add dec add call push push add pop add pop adc je add inc jne adc push dec jne add cmp ret xorb cltd repz repnz mov and xor cmp sbb xor cmp push or or or pop sbb insl add sbb aaa adc add pop adc sbb cmp adc cmp push call push mov mov and clc push push test pop add in pop push add push mov and les test fbld add mov xor cmp add test add mov adc push add add add aad add add add fadds cmp pop stos adc adc add add add sbb or add adc add add cmp add les mov test je push add sub mov adc add inc loopne inc or add mov push sbbl mov les pop push lea pop push add add push lea and sbb call nop jne add add call jne add and inc and or and add mov adc fs call add cmp popl sbb sub jle add call push jnp mov imul mov inc add rolb sub push add pop pop pop pop mov pop ret add sub add dec and push cltd ret add jne add push call decl push adc mov call movzwl push add sub xor or add je mov mov push add rorb (bad) mov jmp cmpsb add call or test stos or scas movups xor mov fsubrp hlt (bad) mov and or jne push call add or add pop add or add mov xor mov add inc mov mov test push mov and add rorb daa mov or nop add add xchg or pushf add mov push and (bad) mov and add add addb add mov pop add add xor and inc push add jae addl mov add lea lock and add into mov xlat call cmp add sbb inc and add cmpb add add cmp in pop in (bad) add add js mov mov dec add jmp adcl or add add add mov add orb mov push push inc and jmp mov jl and jbe cmp je and push cmp add inc jne adc je push call add cwtl add xor and add mov xor or or or (bad) test je adc aaa lea push add push je add mov jne add add mov push call cmp adc add in and push subb add mov push sub push add and adc les lea cmp mov add hlt push test add pop push add mov or test and add dec add add pop add add add loopne inc push add add add push add add and sbb add push add add add add cmp lea movb push add pusha add add sbb call incl dec or xor or adc ds inc and sbb incl pushw push or mov push (bad) mov mov (bad) dec and push add push or lea push add xchg mov add jne push lea push mov sbb orb add inc add inc sbb push add add push pop inc add add inc or add push sahf add xor jge jmp mov incl adc and pushf or call mov or xchg add add fadds stos fs or pop pop pop add add add dec and mov call mov jne add mov add lcall pop xchg call add test nop add push call decl je mov mov mov into call add and js popa call pop mov add and dec (bad) xor mov call int3 add jbe add add dec add pop call aam fnstenv pusha inc push mov call push or push test or jne call adc jp push das add outsl add push adc rorb xor mov adc xor pop mov mov add pushf and or adc add xchg and add and daa add or adc pushf and add mov mov and add xchg add mov or sub add add movsb add add add test and dec push add jns sub sbb inc xor and dec or movsb and clc add xor add into mov xlat call cmp add cmpl jne xor mov add add cmp mov inc add inc and mov cmp jb add add rorb add mov (bad) add aas add add add add add or and pusha jmp mov jl push xchg add pop and inc je add cmp push add or add cmp je or add andl add xor or and xor cmp (bad) or sub cmp or or or les mov add lea pop add pop je add mov jne add add adc push call mov fadds sub or add push push mov clc lea push call adc add push add push mov adc pop ret add add add in xor mov sub dec xor push sbb add roll dec and sub mov mov mov inc mov mov mov push pusha mov mov add jnp dec pop mov mov dec adc push addb push add add sbb add add orb add je add mov movl lahf xchg (bad) push inc or inc je push call mov pop pop add or add or mov add rolb inc pusha inc mov movl inc pop mov mov mov or and add sub sub add mov xchg imul add add cli add lret pop add lret mov test leave je mov mov jo call pop and jo adc mov add push or dec sbb add or jae add add jb add pop add or dec loope adc fmulp int3 add add push mov push push push push mov adc lds inc or mov mov lock inc cld add mov xor cmp add add call push lea mov insl pop and cmpsl into add adc and and adc mov orb or push inc inc sub ds jo or pop add pop cmp add lea mov add push clc loopne adc and test das movl adc mov pop jo mov pop push inc add add call lret or xor adc xchg sbb sub add lock push push add testb (bad) and sbb lea sub in jnp call call inc mov (bad) decl or mov jae add mov xor mov pushf push lea movl lods call jae sub dec mov cwtl call mov add add jge add call jle add mov push adc sub add add test jne addl test add adc adc mov adc imul fildl add add clc dec add rclb (bad) lea mov inc call in js add push aam out int3 add incl (bad) add or push cmp add aam add mov push push mov or rolb cmovae (bad) xor cmp sub add add call add add rolb and add add mov add jb add push inc jmp mov mov add lcall add add mov pusha add xchg add sbb inc and in jno aam sub std add inc aam and lcall and add lock call mov pop ret push push inc or mov movl sbb and stc add push add and xor pusha call push lahf pop pusha addl push xchg and cmp imul inc and dec packuswb xor cmp pop and test add inc adc add add and push mov add add or or or lea sub adc dec add dec and push add add add add lea movb and add mov test je nop inc and mov loopne and jp push or adc rolb call add jmp call mov add sti je mov mov adc push mov push dec call orb push push add cmp je add call jmp mov jne mov push call incl sub mov das adc or adc push test add add mov incl cmp repz pop add movsl push mov loope mov add mov push mov call add leave add (bad) je mov push mov or js movl adc add dec adc dec and dec sbb dec and test adc call pop add stc adc xor and or add bound adc push push push or lea adc icebp mov or push add add cld mov or add push incl mov sub rcrb mov sub sbb mov movl adc or push mov testl add add inc add add call add cmp (bad) sbb xchg add add cmc add and sbb add mov adc mov mov pop adc adc adcb jne call add add push call add and jl cld jge adc mov jge jl out adc rolb adc loopne sysret shlb add xchg cmp jne call mov or push decl and sub add inc shrb sub adc mov push inc or inc sbb cmc jbe addl sub lea jb add and pop orb cmp jbe sbb inc add xor sbb xor jmp add push call add or sarb je mov sub sar data16 (bad) lea mov add mov enter (bad) decl pop cld xor mov or inc call mov aam jno jmp lea add adc cmp jne add push lea aam fadd add inc cld add mov push aam or push cmp add lea mov or jge add inc mov add call mov add lock jb mov or dec add push leave movl jle push aam add push mov fild test mov sub lock call out in ret add add add in push push pop jae in sbb imul mov mov xor cmp or test add adc add add add add xor call mov sbb (bad) je mov add mov mov mov dec sbb sbb sbb push or rorb mov mov add clc add jbe add add adc or test decl test and adc je mov mov jo sub mov mov fs push lea or pop pop add mov add xor mov mov or stos dec add or add (bad) ljmp mov or pop fimul adc add push adc dec or add (bad) call inc mov movl jmp xor add mov add adc add mov call movl movl add adc dec or mov xor mov cmp inc je mov call arpl cltd and or and in or jo push adc push and adc or jne mov add cmp mov push (bad) mov add push call jg mov mov addb adc test sub ret cmpl add call and mov test je mov adc test mov add add add rclb or or je dec and cmp pop or and mov inc push add dec and jnp dec ret pop sbb arpl add cmpl je mov mov fnop add cmpsb add cmp add test add push push mov fdivrp add xor pop lods inc or popl das call sbb add add mov pop and cmp add (bad) mov call cmp mov add sub push pop sub call add jl cs pop add push jle add push dec call les popa sbb movb add (bad) pop mov adc call lret or fild sbb call (bad) jmp shrb sbb dec add flds push push cwtl push call pop dec incb cmp add inc sub ja add fsubr inc dec add dec or dec or adc call push mov sbb pop add lea pop adc ja add add clc jmp xor incl or mov mov sbb fadds or and inc push repz je sub loop ficoml adc leave sub mov push push call call iret add adc call adc or sbb jo adc xor mov add add push add testb je or test mov pop pop lar add push push sbb push lea hlt adc mov add inc cld mov mov add movb mov mov add or inc add pop add movl mov mov lea add or add jne sub sar push add inc into call xor fisttpl movl sbb cmp adc movl sar mov pop lock mov or lods add xor sarb icebp mov adc jge or sub andl add xchg push lea add ja mov cmp jae add push call add pop test jne mov adc mov add add mov or xor rolb push mov add and mov mov pop ret sub or add mov xor mov js mov and inc or leave ljmp enter mov mov add add test (bad) mov or (bad) or mov lock mov cmp adc mov call js lea and ret mov add decl add pop pop pop mov in ret push adc cs add adc push inc cmpsb jl inc inc mov adc lds jbe push and inc adc sbb add ret add lea sub xor movzwl add inc push pop cmp jne add push push mov call add je cmp add loop adc xor mov mov js mov mov or dec inc mov add mov mov add or lock xor movl add lret call add inc add push mov mov add adc cmp (bad) je mov jmp mov push mov push mov decl (bad) xor sub mov xor int std (bad) add mov add ret sub sbb mov sub sbb and add test rorb out add dec add add or rorb les jecxz ret pop mov adc mov and add dec or add adc add iret test je sbb rorb call (bad) or add sub outsb mov orb fadds dec dec mov data16 jp mov inc call mov enter jle mov orb addl xor or add loopne (bad) decl syscall inc call push int3 add les repnz add cs add xchg add add or add pop adc dec mov dec add dec add nop and add dec push push mov int3 movl add add leave add cmp add xor mov movl mov push mov add mov sub mov xor add clc add push mov lea add call add movl out adc jae add push push call inc inc cld add movl call push aam call add pop push xor aam sub push mov push push loopne push push adc push lea inc hlt mov mov jne movl dec add xor cmp je add mov add dec adc adc and hlt inc add xchg pusha inc xor mov jp xchg xor rol inc add mov xor inc xor push add sub push aas arpl sub movl mov and pop pop decl repz push push mov push add (bad) xor lea nop add adc add jne sub sar je and cmp pop jne adc lret inc inc and icebp jb ficomp cmp nop sbb orl add cmp fildl mov movl adc mov and mov add add cmp or test xchg mov mov add leave mov mov mov xor or pop add xor fmuls add inc or mov add mov adc shrb add lock mov add add add dec push call add or add add add add inc lock sbb push push sub dec add push add push call jb xor add js add repz mov mov add add push call dec lock add add add pop add sub push add add push mov or pop or leave add add add mov mov mov mov add add sbb lea dec in push lea mov in call je add add push movl adc aad add add add mov call mov add repz movl adc inc or (bad) xor pop mov add mov inc jmp xor (bad) mov mov mov sbb jecxz pop pop mov add or lea push and jns roll add dec loopne push adc pop add fimul inc push mov icebp call testb add call adc mov pop pop ret add sbb add xor jb add repz push inc cs or aam sbb call add push push call movl hlt sbb iret add add imul and mov arpl sbb in nop add rorl les push sbb hlt jb mov nop stc mov add add mov mov call rolb add add subb test lods add cmp je lea push mov or ljmp and add cmp (bad) xchg add mov mov xor inc and sbb lock sub lea sti pushf and mov adc addl pushl fisttpl add movl jno (bad) incl cld movb lea fs inc movl adc add mov call add mov call (bad) cmp jne lea inc add ja call lret add or cmpl jb mov nop push call mov cmp fildl mov or cmp je and jne pop add inc cmp jbe add sub into call push cmp jne movl mov mov push or (bad) ja sub add (bad) mov jo mull idivl adc inc and add call inc test dec add jae add xchg jl je add add add mov jle or imul int3 and movl or call les adc add add xor mov mov test sub ja add mov out sbb add or je add cmp push addl and adc jae lea push add call add add and mov pop sbb lret je mov inc mov push call sbb push rorl into or add add push call add inc adc aaa cmpb sub nop add push push add push add adc adc add pop mov mov add add add (bad) xor (bad) or add push or mov add add add mov or (bad) int test add push mov mov add call mov dec add inc xor mov or (bad) mov (bad) and outsb movl add movb lea lea fs mov inc test adc sub add pop add (bad) decl nop aam lcall movsl ret int3 add add sub push (bad) push setl push lea pop xchg mov movl adc inc cld add add xchg test je xchg adc call fadd inc or sub or xchg add add add jne rol cld add add add inc add add movl inc movl adc push or cmpl je mov inc or dec add mov addl push call (bad) nop adc pop add add or cmpb or movl adc or adc pop inc or adc cmp inc or fsubrp pop add add adc movl xor add sbb jne push call cmp je mov add add add mov add je mov or mov add emms call decl inc sub pop add ret lea inc lock lea mov lock je add adc adc inc in mov add call adc add push xor push cmp inc je lea add cmp je mov or inc or mov push cmp add adc xor mov and pop and or dec jne add jbe mov add dec add lea je or or cmp ja mov add or arpl pop mov loopne pop or add adc push add or push int3 int3 add mov mov or add les add mov cmp jae add loopne nop call add clc or pop mov add jbe mov cmp lret mov mov add jae lea mov jne movl adc je cmp xchg repz add add push call sti mov test or test add mov mov or add add lea adc sub add mov clc sar add push push add inc push mov call add lock add cmp hlt ja sar mov add rolb rclb push mov mov call adc add add sub add ss xor mov rep add hlt test add jge jmp lea mov cli add or call inc add add sub add mov clc add xchg push push push call add lea test incl push iret mov xor repz test je xchg mov or pop add lea adcb in inc lock mov int3 add push push inc in push push push incl add scas add cmp nop add mov add push cmp hlt mov push lea mov icebp push call inc xor movl adc push push push call add sbb mov add add push add add fs or add test je mov mov into call add or hlt xor or push mov testb or push mov movl adc call add (bad) pop pop add sub movl adc jne and sbb inc add push push adc push push add adc mov movl add push ljmp cmp je mov add or push push add call push dec and add roll inc add add dec add add and call inc inc adc inc insl lea adc mov push call adc adc adc dec add cmpb and or xor or je add es call dec inc add and nop mov or xor adc je mov cmp jne cltd xor push mov or xchg (bad) or (bad) je add add or or push add inc sbb mov movb sbb lea lea int3 push jae hlt xchg cmp je imul add mov lock adc dec or adc call push lock ss call sub add mov pop inc add push add pop mov movl adc scas dec or push or mov jmp add inc cld add mov push push lea add adc add movb add push call inc or testb je adc mov adc push push add dec add add incl add mov add and add pop push or jle or xor movl mov mov in add or mov or lock call inc mov push call test add xor add xor add or add movl push je nop mov push call add mov cmp jne out add mov push call add or add mov mov mov mov push mov adc push je and add add add ret adc push push call lea add mov orl inc add sbb pop sbb jecxz rcrb add ret dec push lret movsb add faddl pop call je add adc inc or sub add xlat add pop pop xchg add mov (bad) fildl enter or dec mov adcb jge or jne add mov call add sbb add add push call ret sub or add sub and inc add xor mov add out mov movzwl mov icebp mov dec cmp lea mov inc mov call or dec inc jne and mov mov mov mov mov add leave jne icebp mov push push push push push add orb and call clc add push lea dec mov push call mov les add push movl movl jge add adc test inc jne push call add add int mov ret add dec test mov mov mov js push mov inc sub add mov sbb add dec cld pop pop xor mov pop call sub push orl and push sub add adc push and push add mov or decl add inc push mov call add (bad) je mov add add add and mov sbb sbb test sub inc pop mov call add dec rorb dec sub and inc xor fadds add call add cld add inc sbb jle call push jl inc inc add inc add mov add inc or push mov mov dec inc mov lea adc hlt inc adc add jns data16 add mov inc or add mov mov mov push mov lea data16 adc cmc sub ret sar push add (bad) decl ss add dec loopne mov call (bad) loopne cmp sub cmp add lock adc sbb inc or ds push in add dec aam jge call or inc aam movl add add lea jb mov inc mov push push add xor add push and call inc add pop add push push push enter add mov movb or push call sub ret add or and in sub push push mov call mov call add fisttpl cltd add add push lea adc adc (bad) je aas mov cmp or test adc test and add inc add add movl add and jmp add cmp je adc out std push lock cmp jne add mov and mov add cmp add add mov add and or lock inc push mov mov sbb dec push mov js cmpb clc push jbe or add mov mov pop push call js sub pop add int3 add cmpl push push add mov mov cmp je mov add mov inc or push add mov dec adc (bad) (bad) (bad) aas add mov and push inc mov add mov cmp add mov mov mov or pop mov movl cmp je lea dec add mov cmp jne addl add xchg inc sbb or enter pop adc xor cmp repz lea add jne mov push nop mov mov add xchg dec add add dec and or adc dec call add add test je mov mov adc call mov add add lret cmp jne dec mov or sbb add and je mov mov add mov cmp add out cmp sub rolb inc fmull inc fmuls add mov mov mov inc hlt mov add inc add and lea movl adc or jmp add sbb push fcoms inc inc in add adc add or rorb add or or mov lods (bad) push inc push add mov add add inc adc dec jae jne ljmp add add add add jae mov inc or add enter add je add or add jb lea jmp push add lea mov cmp jae je mov mov pop adc iret pusha add test clc push push call add push push mov addl clc push push mov cmp add cmp or mov call or or add je dec cmp pop add or add and sbb push push mov add orb xor sbb clc ja jne pop xor rcrb add push inc push push call add mov test jne add or push push push add add pop pop pop ret add or ss int3 sub add push mov icebp mov mov lea inc or add mov mov push xchg out add inc mov add add mov add arpl sub push push subb mov add push sub mov adc lds dec push push push push lcall mov movl adc add mov lea push add xor testb mov mov call nop pop test pop lods add mov movl add inc cmp call add inc mov sub push loopne rorb mov mov add leave jne add inc fmull add add add jge call add ret add bound jno (bad) xor add cmp mov push cmp add push sub adcb inc loopne push mov orb popa cmp mov add adcl dec enter add out add (bad) je push and pop add add jne mov sub inc or mov hlt mov rorb lock call in pop ret adc sbb scas and mov adc movl add adc jle movl mov or ret adc mov jle mov sub ret xor adcb sub cmpb add data16 addb and mov inc and add icebp call add rcrb dec and xor call add call je mov add rolb add add push add add add add add add push lea or movl add or adc and xor rolb mov or xor mov call or push add cmp add cmp xor int3 inc add push push orl or xchg cmpl or test mov push cmp je mov add adc dec add cmp inc or cmpb sbb or sub mulb jmp mov or adc push push or add inc or je lock cmp jne jmp or mov or add and add add adc or pop add ret movl lea add sahf add jo cli (bad) pushl add cmc add push adcb iret call add test je mov and or or cmp loopne dec or add mov add adc call jmp movzwl push add add call mov add jno loopne aad pop pop cs add sub add mov add push push mov lea add clc mov or into add test cmp inc je hlt adc push adc mov call add add mov adc dec and push push call inc inc or and push lea add mov lahf adc lahf add pop pop out rcrb and add sti int3 add add add cmpb add js add call add adc inc adc add add and jmp mov (bad) mov jmp add js add ret jne cmpb add mov or cmp jne add or push add mov jmp mov or sbb add add jmp adc mov jne and add je add mov mov mov clc cmp or je mov (bad) mov jmp mov fs clc add adc mov mov mov cmp inc or mov jmp or mov mov or or add dec add pop add inc add push mov push cmp add add add sbb push sbb pop mov add cmp or test add dec add and je pop add or add jl jns add add into movb add jns add dec or dec add add dec jne or je or add mov mov push adc inc add cmpsl sbb mov add sbb push call js xchg adc adc data16 pop mov adc push adc or pop add add jbe mov push push adc lret xchg or add jnp or call mov adc push call aad dec inc or pop pop test je dec add mov add or insl add in or push mov mov mov add add push movzwl lea movsb and add cmp add add mov mov or je pop mov add je data16 or or lea mov mov pop jo in ret add add sbb int3 add add mov sbb pop adc add mov push or add add push add mov cmp jne or pop mov add add add or cmp or or insb add add add adc add pusha les and or adc adc adc pop adc and or xor je or add add mov mov cmp or cmp jne call add mov add push pop add ss cmp je mov jne add addb add sbb lea add je mov jmp pop mov or adc dec and jne mov add adc inc or add push push call incl test dec or mov ret mov inc mov or mov jns xchg adc add or je mov ret mov dec push and mov cmp test orl adc or out add add push mov cmpb add repz mov iret call ss call add add add mov add add add or inc or add add dec int3 int3 push mov push adcb jge cmpb or mov add or or call ss call (bad) je add push and add inc sub fcoml mov jp push das mov mov add mov movzwl or cmp mov (bad) xchg roll test je mov jmp mov add je jecxz fisttp cmp cmp add push push lea push mov iret mov call or pop mov movb mov pop or call sbbl data16 cmp add mov push lea or adc aas adc inc push (bad) and call pop xor push add add push adc mov or adc inc adc je add loopne adc arpl add inc add adc dec add push add rorb add add dec add cmp add jmp cmp je add or dec adc adc or sbb add add push add iret cmp sbb test push add jb cmp jne jbe cmp jne sbb inc sbb movb add mov enter add jmp dec or mov add xor xor inc sbb (bad) add jno mov mov jae cmp jne mov push add push add cmp jne add push jmp mov enter add add pop sbb add adc mov mov mov add add jle mov cmp add mov add lret dec add jp adc mov mov aaa add scas add mov sub and pop cmp mov or mov dec or int3 or add or or ds roll add add add adc nop test (bad) (bad) lcall inc add add mov mov movb sbb pop pop ret adc sbb add or mov dec or or or mov pop jne nop mov rcll or cmc mov rcll mov cmp add add or hlt mov or add inc add sbb push add push call add rolb je xor add add or add cmp je mov add sbb push sbb add pop lock cld call je add adc inc lock add cli rolb add adc jo in mov xchg mov adc lds push mov icebp call add inc xor jmp lea mov rolb cmp jne data16 add add mov add adc mov inc cmp jne mov pop pop mov bound mov mov pop ret push xor rorb push add mov mov inc mov lea add push nop inc inc push add jge mov jge call lock (bad) je mov push sbb adc push rolb rcrb pop or xchg adc shlb add mov mov xchg cltd add dec loopne shlb ret or lea call cmp jne push lea lea xor adc test mov inc add lea call push fcoms add adc out add xor call add and push mov push push adc pop add push push push adc hlt sbb sbb rorb jno mov inc mov add in movl mov and add enter fsubs fiadd fdivs rorb jne pop cmp je or add sub jne rolb xorl add inc or add inc or push fcoml add aam push add rorl inc cld add cmp je mov cmp (bad) je push call add fwait xor mov mov add dec or mov mov mov or or add movb mov mov call add call add cmp add add adc inc push mov mov fs inc add push or mov add mov mov mov cli add pop pop add ret push icebp or or jo adc and mov mov add lock inc call in and lret or shl add enter add lea movzwl add add cmp jae mov add (bad) ja mov mov or cli sar cmp jne cmp ret cmp jg xchg add stc cmp jbe mov rcl ljmp add fnstenv xor jmp add lret add es decl add test je push mov mov jmp dec add push cmp xor shrl adc add data16 inc add inc cmp jb add cmp push push call dec int3 pop jo adc push push push mov push repz push mov lock adc dec add add push add push call movl add add call movl inc or add add in (bad) adc sbb inc pop call sub inc or int3 add mov add and loop push int3 int3 adc sub xor adc adc xor sub push add add add or adc cs lock incl insb call add mov sbbb jne pop ret add add or or adc sub cmp xor inc pop mov inc add cmpl jne add sarb or xchg mov ret or add adcb and inc call sub je xor add mov pop add add mov xor add dec adc js mov js mov mov add cmp js mov jmp adc (bad) mov adc pushw lahf daa hlt pop add or jne push jbe lea add (bad) decl push push push adc mov incl add mov add inc sub mov add call xor sub or or in jno loopne sub inc add push sbb add out adc push push and add add jne lea fs xor cmp or test (bad) pop or test jne mov sti inc mov and nop (bad) neg or insl and lods add dec adc lret cmpl or mov mov and stc lea add jae cmp jne mov or lret neg test jne adc lea push push iret add pop add sbb inc cmpsl adc add mov incl inc add test je and mov add cli leave mov mov add or pop orb add add push hlt mov add xor add clc add cmp je or adc sarb add mov xor add shrb push add aad (bad) incl ret xor inc xor mov jmp push call add mov push mov sbb add inc or rorb pop add stos add inc or mov movl add cmp jg adc je mov mov add call cmova add fisttp push push call addl inc movl jle movl add add adc and inc cmp add call sbb lret (bad) test mov push add rorb add add adc adc cmp push call rorb add adc je add aas rolb aas add inc mov mov addl push lea call add inc cmp and inc or or dec adc add leave je decl add pop pop mov lock call in pop ret int3 or push lock push mov push aas rolb mov cmpl je push or push or lock movl je cmp or lock xor inc or push pop add movl dec adc inc cwtl push mov int3 add call inc or add push and push add add adc lock add or inc sbb add sbb mov adc adc and adc push mov push mov call incl ret or nop mov add rolb and push icebp mov add push jo add xor inc mov out hlt loopne add or cmp jle add or lcall add nop cmp je add push adc aas mov xor push or push adc xor add mov or add dec mov add leave movl mov mov jno repnz mov adc rolb adc push inc repz pop lock sub push add add adc or rorb test lea call or xor jmp mov xor or add (bad) ja sub mov add mov cmp je push (bad) mov je mov adcl rolb push mov mov sub adc mov mov jne jae push dec call test push lea inc cmp call push call pop mov jb adc mov mov adc mov sbb add lea in (bad) pusha inc cld add and add mov push call test push add add push add jmp add add jle add jne cmpl jne pop mov test je sbb pushf add add movl add push in (bad) add mov add enter pop scas pop pop add push mov call notb add mov pop mov mov add xor lds lret or jl add add jne add call or add add cli mov and dec daa adc nop add sub in adc add push ds insb in add inc and insb add fisttpl shlb or mov mov mov sub add movl add pop pop mov mov pop mov add lea mov mov call cmp je add leave mov xor mov add jns add or pop adcb push adc nop add mov xchg add inc add pop xor mov xor lea insb push call cmp jne inc cmp je mov pop mov push call pop insb mov cmp je push mov push push push call add adc movl movl mov add dec inc call mov je add lea push add inc call call add stos or add add add rcrb orl add add jmp int3 add add popa jle mov sbb dec inc hlt inc xor mov enter add mov test je and call cmpsl popa add lea push add psraw push jae movl push andps pop lock sbb jno sbb addb (bad) je mov push add dec add mov add call add or call mov lock push mov adcb dec in call add pop adc push lock adc enter mov pop or add rorb dec or inc in orl lea loop add jmp mov adc rolb insl add add and mov add je mov mov incl add add lea add movsb add and pop lea je sbb add jne add inc call pop add add add adc inc add add clc movl mov fmull adc movl cld or inc adc (bad) lea push add rolb pop ficoml dec bound pushf add test je jmp pop pop pop mov pop sbb push bswap add add mov lea push add sbb push add add add jne push push push and or adc call mov lea inc push xor mov or push add jbe inc lock mov jno add or xor jmp mov add or add add sub mov mov mov add sub xchg nop add add add cmp or or add or inc cld add pop pop sbb int3 add addl adc cmp push sub push push mov adc lds inc dec hlt mov or and add mov mov lea add add add or push or mov mov inc or (bad) push mov jmp rol inc rcrb aam inc inc fadds movl inc faddl push add rolb add or add mov xor mov add dec in push lock inc cld call or add arpl int in and orl adc jge add and (bad) incl mov mov push mov rcrb sub xor add jle push hlt pusha xor push je inc adc dec add push call xor or movl movl je or or or pop mov push mov add addb jmp int3 int3 or jo or loop insl add sbb adc inc or roll iret add addr16 add xor cltd add add add cmpl je dec or inc add inc mov push je or add push shlb add push mov fmuls or add push test jne addl add inc or add sbb add mov add jnp mov push mov shr cmp add add cmp add adc adc sub subb dec add add add add add add mov mov inc adc dec add add lea push lea cmp out add je lock lea push movl add call add adc mov add fstpt ret je lea add add or dec mov adc mov cmp adc push mov cmp sti jbe or add mov or ja or in sbb aas push call mov mov pop sub mov mov movl mov sub or addl sbb dec or (bad) rol clc add add cmp jae push ret add mov add call pop mov jmp add jbe mov cmp ja mov clc mov add or add shr add mov lock cmp jbe inc cmp xchg add lea test push add mov mov and test add jb rolb lea mov adc sub and rol add push cld mov lea push push call push clc or inc hlt add add cmp cli ja sar mov hlt mov mov add add rclb push mov test push add rolb push hlt add add testl mov add stos mov test je dec mov mov jmp or mov sar add or call inc add add or add add inc push push push call dec add add lea test (bad) rep add aas or rcll dec cld add mov mov pop ret push pop add lock add sub push (bad) and in sub test add pop lea icebp movl or mov push push add sub add xor mov inc and push push mov incl adc mov add adc cmp jbe mov add roll add jbe mov jb add add adc incl adc lea or lea push incl inc adc mov xor and dec adc or loope addl push push add (bad) sldt add clc mov and fimull mov sbb pop xor int3 call add add add leave call dec add mov mov call add push or adc cmp mov out xor or add adc add incl adc adcl or lds nop inc hlt mov add push lods jecxz adc inc xor or dec add test insl adc add rorb add add add mov mov fs or add add adc add add nop add mov push test and mov add jge inc mov push call add pop (bad) pop adc cmp jne cmp mov add je pop sbb popl add or sub adc mov push add testb pop int3 xor decl add and mov (bad) mov rolb mov mov mov push movb mov add leave mov mov add in push add mov add data16 xlat jne sub roll stc push lea call decl add adc or cmpl or mov push mov add add mov xor call or push mov or add inc add or mov inc add (bad) testb add inc sbb movl mov cmp insl mov nop add ja and movsb pop adc test cltd add aad add ljmp jb mov push addb popf or neg sbb inc pop push lahf add sub push pop dec cmp add jmp adc inc add sbb aam fadds cmp or sbb or xchg or adc add jecxz add add add add add add push cmp adc adc push or xchg add add and add add add mov pop call push aad or and adc jo inc push ret cmpsl add sbb or enter and adcl push sbb mov orb xor pop add and data16 or dec test jne add sar cmp (bad) jb cmpl lea inc add push call mov mov add jne call lea mov adc loopne add incl or pop or push xchg add add verw lea mov adc xchg jmp fisttp pop pop push test xchg add in add loopne jp loopne add add loope fcomi mov movl adc addl inc push mov jle dec or add les (bad) rol inc dec add mov mov cmp je inc mov call inc adc push call pop and mov mov mov cld push test outsl dec add call adc mov xor data16 test add adc fsub pop sbb lock pop inc je or xor dec mov pop pop and adc add push add mov call dec jle decl test in add mov lea add dec xor call incl sahf xor add mov imul add cli add ret pop add ret mov mov jge xor mov call add xor xor fcmovnb jmp pop add je lea mov and xor and cmpl add push inc mov call (bad) test jl adc adc add and mov xor add mov cmp jb or and lret dec add mov sub mov xor add add enter pop xor and xor out (bad) rorb and adc int3 int3 add in push or cltd sbb in mov push push les add add push lea mov stc mov and mov mov or test xor fistl add add leave push or add inc and add jbe and mov and inc je ljmp add les mov iret mov call addl and or jae mov lea inc push push call clc add sbb lcall lea mov fs rclb add adc cmp add mov cmp push add add addl add jmp add (bad) cmp pop je inc rolb inc nop test mov movsb inc movl add rolb dec mov sbb mov jmp movb lea lea mov add add ret add sbb add sti mov mov mov add push mov inc and mov add adc sbb cmp mov adc push pusha call xor mov or jb add call push sbb outsl add add lods mov or add xor lea insb push push call add test jbe inc adc jno add adc lret push mov sbb mov ret push push call adc (bad) or add or push call mov push mov push cmp sub loop add xor int3 call inc es pop push mov mov lods mov mov in sub cld inc adc inc lock push push push mov inc adc xor fistl lea jae movl mov dec adc push add mov mov mov push and push sub push inc mov (bad) or fadds sub inc cld add mov lds pop add mov lea mov in jge mov orl add rcl stc add dec aam (bad) jae adc lea add (bad) incl or jge add jb mov push call add add adc add add mov push cs rolb sbb mov xor call add hlt ret or bound and or adc and icebp inc mov push call and movl add divb jae add or adc inc adc pop add jmp mov jne add cmp add mov mov mov or mov and dec sbb lea push xor and adc ret mov mov push mov add rolb movsl mov mov xor sbb rcrb add xor int3 adc add rclb cmp add push and mov add adc popf movl mov mov mov movl leave add roll clc push mov mov call decl movl sbb cmp sbb jae jo ljmp test push xor mov sbb testl add lea add inc sbb cli xor incl add ret add add add push call add leave inc add add inc sbb lds sbb push cmp call mov and pop or add adc add mov add mov mov and cmp movl pop pmuludq pop or ret or adc (bad) sbb push cmp mov mov dec add icebp jae mov inc cmp ja sub imul add cli add repnz add repnz jne mov push mov push xor xor rorb je mov add movsb push or data16 add sbb xor add mov mov add sub inc add dec xor pop adc outsb add pusha xor add add cmp adc pop call sbb add mov mov add and inc add mov mov mov dec sub push xor inc add and sbb mov push push mov cmp xlat or ljmp dec in add or add add call or ret pop add ret jbe mov rcl ljmp add clc jae xor jmp add sbb jae mov push call pop ret or nop rcrb mov xchg mov add incl adc xor or push mov dec imul add add add loopne mov call cmp push add mov mov mov push push push push mov call add sbb mov cmp xlat sub or or fiaddl shr add add add shr add inc mov push call add mov imul dec add imul add add add add push add pop push mov add mov or (bad) or push push pusha call or add cmp je cmpl or mov push call add push add xor divl adc add add add in adc rolb or stc add leave adc call (bad) jne sub dec lock out add add pop mov add push add (bad) rolb sub add dec add adc dec adc mov or mov mov sub (bad) and ret add push mov dec cld cmp jle mov test jle push push lea push or testb mov cltd sub ret mov or add mov clc or jmp stos sub mov arpl ror shr add add add dec lock mov add push push call mov jmp mov dec cld mov push push push add dec (bad) (bad) decl pop into sbb pop add test (bad) pop add cmp jle add repz push push call (bad) or pop add add or loope jmp (bad) call add ja les push mov mov call add or add ljmp push cltd add mov sub and push mov movsl add add mov adc mov adc mov add imul adcb lea push add add pop or jne in mov cmp jae add in xor cld xor mov fcoml inc adc sub movl or data16 (bad) decl inc sbb dec xor mov mov mov and inc cmp inc sub dec sub push inc or leave mov and rorb dec rcrl pop lea push and push call dec cld add mov add and dec add mov mov mov push sub inc adc outsl add call add push mov or add adc scas inc add mov call add mov mov mov and push adc add dec and add mov mov add adc add loopne push add sbb add cmp inc and jne sub xor jmp cmp mov fwait (bad) (bad) incl jbe inc adcb inc lock and mov adc (bad) or mov sbb enter add dec and leave push sub add inc sub leave dec xor add add les mov mov iret or push or pop call inc sbb les or and les cmc or sub les add add enter rolb xor pop add call lods dec sbb aad and or and (bad) sub (bad) sub (bad) add adc roll movl add cmp scas jne add mov sarb adc (bad) xchg add or push pop pop inc jne jmp add adc andl sbb jle or ss add push sti sbb xorl add std cmp push lret add dec or push or inc aad sub add sub or add fcoml insl mov pop add add pop testl (bad) sbb add scas xorb inc lock or or add pop call mov add inc or jae shr sub loopne cwtl add push aas mov lea mov dec add cld add mov loopne mov pop psubsb add add mov mov add or and mov test mov push ret pusha inc adc and pcmpgtb fmull add push adc add pop daa adc es add dec nop and push or rorl pop test push add (bad) mov inc mov xor adc add jae dec addl add xor jne in call pop call subl sub xor or (bad) incl push cmp jne add add or (bad) or cmp xor ret mov add or loopne fmuls sbb jmp inc orl add orl cmp (bad) je mov mov call repz sub add adc pop jmp mov add add xor inc jmp add mov mov mov add dec hlt mov pop pop adc push or ret int3 adc les or push and and adc add subl or adc lods cmp mov push jno lock xor mov jge (bad) cld cmp je add inc cld add sti je adc rol or mov xor jg arpl into cmpl pop cld mov adcl xor test sarl and je lea or add add cmp jne xorb push push call push (bad) pop rolb rolb ret sub add sub mov inc add ljmp add pop add cmp jle jo cltd and add add clc add mov mov imul imul xor lea lea push push push push mov call add inc hlt fildl or and (bad) push call sub (bad) mov push push push sub push add test and sub ds add pop pop pop add add push push push call adc pop or ljmp clc mov addb inc lock add mov sub mov mov enter sbb mov inc mov fcom add mov test jle mov imul lea je and rolb push lea inc mov lea dec movl inc int3 add add push popa add decl mov dec add push fmuls inc fmull add mov mov mov inc call push mov mov push mov mov push push push push add or adc add adc sysret std cmpl or mov push dec call les xchg popl jne sbb mov call add adc mov lock mov mov sub add out clc add add into call pop out xor and add out leave add jg add pop ret add add add jo and in add outsl or inc lods lea add mov test lea mov mov push mov mov mov mov or mov call add mov lea mov add pop and or pop xor add dec sub mov mov movsb push inc or (bad) and adc push add pusha mov pop call sbb inc add add or or add mov dec subb add mov fwait add test adc inc les add add push add popa add push fmuls inc fmull and shll add push sub mov in inc sub dec in mov xor dec add push lods addl push mov test inc mov and add add mov call hlt dec fmuls inc loopne dec sbb dec add mov mov mov inc and inc in push push push lock mov mov jmp add xor leave mov sub lea inc loopne xor cmovs mov add cld add add add push or or add cld add pop add push add sub call dec fmuls mov and inc and lods dec sub adc sub lods inc adc mov imul add movsb add add dec cld mov mov sbb adc xchg add mov mov or fimull mov mov xor xor movl (bad) call sbb and dec push int dec sub inc xor inc or add call dec dec mov js bound mov inc mov add xor stc push sahf test (bad) ljmp daa pop pop mov pop add mov inc pop ret pop add in add call push and rolb add incb gs test rclb mov push add xchg push add and les add mov mov and mov inc push sub add mov add add jne cld push xlat in add mov xor fimull call dec push sbb add dec adc mov mov push sub add dec xor ficom (bad) add adc mov lea inc add lock push adc in xor pop call cmp inc inc cld add mov add das add xor and push mov mov or cmc or push or inc add les mov adc call out insl hlt arpl add or add adc sub add pop add push push or or dec or push or inc pop or dec add stc or je jnp pusha push adc push adcl add push es pop mov pop inc int3 add push pusha mov add pop mov push push lea hlt mov rclb mov add adc inc rolb add movl call dec sbb mov mov mov sub dec sub sub mov mov mov das adcb inc in push add add cmp xchg add sbb mov add xchg dec sub add mov add pop add push fadds mov mov mov sbb push in inc and dec and dec in pop add add jb sub add jb mov push and sbb add mov dec mov pcmpeqw push je add jo add jo or pop adc mov add and ret jge dec adc imul or lea add sbb mov nop int3 movl add addl aaa addb inc sbb dec or inc adc add mov mov or xor mov add in mov adc xchg inc add cmpsl xchg sbb les add jge mov add xor repz inc add push add add pop add sbb adc in mov add and sbb cmp jne add leave xor mov imul lea int3 add cmp or add jbe push dec add add lret mov orb push add push push push call les outsb (bad) push or sub push mov push lds fiadd lods lea cltd sub ret sar mov inc cmp jge adc mov add rorb mov pop add add dec sbb mov mov enter mov and enter inc push sub enter add or push sbb inc cld add add push jne mov add push repz orl push add inc add add push or pop add jne add add or dec add sti add push or xor mov push push add (bad) mov adc int3 and or push adc insl add inc mov add push and icebp xor mov push mov inc mov (bad) int3 add lea mov pop inc int3 add inc mov call add inc and push fmuls faddl mov mov mov xor call add enter and inc add call push sbb mov cmp mov ds and mov mov mov sub mov add mov mov add lret lea mov mov dec imul sar mov add push add call add add pop add or add xchg jo adc add sub sbb call and stc add fdivs lea add add xor add out xor mov mov cld push jp mov push and and mov mov jns or inc add adc cmp mov pop sub sbb adc rcll and nop and movl add decl sbb push inc sbb jge (bad) je or mov or (bad) push or mov mov or movl lods sub lea or pop ret add and (bad) es add shlb adc testb outsl mov push lea call rolb pop dec mov add jns mov sub (bad) xor sar push movzwl push je mov lea add push jbe inc addl add (bad) jb push sbb sub ret push push call add cld and or data16 pop mov push adc add mov mov add pop or sbb int3 add jbe sbb push cmp movl adc add movl movl add add add mov lea call add or mov or outsb or sub mov sub sub nop cmpw add push jne mov inc add push or rcl inc cli je movzwl add push mov call pop pop add add imul add sbb sub cmp jbe and push cmp add adc xor pop mov mov or add or add movzwl lahf sbb adcb add sbb add add add push push inc cmpw pop mov inc test stos call add sbb lods add adc push add mov mov mov into call push add add add adc sub aam adc (bad) or add and mov bound insb add push add mov mov cmp (bad) test add dec add add roll mov cld jne mov cmp or test add shrl roll clc lea push push push call lcall pop add (bad) pop pop add add xlat sar cmp push cld ja sub sar addb push push push call mov sub mov addl add inc pop mov sbb dec or iret sar cmp dec cld ja lea mov xlat add add push push mov js call xchg in add push or and adc mov pop sbb xor insb add add jnp sub cmp (bad) call adc pop add add sub sar lea pusha push push push call nop add (bad) and and int3 or ret pop and add add inc outsb add fs push stos or jbe lock or mov mov mov lock lea ja movl inc movl add add cmpl je cmpl add cmpl and mov add jae or (bad) push jmp lock push adc inc pop sbb pop sbb add je push call ljmp add sbb mov mov sub adc push mov cmpl add cmp jnp add je mov mov or pop or mov test rorb cmp or push push push call or movl inc adc add push xchg loopne add ljmp push call das add (bad) mov mov push sub or mov add push adc adc adc in sbb dec mov lea jmp lea add adc add push push lea push call push mov sbb jne (bad) or shlb test jne mov fmuls and lea add dec or push push lea mov push call or mov call mov add push or inc add push lea dec add (bad) xor cmp add xchg rcrl rorl call or pop ret add pop xor xor pop call add push and sbb popf add xor add je movl add sbb pop or pop sbb mov movl add decl incl incl and ret add sti je mov mov subb iret call pop add push cmpsl add add sbb lock push add mov pop and jne cmp add lea jae mov add call incl or add cmpl or mov push or fldcw or inc and add add inc and add mov dec lock jae sub notb xor mov add lea cltd icebp mov (bad) sbb xor or add mov inc test je mov add pushl rol inc sub add sbb cmp add les inc sbb adc push movl leave add dec add push mov mov pop and add lods or xor or sub add pop or je push movsb call (bad) xor add mov in inc or shrb cmp jge mov insb test add add push or add call mov add xchg add push push sbb hlt or movsb loopne add or or bound or leave push data16 push or jmp xor data16 into call decl call add call push loopne sub adc xchg xor fstpt test loop (bad) decl push popf and add mov mov faddl push mov call add add or jae add mov add and (bad) lea mov popf and push mov movsb gs call push push pusha or lea add call add add and jb mov add gs or add lea push mov call add add add pop push movl xor push push test xor jnp mov add add orl xor cmc push xor hlt xor lea push cmp movl adc lea mov call mov notl cmp mov and add mov call push test popf add push add add add call add lea mov pop push lea sub lea verr add add movl sub in mov add add xor mov pop add add or mov in or or and add (bad) cmpsb mov add add push call add mov dec mov mov inc mov call mov adc test push lea adc lea push or push or add or or lock or call jge leave movl movl push andl push xchg or add xchg xor push call test mov pop pop add stos sbb dec add inc push mov mov push in sbb mov push add lods add inc xor pop ret add int3 int3 add call adc int3 push mov sub add jo jo push mov addb sbb push icebp mov adc push cmp add inc cld add cmp sub lock push call bound rol inc cmp movl data16 inc cld cmpl add dec add call sub inc sbb adc daa xor add push add push in (bad) adc adc mov cs or add sub inc orb je push call mov pop pop ret or cmpsl sbb add add lret push roll mov xor inc mov mul femms (bad) xor dec inc or push call dec add iret cmpl jb add icebp movzwl adc adc add add (bad) jne mov call decl je push call (bad) lock jne add add mov cmp or iret call mov and push xlat add add adc movl adc add xor or or cmpl or add add or mov sub or adc or push push and add mov mov mov dec int3 xor mov lea dec add add hlt xor or inc adc mov push adc mov lea movl adc mov movb add add add rorb inc add add ret (bad) jne sub rorb push call inc (bad) lea mov mov add and adc and sar add movl movl add jge pop xor mov data16 xor push mov add inc (bad) decl lea add test incl or cmpl jl push dec pop jo pusha add inc add aad lahf into or mov add orb or ss lock push mov add xchg or rolb inc inc inc jmp mov xor and addb inc cmp add inc add add dec adc rorb mov inc pop mov mov aas adc je mov mov or add or or inc add push pop mov and push mov add cmp push or or add mov mov push add pop cmp add ja cmp jbe flds jg pop add push inc sbbl or or hlt stos adc adc int3 adc mov mov add rorb je mov mov mov into call mov add mov push call add add mov mov push add rolb jne push lea add add rcrb push mov adc add enter popf lret roll popf add call add add add loopne ljmp jo adc push push push adc add pushf push insb in adc sub inc cmp add mov add mov sub and mov sub sub jle push push inc or mov pop add push movl pop sbb leave mov or push in (bad) add hlt or add pop pop add add inc incl (bad) push inc or je adc les inc mov pop sbb add rolb mov xor push lods mov or add jns sbb add sbb je add mov adc mov call add leave cmp sete pop add roll push mov call incl add add dec and add add call add mov vmaxss add roll add pop add (bad) push fcomps rolb add nop add inc add adc inc push sub bound add add mov mov mov addl adc push add sbb mov add add sarb (bad) pusha je push call cs cmp rolb xor add call test jbe cmpw add movl and rcl call loop jge add mov lea lea add or add jne mov sub add clc lea push mov add cmc addl test add or dec inc ss mov mov add pop hlt pop mov int3 add inc add push push push add xor push mov mov or cld lea movl xor movl adc adc inc cld add or mov call decl cmpsb ret add add mov call add add push inc test jg mov mov loope xchg and xor mov mov push push add test je sub or mov add pusha test jne sbb inc mov (bad) movl add inc or into add (bad) je push mov add test adc sub inc or aad push add pop mov mov adc and mov add call lea add sbb push incb decl add or dec lock rorb adc add adc roll (bad) jne sub add stc cmp jae or add or sbb add cmp jb mov add add call inc or push add push (bad) mov mov pop add sub and add cmpsb movl add or call (bad) jmp xor add jmp add mov addl add add add mov push mov sbb or add mov rclb jmp sub adc add dec hlt mov add pop pop pop adc push or (bad) call add repnz pop add sbb or dec in push mov insb adc xchg inc sbb pop push push add sbb and inc adc push and jge or and adc (bad) rol inc push or add adc push call xor add inc aam mov loop inc in int3 pop jl mov sbb mov lea aam push add add lea xor inc cmp or dec incl jb (bad) push call add sbb mov xor sbb inc add sub in and push push push jge mov pushf add add xor cmp je add or mov pop add dec or or jle add inc or push call movl pop sbb leave mov adc mov xlat ret sub mov push call add add mov push add and or adc jo inc xor adc or or addb add push add add (bad) mov mov pop mov aam pusha or cmp lret add add add ds jne addw add add add aad adc add or ret je sub (bad) xor sar mov mov dec mov or stc orb mov ds mov mov add or pop in jp inc mov ja inc aam mov inc add cld add mov adc mov add (bad) pushl (bad) mov lea jle test je addl sbb jge add aam call add and adc mov incl xor and cmp jb mov or adc sub inc mov add add jo jmp mov dec mov jno jmp mov push mov jb and jae lahf lock push add or add sub add add lds inc hlt mov mov mov addl add movl add and test je mov sub mov and or jb outsb add pop and pop and mov mov test or jmp push or movl xor test adc push test add hlt fs sub mov push mov call testb je push call mov pop pop ret add sub add push push pusha sub fistpll pusha inc add adc call leave xor testb add or dec add or fadds incb lea add lea add adc call les test je sub mov cld xor mov push mov movl add pop push or call decl push sbb push add incl mov add push aam call adc ret xchg jnp sub cmp or sub ds lods lcall or adc push add and cwtl add mov jae orb movsb add add add inc cld add test je test je add mov incl shr add rclb mov add push mov repz (bad) decl testb or sbb jb mov or inc add push mov (bad) xor roll rolb mov sbb lds push lea push mov add mov sub mov xchg imul add add cli add ret pop and ret fiaddl fildll or call lods int3 mov xor rol inc or or mov call add push call add xor repz push cmp je and add mov adc jns or mov mov mov or mov add inc or cmp or or add adc add mov call dec and push call jl adc outsl sbb add add mov mov sub cmp push adc ret adc cld adc adc dec dec mov add dec call mov push add adc movl inc aad movb pop or ret add insl and (bad) sbb push push ds mov dec add stc jae mov inc cmp ja sub or out or xlat roll repnz addb cmp jne add (bad) mov lea sub mov lea addl lock adc rol inc or rorb aaa test das add xor add sub push call addl sbb inc mov pop ret int3 add add lock je and add push or xor adc inc add add mov add sbb divl pop sub add add repz out add rcrl push addl or push adc push jns sub or adc ret add ret jbe mov rcl ljmp add clc jae xor jmp add sbb jae mov push call pop pop pop sub lret test in or xchg and add popa adc aad add and (bad) jae iret pusha call add or mov mov push push rclb in call sbb pop iret mov add pop add add test push call pusha push push call add lea lds inc add rorb or lea mov add mov adc push sub pop add ret inc mov push call add push call repnz sbb popa inc leave and jne test or stc xor fisttpl cld jmp push lea or add movsl add movb cmp je xchg adc push add sbb xor push cmpl jae add add push add mov sub jge add xor call mov xor push push call pop add dec adc push adc push adc mov mov add mov pop cld mov add add push add mov mov enter add dec mov add add adc adc xchg and pusha pmulhuw mov pop push push adc les pusha inc and mov dec add sub lea mov xchg imul add addl push fiadd ret loopne movsl push add add add push add add add add add cmpl or inc and add push jb or inc jmp add pop inc push lea xor in sbb int3 add inc adc add mov mov fs mov push mov adc dec xor inc decl bound and pop and mov and into inc inc popf add adc test add pop add add cmpl or mov push adc clc push push inc or repz rolb rorb and add add add push and lea add adc cmp jne sub sar inc push add or movb call pushl fisttpl jl pusha or mov call pop add leave add adc data16 dec add fistl incl subl and dec ret push jb ja mov mov add lret sub lret pop push adc lret add jmp test and test sbb decl add add mov and repz addl push call rcrb adc jle roll pop cmp jne flds cmp push call lods add pop dec and xor call mov pop push add push ljmp jns pop push sbb adcb hlt mov mov mov movl adc inc cld push or add mov jle dec or mov push add sbb add fisttpl add pop inc mov xor mov add jle call incl movmskps in dec or add sub pop cld cmpl dec and push call inc add or adc shlb push addb test add pop add in push mov call testb je push add test mov pop pop ret add pop add add add jecxz adc add lds or add mov inc shr push xor leave movl data16 aam inc add push lea push lea add ja push call add test je push pop call fadds and adc or pop test add dec rolb mov mov call add add rorb call or or adc add add push add insl add incl xchg add incl xor mov aam call mov adc sub or ret adc cmpl addr16 push aam call jae add mov mov add pop add dec lock call add (bad) sbb add add das inc or jne mov cld push xor add sbb add mov mov add xor push addl mov add fsub add rorb add pop or mov andl add fild lret push or sar push call dec movl cmp ret sub or inc mov mov in push inc adc mov dec add add rorl add add sub add jg add roll clc cmp jbe addw pop jne cmpw pop jne add push adc inc dec add ret je inc jo or push call add (bad) xor sar data16 (bad) lea mov sbb and xlat mov lea mov jmp xor inc mov mov push addr16 and push add or nop and add inc aam inc out (bad) decl add ja mov adcl add clc add call pushl (bad) mov lea jle test je andl or imul call add shll jne roll test add jge add xor mov mov xor fildl push add add or or add (bad) incl mov mov sub mov xchg imul add add sub test add push add enter call decl dec push push add call nop or movl add add pop add pop or inc or push pop xor push add add or iret add js jb add adc and in add jns or inc add sbb cmpsb inc add cmp add jmp mov mov mov mov add add fimull and out add rcrl cmp add mov mov lea int jle rorl add shl sub jecxz inc mov add lea lea adc les push incl mov xor or int3 sub inc add ljmp xchg sbb addl and adc lds repz and sub lods mov add lea add mov add cld mov mov mov or push push push push adc mov adc mov adc cmp hlt xchg add mov xor test add call or xor fmuls lea push lea push mov inc mov push sbb call add add add mov add add sbb sub dec add notb call add lea push push lea test mov add ss sbb jae pop je and (bad) jne mov cmp mov add add mov jmp mov or mov sbb in dec hlt jne push xor mov adc or lea push mov andl add xlat add push lea call movb mov push add add add jb inc aam add or mov aam pop add mov mov call hlt add add xor shrb mov add int3 mov enter call push cmpb addb or ret add enter aam push pushf add add adc push pop cmp xchg add inc adcb inc add add pop xor mov sbb add or jne int3 add push popa sub test rclb mov jne call aam call mov add push mov add in add add mov adc push in sbb add xor mov mov adc adc js jl pop add mov add cmp testl push call decl push add paddw incl jg mov mov add mov sub (bad) jmp jge shr add xor test add add adc add and sub xor ret call cmp jb mov or divl cmp je cmpl or mov push call inc movl add mov add cmp repz or push call and mov mov mov pop add add pushf push call test add or cmp add call lar ret push dec call mov jbe addb adc add add pusha dec or push call mov or add pop orb adc sbb ret int3 and push mov in push push add mov push mov adc or mov cld add add or and mov add sbb dec call unpcklps add inc or call xor add add add cmpl movl inc sbb add push call ret and dec pop xor add sbb mov icebp mov cmp icebp jae mov cmp ja dec sub push cmp cmp pop add cmp or mov call decl lea cmc add sub lea add sub je xor rclb inc or mov sub cmp add fild xor add das pop push or call incl fiaddl pop sbb add push push push push mov sub call add or inc adc verr clc add add mov (bad) sbb int3 int3 add push mov adc push mov mov orb fcoms dec add (bad) jbe mov sub fidivrl fdivs push call dec pop (bad) and incl pop adc push push add rolb outsl xor (bad) cmp and add mov add lret incl add adc cmp add push call test je push lea mov call incl add mov cmp jb add por mov or or add movl add push call add or clc jne add or pop push push push call jmp push mov add push add pop mov dec add add adcl mov or jg or adc mov or pop mov pop pop ret add addb pop or jge mov sub sub add call pop clc add and mov add add lea jle push lea push mov mov shr cli add mov cltd sub ret mov or add and or jmp into push leave or sub mov in sbb add lret pop addl or lret cld push add dec in jge mov lock add dec add mov jmp mov hlt push push call push lock add sbb mov add or add add add dec add clc add add fbstp push mov or jge add pop xor cmp and add push push or jle pop add push imul inc add inc or push ljmp mov loopne in cwtl add adc in inc lock push push and inc hlt add decl mov loopne iret mov sbb inc lea mov inc loopne xor push add in mov mov mov pop fsubr leave push add or push call adc jno in sbb cld add rorb and pop add movl pop or add (bad) decl in lea mov cld push xor add add add mov call incl xchg add (bad) call addl cmp xchg in or dec fs add call add addl (bad) push sub add add jae sub sub and or jne cmp or (bad) das add mov cmp inc loopne sbb dec add mov mov psubsb add add or add add add push dec adc adc negl cmp jbe mov or inc addr16 or shrd add or rolb add popa testl jo add and and add rcrb fiaddl mov mov mov in pop add inc add or inc test add and xchg verw test or subps inc add fcoml aad push es xor xchg test and into (bad) call data16 add add add je mov js mov mov mov js mov cmp orb mov and jnp mov sbb mov push add xchg add mov or adc push adc push adc dec adc push adcb adc ret sbb aas inc (bad) sar decl aam xchg dec shl fiadd (bad) decl mov cld push insb rorb repnz add enter add mov inc add in add push or addl inc fimull add cld add push push add sub add and out sbb add je mov mov add xchg mov or jge mov mov inc mov mov add pop add add sbb mov mov push add push cwtl mov add adc push adc push adc dec adc push adc mov jmp mov add sbb call cmp dec add dec out add add add cmp lret je cmp je mov add mov add or nop jns nop inc jns add jns mov nop adc mov mov nop mov add mov mov adc nop jle mov adc nop jle adc push adc or lret and add test cld (bad) decl mov rorb les add jno mov mov and mov jno or mov mov mov add les jge mov mov jp mov add jp adc cmpl or adc jp add imul push add test add popa add mov test test mov add cmp (bad) jle movl mov dec test mov or mov roll add push rorl dec call dec call add sti (bad) decl push mov mov aaa dec movsb rorb add add add in or add test push mov push test push and xchg add fadds nop jnp add mov jo or mov cmp jnp inc add add add mov pop add dec adc push dec dec adc push push dec add push xor mov mov mov or pop pop pop mov dec lock call add push mov in sub push mov push add into mov or add lock add ret sub inc cltd add mov inc sar lea enter add lea or clc add mov push add into add add lea aaa push push mov mov or jns add mov or lea mov push and xlat push call sub (bad) mov push push sub cld push call clc push adcb or inc add sbb add push push add call add adc pop int3 int3 int3 add push push adc xchg push add inc adc sbb lret hlt sub mov inc or (bad) je mov or adc in add pop add add mov mov add or adc push test mov call orb mov and jno mov mov int3 mov cmp in or cmpsb int3 add or sbb mov (bad) mov mov enter shr add add mov roll (bad) xor mov cmp mov mov cmc add add sub lea jmp add sub sbb mov lea add inc call mov dec lret xor or mov add mov inc add add dec in push lea or daa add add xor jmp mov add add mov mov mov inc cld mov add rclb add lea push push push add adc adc push or sub add incl jb mov add adc add test jg inc nop cmpsl xor aaa add push push inc mov mov sub or (bad) sar sbb mov push mov call outsl out sbb or shr add add add pop pop pop push ret add pusha push push nop xor nop or icebp lea pop sbb jne mov add or test add add rolb add call (bad) je add adc add add jae mov orl push call or xor mov adc orb in add mov adc in sbb pop mov mov rorb add xor push or data16 incl and movb mov xor adc add adc add movl sub or lea push les add test je mov dec enter sbb mov ret call ret add inc cmp je jle adc jb mov cmp add xor push les pushl or movl data16 push add dec in lea or call add jmp mov mov push mov mov int call mov mov in jge jmp pop repz add mov cwtl sub sub adc fcoms add loope or sub add loope cmp je addl push call sub movl adc adc inc adc push push push call push mov mov mov add addl mov add orb aas add fidivl add or jnp add push call testb adc adc adc cmp sub lds pop or sub sub adc jne mov orb (bad) sub dec aam call addl adc incl dec hlt mov pop pop pop mov pop add mov pop ret int3 or push lock lock mov adc lds adc sbb cmp lcall lds dec add mov push adc insb call mov roll in push xor (bad) sbb call mov push adc add ret je add call incl xchg in sbb add add call mov add add lock imul pop add add imul push mov call fmull lods inc inc jae inc add mov add add add rcrb add or and imul imul and sbb or add mov and inc addl lea mov jge lea adc xor lea cmc add sub mov push pop adc lea lea in add call xor rolb inc cld mov push push inc push add add es sbb lods test je inc dec mov lea push nop add orl mov sti je push cmpl jb mov pop push call xor prefetcht2 imul pop xorb push add lea push push push or aad add or shr push mov mov mov add mov mov pop dec adc or mov cld or je addb jne jl add add or jne add sub sbb jl xchg in xor cmp add push push call and xchg inc adc add mov add push or push push add inc and orb mov xchg add adc enter dec mov pop or ret mov mov dec adc mov push push and and push add les jnp jno lock or dec or inc lcall fcom sti cmp adc (bad) testl imul adc in or pop scas jne xor rorb mov orb push adc and in pop call inc push cld add das sbb rorb test inc or or lea cmp incb dec or dec sub push mov dec pop addl outsb add lea pusha push push push call loopne add dec adc push adc push adc add inc lcall ret mov or fadds mov add jge lea sub mov add add push roll or fildl adc rorl pop add mov mov push add outsb or add push mov mov mov popa add mov mov (bad) add pop adc mov lods add or and add adc lds cltd add push lea hlt mov mov add jnp lea mov inc mov movl inc in and push aam add push add in add add inc int3 push add iret sub add and xchg add jmp rol cli add add shr add push push add mov or adc or or aaa call xorl int pop add nop mov pop ret add int3 int3 add add icebp cmp je add lea sub add in cmp test bound push call add xor mov push cld lea enter push sbb or adc jmp mov in mov mov mov cld add addr16 cld mov pop cmp jne pop pop cmp or add call adc adc inc or add add je push call fldl aas ret add add inc and add push push mov add mov in push call add add mov xor mov je add add lock jne (bad) or add and mov add mov and rol push xor mov add xor data16 and inc sub add mov cld call les rol or add add add add lock call add jne add add push push call add inc loopne adc push add push mov call pushl fucomi add rorb test dec xor test inc adc mov or add add mov push mov adc add xor mov mov mov pop insb add inc sbb xor pop sbb shlb or mov mov mov sub pop add and inc push push mov add mov add mov addl fldt add call adc test icebp add je sbb in add cmpsb add or je mov mov ds movsl sbb add and sbb mov pop add add inc add add add adc push inc lea call inc sub call add sub or data16 mov jno add adc or or jmp inc adcl jo sbb call add push faddp je sub mov sbb je add inc lea dec add push or add or rol dec add xlat lea add mov inc or mov add add ret jne sub or (bad) sar push call decl or push out sub pop add aad out pop (bad) sbb js call jp xchg push out rorb (bad) pop add enter pop push (bad) and cs dec add add push or scas add or das movl adc inc sbb jmp shlb push add add mov mov nop movl incl add dec or pop dec push and mov push sqrtps sub test or incl sbb mov inc in push movl adcb add or add mov or adc add push push mov iret call mov in mov mov aas push or add sbb rcrb mov add push sbb testb push add in adc je push call icebp add mov pop pop enter add xor and add and adc adc push mov call add and inc adcb les adc push push push adc push lea mov inc add fstpt add mov dec mov mov xor add add add push mov cmp jle mov add add sbb add mov push add sub add add add or add adc add das and rclb test jne add sbb in add add (bad) or add mov and je add cmp add add inc jne mov xor addl add jmp sbb dec add lea mov adc push adc push add (bad) jbe push sub mov add inc and add and xchg push or push add sbb inc and inc push call add cmp mov mov mov adc add add push add push add jne call lea dec or add adc call shr adc mov pop and mov mov or loop push push addb push call add or add or mov adc cmp jne push cmp ja jmp add adc xchg dec or cmp out std incl push adc mov mov aaa add pop pop add jns int3 call add push sbb push (bad) add sbb xor sub mov xchg add adc add xor adc and adc and and push add (bad) adc add std pop and adc add add mov inc add add adc add stos and and add sub add add xor add movb push add and or inc add and or fs or add lock dec or inc or dec or cmp add daa push add pop push push push xor daa pop add insl add and add push lea add sub push add test add add lods add add call inc mov adc push add add call fadds mov add add call and add push or loopne sbb movl and mov add sub dec add (bad) jne lea push sub mov push push mov push incl inc inc inc add add push call adc and push or sbb or in adc test (bad) call jmp mov add mov inc add inc sbb or pop add mov mov sbb out xor bound add or add add pop add mov repz push and add pop dec push push leave add jo add sbb aam push add scas mov call inc xchg and mov add add add pop adc pusha add add add add push adc add add out push mov push add add je push add add cli pop test or add add push adc add aaa je icebp add add sbb add or adc mov add mov or sarl adc pop add inc add ljmp adc add sbb add add add or cmpsl (bad) xor pop add cmpsl add or je add (bad) lea push add jne stc add sub add push or push add or adc add jmp incl or add aaa mov add add je add lea push add add iret mov inc and cmp je add push mov mov dec push add rolb adc add enter lret ja add icebp (bad) (bad) call in or mov adc lds add add pop mov test add (bad) fdiv (bad) call push lea push xor test sbb xor test mov dec and push push push lea test add inc xor jne mov push add add test add or rolb sbb pop mov xor or ret int3 sub add nop push push add mov fidivl adc mov adc dec add mov movl adc fisttpl dec xor lret je or add rorb sub inc add push push call inc mov mov sbb or push add cmp adc movl or call dec push lock (bad) adc xlat in ret add add push push push sub sbb add incl sub (bad) je movl js mov mov add adc js mov mov js mov mov jmp add imul add add (bad) pop ret cmp je or add pop xor pop add sub push push mov call clc mov rolb or inc cld mov lds or adc mov inc adc add add inc add mov push or mov add add add push loopne hlt cmpsl add add test inc mov mov add pop pusha inc add insb or or hlt mov or add inc or add cmp or or mov push push mov in xlat mov mov or js add adcb push mov add add mov mov add push add adc sbb in adc sbb sbb sbb test or in inc and daa add inc and add and ret cmpl andps or or adc add add or add cli add adcl or or and or add or leave test setne lock pop mov add add lock mov call lock adc add add jo mov inc or icebp add decl add and or outsb adc pop lds (bad) adc mov pop or and int3 add add mov lock push inc out add (bad) xor cmp (bad) je movl adc inc sbb add mov mov mov dec sub mov hlt push mov (bad) xor sbb push mov pop sub enter push cld push add call mov dec sub push call incl jle pop mov pop add add (bad) jae rclb or cld add mov xor cmpb je mov add push push push call pop push add test add add or mov mov jb mov or data16 add inc add pop sbb lock in jmp lahf add call icebp pop in or pop add add rclb jge or inc aas add xor sbb rolb push mov mov mov or sar and add add and or stc (bad) or rolb leave mov add pop pop add inc cmp jb add add add ret add sbb sbbl or mov pop sub add hlt mov add sar mov push xor inc call jge clc je mov pop or clc add jbe mov mov adc push lret incl jne inc cld add cmpl adc mov xor sub and jb cmp sbb jne add addl add add add mov inc add cmp test inc add lret cmp jb pop pop or add push pop pop xor adc int3 sub push add push mov add jb lea mov sbb (bad) sub add call call dec or in and push sub dec cmove mov push add push adc push lea test adc mov add add fisttpl and or and add jno mov adc roll js mov inc lea call mov movl add xor jo mov or lret add and add xor inc add mov adc ret and adc add pusha add js sub mov adc add cmp dec jb mov rclb mov sbb add or inc and mov and sub pop or dec or dec add mov pop pop pop pop add inc xor fsubr add and incb fs sbb add push push add push mov lea or fnstcw mov push add adc call cmp je or mov jge add inc mov lea je mov add add pop push add add rorl push mov call add add sbb int3 pop mov adc test add lea or mov test jne add sbb mov mov mov push movzwl add mov (bad) call mov xor leave movb test je sbb push lea push add add push incl push add (bad) cmp jb mov clc push push call adc ja mov add sbb add add or inc imul subb fcoms addb inc add loop nop rcll add enter adc add add xor data16 sbb nop adc xor inc jo push dec incb xchg push ljmp mov adcb mov call dec or pop mov add call mov test or test push add pusha add dec adc daa push lea push mov or lea push push push adc inc or sub mov or add add (bad) je call mov or sbb or out mov pop ret add add or and adc lds add leave add inc subb inc cld mov dec cld push mov add add sub push mov push or push add cmp (bad) jne push call adc pop push call rcrb addl jo mov scas lds inc hlt add lods icebp mov movl adc inc cld add add adc pop adc movl or add and cmp mov je push call (bad) push mov adc add or push push push call xor add cmp je and add or adc movl add mov add dec adc lea push push add roll pop adc fcoml or mov add (bad) pop pop ret mov add into call cmp rolb add add dec add push fs inc add mov mov mov adc mov add xor mov inc or cmp adc add push add xlat mov mov test or cmpl add add leave test setne rorl push mov sbb out add (bad) or push push pushl add or or sub add ret and je push call incl push add in addl or je movl ret xor or rclb mov jge push call dec add and cmp mov add or inc adc lahf add pop add or add mov mov inc add gs ror rolb pop fsubs push pop add push push mov adc leave add popa push sete mov call mov pop pop push mov in add add jne add mov mov add aas inc or mov or rolb push jecxz adc sub inc or shrl inc and add adc inc or adc jne loopne add mov jae add add rclb sub sahf ret add add leave je add adc jle dec or fild pushf jl or and or jp inc (bad) sbb push add inc or dec in push jmp jmp jmp add inc sbbl aas jb push jl cld movl leave movl adc dec or test mov add inc push call decl xchg call mov mov lea add or test jne sub sar add adc cmc std add add add xor add ret add out add lock dec and les and pusha and or gs and pop pop pop mov sbb sbb add or mov push add add add cmp jne call add push push push call xor add in mov add pop mov ret int3 and or jno stc xor cmp add popa mov mov push mov add and in push call add jne lock cmp je or push or rolb add mov mov mov pop or mov xlat add mov mov add and lret je or sub jnp sarb add add adc mov add pop dec pop or or add push push add popf mov cwtl and stos and movl add mov movl mov mov mov add add (bad) mov mov jo cmpl jne add je mov dec or lcall add dec adc push orb push push call and ret mov add adc push movl add and mov add movl or xor mov pop pop ret inc add mov add cmpl add fcoml hlt mov adc lds mov add add add pop add add adc ja mov mov add mov add add add (bad) jbe mov mov inc or into call mov sub fadds add add inc call lea sbb test add add adc test jne call call inc add cmpl add push add rorb mov aas push lea mov call cmp adc add ret add call add xor pop mov add int decb add mov pop ret mov add push sub add mov cmp sub (bad) push add sbb and pop call add cmp ret ja mov test add push adc dec add add push mov push push call jmp mov add add push add inc push call add or ret call add and pop mov add add jmp mov add lea decl add mov sub push mov lea push push inc aas xor aas je or adc push movsb call and orl inc adc jns or fwait adc or insl add call or and sbb adc add add push or add (bad) (bad) incl addl test mov call push cmpsl sbb icebp mov in push testb push scas test sub les scas int3 add add add xor add cmp (bad) je movl adc sbb bound jns add sub dec add mov mov mov jo mov mov add add dec adc add sub clc jmp xor cmp ja jne cmp je sub adc or clc or lea inc adc add mov push push push or insl outsb add or inc and add movl sub call mov pop mov pop pushf add push mov push push adc hlt add push sub add adc lea inc hlt mov mov jge movl fisttpl mov add ret je add pop add pop push call adc adc or dec add pop add movl adc inc cld add cmp je cmp or add adc inc add je push call pop add push in (bad) add cmp push cmp pop add inc add adc movl mov or jmp pop push or mov mov mov cwtl mov add inc xor pop inc add dec clc mov add or ret add push push adc adc test mov sbb push int add fidivl rcrb mov and add into add sarb inc inc jne (bad) or add add jns std lock add or sub add pop sub inc or lea call mov adcb lea push add add mov sbb mov inc push mov push push add rolb or pop pop ret int3 push nop push rclb rol or add xor and jb inc or inc add (bad) je push add call add decl add add add sete mov test rorb sahf add push xor adcb push call add add mov test (bad) jle lea cld call dec add add cmp push call xor and add add xor add pop or add call or mov mov test leave je dec mov jne sbb add or add (bad) je cmp js je sub (bad) jne popa adc pop mov add js inc or add jo lock andl cmp push call mov add add repz add add push movsb add insb push mov call add add mov mov add mov inc add or inc add mov xor inc mov mov lods xor mov mov jmp lea push lock lea mov lock je add add push movl adc insb pop add xor mov inc add adc call enter xor add add inc or lea push or inc add ret push mov push dec inc sbb and sub fwait add adc (bad) aas sub or popa add add cmp add jle add and dec add dec or ds pop ja pop ret add add dec or cmp adc add jp add add sub sub addl and lock lea adc adc adc or add add cmp call je cmpl lea inc sbb hlt push or xchg add push add add hlt add add adc add ficomp imulb add add add and add add push or push add in add add test setne mov xor mov mov pop sbb add mov add mov push sub push push add and add cli and sbb insb push push sub push fildl nop add cmp jbe pop mov rorb add leave hlt js add ja mov cmp and adc or cmpl add cwtl adc push call add xor add pop andb sbb jo lock add or add pop add add je lea mov cmp add add add orl pop add push mov mov or push or add or mov add repnz pop ret add fsts xor add cmp add mov push mov orb inc add add dec xor dec adc add mov cmp jne mov push aad hlt dec adc incl mov pop pop add or mov mov push call fisttp push or add bound jo insb add xor mov mov push or push mov add cmp push je mov mov push add ret add les (bad) push cmp jne add push push call out in add and jns add aaa add call add (bad) aas sub cmp add push add pusha jl add dec (bad) add out mov mov push sti add inc add sub push call add add mov add mov add sti pop mov mov mov adc or add jb call add lock addl hlt sub add adc add mov add push push push call rolb or add push add sbb cmp lods add add inc lock add or add mov push icebp sbb decl or xor sarb add jo inc or inc push mov movl xor push call pop mov and das cmp add repz jmp xor adc adc adc jbe call push call add push mov out add or stos add les jmp or sub jmp pushl inc call pop add or out ret testb int3 pop add add mov orl lea push mov adc dec sub mov add mov add rclb lock jle inc lock mov call int3 or movl mov mov (bad) or add test push add ret or adc inc je push add scas lea push call pop pop mov das je adc sbb call add or inc or pop pop or dec cmpb add jbe call fiadd inc or add pop mov add adc lea pushl call mov jae test jne addl sbb test push or push mov call jmp mov mov dec mov pop or jmp adc roll call add call lcall fimull add mov sub mov mov and add rcll lcall or push roll add cmp jbe cmp (bad) (bad) mov addb add jb cmpl add push and jae pop pop adc jmp movl adc jmp add rep add and shlb (bad) mov add or and add jmp adc and loopne add nop add fs hlt add add add rorl mov mov mov add push mov add add int3 sbb or add sub add movl es or mov add add push mov push add je add push add add add add add add inc mov mov or add call add in add lock lock stos hlt add hlt add clc add clc add inc cld add cld lea add add adc call add cmpsl add inc or pop pop leave ret nop mov mov pop mov or or adc add mov mov adc add lea cld adc or cld add test push cmp add add add stc add or mov and or add add inc add and mov sub add out add add mov and sbb or and mov add into add inc add out add pop jb push add mov add add push add add add add mov mov insb sbb or add adc or or add or or or add add or mov jl push test add sbb add add adc add add mov mov mov arpl lret decl or add shlb or test jne mov dec or call inc add hlt add rcrb cs jmp push movl adc sub add pop or add icebp call add inc or je push call pop mov in cmp push add or rorb call neg pop sbb pop and ret or sub and xor push xor rcrb in pop loopne rep cmp jne call add add add add or add dec add ret je push add loopne inc add push push pushl lea loopne movl dec inc in inc add lea add les mov js aam loopne sbb or push call pop pop add int3 or mov push push add adc add je mov test adc testl add je test (bad) je mov or or pop pop xor add or (bad) jne lea orb sub add cmp jne mov addl incl je jmp xor add mov aad inc incl or or incl movsl push push add adc adc cld add add push add (bad) (bad) push push call add jl jg cmp jg push add mov add je mov leave or mov add cmp push mov je inc movzwl data16 cmp add test je sbb mov add sub mov sbb sub jne add or cmpw add movl or (bad) jne xor pop inc pop add (bad) jmp mov jmp cli pop jl add xchg jbe add scas add add mov add inc or test jne arpl test add mov or mov push push cmp adc or adc pop call push mov add add push mov xor mov add inc add push testb jne adc gs or add add add push xchg adc pop adc gs (bad) decl (bad) call xchg bound or pop cld je pop inc clc andl mov jmp imul daa call (bad) xor add cmpb xor popl das add adc push add sub movzwl add cmp add popf and mov jmp mov pop add or sub add pop rolb test divb cmp je and xor mov add test add add add or and add add adc xor mov add add movzwl movzwl sub roll add sub pop add cmp adc cwtl imul rcrl add adc add or jmp mov loop icebp add or rolb mov add or adc roll jae add add ret add adc pushl incl jne call sbbl or add mov add add push or xor je add test xchg cmp jne add out adc sub pop ret push push adc (bad) add add add or jl or shr cmp add call adc jmp add adc mov adc imul xchg das add xchg add call jmp iret call js call or push call add dec or add jmp mov leave xor cmp jne test cmp decl jge cmp or cmp jne psubsb xor inc add and add inc cld add (bad) call jmp incl adc cmpl add sub jmp cmp add call add add add call mov lock add test (bad) call adc add adc adc rolb inc pop push or adc inc pop pop call mov orl inc jmp push call jmp cmp jne push add arpl pop xor inc call ret push push pop add mov mov mov mov add mov adc lds mov andl add add mov addl push call add addb xchg add inc add call add test std inc add cmp jne add and push call push add adc xor push add add (bad) divb incb jne es repz (bad) incl xor in add adc mov jmp mov inc in mov mov push push or (bad) aaa add pop ret mov call call add cmpl add call mov orb push or in add sbb and add lock add mov adc in push xor cmp mov adc or sbb aam pop and sub popl mov mov mov mov inc or mov loopne call inc add add and mov add push or rol push in add add add adc mov faddl or adc cmp add inc ja loopne add adc call cmpl add inc add push lods add or adc ret call add cwtl add pop or add je push add add inc push sbb mov add icebp sub test int3 or mov mov push or push or roll enter or ret or xor mov cmp or clc mov add clc push jb xor jno sbb adc or cld add or xor mov cld push push mov add mov mov xor pop add (bad) cmp cwtl je add add inc cmp je inc add add add out add push (bad) test add adc adc jmp adc push call roll mov es inc add push add mov incl adc mov add pop pop push inc push call or je or rclb call push call pop cmp cmp sub mov add int3 pop add mov add into push sar push adc fsts call inc adc push mov adc push call or sbb add add adc push push push call xchg and push add jmp hlt or adc lock add (bad) pushl add mov mov jmp sbb je or hlt add jb push add test push lea call pop sti call pop push adc push call dec cld pop pop xor pop sub out (bad) dec ret add inc add add add or add jne push call push sbb or popf incl mov mov mov adcl add xchg roll mov shlb rolb add sbb (bad) adc add pop add push call pop mov pop adc push add add xchg add push pushl cmp pushl fsubs mov call add addl sti lea add clc add jne call mov add pop cmp xorb add add add add mov add cmp jb movmskps jne call pop pop add push or or sub sar add xor call mov jne mov cmp mov add add call mov add add rcrb leave add or and cltd repnz add xor inc or add add andl xor pop ret add push call add inc add or add push cld (bad) incl in inc add adc call inc in loop add ret call insl add sub add notl fcomps pop or push mov or push push add adc jne sbb add call mov or add rolb push call mov clc add or cmp or add test inc adc add or mov pop pop jmp dec push call daa add les or or rcrb push pop and data16 pushl and str call or pop je add adc aaa sub add push push push or push loopne rep mov mov and inc cld pop add testb or inc hlt add cltd add lock jne pushl call leave ret mov add in mov push push add jge test pushl call sub pop add and or mov add add add jmp mov sub mov or leave je add repz adc add add dec add and and mov jmp add int3 sub mov test je mov add add jne inc add movsb and push add adc mov mov add rolb addl add add add inc cld add xor add incl je adc pop add je jmp or sub ret lea sbb std sbb cld adc push add test (bad) test add roll ljmp (bad) fwait add add outsl push add dec adc add pop xor movq add add jg push add jg add outsl inc dec add jbe add and adc outsl add add adc jg lea lea mov dec mov shr add jo pop lea add out and pcmpeqb rol add je mov mov lea add jg dec jne mov enter je mov add jne pop inc pop pop pop ret mov inc shrb lret ret push and pop or shr inc dec jne repz jmp push or adc mov adc rolb or add call push pop call pop jns add dec and mov mov inc adc add bound cmp add mov mov adc es add sbb add (bad) and pushf call mov shr lds call pop add add push adc cmp add add jne or je cmp popa add or je add call jne addl add add add jne mov incl mov sbb shl addl ret test inc sbb add or fdiv ret add movsb mov sbb into add or add lds pusha mov jmp or push push mov adc mov mov inc or test jne call add add add add orl or (bad) jmp inc je adc pop or and sbb jecxz add fldt pop inc add adc test dec or mov inc add and or addl add mov test jne call shlb cmp je call add lock pushl call and push test cmpsb add testl push je or add sbb clc dec mov cmp sti jle push add or mov les inc cld jmp dec or add mov dec or stc pushl cmp je mov addl add push add add inc jle adc add adc inc add je push push push add jo add and push daa cmp adc cmp je add or xor inc push lea or outsl xor outsl cmp je or sub or incl lods pop pop pop leave ret testb or je cmpl add dec add or mov mov incl movzbl shr movsbl push push sub jbe add add add push ret incl ret or mov mov call add inc or mov add xlat je cmpl jne add push jmp call andl jmp add add mov dec call inc add cmpl jne call cmp jne mov mov aas call fstpt add fwait or add call mov mov pop pop inc leave ret or js xor add lds outsl push mov adc push or rclb add mov lea decl popf fsubrs or lock int3 or stos call push mov push add mov divb sub sbb jns add add add call addb or or mov add or stc inc or jne test call add or cmp leave enter add shl or or or add and jne add sbb add enter sar or ret and or test push xor cmp or test or mov mov or and add test or test add inc add cmp daa jl add cmp ja movsbl ret addb loopne jmp xor movups punpckhdq roll pop mov add ja incl and iret movb orl xchg add mov sub or or lock add add add and sub je sub inc je dec dec je add (bad) test pop orl imul sbb jmp orl inc add adc add add cli sub add popf add cld mov cwtl jge sub or adc rolb movsbl lea add or add mov add es sub add add rolb adc mov add test and add jmp cmp je cmp push insb je rolb add or adc add jmp aas insb push adc scas jmp or adc dec sbb add aas add pop cmp jne push cmpb jne subl mov sbb and cmp or xor movsl lock or jg or stc pop add and je je outsl je jne test add js test add pop je adc add add pop push movzbl push call add rorb je mov lea scas sti decl decl rorb push scas cld (bad) ljmp and add mov add (bad) add add test jns add cmp (bad) (bad) repnz test fiadd adcl je add add add jne mov test mov add or xchg add or hlt mov (bad) mov mov mov mov add sub lea sbb or add mov add aas jne pop add dec jmp pop jne sbb mov lea cmp jne mov add or adc cmp lcall add add fiadd jne mov mov add mov push movl add call roll xchg add jns rorl test add cwtl add ret add xor je movzwl push and out lea lea add call les pop movl inc cld mov sub (bad) or add or mov nop jmp mov adcl cmp je cmp je add push ret add data16 cltd sub sar sub (bad) add mov aam fisttp add mov call lcall enter clc adc (bad) hlt add faddl gs addr16 addl imul sub lcall orb add adc mov sbb add cmp (bad) decl and mov push jmp or mov sbb clc add inc or or add mov test pushf add mov adcl or into add cli addr16 push dec add add inc push cmp pop jle mov or inc mov mov add (bad) pop add push inc call mov mov cmp add loope mov clc jmp or add add xor add test mov das mov mov lea xchg pushl xor pushl adcl or push push pushl adc (bad) call mov les jecxz add add mov jne adc pushl pop pop cmpb sub test and xor aas sub lea fiadd mul add push sbb or lret add add push jmp sub je incl fadds call add mov add add adc adc test sub push movb les test add add add scas add jne add test je add je movswl inc cld jmp pop ss jmp add inc add add add pop jl add fadds ficompl outsb add nop add add fistl cmp or jmp add add sbb push mov mov or jne push and jne and test push test add push add je mov cltd push push push push call add add pop mov cmp jle add or push dec jmp lea repz inc adc or inc je add pop mov cmpb je adc lea mov push movb and aas dec data16 pop addl add into jne sub clc jmp cmp jne or or jmp orb add add cmc or or cmpl jne or test nop je test or sbb jmp or sbb (bad) xchg test cmp int3 add sub add or test or daa mov test jle and lea mov dec call incl je test (bad) jg mov and es lea clc call push push or sub add jne jmp or mov mov xor div and fstpt jecxz mov mov xchg xorb jle mov pop add mov push push lea hlt add add push dec add add movsb cmp lods les test jne mov cwtl leave je or add call pop add jmp orl adc or cmpsb mov mov cmpsb add or add test je mov jmp scas and scas dec add or add fildl mov je add mov or xor in add movsl add add mov mov mov (bad) je mov add fadds push xor mov jmp cmpb adc mov pusha jo std mov inc mov pop pop add int call add ret lea mov mov add push mov add add add add mov push add mov adc or sub add add lds pop add push cmp je push add push and add movsl add cld (bad) incl push lea add mov push lea fadds adc lea or test test add dec mov mov add push data16 sub add test push xor mov (bad) inc addb add add or add add mov mov mov mov push adc adc mov add call adc mov call or mov or pushl pop adc pop and cmc add sub mov push push mov rclb call incl call inc test pop pop and mov pop call add add loopne add pushl pushl add arpl jne call dec xor push add call add or add add cmp adc inc cmp jb lea dec in cmp ja push or int add add push pop cmp enter roll call add addb mov add ret call or or adc movsl push call dec or push mov call mov lock xor add int3 and lea pop ret adc add xor mov push add mov or ret add add add cmp je and adc fcoms ret shl add fmuls add jle rorl lock xor addl pushl iret xor add add loope add xorl je add add or jne pop add xor ret mov adc ret je add out cmp add in out call adc adc add and jmp pop pop or inc (bad) mov inc std or cld add add int3 push push mov add (bad) jne mov add or xor div mov add or jmp mov inc mov push and add roll jmp rcr or leave jne div mov (bad) or add inc and testl cmp sub or cmp jbe add rorb ret sub and sub je sub and je add mov add mov sbb add adc add mov add add add decl push call add movzwl mov mov add jle mov roll adc rorl stos mov add into mov adc add (bad) lea sbb sbb or adc jne pop pop or sbb add and push add call mov rolb mov add and add rclb test cmp add mov or test add and popf out cli (bad) decl add cmp ja push sub inc push lea push push call add mov ret add test jne push incl or test cli add adc push add sub add push call fistl add call adc inc push add add inc test and and push pop dec push call xor cmp roll push addb push sbb cld add push jmp test je lea and add mov add mov jmp push or cli (bad) jmp lahf add or xchg adc lea lea pop and addb push sbb jmp or or mov lea mov jmp movb add iret jb mov dec cld pop xor pop call dec ret push push adc stc pop add add cltd or add inc add test add jg add mov test jne push and rclb add pop mov (bad) call push call adc and mov cmp adc divb or adc (bad) jne add incb es push call lcall add mov push aaa add (bad) mov mov incb loope add inc add mov ret push and popa push xor in adc add push lea call decl jnp mov add sub call pop cld je inc mov andl sub cmp jne and add add jmp cmp jne adc add sbb cmp mov addl pop leave adc add mov hlt cmp add pop or inc mov push call add xor mov cmp inc jne mov call sbb jmp fnstenv sarb mov test in (bad) xor add cmp cmove jmp add mov push call test std push add lea insb push push unpckhps aaa add or push push call add inc add mov mov or push call adcb insl lea inc mov test je movzbl sub jmp and add dec in inc imul xor lock mov mov test (bad) je movzbl movzbl mov or add inc cmp clc jbe mov add add add add cmpl add inc jb mov add mov incl ljmp mov lea adc pop mov xor xor rolb jne mov call jmp dec add (bad) jbe add inc jle add test add adc mov or add jne mov call add push or add mov xor movzwl add or lea jnp stos stos stos jmp cmp add jne adc incl or or sar add or dec in add call loop loopne call add fadds add mov mov call mov cmp or test shrl add add call pop mov fadds add or mov ja mov sti rep andl push incl cmp mov adc mov pushl sbb adc mov add je push or xchg jecxz sub mov xlat testb add test add add jne and pop add gs add add loopne inc or or add xor mov in clc add add mov inc jmp or cmp jge mov mov adc jmp add adc or add out or or sbb sbb call (bad) adc add stos sub push call add jmp cmp jne inc cmp movsb add call inc add add add gs mov add test add ret cmpl add push std call movl ret mov push inc mov push push mov add xchg (bad) je push add mov and rcrb inc or hlt add inc add inc cmpl add bound ret adc dec or push ret add add pop pop pop or add pusha test je fwait aam mov adc xchg rclb (bad) pop adc mov xor push cmp je outsl cmp push xor adc sbb mov xchg add adc adc loope jne add call ret pop mov loop and and mov push call mov cmp mov xchg add push call xchg add add addb sub push call rclb push jge push pushl jb or mov scas sbb cwtl add add scas sbb add pushl dec add pop pop lea sbb jg fcoml mov add pop push call pop inc cld je mov sbb or (bad) or (bad) push call fsubrl in test je or xor mov add divl mov call test je push call cmpl pop jne adc imul push ret mov pop jmp xor rolb push push adc js add call mov mov jo je cmpl je add add jo test jne or call mov (bad) call push call adc add add adc pop incl lods pop mov in test sbb add mov ret push incl adc ret call ret mov push mov xor adc mov add pushl adc adc and roll pop ret mov rolb push push pushl enter add jmp and push call or jmp push or add jl add push push addr16 add mov jne movl adc incl mov mov movb movb movl push or or jbe jmp adc add push add mov mov or inc insb test jne push mov pushl call sub adc add add test or add add loop clc call (bad) call or dec push push call rorb or add xor xor push call pop call orl mov inc jmp push call xor testb clc add pop mov push jns call push pop inc pop add inc mov inc xor jne test je mov add loopne push add mov or ss xor or sub cmp push sbb inc xchg or or push inc or (bad) faddl xchg sub lock pop cmp add add add jmp add test je sbb ret aam ret add cmp je push call adc push call add fldl mov add add lods cli (bad) lcall (bad) cmp cmp or aas add inc sub inc add xor inc (bad) call add pop add call add iret jne push call nop ret add or jmp push mov cmpl cmpl jne add xor add adc adc call mov sbb push or sub pushl mov js xchg in or add inc pop and mov push es add (bad) cld incl pushl rcrb mov push call and jl or push insb or push (bad) inc cmpl add mov je cmpl or add add mov sbb add add mov or or jmp je pmaddwd or test test xlat pushl xor (bad) or adc push sbb mov or pop add push arpl cmp adc pushl xlat call mov je fisubrl ds add fwait add xlat or add add pop cmp xorb inc jmp call xor pop pop add jmp add sub cmp inc or test add jne lea call decl add fstpt lret jne mov inc or stc add ja add cmovo add mov add jae add push add or adc mov add mov add jmp lea push push add push call add or je add das cld cmp je mov dec hlt andl pop pop inc leave or push push xor add adc fildl (bad) clc pop test jne add add jbe add adc lea call or add or mov cmp (bad) jne mov pop pop push pusha add adc add jle add mov add pushf dec ret push xor dec mov dec pop add sub cmp je lcall ret add call add lsl testb bound pop or and (bad) (bad) lcall or adc int3 push call outsl ret add mov add mov adc inc stc add lock call add scas jmp push push add add inc xor add adc or or les add pop push mov xor add lsl adc je call add cmp jne jb adc and adc je push cmpsb add add adc pop call push adc add scas add and in adc xor mov mov pop mov cmp jae mov pop add call add add (bad) jb cmpl add je push cmp push push push add enter xor pop ret add push hlt jb push pop or add add gs add jmp and add lods add mov inc adc jge adc jne xor adc incl (bad) mov mov test pusha je pushl adc add fmull out add or sti jb dec call cmp inc je add fadds pop call or add adc cmp jne cmp inc fdivs dec pop rorb add mov jmp stos movl jge in add jae mov add add or add out movl jge push lock add loopne and or cld adc add and int jge jo jne (bad) or add adc adc popf call xchg addl je add rol insl pop add or add scas add add add sbb call and add or and (bad) decl push mov mov add in dec push lea add push push and call pop inc xor cmp jne add add lea mov mov adc ret addl add movw add or add movb or das mov inc inc lea add (bad) jb push push cmp out test add mov and rorl add sbb inc cld add mov inc clc cmp jl and add imul call adc jno addl inc or pop cmp jae adc andb cmpl xor add and add movb mov adcl inc add add rolb mov jmp mov or incl add mov cmp je pop cmp je mov cld mov test je mov or xor add add xchg pop mov mov push add test mov cld mov mov push inc inc or call je inc or addl inc incl add sti jl xor mov push add or mov add or push add jno inc add test jne push add or mov cmc add or mov cmp je test je push call and cmp jne add inc jmp cmp jne add push or xchg je incl or or sbb movl inc cmp jl pushl incl rcrb add ret add jmp mov push add mov (bad) je add and jle add incl adc mov orl inc add hlt cmp enter aaa call incl movl jg adc pop pop ret cmpl jne call add xor push inc xor test jne add xchg add cmp je inc push add cmp lea add ljmp (bad) add mov pop pop mov adc push lret or push jmp xor or xor lea je push cmp xchg add add mov push call dec test add inc add add sub rolb scas dec and mov add add add jno mov es add scas jmp in rclb call decl je mov push add rclb mov mov push or add je mov invd add add mov cmpb jne adc sarb cld mov adc xchg rolb jmp incl pop test je mov mov add push or push (bad) mov push inc call add (bad) je incl add or push incl mov push inc add outsl test je addl cld add cmp xorb or add add inc incl andl add out test add add mov cmp je cmp add inc jmp dec jmp test sbb add cmpl add adc add fildl xor jmp inc inc cmpb pop je add es add pop add je lea add mov jmp or add add add adc test je dec or add pop test jne icebp mov int3 add je add jne or orl je test mov mov call mov add sbb adc jmp call or add pop inc add push or jmp rcl pop movb add dec adc push add pop pop add andl incl add ret mov push mov add fistl or sbb add (bad) ljmp add dec push push mov add nop mov adc mov ret je add fdivrl sbb mov add clc push push inc push lea call adc clc add jbe jae add pushl add lea add (bad) jb push call mov pop cmp je adc nop add push push add leave std add adc inc dec mov xor xor jmp add pop inc pop and add idivb fidiv add ja cmp je add add xor adc lock cmp push push add ret push sar inc push push add mov call mov inc clc cmp je push call pop add add sub cmp clc push pushl add add xlat add or jne call jnp in push call mov jmp adc add adc add adc add jnp call add cmp (bad) jb add mov push mov add pop es push add call xor test setne add rolb mov ret pushl adc and ret int3 or push adc add add mov lea add sub push push push mov adc inc cld xor push sbb add movl mov lea add mov mov dec mov add mov in push adc adc sbb mov push mov xor xor push movb add inc hlt add add clc (bad) je mov add iret xor call rorb mov or add add inc or inc add sbb test add add mov mov mov call sti (bad) je pop lea lea mov dec xchg adc mov add adc xlat call add jne test js jg and add into add and push push add or push or add inc hlt or ret add jmp mov addl loopne sub add add push sub add inc jnp add adc or add add cmp je push mov call dec clc rorb xchg and add dec adc adc add dec or loope adc add mov or je push lret call jmp (bad) push call fdivp test je dec pop add add je add lea cmp jb add jae add add rolb into hlt xchg xor test jne pop xor jmp cli add or xor rolb or add test fadds or out mov mov dec pusha mov cmp or test pop mov jle andl adcl or stc add jl mov add add add or inc addl pop jmp cmp addl adc test pop cmp test dec cmp push add ds add cs xchg adc mov push cmp jo cmp jmp cmp pop movl add push call pop mov fs add push add pop add or pop pop pop adc or arpl sti cmp add pushl push call pop pop pop ret xor adc adc fildl andl push push mov mov add cmp je test je or shlb add gs lea push incl adc mov inc xor call (bad) lock or add add js or inc hlt xor lock cmp jne mov jmp test jne add add shll adc lock jno (bad) add xor pop leave ret inc andl mov add in mov mov adc add push rolb add mov adc push add str add add jb imul or dec or rorl add add pop ret pushl adc push add in add call pushl decl jge mov cmp add je mov push mov and add add add add pushl add push adc mov push incl pop mov call add jmp mov ret sub je sub push je dec je call inc add add or call mov shll mov add jmp mov add add add mov xor cmpl lret (bad) add inc cmp jne push add test (bad) (bad) cmp add call add rorb or sti or cmp jne mov inc mov mov add jne mov mov (bad) sbb mov inc add sub or mov mov add (bad) dec fdivrl or mov mov inc adc incl jmp add push ljmp inc cld add call add ja push call pop add sbb fadds cmpl je push call xchg ret or insl and adc push mov add call inc or sub or roll hlt push add mov or push mov call incl add fadds inc add jge inc les adc adc lods fadds adc mov cmp add push call test je mov ljmp (bad) push add call mov adc adc add adc add dec push mov call (bad) je push and or add add mov mov xor je cmp aas add xor clc call mov test je sub (bad) add dec fcoml or add push push push call add pop push testb jne add and jmp xor call dec add and rorb or mov (bad) sbb dec pushl or (bad) adc and add pushl loopne sbb mov cld pop pop xor pop call dec or add push test je mov or jecxz call subb mov call mov pop pop add adc xor mov add fisttpll add je add dec jne add (bad) out rorl mov data16 data16 dec jne xor add or xor jb dec push pop mov stos mov pop out push or pop adc push add (bad) jne add push or adc rcrb pop pop ret test adc adc aaa add or xor xor mov jmp rorb aam ret sti pushl mov sub icebp or push adc and mov sub movzwl and or je push dec je dec jne add add test jne add dec adc push mov pop add add mov call adc jmp int or mov or jne sub or clc dec add add cmp sbb or or or pop inc adc add jmp mov add rorb mov mov add je dec aam and daa adc adc dec or cmp jle add mov adc or mov out (bad) inc add and add call enter mov adc cmp fldl add adcb (bad) pop adc add adc xor or inc pushl and pushl adc add push push xor mov cmpl add lea mov push add xor add mov add je inc cmp and (bad) xor inc pop pop or andl add shr icebp mov push mov push mov add add or push call addl add (bad) or add jl or pop adc push add or jne push add rcrl out pop ret mov add xor add call pop ret push push adc jge (bad) incl xor inc mov xor test sbb call push call push fsubr add pop mov or push je add sbb mov ljmp jne push je add add push adc call mov cld cmp jne or incl or push call add inc sbb or push call movl or inc mov push add add push lea or cmpl jne push call add push call pushf pushl call add int3 add push push push mov adc dec add push push push push push push adc add add xor add mov add xor sub xor mov cmp add cmp inc xor cli (bad) je add bnd lea add or jnp add push add push and add fs add add add add ret add imull inc add add mov add jo mov xor call add add jo pushl call add pop or (bad) nop mov mov push add or pushl sbb jno call add push push push push mov add (bad) xor xor xor inc xor call pop pop add icebp mov push call add and and out mov add push push call add stos pop add add push push pushl mov mov lcall mov push mov push add mov inc clc mov push push mov inc cld call iret incl pop cmp jne call sbb xlat jmp incl jne lea push pushl clc push call ret add add adc adc rorb push call jmp mov mov add add adc add lea andb add pop pop leave ret add push call incl pop fmull cmp (bad) jne call and call add test adc cmp cmp sbb push add addl mov or call jmp mov sar add (bad) mov or add xor and je push call pop andl mov notb add loope jne add jne pushl call add fmull in call bound or jne mov push hlt pop inc mov mov push call add mov arpl add in add push call mov add add mov decl xor push add jge jne xor jmp add (bad) jne mov jecxz add cmp leave add dec movl insb add xorl (bad) jmp jno push add sbb je add out mov add sar mov add aas add cmp je add mov add (bad) test jne call add add adc add add sbb cmp add add push add mov les adc ds add pop inc test je add testb je call mov insb xor cmp lea sete push mov add xor mov call xor cmp je cmp je cmp fwait cmove or and or sub add inc adc xchg add test jp push test jne mov mov adcb sete xor push mov push add cmpl je adc push hlt mov dec cmc andl push add dec movsbl rcll or leave je add lea sub add add rolb jbe add push call add clc decl test add add or add or and add add add push add lea push push pushl adc call test (bad) je add push add mov mov pushl call add mov jnp lea add add mov mov daa jl or add test jl add mov add adc (bad) push pop mov cmp mov or inc adc or addl cmp je add add movzwl and leave cmp add add add mov loopne lea adc push decl adc rcll sbb or add or adc or and movsb sub or or mov cmp stc add adc and push (bad) xor push mov jmp xor mov testb add mov mov mov test or dec adc xchg add and or lea cmp jae mov adc mov or jne or movb inc add adc cmp add mov lea or sub push les in mov add or push adc add or or (bad) jl ret sub lock and mov rorl pop or andl or adc add pop add inc movzwl into or addl or add pop data16 add add push mov add subl fisubrl cmp xor popa add and inc add dec scas add or adc add lea xchg adc and stc (bad) decl xlat cmp movzwl add into add push or pop iret test add test push push add and push lea roll sub sar push mov add push incl fimul test (bad) mov sub push lea (bad) mov xlat add fidivr jmp call mov fildl adc fildll stc add jmp add mov push pushl pushl pushl call stc je adc pop add cmp adc pusha cmpl insb add mov push pop add or iret call add call mov jmp adc add xor cmpsl testb or or addb jmp call movl call andl or jmp or or sub add pop xor pop call dec ret push push adc (bad) ljmp cmp jne sbb pop or call or inc jmp fstpt add sbb jb int3 call arpl aad or mov js or rorb add add mov add push mov add mov loopne add call add gs add push add add or push call add or inc in pop call adc add add dec in inc inc cld incb mov or add dec add call mov add in incl adc adc or (bad) add pop mov mov add dec or dec movl add adc sbb adc stos add popa add mov add dec mov cmp and call xor push pop ret test add add call jbe or fiadd mov and sar mov shl add add add loopne pop ret mov adc mov push push pop test jne add add jp push cmp jge pop mov mov push or out fiadd mov mov adc and mov xor sub add pop ret xor mov add or add and adc add jl push pop add add ret add sahf cli and roll push mov cmp inc je cmp je add mov add inc cmp adc xor rcrb je add add adc je add xorb mov test sub add jb cmp adc mov add enter rcll call incl addb jmp add push cmp movsb mov adc outsb add push call mov orl add or str add cli cmp jb add pusha or jg (bad) ljmp roll addl push repnz pushf add adc mov add stc adc xchg adc xor movsl sbb or sbb lret incl cmpsl push add or sbb add xor pushl adc mov movl out pop ret mov adc cmp sete mov ret and mov in adc inc or add push mov cmp jne adc sti jbe add cmp add sbb shr inc or add add and adc push add mov call movb push pushl lea or fsubrs cmp adc test inc or incl cmp jbe adc repz add push push add jmp les dec movl call add pop cld add dec clc andl std pop pop pop leave ret add es cmp ja call sbb add test or test pusha jo jmp mov mov add add je and xor or dec or push push add add add add adc add adc pop or or push daa add mov jmp call cmp jne adc je jbe add push add lret jmp or add jne incl jne pushl pushl add xchg (bad) (bad) incl stos push mov add sbb (bad) decl mov or mov add movzwl add and cld add stos add or mov pop pop ret int3 sub push mov inc and or jne mov dec and add xor imull icebp mov add or or mov sbb mov add add shr inc mov mov adc add shr roll fcmovnbe ljmp hlt div mov add adc and inc and mul add jb push cmp sub jb cmp or add inc sbb xor add or add or (bad) fadds lret mov add mov add mov add imul inc test jne cmp jb cmpl jmp push mov stc cmp jb neg add sub mov pop add sub jne (bad) mov shl add add pop lret add inc jmp stos add dec or ljmp add add or pop add lds push sbb fistl push cmp jle add cmp je inc cmp add or mov sub rorl jge inc mov inc sbb and jne mov movsb add inc and xor inc sarb sub add (bad) xchg rolb lea add jne call add cmp jne pop xor jmp add push xor pop testl jb lea or ja adc mov add mov add ret je movl add adc dec mov (bad) lcall adc movl add add jmp mov cmp hlt je push pushl add add incl test (bad) test add add add adc or or mov clc cmp je add test je mov and inc clc cvttps2pi mov mov add sti jle add mov call mov push mov sbb push call mov jmp add incl sub pushl dec add incl adc add (bad) add push cmp and push push jmp jmp and jne add add ret setbe ret or add cmp add or into pop lea add pop mov xor add push mov mov call cvtps2pd pop pop push test sub adc push sbb xor in decl inc push sub push xor sub push sbb push sbb push movsb and lods adc push push adc push push sbb push add add shr add cmp enter and mov cld or pushl cld mov test add add push push nop push call or add scas add push add push inc adc adc push orb cld mov adc ss push call or sub and add sub jmp add sbb daa add jne test je add jbe call inc jbe call or adc or call adc add or call and call and or and loope or inc call call inc call call inc call call add test inc pushl inc call jbe call dec call call push call call pop call call pusha call call push insb call jo or je and or js or jl es add mov add push pushl or mov or add add in or xchg add loope or cwtl add (bad) or pushf add lret push or mov or or or or add xchg or les mov or add jle or add jae add or add pushl pop or fadds dec or stos faddl inc or loopne or or stos in or or call or or aam or add add or add imull add in or cld add loope or add add call add or or or rolb adc push mov push pushl cmpsl or adc or or or add jnp or or or push add or sub or or push add dec or xor or cmp or or cmp or or inc push add and or sbb or add or dec add ljmp or or push add jmp add fimul or rcll or add add add ret mov push mov add ja pop mov cmp adc call pop mov cmp xchg or or add orl adc outsl inc or jbe cmp mov pop add sub je mov cmp add aaa add mov cmp and add adc sbb add add sbb add or and add fisttpll and add lret or cmp add mov add or push inc cmp or inc sub add or dec cmp or jbe cmp xor call incb mov test jle push add jne call add pushl pushl add pushl pushl jmp adc adc incl add inc or leave ret mov (bad) adc mov or movzwl jmp sbb push lea adc adc inc cld add sub add or ror adc adc mov add or je or add add icebp mov or inc add add mov or movb bt jae mov roll int3 add add push push push mov mov dec adc mov roll (bad) cmp jbe cmp clc jb stc addb add jb cmpl add push add (bad) incb pop jne jmp add add and adc jmp add add movsl jmp adc sub add and add incl and movsb or adc and lea or or add add push mov mov mov add mov inc add add add int3 push repz add sbb add movl es adc add add movl sbb add je add insb add add add add dec add add inc mov push mov add call add in add in add lock lock add hlt add hlt add clc add clc test or add cld lea add add adc add add add add add pop pop leave ret nop mov push mov and mov (bad) adc add mov mov add sbb lea cld adc or cld add or xchg test flds push or adc dec test or sbb and add add add inc add rorl out add out add pop add adc inc add lods out add sub sub and addb out add rorb push (bad) (bad) jmp xor pop stos loopne test add add add add adc add add and add inc mov insb sbb add sbb or add adc or or add or or or add add or sub (bad) cmp push inc add push add add inc push add push add xor mov mov mov add xor sub add jg mov decl mov pop mov incl incl inc add je push loopne rcrb icebp cmp or psubsb mov add jno rcrb imul push mov test divb inc xor cmp loopne adc or xor adc adc adc cmp add call lcall adc mov add je adc jmp mov adc insl push movl add or jne inc pushl call pop and push mov add jmp jne call xor and dec push jmp add inc adc push push adc clc mov add mov test jne cmp inc push call je add add add call add stc add call push call mov mov loop loope or xchg add add sbb or js add call (bad) call inc js add je andl incl shr pop xor inc ret mov call add adc mov sub call sub call jmp push push inc add pushl dec xchg pop add jge aaa int3 push add cwtl add mov or pop mov ret sub add dec or and add iret mov cmp roll add xor mov sbb ret add inc or inc or enter adc push (bad) mov push xor push lea sbb jge or dec or stc jb add cmp jb or shrb (bad) jb call pop sub add push push push subb add mov push sub push push push add xor add lds inc lock or or add add les es mov adc or push or add add cmp sbbb rolb mov dec lock pop add inc in mov or rolb xor or ret mov insb add inc xor push mov sub add jne lea call decl mov or add mov test sbb adc je adc cmp movzwl add and jmp xor rolb add push cmpb add dec clc andl std leave ret or jne add call addl and push lea add enter add sbb leave or pop jmp add push pop adc add add add push push push sub call add cmc dec and testl mov xor mov mov xor enter incl loop adc mov push mov push add adc es pop mov inc and mov mov mov add adc inc push push push push and xor add push lea or add push mov cmp je cmp je add je sub sub mov mov add mov add jne push inc mov or dec add or or or mov mov mov sbbb xor mov iret or jne mov or push or push or add ret push push mov adc or or inc add dec or imul xor ret mov add push xor push push cmp add or add mov sar mov icebp and lea mov shl testb add cmp add je cmpl add sub je add or adc add jmp push push jmp add idiv adc adc pushl add jmp call dec movl mov or incl roll xchg call mov add cmp jne add outsl add and call or add pop ret test js or add call add xor or call (bad) jmp mov sar add mov loopne adc loopne mov add pop ret push push call mov xor movl or movl cmp pop or push call lcall pop cld add add push lea or call add pop in inc inc or inc cld incb (bad) xor fidivr pop in sbb out shl mov or inc cmp movsb add call xor add fildl gs mov or sbb add lea cmp pushf add cmp adc jne call mov pushl add leave ret push add add add sarb loop add jg rclb add cmp je adc adc push add adc and ret je xor leave mov xor pop pop inc leave ret pushl lea clc pop add cmp jne push mov add push add cmp add inc clc adc jmp lret lea inc lock movzbl push call lcall add inc mov mov add add cmp jl and sarb pop or xchg add push pushl push push push or jo call push add add dec adc or jb and pop add andb inc add test imul jo jmp call pop sub pusha add xchg sbb add xor or rclb add add (bad) test add push inc pushl pushl add call add pop ret int3 add push lea sub add (bad) not and mov add cmp jb or add sub add adc addl pushl fildl pop pusha push call add add pop mov cmp jge mov mov adc sbb je mov add testb je adcb add add int3 add inc in call jl or add add add or cmp xor call pop or mov inc lods jmp push mov mov or xchg flds sub cmp testb mov mov and add fildl add or divb inc or push mov sub test jle sub push push call add lods jecxz incl (bad) jne add test add and mov add pop orl or lcall cmp rolb mov pop pop or add addb xor jmp push call adc add testl add call push call neg add shr xor pop add mov push call dec decl jge add daa add mov xorb mov cmp lea lea inc cmp je mov or or (bad) ja add pop xor inc sbb add or test je cmp pusha jne push call jne add jne sbb jge jne add roll movmskps das inc adc jne or add add add jmp xor mov mov orb or adc cmpl add test inc fsubr jle add add lea pop add inc ret push call data16 out rclb roll jne mov add pop je or add jg add add adc push add inc add push add pusha add jo lea jne test (bad) je mov shr inc je jmp lea inc lea dec adc testb mov xor shr add sbb jne and je add cli pop pop add mov neg add add (bad) xor push mov addl add add jne rorl add add xor jne pop add push (bad) (bad) decl in xor cmp jbe adc cmp add add cmp or icebp pop ret xor push or add add add add call adc adc adc mov or clc push loop add inc push add jne call out add in add decl (bad) jmp testb xor push call add clc call add and (bad) call add les test sarb inc jmp mov sbb (bad) je push call incl addb pop push imul xchg lret add dec add pushl rorb setne add outsl movl or or or in mov call lcall gs test test sbb inc in adc add push push call pop ret push push and cmp (bad) nop jne call add mov mov js add sbb jb add aas sbb call add fimull lea cmp inc add mov and pop shl mov movsbl inc push add loopne je adc pop stc adc add add call adc call loope sbb adc lods jmp addl in cmpl je sbb in bound or enter xchg add add lret ret xchg add push call mov adc sub push pushl lea dec call and or lea cmp add mov mov movzwl jmp mov pop or jge or mov and push call pop add or mov add cli add jmp xor mov (bad) adc add dec push incl jo pushl lea inc push push lea push add add push call addl add adc inc hlt je pop mov andl add shr movzwl andb or jge add sbb dec lock pop leave add mov push pushl lea add mov add mov cmpl jle add push sbb smsw add les cmp add jnp movzbl jmp adc mov add ret or xor sub jecxz lods pop add adc cld mov pop std movb or pop adc add adc movb push clc push add lea push push inc add add call adc je clc add movzbl je (bad) mov stc shl or adc mov adc add add mov add sbb add push jmp jne call pop ret add sbb push mov push push push add je mov jne mov mov mov pop mov lea mov add in pop je or add movb movl push cmp ja push add cmp add ret add movb loopne or (bad) xor cmp je mov jb neg mov xor pop leave and je inc add mov or adc push or or adc loope ret push mul mov addl and add adc add pop add mov push or push push call ret pushl add add cmp jne or addb add jne testb je push push call add mov call pop cmp (bad) je push call push add inc test jne call clc jmp xor push sub xchg hlt add add or pop shl pop add inc xor test je or call enter xor pop pop add push adc add add pop add cmp jne call andl call mov enter movsl test js or sbb sbb sbb pop add adc or call (bad) jmp mov add orl pop or mov je push call pop andl mov testb add call fwait mov jmp or roll or orl mov inc cld add (bad) call mov call add mov push call xor sbb inc or addl push test je pushl or push xchg (bad) incl sti (bad) pushl rcrb push mov mov roll jmp or add mov call push cld add add mov pop pop ret add sbb inc add mov mov push lea hlt call push lea push movl cmp xchg (bad) dec jne xor dec or sbb dec mov add hlt sbb adc dec jecxz xor sbb dec add and push add inc or je push call or and and or or rolb mov mov mov add cld mov cld jmp pop leave ret add xchg jmp mov incl lods push push push push push fs xor cld movl adc test push jne add call pop mov inc add loopne mov inc mov mov pop cld mov mov outsl pop inc pop or push sub add add mov rclb pushl cld pushl pushl incl jne push or mov add mov add mov inc clc mov pop adc cld mov jne mov xor call ljmp push jmp jbe pushl add adc loop add call (bad) mov push cmpl add mov adc add rolb mov mov movl adc adc mov inc loopne inc sbb jge inc add cs inc in add inc add add andl add add insl clc mov mov lea or movl cs mov inc adc mov (bad) decl mov aam inc int3 push add pushl adc push aam add enter jge add adc fmuls or inc enter or or cld add and call inc or mov add movl rolb jmp push add adc jo or push adc push or ss add add js add or jne add or pushw or lea push adc dec call les mov push cmp mov and loopne outsb pop sbb jge mov mov add mov jmp cmp pushl call dec add dec mov imul add inc cld cmp jge cmp dec or add or dec add int3 mov cmpl add ds mov add pop or add repz call aas add adc add mov call arpl dec add call mov push mov push adc mov and add mov cmp je add ds jne inc pop ret and rclb call or or adc nop add dec cwtl add mov add jg adc or or je jnp add icebp pop pop jmp add adc jmp or or gs add rorl add mov inc adc adc inc in or movsb mov addl push pop call or pushl push add call add mov add ret mov mov adc add jl add movl add imul adc xor sub add (bad) cmp add test add or xor or ret mov add jge add add sbb add loop ret add add in adc dec push addl mov movl aaa add testb add call bound (bad) ret or and test je lea adcb add fiadd roll adc rorl push call xor xor add and push add add or inc adc add add add pop add rolb add or cmp je or sbb loopne sub leave mov and andl xchg mov mov adc add decl or push or out mov mov or cmp add mov mov or add addb andl cmp add (bad) (bad) jle cmp add add mov (bad) mov mov mov loopne inc cld add inc addl roll adc push add pushl add xchg or popl inc jmp sbb jne call lcall mov add mov or jne jmp cltd add add call jae add add test scas add add fnstenv (bad) add or ret mov add cmp adc cmpl add mov cmp sbb stc and add or jne push cmpl add mov cmp mov add ret push dec push into mov or cmp add sbb mov add push pushl mov call fldl addl setne add sub call push dec inc mov mov push add add movb mov push add dec add mov push add add adc or pushl call call andl add incl adc push push push push inc sbb add mov lea test fstpt mov shl add inc hlt add mov push mov add hlt push call les test jne dec add sub add dec add inc add add cmp jl pop pop add push mov adc es jne add mov add sbb add jno add dec cld (bad) call push push add adc test and mov in push and mov add mov pop in gs add faddl pushl lea push call lcall mov fsubr push add orb aam clc scas add orb add mov fild or pop add add inc adc jne pushl push inc pushl push call adc adc inc add add inc outsl mov call and add mov add sbbl push incl aam adc mov cmp or sbb adc push add add lret cmp or mov mov dec rorb push push push push sub lods cld add les xor add add add movl inc adc roll adc push mov inc in ret mov incl jmp add daa mov inc fmull call pop call dec aam mov add dec rclb or cmpl cmpl (bad) cmp inc adc or push adc or and jge int3 add cmpl movsb je add loopne xchg pop add adc and pop ret push push lock mov in inc adc add pop add test dec add mov cmp jne or add cmp add add add add je add push cld xor inc push add jge incl ja call pop adc jo test add adc adc add mov mov push mov add push sbb in add add push jmp jge mov pushl sbb adc sbb dec int3 sbb cltd add test ja sub add jg add test push add jl (bad) or push jmp cmp jne movsb call popa add adc dec push add es call adc mov cmp stos pop adc sub cmp or cmp psadbw add adc pop add inc add add (bad) call cld add jmp or pushf or add xor call add push pop add je mov add or jae push or pop add or dec adc push pushl or pop push call add pop dec jne xor add mov cmpsb add pop pop push add push call (bad) jmp adc mov sbb hlt sbb ret add imul dec mov add in cmpl je adc inc push pushl call add cmpl add add push jmp pushl fs aaa add push mov stc add add mov es add mov add adc or inc cmc add sub push push call inc ret mov outsb in or add adcl add add add stos (bad) incl or je call decl test pop je mov cmp loopne sub pop and jne add and xchg add call les test jne add cmpl jne add int3 loop decl inc hlt push lea push inc add testb dec add add cmp jae addr16 mov push add jl cmp jo jg mov shl add dec add push hlt test (bad) je cmpb jne sub add andb or test push and lods add inc clc add sbb arpl adc pop add mov leave adc or push mov mov push inc push movb cmp push movsbl jmp mov dec or incl jl cmp jl call or cmp jne,pt addl adc mov add test add add ret je cmp je cmp test add sbb test or or fwait add mov add test add add push mov std jnp push addb add push push mov cwtl call add loope mov jne add jne or push gs pop or or add pop mov sub xor dec cmpl je push add xor add add mulb mov and add push pop test (bad) jne xor cmp jle sbb dec add push call add or add loopne ljmp add add dec clc (bad) lcall lea inc or dec int3 movl adc xor (bad) ljmp xor lea inc int3 faddl out jne inc movsl add add mov or sbb jge inc jbe inc sub add add call push dec lock (bad) cmpl jge add lock fdivrs or (bad) add cmp dec hlt jg pop add cld mov call mov add add add mov add and jbe add add (bad) hlt mov call add test jne sbb dec in add cmp inc in jg decl addl hlt adc nop mov mov add pushl movb add sbb sbb movsb call add or les inc lock or cmp invd (bad) push incl push jge cmpb add cmc call pop pop cmpb jne and jmp add jg test je push call adc mov psubsb cmpsl push (bad) (bad) call add call jge add mov mov adc add add add call add call mov cmpl jbe es jne adc or push or add push call incl cmpsb add or add rcr add lcall pop leave ret mov call in add mov sub jne inc push push pop orb add sbb call add add sbb or jae mov mov add xlat je cmp xorb and add (bad) jb testb or test add add js add test addl addl jne push and rorl fidivr incl cmpsl adc inc push js add inc addl pop cmpl add cmp cmpl add cmp jbe daa mov mov test mov and rcll pushl or adc jne or call add jmp jmp jne sbb jne and call xor inc add pop ret int3 add add jae mov inc or rorb cld orb adc movsl and add cmp pop pop mov pop add push mov cmp add mov call pop pop pop leave ret or add lock or mov (bad) ljmp or movzbl setae addb test pop jne or pop cmp jne add lock mov mov mov add mov mov rorl repz dec cld je mov clc andl adc and add inc or inc test je mov mov cmp je inc mov or inc add sbb jmp cmp je or stc inc adc out mov add cmp je mov push mov cmp pop add dec mov inc inc mov add testb or (bad) fldz add fcompl fnstsw and les add or rcrb push push cmpl add movsb je lea nop push call dec clc add mov mov mov add adc push addl add mov mov add or ds call add add push mov lock je push call incl push add adc cld jb push or add or fs (bad) incl add push mov or lds and add push add add mov leave cmp fnstenv call add pop mov call incl sbb mov pop pop add ret cmp jbe cmp dec or add xor rolb ja or fild xor jmp add dec sbb push or rolb setg xor leave cmpl sete mov shr add add sub push movb lea add adc mov mov mov mov inc mov xor sarb sbb xchg rolb inc or lock jne add sub add pop or in adc push call or rolb je dec add inc adc je movb mov add inc add jns push neg movb addl fs cltd push pop add incl inc add or or adc mov add inc add add adc pop je cmpb add push lea push xor xchg jno sub rolb pop xor push add call dec mov push add mov adc lds add mov push mov or push pop push lea add dec aam pushl adc xor pop add add adc add sbb add pop mov jmp mov adc clc incl jne or jmp xor or sub xor addb roll lea push push add adc add add push call add cmp pop add jmp pushl lea aam add jne mov movl std (bad) decl add add add popf outsb (bad) dec ret sub incl movl pushl or lea (bad) incl in and push add dec fadd add incl add xor adc inc cld xor int3 call (bad) cmp jge mov jge mov cmp jne and mov pop pop and or pop in and (bad) inc cmp adc mov add or push add lret test sub add mov mov mov enter add push and xorb cmp jne test jne cmp sar (bad) adc pop inc add push call sbb adc addb add test mov andl std jmp cmp push sub sbb movb add enter add mov push gs push call add test je add sete dec add jo or inc add jmp addl or je push dec mov add sbb sbb add push mov add add lock leave ret daa xor or inc jne movb add mov pop and addl add add dec adc jo add jmp add add sbb or add jne mov jmp and or mov or dec clc ja or ret mov fwait mov clc add add adc jle mov add push clc mov movswl cld and and sub add add add mov cmp jbe add ret mov subl add push mov shrd add jmp add cmpl mov hlt add or add add jbe add cmp add stc inc jne movb xor out cmp add adc pop cmp add cmp rorl inc incl pushl push push call incl jne mov out add movsb mov add mov add call (bad) shrl inc in push pop add sarl jg cmp inc jb movb add jmp or or fcoms rcll neg mov add and call (bad) jb add push push call add mov inc mov lock mov cmp jne or add jb push push lods add adc add add test jb add or es add arpl or mov add add lahf je mov pop xor rcrb adc push pop ja mov mov add dec call incl add nop pop fs (bad) (bad) incl inc clc adc add add xlat cmpb add jne jne adc jb sub data16 add xor cmpl add add mov test jg sbb lea call incl push push call incl sbb les mov repz add jae add push or adc arpl and inc adc mov add jg add test jns es addb jne cmp jge jl mov mov add ret call push subb call xlat inc sub pop sbb sub mov xor mov or add push pop push lea push add jo decl xor add cmpsb add test pushl call xor call mov jmp insb push mov add adc or or into or push or add fdivs leave cmpl sub sub mov dec fadds into or push add add sete add add add add je movb jmp add jne lea push adcb iret call add pop mov pop xor inc pop call push rorl push pop push sub add add divb test jle mov add adc push dec adc add fdivs rorb mov xchg lea cmp add or jmp sub add lea jne push push call dec adc add push mov dec cmp add pushf roll cmp jge test je or jne inc mov pushl add push add aas mov add iret xchg jmp adc push add mov add sub mov sbb push push mov cmp add clc inc je addl jne add add pushl pushl call adc ret cmp (bad) je cmp je and imul sbb ret jmp or sbb add jmp inc sbb or call in push or mov push pop (bad) (bad) decl add add push push add add push xchg call add or add call pop ret push or add lea or fs add adc jmp jne movl xor mov xor add jge add rcrb int3 or add add leave push scas add testl mov std add push movl xor shr mov cld pop leave xor sub add add call int lock jle lea push push add push mov add or adc mov dec or inc mov dec and adc and andl adc cmp adc jne add mov adc sub pop ret add add pop (bad) pop add in sub in add push mov push add addb outsb incl cmc and push xor push add push lea inc fcoms add add mov add push add push or add jne cmp jne cmp pop call in add std push pop jmp and sub add and add add add add into and xor pop bound int pop call push dec test push and fstpl cld test fisubl test sbb mov adc mov add cmp jne call ljmp pop mov call mov jmp add jbe mov mov push cmp jle mov inc and adc call and pop mov mov jmp push add xor jle mov add push add mov push add or test jg jmp add cmpb jl jmp add add dec cmpb je idiv add add inc add adc in ja incl push push call dec adc rcrb pop pop ret mov dec push mov or mov push push mov add jmp and add incl add and add inc or inc add and movzwl mov add decl add pushl cli je addl add sub pop and sarb ret adc lret add add pop mov mov jmp mov mov add mov shr shl and rorb push cld add shl or adc add pop add or add push add or cmp in inc or pop pop and dec or in xor push mov inc add adc adc faddl mov push call lcall lea loopne push push sub or jne mov movsl movsl add call mov jne mov movsbl loop add mov inc add inc in pushl sbb dec jbe incl (bad) jne push mov mov push (bad) push arpl push (bad) xor push add call dec push push push xor add in mov or add inc inc mov add fdiv fiaddl add sbb inc adc sbb add or inc jne mov add inc xor div mov add adc or mov mull enter add add jmp add add push and add shr roll (bad) ljmp hlt add add sbb enter xor add jb cmp sub ja jb cmp add dec sub sbb fildl or add add neg add mov mov flds cmp adc pop add adc int3 cmp add cmp jae verw mov xor rolb ret xor inc mov add jmp enter add test je and divb jle call add mov mov decl or add push mov jmp add add or mov and push jmp call pop pop xor pop pop push or sub and mov dec int3 movzwl push mov flds dec enter push mov mov and mov and add aas add shl push add clc cmp pushl xor add sarb test jne add clc add rolb cwtl add add rorb push stos pop add mov adc add in movsl add add dec add loop add ret add add pop add orb fdivrs dec or loopne lea push add rcrb inc shl add je add add shl not test lock cmpl add or test jmp mov inc cltd push pop and or add add jns dec or add mov iret xor inc roll loop dec test mov add cli mov mov cmp loopne and push loopne sbb test je add or adc and cli jb addl add movl dec mov mov mov dec fdivrl mov mov dec rolb push add push add jge lea xchg sub xor add stos cmpl je or movsb add mov sub cmp jge adc add or add cmp (bad) (bad) or or inc aam jne in enter cltd or add or andl add iret mov out xchg and xchg add push fdiv xlat mov add xor mov add out add mov mov add out inc loopne jge add mov jl mov add shl lea add into cmp jl mov xor fs lock sub dec jns mov xor inc add add or mov adc lret add add adc je cmpsl mov add cmpsl dec or inc and xor sub adc cmp cmp jb cmp add test adc pop add add or cmp add add incl xor fimul and enter push and add or lea adc lea add or adc addl std outsl xchg outsl push xor pop mov push add or cmp jl xor push orb and mov mov mov shrb jmp or mov jg cmpsl into push (bad) adc movl dec add mov mov and into add (bad) adc jge add mov roll fdivrs (bad) lret rcrb or shl mov dec enter leave and or mov or cmp jne add hlt mov add adc or add mov add int call dec ret mov push mov add inc add add lds or mov mov movzwl dec or flds add mov mov push mov mov (bad) mov and add add loopne adc dec hlt mov add pushl add (bad) sarb test add or xor jmp add sti push stos or mov adc push lea lea movsl add pop add cwtl dec lea les rorl aam inc fcoms sbb push xor pop sub lret loopne dec rolb lea add stos outsb mov daa stos out stos dec nop or inc add sub psubd dec test mov add mov jge mov cmp jb and push loopne sbb mov adc cmp add int add add adc mov add jns mov dec fmull jmp loopne cmpsl and add jge lea sub enter stos cmpl add mov or sub jge add and jmp cmp fmuls (bad) or or inc aam lea mov lea add add movsl lcall jmp add xor inc add and loop push mov rclb xchg push stos lret add add (bad) add or and jns dec orl loopne add xor sub or loop mov lea inc cmp jb cmp add test jmp add and lea xor (bad) cmp add add incl xor fimul and enter push cmpsb jge add or lea adc lea add or adc addl fadds andl andl add out pop stc xlat mov pop loopne pop popf lock mov into and add add out add add jne mov mov or out notb fistpl pop jmp cwtl cmp jl xor push orb and mov or jmp or andl andb and mov add iret and test or mov arpl out pop jge add lock shl add into cmp sarb xor jmp andl add jmp push cmpsl or shl mov inc neg sbb and or mov pop add cmp jne mov int3 mov mov mov adc or add adc pop xor int call leave add mov push mov sub jl and adc lds mov mov xor add (bad) mov mov or push mov lea loopne dec mov dec mov dec test dec movsb add pushf mov mov dec xchg cmp jne pop call movl call shr cmp add mov mov push lods mov cmp je add je cmp je add jmp add cmp add xchg add jmp lea iret add push pop add fisttp or mov cmp add push pop jmp (bad) mov je dec add or test jl push jmp push pop add inc mov addb jmp movsb andl add jmp xchg add jne add stos xor add add scas cmp je and je mov das add add or cmp (bad) xchg add push jmp dec xor jmp add dec jbe pushl dec je cmp je adcb adc add add jmp cmp jg cmpl sbb incl sub ret mov inc jmp incl mov add ret jge sub inc add push imul add dec mov jne es decl cmp jmp add add sbb add adc jge jmp sub inc add cmp ja add stos (bad) (bad) decl dec lods or ja push or xchg add push adc push cmp xchg add add ljmp pop jmp push jmp jne mov je sub cmpb mov push add cmp jmp cmpl add or add les pop mov roll cmpl mov mov adc test add add sbb inc mov adc jl incb and sbb add add fldl and pop push pop add stc or test std adc (bad) jmp add leave jmp sbb jg imul add mov rolb add jg or add add cmp (bad) pop add adc icebp jmp dec mov add cmpb je lea inc les jne lea loopne call inc pushf add rolb cwtl add neg add cmp push mov sbb add jne sub cmp (bad) and add cmp decl mov rolb jp jmp lods cmp je add pop add add adc sbb push adc push xor shlb les push lods sub test add jmp xchg test add mov sarl add pop mov test pushf add imul lea sbb mov add push mov lea movsl movsl add pop mov xor mov mov inc aam inc fmuls mov or into mov and push and and jge jne movzwl inc cmp jae and (bad) jae std add iret ja mov into ja or scas jmp add cmp jne inc testl (bad) jg adc jne cmp inc jne or into jmp add (bad) jne inc testl cmp jne cmp xor mov mov enter jmp add lea movl inc cwtl mov add rorb push add inc movsb lea or add movsb movzwl movzwl addl mov imul mov cld lea cmp jb cmpb jae movl cmpl mov add incl addl add dec pushf add mov incl decl push jle jg add test leave jle mov test add mov mov add gs call add or shr lea add or add movb into add push dec or add jns mov testl add testb add mov mov jge mov shrl add pop shr or add shl shr or dec add jge dec aam sarl jne mov add add mov cmp ja adc (bad) incl add cmp add cmpl jne or (bad) jne and add cmp push fidiv add inc jmp push incw jmp decl adc incl cld add enter (bad) xor leave cmp mov or xchg roll dec and addb jg dec int3 jmp mov inc (bad) or add mov mov mov dec into jmp add test lldt dec and add andl mov inc int3 cmpl jne decl mov les add shr jmp movl add or xorb add add jmp and adc leave add mov or data16 or ja mov pop add int call dec ret lea add add outsb add add add add dec add inc push add add add add push mov sub mov adc lds mov adc mov add mov push mov sbb inc mov add shlb jge add mov movl movl inc fadds movl push movb jmp add push and or test jne add test roll test jne cmp cmp mov setne sar and add mov inc add inc add xor movb xor inc jmp add rorb les dec or adc xor mov enter cmpb je test jne push and push xor push add call pushl rolb add cmp or inc push or push inc add add sbb lea inc add push push call incl jne mov jmp push adc sbb add sbb imul add movzwl mov imul add sbb jmp lea imul dec lea in sar movzwl mov dec loopne mov add sub neg mov inc mov mov mov out jge mov (bad) test (bad) adc pop add or test or test cwtl push add and or test adc or orb rorl cmp jb mov lea jge movsl movsl lea movsl add dec (bad) mov xor add lock hlt mov movzwl inc mov xor mov loop in push test push ljmp xor (bad) mov or cmp jae cmp jae mov decb xchg nop add mov adc add mov mov mov add xor add jne inc testl jg adc add cmp jne xor shlb ljmp inc jne inc testl cmp jne cmp je mov jne lea (bad) or add lods mov push rolb mov test sarb lea adcl or mov nop movzwl add movzwl add enter movsb add jb add (bad) jae movl cmpl mov cld je incw addl add dec add jg mov inc mov inc lods add dec rolb lea flds testl add dec lock gs add shr pop or mov adc roll pop add or add add test jg add dec or add inc jns mov neg add add clc testb je incl inc mov jne add clc shl pop shr or mov add loop shr or dec add jne test jne cmp mov dec lock mov cmp ja adc sub add add addb jne cmpl pushl andl add sbb gs add dec cli add pop add inc jmp data16 inc cli jmp incl adc add cmp sub (bad) cmpsl add xor pushf cmp test inc in xchg add loopne dec and roll cmp mov xor add fimul test (bad) incl mov shr mov add inc lret lahf add add pop (bad) inc mov add add push hlt add fidivl flds enter jecxz rorb movsb movzwl sbb dec add or or ja push pop lock xor add cmp pop mov test shl add mov mov out mov jmp add mulb jne sete rorb rolb jmp add enter inc testl jne cmp jne cmp inc loopne or push ljmp cmp jne inc (bad) or fmuls and sbb and je inc adc inc lods mov dec rolb mov test leave jle lea mov test inc add add mov out or imul mov lea or fidivl cmp push xchg xchg add pop subl add nop add jg andl lea idivb aaa mov test js push mov jns mov ljmp mov add jg shlb jg orl jns mov push mov notb mov mov mov mov or mov mov cli inc adc lock add inc movsb add dec test cmp add movsb add add jmp add test gs and add inc call add add add cwtl add dec jg add mov mov mov add xor xchg sar add add add add jae (bad) incl cmp jle push pop add adc add add inc ljmp add inc loopne add mov shll add call fmuls pop add or incl dec mov inc call idivb neg enter add sub and subb loopne shr add add shl shr or or xor add fmuls pop add pop add mov nop rorb mov mov or in jne lea movsl les jge add push or lret call out pop add or and add mov shr or enter or lea add clc jb cmp jae sbb cmp add cmp jae xor rolb lock je add inc enter mov push mov (bad) jae adc dec int3 add or lret aas mov mov jne mov jmp add and add lock mov jge mov mov movb add (bad) dec (bad) (bad) decl jmp cmp jge push add inc cmpb jne or add dec cmp and mov add add add add add fadds mov add inc add mov add xor pop add lods inc (bad) dec ret andb xor dec add mov add fnstenv xor mov mov movb add xchg ret and or push add adc xor inc add mov xor test je add ret or enter ret add or test add adc ret add and ret add or add add mov mov and lret add add je and je cmp into je cmp jne or add or add inc add add sbb enter add je add push or jmp or and pop add je adc add ret add mov push push push mov ret add ret test add add add rorb add ret or cmp mov ret jae sub mov into push je cmp add sub cltd pusha or inc add add add mov inc and pop pop cmp je or add rorl jne or enter or mov push add push push push add mov inc xor or push pop or cmp add lret add inc or test add add testb push or and mov mov (bad) and cmp add or (bad) jne adc xlat jmp add add lods ret add add iret je add adc jne sbb add jmp sbb mov add or add es mov mov add shlb ret or add je mov call test mov inc clc fldcw add adc mov fmul and je sub sbb or mov add add push movb and mov push or ret cmp adc test out add add scas pop lock add pop test add test or test add add and add add add and int3 je add je add add add lret jne or add into add add add add sub je sbb sarb je jecxz or add add cs or add add mov mov add inc or shlb (bad) or sarb (bad) jne mov jmp call push add add add pop add hlt mov xor les roll rcr lret or aas add add or hlt or or add into add lret js and push dec add add jne adc add add jnp and sub je sbb jmp inc add add add movl mov xor or or roll add addl pop leave ret adc add mov push xor push and inc cld dec add sbb mov mov cmp or xchg mov mov mov lea movsl add cmp roll pop lea or mov push adc repz shr add rorb (bad) mov add leave shr or mov add adc test pop or add (bad) mov mov mov dec or (bad) jb cmp call adc add cmpl mov je add ds lea cmp jb add and je add add mov or sbb aaa cmp jb cmp sub add add andl add repnz add dec hlt add or movsbl lea mov call into add clc add clc add inc dec add sarb lret add xor inc add dec add dec hlt es add push decl mov or push add or xchg add add jne mov mov add add mov cli mov shr shl adc out adc (bad) shl adc cmp add js mov add movl xor sbb xor icebp mov add incl (bad) add inc or add or add xor je mov cld pop pop mov pop add ret push push adc insb (bad) (bad) pushl rolb pop nop je testb inc je cmp adc inc cld fxsave push or mov mov add add adc sbb rolb xor inc ret mov add and or das (bad) (bad) (bad) (bad) jmp dec adc call int3 or mov inc or cmp and lea mov hlt xor call add jmp decl sub test mov add mov mov xor jmp dec or xlat arpl cmp or adc adc clc xchg add add hlt add mov add mov inc lock fst add jno or jmp inc add add add add add add jmp inc and into aas add fs inc arpl xor cld sbb add and or add or dec add pusha sbb mov and outsb add les out adc and call add ret add adc add jmp nop add push sbb sbb add xchg cmp lock jmp add jmp dec add bound push add rolb adc add mov add jl cmp adc lea add fadds sub push adc rclb rolb mov int or push add or inc add hlt add mov xor add or pop add add adc or jnp cmp lea sbb inc add jmp ljmp push or add (bad) jmp decl mov push lahf or or add push or and imul bound add add add push clc add xchg mov sub lea jmp add sbb dec adc das add or or sbb push add add pop or cld add xchg mov add dec and push shr add cmp add in add lea lods jmp jl add inc std add dec xchg jmp test lods or aam test add add lea sub pusha inc or mov add test stc mov enter nop pop and jmp bound rclb add add dec stos add and enter adc add adc jne jmp inc and or hlt add (bad) xor dec add push fcomp cmp adc push add push inc xor test add and xor jmp mov xor xor or int3 add andl add xchg add ret dec lock jmp lret add ds lods add cmp inc add dec fsubr and call ret adc add add mov jg cmp add enter faddl add mov add sub jmp lcall popf add dec aad cmp adc mov ret and jbe adc add mov add push add adc add dec add mov sub add and clc add jbe adc or addb frstor sub out cmp jmp testl jmp lea jmp adc enter add rolb or dec rolb mov cmp cmp nop add rolb sbb jo add xor jmp dec add mov mov clc lea sbb and pop add loopne and pop adc dec mov xor cmp add lea jmp stos rolb push or fs (bad) adc fwait adc add sub addb decb dec fadds or adc leave cmp and inc xor push adc xchg add pop mov sbb fldl add xchg or lock insl iret cld decl add add dec in dec divl dec add add sbb popf or in sub push add and inc add and lea jmp or sbb aam sub sbb sub jo sub and sub mov std and aaa mov xrelease dec sub pusha mov pusha test sub jo push mov cmp jmp jmp xchg add adc add push add add add or mov sub dec int3 int3 mov lock push hlt add sub sub int3 orb std adc dec aam dec add stc ss pop lods add jb xor lods fadds pop roll or add dec adc mov jmp push jne add test fucom and add adc sti add jne add mov aam mov add sbb add dec dec cld add add mov push mov in add lea jmp popf lock cmp js cs sub or loopne dec add xor call add fnstenv add xor push add cwtl mov add add add sbb pop pusha enter pop pusha orb fsubr js or or cmp cmp push mov dec int3 push jo adc push and faddl jo add jl cmp and aad sbb adc add mov xor xor enter lea dec mov and xor fdivr adc xchg mov addl incl add mov add lea jmp in jmp inc lock call pop ret or add int3 xor adc add mov jecxz dec fsubr test add dec (bad) jmp xor test xor sub xor sub adc add sbb js add or (bad) jmp or movsb mov add or mov dec (bad) adc push pop add dec add xor add push add or (bad) inc mov lock jmp and jmp push and or lcall hlt add xor add mov mov add sub add imull orb or lea push jmp dec add pop add (bad) sbb cmp mov or pop xor push add sub xor adc add xchg sub out add mov sbb mov inc add aad test add lock inc or add shrb sbb add cltd imul adc push xor clc add in pusha cmpsl add push adc popa add push add fiaddl scas add dec in dec add xor add mov roll push add push jmp inc or push mov lcall jb add adc dec xchg add lea add movsl or or or lock nop add jne jmp push jmp addl (bad) mov xor mov aad pop add adc add or add adc verr add add (bad) call scas add fildl and push mov mov add mov dec cld add dec add fs lods adc adc pop add js and das insb add das int3 mov jmp lods inc call push call add sbb test prefetcht0 or (bad) xor push add inc add cmp call call jmp rorb add add mov insb adc in jmp cld jnp adc adc in add adc add enter xor (bad) mov out add mov pop jmp adc clc add jmp add add adc or lea adcb or xor dec add stos adc add pop add test push int3 add add add or mov pusha push pop jmp add ret add mov cmp dec add mov add rolb sbb or or pop xor imul loop add sub mov or sbb and add cmp add sbb add mov xor clc and rolb pop call gs fadds dec (bad) sub add add ja cmp enter add xor or std inc mov test mov add les sbb cmp lea add call dec les or mov cwtl add mov dec test cmp add add cmp inc add fadds add (bad) fild jbe or inc jmp jmp mov insb add or dec push in xchg sub add stos add push cmp xor sbb daa add add dec mov add and push push adc shrl push and hlt add mov daa nop add das pop add or add lea jmp push les sub dec and or test int3 lea jmp push add pop add call or add or lea jmp add jmp add sbb add jmp mov jmp incl or or xor aad adc frstor jnp sub decl pusha add push or dec mov adc repnz inc in stos test xor add pushf add sahf and xor add push or repnz add add add dec add lods add push and add push add call test sub push push jo or pushf sub adc add jmp (bad) jmp orb or xor sbb sbb dec int3 int3 mov inc lock call sub push insb (bad) sub sub push pusha sbb push or popf adc adc (bad) push ja add push and lea movsl mov dec movsb add add mov addb mov jmp daa add add cmp sbb add and sub add cmpsb push cmpsl add push and je add mov jmp and movsb clc sub ficomp add jno xor push lea jmp xor push call cwtl stos adc push fwait mov cmp or pop jmp and pushf add mov add adc or clc stos jne and add add cmp cmpsb add inc cmp add xor xor inc aas push add mov mov add call jmp push and std add inc mov add inc add (bad) or adc pop mov sub sub pop rolb pop adc add adc in fisubl lret hlt add scas add adc or xchg daa or lea aam enter add add sbb add addl add dec adc add lea add mov jmp push xchg inc add sbb mov dec lock xor inc stos adc add push add test xor lea jmp dec adc jmp or and add sbb lret lcall mov scas aam sub push in add inc or add lea jmp incl rolb or cmp and add lock or lock popf add jne or jmp lock add pop or ds movsb adc int3 int3 lea xor sbb push adc mov mov sbb or mov call adc cmp adc test add add popa xor mov or or incb mov push call inc lea jmp incl out or cli aam push sub push adc lea int3 jmp inc test insb call (bad) mov adc or test xchg and movsb add inc add add or add jmp aad int3 sbb and and add mov add xor insb push add or inc add jne jmp inc push push add lods sbb inc or inc mov push call ret mov mov (bad) adc fcmovbe and pop mov lods fwait add or xchg add mov or lea jmp adc mov rclb add loop add (bad) adc pop add test and arpl or dec aad stos cs inc add cmpsl or push mov add sbb in add jne inc and ljmp lock test mov or add fildll add in das xor testb add sbb mov jne add jbe sub sub mov jo call pusha dec in pop jmp lods add mov mov cmp call xor push or adc dec loopne mov add mov pop or or fsubr call inc lock call add cmp add roll cmp adc and add sbb or push mov push call add dec popa add or inc lock and dec add add xor add adc mov add sbb sub or add mov or mov dec or cwtl das add or (bad) sbb sub mov push call sti faddl cmp shll add push cmp shrl popf test sub and add add mov jmp adc hlt add jbe xor add out lahf and add or cli add jge jecxz or and jb or push inc sub add cld add lods sbb lea mov pop jmp sbb jmp nop pushf mov cwtl add add add cmp dec add xor add sbbl jmp add shr add mov enter rolb sub add push movsb add push sbb jmp rorb mov sbb jns sub and add das sldt and lea add add inc in add gs call ret xchg or add add mov stos adc or add cmp roll inc or xor add adc add ja xor dec pushf std decl jmp adc push js adc xor xor push mov repnz or xor add add mov pop or adc add addl leave add mov popf sub add test adc jge add and and mov jmp inc or sbb adc mov add lock pop xchg add mov inc add mov adc add mov sahf outsl add add add mov or std roll jne cmp add aaa or jmp aad fstpl adc and sbb adc jne pushf leave adc jmp add add add cmp sub adc sbb test add call push call adc call sub inc or (bad) xor push adc xlat add add call ret mov jmp add fistp add cwtl add pop or add je add jne pop jmp adc test add les and or add push pusha mov movl jmp sbb add clc add out adc add jne jmp xor fs add je adc cmp pop add lea add add dec and add mov orl clc (bad) decl rorl adc movsl add decb push jmp bound add add mov add mov cmp dec add lea lods jmp stos int3 add cltd add movsl or popl or or xor push push call test in or int add jne add or push pop adc sbb aaa loop adc cmp sub or add and adc pop mov add xor (bad) jmp decl (bad) dec add inc or cwtl mov cmp or call dec mov add dec cld add jecxz or pop add add add inc lock lock call inc adc aam add add mov cmp sbb add add jecxz incl lea jmp add pop std incl inc les pop and mov mov dec mov movsb push or or cltd (bad) incl add add or mov es push (bad) push jmp or jo int std decl xor call pusha adc or pop movsl and sbb add add adc pop add pop or int3 mov aam add add add shr push cwtl add daa dec add test aaa mov or or push mov js add sbb add adc pop loopne adc or add sub in aad mov add call cs or add daa mov inc movsb clc sbb out push add jno inc xor loopne mov pop add lods std int3 add jnp add or cmp or lea jmp add rorb or or call add add mov xchg or lea xchg add lea mov or or or or je or or out add sub mov stos (bad) cld idiv mov mov jnp add add push push add or jle or int3 int3 lea or enter inc in push call add inc push add add sub add inc orl jmp push dec (bad) jmp add test loopne adc sbb js add or mov add pusha add add inc or or add pop push inc sub push add xchg dec add lret cs int3 add sub dec rolb pusha sub jp add mov add add dec addl or cwtl jmp add lock add (bad) jmp cwtl jmp fadds adc xchg mov nop add sbb add adc inc xor mov cmp addl add inc lock call jne add jmp ds in call and sbb cld decl adc loopne call dec loopne add add jne add jmp dec in jmp cmp or push and or leave add mov xchg adc sbb and jmp inc call add add add add lock or sbb adc adc add or icebp (bad) leave add dec call xor jg sbb pop and add and jne jmp adc pop jg add dec add repnz inc xor mov in add dec add js xor cmp lock jmp cmp or or jo add add mov inc (bad) or pop mov shr mov or jmp inc mov pop add mov lock cmp mov pop jmp add rorb or push jmp adc mov adc test or jmp push (bad) incl popa pop add mov imul nop sbb push add xchg sbb and add test add addl mov lea jmp ret or add sbb add aas xchg or adc lods add push adc push cmc add mov and pop jmp adc call add and add sbb mov sbb sbb and sbb jae inc mov mov mov add cmp sbb and or xchg fdivr decl pop add add push pop aam mov xor (bad) faddl cwtl xchg incl or push clc or aaa or push and ds add loope xchg incl add adc mov dec (bad) jmp jne (bad) addl in (bad) (bad) decl jmp mov adc shrb or xchg les pop xchg add xchg mov add add mov push call add add add or inc add mov mov xor jp rcrb xor sub aad jne call loopne addr16 loopne xor xor clc lds cmc adc push mov scas add mov cmp or add enter movsb (bad) jmp jmp inc pop mov ss outsl add mov call inc mov sub es aas add mov mov bound push sbb repz add mov or add cld add mov jmp gs add add and jmp add xor pop add inc int3 add jmp incl push adc mov add mov add test mov nop or add adc aad cmp and rolb cmp add or add or jmp cmp mov bound jge cmp jne add sbb jg add or sub or pop add movsl add inc lock push call adc add imul es es int3 or dec or dec lea jo inc or dec add lods dec or and add in push call add pop notl (bad) incl or pop stos add mov add pop or inc rolb test add andl incb fsubr test add (bad) lahf add sbb rolb dec pusha add (bad) and or iret mov sbb dec int3 int3 add push add sub sub or cwtl or lea jmp decl add mov cmp stos adc clc jo cs cs add mov add pushf jmp add clc ret nop add xchg mov and hlt jp lods add bound or jmp add sub inc sbb in xor and sar lea sbb call add insb add ficoml jmp lock (bad) cs pop lock cmp add daa xor cmp lea adcb out std inc sub fimul fcmovbe add inc pushf adc sbb jmp jne jmp jmp sub or or jmp push push add dec jmp add or mov movaps call (bad) decl cwtl roll jmp sbb mov dec push add push mov mov lea jmp mov adc xor or or or (bad) ja add push aad add add add pop xchg or adc dec in add lar sub add inc xor int3 add shr add rolb inc enter mov sub dec push add push fwait add or dec clc inc add add mov loop adc jmp or add add push and inc add rolb add add add int3 lea jmp mov push add xchg dec adc or fmuls fdivrl or jnp sub mov xlat add mov stos push sub lea jmp aam dec rolb cmp rorb in add cmp mov inc mov jmp aad xor and add or or mov and inc js cmp pushf jo or inc cwtl mov inc lods add add or pop add adc les cwtl or mov or js add enter add sub or jmp cmp pop add dec int3 inc add jmp aam jmp rclb push xchg add aam daa enter or add mov sub add lea jmp decl or les and and add sbb add movsl add jno imul or add mov add add sbb insb pop add mov into int3 add dec add push call inc add adc add sbb cli or rol add jae dec or int3 mov push call add pop adc add dec lock roll push call add inc loopne call adc jmp jne andl or leave mov test xchg rolb xor faddl iret and and inc adc lea jmp add and je add mov cmpsl mov aam outsb add push ret or or pushf movsb jmp push add jae xor mov jle cmp adc addl sub or add mov or lea jmp call or xchg mov add roll sbb add add loopne clc mov jnp mov add mov sub es add sub jo fsubr cwtl mov lcall cmp insb in add dec add mov movl and sub and or cwtl or int3 lea nop inc add mov add sub adc add iret or xor or or dec mov add add or fisttp cld add mov add addl fdivrs nop mov and add nop popl or loopne or int3 int3 mov jne jmp in jmp adc cwtl add adc call add sbb add rolb sub push or or or or or fsubr cmp or push or push or push inc add add fs cli adc push or (bad) cmp jnp push add test or dec and or add inc add shr ror cld decl std inc (bad) decl push dec movsb jmp in test cmp dec mov xchg add lea mov pop adc sub or push adc lea push add push or and pop or add add lock sbb pop add repz sub pop ja push add add and add sbb or or add dec or jmp dec fsubr inc lahf or mov mov add mov jmp jmp aad xor xchg or or xchg or inc add inc add add enter test dec mov xor or inc inc add shr sub std decl ds add push add mov add das add mov iret test inc lea orb add mov call xor pop add (bad) or add add inc or rolb mov push sbb les add cmp pop or mov cmp cwtl orb mov or add cmp or sbbl add dec add add inc adc cmp xor or dec movsb add xchg inc add or aaa add mov mov dec adc int3 mov push add push add pop ret mov or insl ss jne add or repnz adc sbb xlat loop adc cmp int3 add or lods xchg hlt add add xor add push addl lea (bad) jmp mov push call ret cltd adc lods jns dec adc add sub and nop add mov or aam add mov cwtl inc int3 push call add add add and or (bad) pop add mov push call add add adc in push aam pop sbb push sbb inc adc add xchg or or mov add out add gs lea loop xor add jmp jge lret add test pop sarl add inc add movsb or pushf jmp aam je sbb adc ss or bound or fldl mov xchg pop add and sub jg addl jne test lea in jp or outsl add add add pusha dec test (bad) clc add or mov invd or lea xor lret or icebp cmp or pop out or cmpsb xor pop add lock push dec or fdiv add lea ljmp or jo cwtl outsl or mov xchg xchg lea jmp dec pushf jmp jmp lea ds or or or add dec add or sbb jnp push add sub add scas addb lea push lret dec add push dec or lock (bad) aas or or add aam add jne jmp or loope add fsts mov and cmpsb add jne jmp sub or mov fadds push add subl add add clc sub mov sbb inc mov push call jne or or mov pop call add mov mov jg cld add dec mov aam cmp mov lea cmp or xlat aas or or sbb sub cwtl jmp mov mov sub (bad) dec add fidivrl add xor orb adc inc add mov int3 add add lea aam dec and mov add mov add dec add mov enter lea push call ret add cmp add or or (bad) decl pop jb mov call cmpsb mov inc add popa orb std or push add fadds xor add jo and add inc lock call add dec lock cmp push call mov addl mov jge int3 add lea jmp adc mov add add mov add or add in add push ds js add add mov call jmp fs mov add add int3 push mov add enter stos or adc or push add xchg xchg cmp add (bad) adc or adc data16 stos inc or adc push add lock adc inc add dec or adc stos ss mov adc add stos mov and adc or stos push add push add sub and add push imul add sub adc add out add les adc add (bad) add aam sbb movb or sbb mov add or adc add cmpsb add fcoms jo add xchg add push or sbb add mov adc add fmuls adc add data16 nop push or and push add jo adc push add inc add clc or add ss add xchg or and es lods push or and adc add in or and add orb es imulb or daa add out adc add (bad) add rorb adc add enter add stos mov adc or sub cmpsb add stos in jo add xchg add push or stos sub adc or cs stos jbe adc or das add data16 stos test adc add push add cmp adc add rolb mov or push push mov adc jl add mov addb adc add mov or or dec mov adc add mov or or adc push sub mov mov or movsb add adc test or lods mov or adc adc add mov or and loop adc adc add mov or or adc xchg add mov mov rolb or mov add add mov fmull add add push adc add mov or add in add adc add mov or mov add hlt or mov or add mov mov add or adc add mov adc int3 add mov jbe add push mov add push add push add mov adc add or adc add ss mov push adc add rorb stos cmp push add dec or cmp sub add test adc add mul push add add out adc push or cmp adc add pop or cmp add pushf or ds mov add int3 or add cmpsb or or stos inc add xchg add rorb inc add stos xchg mov adc adc add data16 mov adc add inc or inc add stos inc add mov jo add ss stos adc and adc add aam and dec inc ret lock movsb insb add test mov add mov adc add mul add sbb adc add out adc adc (bad) push add insb or dec add movb push or dec add mov adc adc add (bad) mov push add xchg push add add adc adc or add mov add mov push add push push add fmull and popa arpl les orl adc inc mov push xor mov in or push sub adc in add mov adc add mov hlt movsl add adc add adc dec mov xor mov adc inc add add mov add mov add sbb hlt mov adc add add sbb out mov loop xchg adc fisub mov or mov adc rclb xor ss mov sub mov adc add adc sbb mov add inc mov scas mov stos sub or mov xor or int3 sub adc cwtl mov in add add mov add mov clc int3 or add in incl call add adc add mov data16 (bad) incl and add inc paddb inc cld inc jo cmpsb cmp stos xor add add add add js add add add add ljmp mov add movsb add add add add pusha add add add add sbb add add add in add and add xorl add add adc or add (bad) add add add add and push ss push add add inc add add add add test add add add add testb adc add sbb add or mov xchg add add mov add add ds add add add mov add add add add xor add cmp add add or push add add cmp add add push add add add call add add add add cwtl add add add add sbb add add cmp add add test add add les add add add add sbb add add add pop add and scas or add add add add add add and add add add sub lock mov add add add add pop sbb add adc je or cmp add add add add hlt push add loopne add add add push add add add add lods add add cmp add add xor add adc and insb and add add jo and add add mov add add add lock mov add and and add inc add pusha and add add xor add xor outsb xor add or jo add stos or adc stos adc addr16 add sbb add or jns xor add data16 lock ret add stos add add xchg mov adc mov roll adc sti add sbb pop sbb adc and add add dec stc adc add add or add xor or or adc push sarb xor movsb add bound and insb insb outsl arpl imul add sbb outsb imul outsb inc and arpl or add cld add adc pop add adc add jb jne add je imul add inc lods hlt rorb jb add add or add add or add push pop add and or push add dec mov inc sub or add inc add sbb inc or cmp add push rolb add add add add sub mov insl add jo or add add jne mov add (bad) dec add cmpsb or add add push xor add add insl add insb add jns adc jb push outsb add add popa add add or dec imul popa push add imul add or push add add add push or add add and outsb jne or and add or sbb adc xor mov add add add insl add mov or add imul or je js add jae push insb or insb add inc add insb or stos sbb add gs add sub das add insb aad sub push data16 add push add add and push push add add and outsb add je jne,pt ss push sub push sbb insb add add add lock add aad lock add je insb add cs addr16 and bound push arpl lock nop or insb add or add jge adc cli or add add and xor sbb pop add sub jo add push add and bound adc or add add (bad) sbb dec sbb cs or adc cmp or sbb xor cmp adc aad lock add add jle outsb add add push add aaa sbb mov push sbb inc jo (bad) jo dec imul les sbb add pop js push add mov add data16 das cmp sahf insb or inc add add add sbbb add add push push and mov add add inc lock add add in push enter push adc add push fisubrl inc add add mov mov add arpl mov add adc push jo or jb add pop cmp inc add cmp insl add add pushf push add insb icebp add pusha (bad) xor testb fs je add mov mov add add aad nop push or adc add and add add add push and xor mov pusha add adc jae cmp stc or push ret push push pop data16 les bnd add or add add or xchg push pop sbb add add or or inc add or or mov add mov or or mov or add dec add sbb or sbb or add sbb or add test test adc or or add or add pop add push mov adc mov adc add mov js or add stos jns or mov add cwtl add incl or or add pop xor jno andb push add clc add inc add add and cli jne add je sbb pop and dec add mov cmp add add mov push add or add cmp cmp add insl add add inc add imul outsl add push sbb cmp add add jb and push add outsl add add add add insl loopne add ds add pop and add add int3 outsb add insb add inc sub outsb jne insb add push adc add add cmp add add add add add inc fs add add sub add cmp pop or aaa add xor pop add and or push add pusha push add js js add inc add add add or sbb add add add roll shrb cmp push jae aaa add sub mov add and or add sbb or mov or cmp or or inc add arpl add add sbb dec add add je sbb push add jo add add add (bad) jae sbb dec add add or outsb add or or imul add add inc add push push ljmp popa add sbb or xchg add movsb add or add or add or add or or outsb cmp push push pop or adc add pop or add add add pop mov fistl xor jb mov scas add stos jae pop popa adc add adc push add and dec add outsb and add sub add adc add add add jne sbb outsl add lods push cli add dec inc dec cmp cmp sbb sub dec add and sub jns add dec dec das adc jns incl push dec add and add arpl bound gs dec outsl jbe or arpl gs adc inc inc jne jne je and inc insb or outsb add and jb insb add dec popa or push bound jne jb add add push outsb or add add add add push add add (bad) insb add add jns inc sbb or add xor push popa xor add add jb imul jb or and or outsb adc or outsb or push jne or popa je add add add gs sub add add add dec add push add add dec add add add xor inc add add inc inc insb jae jb gs push inc gs popa insb jne or shll inc insb insb outsl arpl add add add add push pop or or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc inc inc inc inc inc inc dec add dec dec dec dec dec push add push push push push push pop add pop pop pop pop pop pusha add arpl addr16 insb insl outsb outsl jo jno jae jne ja add jnp jge jg add jb js je xorb gs add mov fs es push add mov or add sbb or xchg push and sbb and and and and mov add adc mov or add push push add or add les outsb outsl ja push je je outsl outsb add add push jae jb bound arpl outsw jb insl or push or dec popa jae add je jbe push outsl jo jne add or or add dec add popa addr16 outsl js push add push add push cmp add inc outsl insl jo gs and and popa adc daa add insb add jae dec imul and arpl imul popa jae adc jns xor das and and add xor add popa insb and repz je push and cmp insl popa outsb add or add outsl jb arpl outsl jo add ret cmpsl jb imul adc bound sub add adc fs fs popa insl add arpl mov and fs mov add add and imul imul adc pusha gs and xchg cmp and cmp dec xor pusha jo popa arpl gs outsb add push add pop add arpl jne gs or xor and pusha outsl insl outsb imul insb jae verw or push cmp ja push pop add je bound sub and hlt push or add dec add pusha jne je jb je jne outsb imul std sbb and dec cmc and dec aas and or outsl dec inc add jbe jb and mov imul jo or pop test dec addl andl or add push popf add popaw sub je jb sbb fs mov inc or sbb add add sub or lods add je loopne outsl data16 jbe movsb insb add jbe bound incb or cmp add add cmp cmp add add add add jl add es pusha or add add sub add add add add add add add cmp or sub xchg add add sub or add outsl jo jb test outsl jb sldt mov cmp adc inc add add add add add add pop pop jne add outsb add jb jae jb or add or je ss xor or bound adc insb jb repz add je or imul and je or add sbb popa add add add fs insb add bound gs sub add call push add add pop push sub add add adc push insb mov add fadds adc or clc in adc add add ljmp push add add adc push sbb push add add adc push inc xor add add sub or add add and sub sbb add add adc add add add enter clc add in push add add add call add add adc invd mov adc test fisttpll ljmp and inc add movl imul pushw adc and push (bad) push xor clc movb hlt push add add add mov xchg add add adc add lds push adc movaps add add les adc xchg test hlt enter add xor add add addb adc add adc add test xor adcb add or sub cmp add xor push add mov cmp sub add pusha push or js jo jo jo or add or pop aas add add cld add inc cld inc in and cmp sub adc xor inc adc xor push add addl add sbb in add mov adc and cmp cmp inc jecxz inc cmp and push add mov nop add (bad) add add mov pop adc inc aam adc add adc adc and and adc nop icebp adc xor mov xchg sbb adc add and add inc add test mov add xchg xchg xchg add popf sahf lahf add movsl cmpsb cmpsl add lods scas scas add mov mov mov mov rol (bad) (bad) add leave lret int iret add rcl rcl aad xlat add (bad) fcmovnu fstp fild loopne loop in out add jmp out out add icebp repnz cmc div add stc cli sti cld std (bad) incl add add add push pop add or or adc adc sbb sbb and and sub sub xor xor cmp cmp popa bound data16 leave out add jb shl add jp pop pop pop pop add and jge jg add or add nop rclb add xchg add addb sub inc inc loope mov dec dec dec dec dec add push push push push push push jo pop pop pop or cmpb dec add add add push add push pmuludq out adc pop add xor add nop and and xor add inc add fstl addr16 adc aaa add add nop push add adc pop push add adc sbb push adc add or sbb adc add and adc jb adc sbb adc add add inc add add cltd add nop sbb insb add sbb jo nop push add mov add adcb add xor add sub inc adc add rolb shlb and adc and add add pusha sub adc jae adc add loopne add xor sbb add sbb or xor adc add xor cwtl adc cmp dec add aaa add cmp inc cmp sbb inc add add inc add lock add lcall add inc add pop add add add add push push add rolb and add addb jo add xchg add add push add or or xchg add add add add push inc add add sbb and add push dec add jo jge inc andb add or add pop or dec add add sub adc leave lock add add dec adc stos rolb mov adc rolb inc add push add test lock add add xor push add adc add mov add sbb stos pop add pop add push add or push add and add pop add push add inc add add pusha imul push xor add jo add add add shrb insl mov adc or add add je test add add nop jno or add jl add inc jne xchg add jo add imul add addb mov or add jp pop adc xor or mov add xor pop pop jl jo add imul and jb add and jae je imul outsl outsl add insb outsl outsb addr16 jge add jg les add xor mov add or add arpl sbbl xor and cmp addb and add jbe arpl xor scas addr16 pop push faddl and inc push add add add add sbb add mov sub pop sarb lret sbb add inc add pusha int add add mov add add add add add rolb adc add roll aam mov push add rolb rcll add cmpsb aad les add (bad) add aam and jecxz fs xchg add add jo mov movsb out add add lds stos mov adc add add add lock add rclb fcoms inc push add in add es out dec jl jo cmpsb sub add add int3 add pushw dec xor add dec roll (bad) int (bad) mov fisubr sahf das mov loope add test mov xor mov lea xor add add jnp les xor xchg mov dec xor mov inc add add xor sbb add xor add push sbb and add xor xor xor sub mov in sbb xor xor add mov xor ds add cmp loop mov pop mov add loope xchg add add mov ret test repz repz mov sub add push xchg jmp lea and add fadds enter lret cld add (bad) loopne jnp push fiaddl xchg cmc jbe,pt add in jg out mov add out xor add into add hlt cmp data16 fadd inc xchg test add pop and add (bad) fiadd sbb sar xchg test cmc add and scas lds push mov popa jmp pushf pop push movsb mov mov pop xor add mov jl sub add cli imul test inc cld add push pushf rcll mov pop aaa pusha jecxz sub dec add es add divl ja mov gs pushf sbb inc push movl outsl loope dec push fldl in mov inc pop xor ficom add scas jo add arpl sti adc je mov movsl pusha mov mov add push adc pop mov clc (bad) mov nop and sahf je int add jne add add add rcr add idivb aam in mov sbbl dec mov (bad) mov in (bad) mov mov pop push daa pop pop andl pushf dec pop imul add mov (bad) add popf imul lock push arpl add add add enter xchg add mov adc mov cmpsb sub pop inc cli insl cmp out jg and mov inc icebp movsb aad (bad) add lret pop aas adc add pop sub push icebp inc xchg enter add dec push (bad) stos xchg lods or mov mov insb add nop xlat and pop add mov inc int ss and in cmpsl out pop fwait push fucomp add jne test rclb push push add cmp pop xor sahf xor push aaa mov in pop loopne add add cmp sbb cmp xor add xor push mov xor add push pop xor add jmp xchg jmp add clc pop ds scas or (bad) lret add imulb popa add js xchg add aaa aam add add dec add sbb cmc loope add jnp or add nop fsubr cli bnd add pop push loopne adc add xchg addl gs aas add nop and add push xchg add aaa cmp add sahf dec xchg add mov lea arpl add sbb insl add pop in ds pop sub add and add or mov je inc js and sahf add in inc cmp add add int lret add fdivrs iret push cli jno int movsl add push out add test xchg lret push push add cli in inc push sub stc iret stos jbe add push and divb add arpl add mov jne ret cmp outsb notl loop fist pop xchg popf push roll pop xchg xor add mov loope add je in ret cltd add popf clc out dec pop or or add xor daa add sub sbb add or add adc mov mov add in fadds push add adc cmp add sub xor daa sbb add xchg sub pop into data16 out cmp stos or cmp cli mov mov out add loopne add adc push add inc lock add add or add cmc add mov addb and add push add and adc nop fiaddl adc sub adc add lock or add sti add add adc add pusha add and or add add add xor or add (bad) add cmp adc add adc dec and incl adc add xor adc incb mov pop inc cmp add popa mov add add add add roll lock add addb add push jo or clc add add rclb cmp or add rclb mov adc add push adc add pop or push lds adc repnz sbb sbb add add add pusha add add inc pop add jo add sbb mov imul adc add add and adc imul and insl popa jo jae je add imul jb and outsl outsl add insb outsl outsb add inc add sub adc add sub mov lock dec sbb and adc adc xor dec inc add add inc inc xchg or jo or add dec add add add add mov adc dec add pop xor sub push add rolb loopne push add push add add add push test adc or add mov or nop push add pop add add popa int insb add add xor sbb or jo sub add sub add jo or add data16 sbb add push mov sbb sbb insb add jno loopne adc add and adcb pusha xchg xorb je pusha jne add nop push or lock add mov add add xchg add adc adc aam mov cld mov mov rclb adc mov dec lock xor nop mov rolb add rolb cwtl mov push add add add add lret add add rolb in ret adc sub add add loopne lock enter fs gs pop mov nop roll xor add adc dec add add nop fiaddl movsb (bad) add or enter adc add jmp loopne push add add add mov stos add lock add pusha add stos rolb or add adc adc add and or or adc add mov mov add xor adc add rolb push push add adc add adc pop add loopne adc add rorb inc adc or mov pusha push add push sldt mov add pop popl add adc or add add adc add inc adc adc add lea or add js arpl imul sbb bound jb mov xor xor add addb mov add adc adc or add add add add push incl fadds add add pusha add fdiv adc push add mov inc add add inc add add movsl gs add dec add add insb add rorb dec xor lock dec add add pop roll pop add add mov jp dec add and or jg add add adc lret push add addb (bad) add add stos add add add cmp add push mov dec add lea jo push add or add mov sub add or add adc add add push je inc add jo gs inc pusha jne data16 inc add add je pop imul imul arpl subb add push xchg add add test add mov add add add loopne or dec lock add add fwait add add inc lret xor lahf add add push mov jo orb add inc loope test aas mov add cmpsb and call or sub adc negb pusha js gs add xor xor or and dec inc dec add xor dec inc dec inc or dec dec inc or push xor sbb or dec add rolb inc add sub adc dec dec add jl add add mov adc add sldt adc incl add add inc add inc add or in add incl add rclb cmp adc (bad) loopne adc add adc add and or pop add inc and adc jg add and or add add add rorb adc xor adc cli push add mov add add scas add and add lock cmp add add add and add add add sub cmp sbb mov cmp or add push add mov and add inc push and add jl pop add inc add or add xor push add pusha add in add inc in adc add in add rclb add and add adc bound add mov add arpl add adc rorl sahf and add sub cltd mov enter add inc add push add data16 add mov add cmp add push enter push add mov lret add add stos push gs adc lods adc xor add add adc sti add imul imul or adc insb add stos dec adc mov or fisub or (bad) fadds add outsb add inc adc js add push jle or cmp popa sub ret add add jo push sub add pop and sub add add in add jb add add clc add jae add add test push mov add je addr16 jge dec adc adc add stos add add add and add inc adc add ja rolb add add adc add dec add add movsl adc adc add jns add pusha add adc and (bad) incb add jp add add mov jecxz jnp add pop add adc test add cmp xor add adc add add add mov cmp add jle add add xor jg add add cwtl add and addb add nop add popa push or jae and rolb and test add mov or add aaa and bound add icebp and add test add jb xor test add add add xor add rolb add xchg and add and add (bad) js add mov add and add add loopne add mov add movsb sub add lea or add scas and add sub add (bad) add mov test inc push dec xchg add add sbb add add mov add xchg add lret orl add mov add add xchg add stos sub aaa add mov xchg xchg add mov test add add add ja add (bad) call add xchg add inc lcall fwait sub in xchg sbb add pushf sub insb adc push popf or add add sahf add and add mov add mov and out call mov (bad) (bad) lcall incl fcoms or mov sbb aam and scas add adc add and sbb movsl mov sub int3 and shrb and add imul loopne aad adc mov sub sbb bound or cltd xor xor aas ljmp out sub xor cmpsl repnz xor xor and pop push js adc add and add add and lsl mov add and push adc sub sub mov xor dec pop cmp add adc or test push sub xor and insb and push jno and dec add mov xchg add sbb adc enter adc fadds or or lock cmp adc cmp add or adc js dec pop or xor sub or sbb mov adc add adc mov add fsubrs adc add andb and add test adc pop cmp add aad sub and jo loopne sub dec jbe add add repz add add fsubrl cmp arpl sub or xor add adc sbb or add and add in add pusha add sbb or add xor adc inc mov rcrb add enter pusha mov xor dec adc pusha call sbb insb in push and jo addb lods add mov or insb jo mov sub add add adc cmp inc add push add add daa add clc add addr16 nop in xor gs or sub or add cmp add lock sbb or add and pop add add pusha adc adc nop xlat add xor dec fwait adc cmpsb add add mov add add mov push add inc mov add adc or adc add add add fdivl push rcll sub les hlt insb lock add or xchg adc stos add lods add mov or fwait add add add add pop add jo loopne add or repz incb jo xor push fsubr jo pusha and cmc insb clc stos nop and jo shlb jo sub lock add add xor push or xor add cmp adc add or or add sub add add jbe add sbb add cmp sub inc insb jo lock cwtl jo add add add inc add adc and adc or add add mov add les or adc add dec adc add add add inc imul (bad) or add and adc scas jo sub cmp sbb adc adcb scas mov or pop add dec mov sub add mov add or loopne sub adcb jo add add adc inc in add add or clc and or inc sbb mov adc push xor sub adc mov sub pusha add adc add test jo or add mov clc insl je add push add incl add add sub adc repz mov insb adc imul jo push add push arpl or jo cmp imul add rolb add imul lock rcll or add add out add add push mov jo adc aam cli insl or and jo add cmp or and es movsl hlt add and push add push addb mov and lods add in add jl or xor xor add cmp add nop add and sub or insb in rolb enter adc cmp xor insl sbb stos xor sub inc sbb jo mov aad mov mov rolb add enter daa add sub fs insl xor outsb pop or or adcb insb jo xor sub jo add adc mov add push jo sbb mov sbb jo mov mov or adc or add and fildl add add inc mov xor add dec jo adc adc fildl js sbb adc and es mov add add xor or push add pusha and or add jne sbb adc fcmovbe jo mov addl add sbb jno add add add jo push sbb or xor and jo jo jo sub adc jo repnz or add and add insl add xor add adc inc imul and sbb adc push add jo mov sti add pop add or adc mov cwtl pusha sbb or add jo mov add add adc xor add or pop gs xor xor and (bad) adc add fs inc lock jge pop add add add add jb or sarb add add xchg imul pop adc adc lods add add mov add add mov les or (bad) int3 add and or lock inc sbb insl sbb and or sub dec jo and xchg push fs mov add jl cmp stos adc cmp sub jo movsb add adc insb hlt xor sub add cmp or add cmp xor jmp pop or or in adc hlt jp and add add test add rcll add add mov in and add int mov or add pop fnop jo xor sub dec add mov and inc dec add add pop add roll add cmp insl dec andb cwtl stos mov mov sub jo loopne sub loopne sub jbe les add add imul inc add adc push add add and xchg inc jo addb add mov in add nop add adc nop test rolb cmp add adc add add jbe cltd add out (bad) and test mov adc add sbb add xor push sub sbb or lods insl sbb jo nop add cmp mov scas xlat add add add or inc mov and subl or fmul jo xor sub add adc insb call js ja or add inc jo add add mov pusha add inc mov scas mov add add add mov push fildl add je or adc add add ja add adc push rolb add add aam xor sub and pop insb in and add add popa inc or mul pop dec xchg sub cmp xor add xchg and and std lea add add push insb fstl cwtl add mov sub sbbl andl mov popa gs sub xor and add adc popa jnp adc sub insl xor icebp or dec add sub mov jo and lea add cwtl jo gs add pusha and sbb add mov jbe xor inc adc insl insb call fsubs cmp jo adc cwtl push add xorb and jo subb add lcall xchg fsubrs cmp addl ljmp pop add or and pusha int sub add push add pusha add push adcl rorb xor add jo rcrb sub je or add cwtl or or xor mov lds xchg inc lds inc add fldl dec and cmp fsubs add fldl addb pop les rorb mov add (bad) xor add add outsb rolb add push mov jg shll (bad) xor adc and pusha push pop or add push pop sub mov add add or sub add out add add adc rolb and add pusha and add sti add or add mov and adc fwait add gs or add push jo insb sbbb add jo or sub fild fnstcw addb sub add or add mov mov sbb mov cmpsl or adc fndisi(8087 fs add or jbe fildl sbb std adc push jl lahf xor add lret jg les xor cmp and add arpl adc add jo nop test or mov and push test sub add xchg in cmp and xor cmpsl add add push xchg and insl add push sbb dec xor add add mov or inc add push popf or mov insl jo add jo mov sbbl sbb add add insb loopne add xor xor add xor and add pushf add pop add clc add mov add add push add lods add sbb and inc subl mov movsl je je jo jnp bound cmp add and daa hlt sarb adc insl fadds mov push jns add add push or sbb xor in inc inc add not and hlt add and add xor mov and and adc insl and addl int3 mov and xor or aas add aad adc or or push add jo mov int push cmpsb or add mov add call lock fs cmc add add pop inc xchg add or add add add cmp add fildl add sbb or adc inc sub cmpsl inc sub test fildl add test sub xor push mov jo mov mov stos sbb jecxz or out cmp flds add add add insl cld and push add add xor add add inc add adc pop pop jo invd test sub roll and add popa mov sub add adc popa addl mov adc and push jo ljmp js fadds or lods jo add add loopne sub and push insb in mov push add or jo mov into or xor out add mov fs add sub add add and mov ficoml add or or push pushf push and insl and add jae push push or push push add pop insl add cwtl adc mov add sbb add cmp loopne jp andb dec mov adc pusha sub pop add inc add mov or add dec add add push add insl add mov mov add sbb vpshlb add mov add mov sub add or adc popa test fild or add mov sub adc add addl add or or dec or or sbb mov pop add inc add add dec add mov jbe loopne add data16 or and or sbb and add fsubs add popa pushf and inc sbb pop pushf add lock add add jmp xor cmp cmpsl or mov or inc or xor je mov test or adc rclb enter cmp adc pop push popf andps test add verw sbb insl inc adc out sub jbe add adc jo xor fsubrs push add push add add insb add add add add adc adc xor pop add add push push or add mov mov mov (bad) mov add popa mov mov and lea imul add aam insl or push or sbb orb or mov push add xchg popa test sahf adc scas cmpsb inc sti mov (bad) xor dec loopne sub add xorb mov lods jo sub sub jo andb add lods insb cld mov sub cld mov xchg adc push and jo push repz insb test sbb cwtl adc or xchg inc push sbb or or mov aad lods push add jo and push insl adc cld push or add mov pop sub nop or add inc jo (bad) xor sbb or jo pusha push cmp add push std or call mov or push js jo rolb dec fldenv imul jo adc jl pop insl adc add pop pop add dec scas adc adc lods jo popa bound xor adc addb fstl xchg jo push add mov xor test mov or inc add adc xchg mov add add lock push ja add sub iret xor add mov and or add add in sbb push xchg fiaddl or lret out adc nop xor inc add insl add inc iret add mov push mov or or cmp adc push je or sbb test or xchg push xor xor add aam add dec sbb cmp adc call push and or push je adc xchg push insb ficompl imul adc add adcl add clc dec pushf add loope dec jecxz or cld cmc loopne or add inc and or fs add add mov repz sub add (bad) and outsb pushf add add add lahf shll xchg sbb es jl pop xor adc adc insl lods nop adc jo lods movsl adc pusha enter and dec add add add adc mov lods jo inc add or push add add nopl add push cwtl push mov cmc and add jo mov repnz push adc leave adc aam sub inc fisttp or pop inc and dec (bad) push dec fcoms or dec xor add push add adc and or adc xor or add add add jo sub pop mov add xchg lds add mov inc cltd adc movsb push xor lods or xor or andl mov push add adc add add push js add add add add add or and or or and jl add sbb mov add es pusha roll pusha call sub xor cwtl or jo mov add pusha push add adc mov shll dec (bad) adc push add jo xor add or mov add test push xchg sbb or adc stos mov cmp or or push pop inc jo jo sub add sbb sarb enter or or add insl add fadds or js add add or add hlt incb or add push mov or add pop add push mov add or add xor push add pusha xchg mov pusha add add imul adc push aas or mov cmp or addl fildl push add add push sub xchg jo insl lods lock add fs mov fwait push pushf push add dec adc lcall push loope adc add add push imul jno add mov fild mov push loopne sub xor adc lock clc push xor sbb add xor cmp add mov add pop mov or sub mov fwait add scas add jo adc pop add adc sub test popf je and or or adc push add jo sub add and push xchg or outsl adc sbb rorb mov add cltd add push test add push push mov or push test sub add add dec adc popa xchg add add pop and add add add xor or cmp add or cwtl addb (bad) push test andb add out add add add add mov add sub aam or add faddl or sbb or mov mov push stos add push push pop rorl dec add fiaddl scas add add adc add insl add add rorb mov adc out or adc cld add add cltd add sbb pop int3 add xor add sub dec add mov or push mov popa cmp push or xchg adc cmovl jo adc adc and or xor movsb add sbb insl add sub add push sub lret add cltd pop push cmp loopne sub push pusha incb pop dec add rorb lcall add add sbb and jmp add add adc es adc and add adc add js xor das add add add mov add dec adc mov dec and or or js daa add addl and loopne sub adc add cmp pusha mov add mov out lock adc add add and add xor or jl or or pop mov adc and xor push add xor into add add push xor add mov add xor nop add adc add mov sub aaa sub mov sub and adc dec add sub sub xor push push cmp or sub and sub adc aad sub push adc add xchg push cmpsb add mov add lret cmp sbb add ljmp adc mov push inc sub sarl push add add adc add in cmp xor call adc adc push add add push mov ss push mov sub adc add add into sbb notb add add sbb push mov push mov add push add adc push mov mov fcoms mov add push add sub add roll inc push mov add add aaa add push push adc adc add push mov (bad) sbb mov add add mov add mov add inc add cmp add push add mov add push sub scas add mov mov mov mov add add mov add add push adc sbb push and pop push and adc mov mov add dec sbb add adc mov add hlt adc sub add push mov mov add push mov mov xor add adc add jb inc jb popa test or imul je js add add add jns je add outsb addr16 outsl inc add popa jb inc add mov jb dec adc push add outsl jae push je add add pop add loopne dec insl jo add jno push inc sub sub jne and dec outsb or jp jl arpl jne jb push roll dec gs movsb or or inc push jne insb imul outsw add inc push pop add xor cs insb addb add gs xchg or add outsb xor push add adc push add jne arpl add dec push push or add add jb jb outsl adc bound add dec imul inc add je push jb arpl fs gs add cmp dec pop outsl popa adc add add dec inc popa jae inc add xchg add push subb inc outsl jne add add inc imul ja add and imul nop push gs or add stos add push add add jp or push imul and inc imul test add or add outsb fs gs add adc add dec popa jo push imul add (bad) add outsb insl sub pop add push test add jo outsb addr16 add stos adcl arpl repz adc (bad) add gs push add sbb popa outsb add jbe jb outsb or outsb adc push add insl jo xchg insl xor jge aas add inc add add push jns je insl push imul add add add (bad) add dec outsl arpl or add add imul gs add shrb arpl outsb add add jbe pop add in add gs outsl arpl imul js push gs add (bad) cltd xor add adc xor ja add mov adc push add adc and inc jne or inc adc into add jb dec imul out inc and dec outsb arpl add roll add add add mov add inc outsl jae gs imul add dec outsl add outsb je outsl insb add add dec outsl addr16 addb cmp inc imul je push add adc cmp or gs sbb inc outsl insl jo add add and js xor add jns outsl or outsb add adc xor add js adc mov add dec inc push dec inc add add add jo jb outsb je push add popa je push jae addr16 add add add addb outsb jb imul cld dec outsl je data16 and testl push inc insb call xor xchg add or add out (bad) outsl jae mov push sbb push push add sbb add outsl or xor push gs cmpsb xchg add and add push jb outsb jae popa je adc add add insl je adc add add add inc push adc xor je add add add inc mov adc jb adc add dec popa jae inc popa je popa add or add add push popa loopne popa insl add or add sbb ret adc arpl add add add insb nop gs jae adc add add je add add or or push add imul outsb popa je jb mov add add add or dec insl jo outsl jb dec gs add or adc adc or add jb adc inc sbb rorb outsb add lds push add or add rorb and popa insb jne add adc dec jo xor adc stc add out jle push add xor (bad) add push mov add imul inc arpl jne je adc ja dec outsb imul gs arpl jne imul imul mov push ds inc popa arpl and push dec adc push dec add inc outsl insb fs popa je add xor dec pop sub mov add popa outsb arpl add insb add add mov add dec and outsl insb adc lret arpl gs outsl roll gs ljmp jns add jns pop insl push add gs jae imul add inc jb outsb je push dec add xchg push outsl insl add outsb fs imul add gs add outsb add push jb arpl jae pop rorb or adc roll push outsb push fs xor gs mov inc add movsl add gs pop add dec jae bound addr16 add jb jae xchg add or or add add dec gs jo jb or add or insb insb outsl add mov push popa imul add add dec adc or or outsw add add inc imul test push adc add add dec inc dec or push add fs outsl add popa addr16 nop add insb jae test movl add jne add mov push add or movb mov dec outsl fs add adc add sbb and jb add sbb nop inc js je rolb add lds add jecxz mov lcall popa insb add outsb fs jo outsb or or add inc add add arpl push je jb jne jo std push add add or add mov insl add add add addb imul push je ss jae add adc inc add jb outsl dec jne add jns gs roll inc das add or or into or add jb jns add gs les add gs add add push roll xchg adc fs add mov add add add outsb ja outsb les lcall syscall movsb push lods and add add sub dec popa jo (bad) push add and sbb add add add add rorb jb push gs int push mov add inc or push add or dec inc inc adc sub add adc jl addr16 add inc aas pop add add or cmp adc lock jo add dec or or add pop outsb je add inc insb insb dec popa imul add inc test mov add lret cs inc push xchg je dec pop imul cmp dec out mov (bad) add adc add adc sbb add or push add sbb add add add add add add outsl add or add or adc or add adc add add add ltr add imul adc add sbb fildl or sbb inc add adc (bad) sbb push push sbb cmp push adc add add pop add lods add push xchg cvttps2pi insl add and add jo add adc or lods add lods add addb add adcl or or test gs or add push or mov push jnp add mov add mov rorb push pop sbb and sbb adc add add notb pop add and or cld push cld inc add inc (bad) js jp push push mov or inc inc push mov add push or or push push push mov add (bad) cld inc hlt inc pop add addl pop add aaa add ja mov lahf cld inc add or test inc mov inc add add add movsb add add pusha (bad) jns and dec cmpsb fisttp mov mov inc jle or inc test xor mov andl mov xor inc adc mov xor mov add mov dec adc push sbb mov add add pop fisubl add fisubrl xor sub adc stc add xor or (bad) (bad) (bad) incl sbb ret inc add add push add cltd cmp add push adc jmp add add roll in add push and add add or aam push or int3 add mov pop or mov add add adc daa sbb xor add sub je add insb adc or push push mov dec inc lds sub outsb cmp add add add adc push popf or pop sub add scas sub call add or add add add add add push addr16 dec adc or lret add xor sbb adc and add mov add decb add add xchg or add mov add test (bad) add cmp sub cmp mov add mov mov mov sbb aam inc add pusha adc hlt adc add adc or dec dec sbb loopne add test add add fadds jl inc dec add call add into repnz or or cld add mov call adc adc push sbb xor adc addr16 cld or inc and xchg add add and sub or add pop and add sub incl add sub cld adc dec sbb dec lock xor pop add sbb or inc dec add adc add push mov xor add loopne add adc into add push in fs xor add sbb (bad) decl or add sub adcl gs outsl jb and fs inc xor outsb sbb push outsl jne add pop jb outsb addr16 gs and adc imul bound fs popa push aas dec hlt (bad) add sbb popf add icebp icebp add lldt add xorl add add es aaa aaa data16 xor xor sbb or or lods flds add add push add repnz adc push push sbb push dec lldt dec push push inc push sldt dec push push pop add jb jbe sub add add add or add add adc sbb adc add or ja imul xor imul jo add test in icebp icebp cmc mov in std div lock mul stos jmp icebp stos add ljmp add adc (bad) addb orl xchg test add add jmp add add cmp add xor sub add cwtl pop or cmp aaa cmp sub add add call imul divl add adc sbb push adc add pop pop add add add popa jo arpl sub jb jb cmp or add sub aas es and add jmp mov cltd addl pop add pop add pop push push push add popa or add push add add add repz stos hlt in hlt adc add je jo jge popa add fimul add lock mov add mov add fsubp or mov xchg mov sbb sbb add dec or and and sub cmp cmp add adc or add arpl insl outsl jns jp bound nop adc add add imul or jl arpl arpl bound add loopne add mov add lcall add in add or or mov aam xchg mov (bad) ror add aad fadd faddl cmp xor add inc inc inc add inc pop inc decb add mov add jecxz push mov or sbb sbb sbb sbb sbb or push push add push push or push add inc scas or (bad) rcr (bad) sbb add sub sub sub sub add add add add add pop sbb or or adcl nop fildl and add inc push add push dec push add bound and jge add add cmp add add add or and add loope add mov (bad) mov add add add fxch add movb add cld lock (bad) add dec push dec inc push add adc add sub or inc and sub or add insl jo imul dec push inc dec insb inc add adc pop add xorl add movsb aas add push jno add push adc and add dec dec inc inc add add add add add adc pop add add sbb push add add or add mov push add adc push add inc data16 jae push add add lret aad add fcmovu add (bad) (bad) iret adc add popa jbe add mov add rcr add add rol add rolb mov mov add adc add sbb les add fldl mov mov add add je jo add add add orl out mov mov adc mov ds add cmp sbb aaa aas cmp add add and or das add add inc pop pop jle add adc dec pop pop inc add dec pop inc inc inc add pop pop pop dec inc add pop pop pop inc dec inc add dec dec dec add daa add add dec dec dec dec add nop push pop add cmp cmp cmp and add add add cmp and add aas or sub cmp add aas and sub adc add cwtl xchg (bad) add mov lcall add pop add add adc add out add xchg mov mov mov mov add bound jl add arpl popa push add xchg xor pop inc jl js inc js pop insl jns add jl add adc add pushf xchg xchg mov pushf pushf xchg xchg xchg add jl add insl jl jp imul pop jp dec gs adc pop or adc sub dec add adc add adc inc add aam push inc add adc adc push dec add sub mov add push adc loope push pop inc add push and sub add inc add push add or iret inc add add dec adc push push adc adc mov mov add adc aas add add push or push add jnp cmp add jmp dec adc jo push jg add mov dec add adc inc add adc hlt add push add adc adc add push push adc push cld adc dec in add adc add add or add add add adc or add xor mov pop nop add xor add fwait mov cltd mov cmpsb lods xchg xchg sahf xchg lea mov lods lahf mov add mov add add inc inc add incb add fsubl pop add add inc dec dec add push das hlt arpl add sbb pop add sub cmp adc das add add xor sub add sub cmp xor or cs xor push sub iret or add mov stos mov add xor add mov test push add (bad) lcall scas cwtl lahf lahf add lahf sahf test adcl push add and push bound outsl push add cmp and es push sbb or pop pop add sbb add inc or or add add add (bad) ucomiss add or sti add adc and add push and adc add adc add add and or add dec jnp outsb add push add inc or test add mov flds imull inc add push cwtl push add hlt imul call add add imul or add in cmc call add std std add rolb add add or or outsl outsl sbb inc push outsl pusha flds pop adc push add and mov and add inc add push push add add pop push add push adc insb push dec leave add push inc xor nop dec sub add adc enter inc add add mov or adc js lock ret add cmc leave fnstsw out add add add inc data16 data16 add or pusha add add fs data16 bound or push insl add addr16 add bound add and push or push jnp or js or add add add add add outsb adc push data16 mov adc or add (bad) add adc data16 mov add xor and aaa aaa aaa mov add aaa push xor push add xor adc ss pop inc add cmp add outsb add ds add ss xchg add cmp or add push aaa pop aaa push aaa xor aas aaa or dec aaa add aaa jo aaa inc aaa add mov adc push aaa push add inc aaa inc cwtl aaa inc aaa add add xor xor xor xor add xor push xor xor pop add cmp add xor add sbb push in or add push add or xor xor xor adc dec xor adc dec xor add jle or and sbb push inc add or and add lods jne add jae add mov push aaa add aas add bound pop gs arpl push stc or mov sub nop push pop add cld (bad) pushl add push and add add test lcall add or push iret push hlt fild data16 add add bswap adc sbb pushf or sbb ret prefetcht0 hlt adc adc adcb mov or mov xor or in int3 into sbb add dec inc and sahf mov add test lds pop std and sbb jmp inc jno xlat xchg inc add add inc stc add adc inc mov add dec pop js roll add loopne jmp add imul cmp inc mov stc popf sti jmp add jbe int3 add sub test adc stos clc scas adc lds (bad) cli inc jmp aam testl xchg iret inc gs (bad) xchg push cmpsb scas mov inc or add dec dec pop add cmpsl xchg cmp xor push dec cmpsl in cmp mov pop cmpsb lock add pop mov fsubs stos add mov subb fwait xchg and les int int or sti aas jno cmp add clc aas add cmp dec lea cmc aas ret shrl pop mov icebp aas add mov inc sbb add cmpsl out aas inc cmpsb mov add mov add cmp aad add std std into add adc stos in add dec pop loope les leave aas xchg les add int mov fisub xchg cmp push add and loop mov mov add pop sarl jl adc das lea push mov inc aas add movsl jmp add sub jge mov jl rcr push add push int3 and add xchg cmpl inc xor lods cmp and xchg mov cmp mov add mov jecxz cmpsb add add test pop mov jne aaa fldt cmp jno rolb and xor dec nop pop cmp cmpsb xchg (bad) add push push lahf inc pop mov sub and xor push add pop add add faddp jge call out pop push xchg cmp add and dec dec bound std orl add sub enter cmpsb fmuls add adcb inc add add or xor or or cld push cld inc push movsl push hlt scas push or adc add enter xor xor sbb xor test lods xor (bad) in xor xor sbb cltd xor adc sub xor fdivl pop xor ja add xor add xor xor out add xor xor add ss js xchg add aaa cmp inc cmp pushf cmp cmp sti cmp test jbe jge in cmp cmp sub dec cmp mov sarb cmp cmp inc cmp cmp cmp cmp jl add cmp sbb add ds ds ds sti ds cmp add aas xchg aas cltd aas test aas add and add add add xor ja xorl xchg xor xor cmp push xor lcall aam and jns xorl xor xor cwtl xor sbb pop xor xor xor loopne (bad) xor xor xor inc add pop ss out or ds pop aaa add jo (bad) aaa in add cmp cmp cmp mov xor fwait cmp (bad) cmp cmp cmp xchg cmp test out idivl push cmp and cmp cmp cmp test mov pop cmp ds ds sarl add ds add aaa aas orb aas lcall in push xor (bad) icebp xor xor imul scas xor xor scas xor add xor xor xor add xor xor xor add fwait ss aaa push ja (bad) add aaa cmp popa cmp xor dec cmp mov add xchg aas add add push mov std xor xor xor add cmpsb xor xor xor add jbe test movsb cmp add push cmp cmp popa cmp cmp leave add dec cmp add cmp cmp ds aas add aas mov add pusha or add xor add (bad) xor mov dec stc or cs add pushf aaa movsb aaa stc aaa add cmp cmp cmp cmp pop cmp xchg cmp dec cmp mov push cmp push cmp neg loopne,pt aas (bad) aas in pusha add mov jnp dec xor xor xor pop xor push cmp insb cmp cmp icebp cmp cmp cmp add cmp cmp cmp out cmp add gs or ds jbe aas xor add movsb aas mov add add mov mov add leave xor out divb or sub xor xor xor xor (bad) xor xor xor xor pop xor xor xor xor xchg xor xor les add add ss inc aaa and ja xchg add mov push cmp cmp add cmpsb cmp outsb cmp cmp push cmp cmp dec cmp lds inc cmp testb and add stos ds aas jmp add xor fbstp jl pusha xor repnz xor xor or add cmp add inc cmp cmp add cmp cmp xchg andb es and mov enter add pop add mov and imul xor xor xor xor add inc add xor ss addl cmp mov aaa cmc add xchg les cmp cmp add cmp add jecxz inc and pop aas add add imul add xor xor divb or int3 cmp cmp cmp cmp (bad) cmp cmp cmp cmp into fnstcw add ds ss dec aas andb aas fnstcw in mov mov add add add xor (bad) xor add call xor repz jno xor jb xor xor add xor xor sub hlt xchg xchg add fnstsw idivb add inc cmp cmp insl adc jl cmpsb add insl cmp push push cmpl add rolb add push xor lods xor popf add test (bad) xor xor xor add out add xor xorl xor xor add jb xor push ss xchg ss repnz cmp arpl outsb aaa cwtl add icebp aaa sti aaa add mov sarb inc cmp cmp cmp cmp or xchg push add mov (bad) aas add add pop in or xor stos xor fnstenv push xor xor insb xor xor xor add xor es add xor cwtl xor xor add and ss test push add jge dec cmp mov cmp cmp cmp ret ds aas subb mov push add js imul add loope pop xor xor push xor xor pushf xor xor xor xor jbe xchg xor xor ss mov add push ss ss add ss aaa add pop cmp out clc cmp cmp cmp fdivrs out cmp mov add rcrl push or cmp cmp cmp cmp out cmp cmp add jg pop ds add loop,pt out ds aas sub aas jmp jo (bad) push xor push xor xor xchg xor xor dec xor mov jmp push xor xor xor inc xor xor xor xor xor addb add mov int mov cmp or or or cmp cmp cmp cmp cmp cmp lret cmp cmp cmp cmp mov sbb sub data16 ds aas sub jl mov add add adc sbb xor push fdivl nop add push xor pop add hlt xor sbb dec ss xchg aaa push cmp cmp cmp cmp cmp gs cmp idivb ds sbb data16 je aas mov add add rolb xor xor add hlt xor xor je mov add xor jge xor (bad) xor ss ss sub jbe test sbb add lcall inc cmp add cmp cmp mov cmp in cmp ds add or xor add stc xor xor push add xor xor xchg ret add xor xor aaa add mov sbb sub push add xchg cmp cmp cmp cmp cmp cmp cmp or cmp cs ds add aas or or xor add add xor addl and sbb sarb fildl cmp cmp cmp pop adc arpl push or cmp add sub push inc cmp cmp cmp add inc add cwtl add xor add ljmp or xor push add ret xor xor fidiv push xor add (bad) xlat add xor pop aaa mov sbb cmp cmp jne mov add fdivrl loop in cmp dec cmp cmp add cmp cmp cmp add mov xor insb cmp repz xchg ds ds loopne,pt testb push aas push aas xchg aas popf add mov (bad) aas sarb add add pop add add loope clc xor xchg popf xor js ss inc xor xor xor add pop cmp pop cmp add cmp cmp cmp add inc ds add jno test mov out ds ds aas add add or adc jbe test xor xor xor xor xor xor inc xor fwait xor xor xor xor xor add xor xor xor jbe rcrb aaa xor (bad) aaa xlat aaa out aaa add cmp cmp jbe xchg cmp cmp add cmp je cmp lret cmp cmp add cmp cmp ds jmp adc dec add add add add aad sbb xor xor xor sbb mov xor ss xchg xchg aaa stos add repz push cmp add lcall add aas cmp test out cmp cmp add add xor xor add and xor add and xor xor xor push add sub inc aaa test popl cmp cmp add add xchg xor add xchg xchg xor xor add push xor out add dec ss add test ss aaa pop cmp mov push add out jbe test cmp cmp add jbe mov sarl add sbb cmp cmp adc into leave fiaddl or dec aas scas aas mov aas cld add pop add xchg lds and xor loope daa xor jae add xor xor (bad) xor dec xor xor or or ret push inc cmp (bad) cmp cmp cmp fnstcw or add add ds jno cli add mov int3 add xor add xor xor dec xor xor jbe scas xor xor xor (bad) add cmp cmp pop cmp cmp mov in cld cmp insb cmp cmp add or ds into outsb aas xchg add rolb add push xor xor add xor xor add xor xor adc sbb add cmp cmp enter jne cmp cmp xchg add movsl ds adc rolb rorb or dec add mov xor xor xor addl sub cmp dec xor inc xor xor xor add mov ss xorl cmp cmp cmp push cmp pushf add faddl push sbb cmp cmp add (bad) cmp cmp cmp inc cmp inc add je,pt lods aas mov aas add add je mov add cmp push xor xor add jo jnp xchg xor repnz xor sub xor sbb adc add xor xor xor xor add aad ss ss insl add mov cmpsb aaa in aaa or cmp test sbb dec add mov cmp inc cmp add lock xor jecxz int3 inc xor or xor mov add aaa clc aaa and cmp inc add mov add cmp cmp push cmp xchg cmp add cmp cmp or ds or fistpll mov and aas fdivrl out add add cwtl add jbe mov lahf xor mov push xor enter xor arpl mov add xor xor xor xor imul inc xor push xor xor xor xor mov push xor or jbe xorb imul xchg add aaa xchg add aaa push cmp pop cmp jae sarb xorb fildl loopne cld cmp cmp cmp cmp jns push cmp add push ds movb and mov cld add pusha add xor xor and add xchg add xor (bad) in xor add cwtl xor xor xor ss test add aaa data16 add xor cmp xchg xchg cmp cmp cmp push push add cmp mov cmp out clc cmp add and pop ss add ss cmp xchg subb add add ja push xor movsl xor xor mov shl xor std xor xor add mov (bad) aaa fidiv mov aaa sub inc push push add or push cmp idivb add sbb push xchg cmp cmp jg mov (bad) cmp cmp sarl add add insb add push xor imul xor xor xor xchg xor xor xor xor xor add aaa iret aaa add cmp cmp cmp inc cmp cmp xor cmp cmp sarl inc cmp cmp cmp (bad) cmp sti cmp ds loop and mov movb push sbb mov flds xor xor add jbe mov test enter fdivs ss add cmp cmp sarb cmp add rolb push cmp add lea cmp ds or in pusha pusha or add int3 (bad) xor add xor xor add xor ss ss and xchg xchg add jo or push add call and add cmp inc cmp cmp clc cmp test int3 out cmp pop cmp cmp cmp cmp cmp (bad) cmp jae,pt cli lock aas and inc aas pop aas sub add push add xor xor pop xor xchg xor xor jb add xor xor popa xor nop xor xor sub xor xor xor ss xlat add aaa push aaa sub ja mov xor cmp dec cmp and sub mov cmp cmp aaa cmp jl jl cmp ds add add aas pop aas jns cmpb (bad) aas in aas add add xor sbb add xchg xor xor xor add sbb sbb pop xor ja mov or xor xor jbe nop xor xor divb xor add aaa jmp sub xor aas cmp cmp dec or (bad) daa cmp cmp inc cmp cmp cmp cmp cmp call add cmpl and mov adcb and xor xor add xchg xor push xor xor (bad) xor push xor or mov (bad) xor loope jmp icebp xor cmp xor xor sysexit cmp xor xor xor ss ss add ss ss add ss xorb lret ss fdivs add ss aaa dec aaa push je js jl add aaa add add or or adc add sbb sbb data16 insb cmp je js add cmp and (bad) cmp xchg cmp add cmp ds ds ds add sarl add sbb ss dec aas add mov add mov inc xor add push xor popa xor push xor add xor mov xor int (bad) xor xor xor repnz xor xor sub xor dec add add mov sbb and dec xor pop xor mov jecxz add add xor mov repnz xor push outsl xor xor xor stos add mov lret xor xor xor add xor sub xorb aaa cmp popa add add inc cmp out add cmp cmp mov add xor add xor inc xor add fbstp jecxz out jmp ss or ljmp aas cmp push add pop cmp add call cmp add jle (bad) cmp cmp add cmp cmp cmp add dec cmp cmpb add and cmp push aas xchg cld pop push rolb aam addb or sbb sub xor xor lods xor xor (bad) xor xor xor xor inc xor xor jl aas xor in add xor xor xor xor xorb xchg xor xor movsb xor xor xor xor enter (bad) xor xor call xor xor xor sub mov push loop cs xor ss ss and sub jne add aaa popf aaa add aaa enter aaa loopne out cld add and cmp cmp add cmp sub xor cmp cmp dec cmp pop cmp cmp outsb cmp jns jg test xchg cmp test cmp cmp cmp cmp fnstsw in cmp cmp cmp add and cmp cmp adc sbb cmp add jb stos cmp cmp cmp cmp repnz mov xchg cmp movsb cmp cmp sarb aad icebp cmp cmp adc cmp cmp cmp dec cmp cmp cmp cmp test add add cmp sarl ds ds add test ds ds cmp push test lret aas sarl and add add lock add xor xor xor add xchg enter add xor xor xor (bad) xor xor add dec xor jno cltd add icebp xor xor xor xor sub xor xor xor outsb xor xor add xor int3 xor pop add loop add push cmp cmp cmp cmp arpl imul cmp (bad) cmp cmp cmp cmp cmp sub cmp add jg test xchg cmp repz cmp cmp mov cmp sarl in in add cld cmp add or adc sbb add cmp cmp dec cmp mov test and cmp cmp add or push imul ds ds mov jmp icebp ds add aas lds and add add addb add xor lods xor xor xor cs xor xor xor jecxz (bad) xor xor xor aaa insl cmp cmc cmp mov add cmp cmp adc and sub inc cmp push cmp push jp add cmp fistpll in cmp cmp or xor jge mov cmp cmp and ds rolb add add int3 add add dec xor or xor or sbb sub aaa ds fs jbe mov aaa lcall add loop hlt aaa push cmp add sub cmp jne mov dec cmp add fwait cmp add mov fnstcw (bad) cmp sub sub xor cmp cmp cmp inc add mov nop cmp add or xor cmp cmp pop cmp sarb cmp add int3 add cmp cmp add es cmp cmp add cmp cmp cmp lahf cmp cmp pop add pop test mov popl ds ds aas dec aas pop inc aas jge xchg aas xchg add adc add mov add lods xor adc sbb xor mov xor mov mov leave xor in adc aas xor add xchg xchg xor push dec xor xor add ss add sbb dec cmp or pop add cmp add cmp cmp add cmp cmp cmp int add lods ds ds add push aas inc aas cwtl aas and and add push xor imul cmc xor sub xor add inc xor xor push xor pop xor add outsl xor jns add xorl xor mov xor xchg push cmp outsl cmp fcoml xor add add mov xor xor sbb jmp mov aad jge cmp add inc add add cli xor xor xor cmpsl add xor add xor mov add ss aaa aas cmp add cmp cmp ja and cmp cmp js cmp sbb cmp aas jo and push add xor inc mov les enter add xor xor xor xor loopne in call add xor xor pop xor xorl add mov xor xor xor xor lret add add xor xor cmp xor xor xor adc in xor ss sbb add jp stos aaa fidivl add cmp or xor cmp mov cmp cmp dec add aad or jge stos cmp cmp cmp pop cmp cmp cmp cmp sbb mov add cmp xchg ds add dec aas lcall add cwtl add xor repnz xor or cmp out and xor nop add xor sbb xor es aam add xor stos add add cmp mov fiaddl push cmp adc inc cmp add sub imul cmp push cmp cmp cmp cmp ljmp add ds test and add cmpb stos aas fldl and add scas xor xor xor push xor xor xor xchg xor cld xor xor in sysenter inc xor xor les xor add ss ss mov add add aam add test lret cmp sub mov sub test or dec cmp cmp cmp cmp (bad) cmp add add ds movsb ds adcb aas test in mov nop add jo and xor xor xor xor sub xor mov rolb xor xor xor xor add xor xor xor ss ss ss add lahf aaa lret cmp cmp cmp cmp cmp add cmp cmp jbe cmp cmp cmp cmp ds mov add add xor cltd xor xor xor mov (bad) xor xor xor xor add imul xor stos xor (bad) jmp sti xor xor sbb sub cmp dec xor pop xor jnp mov add lret xor xor jmp sti xor xor xor sub xor xor xor imul mov xor stos xor add add xor xor xor xor fbstp xor xor xor cmc xor xor xor xor sbb sub add xor dec xor pop xor add xor add xor xor stos xor xor dec add xor jecxz add xor stc xor or adc add sbb and daa add ss dec ss ss add pusha ss add ss (bad) jmp sti add aaa sbb sub cmp add pop aaa imul aaa orb mov aaa jmp sti aaa or add cmp cmp cmp add imul cmp stos cmp (bad) cmp cmp cmp cmp fnstsw jecxz jmp hlt cmp cmp cmp adc push cmp cmp and daa cmp cmp cmp cmp dec cmp pop cmp add imul cmp add cmp xchg cmp cmp test cmp lds lret cmp cmp xlat cmp cmp cmp cmp in cmp cmp cmp cmp add or (bad) cmp sbb and cmp cmp xor aaa cmp dec cmp push cmp add jnp (bad) cmp add add add xor xor cwtl xor add xor xor xor xor enter (bad) xor xor fdivs fdivl loopne in add xor xor xor xor clc xor xor xor add xor adc adc add xor and and add xor xor xor cmpb cmp inc xor add xor xor pop xor xor add xor xor jl xorb xor out xchg xor mov xor xor enter (bad) xor xor loopne in sub xor xor xor xor xor fs xor xor xor cld cmp cmp add xor add push cmp cmp add cmp adc rolb add add clc cmp cmp cmp add or or adc add sbb sbb and add sub sub xor add cmp cmp inc cmp inc add dec cmp push cmp pop cmp cmp push cmp js jl cmpb cmp mov mov nop cmp cmp test lods cmp mov cmp cmp enter sarb aam add cmp cmp cmp cmp call cmp cmp clc cmp cmp cmp add cmp adc adc add cmp and and add cmp xor xor add cmp inc cmp dec cmp cmp pop cmp cmp push cmp js add add add add add xor xor add xor xor xor adc xor xor xor and xor add xor cmp xor adc xor push xor xor xor xor add js jl addb test xor xor add xor xor xor add xor xor xor add xor xor xor add xor xor xor add xor xor xor add xor xor xor add xor xor xor add or adc xor sbb and xor sub xor xor inc xor xor push add pusha xor add jo je js xor mov xor pushf add test lods add mov (bad) xor int3 add fdivs xor in add clc xor ss or or adc adc sbb sbb and and sub sub xor xor cmp cmp ss ss ss ss inc ss ss ss add add push ss ss jl xorb add mov mov nop ss add cwtl ss mov test lods ss mov ss les ss (bad) ss fdivs fdivl loopne in ss ss add clc ss add add aaa or or adc adc aaa sbb sbb and and aaa sub sub xor xor aaa cmp cmp inc aaa inc add dec aaa dec aaa push aaa push add pop aaa pop aaa pusha aaa add push aaa je aaa js jl xorb add mov mov nop aaa xchg add cwtl aaa pushf aaa mov test lods aaa mov mov aaa mov aaa in add lock hlt aaa clc aaa cld add add add or or cmp inc cmp dec add push cmp cmp pusha cmp cmp jo je js jl cmp cmp cwtl cmp cmp add mov mov add enter sarb aam cmp cmp cmp cmp add call cmp add clc cmp cmp cmp cmp cmp adc adc cmp cmp and and cmp cmp xor xor cmp cmp inc cmp dec cmp cmp pop cmp js,pt jl,pt cmpb mov mov nop ds ds add pushf mov add lods ds mov mov sarb ds sarb aam fadds fdivrl loopne in call lock ds add add add or or aas adc adc sbb sbb aas and and sub sub aas xor xor cmp cmp aas inc aas inc aas dec aas push add push aas pop aas pop aas pusha add fs push add je js jl addb test mov mov nop add xchg aas cwtl aas pushf aas mov test lods aas mov aas mov mov add les enter rolb aas aam fdivrs fdivrl loopne aas in call add clc aas cld aas add add dec add add or xor adc adc sbb xor and and sub xor xor xor cmp xor inc xor dec add push xor xor pusha xor xor jo je test lods add mov mov mov (bad) xor xor xor add (bad) xor xor xor add loopne in call lock xor xor add add add or or xor xor sbb sbb xor xor sub sub xor xor cmp cmp xor inc xor dec add push xor xor pusha xor xor jo je js jl xor xor xor mov xor xor (bad) xor xor xor add (bad) xor xor xor add loopne in call lock xor xor add add add or or xor xor sbb sbb xor xor sub sub xor xor cmp cmp xor inc xor dec add push xor xor pusha xor xor jo je js jl xor xor xor mov xor xor (bad) xor xor xor add (bad) xor push fwait or add hlt xor xor xor add add vandps xor sbb sbb and xor sub sub xor xor push mov addl xor add push xor pop xor xor xor add je js jl addb test mov mov nop add xchg xor add movsb xor add mov mov add fdivs fdivl loopne in xor xor xor adc xor xor xor xor add xor xor xor add xor xor xor add xor xor xor add test sar insb xor add xor xor xor mov add or xor pushf enter xor insb add js jl xor mov xor pushf add test lods add movsl jle (bad) xor pop ss movsl sub add mov mov nop add cwtl ss mov int3 add fdivl loopne hlt ss add or or sbb and aaa sub inc aaa push aaa push add fs push add mov pushf aaa mov mov mov add fdivl in aaa lock add cmp or or adc cmp cmp inc cmp cmp cmp js cmp cmp cmp cmp add pusha cmp cmp aam cmp xor push sbb jo pop int3 pop ror rolb add cmp pop adc jo aas mov les dec clc aas add add add lock or inc sbb xor add pop sub mov xchg add rolb mov xor (bad) sub clc stos pop add insb add cwtl add rolb sub clc xor xor mov js xor pop call sbb inc sub cmp add insb add pushf xor movsb add mov rolb lock clc xor out add stos push fimull add add sbb mov push add test mov (bad) fdivl xor cmp add ss jl mov aaa or js xor jbe je add add inc aaa call add add pop insb cmp cmp cmp add loopne in cmp adc cmp sub dec cmp je jl test nop add mov mov add in cmp cmp cmp add sub xor push cmp cmp cmp add in cmp cmp adc cmp cmp dec cmp je cmpb cmp cmp cmp add cmp cmp cmp add cmp cmp cmp add cmp cmp cmp add (bad) call cmp cmp pop add xchg cmp add mov add call sbb and or pop ds lock add mov ds add clc sbb and inc add dec or cmpb aas nop or pushf aas or aas inc call add add or adc xor cmp ljmp pushf xor mov xor add fdivl in in xor add add and sub dec add push add xorb xor mov add hlt xor and inc add dec xor xor test nop xor enter hlt xor add add or adc and xor dec xor pop add hlt cwtl xor inc xor xor xor add inc adc fcoms add mov push add stos aam cmpsb in xor xor add inc xor push add int3 adc in inc xor and clc dec adc pop addb lods ss fdivs in add aaa adc xor cmp je adc xchg aaa movsb add fadds aaa loopne clc aaa add or add pusha cmp jo and movsb cmp add cmp cmp cli clc cmp cmp cmp add xor cmp inc cmp jo nop cmp test mov aam fcoml cmp cmp add xor cmp add push add add mov int3 cmp cmp inc cmp cmp cmp add add cmp cmp add cmp cmp cmp add cmp dec adc fsubrl add mov int3 cmp hlt add sub xor ds ds add jo nop add pushf ds adc call cli sub cmp aas pop aas pusha aas push jl cli test enter aas fdivrs in clc adc add add add or add xor xor dec xor xor lods xor sbb and inc add pop inc xor or lock add adc sbb xor add xor mov xor xor add repnz sub xor dec add pop xor jo mov xor xor add call xor add in sub xor inc xor addl xor xor faddl loopne call fsubl pop add nop xor xor add mov lods ss mov int3 ss fdivl call in sbb cmp inc add dec add pop aaa push nop aaa pushf aaa mov in aaa cld aaa add repnz cmp and xor push add pop cmp cmp clc test clc movsb cmp cmp add hlt cmp mov cmp add add and and clc cmp sub (bad) cmp add push cmp mov int3 cmp cmp and and xor fs test add mov in add or add add inc cmp cmp cmp pop add test cmp cmp mov cmp cmp cmp inc cmp cmp cmp cmp ds ds ds add test add sarb fdivrl cld add adc xor cmp pop aas add aas cwtl aas mov mov faddl add aas add and pop add add adc sbb and push xor idivb xor pop lock xor or or sbb or cmp add clc push xor pushf xor xor fdivl cld or cmp push xor xor js test add call adc sbb or add xor xor nop xor int3 xor in xor xor xor add xor push sub xor or xor push je movsb xor test mov mov int3 xor xor xor xor add or adc sbb and cld fs xor xor xor xor add adc xor add ss ss add ss inc mov push push sbb aaa and sbb insb aaa je jl push test aaa mov mov add hlt sub sub xor cmp cmp cmp mov mov sarb lock add add or sub cmp cmp pusha cmp adc xchg cmp add fdivrs loopne in cmp cmp sbb and cmp cmp push add pushf cmp add fdivrs loopne call cld cmp and sub cmp cmp inc cmp push cmp insb cmp cmp mov cmp aam cmp add in cmp cmp cmp cmp cmp cmp add cmp cmp cmp add inc insb cmp cmp cmp adc cmp add cmp add aam push in in cmp add cmp xor cmp dec cmp add cmp adc cmp and sub xor cmp inc add dec ds js,pt cwtl add mov ds loopne,pt sbb and and add aas push aas je addb mov mov add pop loopne cld aas add add add add xor xor xchg xor or add xor adc inc add and add xor inc xor fdivs add in scas in ss add clc ss add add aaa or or mov aaa sbb and lods sub sub aaa xor xor cmp rolb add add pop aaa pop adc pusha aaa fs insb aaa jo add js enter aaa xchg add cwtl add mov inc aaa lods add mov mov aaa les enter rclb aam fadds call push aaa in aaa lock clc add add cmp or or adc cmp sbb sbb and cmp sub sub xor add cmp cwtl cmp enter cld cmp add in adc adc sbb and cmp adc sbb add add pop xor cmp cmp cmp fs js insb cmpb jo add add rclb cmp outsb dec add push add adc and test lods xor mov xor add enter xor xor add fdivl loopne in call lock xor inc add add or dec adc xor xor xor xor inc aad cmp add add add add push rorl or xor push rorl mov xor xor xor xor add xor xor xor push xor or add xor xor xor add xor push insl adc xor xor add inc add mov test movsb and xor xor xor inc add adc (bad) lock cmp cs add inc cld inc (bad) cld inc cld xor add adc (bad) adc cmpsb adc add add adc add add add dec (bad) incb add incl incl fcmovu add add addb add add hlt mov jp add jbe add add add add add add add add incl add add xor pop ljmp add leave add fwait add add add sbb add and cmp fcomp xor adc xor add add add add mov add add add push lods in dec jg add sub or cmc jbe adc or push add jne jo add add xor sbb pop add add add add jbe pusha je imul push jmp (bad) mov add imul mov imul push xor and add or jae inc add add jno pop xor lods add add ljmp xor add pop sbb push sbb adc xor aaa add lods add aaa add add xor push xor push sub sub in add popa push inc add add das add pop add insl add add outsl add add jae das add add cs add add xor push dec xchg add add or add add leave test or add add add inc or cmp add fisubr adc ret push add jne mov add sub add pop data16 jo add or add or jge data16 in pop add add or aam adc add add add mov cmc leave add sbb add push add xor stos push mov mov add popa sbb cmp mov or add jb movl add stos mov add add add inc iret xchg xor aaa push add je test or fild es adc mov mov notl cmp adc or fldl pop add xchg add add adc add xor je fbld fnstsw hlt pop mov ja pop add inc inc or add or push add push stos ret lods add stos add stos pop add cmp add sbb add int in dec jg sbb mov out add add push sbbl fs and xor add outsb add cmp xchg sbb adc fisttpl xor cmp add add add fwait xor push xor push or icebp add sti add add leave add add add xchg sbb add add add add add aaa add add add add xor add add add add add add inc pop inc add add add pop inc add add add pop inc add inc add cmc or call push inc cmpsl inc mov add add add add push inc add add pop or or inc add push inc add add add add add or add les or add movsb or or or arpl and and and and and arpl arpl arpl and or arpl jns das jns and inc dec push dec dec push and je insl xor pop jo outsb addr16 and adc jae jae or sahf arpl add jp sub add das add add xor xor sub and ljmp je imul push sbb data16 imul outsl je and add adc xor add add arpl sub add arpl add or test add outsb add sbb add imul or add jae jbe arpl or add push or jae or add add jo je jo add adc bound push or dec adc outsl add push adc add and add add inc add add sbb add add arpl jb jbe adc adc and add data16 pop add mov insb add adc outsl add and rorb add or insl adc jo test jae jns sbb jne imul fs popa add sbb add addr16 adc and add adc add jne jb insb add in insb add pushf or fs insl or ja cmpsb or add mov add ja fs add adc adc jno ja add je jns fmull outsl add fiadd outsb mov push add add arpl jbe bound outsb add xor xor xor xor xor jl inc fs jae dec gs gs push popa bound jb insl push push inc push push jo arpl add add xor ja popa push out mov les (bad) hlt push xor xchg fs xor fdivrl jmp rclb mov sub mov sbb dec jno repz test ficompl jmp (bad) mov hlt movl imul std in leave mov add insb push arpl psubd or outsb cmp imul addr16 add aam dec std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne fild or shrl cmp ficom push xlat enter mov and mov cltd xchg mov mov or or and or adc stos sbb data16 inc fdivl jno add aad mov mov movsl in lahf xor mov js stc add mov push loope or insl or pop arpl hlt push imul insb sbb xor dec add in xchg push insb jnp add (bad) hlt or (bad) fnstenv adc mov mov bound ficoml gs aam pop popa mov into push mov je mov aam movsl fisttp xchg fdivrs sti hlt (bad) shrl imul mov sarb add in add pop dec or cmp add daa adc or and test or mov popa into push stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov in mov mov add inc aad scas ja popf adc push fdivl or test fs ds or or push in decl xchg daa scas add mov pop jge xchg (bad) shlb add inc push imul xorb sbb push imul aam loopne rorl int3 dec frstor fistpll mov mov aad mov call xchg shll push repnz addr16 cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns imul andl shrb ss push xchg ja int3 add mov das es lds or sub mov cmpsl call ret (bad) mov sahf fldcw ret es pushf mov insl add ss jmp addr16 jb push add adc mov jnp sbb xchg or out fdivrl fisttpl aam roll clc mov push int mov mul ja outsl ja mov out or lret pop or adc sahf gs scas (bad) clc sar imul insb push js or push addl mov cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild cmp aaa push scas mov fidivr mov jmp repnz lret mov cmpsb mov sarb sub push mov jp mov dec popa les sbb xchg sub aaa mov or sbb add sub add sbb (bad) (bad) (bad) cld in add inc push popa arpl jae pop jbe outsl insb popa je outsl outsb inc inc add and sub outsb xor pop gs gs pop xor add sbb jae fs inc inc pusha add dec gs push dec pop inc jne data16 pop push pop push ds and je pop inc dec dec inc dec dec pop inc dec dec push push dec dec dec inc push pop dec dec inc dec push inc inc push xor ds ds add pop push pop dec inc push pop inc dec push push dec inc pop pop dec inc inc dec dec dec inc inc inc pop add add ds add inc add inc inc add or inc push push or xor xchg xor or push or add dec inc inc dec inc push dec push push or add push cmp sbb dec inc inc push push or xor or pop push push adc xchg or or add adc loopne lods add mov jae arpl jo push cmp jne add jae and or cs add bound pop fimul push xor sub cld (bad) pushl add adc incl add insb or cmp push push adc movsb or jg push or add add outsl or add add or or or push ret unpckhps and adc or adcb and add leave sbb in mov ret inc and sahf mov sub inc rcrb and sbb addl xlat xchg inc push add inc stc mov adc mov decl js roll (bad) loopne jmp xchg test mov cmp inc mov popf sti jmp stos push inc mov repnz test pop stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl cmpsl xchg cmp xor dec cmpsl in cmp sahf xchg pop lcall lock mov popa sar mov fsubs stos xchg clc repz mov subb fwait xchg and and int int or sbb aas jno or mov inc add aas pop fs dec lea aas ret shrl mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov std std into popa test ja stos in das dec pop loope les aas xchg les jne int mov addr16 push mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov das lea mov inc aas and movsl jmp jg sub jge mov inc rcr push arpl int3 and call cmp jp and cmp mov cmp std xlat cmp mov sbb add movb aaa fldt cmp jno shlb (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub dec in ss push scas into imul faddp jge call mov xchg cmp push andl dec dec gs std orl in ficomp frstor adc add adcb adc add add mov xchg add sub add add add add orb insb add pop imul xchg add sbb add orb add mov add mov add or add xor add or and add add push add mov loopne push add popa push add int add add inc add pop add inc add dec add add xor add push add pop add inc add push add and sub dec add dec add out incb enter xchg add pop add add add add adc je jb mov inc add insb add dec adc adc add mov and xor xor xor cmp repz dec add add add outsl add stos or outsb add dec add insl add push add and dec add arpl jb jp push mov gs or add cs sbb add add cmp push push push ficoml sub add in adc popa add add add add add jo add pop or add or adc add lret or sbb push imul push add add push add mov jb outsb add insb sbb sub adc add dec add addr16 jo jns (bad) push call inc adc sub add add add add push add dec cmp sbb add fs jb imul push inc movsb add pop push mov add and add ds test outsb adc call sub add jl arpl js in sub add out js arpl je add mov add add ds add add or (bad) and add rorb add and mov xor or insb inc ds adc or add push sub add add mov sbb add add adc or add sbb outsb incl sub add or outsb incl inc sub xor lcall jp mov add xor cmp add decl outsb out push jp call repnz (bad) (bad) (bad) data16 add add add ret push incl jbe incl outsb out push outsb loop push outsb fisub add ljmp cmp inc adc (bad) (bad) add push add push jmp out cli xor sbb cli (bad) jmp or pop (bad) or dec ret add loop inc mov add dec xchg loop dec xchg out push jbe incl data16 repnz or add loop js idiv incb or orb bnd and cmpsb lret addb fsubs add push call add dec or adc fdivrp shl cli add addb push jbe sbb jb call out decl outsb fiaddl add outsb (bad) push outsb fiadd cld add (bad) (bad) adc sbb jbe add mov or add sub xor cmp inc or jle sbb jp (bad) jp ljmp decl add adc ds add es ss adc loop xchg mov or pop sahf out es out and inc add xor and ljmp ret mov xor adc add ljmp add (bad) ds ljmp add add and ljmp mov call or add inc add add ljmp xor cmp test inc add add sub inc mov addb inc add pop pop add xor add push dec add dec push add cmp outsl add insl and add add js add pop add dec push add push dec add push pop add pop push addb inc add test adc loope add adc or mov add incb add add adc add test add wrmsr cmp test stos xor xor xor xor dec xor mov jmp xor xor daa aaa xor outsb aaa test xchg aaa test aaa (bad) aaa (bad) aaa fnstenv jmp cmp cmp cmp jns mov cmp pop cmp xchg cmp cmp cmp cmp cmp cmp sti cmp sbb gs add sbb and aas add add add add xor xor xor xor xor xor xor xor xor xor xor xchg xor pop xor xor xor xor xor xor xor pusha xor adc and cmp or push aaa xor push aaa mov cmp cmp mov nop cmp cmp cmp pop cmp xchg cmp cmp cmp cmp cmp stos cmp cmp cmp cmp push cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp outsb cmp xchg cmp lods cmp (bad) cmp jecxz jmp icebp cmp add or adc sub cs dec ds ds ds ds ds jge,pt mov xchg ds mov ds fidivrl fistpll lock ds or adc and xor test mov (bad) aas les out aas add add add lock add xor xor pop xor or adc push xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov add push and sub dec ss xorb ss ss ss xlat ss sub aaa inc aaa dec aaa push aaa xorl mov mov aaa jecxz icebp aaa divl or pabsd xor insl cmp cmp cmp cmp push cmp test lea fdivrs jmp cmp push cmp arpl dec cmp cmp cmp push cmp iret cmp daa ds ds ds ja,pt mov cmpsb aas add add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc push lock jmp xor inc xor xchg xor hlt xor lods fidivl add push aaa es dec aaa push aaa mov mov aaa in aaa xor inc cmp pop cmp cmp cmp cmp jle mov cwtl cmp cmp cmp cmp dec cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc test mov scas xlat aas add add add in hlt sub mov xor js or xor xor xor xor xor mov popf xor xor push xor jns mov (bad) xor cmp int fnstenv (bad) cmp cmp pop cmp outsb cmp jnp xchg cmp mov cmp cmp cmp cmp cmp cmp jo test lea xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp leave cmp in and xor cmp aas stos aas mov add add add add add xor pusha xor jno (bad) xor xor xor xor xor xor xor outsl xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp xor scas xor cmp pop outsb ss ss ss fidivl hlt ss sbb xlat aaa fnsave sbb ds xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp (bad) and sub dec cmp popa cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loope js mov or pop aas data16 jne xchg lds sarb fistpll repz sti aas add add add add xor xor sub cmp dec xor out xorl movsl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov ss and sub inc aaa ja xchg aaa out aaa hlt aaa stc aaa mov adc cmp push cmp lret hlt clc add cmp cmp cmp xor dec cmp cmp cmp cmp stos cmp mov cmp idivb push ds and sub xor aaa ds ds ds jl,pt xchg xchg ds mov aas xchg aas lahf aas movsl aas (bad) aas fdivrs jecxz out aas hlt aas add add and xorl mov (bad) xor xor xor xor xor xor xor xor xor sbb and xor xor xor xor xor xor xor pop xor jnp cltd xor xor xor xor xor xor xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor divl dec aaa imul aam repnz add cmp jnp lea mov mov ret cmp cmp cmp jp xchg nop cmp cmp cmp cmp cmp cmp cmp cmp jg test xchg cmp cmp cmp cmp cmp cmp cmpl push cmp cmp cmp cmp cmp push outsl cmp xchg cmp (bad) cmp std cmp and push ds lea mov adc and dec aas insb aas les ljmp add add sbb and je xchg adc sub inc xor xor add outsl xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor and aaa push aaa lret aaa fidiv jecxz add or daa cmp push cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp imul cmp cmp cmp cmp cmp cmp cmp cmp cmpb cmp cmp cmp cmp cmp cmp js mov fidivr pop sub dec ds ds int jmp pop aas and mov add cmp pop xor inc xor inc xor xor xorl xor xor xor xor xor xor xor xor xor xor inc xor je cmp xchg xchg mov fnstenv in ss aaa pushl sub xor inc cmp push cmp cmp cmp cmp cmp cmp cmp jge pop cmp jb jl (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp inc ds ds xchg add add xchg xor xor xor sub xor xor xor pusha xor xor xor xor xor xor xor add ss ss imul mov xchg aaa lods aaa mov aaa cmc aaa or sub mov cmp cmp cmp cmp inc cmp mov fidivr pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test sarb adc aaa ds movsb ds aas mov xchg aas lcall add add xor int3 xor xor xor xor xor xor pop add xor inc cmpsl ss aaa push aaa pop aaa jno nop aaa cltd aaa mov aaa or adc sbb xor cmp cmp dec cmp cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov pop ds add add add faddl add pop xor xor xor jge (bad) xor xor xor xor xor xor xor aaa xor jae jge mov mov xor xor xor xor xor xor xor xorl xor push aaa push aaa mov mov aaa adc pop cmp cmp cmp mov mov lret cmp cmp cmp cmp cmp cmp cmp dec cmp bound cmp jge mov xchg cmp mov cmp cmp cmp cmp cmp or adc and popf cmp cmp cmp cmp cmp ds aas sub xor aas jae (bad) aas fwait aas mov aas (bad) push inc or scas add add lods add add xor xor repnz xor xor xor xor xor xor xor xor xor inc xor xorl pop cmp jbe xchg cmp cmp pop cmp mov fidivrl cli cmp cmp push cmp cmp cmp cmp mov repnz mov cmp cmp cmp push cmp sbb cmp inc ds ds ds ds ds sub xor inc aas push aas arpl jo jl mov mov aas add add add add add bound jne jp lods xor xor xor xor jns jle cwtl xor xor xor xor jb jge mov (bad) xor xor or xor xor xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor aaa xor jbe lret xor divb xor inc ss ss ss adc sub (bad) aaa (bad) aaa cmp cmp cmp cmp cmp jl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp jge xchg cmp mov cwtl cmpsb ds ds sbb sub xor sahf aas mov add mov hlt inc add xchg xor xor xor es xor xor xor inc ss ss aam cld or adc push aaa ja xchg leave aaa jmp or cmp cmp cmp cmp cmp cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and cmp je cmpl pop fnstsw repnz push aas and sub das aas jo jge xchg aas movsl aas mov mov aas add add add add add fidivl pop xor xor (bad) xor xor xor xor xor xor aaa xor lea mov (bad) xor xor xor xor xor xor movsl ss ss mov aaa je cmp cmp or adc sbb sbb and dec cmp lea xchg cmp cmp mov cli cmp cmp or or jb jge cwtl cmp cmp sub clc cmp cmp inc cmp cmp cmp test and cmp cmp cmp cmp cmp pop cmp inc cmp insl cmp jmp cli cmp daa ds aas or adc (bad) cmp and dec aas outsl aas lea xchg aas cwtl push (bad) cmp movsb aas test lods aas mov cli popa push xor cwtl add xor or or jb jge cwtl xor xor sub xor xor cmp cmp inc xor sub xchg xor test sbb and cmp inc xor xor popa xor xor xor xor xor xor cmp xor add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp jno xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp movsb cmp cmp out cmp push ds ds ds and inc aas dec aas push aas mov xchg aas mov aas icebp aas add add cmp lock inc xor dec xor js in xor xor xor xor xor xor cmp push xor jne xorb xor xor xor xor xor xor nop xor xor mov xor xor xor xor aad inc aaa push aaa nop aaa popf aaa cmpsl aaa mov mov aaa pop cmp cmp cmp inc cmp mov cmp ja sarb cmp ret cmp cmp cmp cmp cmp cmp cmp cmp imul cmp cmpl cmp cmp cmp pop cmp cmp cmp cmp lods ds xlat adc inc aas inc aas push aas pop aas gs imul aas jp cmpl aas xchg aas popf aas mov aas les into aas aam fidivr add add inc adc pop xor xor xor xor xor xor xor xor xor push xor xor jno ja jle test mov xchg xor xor xor xor xor xor xor xor xor xor or adc pop xor xor push hlt psubusb xor dec xor pop xor xorl pop xor xor xor mov mov xor hlt ss aaa sbb sub ds test aaa lret aaa fidiv adc pop cmp cmp cmp cmp cmp cmp cmp cmp xor imul cmp cmp cmp cmp cmp sarl pop xchg sarl fistpll stc ds aas and aas fwait aas mov testl test hlt movsb add xor inc xor xchg mov enter sbb pop xor xor xor pop xor xor xor xor xor xor xor xor xor xor pop xor xor xor xor xor xor xor xor xor jnp mov xor xor xor xor xor xor xor outsb xor push ja mov mov or or aaa daa aaa push aaa pop aaa fs stos aaa mov ljmp aaa add pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add add add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and jno mov scas aaa mov cmp push cmp arpl imul jl cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp outsl cmp jl adc inc aas inc aas dec aas dec aas push aas pop aas pop aas arpl imul js jl (bad) aas xchg mov nop aas xchg aas lcall and xor pop xor xor dec xor add dec aaa test imul add sub add add and sbb popa xor xor cmp cmp cmp cmp cmp cmp cmp cmp add add xchg xor xor inc xor pushl loopne js jle pop ss ss and mov cmp xor leave cmp cmp jbe test and cmp cmp cmp aas enter add add adc adc ds xor push das ds inc add dec xor xor xor xor xor xor xor ds add cmp add arpl jo jle scas xor xor xor xor xor xor xor insl xor xorl cltd xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor test popf xor (bad) xor (bad) xor dec ss fidiv add xor inc aaa jnp mov mov aaa adc aas cmp test scas cmp cmp cmp cmp jne xchg mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp gs cwtl cmp lret cmp aas ds ds jae,pt jge mov xchg movsb ds ds or inc aas lea sarb aas xlat aas loope fmuls add lock xchg xor xor xor xor xor xor xor xor push xor xor xor xor xor jno jne jnp test (bad) xor xor xor xor xor xor xor xor xor and xor xor inc xor pop xor js jl (bad) xor mov mov xor xor jns lds adc xor xor xor xor xor xor xor xor xor xorl xor (bad) xor fidiv or ss arpl test xchg ss ret ss icebp add and xor push aaa pusha aaa xorl movsl aaa mov mov aaa sti aaa sbb cmp add loopne add add mov xor int3 xor xor xor xor ss adc hlt xor xor xor xor xor xor xor xor xor xor xor xor push inc inc add xor inc inc add inc push aas inc add pop sbb adc cmp out push adc add add push inc pop shlb je jl test mov xchg xor mov mov xor xor xor xor xor xor xor or add add fmull push inc or and xor xor xor xor xor je js jl xorb xor xor js xor xor enter (bad) xor xor xor xor xor xor and clc xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor inc and pusha xor xor and xor xor sbb mov xor in or cmp aad jo add add test lods xor xor enter (bad) xor push cmp xor xor xor xor xor push inc inc sbb sub and add xor push scas inc adc xor sub xor nop xor push xor xor in xor add or adc sub cmp cmp dec ss ss ss ss test mov nop ss mov ss ss fdivl hlt ss or sbb aas inc add sub ds add sbb add push cmp imul aaa in aaa cld aaa add add or and xor cmp dec cmp cmp jo cmpb cmp movsb cmp loopne in call cmp cmp sub xor xor cmp push cmp cmp jl cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp test and cmp cmp dec cmp pop cmp cmpb cmp mov int3 cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp pushf cmp sarb ds inc ds ds ds cmpb ds mov ds mov sarb fdivrs in add adc xor cmp inc aas fs jo nop aas pushf aas mov add clc adc or sub pop xor xor xor xor xor xor xor dec xor xor int3 xor xor xor and sub cmp pop xor xor xor xor xor xor xor cmp dec xor jo jl pushf xor fdivs loopne lds adcl insb xor xor xor xor xor xor xor xor xor xor xor and push xor mov (bad) xor or sbb cmp inc ss ss ss ss test nop ss mov ss ss sbb and sub xor push aaa pop aaa fs jo nop aaa cwtl aaa mov aaa aam loopne add or adc sbb cmp dec cmp sarl sarb cmp cmp aam loopne add or adc sbb and sub dec cmp cmp mov nop cmp and cmp cmp cmp cmp cmp inc cmp cmp test movsb cmp loopne call cmp and sub xor cmp dec cmp jo js test movsb cmp cmp cmp cmp cmp cmp and sub cmp jo jl pushf cmp cmp cmp cmp cmp cmp cmp cmp inc inc dec cmp jl test mov aas and cld cmp inc ds push (bad) aas sub fs je,pt jl test pushf and sarb fdivrl in cld sub pop aas push aas mov sarb aas in aas add add push inc xor xor xor xor xor xor and pop test xor clc test and xor dec xor pop xor clc or js sub add add push push adc push adc (bad) or xor inc sbb (bad) xor int3 push sbb xor out add xor hlt sub adc and and sub sub sbb ss ss lea add ss dec inc and ss ss je jns add xchg ss ss mov lods adc pop mov les enter cmp dec aaa pop aaa push adc movsb aaa test cwtl cmp dec test lods cmp cmp loopne in call cmp cmp cmp cmp cmp adc adc sbb sbb and and sub sub xor push cmp je js jl cmpb cmp cmp inc lods cmp cmp cmp cmp cmp mov adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) adc add jne rolb xorb xor push ss xor insb aaa lods aaa fdivl adc dec cmp (bad) (bad) sbb (bad) sbb add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add incb add add out add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add or or add add or lea sti repz ljmp xchg mov xlat ror adcl dec inc cmp xor jnp cmp sti bound mov add cld shl mov ret jne xor (bad) jge inc and dec jae xchg subl mov ds cmp pop add cwtl pop rorl lahf mov sub xor pop popa das lea test (bad) cmp arpl stos sub sbb out mov mull pop jne add cmp js inc adc loop std cld sarb sub es mov iret cmp leave mov jns repnz lahf mov imul push in push add js cmp into add mov in cmp and cmp push lahf clc add mov and (bad) pop push xor data16 xchg cmp push mov mov add sarb lods lods xor cld add sub xchg jl ss jne sub cmpsb xor in in sbb pushf das sbb pop lods inc insb fucomip cld or xor xchg int xlat mov je (bad) lcall and mov (bad) movsl fcmovnbe scas and sub xchg incb imul mov (bad) sub pop xor les mov mov fwait ret mov fs ljmp aaa out dec imull xor jmp and xchg add jecxz cvtpi2ps hlt jg xchg mov bound jbe imul dec (bad) xor mov jb mov sbb imul pushf ja in fcom add outsl ret test add mov call fcmovnbe loop (bad) outsl cs out push jecxz pop loope ljmp add xor inc add add add aas inc push gs gs imul inc inc add xor add add cs inc push bound pop popa insb insb outsl arpl je inc inc add xor add add cs inc push push outsb arpl arpl fs jns gs jb popa jns imul jo jns inc add xor add add cs inc push inc jns gs jb popa jns outsl jne arpl jae popa jo jns inc add add xor inc add add add aas inc push push imul jo jns inc add add xor add add cs inc push push outsl jne arpl jae popa jo jns inc add xor add add cs inc push jb outsb je insl gs gs outsl jb jae fs inc add xor add add cs inc push popaw imul jae bound gs jae fs inc add xor inc add add add aas inc push jae jae gs pop gs outsl jb jae fs inc 