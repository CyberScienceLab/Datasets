inc cwtl adc xchg pcmpgtd or data16 push add or xor data16 int3 or data16 adc jb mov imul or data16 or je or data16 add popfw dec push data16 lahf or pushw add data16 xchg pcmpgtd bound data16 or adc or add data16 or and xchg pcmpgtd inc push data16 mov pcmpgtd jne dec sbb and data16 sub data16 pcmpgtd add data16 add test data16 or data16 dec push data16 ja data16 mov adc insl push mov data16 inc push push in out push inc xchg pcmpgtd sbb or data16 imul scas lahf or add add add add add add cli mov dec add add add adc xor add mov add jne add jne add jne add jne add jne add jne add jne add jne add jne add jne add ja add dec add ja add ja add ja add ja add ja add ja add js add js add js add js add add dec add dec add dec add js add js add js add js add js add jns add jns add jns add jns add dec add add dec add dec add jns add jns add jns add jns add jns add jp add jp add jp add jp add dec add dec add add dec add jp add jp add jp add jp add jp add jnp add jnp add jnp add dec add dec add dec add add jnp add jnp add jnp add jnp add jnp add dec add jl add jl add dec add dec add dec add dec add dec add jl add jl add jl add jl add jge add dec add jge add dec add dec add dec add dec add jge add jge add jge add jge add jge add jle add jle add dec add jle add dec add dec add dec add jle add dec add jle add jle add jle add jg add jg add jg add dec add dec add dec add dec add dec add jg add jg add jg add jg add jg add orb orb orb orb orb orb orb orb orb orb orb orb orb orb orb orb orl xor dec add add dec add dec add orl mov orl in orl jb dec add (bad) dec add dec add dec add dec add dec add add add dec add dec add dec add dec add test mov dec add xchg popf xchg popf xchg mov dec add xchg mov dec add xchg mov mov ret mov xlat mov rorl dec add mov ljmp add mov jmp mov (bad) mov cld mov cld mov adc add lea jge dec add mov and dec add (bad) add (bad) add dec add dec add dec add dec add add dec add dec add dec add dec add dec add dec add dec add xchg dec add xchg dec add xchg dec add dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add xchg dec add cwtl dec add cwtl dec add cwtl dec add cwtl dec add cltd dec add cltd dec add cltd dec add lcall push fwait dec add fwait dec add fwait dec add dec add pushf dec add pushf dec add popf dec add dec add dec add sahf dec add sahf dec add sahf dec add sahf dec add sahf dec add sahf dec add dec add dec add dec add dec add lahf dec add lahf dec add lahf dec add lahf dec add mov dec add mov dec add dec add dec add dec add mov dec add mov dec add add aas push add add add or add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add imul inc mov sbb add add add add push outsl jne xor add add add push add add daa inc add add add inc add add add and add add add add add inc add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add add push sbb push sbb add add pusha mov push inc xor add or or add add add dec add sbb push lock add (bad) decl add add add add add add add add sbb hlt pop inc add add add add mov add push gs outsb je outsb insb jns push bound popa outsb je add push outsl jne xor push add add adc sbb mov add add add add add add add add mov stc in mov inc mov inc nop icebp add add push dec or add add adc inc add add mov inc add add add (bad) (bad) incl add add and sbb dec add add add add add sbb add add fsubl inc add add add sbb add add sbb inc add add add inc add add add sbb add mov push sbb sbb add inc add and inc add add add movsb and (bad) (bad) (bad) incl add add add add inc add and (bad) (bad) (bad) incl add add sbb cwtl sbb xchg pop inc add pop inc add add add add inc jne add dec add adc add mov add push inc add mov add pop inc add add add add jo dec add (bad) (bad) incl add add and or add mov jae mov add test inc add add add add add add add add nop sbb mov push push inc add dec add add add add and inc add add add fsubs inc add add add xchg call add add adc cmp add fsubs inc add add add inc add jbe push add add adc cmp add fsubs inc add add add inc add jbe jo inc add add add adc inc add add and add add add add add pop inc add jbe js inc add add add add and add add cmp inc add jbe andb add add inc add add add mov inc add add add jbe cwtl and push add add pop add add (bad) incl add add add add and nop xchg mov inc add (bad) (bad) incl add add sbb inc add pop inc add sbb inc add pop inc add sbb inc add inc add add add push inc add sbb inc add pop inc add push inc add sbb inc add pop inc add inc add sbb inc add pop inc add sbb inc add pop inc add je add (bad) (bad) incl add add dec add mov xor add pop incb or add add add loopne inc add add add add add add add add add sbb (bad) inc and jo inc add add add xchg (bad) incl add add add (bad) (bad) decl inc add add add add incl add add add inc add (bad) (bad) incl add cmp add test inc add add add add add incl add addb add add dec popa jae popa outsb fs aaa add inc jne outsb popa add imul add add jne xor add inc pop aam xchg inc int3 dec popf adc jl xor loope aaa ds outsl dec test stc adc adc sbb mov add push sbb mov pop dec mov pop lahf add sub add xor or stos add xchg dec jo imul sti cld cli mov or sub jno inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add lock add add push add add add add and cmp inc add mov add dec je dec jo imul je outsl outsb add je outsl outsb xor imul lods xor or stos add xchg inc outsl insl insl popa outsb xor add add dec lods xor or stos add xchg inc outsl jb or pop add jle,pt popf xchg fcoml clc lods out cmp mov imul vpaddsw push leave (bad) inc inc nop icebp pop mov mov cltd mov insl loop inc or inc add or add add or add or adc add add adc add or add jae gs insb xor cs insb add add add inc insl jo jns arpl insb gs imul inc add add add fdivs add add add mov or je jmp push mov call jmp add add add add push jo popa je push arpl insb gs imul add inc add add in dec add or je jmp push mov call jmp add add add add push jne jb push arpl insb gs imul inc add and add add lock add or je jmp push mov call jmp add add add add imul insb add add add add jne inc outsl outsb je popa insl imul add inc add add cld mov add or je jmp push mov call jmp add add inc add add add add add add add add add add xchg add add fldl add add xor sub add and push add xor and push add xor add add enter fsubs add dec dec lods xor or stos add xchg mov dec sbb mov cmp adc add inc add add outsl add imul xor add add adc add inc add jae popa add outsl add add add add add add add outsb add add add imul jne jae add add sbb add inc add add add jae jno jne add add add add add inc add push add add add add inc ss dec dec add add pop pop jbe popa push je push popa jb outsl jo add jbe popa dec jae je imul gs jbe popa push popa jb outsl jo add add pop pop jbe popa dec outsb inc jae jb add add jbe popa inc jb gs popa jb imul pop pop jbe popa dec xor jb add jbe popa push je push popa jb popa insb add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa push popa jb jae inc je add pop pop jbe popa dec bound outsb add jbe popa push popa jb fs jbe popa push popa jb outsl jbe add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs bound add add jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jo xor add pop pop jbe popa dec bound gs enter or bound outsb inc jb outsl jb add add jbe popa inc jb gs popa jb add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb gs je add add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add dec xor push int jle sbb mov add pop aam xchg inc int3 dec popf adc jl xor cmp xor or stos add xchg dec add add add add add jae popa outsb fs aaa add popa insb insb popa arpl sbb add and and (bad) (bad) jmp add insb popa arpl xor mov or add add inc add incl sub add add add je outsl outsb add add add je outsl outsb add out xchg or add add add pop add je outsl outsb xor push add add je outsl outsb xor add or inc or add incl sub add add add je outsl outsb xor push add add je outsl outsb xor add pop push jmp adc add add add je outsl outsb xor push add add je outsl outsb xor add fisttp ret adc add incl sub add add je outsl outsb xor add je outsl outsb xor sub lea inc or add incl sub add push or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc push loop in or add incl add add int3 xor add jg inc mov inc nop icebp push ja jle popf xchg fcoml clc cmp xor or stos add xchg cli dec or cmc dec or add add imul add bound sbb add and or insb je add or add cmp add add add add add add add add pop add add and add add xor or adc mov cmp sbb dec popa sbb inc mov lds mov pop (bad) adc scas aas popf mov xor xlat into mov andl xchg (bad) loop pop cs push mov stc cmp pop fldl mov ss xor sub mov sub (bad) fsubrl push popa test sub nop lahf mov stos lods ljmp (bad) pop out aam jg mov xor or lea xchg into fistp mov jnp lods mov cli popf out xchg icebp mov not mov mov ret push (bad) lret pushf sbb mov cwtl push lcall fsubr test enter mov std fs int3 cld mov dec pusha inc fcompp xchg daa inc cmpsl mov push pop push cmp and dec cmp sub pop mov jno cmovle mov lea clc sub jecxz (bad) in dec sbb aam sbb push imull (bad) (bad) mov pop sub out cltd mov jmp push adc jbe ret lahf pop adc pop dec (bad) xchg pop ffree sarb mov pop mov test loope sti imul movsl mov dec (bad) fild test shr arpl iret mov outsb insl in push push loopne mov scas and out cltd sub sarl outsb dec scas (bad) hlt int3 inc inc pop push pop aas movsb push xor daa push inc (bad) xor bound push push add (bad) xchg pop add dec pop ljmp adc fcmovnbe imul or mov nop cwtl pusha cmp xor mov ja lret loop cld leave test cmpsl sbb gs xchg sahf stos in flds sub pop sub adc out mov xchg jecxz (bad) inc enter mov int sbb mov jne in arpl out mov mov lea push sub cmc xor jg sbb aaa div (bad) jns out push mov aad lock push fcmove sub int3 inc rcll (bad) addl stc inc ret imul les cmp add inc sbb jmp mov sub sbb add jmp loopne pusha or xor pop loop jns push dec out xor sbbl dec rclb ss ljmp nop daa and (bad) xchg mov pop imul clc sbb mov mov mov sub xchg ret or data16 push mov lods mov fstpt dec xor xorl adc bound (bad) lret lock rcrb repz push fst sub iret inc les test pop jae or mov loopne (bad) pushf sub pop orl xchg insl fs jo sbb inc dec adc int3 jecxz cmpsl push inc xor movsb sub lret das push aaa aad push xchg dec ret sbb cmp cwtl stos xchg outsb and mov fdivrl insb rolb push push test xlat inc mov jno fidiv dec mov js sbb adc popa je repnz lcall inc sub push xor out or mov push or push stos out fstpl insl in (bad) es push (bad) lds mov inc stc adc xor xchg outsb inc cmpsb (bad) imul into jns pop pop lret push dec mov aad pop inc jg lock jne sub aas mov adcb dec gs dec add test mov pop mov hlt inc addr16 fwait repz cwtl iret (bad) loop cmpsb movsl push xchg push (bad) sbb addr16 add sub push mov hlt push dec das mov cmp cmp test adc pop xor test orl divb iret outsl je loopne sub int3 scas jp repnz pop ljmp jbe icebp mov inc sbb xorb rcrb stos clc xchg ret test (bad) mov jl inc xor mov stos mov inc or cmp out mov aas in push ficomp fwait and ret sbb sbb movsl push int3 adc sar jmp sub in (bad) mov rclb push mov sti rcll mov pop aaa jnp das jb lea cmp ja les fcompl ret push sbb nop notb cwtl popa icebp adc sbb loop mov xchg cmpsb pop cld dec and scas xchg lahf stos xchg cmp lcall and mov scas pop hlt outsl dec out mov loope mov shl xchg repnz push inc sub xor or pop testl in xchg mov rorl ljmp dec mov mov std mov fstpl rorb ficomp cltd push mov fldt pop jno out cmpsl xchg (bad) popa pop aaa cmpsb mov xchg cs mov cld sbb push or addr16 sub and (bad) add pop jle sub movsb imul notb pushf xor insb aas mov adc or jbe push adc dec inc mov mov stos cmp jb cmp insl je mov jge cmc mov (bad) in mov mov jae js inc mov jbe pop aad xor lds lods push rorb ret cmp xor and (bad) mov xchg mov push loop push aaa ror jp inc cmp or lods test std adc enter loope or sub in sbb xor (bad) test out adc pand xchg xchg lea repz adc js and cmc sbb out scas pop dec cmp stos xor adc fwait ss and shlb stc push lret push push and pusha hlt fcomps inc shlb enter or mov aas add loop push flds sub shrl rorb lds or test je outsl clc pop enter loope or dec pop ds aad jns inc gs movd sbb adc xor call lock in and pop insb cmp (bad) adc mov push sbb out or lods (bad) pop rcrb aas lret jb fnstsw insl shrl pop and pop icebp cmp mov jne fnstenv cmp pushw jecxz pop push adc imul sti and std in xor adc xor iret insl ss jbe ret dec (bad) mov or cmp xor ja xor fsubp pop fs xor xor cwtl mov in mov in repnz pop fdivrl jmp divl scas adc pop lahf push push xchg mov fwait (bad) mov out inc les icebp enter add push movsl clc pop cli lds ficoml and jmp mov mov out lods push mov push test hlt mov rcl inc sbb jl leave aad testb push push xchg cs cltd cmp (bad) shll or xor add dec jno call cltd push xorl jp aaa insb es adc ss push outsb ja fwait stc or sub cmc roll fistpll and mov mov sbbl mov pop adc xchg jmp nop add push ljmp mov mov mov sbb xchg inc pop or xchg lods cmp sub or inc sbb or scas lea repnz gs push out sub xchg sbb inc sbb outsl je fcoms dec icebp dec sbb pop imul mov jne pushf ds sub les sbb je adc mulb push adc je sarb repz pop xlat dec cmovs cmp xchg loop ret pop mov pop push and stc imul lea (bad) cmpsl lock test enter call (bad) int sub inc adc sahf pusha icebp fimul (bad) in adcl push jne add shll mov das add sub clc aad lret cmp (bad) mov or jnp xchg arpl add cld mov mov ljmp sbb xchg mov (bad) movsl pushf or add (bad) jle ljmp xor loope pop jg mov out stc jmp fstl dec fdivrs test cmpsl sbb fucomip cmp sub push std mov pop sub inc mov or insb out sti lods neg inc repnz adc mov inc lret add roll xor dec sbb cmp (bad) das xor lahf into in clc mov sub js je rcrb aas sahf push in pop xor cmp (bad) rcrb xchg inc xor and push (bad) sbb inc inc mov ret loopne cmc add test pop mov fadd pop adc cli int3 out mov pop mov movsl (bad) adc lcall dec in xor xlat bswap adc add call dec bound push mov hlt js jne mov aam dec scas sbb cmp out xor (bad) imulb fwait sbb pop lret lea mov sahf pop (bad) cmp mov xchg mov popa sub jne inc shlb mov je outsl push pop push es mov mov jns inc ret nop dec cs outsb fidiv sbb jl ret push int3 ffreep pop pop jb iret repnz adc add xor insl call in xchg mov test fwait out popf pop pop (bad) or mov fcomps jae lcall push dec and mulb add (bad) lods mov add xlat pop (bad) aaa (bad) mov leave mov test push push out fildl (bad) stos adcb ds sub pop lock inc xchg outsl push sub arpl es (bad) mov (bad) mov mov cmp in outsl sub data16 (bad) pusha xor dec movsl jo call cmp int3 cmp xchg jbe out outsl insb push ss lret jp fwait dec leave dec ja out pop mov mov les ds out sub mov je adc lea xor sti (bad) out daa cmp mov mov xchg mov test lods fimull iret and dec mov jge sarl jns push sub daa repnz lods movsl cmp or sub (bad) shr (bad) data16 or jno push push ret dec inc fwait jmp lcall hlt adc and aaa mov stos push lock out mov cmc mov mov loopne mov and lret xorl sahf xchg jmp nop movl mov sti mov or std fstl xchg lods in into cs je mov fisttp bound push int3 xchg out push push nop inc add lds iret xchg cmp mov or mov cmpsb pop mov sbbl lret rcrl xor into mov pop push out push mov loope push in jl xchg mov and push mov gs imull aas lods stos dec call and roll add push movsl lret std push adc xor mov clc xor inc lds pusha jle sbb (bad) flds pushf push add leave push jecxz insb lock in (bad) xor leave (bad) lcall mov addr16 and mov xchg jmp inc push fcmovne das int xchg aas mov cwtl sub movsb push sbb adc mov xor jmp out (bad) loop popf mov xor roll xor and in push sub jg xchg out sbb call pop sub push xchg jecxz mov mov dec xchg mov cmp cli jg shlb mov test scas add sub mov dec mov insl loope movsl scas inc (bad) xor ret jnp arpl mov es jbe out (bad) mov call mov xchg dec aad and (bad) cmp push add cltd hlt ds xchg and push js lret js inc jle lret add push xchg lcall mov jns int3 sbb jg lret xchg es sahf adc sets sbb cli jecxz jne sbb push add mov movsb (bad) outsb mov add mov scas push sub xchg (bad) mov or jbe out fs pusha jmp call fnstcw dec das lret push xor sbb movsl jge cmc or mov xlat add lock lret mov aam sti aas jle out subl push jne adc dec cmp add xor mov rorl leave mov lcall repnz nop into mov dec imul mov test std sub js sbb adc ja adc in jmp jo mov call mulb outsb xchg cmp (bad) pop fcmovb sti mov icebp sub push mov repz dec fdivrl xor enter aaa pop (bad) loope add test cli clc adc or pop pop loop fcomp fiaddl sbb push inc or lret mov inc dec or loop or (bad) dec sbb mov mov (bad) jb popa lds adc adc sub xor add insl dec lea test xchg int3 mov or adc inc adc notl into jne loope cs lret mov add jbe mov add loop lahf aam push mov jns push sahf adc pop xor stos pop push and stos les inc push mov pop repnz xor jg (bad) or mov push psubb push lods lods xor jle inc out popa jg fldcw fidivrl lret push insl clc mov in or test outsl dec fs jo data16 std or je xchg xchg pop fcoml into inc cwtl inc leave mov psubusw push sbb sbb icebp popa pop (bad) fucomip push test fcom jl call (bad) jno mov or and out jmp pop xchg (bad) sub movsl sbb cmp outsl pop push sub (bad) outsb xchg dec sbb in mov cmc faddl mov jle (bad) in fbld aas leave mov mov pop jo repnz gs (bad) call ljmp repz or push lahf ja xor imul std fidivrl xor fistl or and inc add rcrl cmp andl mov adc mov stos mov pop mov jg cmpsl js mov jbe push sbb test data16 flds jecxz fdivrs jmp pop mov and jno pxor xchg insl call fild mov or roll add (bad) dec sbb cmc movsl addr16 out jmp mov iret in cli mov sub jp jne rcr cld mov or xor add add aad inc xor ficom adc or xor cmp push mov std jecxz cwtl cmp ds movsb xor and (bad) imul add leave cld ljmp cmpsl dec out xor fcoms int adc lea jnp ja rorb inc jmp push arpl fmull fcomi ss jbe mov aad pop insb sbb cmp out out sbb (bad) clc imul pop pop jae (bad) sbb mov pop and notb mov bound fisubl sahf sarl fnsave jg jle cwtl adc adc add (bad) aaa enter jne jo mov lahf aas (bad) pop (bad) dec pop inc ficoml and jno,pt or lods iret sbb mov mov cmc ficom shrl xchg xlat or mov push aad out push pop stos cmp nop sub popl rorb jmp je xchg hlt pop cmp ror mov cltd jne imul int3 push jbe mov add cmpsl sbb icebp add fisttp loop ss sahf inc mov adc adc and hlt stos les inc cmp arpl (bad) fsubrp (bad) movsl mov or cmp sub inc adc lods in in pop xor xchg pushf out xchg and lock and xor add push mov mov aaa inc test add or roll rep ljmpw push out sub outsl sbb mov or adc scas ds mov das out into lahf cwtl jbe incb loope pop sub and inc cmc stc cmp push faddl mov mov cmpsb sub (bad) out push fldt add inc bound add aaa jecxz lods jmp jo (bad) pop out shrl lods jne xor or mov xchg add into insb out lods sbb pop scas push (bad) scas shlb enter push mov dec mov addr16 out jmp mov iret dec stc call mulb xlat cmp or fisttpl sti std push inc mov cmpsl xor aad inc xchg and mov enter cmpsb mov push push push aaa pushf pop jecxz fsubs pop dec cmp sub pop mov jno cmovge mov mov loop and shrl stos dec add pmulhw mov scas (bad) test jecxz lea rcrl mov aad divb bound xor (bad) mov dec jbe ret (bad) pop push ret cld or xor aaa fnstsw and xchg sbb mov imul inc add cmp sahf or dec cwtl sub sarb insl dec lods mov pop or das jae sub dec inc sub out jns sbb rcl adc (bad) pop inc stos dec dec adc jmp inc cmpsl mov int xchg nop fdivrl lds insl add jp push sbb sbb xor cmp aam popf cmp arpl gs push adc or xchg jb dec xor cmp adc cs lock cmc pushf mov repnz push xlat add jns inc fst sub into push ret pop or mulb (bad) or sbb jg dec test jmp or dec inc sbb pop inc cmpsb adc xor out push inc lret and xchg adc push ret dec scas dec xchg pop mov cmp rclb cmp add jge imul dec push bound sbb leave cli mov lods jmp dec call mov and ja mov xchg aam sbb adc pusha jae icebp in push xchg arpl daa xor sbb jl sbb mov mov push or xor fcomps enter popa pop and les mov mov adc cmc jo inc aaa subl push push jns lock lret mov aam sti aas jle out (bad) outsl sbb sub or push xlat mov in mov xor dec sub sbb mov and mov lcall movsb sub push sub mov pop out or pop sub addr16 cmp lea lahf rcrl daa and in aaa or addl jo inc pop adc xor mov outsb jecxz fildll cmp push pop mov icebp jmp pop sahf jg lock mov out mov fmuls jo dec aam and or (bad) push and std lods outsl add cwtl repz test cmc add dec mov leave loop add pop test jbe cmp in (bad) popf dec cmp in and jae pop mov movsl jb adc rclb inc mov jge dec jecxz mov mov sarb mov or xor dec jbe out adc inc jnp mov clc jno test mov jl pop mov hlt in mov mov add popl jb xchg pop pop pop xorl aam xchg lock les mov stc sarb bound and int inc or or xor js icebp enter ret lret xchg jo lods sub (bad) mov es call mov cld mov adc mov xor xchg mov and bnd push aad adc test pop popa in lods sbb jmp (bad) cmc lcall sbb (bad) fsubl push lret dec clc pop popf push xchg cmp repz iret mov (bad) gs (bad) or mov cltd (bad) imul pushf and xchg mov insl rcl sub mov pop mov pop ds addl js outsb fs sub incb adc int out lar out popa in jge and imul aad push xchg dec les mov cmp mov rcrl ds fwait mov pop insl rolb pop push inc lock pusha mov inc mov jb addr16 adc push and cli mov cld fistpll and jmp ret iret insb adc adc test jns mov dec std add in mov cmp xor fsubp jbe push push push or inc jmp mov mov pop jecxz fmul pop neg mov ljmp dec push adc xchg (bad) out mov lcall icebp movl mov test movsb negl add (bad) fsts and cmp mov shll mov inc lods or fst shlb insb out pop aam iret pop mov std sbb mov cmp loope stos movsb xor loopne in push pop les or add jo call lcall repz jne out data16 xor or inc xor sti hlt mov sub and fidiv mov push push (bad) mov pop adc add movb xchg mov mov pop sbb xchg and andl (bad) jg add jl sbb popa mov mov pop (bad) dec mov cli mov into dec ret imul or ror in pop jne xchg cmc or (bad) mov lcall mov js jae add repnz dec push in aaa (bad) (bad) xor (bad) xor loope pop and sbb push stc mov fdiv pop dec das aaa (bad) (bad) rcrb xchg aas xor and push sbbl inc mov ret hlt add ss pop mov fcmovnb pop adc stc lret out mov pop mov sub cwtl and and addr16 mov popa mov in cltd adc mov or xor push leave outsl lea adc push repnz pushf sti push inc sbb (bad) stos pop jmp (bad) jb mov xor fwait sbb pop lret dec mov popf push (bad) cmp mov xchg mov pusha sub sahf mov iret lds jae outsb push pop push and pop mov cmp test ret sub cs cmpsb sbb pop mov lahf inc in add out add cmpl cmp cmpsl scas lods push jbe nop or test mov xor pushf leave mov jle insb das push jl xchg mov push loope push aaa rorb cmc gs lahf inc adc (bad) lods mov add jns in pop xorl mov cmpsl inc push stos jmp test sub jg push cmp sub pop lock inc xchg outsb push sub bound and (bad) leave mov or ja dec pop sbb in lds cs data16 lods push mov call cmp fbstp xchg jne out data16 imul dec lret jp lcall push mov mov ret ds mov cmpb adc lea xor sti fmuls in cmp mov sbb arpl mov fdiv lods (bad) into and dec mov jl sarb js (bad) shll add icebp loop stos movsb cmp or sub (bad) shr mov popf js push add push ret lcall push aaa jbe out repz and ss test out mov cmc mov out (bad) inc cli fistpll and leave push push xorl add movb hlt cs xchg xchg mov pop sbb fcoml xchg lods in int aas jae mov (bad) (bad) mov mov inc scas and adc nop inc add les lret cmp xchg and aam dec adc adc cmp sbbb out jecxz rcrl xor int mov push in sbb mov pop jl nop mov and adc sahf gs imulb lods test lea and ljmp mov movsb leave outsb or push adc xor mov scas repnz bnd mov stos (bad) fwait push add enter imul jmp xor leave (bad) lcall mov data16 ret dec outsb and mov xchg jmp inc add push xchg sub mov push sbb (bad) xchg mov xor cli (bad) je arpl pop inc dec pop ss dec jp test imul push cmp push notb push pusha lcall sbb repnz test loop mov mov dec xchg lahf pushf inc scas cmp cltd xchg stc jle shll mov test add sub pop pop pop popf dec mov insb loopne movsb scas inc rorb ret test ljmp dec inc sbb pop inc movsl adc xor in push inc enter and pop xchg adc jns pop push rol inc lock xchg push add dec pop jmp mov xchg cwtl aad and pop mov xchg push test sbb mulb js lret sbb jle lret cmpsl gs and push xchg sahf addr16 fiaddl out loop je sbb or lods mov mov add mov daa xchg lahf or cmp cmp (bad) je in data16 imul push and rcll cmpsb inc cmp mov push xchg jbe call test andb adc or ja out pop leave push mov shll out subl push jne adc dec cmp add xchg dec arpl andl sub mov rorb enter sbb in add mov push mov mov andl and cld sub adc jbe adc mov ljmp out xchg cmc and aaa rol pop fcmovb cli mov lock push mov repnz dec fdivrl dec xor enter aaa pop (bad) loopne add cmpsl jg (bad) xadd icebp push push loop xlat fcmovnu add jnp push ficomp jo adc leave leave or lods test jbe aas out xor shll (bad) mov dec stc mov data16 cltd sub movsl jl clc (bad) ja inc and sbb xchg push add insb dec lea cmpl lret mov addr16 mov dec adc adc jmp mov int xchg loopne sub sub sbb fstpl aam push mov jns sbb fidiv push xor stos push dec and add cmp jns dec sti mov inc push bound pop pop xorl push ret inc cltd stos add mov jge inc out popa jg fsubrs fidivrl leave ret insl clc (bad) in jecxz or sbbl outsb dec arpl mov mov imul jae push push rcrl sti test (bad) jne sub xchg in shl iret popaw jp (bad) cli lods sbb mov mov je pop mov jb lds fnstsw les movsl pop bound cmp fbld jnp mov sbb and insl xchg cmpsl dec sbb in mov hlt faddl mov jge ret in fisub aas leave mov scas dec push jo icebp pop fs loop call ds fldt cltd rolb xchg mov lods mov pop mov cs es test jecxz bound test push les push incb lret cwtl call lods fs fscale repz popf stos adc xchg xchg jle cmpsb ja mov jne or mov xorl ficom fdivrs test cmpsl xlat jle call push mov and jo push out dec pusha xchg insb pop pop je jo mov inc aas addr16 fisttp inc jl dec jp outsl ret nop ljmp or sub add cmp lock cmpl and lret (bad) lods and push ja dec push mov (bad) xchg xchg adc jl sarl sub scas mov cld jecxz xchg cmp rorl sbb ss add movsl test sahf pop leave sti jmp xor cmpsb dec in xor xlat bswap and lea data16 js insl adc cmp dec pop mov jl xchg push pop pop inc lahf mov mov dec xor sbb inc xor scas es (bad) dec popf push or mov test and dec fldt rorb pop adc xchg lock sahf add push and xchg test jecxz cmpsb mov in mov or push inc mov jno cwtl sub lods fs push inc hlt arpl sahf stos adc xlat jg jmp cmp xor (bad) negl pusha push mov fisub push int3 rorb sti and popa cmc test (bad) mov lret fmuls daa mov add mov and std mov nop jp outsl ret aam das mov fbstp jno mov add icebp repz (bad) jge and xlat scas lds shrl xchg push mov nop int xor cli xchg adc (bad) xor sbbb shrl ret repnz cmp jl push sbb inc mull add repnz mov fstp (bad) movsb in mov ja mov sub cli bswap imul in inc out imul and jecxz adcl mov dec mov push icebp xchg fs mov sub cmc aas daa mov rclb (bad) lret push aaa sub popa sbb js xchg pusha mov inc sub out xor shll (bad) mov or or lods inc mov jge mov ja inc and sbb and add fs mov lds sbb mov fwait test cld xlat mov lea (bad) aad outsb mov shll sahf sbb arpl ss push xor sub call rcrl sub pop add imul cmp fldt nop jno loop out push jle jp (bad) xor push add jb ljmp test cmp jmp mov and jl pushf stos psllw xor mov dec pushf mov xor inc sub cli (bad) stc int3 iret nop cmp sbb lea or mov jge xchg and inc (bad) mov mov jmp cmp jg je mov xchg rclb mov cmpsb popf or mov sub xchg and dec jle sbb add mov pop xchg dec movsb xchg adc xchg mov rclb imul (bad) cmpsl pop or aam out pop ja cwtl (bad) or push xchg mov pushf jns outsb jb cltd mov jp jne pop jle fisubl sahf dec adc sarl fcomp mov xor (bad) ss scas pop and push call or negb fabs test aas jmp sar (bad) sti sub inc adc mov icebp popa rep mov lahf scas lcall leave imul outsl push mov dec mov push (bad) stc inc iret nop cli cs lea cmp xlat jge or and inc (bad) xchg inc mov jmp fildl jg je cmp data16 sbb movsb mov test sbb sahf sub jns mov and pushf (bad) jbe hlt dec or out dec cmpsl cmpsb sub and nop add jmp pop sub mov cmc setp popl mov adc push or orl lahf test pop push divl cmp out loope cmp push mov lret repz fsubs or ja clc pop imul add dec mov sar and fidivrl mov or add jge cmc scas jno out lcall add push int3 mov lret in push test inc adc push cmp bound xorl mov jg int jno data16 daa push adc sahf out push (bad) mov sti and sub clts push sub cld jecxz mov outsb test xchg inc lret lds insb ret or fdivs mov std ja out gs cmp dec cmpsl jae ljmp loop xlat into ds xchg js jmp pop cmp popf dec lret push jns icebp pop mov mov aad inc inc mov sbb jbe adc add clc xchg (bad) cmp popf xchg jae inc andb pop ficomp outsl and mov std inc repnz bound mov ja inc je imul add daa adc insb cld lea and xor sbb xor test fistpll jno dec or mov push mov push adc xor mov pushf out (bad) sub outsl push or xorl xchg (bad) cld mov aaa inc test sbb test sarb pop or hlt sbb dec cmpl js scas call inc mov jns shlb aam out cmpsb push dec sbb add inc push xchg (bad) in lahf jmp push mov mov xor and cmp xchg pop das sbb and jmp jl sbb sub movsb imul mov pushf xor daa aas mov into lock or test inc pop stos inc je mov clc cmp test out loop xor pop insb adc into mov add xchg add mov jae js inc mov xlat inc jne adc pop subl push fwait dec ret mov out xor jns cmp xchg mov xchg mov stos mov pop or jo and sub jne rcll mov ret cltd xchg mov push cld outsl lea ja call aad shrl sti repnz sbb lea jbe popf pop jle je or scas fidivr movb fs dec xlat lcall out mov lea or stos jge push ret inc dec mov xor aaa fldl dec sbb xchg sbb mov imul dec dec sahf dec lds idivl xchg sub mov data16 fldenvs push data16 popfw data16 mov data16 sahf movsw mov dec data16 data16 dec mov data16 cli data16 data16 xchg data16 data16 retw data16 data16 data16 mov (bad) inc data16 out in data16 in lock data16 fbld data16 dec xchg inc data16 enterw shlb data16 fisub out data16 data16 data16 test dec data16 nop dec data16 inc data16 out mov inc push data16 dec xchg stos data16 data16 data16 jecxz mull data16 data16 data16 test cwtd lretw data16 dec xchg popfw data16 data16 data16 push in lods data16 out (bad) data16 data16 push data16 data16 iret data16 shlw data16 test data16 data16 data16 cmpsw data16 (bad) data16 mov data16 dec stos data16 data16 in fisub retw data16 ljmpw shlw data16 call data16 data16 data16 hlt data16 mov data16 data16 data16 in data16 leavew xchg scas push data16 inc mov out xchg out data16 xlat mov inc xchg data16 inc mov mulw data16 mov iretw mov data16 lret lds xchg xchg data16 pushfw data16 dec data16 test cwtd andw enterw movsl data16 mov mov dec popfw lcallw data16 mov mov inc dec data16 data16 (bad) data16 data16 data16 fisub data16 stos dec data16 test lods dec data16 push xchg inc data16 popf push inc movsw data16 test data16 in shll mov lretw data16 andw repnz push data16 data16 in data16 mov data16 callw xchg push dec mov data16 jmpw callw data16 data16 push mov push data16 data16 retw dec jmpw inc dec xchg dec data16 data16 cbtw data16 mov mov mov xchg data16 data16 data16 data16 data16 mov andw data16 data16 lretw stos push inc xchg mov data16 mov jmpw data16 stos leavew xchg enterw (bad) lea pushfw out data16 xchg data16 shll xchg xchg data16 data16 movsw data16 lock mov data16 clc in data16 jmpw data16 fisub data16 data16 data16 data16 mov data16 data16 data16 mov mulw data16 data16 data16 (bad) xchg dec xchg lds data16 data16 data16 data16 data16 pushfw mov inc iretw data16 andw inc lretw data16 data16 retw data16 aam in iretw test popfw cwtd cmpsw data16 data16 cli push mov data16 data16 data16 mov lea lods xchg mov data16 movsw andw shlw data16 callw data16 dec les inc data16 fldenv retw data16 data16 mov data16 lods dec mov cmpsw data16 andw data16 jmpw data16 repnz dec enterw inc inc frstors data16 data16 data16 dec data16 xchg data16 data16 xchg lretw data16 mov data16 mov in dec callw data16 xchg data16 data16 data16 data16 data16 xchg mov jmpw cbtw data16 jecxz shlb data16 data16 data16 mov mov xchg cbtw xchg mov data16 dec data16 data16 data16 xchg in into data16 andl inc data16 mov lods data16 data16 data16 lcallw leavew data16 inc data16 popfw data16 push data16 lock cltd dec data16 data16 xchg retw dec mov data16 jmp cwtd data16 data16 data16 retw data16 push ljmpw push xchg popfw xchg data16 shlb loopne (bad) out lea data16 dec data16 popfw inc data16 data16 stc mov jmpw data16 ret data16 data16 andb mov cmpsl inc data16 out mov data16 data16 data16 dec shlw data16 andw data16 data16 mov out les data16 data16 data16 repnz data16 xchg data16 xchg data16 pushfw mov mov xchg iretw data16 data16 (bad) cmpsw retw mov iretw data16 dec data16 jecxz mov movsw cbtw mov data16 data16 data16 push inc andw shll inc data16 xchg fldenvs data16 data16 shlw shlw dec dec data16 icebp data16 data16 test xchg frstors data16 data16 xchg data16 data16 cli data16 inc data16 mov data16 push data16 data16 mov data16 cwtl xchg push data16 inc data16 mov mov mov data16 data16 (bad) mov lretw inc data16 mov data16 data16 jmp shlw push mov data16 data16 push retw push leavew data16 out dec data16 movsw data16 data16 data16 (bad) shlw dec andw les enterw frstor data16 mov jmpw pushfw data16 push xchg xchg data16 test data16 data16 in dec data16 data16 nop leavew data16 data16 data16 data16 data16 data16 data16 in lretw data16 into data16 in loop push push lea dec test data16 in xchg data16 data16 mov mov push in data16 data16 data16 dec data16 lds inc data16 mov push xchg mov data16 jmpw callw data16 data16 mov data16 data16 data16 data16 data16 les inc inc mov data16 mov mov data16 data16 dec inc data16 iretw data16 data16 data16 data16 data16 data16 push data16 jmpw data16 cmpsb out xchg dec data16 data16 xchg mulw data16 data16 shlw dec data16 dec data16 data16 enter frstor lea mov data16 andw int cmc xchg dec data16 test data16 mov inc dec test mov mov cmpsw data16 push dec data16 data16 data16 shlw data16 lretw data16 data16 data16 data16 dec dec inc data16 xchg data16 data16 xchg xchg mov push mov xchg andw mov mov inc data16 lret scas push mov data16 jmp data16 data16 data16 in scas dec mov inc out push data16 in xchg data16 jecxz out andb mov hlt data16 retw lea data16 push push dec leavew data16 inc data16 data16 inc mov push lds data16 mov shlw data16 iret dec data16 leavew data16 data16 mov icebp data16 icebp inc in mov inc mov mov data16 inc data16 data16 data16 data16 lods data16 fsubs data16 andb in dec leavew data16 xchg data16 push inc inc inc push data16 xchg cmpsw data16 mov mov inc dec data16 out mov retw data16 frstor mov in dec dec stos andw std mov inc pushfw data16 fbld dec mov data16 xchg dec andw data16 data16 (bad) data16 mov mov data16 popfw push data16 data16 data16 les data16 frstor push inc push xchg mov data16 data16 int3 xchg inc data16 jmpw xchg push data16 lcallw mov mov data16 frstor data16 repnz data16 data16 data16 cwtd dec inc data16 data16 data16 lret push data16 nop mov push data16 xchg data16 data16 mov (bad) out jmp mov push push lretw lea data16 mulb data16 dec push les data16 data16 mov ljmpw data16 data16 leave xchg inc data16 xchg mov scas data16 xlat mov data16 fwait callw data16 lcallw inc data16 data16 mov data16 data16 (bad) xchg dec lretw data16 data16 mulw data16 andw call data16 andw out inc inc lea cmpsw mov cwtd data16 test data16 data16 inc data16 movsb leavew data16 data16 data16 data16 data16 data16 dec data16 push frstors xchg dec push data16 lcallw data16 inc data16 sti data16 test data16 in dec mov xchg enterw int3 fldenvs leavew data16 cmpsw data16 in lretw data16 shll xchg in loop push lods data16 movsb dec data16 data16 push data16 data16 data16 mov mov push les data16 data16 dec data16 les inc data16 mov data16 out mov data16 callw callw shlw data16 data16 data16 data16 push data16 data16 data16 repz data16 inc ljmpw data16 xchg push push lea data16 in data16 in data16 data16 test lds data16 lds data16 data16 mov data16 data16 dec dec xchg dec lretw data16 ret mov data16 inc data16 test data16 data16 clc data16 mov leave inc data16 out in test data16 data16 data16 dec data16 inc data16 data16 std inc data16 data16 andl data16 test data16 stos dec data16 nop data16 data16 inc data16 out mov data16 push data16 dec xchg data16 test data16 data16 mull mov data16 data16 data16 lock dec dec xchg data16 data16 xchg data16 data16 lea jmpw dec data16 data16 data16 data16 mov mulw mov push data16 lds xchg cbtw data16 loopne movsl out inc data16 data16 data16 dec data16 data16 data16 in fisub retw retw shlw data16 data16 call data16 data16 data16 aad mov data16 data16 data16 in leavew data16 out scas push out inc data16 push data16 xchg data16 data16 xlat mov inc data16 data16 inc mov iretw data16 data16 mov iretw mov stos data16 push data16 stc xchg xchg data16 data16 dec data16 xchg cwtd andw enterw cld data16 mov mov dec data16 lcallw pushfw enterw xchg data16 xchg data16 mull mulw data16 data16 fsubl data16 dec inc data16 jmpw shlw leavew lea push retw data16 lds ljmpw inc inc mov data16 data16 in mov data16 out iret xchg inc lods jmpw data16 leavew data16 data16 data16 callw data16 ljmp lcallw retw lds shlw data16 cwtd callw cbtw data16 data16 lretw data16 data16 data16 data16 movsw in data16 data16 dec data16 data16 data16 jmp data16 data16 data16 data16 data16 andl in data16 pushf data16 data16 data16 fldenvs data16 data16 data16 data16 int fwait data16 ret xchg dec data16 data16 data16 xchg cwtd data16 dec mov data16 data16 mov les shlw push popfw scas shlw enterw xchg xchg xchg shlw test jmpw data16 data16 dec data16 push xchg out fsubs data16 data16 (bad) data16 inc cbtw shlw data16 lret data16 data16 inc data16 data16 dec data16 out cmpsb data16 test mov data16 data16 mov inc xchg data16 (bad) inc data16 xchg frstors data16 data16 ret data16 scas push push data16 cmc data16 in lods retw xchg data16 jmp in xchg data16 fsubs data16 andw mov mulw data16 data16 callw xchg data16 inc data16 movsb inc data16 lea cmpsw inc data16 data16 mov mov dec data16 inc data16 data16 mov data16 data16 ljmpw data16 data16 data16 dec data16 xchg data16 shlw data16 lretw mov data16 data16 in data16 callw data16 xchg data16 data16 frstors data16 mov mov data16 (bad) xchg cbtw data16 loop aad test mov data16 jmp data16 data16 shlw data16 test data16 out mulw cmpsw in mov data16 pushf data16 (bad) lods data16 data16 data16 aam mov lcallw leavew data16 data16 data16 data16 data16 cltd data16 mov inc data16 xchg dec iretw xchg data16 leavew data16 data16 fsubs shlw data16 data16 inc data16 inc mov data16 lds data16 push xchg popfw data16 data16 ret data16 data16 (bad) out lea data16 data16 inc data16 mov shlb dec jmpw data16 ret data16 data16 (bad) data16 cmpsl dec push out movsl test lretw push xchg mov xchg dec mov data16 (bad) data16 mov lretw data16 (bad) les jmpw out data16 int dec data16 data16 lock jmpw pushfw mov data16 push data16 inc data16 iretw andw data16 in test data16 data16 lretw push mov dec ljmpw data16 dec data16 data16 mov inc data16 dec xchg scas data16 stos mov data16 data16 mulw mov pushfw data16 data16 out dec dec push data16 dec retw data16 inc data16 data16 data16 fldenvs xchg shlw data16 xchg inc data16 inc data16 data16 lds data16 mulw data16 pushfw dec data16 clc data16 cwtd data16 dec lea data16 data16 data16 aad xlat data16 dec leavew frstors lds data16 data16 retw leavew data16 data16 data16 lret xchg data16 dec dec data16 inc andw inc data16 andl fsubs data16 data16 xchg data16 stos dec jmpw test inc mulw xchg inc data16 push data16 dec shlw mov ret or (bad) push fadd jmp std pusha mov cmp dec add add inc sbb adcl imul mov repnz xchg dec loopne pop mov jns int outsb sarl mov mov adc mov nop pop sub or cs (bad) cmp jo xchg lret push stos out mov pop xlat pop nop mov (bad) std jne leave mov leave je or xchg call pop add cmp add cmc aad aas sub in and push xchg fs mov jmp add pop xchg pop std and xor jne xchg sub bound mov jge mov fcmovnu sub cmpsb call jns push jg sbb int add sbb sti insb cmpsb push and divl jp ret or popf stos ffreep pop mov outsb or cwtl cmp fiadd xchg or and or adcl imul add add dec mov repnz xchg aas and insl fisttpll lcall mov dec mov repz mov out and test mov ja stos push cwtl adc pop popa mov cmp pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl add jno pop icebp rdtsc xchg popa std out loopne scas lea jecxz enter sbb int add sbb xchg iret add push mov pusha lea sti or ret std pusha mov cmp dec and add clc mov xchg (bad) sub push addl sahf inc inc or ja mov loop repnz xchg aas and fisttpll rcrl jmp sub mov push rcrl (bad) fwait or and test add mov ja test cwtl adc mov mov pop xlat push nop jb jns cltd dec ljmp or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb add jbe stos fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) pop andb mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add shl mov adcl outsl sahf xchg mov loop add add xor xchg gs rcrl jb push sbb dec mov xor pop or out xchg pop out and adcl popa ja scas push movsl xchg push pushf (bad) jns push test pop xlat fwait xchg jb jns cltd into xchg shrb lret jp enter sbb sbb test xchg fnstsw xchg sbb mov in mov sbb add inc sbb stos lea mov push or arpl adc jno add add clc mov xchg popa std and loopne scas int inc mov imul insl sbb int add addr16 inc ljmp sbb mov jo jp pop int xor stc pusha cmp cmp aas sbb shll mov mov adc imul test mov (bad) or mov or dec xor mov test fwait or movsl arpl adc add add mov push pushf (bad) lea decl mov jns mov popa scas aam jl out je fwait mov xchg cwtl (bad) cltd add xchg mov or int cmpsl das addr16 sbb in shrb mov (bad) mov jo cmpsl mov jns loop out adc mov outsb mov aaa mov fwait pop rcrl dec (bad) out cmp ljmp repz cmp add add push inc inc movsb std pusha xor cmp mov stos or sar lret mov mov and jo addl cmp xchg jg ret dec rcll rcll pop movl lods les pop popa add cmpsl dec xchg mov jb (bad) outsb in jle out out les mov push pushf xchg pop pop fadds sbb out fcoms xchg insb aad add je sub jl push cli scas inc mov mov add mov repnz mov xchg inc fildl (bad) cld scas popf jg jmp mov (bad) sub inc jle daa xor pop clc pop out stc scas push int3 popa fisttpll es imulb sbb ja xchg xorb out cli push clc icebp cmp (bad) jge cli cmc mov test mov idivl and imul sbb cmpsl adc cmp in dec mov repnz add lcall ror mov mov push sbb add sbb cmpsl mov in stc xor mov icebp lods scas push cwtl pushf nop test add scas dec jns rcrl jp jns adc fcoml gs fs inc adc jg in jne int3 std mov sbbl mov jle stos pop push (bad) mov pop sarb ljmp and push dec lock lea gs out lock jge jb flds inc cmpsl jo sbb add xchg lret loopne mov mov sbb ret xchg gs fadd fnstenv out ss dec add je pop push xor inc sbb push ret cltd mov add mov ljmp movsl and pushf push xchg add lret mov or and add shrl fs cmp jecxz cwtl nop sub nop mov add mov mov cmp (bad) int negb insb fcmovne push (bad) outsb pusha cmc (bad) push cmp adc andb mov push mov icebp mov aaa ds mov jmp xor scas popf jg dec and pop cmp ljmp notl dec lock adc out push lods pop dec xchg shrb int3 inc rcrb lea pop aad les mov cli sub jle pop mov stc or ret or sti mov ret add add bound (bad) daa cmp jecxz pop movsb and sbb adcl (bad) add dec int mov loop je (bad) or icebp pop insl push push lds inc lcall mov repz xchg xchg and push adc insl inc outsb pop jge mov nop mov add movntdq sar bound cltd into bound popa scas aam (bad) pushaw cmc decb sbb cwtl cli mov push mov js dec adc jae addl add add sbb mov inc jp mov dec fildl orb inc jg sbb call stos repnz add jl push sahf stc xchg (bad) fstpt mov cmp or xor test dec ret jo jo push mov jo jg sub popf insl xchg fadd push mov outsl ja cmp dec pop jmp aaa adc mov inc xchg inc xchg dec fwait incb dec pop mov jbe xchg and inc add pop sbbl jno lods clc sbb cmp jae mov cld es add ljmp test outsl mov in arpl popl mov pop lcall cld or cmp fisttp jle ficompl repz test xchg mov int3 mov enter addr16 js stos pop push (bad) mov pop sarb ljmp and push dec lock lea out call data16 int subl enter nop sbb add xchg lret loopne mov mov sbb ret xchg gs fadd addl mov cmp into ss test fbstp je pop adcl push adc daa xchg cmp cmp push or and je and (bad) test jns (bad) jecxz xor dec xchg lods popf add (bad) sbb das push out push ja xlat dec std mov mov jae out jb sahf pop mov popa xchg mov xchg and xchg into sub cmp aam or je pop mov push in mov repz out rclb hlt dec subl lret pop in test mov and outsl (bad) cmp sbb popa fs mov (bad) (bad) jmp jb leave add sbb jbe (bad) imul int3 xchg lret call out mov jle xchg jle ret test insl scas fadd fsubs in mov add xor into add lret xor add pop stos push outsl sahf add mov loop xchg mov arpl dec adc (bad) mov pop cwtl insb cmpsb mov pusha sbb fdiv and or or ja and mov decl out mov sub (bad) push aam popa int repz testb adc nop push xchg popf (bad) sub mov mov addr16 cmp stos add add add setge mov lods and push daa out pop cmp jp cmp clc test (bad) aad push cli in loopne or gs cmp jae pop aad cmp jge fs push mov jo repz or and push mov imul ljmp pop sbb imul adc cwtl lds mov testb jle stos repnz (bad) mov push dec mov dec fxch repz mov rorl aaa ja push decl data16 sahf sub cwtl mov movsl push lock jb jb cmp and icebp cli lahf mov xchg cwtl mov sub les xor pop ja jae leave xchg cmpsb movsl lea xlat ficom ficom jmp mov cmpl dec stos sub adc ret (bad) mov clc or outsb dec mul push mov int add add cmc enter lcall ret cld repnz sti out aam sbb jno mov dec les cmpsl fadd push and (bad) mov mov xchg out jge xor fwait pop rclb add add jnp cmp (bad) aaa insl add rcrb test pusha adc jmp dec pusha jae push sub push insb test out aas int3 stc inc jae imul popf arpl (bad) cli fildl pop mov add dec dec jge cltd into popf rcrb inc pushf cmp inc (bad) dec cmp pop pop orb mov sub or add popf fmuls xor mov stos popf repnz lret pop mov dec jle imul arpl mov popa std insl movsl (bad) jmp popf (bad) shrl in push imul out xchg imul mov fcom inc mov (bad) loop cmp xor aas test ljmp aaa or add in pop outsb adc clc sti xchg push leave adc icebp imul (bad) loopne imul shrb mov or push lds js jg mov inc ret xchg test mov and or cmpsb scas cmp je test mov add mov bound push enter mov mov testb hlt iret push mov push dec pop mov or ds add mov adc fmull fcoms arpl xor ljmp add mov popa std nop icebp imul mov bnd out xor or imul cmpsb cli lds hlt jecxz imul pusha push popa stos test (bad) pop repnz pop nop cmc fdivl mov lret test mov or ret mov or inc loop stc repnz loop add dec cltd dec xchg adc sbb jmp add (bad) xlat sbb decb fs mov xchg loope adc cmp cwtl out dec popa lock mov jb lock jmp stos mov jo mov cli dec es xchg add dec cmpsl call jne push xchg mov aaa mov arpl test (bad) fs push push sbbb xlat insl sbb fxch cmp insl cmc lods mov pop iret and adc in in loopne scas mov mov fnstenv add int mov fisttpll std divb adc es jo or into jbe stos faddl movsb (bad) fwait lret je test xor enter pop movsb adc xchg push xor pop push sbbl cmpl add xchg or and cli int rcrl mov and loopne push cmp mov or push out xor test lods in adc jns and shl mov xchg rcrb call ljmp add add cmp adc xor sub out aaa push pusha or pop in mov jg rclb pop ds xorl adcl scas jns outsb (bad) cli sbb mov pop ljmp or dec aad xchg ret lods mov cmc mov inc push (bad) imul test pushl and fwait push mov cli fldt fldenv test adc xor fidivr (bad) repnz push push add out sarb adc subl dec cmpsb or inc (bad) dec mov movsl sub pop outsl stos mov aas mov xor (bad) jecxz jl cli inc xor sti cwtl xchg lahf cwtl or sbb test ds insl frstpm(287 jle stos push movsl adc xchg push push mov mov xchg pusha pushf xor fidivr pop cld sbb mov sbb cs cmp out ds lcall fs jno adc add add push mov mov adc divb popa or xor out mov adc pop jb test sbb inc mov aaa mov sti xor inc jno (bad) cld jnp inc pop jns test pop push cmp add pop test loop int3 into mov push mov popl insb fistpl shl adcl scas jne mov xchg sub cmp pop add dec sbb stc or stos or xor (bad) jecxz sbb dec inc cmpsl in add fildll outsl add gs sbb enter mov jnp jb adc pushf movb repz (bad) popf into jmp adc lcall loope xchg or adc cmp lcall shrb cmp cld mov imull aas fcom std dec stc nop cwtl adc xlat out insl fstps lret pop xlat and lret sub dec mov nop xchg outsb jae call xchg gs add out enter dec test xor add add dec test sti push (bad) cmp or aaa xor push xchg ja scas jmp repnz ffreep les xchg (bad) or xchg pop aaa push cltd in loope sarl lret js aas or sbb jae shrb iret xlat dec fidivl cwtl insb xchg stc add fldcw pop loope adc mov jg out jb adc pushf movb stos jge es and sub add cmc and (bad) lret mov shll jo xchg les fcoml adcl mov xor test mov in pop ficom (bad) repnz stc int cmp pushf std aam xor (bad) push ret push (bad) ljmp push hlt popa stc or testb lahf mov adc inc mov xchg enter insl inc cmp std xor jle mov sti enter jmp popa adc add add divb fsts outsl xchg jnp sub enter push (bad) add ret subl xor mov and sbb pop sbb roll out out mov push fldl push mov inc pop cli and mov fcoms push sti jle (bad) lahf xor push or pop andb lock adcl mov adc adc lock add sub inc ja and lods aas out or leave jae mov (bad) leave clc fistpll mov mov fwait pop sub mov repnz dec dec cmp cli hlt ds jl test inc hlt out cli (bad) fstps dec sbb popa ror sub test mov mov aad popa test dec in mov (bad) das mov insb test dec into mov lcall inc cmp push fildl dec adc add add loope mov rcll out mov (bad) jle sahf fdivs jno add rcll repnz outsl sbb in out ret or test iret dec mov out inc pop or shlb incb movsl sbb mov call cmpsl movsl adc sub inc fisubrl addr16 lahf or dec inc into daa cmp arpl int3 add push ret sub or pop jne fdivp mov loop sub aam push push dec add mov hlt lea xchg sub loopne xchg add xor add mov add mov (bad) shll mov mov fmulp jne cli mov out imul int test aaa jmp inc scas mov int jecxz rcrb (bad) cmpsb or and js push loop or outsl test cld loopne push adc mov cli iret add rcrl and sbb in (bad) loop cli add add mov inc jg scas repz lret (bad) test or or in pop fadds outsl idivb cld xchg jo dec cmp iret clc outsb imul and lock mov inc (bad) sbb sahf bound or jl mov clc hlt data16 ret aaa or roll mov dec pop mov fimull lods adc pop fwait sahf js cmc test jae add dec arpl (bad) ja push (bad) sbb jno test cmp adc in or push push mov and jg (bad) adc (bad) mov fcomp dec inc sbb shll cld call xor mov and add adc cltd sub stos jle ja in mov mov sbb xchg mov es loope lock cmpsl mov (bad) and dec xchg in popf jg iret mov add xor xor les pmulhuw or stc scas lea xchg loop xorl in mov jno xchg fs (bad) test add insb int3 mov test lods scas jns mov cmp int3 sbb xchg pop lahf push and xchg push hlt jge inc xchg dec clc or loope out loope sub sbb xchg rcr test mov mov lock iret repz mov fwait and add add dec fdivs jbe fs loop mov popf push cs jg jbe outsb mov iret icebp add mov or sbb gs cmpsl fidivr iret jmp mov mov addr16 (bad) adcl icebp in push insb into adc in sbb inc call xchg cmp mov ljmp and ljmp jmp jb outsl aaa sub sbb push pop (bad) imul int3 xchg lret call out mov add add int3 jle xchg jle ret test insl scas fadd fsubs in mov call add lret xor add pop stos push outsl sahf add mov loop xchg mov arpl dec dec mov lcall (bad) sarb dec mov push out fs or cmp popa cld cmp mov mov sahf xlat pop sbb sarb cltd inc insl rclb scas aad sbb cmc aad insb cmp push mov leave sbb out rcrb (bad) push (bad) movsb ja stos dec sub sub cld cmpsl mov inc mov or insl hlt das pop or xchg mov inc arpl jb out pop inc notl dec lock inc lods mov dec mov icebp ret loop and mov jne mov hlt es add cld outsl lock push mov sub aaa cmp xchg (bad) (bad) test fistpll sub imul add mov loop mov leave sub stos lds aaa andb xor or mov js fnstcw loope outsb jbe xor dec enter lret fucomp xor pop mov cmpsb fs (bad) in dec xchg pusha cmp xor int3 ljmp cmp ja (bad) mov cmp in jbe jle push out sbb arpl jp or pusha nop stos mov les mov add add scas sahf fisttp pop test push xor scas push je repnz lds mov (bad) push pop mov sub jno (bad) clc mov rcrl pop repz in lods jmp xor or cli repnz and shrb out popf inc adc mov in xor and (bad) rcrl jmp adc cmc das adc ds sti dec (bad) dec js rorl adc xor aaa add add aam mov aad adc mov jge jae sti std fwait into jmp add scas push and lcall mov pop (bad) and jns les mov repnz out movsb mov jg andl inc fcmovu mov sbb sti ljmp and dec lock popa das sbb icebp cmp out cmc out mov inc and aad mov out add jecxz hlt adc nop rorl jne add pop or jmp sub jecxz xchg mov xor push push shrl and lock inc xchg stos pop adcl imul test pusha push repz xchg and dec pop (bad) mov and ret fwait xchg adc cmc fidivl mov mov into mov (bad) jmp (bad) (bad) push push jge jb repz (bad) cmp (bad) je fistpl jg cmc decb push (bad) jge xchg cltd subb addl add xchg jb xor rcrb xor mov stos loop,pt mov movsl shlb mov inc pop jnp and mov pop pop (bad) xchg sahf repnz loopne scas dec push dec dec out cmc out mov inc xor pop fcomip stc divb ret test jno clc push ret or idivl aas jno lods in cltd aaa cmp dec shrb es mov adc xchg pop ja xor mov add add orl mov rcrl or dec loopne mov cmpsb lahf xor or loope mov cmc xchg mov arpl addr16 jp ret fildl stc push out push lcall push xlat xor cwtl pushl cmpsb jbe xor test or mov jbe sbbl dec pop or cwtl cs xchg xlat imul arpl dec or add jg inc dec add add iret call jmp mov add inc and xor sub dec dec je push test je xor test mov in int3 xor and cmp pop inc xchg and ror arpl dec mov sbb mov mov dec loopne inc sub ret adc test sarb push ds pop fsubs test mov outsl sahf ja stos ja aam xchg cmc add push jbe pop xlat js mov jno popf push mov push adc push repz adc insl test sub (bad) popf jns jns sub imul and cltd loop lret xchg movsb push fimull mov idivl inc cmp insl test lret jmp mov leave xchg shl (bad) and sbb fild adc mov cmp pushf jb clc jle add idiv add xchg fcom cmc sub test or cmp pushf ljmp adc dec or lods cs push int3 jge into dec (bad) das imul fcomi push inc (bad) fmul mov add dec add xchg mov test jl insl daa lret sub cwtl (bad) lret out cmp pop mov lea (bad) fadds scas test jbe mov adc cltd mov mov pop (bad) dec pop xchg add add inc inc push jbe push pop mov cmpsl (bad) je cwtl pop aas fistpll stos int int3 into imul push scas imul push scas cld fstpl mov mov or jecxz call out fstl cld stos sbb lds stos add mov xchg mov cmp and inc out add lock fdivl mov dec add je sub push mov andb roll mov sub sbb push cld je add add dec ds (bad) mov push aaa sbb stos add add inc lcall sub inc subl ss cmpsb aaa push (bad) cltd fisubl xlat lcall (bad) mov aam (bad) lods jne cmp xor lret (bad) hlt sub rcr dec cmp notb mov adc movsb addr16 mov cmpl xlat push ret les dec inc fcmovu icebp xchg sbb jns ljmp add add je push jb out xchg call out sub in jo std sub adc jg pop das aad out push add add xrelease and aaa pusha inc pop mov imul xchg dec js xchg sahf xchg popa cli je mov sbb mov (bad) cs pop inc aas jmp dec aaa outsb shr pop cmc and lods jp xchg jbe jge addr16 outsb mov xor or mov jg cli dec sbbl rclb stos push lea mov sub div cmp pusha inc mov inc idiv shll cmc fmul mov sub adc icebp (bad) cmc fs jp add sub xchg call mov sbb notb adc xor shll (bad) pop push pop je add cmp daa jl sbb mov pop cmpsl inc pop mov dec mov in or out rorb mov iret fwait jmp cmp pop and push test nop adc inc xchg in sub cwtl cli mov cmp sub sub js jmp dec pop mov and xchg cltd mov repnz lea cli add xlat push xor jbe ljmp jbe cmpsl neg mov adc daa in lcall roll pusha inc inc and push xor sti xchg icebp lock pop mov inc jle add pop push dec jnp jne xchg cltd cwtl adc bound scas push imul pop arpl (bad) sub inc push add jb out mov mov dec xor cld lea mov ret mov ljmp or or sub pop enter sarb lret sub push (bad) in loope jbe not cli mov jmp mov jnp loop rcr adc stos lret add cmp jne jne in lret (bad) xor or movsb shl mov test inc inc cmc jecxz inc hlt inc fwait or adc pushf xor sti jno jecxz add pop adc pop add xchg pop push adc xchg ja cmp int sub incb in fdivs dec xlat sub jnp jbe dec adc loop imul sahf fsubs insl call pop imul pushf aas push pop shll cltd movsb or cmp xor fisubrl scas or loopne cwtl xchg push mov sar mov xchg fldenv add sub test fldenv mov lret fmuls aaa insb mov bound mov cmpsb xchg in cmpsb mov inc loop mov fistpll push sub or pop cli pop jle lahf in xor into sahf push xlat inc mov push ret dec (bad) cmc jecxz loop xlat or in (bad) std fwait loope outsb mov add sbb inc cmp incl ds sub add adc push pop rolb cmp lret mov or jbe sbbl inc cltd adc cmpsl data16 inc mov sub and sub pop js cmove cltd outsb sahf add (bad) jae mov enter inc pop push mov cltd mov jno cmc xchg icebp incl mov inc and sbb dec add add inc mov sub (bad) cmp or pop cltd sahf outsl fcompl pop inc dec sbbl test insb leave lea dec xchg leave outsl fucomp mov sub mov cmp int add lods pop out and jecxz enter sbb cmc or dec inc xchg push pusha push adc (bad) data16 movb jmp jg (bad) sub scas in mov (bad) mov lret stc cld cmp fxam jno push aad add pop data16 inc xor ficoml insl out popa hlt pushf ss adc scas push xor sub mov test add bound mov mov leave inc sarb repz out add ficompl add and incl icebp (bad) clc rolb mov sti jbe jecxz imul jg mov push out ds add xchg mov sbb incb xchg ljmp xor negb adc sub mov adcb xor add add data16 cmp or fs repz fmul out and xlat aas outsb mov cmpsl test cmp jno (bad) je push scas in incl loopne cmp push testb xchg (bad) dec icebp push mov mov jne out cld (bad) mov pop (bad) loop stos sbb addr16 and mov out or xor cmp jne syscall adc push fldl loopne or mov add add pop jb sbb or cld sub sub inc arpl cmpsl stc mov sahf add cmp mov jnp adc adc lock xchg outsl xchg lret inc (bad) pop xchg and pop or rcr push rclb xchg cld and or adcl adc clc ljmp xlat add daa push jae sbb adc test inc fistpll push mov adc pop ret add popa fldl xchg nop xchg cltd or lds shrl pusha cmp movsl ja ja out sub push je imul push call aas or inc jmp shll cli dec pop jne sbb push sub jno (bad) pop sahf stc ret addl sti gs jae mov cmp pop pushf hlt mov test iret repz mov movsb mov lods pop mov mov add add fcoml stos lods or stos pushf or add test loop test (bad) jl cmp inc jbe repnz dec pushl int3 sub imul xchg xor mulb out jmp and daa repz push pushf dec xor xchg sub cltd leave std xor xlat lods push or outsb (bad) ds aas aas gs jne lret mov xchg das test test bound or movsb jbe jecxz add add mov dec pushf rclb fisttpll ljmp (bad) or lret add test (bad) lahf mov rorb mov mov lods mov push mov hlt jg scas pop add adc mov xor sbb shll xor and daa into gs (bad) in insl sbb dec dec mov inc xchg jp inc insb fisttpll fisttp popa lahf dec sub push cmp les inc mov jae fstpl jmp mov cmc gs clc mov scas outsb das je pop mov xchg jno call pop aas adc mov mov cmp mov (bad) stc test data16 lcall sbb adc cld pusha test addr16 mov nop das push stos ds pop sbb pop xchg stos jmp lahf sbb (bad) xor cmpsb xor fisttp add cmpl jmp dec and mov add add jl mov mov leave add ret mov fisub les dec push loope mov fwait push sbb fcompl pop ss jno xchg je push add (bad) idivb pop les js push or aas xor dec out mov pop aas push jl pusha lds popa out mov lret fwait mov or sub xchg sub add add or (bad) cmpsl mov aam lods mov push jo push jg test lret xorl lea jne pop cltd cwtl cwtl sbb hlt daa call xchg mov push ljmp sub ss std mov sbb in mov xlat pop setnp sub add int fdiv add or (bad) pusha pop add fnstcw mov or push lahf inc pop sbb enter push push in sbb dec out add inc mov sbb cmc cltd pop nop insl aam (bad) dec scas inc loope cld jecxz hlt xchg inc inc xchg mov add popa mov dec stc outsb sbb daa movsl xchg push andb sbb fwait pop imul and stos add push arpl in push loopne dec mov push sub mov fadds inc push cmpsb add cld add mov adc push push or push adc adc out lahf or and adc repz in push fist xor add add add push push xchg outsl jg insl call mov mov pop test inc std out and and cmp xor xchg sbb sbb fwait enter push jne dec and aad test mov add xor cld jmp dec pop (bad) ret xchg push mov rcll push or cmp cmpb lcall in mov jmp mov inc adc cli sbb inc mov add pop jns fldenv ret (bad) lahf ret hlt inc out lahf (bad) in enter in xchg pop les mov cmpsb outsl pop xor lahf gs add loope push sub add fcomps push xchg jo mov mov or push jbe push pop and imul (bad) sbb call push lcall (bad) clc jmp add sub out adc push push dec sbb jge addr16 enter outsb repnz gs call add add lods ds add xor repz jge fdivl cmp xchg pop enter cvtps2pd inc mov add mov jbe mov dec insb mov cwtl pop out or cwtl inc pop pause jle xchg jne and into ss fmuls pop jns fsts xchg add jmp inc push data16 popl cmp cwtl pop push fild mov in xor jno push daa in xrstor scas icebp add cmp jle in mov mov insl stc roll out testl repz mov push bound lcall (bad) aam jno sbb test xchg add push cmc and out sbb scas fidivr dec push (bad) jmp sub dec mov in popf pusha out out cmpl add stos or lds push push lds fisubl leave adc mov cmp add mov xor and pop or out insb jns loope adc les sub lcall in scas addr16 shlb jg mov mov push nop dec inc mov out rcrl jbe fcmovb jecxz adc in rclb in mov adc or fcomp lcall jge imul xchg jne notl (bad) push int out mov xor pop sbb xor add add jle loopne cmc test cmp lods aad add out mov sahf aad imul xchg inc cmp outsl and mov jnp subb or add inc leave xlat js neg and mov jb mov mov jecxz mov pop mov cltd sub lret sbb inc cmp adc or lret test sub sub mov inc dec jnp dec xor aas jo,pn jmp and add sub mov int outsb aad jle rcr popa ja and lret sbb hlt cmpsl mov jns rolb aam daa xchg xlat test cmpsb push stc dec jecxz lcall ror hlt das popf in bound jno adc addr16 pop (bad) mov shrb pushf xchg pop mov and bound imul rorb fstps dec ljmp push ja xchg (bad) imul (bad) daa cli push flds add xchg pop movsl and pop stos mov icebp pop test dec fcmovu dec xchg bound cltd cmc enter decl pop push sbbl (bad) dec les sar sbb jge mov mov xlat fcmovne push xchg pop sbb inc xchg fwait xchg bound mov fldl outsb test jg (bad) push adc out hlt inc fwait sbb sahf add mov push add xchg or sub daa in lcall mov add adc (bad) out lods and add mov (bad) pop ds (bad) jb cltd xchg pushf daa cmp mov push call adc cmp lahf sbb ds cmp push pop mov xlat pop shrd sub fdivrp mov mov mov sub dec sub xor jnp fwait notb pop enter rolb into sarl out adc fwait aad inc jo add push (bad) int mov add (bad) xor xchg gs (bad) mov mov mov je xchg pop pop sbb push xor in sti cmp aam add rclb pop xlat ficoml cmp sbb lahf call fisttpl daa loope mov sti push jo mov fwait cmp pushf jecxz jo in loope leave xlat cld cmpsl mov mov repz mov movl add xchg sub push lea push fdivrs test scas ss xor jge cmp lds cmpsl stos xchg adc fnstcw xchg inc xrelease and inc mov icebp cmp xor ja fiadd iret in dec sbb leave lret mov add adcl push xchg insl arpl dec push jg loop jns fist xlat je sub lcall insb jle lea dec inc jle cmpsb ja ror repnz fnstcw movsb fisttp add add xor dec loope sub unpckhps pushf inc jns out std rcl push test xor fcmove (bad) jmp cli outsl (bad) aam push daa loope mov xor lock stc pop xor mov xchg stc ja,pn insl insl cmp cmp dec mov (bad) daa inc test sti inc pop push (bad) adc xor shll cwtl push cmp popa adc sub mov and sbb jbe in hlt cmpsb pop pusha add sysret add sets xchg dec cmp mov cs (bad) dec std pusha mov push std cmp mov (bad) iret xchg and inc xchg inc dec jl mov idivl mov pop outsb pop (bad) or int3 test test jne and mov inc fcompl add leave and sbb mov mov arpl fwait add lahf scas pop test cmp jno fiadd mov mov jbe aas into jmp lahf loopne sub cs loopne mov out add jmp or (bad) movd push sarb pushf leave mov call pop sarl daa ljmp mov jg lock ret sahf test mov dec sbb mov mov mov push and (bad) jne dec mov sahf dec sbbl ljmp cmp inc pop nop push outsb mov mov cmp and dec xchg inc sti cmp mov pop sub (bad) or jg out adc inc outsb xor out inc fsubrs mov movsb ja (bad) sbb sub push int es imul stos add std arpl (bad) jle or sub push cli jb xchg test adc push fs aam (bad) or fs jecxz aad adc lods aad dec sti xchg ret movsb imul cli data16 push pop push fild mov hlt sub jle dec in jae jg add add std int3 xor cmp or inc and ss xchg lret orl icebp mov pop mov fcmovnbe test xchg pop leave jne fadd add jmp inc pop in outsb mov xor test jecxz out pop jle inc dec jmp ds pop outsl dec loopne mov outsl or icebp (bad) lods test dec pop insb enter popa inc rorb insl adc xchg xor fs lods xchg das int3 imul loopne cmp add hlt push cmpsl add nop push out xor lcall pop adc mov popf (bad) lahf mov push add xlat std pop ja mov push xor pop frstor icebp jge adc push cltd cwtl pusha pop lods mov and rolb cmp and in imul aaa cmp or xor xor inc cmp ss inc sarb dec stc sbb cmp mov stos sbb (bad) jb cmp add daa sub mov mov bound pop popa insb pop or stos ror mov insb inc dec jl lods mov push int3 jne sbb push (bad) sbb push popa jp mov mov aaa fstp out inc or in dec pop cmp aas movsb add pop sbb jb jp bound in adc jl ja cwtl push pusha dec jno mov cmpsb outsl stc cltd jne imul cmp repnz push add mov idivb add add add and or push push or mov lahf cld stc or je es jle pushf clc and imul arpl daa mov dec enter outsb mov dec push fwait fs mov dec movsb jg shl aad js xchg cmp xchg stc movsb jmp dec dec pop popa push movsl and adc ds int mov pusha in imul adc adc imul add lea scas adc inc mov gs sarb lea xor enter inc into xchg fldenv test jo fisttpll fwait aad cltd cs xchg out mov pop rolb adc adc push mov call ret lock adc sub dec mov jl fadds addr16 xlat mov push bound lcall (bad) loopne repz sbb sbb add popf ret scas stc in mov dec es xor mov loopne sub xchg scas fildl dec cmp mov push add sub cmp mov popa sbb (bad) jecxz cmp int3 mov sbb sahf add dec jecxz loop (bad) mov lods or imulb insl sbb mov add mov pavgw fimull jns aad fisubrl or gs mov add lea ffree orl pop test inc into jmp lahf and and data16 (bad) pusha lret adc (bad) and pusha leave cld and add movsb adc rolb fwait jg mov cmp pushf test mov jl push lcall sub xchg lea jnp jne and imul sarl mov jmp or adc ja outsb adc out sub xchg movsb movsl test mov and add add jo pusha mov mov (bad) xorl xor xchg iret test es xchg iret cmp enter cmp loop sbb or adc push aam or out hlt es dec lcall xchg push insb push and (bad) xchg mov hlt test aas xchg popa cld jg or sahf repz or (bad) mov in lcall sub lret or mov mov pusha mov aad add add mov sub insb fimul xchg hlt daa call xchg mov sub inc pop xchg cli rol clc (bad) lcall (bad) fisubl test mov or inc xor or sbb cld leave out cli ds repnz in or jns (bad) fmulp cmp inc pop nop xchg mov and shl push addr16 fistpll scas adc adcl adc mov jo loopne add mov fwait add inc or outsl leave repnz dec and adc roll addr16 into rolb ja jae xchg xor icebp jle xor repnz sbb dec scas dec stos sarl push outsl pop les push ljmp push xor leave mov mov inc or addl ss repz adc call mov sbb pop arpl or xchg xchg jl lcall xor mov add mov push (bad) mov rclb xchg xchg pop (bad) sbb xchg pop jne adcl pop or pop cli mov lds ds in inc xlat por jg jb mov (bad) mov sub aaa dec fst fwait lret xchg (bad) es lcall adc mov lock dec pop mov in je or push popf cwtl fldl outsb int flds dec (bad) cmpsl outsl inc cmp push inc fwait add stos push addr16 push lret add (bad) mov stos sarl (bad) jp or mov push in sub inc xchg lods xchg into jo push jg stos and and or loop push cmp or lods xor sbb nop cltd cmpsb jmp es (bad) pushf cmp mov sbb dec adc imul sarb adc pop cmpl add repnz dec sub jno dec mov lret or jnp xor cmp add out imul ljmp and fwait (bad) pop ret cmp fnstcw jns rclb fadds mov lret call rcrb dec or push fisub jg shlb int3 popa mov outsl add jcxz xchg xor fcoms jno test (bad) or arpl xor in adc fwait or out cmc jle fadds arpl xor sbb push out testl add inc pushf ja xchg cmpsb aaa mov xor inc call mov (bad) push mov lcall xchg popa stos mov push sub mov icebp sahf adc cmp repz mov sub cmpl sub dec or mov cmp inc pop nop cmc addr16 pop add pop iret push adc adc cld xchg cs dec imul cmp ja repz daa lock mov shrb testl add cwtl (bad) xor pop pop jg cmp das sbb bound pop sub in push and clc add pop mov pop les adcl add mov pop out push push dec movsb add jg hlt sub popf repnz sbbl icebp lds shrb push fistpll push arpl loopne cmp sub dec mov les adc pop ss enter dec leave inc shrb mov mov lret jnp cmpsl sub sbb dec mov push icebp loope pop outsl or mov jnp (bad) mov (bad) xchg fistpll adc xor dec cmpsl out cmp mov mov ja push xor adc iret stos mov (bad) sbb ja or push cmpsl push mov jo mov in ljmp inc cli add pop xlat add rclb int3 js cltd inc out enter test (bad) add unpckhps aam dec xchg adc jmp fwait lods fild jbe push out leave xchg cmpsl int jbe lret aas (bad) push call adc cmpsb inc push and lods int3 cmp lea in adc mov aaa mov mov mov decb cmpsl stos repz (bad) jno popf jo subps sbb inc (bad) lods pop add hlt outsl mov add imul jae aaa add ss jmp mov out (bad) mov push clc repz lcall add (bad) sub push cmpsl in pop push sbb daa mov cmp comiss iret xor imul mov inc rolb xor lea in lcall hlt cld lahf in jecxz sbb js inc (bad) fdivp add (bad) repz call jne xchg add call push and push call adc mov xor xor ljmp push pop dec cli inc push cmpsb or inc shrb push movsl in (bad) cli jg xorb cmp std jae std rolb es add insb inc xlat addr16 inc sub lcall outsl enter cmp scas inc xchg outsl inc jo and push cli fstpl (bad) leave push dec cmp and mov push pop test xchg xor pop pop sbb fwait shrl sbb mov pop into std sub fmull push pop mov push mov addr16 mov or sbb adc sar push je fisttpll (bad) clc xchg int3 jp mov and mov mov jge xchg fldlg2 sbb lret pop sub dec sub mov fdivs jge xchg (bad) in mov mov out mov aaa add add xchg cmp cmp sub cmp fisttpl mov xchg in mov stc js lret cmp insl addr16 (bad) imul pushf fnstsw jecxz sbb inc loopne scas inc dec mov les push ja test ds add popa pop dec dec push and dec lret xchg dec xor repz xlat aad jle in pop insb lret jne (bad) vpaddsw or mov cmpsb rcll fdivl push aas test xor add add and fisttpl jle mov test jge push mov and pop movsl jle add jmp shrb mov push push and inc xchg sub aas in loopne sbb pop or mov or push inc ds push push inc sbb je addr16 leave inc sarb in vpcmpeqd repnz or cmp cmp sbb xchg jle stos fsubrl aaa call mov es adc faddl cmpsb mov xchg mov push into pop inc cli mov in or cmp xor and iret sub dec pushl cs mov xchg jns add push out jle imul jg testl enter dec repz arpl add cmp call addr16 dec jg sbb mov insl repz jmp out in adc mov leave xchg cmpsl repnz xor stos add fucom sbb fnstsw pop cmp ljmp (bad) (bad) mov mov insl addb jb lods push pop cs aaa jne or stc xor xor and test mov push xchg dec mov mov mov xor cmp dec lea push inc sbb ret mov lds andl jp mov mov ret and mov leave ret or rcl loope dec mov repz add add fsubp sub daa je lock lods mov outsl sub inc mov sbb jo fmull sub aaa xor xchg scas push lea cmc sbb add mov xor push loop jo data16 hlt icebp jae push aad movsb imul dec icebp xor es cld jp aaa lret cld cli bound lcall dec (bad) int movsl xor sbb call xchg xchg lds push aas push aaa sbb test add add pop mov sbb test rcl outsb pushf or repz arpl sbb stos or xor pop (bad) fucomip xchg data16 xchg mov pop dec lds jp mov mov mov arpl pop stos sahf fisttpll xor mov jns sbb aad movsb stos mov shlb iret hlt and movsl addr16 jne in in lahf jmp mov sahf mov bound add out out lahf xor inc daa rclb sub dec add sbbl pushl lods pop (bad) jb test stos stos mov incl adc (bad) cmp cli dec test mov jb mov lods and jne pop es add jge sub jecxz lock lods negl push inc mov dec jle scas das cmp add addr16 (bad) pop pop (bad) out xor add add sbb xchg xchg imul mov loop test mov mov fcmovnu push popf adc add add push aam jnp push jbe es mov add adc fs repz shrb jno call les outsb in hlt jge mov dec xchg push lahf in mov mov mov or lea mov icebp rcll addr16 das test mov add insl orb fwait cld sub call mov out xchg pop jmp xchg and sbb dec es (bad) (bad) mov in pop repz jle xchg sbb std push ret adc enter jne push jle or lret sarl cld inc pop addl jl mov lods ret mov and xor out push inc sbb ficoml icebp pop push mov xor pop adc dec rcll outsb (bad) fmuls sbb or sbb sahf mov xchg or pop add cltd fs add lcall push and je and dec movsb stos movsl (bad) xor push je inc dec (bad) cmc or xor les lock loop daa and dec ficoml mov pushf roll mov call add (bad) or mov dec and cmp jl mov sub mov out pop add add jg aad pop lock div int xor cld xchg add push enter call push out (bad) out loopne sar inc pop addl xchg add loopne dec mov or mov dec dec inc ficomp out (bad) lods dec loop add stos (bad) mov (bad) mov insb push sbb xor jg push cwtl sahf into lds test sbb repnz loope adc pop xlat aaa push lods add add lcall lahf push (bad) (bad) repz (bad) aaa sub jnp insl add rcr jne adc lcall aas movsl sbb dec mov imul adc dec jae xchg xchg call add inc mull das xchg in or xchg mov jns stos frstor (bad) icebp icebp aas test xchg cs xlat add pusha mov jg leave rolb adc daa loope mov cmp fildl add loopne mov add sbb pop pop jecxz repnz add xchg dec cli lret pop pop (bad) mov pop out sub mov inc div pop dec fstpt stc (bad) push loopne push jge in fwait sbb sahf add popf fnstcw pop dec in dec je and and adc ljmp je mov sti jge push push mov xor pusha jne int3 hlt xchg mov aaa in add cmp dec pop pop push sbb and or mov fnstenv xor shrl ret mov sbb nop push movsb mov add push cwtl call mov (bad) mov mov je jno sub add cmc outsl jecxz jno mulb je cwtl cs cmp jb mov mov ja scas xchg (bad) mov add xor adc imul jae sbb add inc xchg lahf mov add and mov cmc sub jne out or sbb cmc mov push lahf jle scas outsb (bad) cmp cmp cld (bad) fist mov pop nop sub lahf pushf dec sub sub jnp xor sbb or lods push dec jg sub add sbb xor addl sub mov ss les fwait cmp leave mov inc xor pop push stos test mov add fisttpll sub (bad) pop push mov dec sbb mov add or pop mov push sbb stos xor outsl or outsb mov inc sub inc rolb xor pop mov xor iret push lahf add mov sub ds pop stos mov mov sbb cs jp jmp bound push popa daa mov popf cmp fs test jns (bad) sahf push nop in dec or hlt mov jb imul mov scas xor xchg popf lret dec add add sub and mov jg adc dec adc cmp push dec sbb addr16 sbb cltd inc sbb popf xlat shr int or repz jecxz jbe,pn test in sbb cmc aad imul cltd out into stos push imul rcr lods idiv jg xor xchg pop dec adc sub negl xchg sub ja movsb andl jns mov ljmp (bad) push cmp bound mov dec add add lret std std enter jecxz adc adc lds push lods mov pop dec imul inc jnp data16 cmpsl fs xor adc pop (bad) mov cmp pop mov aaa (bad) cli or mov aam or test jp push lods mov fstl jae mov cld xchg mov pop rcrl nop sbb jne sub jl inc jge sbb adc int jnp daa clc add push xor addr16 mov and sbb mov loope cwtl ret call test mov jecxz xchg stc dec mov sbb push ljmp xchg xchg jecxz into sbb sub imul inc push mov addb sbb jbe xchg idivl rolb sbb jecxz ja insb mov jle das push insb shr daa imul call cmpsb and js cs (bad) loope mov add add aaa cmp jg and pushf push xlat adc or aad lods xchg jb dec and or fisttpl mov push nop out push push inc (bad) sub adc jp mov mov sub pop pop cltd push add jmp pop arpl aas stos inc bound jne scas shlb out xchg popa std mov stc mov or adc imul pop inc test ret insl cmpsb shrb cwtl dec sti sub add add aas das (bad) or mov cmp cmp inc inc mov xor ret mov in loope dec jg fmuls int3 mov clc jns inc sub test jnp fcmovu sub outsb pop aad out inc das inc sbb mov dec int sbb out jge inc out mov fs fwait nop (bad) in enter sbb adc test lea imul and adc jge stos sbb add or adc sub loope sahf mov (bad) xor stos and mov jg lret adc ficompl daa mov mov pop out mov add pop jp popf cmp sbb dec push inc dec jb mov cli jecxz jecxz sbb fwait test negb add fucomp pusha out dec pop enter sub add inc insl nop in jp push dec jl sbbl negl aam push jns aaa leave mov and dec add xor jns and mov pusha cmp lods xchg jmp out push jg in or pusha or mov mov jno addl stc and ljmp imul add adc shrb or js (bad) cli je je jb pop sarb dec jnp mov (bad) or rcrb jne (bad) repnz inc fcmovbe das ret mov ja pandn push xor or lods sbb insb mov sub int fxam cmp or cmp out sbb je incl inc jb leave bound add xlat or hlt sub jl bound fstps xchg cli xor cmp aam pop in or cltd sub and jb sbb mov data16 cmp fldl outsb enter cmp ja fnstsw aas arpl inc mov sub and push test das stc mov jbe shll fsubl test repz mov lock adc movsb push stc outsl jecxz lcall or xchg jp cmpsb or das mov fsubl adc (bad) mov cmp stos mov mov push xchg mov cmp loopne mov in add movsl test push xchg icebp inc sub ss or mov cmp in xor in hlt jae add sbb jl mov xchg add add negb xchg fmuls xlat fistpll cmp sbb sub insl (bad) out loopne in push adc mov xchg popa cli xor ds test cmp test mov ret aas and (bad) lds mov mov or push fs testb mov pop adc sub push lret sti out jmp xlat pop sbb cltd cltd add sub loope mov jmp scas dec jo rol scas movsb xchg add int3 les or out pop cwtl loopne test and jp arpl fadds inc cmpsl jp adcb outsl loopne or cmc mov cltd add ss stc gs ss daa in inc test pusha dec out mov cld sub cmp repz (bad) dec fisubl fs test sti jo push mov (bad) test psubusb gs cli pop and jecxz ficoml dec aaa xchg and or add add sbb push sub jmp das out mov int xlat jbe das enter dec sub mov dec popa sub nop sub scas in (bad) in xor out mov sub xchg test push sub add add rolb into addr16 jg lods dec mov int3 sti sub aam loop sub cmpsl repz and stos mov add test es push xor mov jae dec jae jne add mov stos out (bad) out and shl icebp xchg sbb outsl setnp test push out sbb cmp sarb or jo icebp inc lcall mov repnz cmp adc imul aad in test adcl cs pop push lea call or fimul fs xchg mov sub (bad) mov sbb fwait mov jge leave cmp cmp cmp aam daa ljmp add jmp adc divl fwait repnz jmp adc test jo cmc dec out hlt outsb fist sbb aad cld stos and pop (bad) sub jne sub (bad) icebp std shll push stos mov inc push xor dec repnz or sti call cs bnd ss cltd (bad) daa cmp movsb insb mov pop (bad) and cmpl add jo mov push sub lret subl pop dec add scas inc pop in outsb mov push cld (bad) test repz out pop jle and push out push jno inc mov cmp flds mov (bad) jnp mov mov das roll in das lock call add cltd ds or fcoms outsb fmull popa and inc xchg xchg adc xor fdivrs subl mov push dec jg pop icebp movq popf sbb icebp mov lock in cli idiv sbb mov scas cmp shrl and movsl xlat jno subb (bad) push rcrl lods mov cmp mov adc pop das sbb repz mov cmpsb cli lds movsb jecxz (bad) jmp fldt jge cltd ds mov gs enter pop pop mul jecxz adc adc xchg in popf inc sbb cmp push sbb and or jo xchg test add add add add dec dec push and dec push (bad) dec xor repz xlat aad jle in pop insb lret test nop cmp enter fwait mov xchg xchg dec aad dec call cmpsl mov xchg xor adc (bad) imul cmp gs jecxz lcall jg jg sub aam loop xchg std dec jnp test mov mov imul xchg adc les faddl push pushf and lahf jnp call add add push jb mov fcomps lret adcb push stos sahf jmp cmp fisubr test (bad) xchg lods jo cmpsl push mov push ret mov pop (bad) dec pop stos mov jns ficompl adc (bad) mov and mov xchg insb cmp movsb es imul jo stos mov mov std out movsl adc push dec cmc xchg fcom in or add add add lahf int3 fimull adc pop repz fcomp sahf loopne jmp lret adc xchg xchg xchg in imul movsl hlt ds add xchg sub sbb femms mov cs fidiv sub cmp cmp (bad) pushf dec into sub push les nop mov and test sbb sbb les icebp imul mov cmp insl das aas das data16 stos mov stos jp or add add add enter or ror adc sbb (bad) call das xor mov dec dec ljmp int insb mov test aaa into (bad) hlt cld in pop push cmp std fwait jge add daa out fdiv cs mov fsub mov jp addr16 cltd lods imul aaa cmp lret test lds rolb dec inc jecxz pop push (bad) lret fdivr or ja xchg lret adcl add adc pushf and adc jle shlb in cmp ret movsb cs ljmp mov xlat jbe inc mov push jb add sub ljmp clc mul pushf shll jb stc inc jecxz or stos out cmp insb pop nop mov ss decb icebp out cmovne jo dec pop ret dec xor jmp sbb test adc fiaddl inc (bad) sub add or xchg pop cmpsb pop xor jnp lret in lods sbb jge add lock add cmpsb sub aad lahf xchg dec dec jb (bad) sti rcll pop sbb and push xor out addb sbb adc push push cmc inc xor sub jne insl pop cli mov push jmp rclb clc pop add stos in jmp lret push cmp mov inc fcmovbe or mov pop pushf ljmp add mov add mov sbb adc add dec movsl mov sub clc clc sbb es call cmp xchg inc into rcr test fmull inc sbb jl movsl scas xchg push adc jg pop mov sarb push dec fstl gs xor jmp dec movl out and std out out cmc (bad) mov fcomp cli shlb lock jmp leave push push repnz jmp jbe fistl dec adc add mov inc popa in cmp sbb mov mov add mov lock popf xchg insl aad movsb (bad) out xor cmc in (bad) xchg out stos and sbb sbb imul mov sub das xor xor mov insl addr16 sbb (bad) and cmp addl cmpsl test xchg cmpsl stos repz (bad) dec fisubl ret pop sahf inc arpl cmp dec (bad) inc bound cmp dec push add out add lret iret pop push dec imul xchg popa xchg mov and sti push outsb xor fiadd or dec sahf xchg fldl xor movsb lods sbb xor movsb fild jb or fisttpl testl jl pop into std adc fmull pop pop lahf iret sub sub jne pop enter (bad) mov adc in mov jo push push inc push lods incb clc jo push mov add add add cwtl adc fstpl push bound sbb movsl bound push and (bad) (bad) loopne popf lods mov insl je jo mov scas xchg (bad) adc lea dec (bad) cmc negl iret inc dec mov out mov sti mov push unpcklps push push mov xchg push and movsl push mov dec sahf adc inc inc inc lods xchg add ss (bad) mov sbb test cmp xlat or in inc hlt lds add cwtl push inc jge repnz pop sbb jns rcrb xchg adc movsb cmp xchg enter cmp adc jmp xor imul std sub sub loope cs mov jo or jge insl jo or jnp imulb iret addr16 bound test lea sub xor mov xor movsl xchg daa ljmp cmp cmp sbb scas into aas dec xor in scas mov dec mov int3 inc test inc mov hlt xchg lods jo mov pop sbb jle pop (bad) iret push pusha mov mov fnstcw dec push dec cmp imul xchg out mov bnd jo lods xorl imull add pop mov lods mov dec arpl fimul mov adc xor test adc jno add pop mov jne cvttps2pi dec pop aam xor jl dec jle inc lods fidivr adc fs or lods inc push lods repnz imul lods hlt dec push mov call pop and test lock (bad) pushf aas (bad) fnstenv syscall cmp sahf add imul enter fdivrp xor hlt jge push divb push jne data16 add dec mov pop movsb ss fsubrs mov (bad) lea add add scas inc xchg outsl xchg lret add mov ja js (bad) ja xchg mov sub ds add cli es lock xor rcr stos fbstp or sbb pop inc mov push xchg mov (bad) jmp mov mov sbb and adc (bad) jne push sbb mov xor xchg add inc xchg jo addr16 xor sub aam loop nop in loope adc push into aas (bad) leave add jne adc js sti inc je xlat (bad) mov phsubbw cmc sbb gs lahf fdivs (bad) rcrl les xchg imul aad mov out xor pop cmc fidivrl sub jp add inc hlt cmp out leave iret ljmp jno sub xchg mov sti mov int xchg xorl shlb loope push mov test aaa into bound in pop and inc lcall add (bad) (bad) cmc jle sbb mov fwait xchg xor popa cmp mov or arpl pop sub xchg sub mov inc push test xor movsb movsl scas divl jge inc push mov mov in icebp (bad) in pop jne dec jnp ja clc movsl mov and mov rcr mov shll fisub add pop add mov dec sbb pop mov mov jle push flds add dec stc ja pop das aad in jno jp adc adc repz xchg (bad) push lds ror mov aas inc mov leave push scas scas or inc fnstcw mov cli jns outsb ja mov outsl push frstor sahf sub dec xor aas mov jl inc jne jae test cmp mov mov xchg in test mov js jbe xchg add add scas iret (bad) push add jo popa mov mov inc dec test and aam mov xchg and fist mov xor dec clts dec test xchg movsl mov test fcoml mov and fstpl push int mov dec mov sub inc (bad) out inc (bad) hlt movsb xor pop mov ljmp fimul lret iret pop js xor add inc loope out dec imul fimul mov push imul xchg xchg xchg cltd fisttpl js fwait test xchg int or std lods xchg idivl pop sbb out popf (bad) stc dec (bad) std jl lods or mov lds test xlat lcall jmp fsubrl adc repz pushf sub nop faddl jmp xorl push dec jnp scas negl fwait adc mov sub add add or xchg arpl cmpsl popa add out dec sahf add in adc add loope enter repz int mov mov mov fildll dec mov mov ja sub std pusha cmp inc jg andnps xchg (bad) mov mov cltd mov or mov loop mov or jl add xchg pop add aad push or sti dec push pusha bound add lods jno mov jns iret hlt jecxz sub ds dec or popf jo call or jns jno loopne adc (bad) pop pop in sbbl inc adc adc xor dec pop les icebp (bad) push dec aam fsubrs loopne mov data16 in (bad) xor cs inc int3 jle (bad) out push push jbe imul push inc prefetch mov stc xor fmuls dec add aad in jo jp xchg xor add push mov into mov in enter loop sbb jbe sub ja mov (bad) dec mov into xchg mov and int dec rcll scas insl mov les ja jge repnz (bad) sbb and xor adc push mov aad xor push jo pop mov cmpsl sub adc rolb in lcall or add pusha test dec xchg les jo sahf mov stos es ja mov xchg fdiv dec mull add xor movsl (bad) fildl inc test ljmp arpl popf sbb (bad) outsl xor cmp out popf popa std inc popa inc mov imul dec jmp repnz icebp sub ss (bad) js pop outsl repz movsl cmpsl std cmp je dec dec data16 enter inc ss rcll faddl jg int3 call add pushfw adc not jnp mov push jae fnstenv adc repnz insb adc mov js mov pop rorl inc (bad) loope mov mov js imul pusha push cli leave pop lret or lock xchg mov or push mov xchg mov jle mov lahf xchg in and mov jle push in stc and movsl in and push push iret inc ficoml mov pop mov repz add ffree mov xor int3 outsb jns call mov leave push cmp aaa lret inc orl clc lds lods add cmpsl daa fiadd ja faddl mov outsl or cmp lea and aaa in jl mov add bound mov lcall rcrl mov lock pop jmp push sahf cmp jbe push or (bad) fwait or fsubr xlat add ret loope int3 xchg mov daa inc ficomp rcrb pushf movb pop fsts mov cltd popf adc fdiv sub add xchg roll and or lahf aam out in and ja pop in sub push adc or fldcw arpl int add dec aaa popa xchg popa std nopl push push push std mov movsb xor (bad) and shll xchg push sar test jmp add xchg leave adc repz sub lods cs mov cltd sahf or push push lods cmc enter add push shrb fldl icebp or inc fstpl scas push dec scas in push mov lahf pusha jnp sbb dec cmpsl cmp pop int3 dec int jnp decb mov loopne pop mov (bad) jae shrb jg movsb insb add push movsl jnp xchg ljmp mov dec adc pop sbb sbb adc add cmp or jbe and sbb stc push je and mov mov mov (bad) mov leave repz (bad) frstor loope fmul and outsl push sahf cli xchg lcall pop sub or lret imul cmp pusha out rolb aad sbb push stos or mov cmp cmp cmpsb shrb sahf pop xorl sti xor or push xchg push mov mov jmp mov flds cmp fs aaa push int xchg mov sbb mov add mov sbb pusha test inc (bad) xor js dec stc outsb vpandn push mov fimul ja bound push jae cmc push in push ss test adc (bad) shrl je push mov and dec jp (bad) jmp aam and fs cmp nop je inc in xchg jo scas pop xor nop inc cmp cld add loop jnp aam and cld and push rolb lahf fsub cltd pop xchg jecxz jle sub mov out pusha add ret popf and cmp test mov mov jo mov roll (bad) loop push pushf arpl mov cmpsb shrb push lahf jmp or mov in mov jo test je test (bad) mov or stos popa cli das lock or dec mov mov mov jl xchg lret mov sbb sti leave mov int3 shrb test xchg xor (bad) and and mov pushf popf orl push outsl pop les pop mov scas mov pop cmc mov add pop inc xchg inc test add (bad) and hlt das inc cmp xlat jnp adc loope leave adc mov mov and pop jae jmp test sbb dec cmc cmp xor loope jbe in push ficoml xchg repz aaa ss cli inc ja pop pop mov test icebp xchg jns add xchg xchg jne mov push into outsb or mov je in add cmp pop insb push out nop clc adc inc into mov cli mov sub data16 fcmovne push xchg out in popa fildl add lret inc mov cmpsl ljmp and sarl dec icebp inc fwait in loop mov arpl mov pushf dec into pop loop pop sbb fsubl enter andl in jmp push dec outsb in mov adc or adc addb cmpsb or out sti adc xchg cmp sub mov rol cmc cmc or mov ficoml and mov mov xor lods lret ljmp fsub into les jno icebp lahf enter inc int cld mov fwait sbb cmp rol popf mov jo sub mov lods je push add or inc xchg push sub xor shl mov push out outsl adc mov test jge add add outsl push fnsave call shlb or fcmovu call int and push push pop pusha lock loope mov push adc adc (bad) hlt or xchg dec out dec mov pop cmc mov (bad) xor xchg inc test xchg sub jmp dec lods cmc lods mov lods imul add mov mov movzwl aas dec cmpsl sbb clc inc mov add add pop (bad) mov adc addb jmp test sub (bad) xchg out mov aas data16 or adc inc add mov rcr loop jmp lret mov stos jmp push rcll sub mov sbb jno pop inc addl test loope dec cmpl movsb data16 in hlt bound dec xchg into cmp adc lods xchg ret insl sub mov imul add add mov mov mov aam mov xor mov sub mov adc xor nop (bad) and push jmp sbb in call push mov loope shr test jno mov push outsl out push hlt mov fs cli popa ljmp dec or dec cmpsb pop sbb ljmp inc lds inc movsl test push rcrb add jno dec push leave andb push mov jne add cmpsl sub ljmp je push adc shl stos mov mov (bad) xchg fisubr push loope rorl sbb xchg aas out dec fldcw lcall xor dec scas jl xchg lods dec mov loope mov (bad) les push das pop mov sbb push fiadd and pop xlat rcl ficoml sub adc xchg add hlt lret adc jg ja push notl add add fcompl mov lahf ljmp dec je inc add add stos popf jg (bad) sti (bad) push sub fstpt add les jb push je inc xlat and mov inc jg pop pop mov mov dec mov mov ret gs mov sub add pop dec add pop popa xor mov mov lahf pop jmp mov mov nop mov aaa movsl (bad) loopne sub addl add or (bad) rolb das call test push loopne and jne insl pop push xor mov xchg test imul inc mov cmpsb sbb fwait pop pop rclb fisttpl addr16 jg pop pusha sbb arpl sbb mov inc xor out jg mov dec pop addr16 pop sub push inc nop xchg push pop push (bad) xlat orb and jecxz or push daa cld pop sub mov add add push pop jp popf xor mov or or (bad) stos cmp mov pop inc or fildl fcomps fsub add push insb mov pop ret push inc (bad) fldenv leave pop fs mov xlat scas cs mov push add cmp dec push dec inc inc int xchg fstps das lds iret arpl jae xchg push xor mov or roll rorb cltd ds arpl dec mov fldenv enter jl hlt pop shl inc adc mov (bad) mov mov call mov sub sbb lods pop rcrb xor mov cmp adc sbb sbb clc pop xor insl push xor or (bad) dec fcmovb sub imul push push sbb dec pushf cli push test push lea inc or pusha push xchg xor mov sbb mov leave ffreep push xchg loope mov adc dec push lret (bad) mov fiadd dec dec and xlat test jae imul test les (bad) fsubr xlat ret loope and fwait sbb clc and mov inc xchg scas xor push (bad) lcall in dec cmp out sbb mov outsb or sahf inc fdivs cltd addr16 jmp hlt jl mov ss cmc mov mov stos and and imul sbb add jl in sbb fisubrl movsb ljmp ss adc inc adc outsl inc stos cmpsb fnsave ds imul mov sub dec icebp xor sub push pusha mov inc push mov fnsave sub mov popa sbb sahf add inc dec jge out (bad) rolb cmp std dec add mov jnp dec decb mov sti and stos mov xchg lea iret orb push xchg add jmp test pop pop xor push jno pop daa in in jmp (bad) push sti movsb cmp dec mull fldcw (bad) clc mov adc xchg subl leave sti sub jo stos dec dec aam adc sbb push push mov xchg fnstenv xor lods mov jne dec cmpsb lock jo push jb add add mov fistl dec rcl imul xchg sbb adc pop mov jae arpl mov (bad) or xchg into cmp out cltd jg or mov rcl and inc push adc lea (bad) dec mul insl outsl mov outsl leave sbb pop xchg (bad) leave in pop es xchg stc xchg mov cmp xchg shll pop mov (bad) xor add sub fs jbe add add add add adc mov es sub push aaa or cmc add mov xor inc dec jge push pop fldenv xor icebp dec xchg mov mul cmp ds pop cltd in sbb enter std int push les xor imul punpckhwd sbb push out adc push jecxz pop in sbb xor push orl inc dec mov cmpsb sub in pop cli outsb test hlt sti and add pop mov add add (bad) ds imul out push aas insb out loope inc jo loope mov cmp mov push cld je orb sbb (bad) fdivrp sub dec inc add test je mov fwait or sbb jge adc test mov out fnstsw lea repnz or pop in icebp (bad) xor fwait or inc inc add jo mov jge inc hlt repnz pop or add in and push mov and mov xor pop outsl dec into sub add ljmp stc mov sbb xchg (bad) adc add repnz and dec and push xchg sub in repz adc jl push dec mov aas out lcall sub sub out loopne in test scas jl jg ret (bad) adc cmp cmp lods (bad) mov mov lock add insb adc ret or or movsb ss xlat fimull dec jp cmp dec add xor jg sahf mov fstl mov dec xorl xor lcall adc jns fidivr xor sahf or cmp add orl sbb repnz xchg inc pushf lahf mov pop or outsl sahf dec mov or shll lock (bad) int3 pop push aad insl inc jg dec mov add dec adc sub jae es inc (bad) dec mov mov (bad) cmpsb ds jg adcl jmp (bad) les divl (bad) gs lahf js out popa dec cmp sub std add loopne sbb and rolb js stos mov mov ss test loope ret xor scas mov push nop mov ljmp lret jge add xlat inc add in xor and idiv sbb pusha inc mov imul xchg out jns jnp insl pop leave xchg pop push push xlat dec sbb (bad) iret addr16 inc adc stos jp jg and lcall pop cmp enter xchg or mov mov lahf add push inc scas out lea sbb test pop sti sbbl clc xor lock rolb mov sbb sbb mov sbb in pushf test sbb fisubr add jge mov pop xchg in loope mov (bad) sahf cli mov repnz sub loope pop ds mov lods sbb sahf sbb fmull mov xor popa daa stos cltd xor xchg push xchg push xlat js jno ljmp in cmp jno add sub stos cltd cmp adc jle xor das test sti or xchg shll fidivr mov pop and inc xchg int3 add add sub lock jno cmp (bad) pushf dec arpl dec jge sarl sbb mov popl inc (bad) xor pop ljmp in jnp xchg test ficom and (bad) icebp xchg sti jbe jecxz cmp add add addb sti insb sahf mov insl mov xor mov (bad) outsb lcall xchg fidivr or pop push mov outsb cltd lock or jl addl xor inc sub fsts xlat sbb xchg inc mov aad inc add (bad) jo adcb jno lods xchg fisttpll lahf xor imul movsl (bad) (bad) lock lret inc fisttp mov mov insb fs pop pop and xchg and cmc ret dec sbb jl pop cmp pop cltd cli ja cmpl call arpl scas stc mov dec push aaa sbb pop add push ret aad dec pop xorb jae icebp sti jno pop aaa std or add add lret mov add sbb insl cmpsb out fs inc fstps in stos sarl mov in xchg cmp xor jle xchg mov mov int bound mov inc (bad) push mov pop pop sbb int3 xchg insb xchg mov sbb sahf add jmp out std mulb pusha xchg inc out inc push aaa adc sti loopne lret in xchg add mov hlt lea mov leave vmulss js push (bad) lahf movsb and xor mov rcr or popl cmpsl jmp mov std (bad) nop jecxz lret sbb xor and pop or loop pop mov sbb add (bad) ffreep xchg lods aad lahf lret pop nop jg insb fnstenv ds mov mov add add push dec nop jnp adc jge ret ret xor and test xchg jb adc mov inc dec lods mov stos sahf add outsb fistp movsb mov push into jle addr16 push in adc aaa fimul add xchg inc mov cmpsb adc lret push push in sbb xchg adc sub xchg xorl roll (bad) mull sahf push arpl scas add add and test xchg mov les inc iret mov dec cmpsb out ds add gs ss cmpsb loope xchg push arpl mov iret dec or mov lock sub call jo out imul aam arpl decl push mov pop pop or xchg fstpl out cmc orb mov movsl xchg push out addl xchg add xor repz add jnp js rcrl xchg scas sub out pop (bad) ljmp push pushf inc popa sahf out add dec subl lret xor je or movsb cmpb (bad) xchg iret add inc jg sub xor sbb sbb dec push loope test es jmp or stos lret sub fwait stos pop aam mov inc cmpsb call mov out aam push fdivrl test mov outsb shrb out mov cld sub daa stc movsl dec inc es das pop or inc jp push jmp mov add mov imul scas es fild jo cmp lea insb pushf lret cmp (bad) mov outsl pop das out loop js dec add xchg xchg mov push xchg xchg out and xchg cmp test movsb iret out or sub cmpsb jns cwtl cltd pusha cwtl push lcall jle test ja lret (bad) xchg repnz mov jne add or sub xchg mov adc (bad) sbb and fistp push sub mov mov iret mov inc fisttpll insl xchg mov lds mov xchg in cmpsl xor ret imul push jae mov and and pop xchg add xor jmp xorl inc inc adc mov adc add add mov ljmp out loopne pusha jnp and push pop nop fucomp jp inc or outsl movsb ja jle dec das add imull in pop out xor sub ss jmp out fild mov rorb mov aam sub mov cli push add mov and mov pop xchg pop divb cwtl cmp fwait push adc sub mov add add mov mov ret (bad) movsl xor xor mov cmp jbe or scas (bad) push sahf and sbb in movsl jb xchg sbb pop es pop sub push xor sahf fucomp fdivl push jecxz jle add mov ljmp mov shrl sub (bad) ds inc jl or je mov mov xor (bad) lock shrb dec xor rcrl fnsave add add fimull lret std out sub xchg xchg stos insb cmp jno (bad) in popa push lods outsb lea pavgw jae es lcall adc xchg inc mov mov jge mov pop mov cmp loop mov div cltd jb mov ffreep sbb and shr pop cmp test inc fisubl push lock in (bad) les lea outsb mov adc repz into icebp push sub mov cmp add add jae sub aas dec xchg xorl push mov nop pop rcrl je out xchg rolb xchg jmp out gs popa jno loopne mov dec (bad) out or jns mov cmp imul mov add xchg arpl fdivs push jp dec out sbb push test (bad) pop fdivrs pop nop (bad) stc movsl dec fmul add ret lcall jle ret dec iret std (bad) xchg repnz call jno mov push dec or dec icebp roll clc movsl xor aas fildll fidivrl ja mov lds ret (bad) push mov lcall std pop mov mov inc imul push sbb adc ljmp push stc push push repnz jae js stos jmp std push mov enter mov into mov xchg inc sbb aad test xor lds add add xor xor lock rcr xor in int3 inc mov and rorb sub cmp pop movl fcoml stos xchg xor fmull aaa ljmp sti sbb cmpsb mov pop xlat pop leave sub cmp in cmp fisttpl jle shrb out lds (bad) mov mov ss lock sbbl inc lds mov dec or mov dec add adc and add (bad) mov jno sbb std mov adc scas lea add dec jmp xor sarl cli push mov sub mov dec (bad) clc imul pop nop push outsb mov dec bound cwtl nop fnstsw fwait cmpsl imul push sbb bound dec add stos dec sahf ret pop (bad) loopne movsb push dec inc xor xor xrelease jge push enter daa add popa hlt insl loope mov mov push push pushf (bad) sti sti punpcklwd call sarb movsb fimull adc cmpsl and sub loopne stc lods xor icebp sbb jne sbb (bad) pushf add stos add cmp repnz and ja scas xor xchg dec sub scas and mov (bad) in mov fwait pop dec mov iret mov jae int lds movsl add jno add popf jno mov fsubr fsubrl add mov xor xchg and add imul test xchg (bad) sbb or mov dec push pop fsts loop out leave sub rolb std in dec fxch repz mov xchg xchg dec ja mov cmp cwtl cmp or sbb fnstcw sti mov mov sbb int3 xchg mov pop xchg lcall std sbbl or std sbb add jnp mov mov push repnz adc dec jnp adc pop cltd cwtl mov aam inc fistl xchg add and ret jbe in xor jno lcall xchg inc std out or dec into cmp push adc xchg xchg pop xor mov fnsave mov das aad rorl fldt clc push test rcr icebp pusha mov push popa adc (bad) loopne cmp loop out xchg lods adc shlb cltd push scas jecxz mov ljmp add add jp imul sbb xchg popf mov out lds popf sbb les flds jp es jg or or popf daa aam psubusw push pop cwtl cmp sub push jge mov mov push pop add jp cmc (bad) adc in mov addr16 cld jg jg mov lods mov jne push mov es je add fs inc add mov les int3 aam dec ljmp add mov push cmpsl pop loopne xchg lods imul jb push lahf jge push xor adc mov cli sub sbb add into jae sbb add push and sub nop mov cmp dec sbbl gs das and pop xchg push mov adc (bad) je dec inc lods adc iret add or cs and mov gs inc jb decl adc dec push cmc shrb insl enter arpl outsl add aam and test xchg add cmpsl push cltd in lcall adc xchg cmpsl push add fmuls out imul out jge or (bad) out pop push xchg ja adc lods pop rclb xor add or js lcall leave (bad) jb iret sbb mov pop int3 aam adc push mov cmp aaa mov fnsave adcb cli push fbld add data16 push push lahf stos dec and inc pop pop or cmp and lea fwait sub xchg pushf push sarb imul addl push adc ss or jmp scas sti outsb mov nop mov leave aam adc (bad) mov rol and xor (bad) in sbbb jge adc in fwait sbb sahf add push xor jmp das xchg xlat pop nop stc mov push add dec mov (bad) lahf push inc jecxz push (bad) adc out adc add sub mov cmpsl ja insb jnp cld loope test pop cltd cwtl mov and pop cmp outsl jp xrelease lret cltd and (bad) loopne xchg lods imul jb sub fmul lahf mov sbb dec mov push xor nop mov fcoml and call cmp mov mov nop or and cmpl int iret nop sti push sub fnstenv int xor sub mov add add stos sahf xor sbb inc or repz inc jmp xorb jp or in fdivrs mov out stos enter cs and push popf pushf divl jbe inc into jmp inc xor out aaa fs sbb shrb or pusha mov jmp mov fs cld sub lcall mov and dec adc xor je dec scas imul sbb ss stc jb add shrl xor (bad) cmpl inc add dec fbld cmp add dec enter cmp jmp into mov push stc jle dec (bad) rcr pop inc sbb sahf orb outsb mov and cmp pop int icebp mov dec (bad) dec jle pop jge pop lds lret fwait push js (bad) mov stos mov xor xor push sub add add add add sbb movb rorl ror (bad) dec mov fcoms xor mov (bad) adc lods mov push sub aam pop jae lods adc das push orb loope das nop jno mov cwtl adc lock cmpl (bad) movups xchg xor adc mov mov enter xor sbb inc mov jge cs mov lods xchg mov pop add int3 fisttp dec bound jge sub das imul add or hlt push adc or mov sub scas mov loopne and dec pop and xor mov dec push push jmp cwtl or lods mov mov and adc insb rcl daa jne sahf mov add movsb ja daa ret jp fcomp int into sub ret mov fsubl inc push test lods fisub jns sub adc lods icebp repz fildl dec mov jp push mov shrb add or mov repz pop cltd cwtl push mov popf int jle sbb jg lods sahf add stos jl mov xor ret xchg push push inc and pushf dec (bad) loopne aas arpl push aaa std loop pop push ds imul sbb cmp sbb shl jae aad adc push and mov xchg sub dec cmp repnz aas loop loope popf fwait sti (bad) cli mov mov inc sbb jp shrb mov ret in icebp inc rolb inc shr sbb or pop fs pop mov xchg out pusha testb jno inc (bad) stos fistpl bound mov cmpsb cli popa xchg dec sub pop and test xchg push jae inc loope out adc into test ljmp or roll movsl (bad) push dec ja movsl int add pusha stos mov and popf aam popa nop inc jns sbb movsl xor or cmp push push push jle das (bad) fstpt pop in xor push out jg pop das aad jl xor add push and call dec imul cmpps sub les jl lods cs xchg mov data16 or inc mov and xor fiadd inc lods mov add xor cltd fimul xchg icebp add daa jmp push arpl jnp divl or mov mov (bad) pushf movb add bound or iret mov daa in out jbe (bad) mov mov cmp icebp fildl jo jne xchg and push xorl test es inc push aaa sub push outsl push push mov fwait mov int xchg xor jmp xor lods lcall pop or xor push dec add in aad jecxz or fidivr repz mov and add xchg lods (bad) push ss test sub je imul push pop sub mov pop pushf jns mov mov adc cmp stc sub dec inc add push pop shrb insl adc sbb pop push sbb sub jo lea pop fldl in cmpsl sub iret sub repnz or je fisttpl cmc xchg (bad) and adc jge inc push mov add cli sub mov lock sbb add jmp cmp lods pop mov and (bad) cli es rcrl mov ljmp mov lea jge mov xor push lcall sahf xchg adc pop mov adc test cld cmc mov mov push aaa cmp roll push pop arpl sbb outsl jns adc pop and mov mov insl xchg sub int3 outsl data16 add and out or (bad) sbb cli test sbb cmc add nop pop xchg hlt js shrl pop lret nop insb fimul cmp and pusha and jge aaa popf sar lcall stc arpl jo xchg addr16 std scas mov lret imul mov inc mov fwait pop andb fs bound jne jb pop iret jno daa pop insb sub fimul test scas inc add mov add or pusha xor push push fwait gs or push ja add fild fadd or std ret lock adc nop cmc mov pop (bad) loop mov xchg fistpll out fld1 pop or push rolb fs dec sahf jns data16 pop sbb ret adc inc loop dec push movsb lds dec xor std lods xchg jmp rolb xchg stc outsl mov out outsl (bad) mov and sbb fildll pop nop repnz rorl je scas xorl (bad) fwait or cmp loope fdivr or mov cmp mov or jo imul out cmp sahf inc mov hlt and out ret pop jb mov jno sbb sub push jle in adc cmp push inc xor repnz push divb xchg sub dec aas (bad) jb inc lcall pop notb pop (bad) test add lcall lcall js jmp inc jbe adc jmp lods and (bad) sarb sbb mov sbb mov pop (bad) mov inc pop shr out or fcmovne pop inc inc andl inc pushf out inc xor mov mov jae pop sbb out mov push aas sbb mov ss (bad) fisttpl (bad) mov movsb mov dec movsb fstpt jo jne xchg enter sbb fdivrl in loop pop add adc mov fimull or into push ljmp lcall xor cmpsb mov aas push jb (bad) or enter mov jb dec pop ret fcmovne mov dec and in popf jo enter and and js cwtl xchg fcomps lcall lock mov adc (bad) dec mov ja movl test sub jmp testl or bnd aam jnp fistpl (bad) mov nop mov test mov fadds mov jnp jns stos cmp mov sbb adc loopne sub out mov insl mulb or jl lret and cld pop nop or movsb pop mov sub mov xchg and cmp inc bound mov shll and cmpsl lock pop xchg lods xlat orl add adc lret test movsl outsb or or call outsb mov sahf cmp (bad) xor pop stos mov icebp add enter call mov or inc inc aad jnp es lds outsb das pop jle out mov xchg add dec add out inc repz jae repz (bad) and dec adc jo push xor rorb cmp std add add (bad) in aad jbe rorl ficoml mov add in clc mov or inc jecxz jmp push sub push insb pop mov andl lcall inc mov lock or rep js mov pushf gs iret jle push icebp (bad) sbb push cwtl aam addb push outsl sbb int mov fildll sub loop xor mov enter roll mov xchg cmc and add xchg add add mov cmp jl ficoml sbb enter push jns ret stos adcl xchg cld cmp jne inc adc mov adc lret in xchg sbb scas addl dec pusha (bad) jg xor repnz adc lods pop jno jne dec mov xchg sub adc (bad) imul shlb pop jo xor leave cmc das mov (bad) sbb repnz mov enter or movsb pop mov stc (bad) and or mov (bad) xor movsl xor mov push aam popa jle test xor ss mov xchg in xchg mov inc mov push dec popa scas shr (bad) jae imul cld mov fsubp adc jg mov mov sub mov adc in adc clc daa imul mov jns (bad) lret test adcb repnz inc cmpsb jecxz hlt lret inc les add add mov mov clc imul arpl cs lahf inc insb test push or pop mov pop xorl popf out cmp push js jle xor adc cwtl (bad) cltd sti cld inc xchg mov icebp dec and xor jmp mov insl fmuls xchg jns out into dec adc daa cmp sub aaa adc not xor loop enter fdivrp xor add sub mov cli scas jecxz sub mov cltd jns mov mov movsb pop sub std ss shrb mov roll bound out sub push push addl mov xor jl popf lret mov mov xchg stos inc fwait xchg and add mov jmp hlt outsl aam mov inc push cwtl adc mov or bound mov and adc fldl or (bad) fmul push pop sbb jae sbb mov mov jle push xor cmpsb repnz push subl popf adc jae pusha arpl in movsl movsl jno dec cmpsb lock stc fdivs jb cmp aaa mov lret in mov mov cmp jae sub (bad) out (bad) or jge lods pop lods pop jbe out ljmp and lret in imul add add xor dec in adc enter sar mov or jno sbb mov xchg cltd lret add fstl lret or fsubr sub push mov cmp jp pop adc jle push mov cmp push push push cwtl adc dec adc fldt pop in movsb int fmul mov sub repz inc inc inc add jo pop mov ja jo nop clc js jno aad inc adc mov movsb shrl adc pop pop (bad) test add mov out pop sbb daa cld ret push in cltd jle ljmp nop or xor ds dec jmp xchg xchg mov mov test or jl test fincstp mov into and mov lds out lea sbb xchg in xchg (bad) in movsl scas stos addb scas sbb jl jb cltd dec mov ret mov push xor inc dec pushf mov stos cltd fimul (bad) int3 add add adc mov arpl ja mov sarl jbe sarb fcomp imul push lea pop call xchg sbb add adc xor icebp mov mov ljmp add mov hlt add out out push fidivr pop pushw lock test sbb jp xorl sub xchg sub into cmp add in mov dec fs loope test cwtl push inc mov dec jle scas icebp cmp cmp dec andb xchg (bad) je sub lahf scas jl lods xchg sbb inc cmp movsl outsl cmp and js or jb add mov pop sub cld inc cmp mov sbb jb test (bad) loopne xchg cmpsb sbb push adc xchg (bad) pop nop add out add adcl add pop pop lahf mov aam rcrb mov add push jmp or in pop mov ret in imul jae ljmp gs jmp inc dec mov add xor inc and dec jecxz aaa jbe rclb and (bad) lea xor (bad) cmp mov rolb jge mov mov (bad) clc pop lds jmp xchg fucomip aas jnp out addl (bad) dec xchg cmp jcxz orl aas and sbb cmp xchg inc and xor inc lahf cwtl add arpl sub arpl pop push sbb cmp stos push jo pop pushf (bad) pop mov mov jns jno push daa in xor mov mov mov mov sbb jmp xchg pop inc sahf cmp pop cli pop dec jnp cmp pop push push add and andb push add in int aad mov scas cmp into ljmp (bad) mov dec ljmp or sarb mov push xor imul push movsb gs fisubl ret in ret dec mov cmp sbb pop cmp dec xorb fsub mov and xchg nop fimull outsl inc pop sub mov out jns mov inc dec gs inc mov add bnd xchg xor fimull and and xchg push mov or nop sub xchg outsl pop sbb or scas mov lea mov sarb pusha inc xchg pushf xchg push insl call xchg cli mov jp sbbl jl cmp jge mov fidivrl sub inc mov loopne in jae push mov pop sbb jae push movsb aad mov into and enter in sahf fs out daa stc jg or cmpsb cmp sbb pop hlt cld or lock lods pop stos xor lahf pop mov cmp xchg pop out pop lea sbb xchg in popf inc sbb cmp adc testl mov lods sbb mov inc std sahf and dec xor lock mov jae out lods sbb and xchg mov mov hlt test pop dec inc cmpsb outsl incl sub mov adc lea (bad) sub add add push popf repz andb sbb push in stc pop (bad) lcall mov xchg stos dec mov es (bad) mov cmp sar add fwait lcall clc in iret js xchg cld cli fwait imul dec (bad) je push out arpl add mov xor (bad) outsb in inc sub lds bound test fucomip cmp or incb add mov push stos gs or stos out cmp roll add jecxz pop xchg idiv lret sbb rep outsb push mov hlt clc mov shrl pop sarb pop push je xchg jno loope cmp repnz ja fadds (bad) push push mov adc push out cmp mov cmpsl aam mov shrb sahf pop out sbb addr16 mov lret movsl stos lret orb push sahf cmpsb jne xor add add cltd cmpsb jmp mov jge outsl sbb mov int3 mov ss pop (bad) test sarb dec outsb jno mov mov and lret xor aad inc xchg xor es outsb xchg inc sub cmp jae out (bad) fsubl out push stos push sbbl inc pushf add add cmp xchg push sbb aad dec into push xchg ret adc (bad) mov xchg pop movsb mov shlb cmp or and mov add mov adc dec inc ffree push pop xor cmpsl pop mov adc (bad) clc push sub test out imul lock pop cld or faddl xor mov pop cltd ds xor and push pop jnp rcrb pop outsl jg aam fcmovbe (bad) aaa repnz sbb pop push (bad) or ret addr16 mov int jmp mov iret adc cltd sub add or mov or cmpsb clc (bad) dec scas in sub mov ret sbb pop aas push cmpsl or push sbbl loopne fiaddl push into pop mov (bad) imul stos dec adc add leave aam test jbe jmp dec sbb bound movsb loopne loope or adc cmp push arpl out ficomp xor loopne pop cwtl std and ljmp stc add into mov gs mov push or out push std clc in jmp add pop and inc mov (bad) jo aas int loope mov xchg jge stos mov mov dec hlt in mov mov or xchg loop insb adc mov insl cmpl loop stos icebp dec andl dec aad push nop dec cmp popa mov out cmp mov loopne pop jmp jle add mov ljmp lcall pop xchg insb jl mov clc xchg inc or fmull lcall icebp sub dec xchg jp and ret repnz push mov xor jp xor lock push jo loope into cmc stos mov dec cmp push sar in iret sub repnz or inc sbbb mov dec jns iret (bad) or test add mov or jecxz cltd sbb and inc cmc jge lret adc int3 aas inc fidivl lea add test popf xor es inc fisub leave inc sarb in stc mov inc enter data16 push popl les (bad) (bad) enter scas or adc iret (bad) push aam push jae mov cmp pop sbb es cmp jge outsb mov inc xchg cmp cwtl ret add pusha inc xchg bound in pop hlt lret jno hlt xchg mov jns fs jns (bad) scas fisttpl dec mov add nop loopne fist sub add lret das add adc dec xor push testb jbe scas cld into (bad) push and pop fnsave or repz pop int aas ljmp or in fdivs mov sbb in jg xchg and sbb push jbe push cmc sub pop lahf push jns aaa sbb outsl or sbb jg mov sahf add (bad) aam icebp iret (bad) mov add cltd into sbb cmp inc aaa gs aas cld ss outsl sbb jno jns cwtl bnd test sahf cli xor sub mov adc dec lcall jl clc mov pop mov sbb ja add jns (bad) xor mov push jmp ja ret jb push push arpl pop mov adc icebp mov inc loop testb je jae xchg addr16 or cmp hlt std mov add out in cmc aam cmp fildll in xchg xchg stos dec mov es incl push cmp jne,pt scas rorb es or fwait (bad) out test pop push pop jge push xchg outsl push lcall jge pushf push inc sarl icebp push sahf iret and inc out add lock add or mov and cmpsb sub xchg inc push mov andb roll fmul jmp xor ret (bad) clc repz add add es mov sub pop (bad) bound in pop sub pop mov xor dec das mov fcoml stos ljmp aaa mov stos mov xchg push mov and mov in lcall stc or push (bad) push sbb mov pop mov or mull aaa pushf cmp pop fsubrl data16 ret mov scas inc lods sub ljmp mov mov std cltd mov dec or push jne lods lea in cs or scas sahf ss cld sub add xor inc seta in sbb cmp ds out sbb push add lock mov cld xlat in push in imul insb pop xchg inc xchg outsb sahf popa cli (bad) notl add jno (bad) or out cmp mov adc in lcall jnp cmp cwtl scas ja pop rorl rorl int3 cmp sub pop nop add jb cmp sbb lcall xor adc sub jle push sub jnp dec jecxz adc sub or repnz loopne test push pop cltd lods mov pop movsl push sbb ss or (bad) imulb and std mov inc out cmpsb js sbb push out cmc test pop inc push push aaa mov dec cmpsb imulb in repnz das aad les ljmp xrelease and add add pop xchg inc pop das cmc loopne (bad) iret movsb sub imul cmp inc xchg adc lret cltd loope xor mov gs mov clc jns mov xor js aam inc dec cmp push fidiv jge inc mov mov insb xchg in or mov inc and push icebp jno sub adc cltd into cmpsl push aad jle and ret (bad) pop cmp mov push xchg cwtl jo cltd add lea xor (bad) sti dec and test cwtl adc dec adc xchg sbb fcompl or out mov sub insb adc jb or add int3 dec inc cmc xchg jnp cli scas and in idivl push mov inc or (bad) push xchg dec pop test in push nop cmc inc (bad) (bad) pop or sub mov mov in loope adc pop adcb mov pushl jo rcr and add add scas mov mov lret mov mov outsb arpl mov mov sbb pop inc mov adc pop dec push test add pop xlat adc mov dec sbb xor nop fwait and out incl imul addr16 and inc cmpl mov mov mov dec lar call scas outsb popa loop andb jae pop sti lods das inc inc ficompl mov jns loopne jl sti jnp mov ss sbb in ret adc jge push jp (bad) push push nop mov repz cmp jns pop cld enter add (bad) shll jge arpl jl es lea loop mov fiadd add mov pop arpl into inc xor leave pop mov inc push mov lods sbb insl (bad) hlt inc fs push and ljmp add add or dec mov daa sub sbb out or (bad) xor outsb jo pop andb pop mov stc inc inc jnp repz mov lcall les xor rcl movsl lret jno or mov arpl jo or mov jge mov in stc xor ret outsl sbb add fmull xor and mov pop std pusha mov sti int3 into mov cli and mov sub fsts into popa inc ret (bad) dec into iret mov lret cmp push xchg mov sti lods lods mov add pop (bad) stos mov pop sbb and xchg ljmp jmp fs jp and mov dec adc in lcall or pusha inc xchg loope mov mov clc add movsb orb es add mov add cs nop rcl (bad) mov scas cmp int3 adc lret jl cmp jns stos adc sbb dec divb jne sbb dec arpl mov adc cmp ss scas xor (bad) aaa jnp ret lret repz pop and jns pop std enter leave xchg (bad) adc and lret iret dec xchg xchg jge sub jl out popf xchg dec fsub je rolb enter rsm sbbb jecxz cmp add (bad) test xchg arpl push inc xor or pop movb fsubrs mov hlt inc fisubr popa mov jmp dec int3 dec push or dec mov daa repz out sbb push xchg or addr16 icebp outsl jo push ss icebp mov mov leave jp stc lea shrb addr16 lahf aam nop insl sbb cs xchg movsb xor rcl movsl mov push aaa mov bound clc push jge shl icebp mov mov jge inc mov fmull jnp jb cld add jne cs xor mov test mov fistl ret mov and fsts into sbb and jae iret mov inc (bad) xchg xchg cmc xor and lods (bad) sub add movsb dec push xor sbb cltd xor das cld fsubrl in dec push test add xchg lahf rclb mov mov cmp incb (bad) fcmovnb fstps addr16 dec push ss (bad) cmp jb (bad) mov dec add mov stos xchg mov jb andb daa into push lods mov mov xor lret xchg push loope mov dec mov ss stos and mov adc jae push jnp (bad) int3 lret xrelease (bad) push std pusha jns xchg std enter fldt add add adc and lret or dec jge adc jl ljmp mov dec jne (bad) or fiadd add in mov xchg arpl pop dec xor lock mov lods sbb mov push out std enter sbb outsb mov mov addr16 test outsl mov mov daa sub sub mov or (bad) mov stos fs pop mov adc jb aad jnp jns movsb data16 add add mov insl sbb xor sub es dec aaa mov insl sahf add out imulb clc mov lret movl mov dec mov fmull mov or mov pop mov jle test imul mov fidiv push inc int3 mov and fwait out fsts into rorl sbb iret mov dec mov add xchg sub sbb add movsb xor sub fcomp jae mov inc fwait nop fstpt mov jmp mov cmpsb outsl sti test pop dec arpl in lcall jns pusha inc xchg add loopne sbb sub (bad) or xor aaa sbb add cs mov and sarl loopne popa fwait (bad) jl mov test stos adc add cmpsl (bad) ja gs sbb orb add add cld pop aad (bad) xor rolb pop fistp les cmc xor mov xchg sbb pop add lock mov clc in xchg imul sbb push inc xchg out xchg popa cli int3 int pusha jle icebp sbb or out mov xor pop lcall decl or sbb sbb fmull int3 cmp fidivr cmp iret push mov lahf push mov lea jns fldl add sub (bad) popf push sub jnp inc jecxz out adc dec sub jp (bad) xlat repnz icebp xor add cltd cs (bad) cmp push sbb out out (bad) call ffreep mov mov outsl and adc push outsl (bad) xor push pop rcrl aaa inc shrb rorl sub (bad) aas mov mov jo das aad clc cli jg ljmp out fadd xchg and daa cmc idivl (bad) imul test xor mov mov mov clc jns scas and stos pop jl gs push out dec cmp dec mov mov fidiv adc loopne xor pusha xor nop cwtl mov ffree push rcrl mov jno int3 jp fcomps adc aad (bad) sub (bad) cld pop cmp out push xchg cwtl sbbb add lret adc xor sub jecxz cmp lds xchg lret add bound lcall xor inc in outsb mov lock adc add push test outsl or cs enter sahf jle int popf xor add xorl or xor sbb pop add lock imul add inc xchg mov popa cli inc dec idivb (bad) or out hlt and ds cwtl inc adc pop push inc shr arpl out dec xor mov add (bad) lods sbb out dec leave hlt inc in pop les mov pop scas addr16 cmp cmpsl sub loopne cmpb fwait adc (bad) popf or push into hlt or sub popa jo xlat lock mov pop mov loopne jb and outsb sarb and insl sbb fdivrs movsb xor shll aaa mov sub ss xchg or test loop xor dec add pop push mov dec mov fmull adc inc (bad) mov pop mov test fcmovnb into mov xchg and int out push jno aam ja fsts into inc dec ret repnz xchg mov ret adc ret pop cmp icebp adc aas movsb or stos pop sbb xchg push mov inc fwait nop sub mov jmp cmpsl dec jp sub jbe pop dec repz lcall fisttpl mov inc pop ja in sbb sub clc add test dec sub aaa lods xor pop orl repz or adc repz sbb jge stos adc sbb les cmc js sbb pop push loope sahf inc aaa int adc xor add stc xor lds hlt out sbb pop add lock mov mul mov jecxz and jmp add add imul popa cli cmp ss sbb or out or mov xchg test adc inc out inc shr xlat testb or test ja inc and fimul int3 cmp fwait sbb bound sti pop lahf xorl mov push sub sub jnp inc jecxz cwtl fmull dec sub icebp add jp out cmp or inc dec jo pop cltd out popf out sbb dec stos push sbb in add add in (bad) pushf jg std jmp push mov mov test adc pop push jecxz orb aaa movb push rorl sub add sti mov rcrb dec xchg jg lcall cmp mov fadd xchg and pusha mov mov (bad) imul sub inc xchg fwait pop mov loope and mov (bad) cli addr16 or jns ja ds pop mov gs pop fadds dec cmp cmp inc jno fs or add add aam mov aaa iret fcomi mov inc and push (bad) jno lods scas shll xchg aad dec cs out jne (bad) pop cmp mov (bad) cltd add les hlt hlt dec andl je add out push mov and sarl loopne pop jae jl shlb mov stos adc sbb imul js mov ss pop push mov xor add xchg pop pop pop jmp xor popf orl sbb pop add lock dec pop out in pop loop and sbb push inc xchg push nop popa cli int3 ret xorl or out inc es gs test inc cmpsb inc shr xchg fdivs mov jns xchg bound fisttp int3 cmp sahf pop outsl int pop nop sub sti xchg stos mov lahf push sbb xor lcall sub jg xor add add inc jecxz xchg mov mov adc or mov repnz or inc dec test pop cltd push ss jmp lds popf jg or (bad) daa aas out jmp scas mov mov stc sbb cmpsb js adc push out and sbb aaa push shrb rorl sub (bad) aaa or mov sbb aad in mov cmp mov and insb or jb iret jl (bad) imul adc inc xchg and mov out add sbb mov mov addr16 clc jns dec fnstcw stos pop les gs dec sbb call xorl sbb jge cmc ds (bad) loopne jmp insb xchg enter mov inc adc sbb jno mov lahf sahf adc jo call das and jle inc icebp pop cmp popa mov cltd add inc xchg cmc dec and femms cmp sbb pushf stos dec sbb bound mov sub add cld rcrb or (bad) mov lock xchg adc and push jb outsb push lret cmp jecxz ret add inc jbe scas and in idivl add jae aam (bad) push mov push mov nop cmc mov xor pop loope sub jno out push pop pop xchg in loope fwait in pop subb mov jge shl pushf es (bad) push icebp pop lcall fldl or cmp sbb fisttp add add sub xchg sub pop nop adc sti pop lahf imul jno sub push cltd push sub mov xor inc jecxz cwtl fsubrl dec sub xchg jge icebp stc cmc sar inc dec loopne pop cltd in sub sbb cli lods push sbb mov pushf jbe sbb std mov jp mov pop push push pop loope push aaa or push ljmp in enter jg pop das aad add add fistpll dec decl out loop and and inc and imul fsubl inc xchg adc adcl out sar mov idiv addr16 (bad) je stos pop sbb gs aam inc dec cmp nop mov repz (bad) ja fs xchg loopne adc xchg lods mov mov mov xchg xchg xchg rcrl scas clc jno inc lcall sahf adc fdivr sub and cmc lods mov pop cmp out push lds fisttpl xchg xor sub xor lcall sbb bound xchg inc outsl sub dec lahf pop xlat or mov and and push jb or gs sub cmc xchg mov jbe std mov in push cmp (bad) inc lods mov test in pop nop cmc outsl mov test mov sbb push nop in loope pop lods ds xor cmp xor mov jp shrb insb fisttpll jmp mov sbb dec or pop dec push inc repnz sub mov push xchg sbb dec mov mov or adc lahf push mov xor pop (bad) cltd push sub jbe xor inc jecxz cwtl faddl jl or xor adc icebp cmp cmp inc dec sbb cltd out popf negl sbb xor xchg or (bad) ljmp add fistpll (bad) std mov jg frstor push push inc lds push aaa or fwait rorl sub add pushl aad pop subl mov xrelease and mov inc lret push xor (bad) imul pushf test inc xchg sbb (bad) pop loope mov mov repnz and clc jns jnp test js jmp mov cmp mov fisubr xlat daa loopne pop js xchg xchg cmp mov inc out loopne rcrl idiv jno pop add xor mov loopne sub pop xor jae cmp mov (bad) test add les mov xor and int3 inc cmp in fwait cwtl adc pop rol int sbb mov loopne mov js xor stos adc add push imul jl add int pop push mov xor pop xchg pop pop pop sti (bad) xor in add dec cmp push xchg out inc aas pop add lock mov cs in ss and data16 popa cli or inc pop (bad) or out in and sub inc push inc shr xchg flds or dec cmpsb ja jge dec pop xchg bound pop sbb xchg sub pop nop (bad) popa cmp (bad) fs mov push shrl push cmp shrl dec jle xor inc jecxz push sbb jge add add lds addr16 jl icebp xor mov pop cltd addr16 pop stos sbb push push sbb xchg nop or (bad) out sub xor fbstp std mov divps pop adc push ljmp push push aaa push lcall sub mov std ret mov mov sub add js xrelease pop mov jle test jecxz into mov stos clc ficom push cli leave mov call fsts into pop dec ret jg add xchg iret push xchg mov jne cmpsb rcrl aas movsb cld (bad) in lret sbb fstpt jp push and fcoml hlt insb shll jmp iret dec jp sub into pop dec jmp in lcall icebp add xchg or push sbb sub and pop lods mov mull aaa xchg aaa add and rcl lret mov and mov loopne popa das cmp movsb xor mov add push jne mov jl sbb test cmpsb scas sahf cs cld icebp cmp add pop hlt push pop xor mov xor sbb pop add lock rcl jecxz mov out and xchg cmp inc xchg xchg popa cli jae jns (bad) or out and mov (bad) or shr in es or nop movsl ja or cmpsb xchg bound mov dec (bad) cmp sub add adc dec bound sti add push cmp xor roll pop jbe push sub jnp inc jecxz pushf loope rorl xor or loopne test (bad) jg icebp mov test pop pop cltd lods mov mov mov xchg loope (bad) sub dec (bad) std mov cmp popf cmpsb js pop pop push out jo push pop pop sbb sbb rorl sub ds jg pop das aad fdivrl cmp add push or sub pushf and imul xor inc xchg in leave (bad) fwait loope cmp mov mov addr16 or jns jbe out stos pop in gs add dec cmp add mov jge inc movsb cltd stos loopne lret jnp xchg insb inc das popf mov inc push sbb cli jno jg pop pop sahf adc push loopne sub ds xor mov das mov xchg add add (bad) xor andl cwtl cwtl adc xchg leave sbb bound cmp xlat pushf dec dec and hlt out (bad) sub insb or push jb pop dec (bad) pop jle ss xor cld cwtl adc addb pushf cmpsl pop pop xor jne dec cmp ja stos sbb pop add lock inc sbb inc out and adc xchg cs popa cli xchg (bad) enter sbb inc cmp incb add add ds push and dec iret inc ljmp jecxz fnop je mov stos dec sbb fstpt mov inc fwait nop fcmovnu jae insb sarl add jl cmpsb outsl jb repnz dec ret daa in lcall flds pusha inc xchg test push mov lea pop xchg mov jae aaa mov sub rcl jecxz and mov pop mov adc ret push add mov adc add add sbb mov rolb inc shrb cld aad or xor and nop dec xor aad dec cmp xchg jp sbb pop add lock jecxz pusha lahf in es and xchg dec xchg popa cli xor test jle push sbb inc mov (bad) sbb mov arpl sbbl inc incb in mov jbe movsb ja lea fisttpl add jne xchg in add push pop push sahf pushf add add popl jae pop fwait adc xchg pop push icebp push xlat lcall or push xor lds xor in or cmp test ljmp test insl or (bad) sti insb (bad) sbb popf mov or lods push stos shlb ds cmpsb cmp or repnz mov (bad) mov aas insb ret or imulb out test add add (bad) aaa jbe lea mov (bad) shl jno sbb lret xchg loop pop inc mov lds je push lods pop (bad) xorl mov das mov pop int (bad) jp mov je push sti and andl jo arpl or aam xchg rclb ljmp lcall in xchg xchg in out jbe pop sbb jl sbb lcall andb into sbb jle jnp dec icebp (bad) ljmp pop xchg stos push ret xchg std int ljmp les mov fcmovbe sarl repnz imul sub (bad) out loopne stc fcompl sub inc sub add imul lods cmp pop in lahf mov mov push fcoml out repnz mov sar xchg shrl fucomip xchg ret dec imul mov jl or xlat repnz xchg pop rcrl add inc jp dec int dec xor jl leave mov adc (bad) fadds fwait nop mov fistl adc pushf (bad) push jno fildll add xchg lahf out mov or fwait and lods or push out add mov xchg mov pop or mov insl lahf xchg cmpsl dec cwtl pop adc cmp and xchg pushf jg fwait les sub jns loope int sub mov xchg dec insl sbb pop out loopne push pop add addl add sub jae pop xchg lahf stc divb adc (bad) cmp push pop ljmp mov cli popa sbb jmp pop ret fbstp out sbb adc dec xchg sbb pop mov push push and out dec rcrl (bad) jp dec lds dec xor fs mov adc (bad) addr16 push sub sub cwtl cwtl popf push les mov imul shlb adc fiadd out aam (bad) andb into inc int3 ja cld (bad) inc inc lock or mov mov dec and aam lods dec mov movsl mov fcmovu loop sti bound dec insb rcll cmpsl xor ret insl xchg popa lods sbb sarl (bad) fucom adc push mov mov add sbb test movsb jecxz (bad) in fldl ffree push icebp add popa push add add in outsl and (bad) idivb movsb fdivrl and cmp push pop loopne and dec push ficoml pop or mov adc hlt jl lds push mov fwait lcall or jb rol (bad) mov pop mov jl adc mov and inc xor pop (bad) xchg push sub imulb xor testl pop leave into xlat add dec daa sbb or (bad) jecxz inc sahf add add lret pusha lcall imul insb mov loope push and je insl xchg popa xchg push ljmp or aaa mov or cwtl dec mov mov mov js sub inc lods pop movsb in xlat cmp push jo push test cmp out mov add dec sub ret aad nop or in out inc lret dec inc pop mov out add inc call dec repz fdivp sub lock and (bad) les out int3 aaa lahf or test push lock popa push and cmpsb outsl (bad) sbb mov mov jg or adc in out push int3 sbb mov (bad) mov leave xchg dec cmpsb addr16 and pop xchg sti ror cmp pushf cltd rcll daa test mov (bad) ret lcall dec inc pop and add aaa (bad) or lret int add in mov jae lahf xor (bad) (bad) push xor lds jecxz mov (bad) ror into mov arpl bound sub cmp xchg xchg fistpll out fchs inc mov hlt xor repnz outsb or and mov sbb rcrb dec sub pop jns sbb in mov and addr16 cmp lcall popf add jne push push pop cmp pusha inc popf xchg xor aaa add sbb test mov inc push cltd cwtl mov and bound jne jg pop into and xchg mov mov xchg pop push neg pop std scas jge mov xchg in push dec cld sub cmpsb lods test fcmovnu cmpsl and ljmp mov push dec mov mov stc fs in scas addb sti insb sahf arpl adc add xchg mov mov mov clc data16 lea rol xchg dec dec in pop xor ja not subb enter sbb sbb fwait pop adc mov insl sbb pushf dec or jmp out ret (bad) cmp and xor call or inc dec cmp imul and adc jo je or (bad) cmc fidivl jl mov sub add jmp es sahf cld sbb les ret pop scas pop stos xchg cli les scas test add out and shrl mov mov dec cmp fnstcw jp inc xorl adc lret lds push (bad) mov stos mov es jnp es mov cmp lods mov cld je orb xor in xchg inc (bad) xor add add dec mov add and insb pop or in cmp cmp sbb push pushf (bad) insb (bad) test jmp xor adcl jnp inc xchg mov cmc adc cmc or mov out jno push rcrl stos stos dec and popf xchg je les loopne adc mov popa lock jmp out xchg add addb sub add out jno cld sub (bad) sahf xchg pop mov outsb je fucompp test pop sahf fmulp and ficompl push insb or adc mov dec xor push cld ja sub imul push xor push cmp pop aad rclb popl ds imul ljmp dec mov push cli repnz lcall sbb imul fwait rclb and shlb jle or xchg (bad) (bad) xor add add and scas iret test clc adc jno mov add sbb push enter mov bound and in movsb pop xchg xchg mov push fsubrp add mov push and call enter jecxz and or pop out rorl aas mov xor frstor pop or mov add xchg lcallw adc sub lock pop std add mulb pop imul ret push aas push and cmpsl enter es fs or ret jae jmp push fsubs lock pop adc jge pop pushf out wrmsr or mov (bad) hlt ljmp imul xchg dec sub adc push mov sbbl ret into push sub cmc lock pop mov push loop cmp loop call add add add push or (bad) jbe (bad) push fs movsl xor loopne xor stos and cld mov and cmpsb xor cld sub sub jg or in pop push and stc js lret xchg into mov pop std (bad) mov jnp and dec loope out stos sub sub mov out test mov adc mov out lds push mov cwtl sbb add add les shrl (bad) loope arpl fwait sbb mov das push test lods inc mov cld not (bad) cmp adc sbb push sub std mov pop pop jnp ret jo leave mov inc pop jns and stc mov dec sub mov sahf lods dec sub cwtl adc mov in fdivrl lret divl dec cmp xor aaa hlt std cmp test sub push mov mov outsb test aad add or dec jmp jmp fsubl (bad) (bad) mov inc outsb mov mov cs dec mov iret (bad) push fnstsw (bad) cld xchg fistpll out fnstenv sbb dec mov dec mov cltd inc xchg jae test add sbb jb mov cmp fwait xchg sbb lea add cmpsb sahf mov pop aad add push out mov jno jns sahf pop adc xchg mov add movsb sbbl clc push mov jne scas cmp rol sbbl inc sarl rcrl cmp sti fcoml cld jg,pt cmpl dec cmp arpl mov jno push lock in std sbb loopne out pop xchg inc jge mov mov sub int sub dec sub aad aad and aam repz div and inc sti cmp sbbb pop xorl rcrl fcmovb push push out decl add jne imul mov scas dec jmp push jb divl sbb (bad) fnop sub lods sbb movsb add ret pop arpl and nop fsubl ucomiss mov cmp cmp add aam rcrb out push gs fwait or mov xchg iret mov pop ud2 xchg mov cltd xchg dec inc stc and xchg cltd adc pop cltd cwtl adc push add push bound addb add jle sbb fcmovbe fldcw fs ss sbb dec (bad) or fisubrl into add popf fimull scas xor andl sbb (bad) xor xor fistp or into into jg daa dec xchg ds scas lret mov xchg data16 and scas arpl inc cmp mov dec sub dec push mov inc dec sub dec xor dec push jo inc out or lahf js mov les mov std stos add mov mov jp fcomp mov xchg dec lcall xchg pusha out ja in into adc popf aad sbb cltd fdivr mov cwtl int3 jle lock mov loop ds es adc sbb xlat mov push dec ljmp clc inc mov call xchg leave add mov in cmpsb or addl gs pop mov mov and add add jmp dec xchg roll add dec sub push dec sub cmp mov jns push mov mov repnz decl scas je,pn sub pop mov lods outsb mov xchg xor cmpsw adc xor in xor cld (bad) sub mov jge pop imul jecxz daa add lock pop sub in or jg cli dec inc ss lcall (bad) mov adcl sub pop es lcall ficompl out repz pusha push ljmp lret or in push lods aam mov dec pop add mov insl xlat sbb xchg mul dec (bad) mov fs lods ret or xor add popf xchg call lahf mov ja inc ja lea push test pop outsb jp xor sbb sti xor add xor aam ret mov cmp xchg clc sahf mov out lods fwait (bad) pop add ret pop (bad) mov jecxz sbb or ja leave xorb and mov data16 shll (bad) mov push jge xchg or lds cmp (bad) stos cmp jg hlt fwait lret loope xor pop (bad) lcall rclb daa cmp add call push (bad) cmc popf aad sbb jne xchg pop add imul jbe xchg aas icebp repnz adcl cmp in jno es jo and rcrl cltd cltd aad (bad) xor mov stc clc in inc mov inc test adcb enter and cltd cli das aad ficompl lcall adc fsubrl mov push ss dec sbb or bound pop stc sahf mov out fld1 pop sbb jmp or jge xchg test push (bad) inc (bad) sub push gs repnz and xchg cltd mov add cmp addr16 outsb bound add insb jne in add cmp jae flds pop in rclb mov adc xadd xchg movsb cmc fstpt push fs std icebp xor lds mov jnp rclb xchg rcll int add test or in add idivl mov push dec add xor pop mov push imul xchg xchg jns and adc mov lretw pop sbb es cmpsl mov ljmp add push sbb mov adc fidivr movsb (bad) sbb aaa incl sub fwait idiv mov nop shll loop lcall arpl dec cmp cld or xchg mov sub and inc xchg lahf mov data16 jnp int3 inc dec mov sbb ja call mov (bad) mov and mov daa les mov jg xchg stos dec test lea adc icebp int3 jmp xchg call xchg sbb adc lods jbe pop push cmp lock iret addr16 cmp or (bad) lret hlt lods ret inc push push inc and mov push jns call les mov cmp jae sub and lock xchg into jo pop mov inc add inc sub or push mov loope,pt lahf mov sub fist dec mov pop fs pop addr16 iret pop push pop sub sub mov repnz add cmp push cmp test xchg and (bad) bound imul shlb sub fsubs and and cltd daa aam cmp adc cmc adc pushf fcmovnbe aad dec add cltd mov scas fistpl jle cmc int call mov push xchg clc mov idiv jl stos add add adc jne test clc es sbb dec repnz dec mov and adc sbb aam out pop mov xor in and ss add push je add sbb cwtl jb cmpb jbe push cmp inc xchg pop repz (bad) (bad) mov imul xchg pop push imul lock pop dec or sarl test sbb sub das cmpsb int in testl mov (bad) jge repnz mov jp pop or sbb fwait nop add add adc push mov jmp jbe cmpsl mov xchg and fwait cmp stos adc lahf test inc iret in add lock adc clc hlt adc lock fistpll mov loop ds mov cmp (bad) and lea jns cmp in inc movsl pop cmp push insl push cmp mul in and inc test cmpsl mov dec cli stos mov xchg scas fstl pushf loope dec jb clc xchg stc clc pushf rorb add add sbb test push aaa out push pop pop push jb mov dec mov sbb and js pop fdivl hlt jg addl fisubr je or cld push pushf mov dec negl lcall cmpsb sar and adc xor bound pop push xlat or out sarl lods inc roll cltd iret sbb mov jl daa xchg outsl mull aas cwtl push ret ficompl jnp int mov lods add add add out dec imul mov mov and lcall jecxz inc movsl das ja mov dec imul xchg sub inc testl mov outsb shrb les xchg pop pop rolb or div push pop es gs cmp out cltd jle push xor add and jmp and xlat push aam iret cmp cli push push (bad) mov repz roll add mov ret sub fistpll jne jge in lods pop xor cld inc mov pop js mov dec sbb sbb and out mov adc les add mov repz les jl push out sub in cmp out and lods hlt sub sub jb (bad) cmc movsb push sub mov es sbb daa mov pop arpl jno aad lods imul add mov mov add mov call mov setb add mov jnp jae push xchg stc lock rorb xchg sbb mov xor sub loop mov mov mov outsl into and shll shrb push add xchg dec lds push dec dec sbb or adc xchg xchg dec sub rcll fiaddl adc dec xor add mov je add es jg mov and cmp stos std clc ljmp frstor push adc int3 jns iret es push in lcall push (bad) lahf mov aam jo mov aad xchg or lret xchg dec jnp inc leave in cwtl ficomp es sbb pop addr16 pop outsl loopne jl pop jne shll xchg dec xor pushl and sub ds popf lret dec aad mov jno pop mov and sub hlt (bad) push mov add mov pop pop into jae mov push pop (bad) fild leave and test jl jno divb cmp inc pop pop xchg (bad) or ja cmp dec sbb (bad) icebp mov or addr16 xor bound insb jne in and cmp jae flds in rclb adc cmp shll mov adc xchg ja je int jl repnz xlat frstor adc mov test and jmp clc mov push cmp jle mulb mov pop cmp xor pop lcall addl iret cmp sub pop cmpsl inc gs pop mov pushf loope push dec xchg shrl push add push movsl test lahf int xchg mov je pop (bad) out (bad) pop mov fldt mov dec mov nop and roll loop sti lret sbb ja cmp mov jp mov add add pop pop (bad) bound in pop (bad) dec push lret fldt out rorb fs sti push xchg jno push mov mov fs in inc lcall sbb lods in lcall cltd pop (bad) mov xchg sbb mov jne in mov cmp jno inc adc dec ss pop push push sbb jmp sub xchg sahf loopne sbb sbb sub mov add add add sub movsl jnp jecxz fld sub mov pop dec imul push aad aad jl dec (bad) adc adc jo push lahf mov imul (bad) fsub push push mov jbe pop pop mov hlt ds inc cwtl mov cmpl ds inc xchg inc shr sbb gs xor movsb cwtl dec cltd je les push push scas pop fdivrl inc push test cmpsb clc add aaa xchg aaa xchg pop cmp cmpsb jl xor adc push cmpsl cmc mov loope sub fs sarl dec pop xor fidivrl inc mulps sahf inc jno add sti aam ja push loopne fcmovb fdivrl mov sbb sbb or jp into in push ss lret iret cld sub mov xchg sub sub xchg xchg xchg mov or sub (bad) imul js pop cmpl outsb outsb js xorb dec jle js push ljmp inc shr sub or outsl clc lret test out imul mov fistpl movsb xor lret add cwtl stos add sti jno sub in movsb outsl lea lcall add jmp jecxz mov sbb imul cs xchg mov insl (bad) (bad) addr16 popf ret lar outsb mov push and mov sahf arpl ss pushf mov cmp adc out cli push xchg push aaa sub loop insb int3 fs loopne mov negb test loope (bad) push mov (bad) out mov lret aam ror inc jnp (bad) jge repnz sbb mov xchg xchg inc inc test loope xchg xchg insl scas mov lret js add movsb mov push int (bad) dec (bad) (bad) popa icebp or das stos cltd dec jnp xchg pop xor fs push xchg (bad) aaa arpl jae adc jbe in cmpsl outsl lea mov xor xor aam lods cmc lods xchg pop push sub out push sbb sub mov insl push aaa add std adc jne pop cwtl cwtl adc scas and arpl pop cmp (bad) cmp inc add jge mov dec imul dec (bad) loopne inc pop aas sbb lahf in xor pop dec pop add cmpsl cmpsb sahf or dec jbe repnz clc (bad) push push jle rclb enter movsl push mov mov xor lea mov dec cmp lods clc jns sbb cwtl lock hlt dec xor mov outsb jle fbstp xchg lock (bad) (bad) clc sbb jp fisub mov mov xlat ja cmpsl pop sbb incl mov es repz pop test pusha xor adc mov mov lret (bad) push (bad) leave subl cmp fadds and cmpl lret sub ret aam pop dec inc jl fbstp add insl aad stos sbb mov out pop jb jge mov adc sub popa jmp jno pop jge mov scas push ljmp mov dec mov movsb pop mov pop add pop (bad) add xor aam pop loopne leave cld leave sbb out popf outsl and leave outsl bound cmp fldenv push fcompl js dec push xor adc in xor ret imul dec xor (bad) (bad) sub lock jne in add (bad) decl test pop stos cmpsl xor and loopne les lods cwtl push sti out sar (bad) in mov adc jb jnp int3 push or add add xchg push and mov mov lahf pop lds pop dec mov adc ds or inc mov hlt mov sub pop cmpsl outsb pop mov jns nop pop stc mov push add data16 popw and mov cmp fwait jmp inc pop mov clc mov outsl call jecxz addr16 push lret jbe addl fisubr push stos or test xor add sub aas xchg or add dec imul pop cmc jecxz out insl xor mov (bad) pushl mov call pop adc adc and jno scas fcoms xor xchg pop arpl inc fstpt cmpsb pop iret testl mov sbb add push mov mov out lcall xlat or in repnz mov push jle aas (bad) jecxz xor push pop movl xchg ljmp mov add sbb mov pop mov popa sub add mov test adc repz xor enter jg adc addr16 xchg xor xor lcall dec add mov loop and aad scas call dec adc push or jb (bad) jp dec lcall dec push jl inc std test subl call cltd (bad) clc xor push loopne lods dec call sub arpl add adc cmpb pusha out adc adc jno mov cld inc sbb or cmc cmp add iret cmp fs fldenv mov int3 adc dec xor adc aas es shlb xchg xchg add dec xor mov js fldcw in cmpsl push gs scas roll or nop sbb pop xchg mov (bad) rclb (bad) movsl test fist cmp aaa pop (bad) lds imul add add lret sbb mov jl js cli arpl lea inc dec pop imul test fisubl mov ret xchg out jne inc jbe lret (bad) xor or pop push repz sbb xchg sbb insl xor iret sub cmp jmp inc ja cmpsl mov sbb incl push lcall or stc aaa xchg cld out push push push cmp push cld jns pop mov (bad) push dec loop inc arpl cwtl mov add sbb aaa push andl lock pushf dec rorl or sbb lcall push pop lahf cmp mov mov int sub mov pop das dec xchg or (bad) jb rorb inc (bad) push and xchg (bad) je mov cmc outsb push pop sub pop cmp mov inc xor push or scas and cmp pusha cwtl push and mov repnz dec iret push jne aam (bad) cld addr16 add add enter push inc daa subl fucomi ljmp sbb pop in out jbe xchg cwtl incl sub push mov add fsubrl js sbb ret push mov and insl pop adc cmp dec addl pop add push cmp sbb push bound loopne (bad) add movsl xor mov pop imul mov lahf es inc pop xchg sbb aaa and xor add gs cmpsl add or jae hlt das aad ljmp push clc mull cmp out pop insb mov mov pop xchg dec inc mov xor mov icebp dec inc loop movsl je mov and add or ss mov dec imul lcall aas clc sbb lret fwait push stos xchg call xchg aad xor cmp mov push adc jnp adc pushf fcmovnbe aad dec mov fcoms xor add xchg ja cmp leave push insb lds ret sub mov sub sti out add push fild add push xchg in mov (bad) push and sub aas cltd xchg (bad) pop xchg or mov aad push les sbb enter outsb cli xor xchg sub dec adc bound jb and inc jbe ljmp mov ret js call or daa out mov add jbe jl into mov mov push jb sbb mov and mov lcall loopne dec lcall stos das shl repnz xor mov or mov inc fwait nop mov add and (bad) jmp arpl add inc cld loopne xor fwait loopne sub dec movsb xchg ja mov sbb adcl adc mov xchg jo dec jnp xchg lret push mov scas iret insl pop mov imul (bad) inc fcmovbe cmp hlt push sbb in sbb pop mov mov aaa mov stos mov pop scas sar jg pop das aad dec popf sbb xrelease sub inc pop nop insb mov and mov cmpsl ljmp sahf loopne out (bad) cmp or cmp popf ds mov pop push sub jle aas movsb ja or imul sbb out in insb xchg sbb sub nop sub addr16 jbe ds int3 call adc es lcall or out push repz jo jg xchg icebp loopne insb pop mov push aam dec push pop pop cltd or sbb jne es mov roll movsl sbb (bad) jne xchg push into es jae mov js aas sub ja mov clc sbb add or pushf loope cmp in test lods push cmp mov push aaa out pusha inc bound inc dec xor pop addr16 insb and inc dec push push out pop nop mov aad outsl rorb jns mov xchg xchg and jmp cmp xor ret xor add adc pop imul adc (bad) iret hlt adc out stos sbb add out fidiv mov outsl lea cmp cwtl into jmp inc call incb add or adc xchg rol push fdivr rol arpl cld or fiaddl jmp sub and test and (bad) adc dec sub into es jp mulb pop xchg scas out mov xor rolb adcb daa clc pushf mov add sbb jb loop cmp test fsubrl roll lahf jmp lds hlt mov (bad) scas jnp and sbb popf inc xor add lea aas popf fnstcw sbb or adc xchg and ror inc xchg mov mul lods push pop xchg fwait aas movsb or icebp or mov int3 xchg (bad) mov pop inc cwtl ds jmp dec mov das cvttps2pi dec pop enter mov push (bad) aam and in stos fadd jge subl loopne (bad) and cmp xor sub push adc ja cli roll hlt js (bad) call lods mov ja push jle ljmp lahf jge ja addl mov lds xchg dec mov nop imul std mov fsubrs sub push addr16 xchg popa jp xor lcall dec xor jl addl fisub jnp add push test add pop sbb (bad) cld or add push push inc aaa subl add add cmpsl (bad) add mov cltd mov sarl dec push dec mov stos xchg mov lds inc sahf bound mov jl cmp lock enter add jge xchg lahf clc rclb jnp into push out out loopne,pn aas xchg add outsb sti mulb dec ljmp pop mov sbb cli pop je sbb add fidivl adc dec pusha inc ja pop pop std test cmp push das lods sarb mov ret or mov sub cmp mov cltd dec add push rolb repnz jmp dec je dec dec adc mov (bad) popf and aad cmpsl mov insl out mov jmp mov cmpsl adc push dec aaa stos in xor cld (bad) jl mov sbb xor push sub fdivl popl insl xor icebp mov pop out cs jg ret lods push add rcr pop test popf mov cmpb lods xchg ret fcoms add add hlt jmp jmp sahf xor das cwtl loopne xchg pushf mov loop ds movsb (bad) and push pop arpl dec ljmp pop mov pop imul mov ficoml scas or loopne ljmp push scas fstpl pushf loope and fucomi jle jno cmp mov out nop cmc outsl push insl sub pop pop imul jg pop out in loope jp or add mov fstps ja jns sarb mov ds lods (bad) fisub xchg cltd cmpl inc inc cli add xchg sbb push xlat or pop in inc push test cmp jno jecxz ds fsub lea xchg pop lahf enter sbbl push jo xor lds sbb cwtl in jle rorb pop pop push cmpsl mov scas (bad) mov arpl add add fisttpll inc pop std mov imul push xchg icebp dec mov jno lret jge mov xchg stos out push xorl popf dec xchg leave inc sub sbb dec dec into and cld fwait jmp pop pop mov rcll mov and rcll fsub push shl cltd arpl mov pop jnp cmp push mov mov test movsl ret jae jp lahf out add push imul test add xor cmp dec mov dec arpl sti fdivrs pop cli jno xor iret lahf add sub push pop cmp mov shl mov in ss (bad) mov popf lret ja xorl test cld sahf movsl push sub sbb test lods mov add add arpl (bad) mov dec lcall add shrl mov mov pop push and jle jne js stos lock mov je cld mov daa loope mov insl pop dec push mov mov cs (bad) insl adc add pop fild mov or sbb xchg jb xchg jmp sahf vmread repnz inc mov repz or bnd daa js sub data16 outsl aam sbb push test xor test cwtl and add gs cmp pop jle mov mov shrb or dec ja and jmp mov mov rol movsl or mov insl stos add fst dec pop cmp pushf pop dec mov in dec test mov cmpsl pushf outsb xchg push and je xor leave (bad) (bad) mov (bad) out mov (bad) jmp jnp pop mov or and aad repz out and or lods lret jecxz pop (bad) push mov pop lds mov jae loope dec mov and dec mov (bad) or stos mov mov jle lods mov out repnz or xor stos pop loop ror in cmp fcomp push jge (bad) ficompl inc push outsl mov push cwtl adc scas in cmpsl mov js nop xchg stos cmp mov int3 cmp add adc and aam mov cltd inc jle and fcoml pop fstpl dec lds cwtl adc cmpsb pusha sbb push jge pushf test dec movsl xor repnz add push push aad leave or add jo xor out iret cltd or je,pt xchg ficomp xchg cld mov mov sbb sbb cmp add lret add ss inc dec imul xchg pop push imul popa push int3 push cmp mov or loopne dec test repnz icebp sub dec dec aaa cld mov add addr16 (bad) mov insl ja sbb pop push mov add add dec jmp mov aas push xchg add xchg xchg mov xor xor mov sbb cs cmc sub cmpsl push xor out add push jmp data16 loope or pop push push mov xor sbb jle lret cmp lahf mov (bad) loopne int cmp mov lcall jmp mov cld xchg stos icebp and or xor push sub cmp pushf je jne cmp add pop stos mov ljmp inc test and jno test push fsts adc ss in mov push dec sub in ds ret scas dec jle movsb es and pop mov add dec das add in push mov xor jg or mov popf adc jmp out fbstp sub imul pop push sbb xor repnz pop push push pop lods and (bad) clc mov out pop push dec out leave xchg cmpsl repz ret push jo adc lcall mov pop pop lahf cltd or std xchg scas cmpsl jmp idivl test mov in ja xor cld mov dec mov repz mov or (bad) sub (bad) or adc push imul rolb cmpsl add aas inc jbe addr16 stc mov aad or pop rcrl dec mov pushf dec stos fwait shrl xchg outsb (bad) mov jmp out xchg test xor inc mov test bound pop aam inc jl xchg adcb nop push out mov pop aas and lea (bad) jl mov jnp lahf out mov movsl fcmovb mov mov (bad) lock fistp orb jne (bad) cmc xlat dec data16 mov cmpsl movsl xor and test mov fbld (bad) pusha arpl dec shll scas dec ss add or in stc out enter adc loopne mulb into cmp xor in data16 mov inc int3 mov add add aam dec int mov lret out push inc xor mov (bad) (bad) adc into shl mov jbe popa mov ds add pusha dec nop loop pop push movsb sahf mov movsb rcl or icebp js notl jae inc sbb iret push in scas fnsetpm(287 addr16 add pop xchg inc pop (bad) out mov fwait lds cltd dec xchg and adc xor sbb fadd push mul hlt dec subl mov test cmpsl dec leave loop bound mov dec decb repz mov or cmp xor mov scas (bad) insl ljmp mov lcall jae add test divl mov cmp mov add add add add pop es lahf pop mov mov sub sbb or jl rcll push xchg popa xor mov xor sbb (bad) or andl xchg push test pop push pop dec mov je fs jae fcmovne out insb xchg sbb pushf adc push aad sbb mov pop js mov outsb sbb call out inc mov mov push (bad) (bad) mov mov addl inc mov fs jp add lcall out push sbb push cmp dec sti sahf sbb mov fist push push movsb sbb mov jp push adc ljmp jne dec and jae (bad) xor sub fs in lods jmp aaa cmp sbb mov xchg jecxz mov clc xor popa cli das pushf mov mov push out adcl xchg mov add add add idivl xchg cltd rorl js es lods and pushf or adc (bad) jae inc lods sbb sbb cmc sahf es das aam test xchg sti mov aas adc lea cli cs lcall or out push loopne addr16 jg ja gs mov xchg jmp mov scas icebp adc inc mov stos and fadds divl adc dec stos jbe cmpsl gs (bad) mov fcoml pop jae jmp mov out mov inc aas mov jne nop dec enter dec insb xchg cmpb xorb sub mov fwait sbbb push in ret shlb xor out icebp and pop in adc pop jno pop xchg and jb push out and mov mov xchg movb jne sub repnz lahf (bad) je icebp or insb mov xchg (bad) and pop pushf fwait ds jmp mov add jecxz xor xor in (bad) jmp and mov aam sub aam cwtl addr16 outsb andb fdivs repnz shll (bad) scas daa push fildll fildl rcll ljmp gs pushf daa push daa lock mov stos test outsl dec mov push fwait pop add xor notb add cmpsb add mov inc orl stos mov add fldt or add add in fs imul push adc jne pop sub inc (bad) icebp and imul jnp fcompl sub test jne dec jmp xor movsb mov (bad) leave sbb lock mov jecxz lods sub lods jno aad in jecxz jbe xor xor lods stos adc and std mov xchg test lods push jmp pop orb mov clc mov push dec dec test add add leave adc rcrb orl sub xchg xor inc push (bad) fist push xor xchg repnz stc scas fcmovu dec mov rcrl and mov inc aad jle push pop sub jecxz jle jno icebp cmp rcrl (bad) out nop mov es loop test pop sub imul lret jne lahf push mov mov inc pop or ja pop mov mov cmp fnstenv jo into lods sbb adc shrb jno pop (bad) lret mov sahf mov outsl push push popf sarl data16 add xor daa in lcall or scas inc ja repnz add add jg imulb fdivp and xchg sahf sarl xchg mov fdivrs xchg push push jl and test jl cmp cmp xchg dec pushl lock pop cmp push mov (bad) mov add xor stc cmpsl xor in nop or je sub shrb in lahf mov jp ret outsl mov pusha mov push hlt push xor add ror fldcw xchg pop jle (bad) je jp add push or popa cld inc in or adc (bad) jb in adc lods mov sub mov dec in pop mov adc lret or inc aam sbb shrl in push ret imul push add mov mov sbb aam mov cmc int cmp lcall fbstp mov lret and test es decl inc fisubl outsb xchg aas sbb pop pop idivl jno (bad) jae popa aad xchg out loope pop icebp icebp inc and adcl inc push pop add divb mov sub dec je cmpl js cld mov xchg mov cmc inc inc sbb add imul dec sbb (bad) push sbbl cmp mov fwait inc xchg mov (bad) xchg ror push lcall out in shll sbbl movsb mov negb jns xor aaa xchg sub rcrb xor lea (bad) test daa cltd mov movsl adc xchg lahf aam pop stc xchg rcrb xchg or mov add pop pop in add add fwait scas inc ret in pushf sub fdivrs pop outsl sarl fisubrl mov add loopne add mov lret out sbb ljmp xchg in xchg icebp push pop (bad) into adc loope xchg andb (bad) jb mov ljmp xor scas stc xchg push xor add add pop xchg loop mov aam ljmp xchg hlt add mov je shl inc xchg rclb xchg dec sub ds add repz add lds xchg shlb int movsb das out dec inc or fadds jmp nop pop xchg cs mov movb cmpsb cmpsl lcall cmpsb push gs jecxz rcll (bad) cmp push push in mov mov mov aad sub pop cld jecxz cltd pop aas fildll fildl push shll or dec shll aaa inc or jge lahf sbb mov lds stos icebp and xchg in int add outsl mov ret mov cs in je int mov jno (bad) fisub lret lock enter mov movsb fs aaa and fcoml loopne pop test and out insl and and pop mov fiaddl stos xchg fnop shrl lods cmpsb fs (bad) xor outsb push mov jecxz test jmp sar popa ja outsl jb aad ret mov cmp xor adc icebp movb pushf cltd adc dec movsb jbe xchg fildll adc nop lock xlat pop orb jne clc mov jno jl leave scas leave cld xchg gs cmc push xchg mov mov rol fdivrl lods adc pop psubsw jb gs xor sbb daa cwtl (bad) sub mov push je mov jecxz int sbb pop push and daa clc pushf mov loop out ret divl mov mov dec jno mov push (bad) fsubrp mov push inc sub sub outsl imul sti cmp mov jnp inc cmp lahf jnp pushf dec dec daa repz xor jmp adc sbbb (bad) jae jnp sbb add xchg sbb pop in mov in fistpl push fnstcw cmpsb ret and cmp into sahf add lcall lahf (bad) pusha mov pop lods jge int pop jg cwtl cmpl and lret and ficoml xor (bad) xor add add jmp mov adc dec inc scas faddl xchg hlt hlt inc je insb xchg popa stos push test push aam mov lock jmp mov cld loop fildll push out aad add out repz adc xchg je inc dec sbb lds sbbl imul int3 xchg pop sub loop icebp scas sbb push mov iret movsb test rcrl sub jecxz jmp inc jb pop or jbe xor add add arpl push rorb fbld jl sbb xor push outsb (bad) sahf inc rclb cwtl std mov cmp in jecxz cmpsl mov (bad) mov in lcall rclb repz in xor pop orl dec andl mov push or pop push aaa and scas push addr16 popa jg pop sbbb jp cmp fcmovbe movsl mov pop xchg mov or icebp jb into mov daa rorl cmpsb outsb dec out (bad) je add sub lea pop mov xchg pop xchg movsl rorl jb inc sub sub in add popa rclb movsl push mov leave cld leave sbb out dec rolb mov insl out mov cmp fist xlat movlps ds fadds call inc and lret (bad) hlt aaa rolb add jl dec sarl out int3 adc pusha xchg cwtl aas (bad) mov roll je bound or sub push js cmpsl xchg adc std outsl add add aas fs imul lcall jnp ret mov lret xlat (bad) xor cmc (bad) jb loop push test jg xchg cmp add addl jbe bound pop addr16 js cmpsl mov popf outsb dec lock fucom mov inc dec aam fisttpl andl jno mov mov and in (bad) cmp jae mov ret cmp push pop nop cmc jg mov (bad) pop mov sub xor sbb add in loope cltd bound cmp cmp ja jnp rolb pop jp jmp popl cld ljmp xchg mov dec push dec data16 ret ja mov inc xchg sbb cmp daa adc mov push xor add adc mov movsl pop xor push cmp sbbl push push sub adc mov insl mov mov push dec jne xchg adc stos xchg ret sbb popa pop pusha add jg lods fwait dec inc fisubl push (bad) repnz push std out daa jl jae mov ss inc sub in add inc push or xchg and pop scas pop jb (bad) ret lret rep push and jns jnp enter push xchg (bad) adc sub xchg fistpll pavgb and addl repnz rcr insb xchg ret lea jmp call bound or das ja inc push cmp add lods sbb inc cmp push out ror hlt inc call cmp pushf mov cmpsl sub outsl fnstenv adc in xor lcall (bad) sub data16 sahf andb pop mov stc mov jnp lods out mov stos and insl sbb daa xor mov iret jno pop aaa mov movsl les ss pusha xor xor push icebp jp jge dec add add push fmull xchg or mov pop mov outsl ljmp mov inc adc lret mov repnz fwait add fsts into cmp repnz or xchg and sarl jne sub movsl lods mov or or lret sbb fistl xchg push mov inc fwait nop aam cld lock roll jmp outsb dec jp sub ljmp scas sub pusha inc jl lcall jg pop js add adc lods es xor add in scas adc shlb and aad pop jbe adc ss in movsb xor stos adc inc mov cs dec (bad) sub in dec adc adc je scas loop scas iret jb (bad) and and jns mov enter push xchg (bad) adc sub nop fild sbb push hlt fcoms add jne jl pushl js rolb jbe ds jecxz lock mov jbe repnz outsb imul add sbb dec jp dec adc mov test add pop adc adc adc push (bad) testb fcmovnb sbb test andb cmp mov movsl fisttp movsb leave cld cmpsl (bad) stos fild mov andb or push sti lods inc dec inc fisubl lret xchg push insb imul daa jl jb mov ss outsl sub cmpsb daa adc hlt cli push jae pop stc enter inc push and jns push cmc enter add (bad) adc sbb jl es lds dec cmp add test inc ja add mov sbb or das xchg xor push shrb test push out mov add popa mov lret test mov dec push add enter xor adc push in mov fwait or nop cmp jo pop sub mov mov stc cltd dec jnp stc mov imul mov cli cmp fdivrs arpl inc push sub lock std and nop inc leave inc xchg ja enter pop sahf add xor mov cli scas jecxz ljmp add push pop aas mov fimul sub mov mov out adc cmpxchg cmpb loopne jge stos push inc push add dec jle std loop jg inc dec sti add test test or es sbb (bad) dec xchg lahf loopne stos jp dec pop (bad) dec popa outsl aam mov dec fst xor and jnp aas lahf xchg mov jb shrl imul push vpcmpeqb push fnsave pop andb cmp scas stos fcomps mov leave jg pop ljmpw inc mov aas es and shll jg insl xchg ljmp jb js movsl shl decb shrb add add dec sbb add in jae (bad) jp dec mov adcb movsb std pusha out enter sub mov push xchg adc dec jl xchg nop ficoml insl and outsb mov jmp or and jecxz dec rcrl (bad) inc mov and (bad) sbb push ret add in xor mov fcoml mov scas shl scas mov mov mov mov lahf (bad) cmp cmp lcall sahf je cwtl (bad) stc mov and or lock test mov in pop push mov cli cmc int3 mov sarl shrl add add iret cld lea (bad) les stc scas push std mov push aaa shrb gs pop inc jno dec lahf clc jecxz cmpl jp sub pop (bad) push push xchg add xor xchg add push mov xor jl add xchg or imul xor xchg jb xchg mov cmp lret fwait adc leave mov jae inc lods sbb sbb xchg add pop dec mov xor xchg imul jg arpl xchg data16 rorl js testb (bad) or dec fwait or inc cld std and sbb mov cli rcrb mov dec icebp gs data16 mov loop,pn out mov and scas mov xchg (bad) out pop inc or movsl cmpsl icebp imul pop xchg inc clc je pusha mov and mov mov xchg sahf (bad) mov adc jg pop das aad pop jb jo add add mov stos mov mov cmp das dec shll cli pusha xchg sahf mov xchg xchg inc dec mov test or cmpsb pop insb (bad) add mov adc test stos pop (bad) lods or ja dec test xchg dec nop sub ret test nop in pushf (bad) jbe add mov xchg pusha cmp aaa mov in dec adc and mov add add ret and xor xor cld cmpsl movsl out and mov (bad) sbb cmp pop mov xchg out (bad) or mov sub jae call ds (bad) (bad) mov pop adc sti ja xchg or lds ja pop pop push adc mov jecxz and cld and std pusha xor push aaa cmp rcll push adc enter into push jno push add out in loop repnz add or lea xchg mov sahf loope push dec mov fnstsw stc jns mov pop mov js (bad) lock jecxz in cmp mov inc pop sub test pop inc int3 jns pop ret inc or push xorb (bad) loopne push lods jge enter pop ja jns insl aam movsb (bad) jo ss add xchg ds mov cmc mov or dec aam pop dec inc jl lcall add and push icebp inc lahf push fimull aaa rclb sahf (bad) mov push or and roll shrb inc mov enter mov into lea pop xchg xchg rcll ret cld cmpsl cmp mov test add repnz (bad) (bad) or inc lods xchg jmp addr16 sub dec dec aaa call pop pop movsb mov loopne push lock std xor xchg mov inc add pop jo sub (bad) push insb dec repz adc int ljmp inc push test sub cltd test sub cltd (bad) or lret mov dec fild jmp loop inc sbb inc mov and push dec sbb push pushf clc cmp repz mov add mov imul ficoml cs dec sbb out push int push mov pop test xchg leave or in aaa (bad) or xchg repnz add cmp lret dec ret rorl iret shrb lret mov sbb jmp push sub mov ljmp pop push dec clc sub js dec add movl mov jo ficomp dec das cmp iret mov outsb rolb cmpl pop sbb (bad) lret adc sub fsubrl lods add jmp cltd xchg notl jge push cmc xchg lahf inc imul icebp or add cmc cld jl jnp ss movsl or adc and stos loopne inc sub jne (bad) push inc inc adc mov mov push jb into mov or in mov mov push mov fnop lock xchg cmp das (bad) fidiv sub test lahf out xchg pop push in adc jae mov out push push jmp inc inc loopne push mov ss (bad) lret or sub add sarl fidivrl adc mov rolb dec xchg ret das cmp dec inc test or jnp push hlt push or popa rolb pop mov (bad) (bad) (bad) mov cli and rol lods jge xchg test mov ja insl test cld push jmp push ds sub jns shll cwtl in pop sbb imul loop jle pop lods leave aas mov cmp pop faddl add popl sahf jecxz pop xor into repnz inc rorl and nop push or jae aaa jge inc fistl into mov hlt outsl mov rolb jl in xchg in xchg jae push add mov inc scas mov sbb (bad) test nop loopne imul shr pop mov dec inc mov (bad) lret out (bad) jae or inc lahf out ds (bad) adc outsl aam or adc inc jl add xchg in fs jbe fistl push adc in pusha popf out shll or fwait or and jge jo mov decb (bad) roll jo mov test daa bswap cmpsl lods and into int push jmp jo dec iret cmpsw pop xor ret gs ret lds pop stos inc iret in add pop repnz cmp stc xor scas movsl pop pop scas xchg pop mov cmpsb mov add xchg (bad) cmp cmp xchg adc jno (bad) sbb sbb xor loopne push int3 jge sbb inc mov pop pop rcr xchg test inc gs jl inc lret mov mov inc or cmpsb gs xlat cmpsb daa jb cmp repz ljmp fsts jno add add adc sbb jmp cli idiv sub xchg cwtl out adc shll pop int3 mov add add inc hlt dec int3 xor test add sbb std cli cwtl lret add xor inc fisubrl cmp js jmp pop jns jge mov jmp cwtl data16 sub test mov aam sahf jae xor mov or add rorl add fdivl push imul xchg inc dec aad push addr16 or cmp mov sbb inc rcr test ds add in inc das inc pop out rep pop loopne pop fimull xchg dec jp loope mov lods loope mov mov sbb in jbe add jb adc (bad) jmp insl inc push loopne and loopne rcr xchg fild jle or push or das or mov aas loop bound fwait aad popf sub cmp shll scas sahf fldt pop adc xor jbe push cmc stc out add push cmp and jno stos mov xchg nop xor xor mov xchg leave or dec dec mov mov add das sub popa push out push fiadd rolb pusha mov test scas scas xchg rcrb outsb rcr les dec xchg jb (bad) adc xchg fldz lds lods dec loop repnz mov pushf (bad) fwait pop jl or jge xor outsl push or ljmp in pop scas jbe add daa ficoml (bad) sahf mov push push sub daa loope mov inc mov mov add out in and jb mov in jg pop add mov dec sbb out incl fdivrl jno mov movsl icebp and popa adcb ljmp and pop imul mov and testb test xlat adcl mov repnz jbe into and mov xchg (bad) push scas jno dec les jno in loope adc xor mov je loop or and sbb daa popf xchg out idiv outsb sbb daa jo dec fcmovnu or add and mov xlat movsl iret hlt ss mov sbb cs adc fldt pop lahf hlt idivl cltd cltd subl and sub loope and add jb,pt adc adc push mov jecxz xchg or xchg xchg bnd xchg dec and adc fisub test adc ret cwtl lret xchg jns mov popf orl mov rcr dec mov xchg (bad) sub xor (bad) repnz jns movsb fildll mov test sarb mov nop pop pop cmp aas hlt and sub imul push adc imul fstps stc push or sbb adc push ds clc mov add roll add jp repnz pusha mov (bad) jp xor add inc cmp and stc dec sbb jo mov or clc xchg loop repz and std mov dec mov popl lret pop or mov pop push add xlat lock xchg or pop cwtl adc and test push sbb jne jecxz les xor pop xor inc ret push out cmp mov push scas lds rorl add add jno movsl outsb test je ds sbb xchg popa iret ret cmp bound push hlt imul (bad) insb mov mov adc pop sub mov repnz xchg and lcall out dec addr16 lds rcrb xchg iret jle or add jp loope mov leave push cmp or lahf push fldenv mov add add mov in ss aad loope dec cmc dec push pop or ret jg xor xchg in mov jl loope mov pop (bad) sbb push and xor cmp mov lea test xor stc fcmovu outsl xchg call mov add cmpsl push gs pop mov jae pop jecxz jge mov aad (bad) cwtl data16 rcll aam xor pusha pop das push inc inc add mov outsl int3 and fldenv jecxz push inc jmp fistpl bound push pushf popa cmovge jns xor or cld push test outsb pop in xor ret pop clc add jb dec incl stos popa xchg sbb aaa pop fucomi adc pop (bad) jmp lret jns mov stos mov rcr sahf stos lock es adc (bad) and ss mov inc adc (bad) jae pop push inc push mov inc push out testl iret cbtw fadds pop test loopne push idivl lret pop ret sbb dec repnz std int3 xor xor jbe push mov (bad) das in fidivrl push jno stos mov mov xor mov stc enter outsl adc out push lcall out repz pop mov lock xchg ljmp mov dec xadd outsb dec push imul inc push outsb mov mov ret in scas dec aaa mov cld (bad) daa xlat add and loop in dec int lea cli sarb pop insl xor test jbe jo fwait ret hlt xor adc or incl add or ja pop jp inc dec repz inc cmp fiadd cld cltd pusha (bad) (bad) mov jb in push iret aam mov dec add fs lods xchg push adc das mov jns xor xor mov arpl dec jae popa lret insl or cmp push pop (bad) and enter pop add xor mov sbb mov in push sbb int xchg sub repnz push push adc addr16 xchg sub hlt and shll loop pusha js push xchg scas pop loope dec test push inc repnz stos stc fsubrl out dec ret adc add xor pop push inc lods es add aaa mov in sarb dec inc xor sbb inc or arpl or cmp daa subl lret cs addr16 lds mov or xchg shrl mov and xchg mov mov xchg fcompl clc inc xchg mov leave add mov lea inc ja lea sahf jg cmpsb pushf loope or rclb test add mov or sub stos (bad) pop incl add sbb (bad) in loop rcll pop mov imul cmovne leave int fisttpll movsb xchg adcb pop std in sub cmpsb out sbb mov sbb fwait dec mov fstps stc push test push inc (bad) mov je mov jmp sti (bad) and gs mov xchg lahf inc imul mov in xchg add hlt fs aam js cld dec xchg and inc and add add nop lret pop ret (bad) loopne mov popf andl xchg cmpsl vpor test pop cmpsb pop nop sub pop jno xchg or fstpl pushf loope push stc enter dec enter movsb (bad) cmp pusha pop pop mov jecxz lea and shrl inc aam jp or dec push jno push lods pop jnp xor insb mov mov cmpsl adc adc in xor cld (bad) sub inc mov add clc add add adc xor jp sub iret or insl xlat out sbb cmp jae loope bound xchg imul adc jle push inc stos add fcoms in into xlat cmc dec xchg icebp and clc iret adc hlt push fisttp xchg leave daa movsl int add test or in adc sti negb dec ljmp pop mov add fcoms lahf rorb (bad) shl jb dec lea inc lea outsl rolb add add (bad) xor decb add out rorb andb add lock push imul mov repnz call fxch push stc push or outsl dec or cwtl mov int ret inc or movsb sti sbb enter jl (bad) jae and jo mov jecxz inc outsl aam inc cmp pop cwtl std sbb sti or xchg push into stc sub int3 inc pop mov lcall add jle nop mov jnp push xchg add js jne pop mov add sub pop and inc mov subb push ret mov adc adc add aas (bad) jmp xor xchg inc cmp ja fisubrl scas or setb imul daa xchg nop xor xor movsb dec xchg leave adc out rorb sahf sbb cltd cs roll aaa out push pop pop push ret inc sub mov stos jno inc repnz call add roll loop stc lret sbb cmp pop jnp dec outsb mov stos or cld push mov pop dec lcall cmpsb (bad) cmc jnp adc xor pop rcrb mov mov xor sub fnsave subb mov sbb sub subb les xchg (bad) fcoms out jmp sahf pop adc push das cwtl repz lock loop add in xorb repnz add add push call push (bad) mov popa jle in sbb dec in and loop mov (bad) pop mov inc sub or pop outsl jecxz popf push jmp icebp cmp mov and cmp decb xorl and mov xor sarl loop arpl push into xor and mov ficoml ss out adcl movsb push push and push mov into jbe in pop out add cmpsl mov sbb mov cmp ljmp cltd outsb in jecxz add and jnp add out aaa ja shlb into xlat cmc inc xchg icebp add push and mov or sahf or pushf mov int push mov mov test rcll loope sbb jo mov inc leave aam mov inc push sub xchg inc adc xor mul push sti add xor sbb stos pop push sbb outsb pusha xor mov jle fldenv xor fisttpll fcomps int3 in cmpsl xchg fstps mov dec out adc mov stos pop cmp fs (bad) (bad) hlt adc loope std test mov icebp or jne in sub cmp jae fldcw pop in out jbe daa add ss lock imul xor ja push inc cs jns cmp out dec mov xchg (bad) (bad) mov xchg dec insl push jecxz loop test sbb xchg mov inc in jae lret adc scas rcr pop push sbb fwait outsl lods adc (bad) int3 mov xchg scas lret inc insb scas insl imul jecxz jb in sbb and mov (bad) cmp test cli xchg adc sub shrb insl sub (bad) mov std int3 mov or adc mov add add popf sub mov in shrl sub dec push scas dec iret insb jl cmc and inc lods jp cmpsl fsubr or fisttpl mov inc cli lock insb inc jecxz in adc pop (bad) jmp push pushf inc rclb lcall popf mov mov adc int dec int sti divb lds xchg pushf clc rcll (bad) lock fisttp mov loope out and and mov mov sti negb inc add add (bad) jno rorl imul mov call cmpsb and xchg inc sbb lock lods xor std scas scas rcrb (bad) popf add repz sbb mov and mov (bad) out jmp push inc outsb in inc mov jp in imul into push sub mov xlat loopne inc sti sbb adc xor fisub aaa sbb ret es push jg (bad) mov add mov dec dec xor dec and rcrl sbb jo test adc xor cltd cwtl add lcall or stos inc ja repnz add add jg imulb stos mulb cwtl roll aam mov frstor mov leave lahf mov mov (bad) adc stc fs ljmp pop mov sbb pop lock je or int3 mov push add mov ja mov repnz sarb mov add dec xchg push or xchg sub add mov fistpl sub push lret dec pop mov inc and xchg adc ret mov xchg aas mov test dec push xchg xchg jne lds cmp push add jbe sti and gs and (bad) insb pop sbb push outsl aam add iret std cmc pushf movb (bad) in dec xchg push lcall mov mov add hlt nop mov insl pop sbb inc das mov in testb iret or add sbb stos idivl and mov xchg rcl mov pop test add mov dec into mov mov inc in fcmovbe clc in mov sub pop iret inc dec mov xlat and mov (bad) adc aam or je mov mov and shrl or xor ja addl add add mov (bad) fisubr sbbl rcll dec lds mov mov inc insb ret rcrb xchg pop sbb sbb (bad) imul outsb in mov lds pop sbb inc pop and cld cmp cmp xor push adc pop mov mov xchg xchg pop in (bad) mov icebp lods dec aad scas sub mov adc rcrb dec insl adc sbb cmp inc fisubl add (bad) cli jg test dec test arpl mov push inc mov jmp add adc in lret ficoml jae or adc jb cwtl mov (bad) int (bad) stc jecxz loop (bad) addr16 jge loopne mov test fstpt loope push adc add (bad) mov pop sti out repnz popa jp mov inc clc cmp mov dec mov movsb sub std jbe adc mov mov popa mov inc jno inc roll bound mov lea and inc lcall jl leave inc jecxz dec (bad) hlt incb sub and mov lret or ljmp cwtl adc or sub push bound jne jo xlat (bad) pop lcall push pop mov dec call sub cld sub mov xchg pop das jb fcoml cmp add adc push scas cmp fld out gs push xchg ljmp repnz aas sbb loope dec dec push clc mov mov cmpsl mov mov repz gs jb dec in inc shr ret fbstp aas cmp repnz xor lcall lods jno fwait nop mov loop push test inc bound mov aas sbb inc and je jmp mov xchg in in sbb rorb xlat ret sub add add sub mov inc fistpl push shrl mov sbb insl decl sbb fwait mov dec jno xlat (bad) sub mov (bad) mov aam and lea adc sub insl sub or pop outsl stc aam adc push adc out ss clc fwait jmp push mov fsubl pop pop mov jg stc sbb insl popf arpl xchg mov dec pop imul loopne add mov adc mov movsb inc js (bad) int3 adc in or in adc fcomp clc jge das cmp xor aas sub mov jmp adc nop (bad) or outsb aad jmp je rcl cmpl in inc adc and pusha jno mov mov insl fwait ja mov dec (bad) push dec aam repz lods pop add movsl adc pop jmp orb jecxz imul add push pop std outsb movsb adc ljmp cmpsb add inc cmp xor inc sub mov dec cli cmpb in hlt mov xchg into (bad) xrelease jmp inc pop pop add cmp into leave (bad) fisubrl daa inc xchg in xchg push add xchg popa mov fistpll mov aad push or (bad) pop and jb aad mov in pop cld mov dec xor ficom stos sbb fstpt imul cmp das pop in inc push test iret inc (bad) cmp sti jno or outsl icebp or sbb adc in push es out sbbl xchg jo mov je cmp mov add add lret loope test cwtl adc add sbb mov push or (bad) pushf sbb fimull push into sbb dec mov push aaa adc in or xor mov sahf lcall sahf orb jb jb sbb add fisubl xchg (bad) sar imul fchs cltd mov xchg mov xchg mov test mov jecxz push mov outsl cs inc mov xlat into mov rolb sbb sub add (bad) rcr fcomp sub dec inc fwait in adc or scas gs jge cmpsl sub and xor sub jp cmc (bad) adc call addr16 sti or xchg xchg sbb add push jle out outsl push dec xlat lcall call frstor push bound stos jo pushf dec ss fmull cltd cltd or xchg cmpsl lods push pop fild push push je inc inc cmp cmpsl and ficom pop mov stos je jno and cmpsl sub adc and in cmp (bad) or jb imul pop ficompl jae mov jmp icebp pop bound mov bound add add aam jp movsb pop pop lret (bad) hlt xor je imul or add pop mov and in std mov inc rclb mov jle xchg in lcall adc xchg inc (bad) lret in push ljmp in stos jmp push out lods lcall xor sub ret lret cmp mov mov xor add popa xor pusha add add int3 mov sbb pusha inc jg cmp cmp mov inc fistp cmp mov loop sub pop add inc push and fild xchg ds adc mov out dec aad push push popa cli sub pop dec clc cmp push outsb xor fiadd outsl xor push insb sbb int ljmp mov or mov sbb insb xchg popf popa mov mov pushf inc rolb add cmp mov in leave fcomps sti shrb loope enter ja push in xchg inc push das mov xor xchg adc pop xor shlb xor and sbb aas lahf sbb mov cmpsb aam mov (bad) or cltd sti xchg in mov inc xor (bad) xor test sets lds mov pop fnsetpm(287 xchg pop pop fiaddl add inc jmp push test lahf inc sub add add sub (bad) pushf push stos scas test jl jno stc (bad) negl arpl fiadd rorb nop flds pop pop movsl mov lret lret cld mov adc push (bad) pop add test data16 jg sub mov cs in sbb pop sbb xchg in add push scas in lcall cltd cmpsb inc js (bad) xchg aaa (bad) and dec movsb loopne mov hlt js dec xlat lods inc cmp dec push add movsl lea mov stos dec mov and xor shll mov pop xorl sbb fimull mov or ss add sub xchg lahf cmp and popf insb data16 rolb jle out ljmp repnz enter lock mul out test inc dec icebp test pop mov out pop jno pop cmp test repnz jns aaa leave and inc add add push inc jne sub jecxz dec xor dec cwtl arpl or ret mov test fs fmuls shlb lea (bad) daa in xor fwait or mov iret xlat repnz jge imul dec ja jns out test xchg loopne test xor int3 add mov fist loopne ret and pop movsl pop jmp xchg adc mov or leave push dec inc mov scas shrb outsb add into add ret dec dec sbb icebp add mov (bad) push (bad) or in repnz xor add (bad) mov mov inc out inc push out out push add int3 mov clc or xor add pop (bad) fsts or pop xor cld inc lret (bad) icebp and popf inc lods ss add mov scas (bad) jae fnstcw dec test add decl in shr and loope mov jmp push (bad) icebp fildl mov popf add fdivrs adc mov leave adc xchg cltd cwtl iretw or fwait scas dec ret in pushf sub ret inc arpl xor add out cmpsl sahf add shrb or outsb in xchg popa jmp sbb pushf dec outsl pop das sbb aad das (bad) icebp ja xchg mov enter adc ret inc cs cld mov jae adc loop add js aad cmpsl les mov adc sbb xor ret imul (bad) outsb (bad) sub sbb or dec xchg popa daa fisubl adc inc lods push fisub (bad) pop or sbb sub xor push inc pushf add fcoms arpl fldl pause cltd push cmc cld push xlat jo mov loope xchg sti add add cs ds fidivrl test fist adc mov int dec iret jno cmpsl aaa ds push cmp mov cmp push pop das leave call sarl adc xor cld sub cmp or jl mov pusha les repz sti xor pop pop add and inc pop ljmp fucom pop fcmovb push push in decl (bad) adc add sub push push jecxz ja js (bad) xor insl xchg js cltd shrb je rolb add add jge dec dec xor cwtl out adc mov sbb push nop pop sbb xor sub xchg aad cmp xchg test cltd (bad) mov jo jmp xchg xor sti ret int imul nop and mov sub bound or adc aaa addr16 gs adc rorb movsl mov lock push movsl in or ficom jge push add sbb cwtl mov pop jmp dec jo in jl aam xor fadd add into mov adc or mov xchg fild add out mul data16 mov mov xor test popf and stos xchg jmp (bad) out rol das jne push mov pop ja xchg fs add jp jmp adc popa mov mov in add mov jbe pushf ret push and add add adc jle cmc (bad) cmc mov cmpsb inc fdivr ss mov mov jl in ss dec (bad) jb call nop idivl dec xlat repnz imul pop xor std cmp xor loopne (bad) jb pop leave jge jmp jae sub imul mov lods jecxz enter testl sbb cld xor sbb jecxz mov sti ret dec sub lret ret add cmpsb pop inc sbb lahf inc jo jmp push pop xchg mov mov xor clc out fwait into xchg stos (bad) mov jle lret or dec loop call scas fcomp clc jne scas std mov push xchg add pushf movb mov adc inc lea mov cwtl rclb lods xchg adc mov std inc xchg mov repz jl in mov xor add mov stos jne and les sbb mov jp cmp cmpsl stos dec xchg push enter stc pushf dec jmp je adc cmp stc xor and jae xchg mov dec in hlt xlat sahf in repz push push (bad) mov sub divb and fsts push loope xor inc xorl cmp insl xchg jbe lea aad add loop lods adc add add js,pn push inc shrb insl xchg jle iret push jecxz in cmp pop notb (bad) outsb mov xor xor sub add mov xchg dec outsl rclb and mov xchg je inc mov cld cmpsl mov mov scas jecxz cltd adc test fstps jp loope mov sbb mov sbb push xchg mulb rorb or rclb sahf lock add cmp pop sbb adc es in xorl jp test xor lods pop add jo in aaa cmp push gs mov arpl add mov imul or rol jbe sub cmp jae pop inc add xor dec nop pusha ret test data16 sbb test ja data16 adc subl pop lcall pop in lcall mov fs ja sbb pop jo scas pop subb sti mov popf daa jne sbbl mov dec adc pop push xchg dec pop aad in rorl jmp aad adc jae out inc xor cmpsl adc mov or inc leave (bad) xchg jge mov int3 int mov jns divb das aad jl cmc jnp xor or dec adc nop cmc outsb arpl xchg lds push bound (bad) jp add jmp enter sti cmp ds and push xchg cmp push lds jbe push or (bad) fwait or and insl pop pop sbb push in scas mov cmp jge adc add push ficom enter stc cmp outsl outsl shrl gs out pop cs out xchg pop ss inc inc cld ret jo xchg mov je insl and mov or or mov arpl xor push fnop add add call xlat loopne jg pop stos and std mov out mov or scas lea cltd xor rorl mov in inc ret in cmp sahf or mov jno lahf call pop and and jl bound sbb into mov fsubrp jo sub pop inc icebp add mov or xchg popa outsl inc loopne pop mov push dec (bad) ret movsb test ficompl sub xchg jmp inc jl test pop push mov and movsb ja jge add fldt fcmove pop and lods shlb aaa inc xlat je pop pushf (bad) push and adc cwtl into jmp cli das mov in addb dec push popa fwait push mov lock mov lret xchg sbb out fidivl gs mov pop push mov adc in sbb xor jns ja fcmovnbe or (bad) pop xchg xor sub mov sbb inc (bad) mov mov pop add rcrl shrl cmpsl cmpsb in (bad) jb ret rcr and call sbb into (bad) lock lds adc jl mov out cli mov cmp mov jecxz mov xchg dec push test mov sbb push pop xor xchg or repnz mov ret cmp fdivrs lods fwait nop push movsl jnp cs data16 shlb mov in cmp xorl sbbl add cmpsl adc loopne stc hlt push jo or or js subl jmp lock mov insl pop and notl mov mov and pop les enter std out mov inc test fnstsw imul neg xor cmpsb mov sbb repnz ret xorl fndisi(8087 std xor pop cmc enter inc push push jle frstor xor loope sbb inc add sahf mov mov inc dec (bad) push repnz xor sub inc inc aad (bad) mov jnp dec call sub jbe jge leave aaa add jp jmp cmp (bad) lods enter xchg call das (bad) je mov push cmp push xchg adc inc lock mov cltd adc adc mov insb jbe orl insb xchg aad pop lds add mov mov add xchg repz cmp push cmpsl ljmp into push aad push les sbb fwait sub loope push xor jecxz push dec adc popf mov lcall test lret xchg lods xchg sbb movsl sbb cmp push test mov push cmp inc popa cli (bad) int3 aad testl xlat (bad) mov adc mov dec add dec arpl scas daa int3 add pop scas insb xchg data16 sbb pop sub repnz push adc adc xor xchg in lcall or jg push inc stc cmpl dec lret cmp push repnz ds addl dec xchg adc and mov stos jne lock aam dec cmp cmp adc and mov into push pop stos push mov cmp fnstenv mov (bad) pop cld sub int dec cmp add aad fs jb in cmp jae add enter loopne dec xchg fmull lret mov pop repz adc push cli mov xchg pop jno out jne rcr sbb mov jp mov in rcll test push mov pop stos repnz xchg fbstp insl sbb in pop inc push (bad) sub cmc jg ljmp je pop mov xor repz adc sbb jle jle sbb adc add fmuls rorl pop mov in out mov lods mov hlt negb fild mov xor (bad) shll pushf add movsl xchg das pop les stos imul inc dec dec cs loop add add dec (bad) adc loope or mov mov sti jle add xor cld xor lods pop add inc xchg mov jno xor std loop push fldl dec jl inc xchg in xchg pop dec mov bound add add sbb (bad) sbb movsl clc repz insb leave xor pop lahf shrb add jecxz cwtl inc lock in pop inc test pop inc lret fnstcw test insl leave mov cmp notb push cwtl adc mov and cmpsl sub js test sbb in add aam pop sub cmp (bad) loopne out test cwtl pop inc fsub xor xchg cmp jo sbbl dec jnp jns pop cltd cwtl out pop push fild push cwtl jg lret repz mov add mov cmp xchg popa cmp sbb push fnsave sbb sbb or icebp divb sub jo mov (bad) stc fadd push addr16 inc pop nop add cmp lea aad xor ficom iret inc xchg in inc adcl lods sbb mov mov and testl frstor ds (bad) mov xor mov lret repz push out jecxz lods outsb xchg sbb or mov jg adc jae jbe pop xlat pop push idiv test adc adcl in push push (bad) es mov mov popf dec dec sbbl test cld pusha and lcall xchg sub push bound fdivrs or iret mov sbb std out mov leave (bad) shll xchg mov int les mov or dec out or add add push adcb mov xchg cmc enter add test sub sbb sbb loope and imul inc cmpb cmc rcr insb fisttpll pop pop cmp mov lcall inc (bad) jne jge or test jp push in or ljmp sahf mov stos push cwtl rclb aam lcall fmull (bad) xor pop xchg stc push sub jle cmc cmp push loope out out xchg cwtl (bad) outsl add and or mov sub icebp dec pop loope test jns pop cltd cwtl enter leave pop loopne sbb cli insl aaa les jno popf shll lock add lret scas dec xor mov in (bad) xor inc aad dec aas jae mov sbb mov or jge pop adc mov int3 mov xchg add mov insb adc push int3 fistl mov rcrb xchg clc movsb lahf xchg and rcr das ja rcrb lods dec jbe pop cmp fwait or fisttpl mov nop sub sbb push mov mov (bad) movsb outsl lea loop push imul (bad) lahf mov push (bad) test andb cmp ja sbb dec ror cld cmpsl (bad) stos mov ficoml popa mov cmp pop sti lods jnp inc fidivl iret jno (bad) icebp xchg push std out daa jl jae mov ss addr16 in int add lahf gs or cli push jb (bad) in jp ret lret repz push and jns pop hlt enter add (bad) adc sub xchg fistpll das loopne out inc imul inc dec pop loop repnz rcr or dec rcrl ljmp arpl add or pop mov lods sbb jae push out mov hlt inc movq popa mov repz ljmp aad cmpsl sub jb mov daa insl gs aam mov lcall (bad) sub data16 fild test pop mov adc jb xchg dec jnp or in mov mov insl sbb daa xor sub mov mov imul push jge jae enter in xor jp mov fmull mov fidivrl add mov pop and scas (bad) into mov sbb adc lret (bad) push cli insb aam and fsts into sbb bound iret mov scas push fiaddl jne orl or ret stos out fcomp add mov inc fwait nop sahf xchg aaa mov jmp out dec jp sub ljmp sbb loope add or sbb addl jne add add pop jo or jl aaa push aaa add push in rcl pop mov ljmp loopne sub int3 movsb xor stos adc or lea and pop cmp shrb cld or or add pop (bad) ficomp xor jns dec cmp test pop add lock cs shl mov out and push push inc xchg and dec jle xor jo aas add out pusha and adc inc lcall mov jbe movsb ja imulb das (bad) fisttpl hlt inc mov cmp nop xchg push add int3 mov daa inc jl aam mov or andl addr16 imul mov mov stc (bad) ss push in mov mov cltd bound loopne fbld mov mov mov add sahf add out mov mov mov test in xor jmp sbb add fmull scas (bad) jb mov dec jbe cmpb mov into mov sub inc lret mov insb aam jmp fsts into aad ret push inc xchg mov fadd fildl jne jg in mov or movsb cmpsb js fwait lret sbb (bad) outsb shrl jne enter cmpsb xor xchg lret add rcr dec jne scas mov sbb int3 mov cwtl adc ds adc add mov fcomp into shll out jl imull or movsl mov lahf inc sbb fnstsw (bad) (bad) test repz inc repz ret sub and mov je xchg jecxz lea or aas (bad) or cld (bad) out in pop pop mov jp xchg inc outsb ljmp add jmp cmp add inc jb frstor test stos sub (bad) jg add lods repnz xchg dec aas out xchg sub test addr16 mov mov xor je push ja fs stos sbb cmpsl mov adc lea mov stos add mov jno popa mov xlat pop outsl inc and mov in lcall enter sbb fdivl jle dec or jne push aam lcall loope mov cwtl pop gs mov pop lea xchg rol cmp loopne rcrl xor push jge mov mov mov pushf or mov pop or dec add xchg rcr aad (bad) xor dec sub stos push cmpsb lea sub pop add fstpt push jle and lret jno les push inc into or mov fnstenv push mov jns sub add fildll add jns lret (bad) hlt jne stos pmaxsw (bad) pop push inc popa mov mov xlat or mov xor xchg repnz adc test cltd rcll pop arpl sbb out arpl add out int inc (bad) std xlat into xlat lds mov adc fisubr sub aam test shrl mov sub mov jns jl (bad) xor cmp add sub mov call movsb add add cmp cmp scas lret jge mov mov jg mov mov add or fldt pop push hlt mov pop sub loop ret lea jno adc jl inc xchg in xchg into cld ja dec in pushf push lds jae mov loop xchg insb jb cwtl mov xor adc je jnp push jmp loop and dec cwtl fcmovnb fwait xor je jnp in or mov and addr16 add add (bad) pop xlat or int ljmp scas mov sbb jl inc inc daa jns or mov and jle pop pop cmp or test and and into loopne jo xor daa xor push add stos inc push movsb mov push fiaddl mov inc cmp push int pop out adc ljmp sub in mov cmp pop mov jb leave add fstpl stos or and mov inc xor jo imul jns jno aam dec xchg cwtl or cld mov cvtdq2ps (bad) (bad) or mov ret in xor test xchg rcr div fs jl inc sub enter popa add xlat mov outsb xor xchg sti pop aaa pop cmc adc jge mov ss or (bad) mov ja addl jo add add add add test sbb test dec push sbb ja cld (bad) fcomip shll out cmp movsl dec mov lret arpl sahf enter stc inc in lods mov xor sti test xchg pop push xchg pop mov dec fisttpl inc jbe imul inc pop ss jecxz js test jne xchg outsl les pop push push rclb into in jp cmp cmovle insb jle cmp xchg inc (bad) sub add fildl sbb dec xor dec push je (bad) addr16 jp nop fdiv inc outsl xchg xor lods jne mov stos rcrl pop int3 jne,pn adc fstl sub mov cli hlt stos sub fnsave dec iret std std (bad) lret fcos aad scas jns dec xchg jp cwtl or xchg (bad) in stc pop mov movsl xor aaa sbb call add sarb lea shrb mov xchg cmp xor add movsb sti push mov out xchg std sub add dec jae jl int cmp pop add subb fwait xor inc cs sbb mov imul dec jnp inc out xlat adc lods mov add loopne movsb inc dec fs add mov pushf shrl cmp sar repz push add ja cs out int3 jb xchg push rolb jo imul push inc mov cmpsl pop sbb add dec mov es lcall cmc (bad) lahf xor iret mov (bad) xchg mov lds icebp out or push add push and push bound es js mov andb push lock sbb in dec inc adc xchg dec mov aad mov push dec out mov std sub mov outsl mov xchg cmp (bad) cmp inc xchg aam aaa out hlt pop lcall (bad) imul push roll push cmp loopne xchg loop jne adc ret lcall jb mov pop xchg inc aam (bad) push out lds dec push mov and dec test jl repnz pop iret cmp mov xor sbb xchg pop mov data16 in cmpsb jae mov adc dec (bad) push sub adc push cmpsl popa out push push in xchg xor pushf sub cli or mov leave cld imull add fidivr outsl mov es arpl ds xchg lock rorb cmp enter jp cmpsb and sub inc ja orl ljmp leave nop lock dec call mov inc pop sarl (bad) imul pushf mov int data16 scas cli mov (bad) cli addr16 clc jns push or ds inc repnz dec cmp add add sub jge test adc loopne aaa jp xchg inc clc push stc mov inc jb lret rcl sbb pop push jae adc clc mov fwait aad cli sub or inc mov pop inc cltd add fisub fbstp adcl rcrl popa sbb bound lcall dec (bad) or jb (bad) call pop jle insb xchg push push jb or mov mov add add jne xchg cmc xchg sub jp cmp mov incb int test ret outsb cmpsl sti cs icebp js (bad) seto addr16 push mov fistpl jle popf sbb fwait cwtl test xor push orl iret adc xchg cmpsl test mov das push dec xchg xchg loopne lret std mov cmpsb dec cmc jecxz stc imul inc pop pop add popf sarb xchg inc lret sub (bad) jmp inc mov into cmp fildl leave adc arpl pop xchg ja sbb xlat inc (bad) pop out xor lock popa pop dec push cmp dec xchg inc dec xchg lcall pop cmp mov bound lods pushf ret les mov int3 xor sbb imul aam mov aam or aad sub popa push cmp loopne add jp ficompl bound dec xchg lret xor (bad) cmp push fsts adc jb add add pop insb mov test add cmp inc mov dec ret out inc jecxz adc jg add int mov lods js pop mov pop lahf mov xchg pop movsb mov sar imul pop mov sub pop add or xchg (bad) pop nop and adc push xchg (bad) lea jno sbb lahf mov push fwait push sub cmp xchg or mov cmpsl movsl data16 call add add je daa xor sub cmpsl xor jns sub arpl out jge lea inc icebp ss push push fwait arpl xor mov jne fs pop push ljmp dec cmp mov push and mov pop sbb mov and adc aaa and pushw jl into les inc (bad) mulb xchg pop dec xlat mov aas ja inc aaa mov adc xchg xchg testl or add push add lods fs mov outsl (bad) (bad) cmc inc out sbb mov pop mov lahf push leavew arpl cmpsl mov add mov in push inc lcall jne jecxz dec repz pop aam mov cltd inc jle jbe orl cmp je movsl jmp test stos and stc adc push xor adc pop ret int3 shlb add sub in inc sub pop push pop sub enter sbb mov pop and cld add add ds aad jae aad divl xchg xrelease dec lds outsb test jmp and mov cmp negb (bad) cmc ret push sbb or into fisttp je xchg and dec xor test add (bad) repz adc dec mov and jecxz jle sub daa sbb popf push inc les mov adc movsb xchg jmp push push add adc pop lret stc rorb add scas xchg lret mov cmp fisttpll mov aad scas pop cli mov sbb lret dec aam sahf dec inc cmpsb call lret inc mov add inc inc pop mov xor mov xor mov mov mov addr16 aad jae insl fcomi mov icebp aas jge jge lods pop add leave lds xchg ljmp pop cs loope add inc inc inc lods xchg mov mov cwtl test aas mov into push push ret adc xchg fsubr inc fwait mov dec pop movsb loopne movsb add fcompp jg mov arpl cwtl aam clc je (bad) (bad) rcrb push rcrl sbb divb add xor insl ljmp push sub mov push lods in fdivl pop decb push cmp test mov dec out jg dec rdtsc movsl (bad) and and (bad) aam inc xchg sub daa fcoml sbb fimull test loopne scas in int (bad) (bad) or mov and jle jg mov clc jecxz ficom (bad) fisub hlt inc add cmp xor call push out stos push mov inc out outsb out jp loop icebp adc ljmp repz xlat push pushf xchg and add pop xchg bound mov ja (bad) outsl addr16 add out addr16 (bad) std and inc fwait sbb mov pop push test int mov adc xor push popf sub sub lods jecxz lcall push cmp pop lahf jecxz out ss cld hlt dec mov fist xor mov loopne jns pop lods xor movsl daa mov mov pop jge,pt jmp mov dec adc push aaa mov cmp cld sub cmp movsl pop add pop neg pop xchg sahf test jns cs push shrl xchg inc aaa push mov push pop (bad) lret aaa add in loope adc es mov pop (bad) icebp (bad) or mov and pop dec cmp jmp pop pushf or movsb fcomp push push shrb lock aas sbb in insl repnz movsb adc jmp pop stos test cmpsb jns ljmp sub mov imul xor cli push adcl dec mov aad sbb and mov jmp mov cmp xchg mov mov fcmovnbe add divb xchg add mov mov xchg inc test inc push fcmove idiv test pop push dec (bad) adc in leave sahf loopne push adc ret or add std pusha mov mov pusha sub int3 sbb and adc jbe add jg js,pt mov sti (bad) pop xlat mov xchg and add adc vmread into test aas add cmpl pop insb (bad) fdivs into inc mov mov mov arpl (bad) adc (bad) fistl push sbb xchg xchg mov into call ljmp push xchg lret fstl cwtl or jno or shll pop imul push push inc push shrl cli bound xor ljmp add pushf dec xor scas sahf ret hlt fnstcw ret imul insl movsb sbb es mov out jb loopne xchg push push and in hlt or je push fbld cmp mov cld xor mov add loope test pop ret aaa pop das (bad) mov rorb orl xchg xlat cwtl push fldt and push cwtl scas mov cld dec fcoms pop push test push sbb mov and push lret sbb adc popf mov jecxz add jne fwait sub out cmp or push jg outsl enter loop jmp fcoms gs aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb add add mov jo jp ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul and mov repnz or fwait hlt insl fisttpll lcall mov dec xor repz sbbl and add sbb fs (bad) popa ja mov pushf movb pop nop pusha pop js mov gs aam or xchg (bad) std mov add add cwtl jmp hlt adc xchg lret ja xorl hlt leave lea arpl inc lods push fsubp rcrb ljmp and inc dec mov sub stos stc in cld inc test adc cmp push int add mov cli xor divl jp pop xchg out in gs push mov dec dec pop or jns jmp mov add cltd mov pop and add add repnz xchg aas and frstor shr movsb adc (bad) mov cmp mov and jnp pop test mov adc pushf movb sti pushl xlat ds add sbb hlt into lret fcoms aam or fs lahf mov leave cwtl stos test andb cld ja subl (bad) leave fldenv pop push cli inc test popf or out cmp mov and add add iret jno add std iret jmp cld sub out test cmp arpl mov ret and push cmc mov je popf inc out aas loope jbe adc mov aaa int and xchg sbb inc add mov push fiaddl ret les or dec mov repnz xchg inc jnp fstpl shr mov add sti mov cmp mov das daa out and test push xor add add xchg popa adc in push test add out in imul nop dec int3 adc sti into xchg fdivrs aam or fs (bad) sarb hlt cwtl mov hlt xor xchg enter jno cli jl mov leave lods cmpsl mull in pop push mov scas and lods mov push arpl iret jno dec lock xchg stc scas lea jecxz enter jp movsl pop insl mov cmp xacquire leave stos cmp (bad) lods jg sbb addb lds dec push fisub roll and loope (bad) icebp adc call dec fdivl pop xchg aas dec jnp (bad) testb mov dec mov xchg mov in call jmp push push push (bad) (bad) push xchg push js outsl xchg in je jmp out sbb int3 jns lret mov loop test sub outsb ss xchg cwtl (bad) add add sbbl outsl rcll (bad) rclb xor adc or pop cwtl dec push pop push xlat fbld outsb and xchg xchg popf xchg cwtl ret rcl cmpsb lock mov jle movsb inc ja jnp mov ficompl mov cmpsb sahf pop dec (bad) sahf add sub mov add xchg cmpsl ds (bad) sbb dec arpl popa mov push push cs icebp mov push push fldenv push in jo insl xchg and (bad) pop xchg repnz add mov insb fnsave xchg adc (bad) out pop addr16 into and mov out les and or or xor jbe mov lcall jns idivb mov cltd xchg clc xlat jb adc addb cmc ja cmpl ror cmpsl shll in dec push fwait inc mov popf or cmpsb cmp mov and insb dec rorb sub cmp in (bad) mov rcrb sbb add clc test mov outsl mov ret imul mov xor pusha cmp fisub xchg xchg roll ss fistpll adc mov dec cmc mov loop repnz xchg add (bad) shr mov mov cmp pop in mov fwait insb das daa out and test push xor outsl mov mov adc out out mov sbb ss pop int3 push ljmp ljmp (bad) lock fcomps iret hlt sbb ja cmpl leave mov in js mov mov popf or mov sub aam inc pop test outsb dec xchg rdtsc xchg and mov xchg stc rorb jecxz enter sbb inc add mov cli push mov imul add add add test push mov pop or inc dec imul xchg xchg rorl xor sti (bad) insb jp notb dec imul (bad) mov loop repnz in xchg mov and loopne (bad) fwait push das xor dec and test push xor cmp mov outsb pushf test out out das xlat sub cltd into jmp push gs mov sbb mov jecxz out test sbb pop jne xchg (bad) ja subl (bad) leave cld cmpsl movsl data16 js mov in popf and mov cwtl pop push sub enter mov (bad) xchg or nop jmp aam mov enter sbb push add mov cli sbb cwtl jo jp ret or cs test pusha int3 mov inc dec fiadd xchg xchg rorl sub insb jge fist gs sub mov (bad) mov loop repnz xchg push jnp sbb sub hlt xchg mov cmp cli mov out and test push xor outsl mov add adc stc out cli (bad) cmp int3 jns fcmove mov gs aam or fs (bad) (bad) mov cli cwtl cli test cmp cmp xchg aam addb mov leave mov in jo mov mov popf pop fnstcw sub mov and push dec mov adc add add lds (bad) shl mov sbb pop add mov cli daa cmpsb mov jo jp ret inc jbe stos mov pusha sahf mov dec dec je pop xchg mov inc xor sbb fistpll adc out add fdivs push jnp (bad) shr movsb adc mov lods cmp stos repz fisttpl xor dec and test mov sbb pushf out (bad) out out cmp add ljmp rcl or test inc lods loope out xor test subl (bad) leave mov in gs mov mov shl popf adc pushf cmp mov and pop dec mov or mov fisttpll mov sarb sbb push add sbb sub test jp ret js adc mov xor mov shll inc dec insb fisub sarl add cld fnop insb jl out adc jmp sub xchg dec (bad) mov loop repnz insb fnstsw sar mov xor (bad) mov daa mov rep pop in out fwait or inc push jmp data16 push mov cmp adc cli stos out xor test lahf stos adc aam push in fstpt adc mov jmp outsl add add adc icebp les or scas cmp cmpsl (bad) repnz pushf pop lahf jae sub mov and jne xchg nopl lods stc (bad) (bad) roll (bad) mov rorb sbb outsb add adc sbb xorl icebp ret je or mov sbb dec outsb fidiv mov dec xor sbb (bad) insb jl icebp adc in add int push loop xacquire inc jnp fisttpll lcall add in cs scas mov push mov repz jmp popa das aaa out and test outsl aam ja clc push notl stc out call nop cs xor lock mov pusha gs or fs (bad) jmp inc inc pop lods sti cwtl sti test adc push jne xchg aam rolb xchg mov leave xchg cmpsl xlat data16 gs addl shl ficompl mov mov and inc dec lock xchg popa std mov lods mov nop and mov arpl popa fcoms (bad) movsb dec jg xchg add or pop int mov xrelease ror sbb jbe push mov loop mov push bound nop (bad) dec jle stc dec dec add insb sub dec mov repnz insb fnsave in mov mov flds movsb lods dec mov popf mov (bad) imul call outsb roll sbb iret push stc data16 jbe out mov add jge sub (bad) into mov jnp rcl or lahf (bad) in mov xchg cwtl (bad) (bad) hlt and mov (bad) ja cmpl out leave (bad) cmpsl movsl inc in fs addl shl popf adc movsl cmp enter mov invd xchg popa std xchg jmp fiadd (bad) mov rcrb add sbb clc lahf mov cli push cmpsb mov jo jp ret js add mov push or add outsl fisubr movsl rcll xor sbb ffreep insb addr16 adcl imul hlt mov loop repnz xchg jnp fstl faddl out mov ss repz cli mov fwait imul out and test push xor or popa ja mov adc loope repz xlat xor ljmp (bad) mov (bad) out inc inc inc lods out loopne cmp mov cmpl add fldenv pop push mov mov popf adc stos cmp mov and insb dec fwait invd xchg sbb mov (bad) fild (bad) mov rcrb sbb int add mov cli push mov ret jbe adc mov aas mov cmp push cmp dec fisubr mov sbb (bad) insb inc push icebp adc clc add fdivl and insb (bad) jmp (bad) out add add (bad) lods and pop cli mov fwait jp and inc and test push xor or popa push mov gs call pushl xlat pop nop push int3 or (bad) fdivrs rcl or mov loop cld test adc and xchg xchg (bad) ja cmpl loope (bad) cmpsl stc inc in fs fild push mov fstps (bad) pop dec sub pop mov nopl nop stc fisttpll mov add add sbb int add mov cli sbb lahf jo jp ret push ret xchg pusha int3 mov popa dec jb outsb xchg mov dec xor sbb (bad) insb dec push cmpsb adc sahf add lret loop repnz add sub adc (bad) cli mov sub in mov fwait and cmp dec and test mov cmp xchg adc jmp out xlat add or cltd into jmp aaa gs xchg cmp mov cli cwtl shrl sbb ja cmpl fmul mov jno mov mov int3 in popf push fldenv sub mov jno dec orl xchg and mov (bad) stc rorb jecxz enter sbb inc add sbb xor subb mov ret pusha jbe stos scas ret fsubs mov inc dec pop fimul add sbb fucomip insb push push mov add xlat mov loop repnz jnp fnstsw rol adcl jmp dec adc lods push mov repz jecxz ficomp dec and test push xor pop outsl cli popa push mov push pushf movb cli incl pop nop aaa int3 sub fadds jmp sti or fs (bad) cld mov cli cwtl jecxz xor mov sbbl out xchg cmpsl in pushw in add add mov xchg in popf adc lods cmp mov and jno lock mov rorb jecxz enter sbb inc add mov cli or mov ret or pop stos scas ret lods pusha shll push dec outsl fidivr mov jb xor sti (bad) insb jp out adc in add lret loop repnz xchg aas add pop fstl mov (bad) jmp lods cmp add mov mov fwait jle push out and test push xor add popa bsf push call add out loopne xor cmp add push ljmp scas aam or sar in mov in ljmp jne xchg aad xchg xorl fmul mov in jb lods inc mov popf and lcall mov and jno lods cmovs loopne scas lea jecxz enter sbb add add pop add mov cli or lock test jp ret jns push stos test cmp sbb imul dec popa fisubr mov add sbb (bad) insb jge fist push imul sub mov loop bnd es dec jnp frstor rcrl (bad) mov and loopne jmp popa das ss and test push xor adc popa add pushf mov shr fcos cmp xor ljmp add rcl or fs lock stc cwtl ljmp jne xchg mov push (bad) jl mov leave xchg cmpsl (bad) data16 jbe xchg inc mov popf and mov sub pop stos jno dec fimul add paddw (bad) ret inc xchg (bad) xchg jecxz enter sbb jg mov and lcall sub jo jp ret imul mov outsl or cmp pop fimul mov sbb add (bad) insb jb repz ret or loop xacquire push jnp fnstsw movb mov and repz out and test mov inc mov cmp jmp je xor cmp stos into fcmovnu aas gs aam or (bad) fidivr mov and cmp ja cmpl test lods cmpsl xlat data16 jno mov mov add in popf push fxch cmp mov and push dec (bad) lar mov lret inc out shl mov sbb xor aad jbe divb mov jne test jp ret and stos mov aas mov cmp jle pop ds add adc stos fiadd fs adc imul jbe lcall xchg jne imul scas out xchg (bad) pop jbe (bad) and mov rolb add xchg dec inc sbb inc outsb mov inc (bad) clc adc dec push stc movsl jbe lahf std decl pushf push (bad) cli movsl mov mov jp or add rcr negl repnz xchg xor mov subl in leave mov cmp inc mov (bad) popf adc movsl cmp mov and addr16 ret cmovae mov scas lea jecxz enter sbb pop add add divb movsb dec sub xchg sbb sbb stos jbe jge fadd and xchg or (bad) pop push inc dec push cmp fiadd xchg movsl mov cmpsl sbb jl out es sub cs pop lea call sbb cmp outsb cwtl in dec jge fwait dec mov (bad) lods xor out mov jge aaa xchg inc push push (bad) pop in js or mov and gs mov ljmp xlat sub in into mov aam or add add fs lods (bad) cwtl shrb jne xchg bnd addl leave xchg cmpsl leave or jbe addl (bad) in popf push fldenv sub std and addr16 xchg lar loopne xlat lea jecxz enter sbb int add mov cli push cmpsb shrb sbb ret js sbb mov aas mov push or push dec arpl jne mov sbb notl dec imul sub orb pop loop repnz xchg aas jb and push ror xchg adc (bad) fdivrs add loope out fwait popa das xor jnp ds push xor or popa push mov jle mov loopne in (bad) cmp int3 adc jmp (bad) fcoms gs aam or fs lret mov (bad) cwtl lret sub pop jne xchg leave ja xorl leave xchg cmpsl (bad) data16 jbe xchg inc mov popf jg lret pop jae and pop mov dec mov xor xchg stc fisttpl test rolb sbb inc add mov cli push mov ret dec jbe stos cltd ret mov shll pop dec insb fisub mov fs sbb (bad) insb js adcl imul or orl push jns push xchg jge sub and cmc xchg mov and mov sub pop and test mov sbb pushf stos add out mov nop inc int3 pop ljmp fst xchg xor lret mov rcrl hlt adc movsl xchg ret ja cmpl mov leave xchg cmpsl movsl data16 pop push cltd inc mov in popf sub pop jno or shll dec xchg rdtsc xchg xor xchg mov lret inc test sub int add sbb test add add movsl sub xchg jo jp ret insl jbe stos mov pusha lret mov inc dec arpl pusha xchg cmpsb roll je enter jg notb inc imul sub mov in inc loop repnz xchg jnp fnstsw stos xchg adc (bad) mov lods js out hlt pop in mov out and test mov inc mov das pushf repz out mov nop aaa int3 add cltd into jmp inc gs popf or mov dec inc push lods leave cwtl les sbb ja xorl loope mov inc push mov in popf sub test lods pop push and pop dec mov add test rorb jecxz enter sbb push add mov cli (bad) mov jo jp ret js or std pusha in mov inc dec inc fisubr movsb shll xor sbb lds jb leave add push or loop bnd insl aas inc jnp fnstsw shr mov cmp jecxz inc adc lods adc ljmp out and test mov cmp pushf xchg out int3 incl popa nop add sbb cli into xchg fsubs fcmovbe scas or fs (bad) lock (bad) cwtl imulb or xchg iret ja sbbl mov leave mov in push push lea push cmc in popf adc mov sbbl sub add mov and jo xchg rdtsc xchg xor sub stc loop fild (bad) mov shrb push int add mov cli adc fwait jo jp ret pop jbe stos mov xor mov xor fisubr xchg movsl shll xor sbb (bad) insb inc push aam addr16 add cltd dec hlt mov loop repnz xchg jnp fstl leave xchg inc adc lods and pop mov sbb test push movsb xor and popa cmp pushf stos add out call nop adc or fdivs aam or xchg cwtl stc fdivrs out xchg xchg cwtl (bad) mov xchg mov push fdivrl loope lcall push mov in popf and lret pop cmp imul sahf invd xchg or stc orl inc shrb ja mov sub (bad) movsb dec pop in fwait adc add in mov mov push jle dec pop sub jb xchg rcll cmp in into insb and mov or add mov (bad) jae jl dec adc repz mov es repz jmp das jl inc and test push xor push cmp adc mov rep inc ljmp nop mov mov fisttpl jle sar in mov in add add test add js les jbe sarl loopne popf cmpsl shll in pop push xchg je into xchg mov xchg mov or outsl imull jae xchg jno out test sti aam inc scas (bad) mov (bad) sbb push add mov cli sbb xchg jo jp ret js bts pusha fsubs pop dec pop fidiv roll xor cli (bad) insb jle out jns std add int dec loop repnz (bad) shr mov cmp clc mov pop mov repz pop in mov fwait and sbb bound test push xor xor popa adc adc jmp sti pushl xlat cmp push int3 pop ljmp (bad) test sbb ret mov loope loopne sbb jne xchg int3 ja subl leave fldenv inc push stos inc stos push repz popf adc cmpsb cmp mov and add invd xchg adc mov (bad) (bad) inc test movsb jecxz enter sbb add mov cli or mov outsl mov ret outsb jbe stos fadd pop stos hlt pusha fnop sbb dec fs loop shll xor js mov lock add bound xchg cs lds cmp dec xchg push jnp (bad) (bad) testb mov dec mov repz int dec das push out and test push xor and add movsb popa pop mov ss test out in sub sub push int3 sbb jmp (bad) fdivs gs mov sbb mov repz out test or js les cmp mov leave mov jb incl push (bad) in popf psubusw sub mov and addr16 xchg invd xchg adc sub stc int3 (bad) aad mov enter sbb pop add pop cli sbb test jp ret add or jge fadd jbe mov mov inc dec insb fisub shll xor in (bad) insb jp loopne inc imul or loop bnd js push jnp fnstsw shr popf adc (bad) out pop adc lods daa mov repz pop in mov fwait push and test push xor mov adc les adc cld out std (bad) js and test lret fdivrs gs sti or lcall lods mov lods test adc add les inc push icebp jl mov leave popf cmpsl stc es je mov in popf and mov mov pop sub into and jno fimul sbb xchg stc scas lea jecxz enter sbb inc add je push mov bound stos bnd cwtl pusha frstor xor fidiv mov fs sbb (bad) insb jb ljmp or cmp sub add add aas push jnp (bad) rcrl sarl or fimull pop out and test push xor or popa push mov push pushf movb in cmp xor std into (bad) fsubs lret aam or mov negb int3 hlt adc stos xchg (bad) ja sbbl mov leave mov gs test in popf das fldenv sub leave and push dec lahf sldt add jmp lds (bad) movsl jecxz enter sbb inc add mov cli pop cmpsb mov jo jp ret popa jbe stos lods ret cwtl pusha int3 mov inc dec add add ss fucomip insb jl icebp adc sahf add aam dec loop repnz xchg inc jnp fnstsw adc (bad) fnstcw ds repz fwait jp cmp test mov add add adc shr sar xlat cmp std into (bad) fcomps iret aam or fs inc je sti cwtl sti test adc adc xchg (bad) ja orl (bad) leave mov les in jb fild push stc in popf or mov sub mov jno dec ret (bad) xchg add xchg jmp ret (bad) shl mov sbb sbb clc (bad) mov cli push mov ret or cs xchg ret add pop mov sub pop cmp imul arpl sbb fnop insb jbe lock sahf add hlt mov loop repnz xchg inc jnp fnstsw sar mov pop (bad) fnstcw push mov repz pop sti mov fwait jg jb imul xor mov cmp pushf xchg add out in ljmp xlat pop nop and ss std aam or cmp mov lds nop hlt pop jne xchg (bad) ja add jl mov leave xchg cmpsl shlb pop push popl push stc in popf pop fstps sub mov and push dec mov std mov cmp jmp enter sbb inc add mov cli cmpsb test dec mov jo jp ret imul mov or aaa cmp dec dec fimul (bad) (bad) jb bound (bad) (bad) insb popa push cmc adc in add hlt mov loop repnz xchg inc jnp fldl add add sar mov pop mov lods push mov repz pop sti mov fwait jg jb imul xor mov cmp pushf xchg add out in ljmp xlat pop nop cmp sub fdivs gs aam or fs lahf mov rcrl hlt sbb ja subl (bad) leave mov movsl data16 in inc push mov push in lret popf push fldenv sub mov and dec dec xchg lldt add stc out in popf (bad) and add push adc xchg sub test mov jo jp ret aas jbe stos mov cmp (bad) pusha lret or dec push ficom not jb sub insb adc lret imul pop or dec jmp bnd or jno and sbb test (bad) jmp pop adc lods cmp in mov out and test push xor mov add fcoms adc ljmp nop cmp aaa ljmp (bad) aam or mov icebp cwtl mov hlt xor xchg hlt ja adcl call pushw in fs lods inc lods push (bad) in popf sbb clc cmp pop cmp xor lahf jno dec mov std xchg jmp ret (bad) jecxz icebp enter sbb bound out insl clc cmpsb mov cli sbb cwtl jo jp ret or xor xchg ret lods pusha sahf mov add aas or inc dec jae jbe mov sbb xlat adc mov dec lret loop repnz jnp fldl ror xchg adc (bad) stos mov cmp pop out lock imul ds push xor mov add fcoms adc ljmp nop and push ljmp iret aam or fs inc jb out loopne sub jne xchg cld ja xorl add cmpsl (bad) inc in pop push mov push ljmp cmp mov and jno cltd lar mov (bad) (bad) fiadd (bad) mov rorb dec int add mov cli add xlat jo jp ret outsb jbe stos movsl ret mov mov popa dec jb outsb xchg mov dec xor sbb (bad) insb dec push int3 adc ljmp mov loop repnz xchg aas jb add cs mov cmp clc mov add cli mov fwait jle cmp test push xor add popa adc into push les mov xlat push nop pop int3 or fdivrs (bad) or fs lock stc cwtl ljmp jne xchg aam sahf xorl test scas cmpsl lret in arpl inc mov popf and xchg sbbl sub mov and fs test xor xchg (bad) (bad) roll lods (bad) (bad) jecxz enter sbb int add mov cli pop cmpsb mov jo jp ret arpl stos mov aas mov xor js inc dec je insl xchg mov sbb fist adc or dec bnd es jne and sbb lcall mov or mov mov fwait jge jl dec and test push xor mov xor pushf test incl add nop ds aas ljmp jmp mov sub std mov icebp cwtl out test andb cld ja xorl stos leave test pop push cli inc test popf push fnstcw sub pop xchg jno dec cltd nopl mov lret inc out mov (bad) enter sbb int add mov cli inc cmpsb mov push jp ret or xor mov mov push dec add add jae mov sbb (bad) insb adc rclb dec imul xor mov fdivs pop xchg dec jnp fnstsw (bad) xrelease mov sbb pop lret mov fwait fs aaa out and test mov xor adc enter sub add ljmp lret or fs (bad) lahf mov (bad) cwtl loopne cmp movsl xchg (bad) ja addl leave (bad) cmpsl add add data16 in jb mov in popf adc stos cmp mov and push dec xchg nopl mov enter leave (bad) shl mov sbb bound mov ds test mov jo jp ret insl jbe stos test push mov sbb dec dec fisub movsl rcll add lock insb popa push out push imul inc or loop repnz xchg push jnp fisttpll lcall mov lods cmp lret repz jecxz jle and push and test push xor mov daa mov gs mov loope sti (bad) cmp pop nop and push ljmp iret aam or fs inc pop lods mov fsubrl or mov (bad) ja cmpl call data16 jle mov in popf and mov mov mov and ja sahf nopl loopne fsubr les mov enter add push xor int bound mov fwait add mov sbb ret dec jbe stos mov pusha fisubl pop dec add add daa sbb fist dec imul or loop repnz xchg push jnp fnstsw sar mov cmp aad push leave lods sub xor pop lods mov fwait push das pop out and test push xor xor mov mov ja movb mov jge pop nop add add add mov lret cmpsb mov adc cmc (bad) lahf mov cli sti loopne pop andb cld ja andl ljmp in popa push mov in popf push fnstcw or mov nopl xchg stc (bad) (bad) movb mov rcrb sbb int add mov cli push mov ret or xor mov push or push dec add add add and loopne int jb icebp adc ret or push aas inc jnp frstor shr popf adc (bad) fidivr push mov repz cld mov fwait or and test push xor outsl cmpsb popa adc pushf mov mov xlat xor ljmp repnz or movsl inc mov out sti test andb cld ja cmpl leave leave popf cmpsl lret pushw in jo add in popf or pop push sub mov and outsb dec test or xchg stc jmp roll (bad) mov lods enter sbb push add inc cli inc cmpsb xchg sub mov jo jp ret cmp stos lcall mov jb sub rcrl xor sbb fnop insb and imul xchg mov loop repnz xchg aas add pop fstl faddl out mov and add mov fwait fs ds and test push xor add mov push pushf movb cli incl pop nop sbb adc fdivrs ret or fs inc jge lock cmc test or adc movsl xchg mov xorl test fldenv push push mov mov int3 in popf push fldenv sub mov and addr16 sahf nopl xchg stc (bad) mov rolb push add xor aad push cli cmpsb mov jo jp ret pusha jbe stos mov pusha xlat mov pop dec popa fisubr mov inc xor sbb fist dec imul lret loop repnz fisttpll rol xchg adc (bad) mov lods cmp cmpsb mov fwait insb das es and test mov sbb test adc mov mov push xlat sub ljmp lret aam or mov jmp insb inc inc lods out ljmp jne xchg lds sbbl aam popf cmpsl (bad) data16 pusha push mov test int stos popf and mov sahf pop dec sub mov and jne lahf nopl loopne scas lea jecxz enter sbb inc add mov cli and cwtl jo jp ret jnp sbb scas ret mov or pop dec ficomp xchg roll and sti fild add iret insb jge notl push imul mov repnz xchg push jnp fnstsw (bad) xacquire mov cmp pop cli mov fwait dec das and inc and test push xor xor mov mov inc pushf scas add out in ljmp xlat ja and xor (bad) jmp aaa gs xchg cmp iret mov in cwtl shrl pop jne xchg leave ja cmpl out xchg cmpsl lret add pop push cli inc test add add popf sub lcall mov and pop dec mov std sub stc ret (bad) aad xchg (bad) mov rcrb sbb inc add mov cli add shrb sbb ret dec jbe stos mov adc cwtl pusha lret or inc dec pop fidiv mov push xor sbb fnop insb pusha push lods adc repz mov repnz xchg jne cmp add hlt xchg mov cmp mov mov fwait add add out and test push xor outsl icebp popa add notl adc (bad) out out xlat ss cs sub cld into cltd fsubs aam or fs (bad) in mov negb mov xchg cld ja orl leave popf cmpsl shll in jo mov in popf and mov sahf pop dec sub mov and sub test adc jmp ret inc xchg (bad) xchg jecxz enter sbb pop add add test mov push jp ret pusha jbe stos fadd jbe mov mov popa dec push fisubr mov dec xor sbb (bad) insb addr16 repz testb mov loop bnd popa aas and fisttpll lcall mov and loope in push das xor push and test push xor or popa sub pushf mov (bad) cmp int3 add hlt into xchg adc aam or add test inc jge loopne imull sub xchg xchg cld ja xorl (bad) leave shlb jnp fild push test fnstcw sub std and pop dec orl xchg adc stc rorl jecxz enter sbb push add mov cli push cmpsb mov jo jp ret or aaa stos mov pusha lret or cmp dec inc fisub mov sbb fucomip insb adc ret add push imul sub test (bad) mov loop repnz xchg aas add pop fstl mov (bad) jecxz jno shrl pop decl cmp push and test mov push mov jg lcall xlat cmp cld into lahf fsubs (bad) aam or fs ret mov std cwtl fildll push jne xchg int3 ja subl stos leave xchg cmpsl (bad) add pop push cli inc test popf or out cmp add mov and pop dec orl xchg adc stc rorl jecxz enter sbb inc add mov cli or mov ret jg sbb pushf pusha int sbb aaa cmp dec dec fisubr movsl rcll inc sbb icebp adc sahf add (bad) mov loop bnd imul adc (bad) xchg mov sbb fisttpl aaa out and add test push xor add popa add adc shr out add ss sbb sbb stos into scas fmuls jecxz mov dec mov in cwtl jmp hlt push jne xchg into ja sbbl mov leave mov in arpl inc test shl popf sbb xchg cmp shlb jno fimul add paddw (bad) ret inc xchg (bad) lahf jecxz enter sbb add mov cli or add mov jo jp ret and stos mov pusha mov cmp pop fiadd mov push xor sbb (bad) insb jb out adc imul add xchg dec pushl bound adc xchg mov and mov push out and test push xor sbb mov push icebp adc shr cld ljmp xlat cmp add sbb fdivs repnz or fs in mov add add lock mov hlt adc xchg test addl leave mov jle mov mov popf or mov sub mov and insb dec cltd (bad) xchg popa std ret jmp stc inc xchg and int add mov cli pop cmpsb cmpsb sub mov fnstcw ret push jbe stos mov and mov pop dec fisub (bad) shll xor sbb fist push or add add loop repnz and jge sbb and out xchg mov sub pop out mov fwait push push out and test push xor xor mov mov push pushf xchg add out cmpsl jmp xlat xor push int3 jns cltd into jmp aaa gs xchg xor idivb (bad) cwtl ljmp jne xchg xorb dec push in (bad) mov leave test gs stos inc xchg in popf cmp scas cmp add add and push dec mov cmp popa std ret jmp incl (bad) mov sarb sbb push add mov cli cmpsb test dec mov jo jp ret jl sbb mov or push dec dec fisubr mov dec xor sbb (bad) insb inc push adcl imul xor cmpsl dec aad push loop repnz xchg pop jnp frstor (bad) testb mov and jmp das sub push and test add or popa add pushf movsb add out sti lcall pop nop and push ljmp iret aam or fs inc js out mov hlt adc ja orl leave scas cmpsl shlb fs mov mov (bad) in popf jg lret pop cmp xor mov nopl mov (bad) (bad) fldl (bad) mov rcrb add mov cli cmp test inc mov add add jp ret jg push stos mov cmp xchg pusha int outsl or push dec fisub (bad) shll xor sbb (bad) insb ja out inc imul lret loop bnd jle (bad) or and testb lret dec pop out aaa sarl idiv outsb pop push xchg jae ljmp xor pop outsl cmpsl popa pop mov jae movb ljmp int3 or (bad) fdivrs int test (bad) lock leave cwtl int3 test sub (bad) hlt sbb mov xorl (bad) leave cld cmpsl movsl data16 js mov mov popf pop fstps sub mov and fs test sbb test repz out test mov rolb sbb outsb add mov cli sbb scas jo jp ret jg and mov mov pop dec jae add sub cli (bad) insb adc sarl pop sahf add mov add add dec out pop and fstpl mov das mov subl negb inc and test push xor adc popa ja adcl add out mov pop xlat pop nop push int3 or (bad) fdivrs lret aam or lcall lods cli cwtl loop cs or mov addl leave mov jae incl push std in popf and lods cmp mov and add orl xchg popa std (bad) stc rorb jecxz enter sbb int add push cli add mov ret insl jbe stos mov pusha mov cmp pop ficom mov sbb (bad) insb inc push rcll es insl or dec (bad) mov loop repnz xchg aas add pop fstl leave xchg mov or aam icebp fwait fs es and test mov add ja mov adc cli out in (bad) cmp int3 sbb (bad) into test jns ret aam or sahf (bad) in mov in cwtl sti test andb cld ja subl (bad) leave lods cmpsl shlb in arpl inc ficoml in popf or mov sub pop iret jno dec xchg nopl iret stc orb jecxz enter sbb int add sbb clc (bad) mov cli sbb fdivs jp ret js add or shlb mov inc dec je jno movsl rcrl xor sbb push mov add cli mov loop repnz xchg aas (bad) adc dec rcrl fdivrs xor repz fwait pop das push out and test mov adc pushf mov mov mov jge sub loopne test jno rcl or fs out sbb adc add pop jne add add andl ljmp in fs addl lret popf and lods cmp mov and add cmovs cmpsl stc out stc inc lcall (bad) xor add mov cli sbb cltd jo jp ret or cmp mov shlb push dec insl fisub shll xor sbb in push imul or loop repnz xchg add push jnp (bad) adc (bad) in pop adc lods and out out fwait pusha das xor dec and test push xor mov add notl adc cld out call nop and and fsubs lret aam or (bad) (bad) repnz mov cld test xor adc xchg out xchg mov cmpsl shlb arpl inc pushf push enter adc mov sub mov and arpl (bad) xchg add mov (bad) ret (bad) movsl jecxz enter sbb xor aad push clc cltd mov cli sbb cmpsl sub test jp ret inc jbe stos scas ret xchg pusha shlb inc dec imul pop xor sbb fist jno int sbb orl insl loop repnz xchg jle sub sbb lret adc mov lods dec mov repz aam aad pop das or test push xor sub popa ja mov adc add popl out cli ljmp xlat xor icebp into jmp gs test sbb out mov sti cwtl out pop andb cld ja cmpl in mov jo addl iret in popf psubusw sub mov and insb dec orl xchg popa std int3 jmp rolb shl icebp enter pop inc lock xor inc push lret cltd fs fdivs repz pop fwait in cmp add add fsubs mulb loopne sub pop inc nop mov sub ffree rorl cwtl pop sbb xchg jnp fnstsw stos out call sub add adc lds movb xchg push xor sbb clc int3 movsb ljmp pushf mov shr lods ljmp xlat add ljmp lret aam or clc hlt xchg mov inc adc add js les add add push sarl call paddsw mov in popf jg mov je pop dec (bad) into and push xchg insl adc and mov lods popa xchg ret pop xchg xor and fld1 in jmp clc divb sbb lock pop mov and inc or jecxz loope fiadd xchg mov mov pop add push into sahf sub aaa xchg sub test or (bad) xchg add or mov aas xor mov mov jb stos lods xchg push mov in inc inc sbb jl push cwtl adc sbb fcomp pop xlat pop nop int3 push test sub gs aam arpl pop sbb adc addb test sbbl mov leave cld cmpsl movsl addr16 pop push rorb pop enter sbb das or add jno xchg arpl lock xchg addl add add int les lods lock fnop lds push imul fs sahf push lret push lahf call dec lods sbb jecxz sbb fnstcw add movl and adc jl mov lods sbb sub imul pop lea repnz push dec inc dec mov mov mov std xchg inc jno enter xchg mov jmp inc aas enter (bad) xchg push xor mov ja stos push cwtl adc mov add add nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov stc popa push fild cmp out xchg and inc fwait dec mov loope stc adc lret das cmp xlat mov xchg or call loop or or aam sti or in push jo stos ja shrl data16 mov xlat pop mov ljmp insb test roll jecxz mov add dec out jmp jmp fdivr xchg rolb jg inc mov and cmp cmp fsubrp push pop inc inc arpl mov xor cld aam inc pop inc in cs outsl andl clc fucomip xchg icebp adc (bad) lahf and push gs insl adcl mov ss repz push ja loope mov jbe and cmp loope jle scas rorb xchg adcl pop cmp jg test (bad) stos cli xlat xor repz sub adc mov test mov push inc insb data16 jl sbb cmp rolb mov cli aad ret push jmp insb bound imul repz jb scas push and icebp xchg or ret add out or fisub cmp pop cmp pushf aam sub xchg mov xchg push mov (bad) data16 add inc xchg xor dec out hlt stc call add mov cmp pop jmp iret inc (bad) cmp lret das xchg mov push ljmp push mov dec add jge jl call jle jne mov mov adc fsubs lods lds repnz mov jle in repnz jnp jmp jl fmuls loopne dec jge push adc xchg xorl dec loop fisub or xor lds add add pop mov (bad) mov or repz push lock inc jbe pop sub add push aad je std push cmp ja test or mov fistl jmp out xor adc dec rcr dec stc in or lods (bad) test in jae xchg popf out stc cmpsb push jge cmp push dec jae addl stos mov cli fcmovu mov jbe sub dec push les add out cltd rorl sbb sbb (bad) gs js sbb out arpl dec fsubs lcall cmc (bad) jb mov inc dec lret adc popa jnp xchg sub jle out jne jne dec insb out xchg pop les cmp bound and rol sbb fcomi enter lods push sbb or or enter mov mov and ficompl add inc cs (bad) jbe xchg cld je adc mov xchg mov (bad) and stos xchg js das pop mov pop xor mov je cli dec loopne icebp pop (bad) jns jge call and (bad) je lret mov mov mov mov test inc xchg cmp xchg sub cmpsb push cmpsb push and (bad) stos jb push cmp les das sub push das inc adc in stc xchg jne hlt jmp cwtl notb add push xorl mov pop in popa lods sarl jno pop xor sbb std ss and push mov (bad) ret int inc mov aad insl outsb xchg mov leave movsb and jp dec or ret std pusha adc xor push add inc sbb addl push mov lds mov loop repnz push or insl sub add fwait xchg adc (bad) mov add add shll (bad) fwait or and test mov jbe dec fstps add pusha mov loop pop nop jb jns xchg into jmp adc scas push (bad) jle cmc (bad) lahf mov or mov or adc push mov icebp mov dec clc cmpsl movsl out in pop push jmp fistl je popf pop dec lret cmp pop cmp ljmp adc add test in mov icebp enter add add xor jbe clc hlt mov lahf sbb mov outsl leave test loop mov jg cs test xor mov aaa cmp dec dec mov dec pop and pop (bad) or lds push sahf add int dec lea je inc pop inc or test leave test cmc movsb faddl movsb lods jo mov cli popa inc sub rolb or aad xor imul in sahf sub adc add add fdivrs lret out daa sbb cltd (bad) (bad) repnz add mov hlt js les sbb mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add add xchg fistpll adc imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild add push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov orl sub imul or ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam add fisttpl jle cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb add adc adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or mov adc jg inc xor sub (bad) or jno push inc sub adc test cmc ds in or sbb adc adc adc push call mov add push insl add push pop div jge lds dec sarb cmp add dec pop stos jp lods mov mov fbld cli push ljmp add fcompl dec push mov mov shrl cmp sub xor sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or add add daa and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb je push mov jo jp ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc incb lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul add sahf add mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop add cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test add add mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov add andb mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul add repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl add sub iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov add add popa ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb add fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz add add xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja add pushf movb mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge add ret std pusha mov cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg add add push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and insb fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std add add jmp mov leave (bad) shl icebp enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc add movb mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov add cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall add adc (bad) mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea add mov leave (bad) shl icebp enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov add pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp add dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test add add cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov add sub mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz add add enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add add (bad) shll xor sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 add pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov lret repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb add add int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp add gs aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb add add add adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push add test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb add divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or jle cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb add adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test flds add cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or add daa and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb add push mov jo jp ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov sbb adc andb mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul add add lds mov loop repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp add add mov jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test add xor mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb divl jp ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl add add hlt js les sbb mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov add add xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb shrb sbb ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test ljmp add xorl in dec jnp fist inc ja fmull inc jae fmuls cmp inc nop (bad) imulb pop mov hlt daa pop lea mov mov mov mov sbb mov sbb mov push dec jp loopne xchg imull pop pop hlt es mov mov mov sbb mov pop dec jl loopne inc js fmull inc jae fmuls cmp cmp aad cmp roll ss jb add movsb xlat or mov pushf iret add gs lret popa xchg (bad) pop pop hlt es mov mov mov mov sbb mov and jmp push xorl mov fs and fwait add test rcrl rolb add sbb cmp mov sahf out dec movsb pop ja dec mov (bad) jmp test mov arpl xor (bad) popl jo inc rcrl push jne sbb sbb and inc mov arpl jae and and xchg out jne and fist sub ja inc test xor call sub mov sahf add push (bad) mov pop xlat aas mov cmpsb push jb inc cmpsb adc mov inc movsb add and push xor jno jno,pt loopne inc js fstl inc jbe fmull inc add add or jno xlat or mov lahf roll add xlat or cmp roll cmp add adc test or jb xlat or mov popf aam cmp rolb xor xor lret bound xchg (bad) stc sub xor inc mov fdivs xor test leave sbb adc dec into arpl rolb add mov sbb mov sub xchg (bad) imulb pop mov repnz pop mov mov mov mov sbb mov test fildl cmc dec mov imul fild mov loopne fdivrs jle mov xor push jg dec stos sbb pop lds mov push fist bound insl int mov fist inc ja fstl inc jne fisttpl inc je scas loope inc jns ficom inc jne fistpl dec jle in sbb add dec jg in dec jnp loope inc js ficom inc jbe pop lret mov jnp and in inc mov sbb push mov imul mov pop sub arpl xchg lock cmpsb add inc mov popf negb sbb mov mov sarl scas popa mov fs (bad) xor les mov mov je xor jmp das sbb mov dec mov sbb push ret add add add push lods xor pop hlt lods cmp push in sub jmp (bad) inc jecxz cmp mov (bad) xor cmp mov (bad) xor jmp xor xor xor lcall std xor lret aaa push iret add bound add cwtl lret std xor enter xchg vmovntps ret imulb pop pop cmc sub cmc sub (bad) repz mov imull insb lahf roll add iret add lcall pushl cwtd int3 pushl gs adc dec leave inc xchg and push cmpsb stc pop mov mov inc mov fwait and xor lea lods fist inc ja fstl inc jne fimull or mov cmpsl fimull or pusha rclb inc rcrl pushl ret xor inc lcall shrb xchg pop stos cmp call adc (bad) cmp mov jmp xor (bad) lret out mov loopne lods sbb out (bad) push lds xchg add pusha push jl aam xorl dec cmpsb pop add adc pop fisubr insb ret and roll adc inc scas xor jb dec out aam or cmp mov sub mov xchg dec or les in xchg sti push lret addl addl shrl push (bad) jae add xlat movsl adc jg jns dec enter xor sarl test mov pop rclb sbb out lods icebp loop mov add xor xlat aas cmpsb or add push mov enter mov inc lods pop mov cld xchg (bad) popa aam mov test lods sbb (bad) pop lds cmp push cmp jno dec in mov stos sbb push mov sub add add xchg push mov in popa repnz insl shll sub xchg adc cmpsb xor and in outsb std popa and dec mov mov adc call gs xor dec cmp arpl xor sub mov mov pusha sarb mov mov push je push mov jecxz mov mov mov leave adcl add aad and jno cmc jge addr16 and rcrb ljmp add inc ret mov xor push inc scas cmp push lock push and mov pop mov daa sahf push add popf adc fstpt jo sarl scas sbb aas scas push cltd std pop mov int popf or call add leave xor mov movsl adc xchg negl test pop les xchg add enter ja pop int lcall mov fild or push mov mov add add lods sbb and dec lods sbb repz shrl clc imul mov sarl inc scas sbb lods adc dec scas adc arpl inc mov sarl lods adc sub and stos push jle push ret xor dec mov sarl movsb pop mov jno inc mov sub push xchg (bad) jb push mov aad add lds adc dec shlb (bad) imul add add mov in push mov aad mov xchg (bad) insb fildl pop jle pop les cwtl or dec mov mov pusha enter js dec scas adc cmp mov lahf add push in push sbb mov inc mov pop mov jae sub sub mov xor lahf add icebp dec lods or xor scas adc les jns push mov (bad) sub xchg add sub add mov mov xchg sti pop leave xor scas sbb aas stos pop and (bad) loope xchg jecxz nop jecxz mov aas pushf cld pop les dec scas push jg pop rcrb and sub pop jle aas mov cmpsl add cmpsb adc inc lahf cld pop mov mov add int3 sub aaa repnz das xchg add ss adc mov push shrl pop lret cmp mov add daa (bad) mulb cmp mov nop clc pop mov rolb push ja xor add sarl stos adc nop push outsb flds or adc push jl (bad) lret or sub dec mov mov push ret sub lcall rolw adc pop jg popa iret cmp lret in dec mov jbe inc stos adc inc test jne cmp mov pop rolb sub (bad) int xchg icebp push mov jl (bad) or (bad) xor pop push xchg inc fildl cmp and sub fidivrl mov mov (bad) cli imul push jnp dec scas adc xchg mulb cmp arpl cmp shrl in xchg out inc cltd cld addr16 and push stos add xor negb adc xor jecxz (bad) in dec mov fwait push jne lahf (bad) cmp insl cli arpl add add into aaa mov xchg cld data16 mov xor cmpsb sbb sbb xchg clc gs mov nop clc imul mov loope int3 inc scas adc icebp pop enter jnp push lret ds sbb add cmp adc dec mov lock (bad) das fwait add aad mov mov jno xor clc push stos (bad) pop jmp flds dec mov mov push ret fisttp or mov mov add add nop lock mov das fwait push jnp aaa mov sbb and mov js ss cmc push mov outsb (bad) xor repz mov outsl shrb (bad) in dec test mov dec mov je xor fistl sbb lahf cld pop mov stos or jne fist inc ja fisttpl or insl lahf rolb push jb xlat or outsl mov popf iret add cbtw lret std das bound ret cmc sub (bad) repz lock mov mov mov jge push dec jl loopne inc js cmpsb adc add xor push scas or mov outsb lret fnstenv mov dec cmpsb add arpl sbb adc adc enter dec sahf cli pop mov mov inc mov mov aas lods adc sub mov mov rcll (bad) in inc mov mov pop mov popf stc pop mov sahf add add push lods add mov mov je sub loopne mov cmp icebp push mov push mov gs sbb jmp push inc movsb pshufw add js sbb ljmp sbb mov push lods push popa out dec scas adc addr16 cltd sub mov push jl inc cmpsb add (bad) cli jle pop mov rolb inc cmpsl sbb xor sahf add int lahf inc mov lock push scas adc lods sbb add mov movsl or pop mov cmpsb inc mov std outsl in ret daa mov pop mov xlat add (bad) in iretw inc lods push xchg inc mov jns lea push into dec lds aas enter daa fwait mov pop adc dec mov sub dec mov test popf jb popf pop test test push mov mov mov mov lcall ret sbb and add add inc mov jbe sub mov (bad) xor popf push insb into cmp inc stos sbb lret push jns push mov mov cwtl or push mov mov pop ret inc enter js inc rorb pop jp mov hlt pop mov or sbb fs xor (bad) xor jp pusha leave add cmp sub and and pop fadds or add add fimul adc cmp iret aas stos push test push sbb inc xchg call in mov sahf or and repz or sbb pop adc ret mov jbe dec mov mov shrb (bad) in lds popa lret sub cs push js sarl faddl or popa add xchg sbb sub popf push shrl add adc cmc pop lds xchg hlt add jl cmp (bad) mov pusha les test dec mov push es add mov jmp inc lods add out inc leave xchg xchg icebp dec lahf icebp inc xchg out mov sbb sbb mov mov arpl cmp sbb cmp xor cmp sbb mov lock push into and push fnstsw mov rcrl cmp push add jnp xor push add add pop mov inc mov jnp inc mov test cmp in dec cwtl ljmp dec movsl std adc push lods or xor or das nop add sbb loope mov test push mov mov mov xchg push mov ret stc pop mov mov into movsl or inc cmpsb or int lds cmpsb or in jmp stos ja in pop mov sarb or dec adc and xor test push mov mov ret or frstor cs add push shlb cli pop mov fiaddl or push popf add add sub cs cli pusha lds xchg add jbe pop shll jns pop ret cs push jns dec scas adc lods sub data16 scas push jg dec loopne lods adc sbb in mov pop mov cltd icebp xorb rorl ss leave pusha aam movsb sbb loopne in xchg sbb push mov mov ja dec notb cld pop cld popa enter mov push mov bound sarb pushf add and sbb jl lds add xchg dec mov xchg sbb test movsl or add pop scas aaa (bad) sub and adc (bad) jmp or xor add faddl adc xor sub cwtl sbb cli imul fild fildl sbb enter aad scas push xchg push add cmp inc aam lods dec cld mov mov sbb or xor push push stos adc inc stos (bad) fmull adc jns pop fmuls pop ret add into cmp clc ret insl leave jp dec mov jnp inc lods adc loopne scas adc pop fldl inc mov add sahf pop or out xor in scas adc inc mov push xchg xchg push outsl aam mov mov xchg add cs repnz lret ljmp dec mov jae cmp pop jge dec mov xchg push mov xchg insl aam mov mov mov mov sub mov scas sub add xor cmp pop (bad) jno aas xchg repz scas ss out lds sbb and flds add inc test jbe xor xchg icebp push mov jno cs cltd cli push loope adc insb shll insl mov xchg inc lods or sarb movsl or xor xor pop push fdivl popf pop insl aam fwait pop loop mov push mov lods adc ss sub mov inc movsl adc xchg push shrb negl xor ret insb rolb sbb stos push jo cmp aaa pushf add cmp outsb adc aas mov add inc scas adc fdivrl movsb add jg inc movsl or inc lods pop jle dec lods adc dec mov je pop (bad) xor aaa mov lret sub mov pop stos adc jbe inc test shrb sbb add add aam fwait stc pop mov cmp sub sub inc lods adc repz int xchg pop insl (bad) aaa popf sti (bad) negl inc mov lods adc inc lods adc push add fidivl popf add cmp imul pop js ds movsl or aas aam sahf adc or push (bad) aaa stos adc (bad) negl mov jp cmp adc popf sbb negl cltd adc push jbe (bad) fstpl cmpsb psllw aam mov stos lods adc fidivr add jp dec movb sub fistp aam mov (bad) aaa sahf add sbb lock and ja call add xchg add inc test je inc fildl pop jp mov push into inc lods adc push mov int3 das mov sub or xor and mov xchg sti jmp fiadd (bad) jg cs loopew mov sub jns ret push mov fiaddl xor scas sbb xor xchg cli imul mov out push mov mov lods adc jle addr16 std imul add add lahf adc inc scas sbb mov xchg adc mull inc mov jle dec mov js ds add dec lret cmp dec enter test mov movsb sbb mov add sub xchg add repz js repnz (bad) mov pop mov (bad) ds adcl dec mov and mov jb cmp or adc mov nop adc jbe inc scas sbb add dec icebp push mov xor inc mov sbb jle mov cmp mov (bad) iret gs and dec mov out adc dec lods sbb popw cltd pop mov pop hlt (bad) loopne out push sarl and je dec rcll xlat cmp mulb hlt pop call jne pop leave xor cmp or jae arpl jo dec fimull pushf pop ret daa (bad) das cltd and inc lods dec flds iret xor sub lret mov lds jcxz loopne call in out faddl daa mov mov add arpl push fnsave pop fsubrs dec in rolb push leave dec rolb xchg xchg dec ret pop fistpll inc mov mov cmpsb sbb clc push and cmp cltd es dec mov lret push mov movsb push cld test jae fs cmp jle mov scas sub cwtl or sahf dec pop stos adc add xor sbb pop jmp push sahf sete jg es or inc mov lahf sub push (bad) ds dec fldl cmp shlb and fiaddl dec jmp mov repz int fdivrs popa loop insl cmp jge ss lcall sbb jle inc movsl pop imul fimul sbb test inc add shrl mull and out mov ret repz mov add xchg push mov (bad) icebp push mov shrl pop aam notl (bad) (bad) sub aas fwait mull jg dec lods adc push jo xor or fnstcw cmpsl adc inc mov pushf push jb inc test pushf add pop jae cmp add lods adc shlb cmc push mov mov (bad) das (bad) icebp push mov xchg pop les xchg sti pop mov mov (bad) xor add imul pushf jmp nop add cmp test outsl fadds adc push mov mov movsb vmread inc test mov fstpt mov insb (bad) and inc mov jge sub jmp scas add jo cs push scas or sbb xor pusha mov mov mov dec lods or inc test insb lds xchg cli pop mov mov push lods (bad) lret xor movsl or iret cmp fs je pushf add pop jge push mov stos push jno inc scas push jp push mov test mov test dec mov jns inc scas sbb (bad) clc pop leave cmp repz ret sub xchg jmp sub sub xchg cld imul sub mov jne inc lods sbb cltd add cmp xchg stc data16 xor xchg negb and test dec mov jl add out mov jl inc movsb or dec mov and hlt pop shlb jmp mov mov push mov push sub xchg lods daa xchg push jno inc stos or push ja dec scas push jge dec mov sub fadds or inc lods sbb and out pop shlb repz (bad) cs (bad) pusha shlb stc fs xor mov lahf std pop les aaa lcall xor cld popa shll add push mov (bad) sub inc test jno cmp inc mov and mov test jae ds mov jge aas movsl or loopne mov (bad) lock mov (bad) aaa fwait jmp mov test mov hlt pop mov pusha mov mov inc popf clc push movsl or mov pop les fwait or cmp cs cld popa enter popa lret push push inc test add cmp dec mov add jae inc test jbe pop ret in push mov inc sti mov and push jnp push mov mov test push mov jle dec lods adc dec mov fdivrl loop ret mull xor mov pop shrl (bad) int mov movsb add xor mov mov pop lret xor mov mov pusha mov fs insb mov jl sub dec lods or adc sbb push jmp adc push mov ret sbb sub enterw pop mov sahf (bad) dec fwait lock lcall sub sbb jnp xchg negb and movsb or and sub out pop (bad) xor dec mov (bad) add (bad) iret ss imul sbb cwtl icebp pop mov popa adc jmp in push mov jp dec mov (bad) ljmp sarl nop negl add (bad) sub cld popa (bad) xor lea gs lret dec mov mov stos adc daa xchg std push fs sub xchg cmc pop shrl hlt push mov into cmp mov jns inc lods adc loopne mov sub loop test mov add cmp add das lahf cld push movsb repz ret jecxz xchg lock movsl call add push push sbb shrl test ss in inc mov (bad) cmc stos sbb cmp dec mov test inc mov mov push mov mov shlb icebp pop mov stos emms fnstsw test movsl add lret (bad) sarl mov scas sbb inc test mov shrb negb push jle inc movsl adc inc lods pop jle push mov mov lds insl mov insl lret out movsb or xor or inc test cmpsl emms int3 sbb in movsl or imul loopne scas adc inc lods push xchg dec lods (bad) dec mov (bad) out pop les mov push mov lods adc dec mov jl dec stos or xor lock ret sub mov pop (bad) cs cli fs sub pushf or inc cmpsl adc cmp test stos or adc out pop leave xor add xor popf (bad) arpl es pop ret or test js inc test or xor cltd add inc mov jl push mov jns jo inc stos adc push jnp inc scas push jb cmp movsl adc in mov jl cmp cmpsl (bad) fimul sbb lods adc loop mov mov test mov mov push mov jns inc movsb push jb inc scas adc jno inc test mov lret stc pop mov (bad) xor xchg cli pusha shll lock add sbb mov add fstpt cmpsb or cmp cmpsl adc out mov jg dec mov jl inc lods pop jg inc test mov mov jge dec mov les xchg add cmp or cmp cmp mov test push mov lods adc inc cmpsl or test test jp inc mov lods push jle dec lods adc fstpt lahf add xor adc faddl or (bad) xor add cmp dec mov mov push mov jge dec mov jg push mov and mov jge inc cmpsb or inc mov jns dec mov xchg pop shlb call hlt pop lds cld pop mov mov int mov sahf add push je inc lods sbb test inc test scas adc mov std imul test mov (bad) xor lods push jns cmpsb adc dec mov add add and mov jne cmp test mov test dec lods adc dec mov sub fnstsw dec mov mov pusha leave cs std pop ret repz mov lret (bad) fs cld arpl xor sahf add sti push cmp inc test movsb or push jg inc movsb or cmpsb adc sbb and xchg add xor cld pop mov (bad) das xchg add add add xor stc pop mov enter gs movsl or cs add cmp adc or adc inc scas adc add mov scas adc ljmp cli pop ret add cmp lcall jae push mov mov mov pop mov mov xor mov mov ja inc mov xchg push pop jnp inc cmpsb sti push add push xchg dec mov xchg push mov mov xchg push js dec mov jns aas mov test mov and lods push outsl (bad) aaa mov cmpsb or adc add fild pop jg dec mov and stos or and call std pop shrb clc popa enter outsb fiaddl push outsl (bad) xor inc mov jg push mov xchg dec scas sbb dec mov and add jl dec mov xchg pop les xchg cld popa ret daa mov dec mov add add sub (bad) addr16 pusha shlb out pop ret sub stc pop lds xchg cmc pop ret repz lds xchg ljmp aaa mov xchg add ds adc dec mov sub mov scas adc loop scas sbb mov mov sub les (bad) sti pop int3 xor dec scas adc inc mov test pop ret std fs xor xchg add add rorb sbb push outsb aam movsb adc dec mov test push mov mov mov mov test push mov mov push mov stos adc inc lods adc mov jl inc stos push jle dec mov mov jg push mov shrb in push mov test push mov mov jne inc mov jl dec mov jge inc lods push sub int3 ss adc cmp mov lahf add aad stos adc add dec mov je aaa lcall fs xor dec mov and mov (bad) cmc pop shrl negb sub jl inc scas pop mov adc adc cmp adc inc stos or or jnp dec lods pop test dec mov mov (bad) lds mov ja xor cmp pusha shlb fdivl xchg cmc dec stos push pop mov shll sub jne xor dec mov jnp dec mov add add add (bad) jmp mov jnp dec mov xchg push shrl nop repz mov aam cmpsl pcmpeqd dec mov jg inc mov imul jb and fistpll vpmadcsswd call mov test inc sahf or jge ss (bad) gs push scas adc pop xor pop fildl or dec stos adc mov mov jbe ss in dec cmpsl or lds mov adc and ss cmc pop mov add mov mov lcall sti sub sub (bad) xor enter addr16 int3 (bad) xor enter xchg push dec xorl out dec jge in cs std das bound lret popa xchg (bad) stc sub xchg ret imulb pop (bad) (bad) repnz and jmp push test mov sbb mov adc jns jecxz dec jnp loopne inc jns ficom inc je fmull inc je fmuls add add fmuls jno,pt xlat or cmp roll ss bound lret std xor leave sti arpl xchg xabort pop xchg xabort pop xchg ret cmc sub repz mov mov mov mov in dec jge jecxz dec jnp loopne inc js fisttpll inc jbe fmull inc jae fmuls cmp cmp aam cmp (bad) push outsb les outsb lds jno sub xchg notb (bad) les jne add add sub out cwtl lret std xor enter nop ret cmc sub mov mov (bad) repnz and mov mov sbb mov pop dec jl loopne inc js fisttpll inc jae fmuls cmp mov sahf rorb cmp add imul arpl xchg jmp xorl jecxz dec jge jecxz dec jge loop inc jp ficom dec jl loopne inc ja fisttpl or insb lahf roll imul add pushf iret add gs lret pusha xchg vcvtsi2sdl repz and in and cmp xor sub enter sub (bad) repnz mov in pop push xorl jecxz inc jns fisttpll inc jle in dec jnp loopne dec jnp loopne inc ja faddl adc adc cmpsl (bad) jo,pt jmp fbld rolb xor xor int xor xlat or mov sahf roll xor xor add add xchg xabort pop nop ret pop mov sbb scas loop inc jle jecxz dec jp ficom inc jne (bad) jo,pt aam cmp rolb xor cwtl lret popa xchg (bad) imull pop nop ret pop mov and ret fistp xor add insb mov push dec jl loope inc js fmull inc je (bad) cmp cmp sarb jle in push mov mov mov sbb loop add dec jp fist inc jbe (bad) jae fmuls cmp mov pushf iret add gs lret cwtd lret (bad) xor (bad) cli sub xchg (bad) stc sub ret pop add nop ret pop mov mov mov mov push push (bad) mov sbb jecxz dec jp fist inc jbe fisttpl or jno aad cmp add xor enter xchg lret bound xchg vcvtsi2sdl hlt daa pop mov add add add (bad) repz mov mov jno stc sub sub ret imulb pop xchg leave jns cmp outsb ljmp push iret add gs leave sti cs xchg (bad) imulb pop lea mov mov sbb mov mov mov sbb scas loope inc js fisttpll inc je fimull or insb lahf roll ss arpl xchg enter xchg ret imull pop lea mov add test mov add push test mov push dec jnp loopne inc ja fisttpl inc jp fist inc jne adc daa mov hlt daa pop (bad) (bad) repz lea mov mov mov mov or sub cli fwait (bad) gs xor insl (bad) push inc jae xlat or cmp add xor cld cs xchg xabort addr16 cli sub sub mov add icebp and mov mov sbb mov push dec jp fisubr cltd into add cltd lret (bad) xor iret add cltd lret (bad) xor leave sti cs xchg (bad) imulb pop lea mov mov sbb xorl jns ficom dec jnp loopne inc js fisttpll inc jae fmuls cmp cmp iret add xor add add gs leave cld cs xchg (bad) stc sub ret imulb sub mov mov add mov mov sbb mov pop dec jl loope inc jnp fist inc jbe fisttpl inc jb xlat cmovno or mov popf iret add xor sti aaa jle out dec jle jecxz inc jp fist inc ja fmull inc je fistl adc test movsl xlat or insl lahf roll pushl gs lret gs lret popa xchg (bad) imulb pop xchg ret imulb pop mov clc sub (bad) repz and jmp push add add jge loope inc jns fisttpll inc je fmuls cmp cmp into add push imul pop xchg ret imulb pop lea mov mov sbb mov adc out dec jg in adcl imul scas loop inc jns fist inc jbe fisttpl inc jae fmuls cmp cmp roll add cmp add push fs lret (bad) xor (bad) cli sub xchg ret mulb pop mov mov mov sbb mov pop dec xorb loopne inc jbe fimull jno aad cmp iret add cwtl lret popa xchg (bad) stc sub ret pop mov mov mov mov sbb jecxz dec jge loope inc jp ficom inc jbe fimull stos inc mov mov mov sbb mov sbb (bad) mov sbb mov push dec add add adc js fist inc jne (bad) jno fmuls cmp mov add mov movsl xlat or mov pushf iret add cbtw lret std xor (bad) stc sub (bad) imulb pop lea mov mov sbb mov pop push test mov push dec jp fist inc jbe fisttpl or insl mov fwait int xor lret popa xchg xabort pop xchg enter xchg (bad) imulb pop test into adcb addl add add mov sbb mov sbb in push push xorl in dec jle in dec xorl or imul cs fnstenv out push lods push jno and loop xchg cmc dec movsl (bad) dec lahf cli push cmpsb add push addr16 jno sub mov arpl aas mov sbb cmpsb add sbb popf inc mov outsl sarb fwait cld data16 mov jp inc mov jbe daa sbb dec add mov insl shrl addl add add xor test inc cmpsb add and push cs repnz mov jo sub jae inc mov mov push mov jg push mov mov imul lcall daa xchg cmp jb cs dec test daa mov inc mov test cmp clc pop mov jmp fidivr pushf repnz test test dec mov and cli pop ret xchg (bad) fs add and cld mov or aam movsl adc inc mov push pop jle inc mov xchg cli (bad) aad movsb adc cmp add cmp scas push mov push mov (bad) cs sti pusha mov iret cmp and lcall pop (bad) xor pusha out mov jae aaa mov movsb or and jnp aaa xchg out dec movsl add mov xchg add sbb push mov add add push jge cmp icebp and mov mov sbb xorb loop inc jns ficom inc jne jecxz dec jp fist add jecxz dec jp fist inc ja fisttpll inc je (bad) cmp cmp add push fs push push test mov mov repz lea (bad) cli sub xchg (bad) imulb pop mov cmc daa pop mov repnz and mov push push xorl jmp out dec add jecxz dec jp fist inc jbe fisttpl or or cmp add push rolb ss push ret push rolb ss fs leave std xor sti cs out outsb movsl fmuls cmp cmp add xor (bad) stc sub xchg leave cld cs xchg xabort pop nop ret imulb pop (bad) (bad) repnz mov or cmp roll cmp roll add mov sahf rolb add xor add popf iret add xor std xor (bad) cli sub xchg (bad) imull pop nop ret cmc sub (bad) repnz sub xchg ret imulb pop add add sti cs xchg vmovntpd (bad) imulb pop adc jmp push xorl out dec xchg mov sbb mov pop dec jge loope inc js fmull inc jae fmuls cmp cmp mov lahf roll push insb lahf roll add imul or or insb sahf roll xor xor (bad) stc sub ret cmc daa pop mov mov mov mov mov sbb mov push dec jnp fist inc ja fmull inc jb xlat or insl lahf rolb push cbtw lret std das addr16 iret add gs lret std das popa xchg (bad) xor (bad) cli sub xchg (bad) clc sub ret pop mov xchg sbb mov sbb sbb mov push push test add sbb mov sbb mov add xorl dec jle in dec jp fist inc jbe fisttpl es mov hlt es xchg (bad) stc sub ret cmc sub (bad) hlt es mov mov mov mov sbb jecxz dec jp loopne inc js ficom dec jge in dec jge loop inc jns ficom inc jbe fisttpl or jno (bad) or outsb mov popf rolb xor fwait int xor (bad) ss add pushf into add cwtd lret (bad) xor int loope push test mov mov sbb jecxz dec jnp loopne inc ja fmull inc jae fist inc jbe fmull inc jb (bad) jb xlat or inc jne fimull jno (bad) or mov (bad) imull pop pop hlt daa pop mov repz sub (bad) pop xchg ret cmc sub mov nop ret cmc daa pop add nop ret cmc daa pop mov mov mov sbb addl add mov sbb sbb scas loope inc js fstl inc js fmull inc jae fmuls cmp mov pushf into add gs lret arpl dec test mov mov sbb xorl jnp loop dec test fsubrl adc jle and addr16 pop mov or add out inc xchg in xchg sub push fs pop test cmp fisubrl fsubrs jp sbb or add add popf in cmp loopne (bad) shlb les bound sti pusha mov pop stos cld push mov inc xchg jecxz test daa jns and adc adc push cmpsb clc inc xchg out out mov jge,pn and lret mov or movsl testb cmp sbb test push stos cld dec popf in ds fbstp jg and pop imul xchg daa js and addr16 pop stos std dec sahf icebp inc popl add loope test xor sbb rcll mov push mov inc xchg loopne cmp daa ja sbb or stc dec xchg ljmp and (bad) sub sbb or lods decb repz xchg loop test sub push outsb ret adc mov push stos std push movsb repz xchg jecxz adc ja jl and sbb mov push mov cmp sub and jge and adc scas add stc loope mov cmp sub int3 push jno adc add lcall into add jl sbb je adc push movsl std push movsb (bad) dec cltd in cmp sbb punpcklwd dec movsb testb aaa mov das (bad) aad jbe adc mov push movsl cli dec sahf out inc xchg in xchg sub push push or pop lods std dec sahf lock xchg jecxz test and mov dec sahf out cmp shll ja sbb pop lods cld dec cltd out cmp repz cwtl out mov sub (bad) sbb or mov xor int3 push jo push gs dec pushf cmc inc lcall cltd jmp mov sub int insl rcll mov mov cwtl jmp jbe pop push add stc dec lahf out inc xchg loope test and daa jp sbb popa mov pop stos stc dec sahf in cmp iret and push imul pushf ljmp add (bad) (bad) and lds push sbb pop add or cld dec sahf lock xchg call jge pop jb push imul cmp mov sub shll jb and push gs pop test inc xchg out mov sub and or dec fwait repnz lcall out mov sub shlb jbe es sbb adc add mov cmp loopne adc push punpckldq dec mov stc dec popf out aas xchg jecxz nop jmp and xor sbb or cld dec mov aaa xchg xor and adc scas call dec lods add icebp ds jecxz test sub push jo adc add repnz xchg out mov sub into and pop addr16 push test inc xchg call mov das jle add jl sub shlb mov mov pop test aaa mov xor add sbb cmp cmp jecxz mov sub sbb mov push test iret sub das lods mov pop and jae das test inc test dec cltd call cmp and sbb add fwait jmp xchg and ret mov dec popf out aas xchg jecxz xchg cmp mov jecxz test and mov pop scas call inc xchg out mov daa js sbb or pop scas call repnz or das dec rorb das subl jge and push adc or dec lahf lock (bad) fisubr leave sbb mov adc jp es push jbe adc lods add pop test dec lahf out aas nop in mov sub aad jp sbb rcrl lret lret and sbb push outsb mov push cmpsl sti dec mov cmp int3 push jb adc add stc dec lcall add sub sbb or cld dec mov inc cltd in aas xchg in xchg xor minps inc cwtl in cmp aam jns sbb add lods sti dec lahf out inc xchg in aas xchg out (bad) loope sbb jge fisubrl leave sbb adc mov push test cli dec cwtl out mov sub iret pop outsl rcll rclb or std dec movsb hlt inc cwtl jmp add add adc lret fdivl pop mov addr16 sub mov jmp rclb lret and xor icebp add or mov cltd cmc pop mov jbe outsb ret add dec mov jp inc mov outsl lds outsl int3 and sbb push insb mov inc xchg in xchg and or testb jge sbb add lahf icebp dec mov inc xchg in add cli dec popf out inc xchg loopne mov sub sbb adc add xchg out mov sub sbb mov push movsb cmc inc xchg in cmp push das jle sbb mov push add xchg jecxz adc jns pop outsl rclb mov push movsb hlt inc xchg in test sub sbb adc mov push movsl (bad) dec lcall shlb les data16 pusha scas decb out inc mov sub ret mov pop stos decb out inc cwtl call adc jle pop jno adc xor push mov cmp push add push pop lods decb icebp inc xchg in mov sub fsubrs jl sbb mov push movsb stc dec mov ds das test es sbb lods cld push cmpsl std dec sahf out inc xchg out xchg and and mov dec pushf icebp inc xchg call adc jno adc add cmp cmp jg,pn and enter adc add dec movsb cmc dec lcall add jl,pn sbb mov push add cmpsb clc dec pushf in cmp shll ret adc inc cltd clc push mov (bad) xor adc or dec mov mov insl ret mov pop lods add add test inc (bad) loope xchg sub sbb pop stos decb lods sti dec popf out inc xchg jecxz mov sub into sbb mov push cmpsl (bad) dec popf (bad) dec cltd ljmp and adc or sti dec lahf out inc xchg call jle add int outsl les data16 pop lods (bad) push mov xor rcrb jae sbb or (bad) dec xchg out xchg es sbb adc mov push test cmp fisubrl jp sbb leave push jno adc mov pop mov push stos add stc dec lcall mov cmp jae sbb adc or add lods add lock xchg in mov das test sub rorb jnp sbb or mov add push test dec pushf in cmp shll ja sbb or adc test inc xchg out mov xor and jg and sbb or call add cli dec mov cmp and push push adc add sti dec mov inc sahf lock xchg out cwtl in aas nop fildll jle and adc pop mov push scas add sti dec popf out inc xchg in (bad) fstpl add test dec sahf in add mov sub mov push cmpsl testl aas xchg in xchg daa ja pop push or cli dec cwtl in inc xchg jecxz xchg sub (bad) aad jbe pop push call cmc inc cwtl jmp mov xor sbb or xor jno sbb or add (bad) dec lcall xlat sub shlb jne adc adc punpckldq dec fwait out cmp aad je sbb or add lods decl hlt dec lahf out cmp loopne adc jns sbb adc or sti dec fwait out inc xchg loope jg and adc push xchg adc mov push mov cmp and inc test dec pushf out cmp lods std dec sahf out cmp in mov sub and adc mov push movsb testb cmp and sbb or or add repz (bad) fidiv xchg ljmp ja cmp jb cwtl (bad) pusha out push mov mov sbb mov and mov mov mov sbb mov sbb mov push dec jnp loopne inc jbe fisttpll inc jae (bad) jo,pt aad cmp fsts inc jns loopne inc js ficom inc jne fimull jno aad cmp add push gs lret popa xchg lret popa xchg enter addr16 lret add imul gs leave std xor (bad) stc sub int dec lods or stc dec movsb hlt dec fwait in aas nop in xchg jecxz xchg call loope dec jl loope inc jns fist inc ja fmull inc jne cmp sbb mov pop dec jl loop inc jp fist inc ja ficom inc jbe fcoml push aad sahf std pop mov scas sub fbstp jo sbb sub je es pop rcrb lahf adc dec mov xor push stos add or pop jns dec mov sub sarb lods sbb add add mov clc outsb fisttp das mov mov or mov jae push roll and cmpsb adc aad movsl or and or add lock enter dec jl loop inc jns add and mov mov mov sbb mov pop dec jge loop dec jnp loope stos pop dec xorb loop inc jns ficom inc jle in dec jl loope inc jns ficom inc ja fisttpl inc jb xlat or outsb mov pushf into add lcall std xor cmp or adc ss cli outsb sarl sar bound (bad) imull pop mov repz and mov and xchg inc fcoms push dec jnp loope inc jns ficom inc js fstl inc jbe fstl imul loopne mov scas or and out push mov pop les mov ss add push mov push inc mov addb add in dec mov ja sub hlt dec les xchg inc movsl xor in dec jge in push xchg mov mov adc gs int3 pushl gs lret popa xchg iret dec mov lds (bad) notl out dec jg in dec jl loope inc jns ficom inc jbe fisttpl or jo (bad) or outsb mov (bad) std xor lret (bad) xor rolb add xor int3 pushl arpl add add and xor inc dec out cwtl add outsb repz inc jnp loopne inc mov sub xchg les jno inc jae xlat or cmp aam cmp sub and mov ret imull pop pop hlt es (bad) (bad) repz and mov mov call mov sbb cwtl repnz cmpsb add push mov pusha mov pop loope dec jle loop inc add add fist inc js fisttpll inc je (bad) cmp cmp aam cmp rolb xor cmp iret and iret pop je aad fiadd cmc dec stos pop pop mov xchg out inc mov jno ss jmp mov arpl rorb or sub je and sub sti addr16 fs rorl mov jne sub cmp cmp popa xchg movl add fs leave sti sub sub add test pusha fstl adc stos loopne inc jp loopne inc jp loopne inc js ficom push test mov sbb scas loope inc jns fist inc jnp loopne inc ja mov push dec jnp loopne inc ja adc sub ds out push mov aad aas jb fmuls cmp cmp roll cmp rolb xor xor enter xchg vcvtsi2sdl repz mov jge xor or jno xor inc je fimull je (bad) jno (bad) or cmp cmp aam cmp loopne inc ja fisttpl inc jae xlat or mov sahf rolb xor xor jbe and aad (bad) fnstsw xchg in xchg stc pop mov insl into aas movsl std push mov mov xor enter xchg (bad) stc sub ret cmc daa pop lea mov mov sbb sbb out dec mov pop mov bound into sub cmp push mov add sub and cltd repnz clc jbe cmp cld das bound (bad) imulb pop nop (bad) imulb pop mov hlt daa pop mov mov mov mov sbb xorl test mov sbb mov sbb mov sbb in dec jg out push adcl dec mov cmpsl in dec jge ljmp dec jle in dec jle jecxz dec add add adc jns ficom inc jbe fistl dec jge in dec jl in dec jl loope inc js jecxz dec jge loop dec jge loop dec jnp loopne dec jp loop dec jl loop dec xorl mov out and jle cld xor sti cs xchg (bad) pop nop vmovaps cmc daa pop mov mov mov add mov mov ret pop mov mov mov add add push test mov sbb in dec jnp loopne inc ja data16 scas loope dec jp call scas adc jle sub in dec push push daa jp xor xor xor fdivl test cmp in inc mov jp cmp pusha ret push jg cmp (bad) jmp scas sbb pop mov (bad) sub insb into sub lock (bad) xor outsl aam xchg jmp test add dec mov and stos push insb (bad) and cli push lods add mov test aaa stos pcmpeqw dec pushf hlt dec stos or xor insl rcll mov arpl movsb cld pop lret add inc test jl push add xor stos and cwtl push jno cmp or fildl adc cs cli popa int3 xor inc scas and and negb push js sub mov addr16 shrl test cmp lock lahf pop fnstsw xchg out inc xchg jmp stos add ss repz mov dec movsl push jo pop shlb fdivrl cwtl icebp inc cwtl cmc dec lahf sti push mov insl ret lds jno sbb ret and fnstcw xchg stc pop mov fs pop jp sub in xchg out push cmpsl std push lods add cli dec movsb cli pop ret daa mov pop mov movsl stc push stos add push fs mov cmp das mov dec mov mov dec test lcall sbb fildl adc add add and sbb aas lahf std pop (bad) and cmc lahf add sbb cs push shrb popf add sub repnz shlb jl inc test lods adc inc lods adc inc stos adc inc mov and mov jge dec scas adc loopne mov jp inc test lcall pop shlb push mov mov and scas adc aas movsb or cmp cltd sti push xor xchg dec mov jl add or ss add mov mov inc enter cmp cmc pop mov xchg es sbb adc and sub mov inc cmpsb add and cmp or fstpt xchg cld pop mov je xor in push mov outsl into sub or pop js sub loope xchg in dec movsb cld push mov arpl shrl sbb nop call mov add sbb popf stc push stos add mov rcrb into sub inc sahf notl add adc and sub dec test mov insb (bad) pop js sub mov pop mov jp sub in inc sahf (bad) dec test out fwait notl cwtl cld pop mov imul jns xor imul jle xor dec mov cltd repz movsl (bad) pop mov mov into xor dec mov gs add add jno and inc mov addr16 (bad) fidivl cmc dec cmpsb add adc sub inc popf stc push lods add into sub dec test pop mov push sub inc popf cmc dec test pop mov je daa jg aaa xchg cmc push scas or lods aas mov insb les shrl xchg xor push test push test pop mov sbb inc mov jle pop les xor sbb mov testb mov bound aam movsb pop pop mov nop icebp dec scas adc out data16 inc mov mov pop int mov dec cmpsb or (bad) and (bad) and jno sub jecxz xchg repz mov test nop negb xchg push mov gs test xchg cmc pop lds mov push mov (bad) cmp mov scas adc pop shlb jmp mov mov add mov inc stos or (bad) xor xchg stc pop ret sub (bad) out pop shrb sti gs inc lods push xchg pop lret xor xchg cli pop (bad) cs add (bad) xor xor mov jmp iret xor mov sarl test jl dec mov test mov jp dec lods adc fiadd or add daa mov push mov jg dec scas or inc stos sbb aaa cwtl jmp xor add mov nop cli pusha lret cmp or pop addr16 xor cmp xor cwtl or pop and stos or jecxz mov push pop int3 xor cmc jns inc lods adc inc mov sub sarb mov jp inc stos push xchg push mov mov and (bad) cmp hlt push mov mov movsl push jb inc lods or (bad) xor mov sub fnsave mov inc cltd repz add fs jge sub lock mov pop mov jl cs cmp movsb or adc and inc pushf notb or dec movsb lcall push push rcrb int sbb xchg in inc lahf stc push mov push sbb and aad mov cmp sti pop mov gs sbb cwtl icebp dec movsl (bad) push scas or sub push stos add adc sbb add sub inc fwait hlt dec cmpsb add or mov jl xor dec cmpsl add insb (bad) and xor lods add leave and in fwait notl or jns sub repnz lods pop addr16 into sub pop mov ret jecxz xchg repz scas or sbb xor push scas or and fstpt xchg repnz stos or sbb or sbb cltd cmc push add jae sub dec cmpsb add iret sub dec movsl add insl lret es fdivl add adc fdivs stc push lods push pusha mov (bad) fdivrl adc and icebp push scas or push jp cmp addr16 fdivs xchg (bad) dec lods or shrb sbb cwtl repnz movsb std push scas or lds jge xor jns xor pop mov jle aaa add push scas or je sub dec mov arpl xchg cmp mov test cmp push mov push aas mov push xor dec movsl add imul xchg in inc sahf clc push mov data16 sub ds repz movsb (bad) pop mov outsb leave and xor dec cmpsl add adc and (bad) xor push mov bound add add xchg cmp pop mov jle xor dec stos add mov jle xor pop mov outsb (bad) daa sbb mov ds clc push lods add les jp xor dec test imul jnp xor dec scas or jae sub push test insb lds jns sub icebp dec movsb add adc (bad) and mov inc pushf (bad) dec cmpsl pop push sbb loop add cwtl hlt dec test pop mov addr16 shrl lock test pusha mov test cmp pop mov outsl leave sub dec test pop mov imul cmp push mov mov int sbb xchg ljmp fs and pushf notl add mov jg xor std push mov addr16 and fnstsw fwait notb or and xor pop mov push sub movsl lcall add outsb shrl les jp xor dec lods push pusha mov test cmp pop mov jl cmp pop mov test cmp rcrb int3 sub dec movsb (bad) pop mov fs test cmp icebp dec mov fs xchg cmp repnz lods or leave and dec test outsl lret fnsave xchg in dec movsl add push push sbb out dec mov add add insl leave and xor pop mov push add lock movsl add push jno sub loopne push mov gs rclb adc push pusha mov test aaa nop ljmp fs jg xor repz lods or push outsb enter aas cltd repnz cmpsb (bad) pop (bad) xor push stos push popa mov js das mov aas xchg lock mov xchg cmp mov push sub add aaa (bad) lcall adc sbb sub dec mov imul jns das mov inc fwait repz cmpsl add adc sub dec stos push bound (bad) in dec cmpsb add imul jg xor repnz mov imul jge xor pop mov xchg inc lahf (bad) pop mov fdivrl xchg repnz cmpsl add adc and cld pop mov jl xor push test jae xor add add lcall or fnstenv (bad) in lcall es xor jmp mov insl enter cmp push xor cli push mov retw push jnp xor jmp les jl xor pop mov les jge xor jmp sahf cli push mov insb (bad) pop ja xor pop mov imul jle xor dec scas or and dec lods or rcrl mov sbb sub mov insb (bad) and sub test jbe sub scas or jge xor mov sbb xchg in dec mov rcrw cmp adc and ss repz cmpsl add iret sub push scas or and inc sahf notl or les mov inc lahf (bad) push scas or push jns cs inc mov jb sub out inc popf clc push scas push push cmp pop mov jle xor push stos pop (bad) rcrb into sub jecxz xchg repnz stos add fidivrl xchg icebp dec test jns xor push mov outsl lret fnstcw xchg lock stos push mov push scas or into sub dec stos pop popa mov jge xor repnz cmpsb lcall push addr16 rolb cmp repz movsb std push mov outsb enter xor push mov or adc (bad) nop jmp lahf stc push lods push pop mov xchg cmp pop mov add sub dec lods add (bad) xor push mov push sub inc mov jo and repz stos push popa mov test aaa xchg lock lods pop arpl sbb in dec movsb add rcrw xor stc push lods or adc leave and mov aas fwait cmc add push scas push pushf aaa xchg ljmp jno and xchg in inc cmpsl (bad) push test arpl sbb and xor jmp loopne lods or adc loop lods adc xor hlt pop mov shlb (bad) xlat cmp sbb xor inc mov gs xchg repz mov imul push rcrb lock leave ss pop pusha mov test cmp icebp dec scas or outsb (bad) sub insl aad cmpsl add pop jno cs dec movsb add xor clc pop lds sbb dec scas adc inc mov mov cmpsb push ja dec mov and sub inc sarl xchg imulb and mov iret xor stc arpl xor sub xchg std popa ret sub or cs cmc pop mov (bad) sub cmp cmp xchg cli pop ret xor add sti popa flds or cmp inc lods push jns dec mov jg dec mov xchg (bad) (bad) xor cwtl cld data16 inc movsl or xlat inc lods adc dec mov lret std fdivrl mov jne sub out pushf notb adc (bad) daa xchg dec stos pop imul mov cmp push mov pop mov outsl (bad) aaa pushf lcall jg dec movsl std dec ret es (bad) loope xchg jmp popf stc push push (bad) out dec stos or je push add add and ljmp cmp jmp fnstcw inc stos mov xor ss in dec mov imul xchg hlt pop lds mov pop mov mov pop test (bad) hlt xchg dec mov jnp pop lds jmp movsl add sub pusha lret xor jnp xor ss add push addr16 and dec cmpsb add sbb shrl add insb lret and add add push scas punpckhdq es inc cltd repnz lahf cld pop mov push sbb (bad) fnstsw pop pop mov sbb (bad) out sahf hlt dec movsl incb pop mov jae sub rcrl loopne movsb imul shrl (bad) stc pop mov jg inc movsb add and inc sahf stc (bad) lds jg sub sub mov dec cmpsb add sbb shrb out fwait hlt pop mov outsl lret sub or sub add push scas das (bad) out push cmpsb stc dec test push lods adc lods push jae dec stos adc jle sub repnz cmpsb (bad) push mov jb xor or fnstcw test popa mov lcall fldcw xchg inc mov stos adc xchg push ja push mov fdivrs stos or into aaa mov rcrb xlat cmp xor pushf stc pop mov test insl int xchg hlt push mov leave xor add jno out pop leave xor scas adc loop test imul mov movsl add and outsl xlat ds test imul cwtl (bad) addr16 xor (bad) cld outsl sarb hlt push scas or aad jmp mov jns inc cmpsb or xor push pop (bad) xor xchg cmc push mov lods sbb push mov push mov fwait add inc scas (bad) into xor fwait lock pop xchg repnz lods pop cmc ja add add inc pushf clc xchg pop (bad) jge xor dec mov xchg vcvtsi2sdl repz and in add add or fnstenv xchg rolb push arpl scas loope dec jnp loopne inc js fstl inc jbe fimull or mov push mov addl repz xchg (bad) pop nop ret imulb pop (bad) (bad) repnz mov mov mov mov add dec jg nop notl add sbb mov sbb in dec jnp fist inc js fisttpll inc je fimull jb (bad) or outsb mov pushf rolb xor cwtl lret std xor add xchg lret popa xchg xabort pop xchg ret imulb pop lea mov mov stos sub vcvtsi2sdl add imul insb sahf roll push cmp rolb xor cltd lret (bad) xor leave std xor xbegin add add ret pop pop repz es mov mov mov sbb xorb loope inc jp ficom inc jne fimull jno aad cmp mov movsb add adc test or jno aad cmp add imul arpl xchg (bad) pop mov repnz and mov mov mov mov sbb or stos fisttpll inc jne fimull jno mov mov pushf into pop cmp rolb push fs leave cld cs xchg vmovntps ret pop mov mov mov sbb (bad) mov sbb jmp out dec jg in dec jnp dec mov mov lea lret (bad) das bound xchg ret imulb pop mov repz pop lea mov ret and scas loop inc jp fist inc jbe (bad) in popf rolb imul addr16 xchg rolb push push xlat or jb xlat add es mov mov mov rcll in aad xchg cs hlt push mov jg xor push sub jecxz mov je dec cli inc je fimull or jb xlat or insl mov popf iret add cltd lret std xor roll cmp iret add lcall sti cs xchg (bad) imull pop rcl ss jecxz mov cmp add ss xor ss cli dec cmpsl or rcrl rclb mov and movsl add inc xchg ljmp jno sbb adc mov adc mov sbb int lahf or fldl pop in push mov into cmp (bad) dec mov jle dec mov mov dec lods add sub aas xchg out (bad) jecxz mov jmp xchg out (bad) loope mov dec sarl xchg out xchg in aas xchg in mov add add pop jno and cmc dec test and xor dec test pop mov push daa sbb (bad) in lcall adc sbb sbb mov bound jg xor test pop mov push sbb loop fwait cmc push stos pop pop mov ja aaa xchg jmp lahf cli push scas or sbb sbb mov sbb shrb mov bound add sbb and xlat xor dec mov js sub add pop leave and and sub loopne xchg out inc mov xchg cmp push stos pop pusha mov add pop mov rcrl shrb sbb xchg out dec mov arpl sbb mov inc pushf cmc dec cmpsl add push xor add punpckhwd lcall pop je daa sbb (bad) out add inc cltd repnz cmpsl add push pop js sub lods add int xchg cmp push mov rcrl into daa sbb xchg lock movsb push arpl and mov ds icebp push lods push pusha mov nop jmp mov jno ds repnz jno xor icebp add and das mov jle imul mov xchg icebp pop ret inc cmpsl adc sub repz mov test dec mov mov push fs xor add add lods or cmp mov mov insb fnstsw xchg ljmp adc jmp xor push je cmp arpl sub insl shrl xchg push jnp sub mov imulb add inc stos push imul mov pusha sarb cmpsb adc adc sub arpl push jl xor aas lahf cli pop int lahf stc popa mov xchg cmp mov pusha (bad) xor cmp jb sub stc push ret cmc pop mov nop cmc push lods or or push test push les sahf clc dec mov popa jecxz stos or jb daa stos and call mov jae aaa fwait stc push stos add push bound cwtl hlt pop mov jp ss sti pop mov (bad) out movsl std pop mov jge push mov mov pop sbb inc lahf add mov add mov cmp aad nop add in dec cmpsb add (bad) jg pushf add out stos or ss cld push mov xchg negl xor push jb aaa sahf add pop rorb jno sub or xor loopne mov mov pop mov scas adc inc mov and popf (bad) arpl shrl xchg inc cwtl (bad) dec test jno dec mov je and or xchg dec movsl add pusha mov add fwait ss pop gs add push lods or add movsl add xor negl sbb add or xor in test fnstenv sub dec lods or and jns xor ret in dec mov negb push scas or pop jle xor out inc lahf clc push mov popa mov mov fnstenv nop repz stos add jno ss hlt pop shrl jo sbb daa xchg cmp push mov add add adc and mov insb lret in mov (bad) pop roll mov jb sub cld push scas or fdivl mov push mov lcall cmp test push mov (bad) cmc (bad) sarb test ret shrl out push jne jl lock cmp dec test push sbb xchg add sbb stos and pop mov jno push jno pop imul add add aas movsl or add mov clc ja pop mov hlt daa pop mov repnz iret or jae fmuls cmp cmp rolb xor xor (bad) cli sub cmp nop hlt jnp cmp push push add xchg in dec mov push daa mov inc mov lahf or loope aam push cmpsb add mov test pop mov hlt addr16 xor pop mov jnp dec add enter nop call mov les add cltd add sub fild sub jo cmp outsl (bad) and xor pop mov mov jle cmp mov dec test into xor repnz mov mov mov sbb xorl mov mov sbb xorl jnp loopne inc add in dec jl jecxz dec jp loopne inc js fisttpll inc je loope inc jp fist inc jbe fmull inc jae add or cmp mov popf rolb ss addr16 out and pop xchg enter xchg vmovntps ret imulb pop (bad) (bad) repz mov mov mov mov cli xor int3 pushl gs roll add jb (bad) or outsb mov pushf iret add lcall (bad) xor std xor (bad) sti sub sub hlt daa mov mov sbb sbb adc add add sbb cmp (bad) std xor enter xchg (bad) stc sub xchg (bad) imull pop pop cmc xor leave sti cs xchg (bad) sti sub sub hlt es mov mov mov mov mov mov and mov in mov xor in lahf cld pop mov gs xchg repnz xlat cmp outsb lret notl push insb sbb in movsl adc and loopne inc mov adc fstpl adc sbb and test dec jp loopne inc jp fist inc jbe fisttpl inc jae (bad) jns,pt ficom inc add in dec jnp fist inc ja (bad) bound cwtl lret popa xchg (bad) stc sub (bad) imulb pop (bad) (bad) repz and cmc sub test cmpsb fmuls jo,pt (bad) or outsb mov popf rolb cmp iret add xor lcall add imul add iret add xor add push arpl xchg add push lods add mov pop mov bound mov xchg mov mov mov mov je (bad) das mov enter mov inc ja fmull inc jae dec in pop mov add sub sub (bad) imull pop pop cmc sub (bad) repz mov repz mov mov mov mov (bad) hlt daa pop add xchg (bad) stc sub xchg xabort pop nop ret imulb pop pop cmc sub (bad) hlt daa pop (bad) (bad) repz (bad) (bad) hlt daa pop mov mov (bad) imull pop xchg (bad) imulb pop nop ret cmc sub (bad) hlt es (bad) (bad) repz pop pop cmc daa pop lea mov mov mov mov mov mov sbb xorl mov sbb scas loope inc add jle in dec jl call in add add scas loopne inc ja fstl inc jne fisttpl inc jb xlat or mov lahf roll xor xor leave cld cs xchg int3 (bad) xor cli sub cbtw lret arpl nop ret imulb pop mov repnz and jmp push test mov mov mov mov icebp and mov out and mov mov sbb xorl add lods loopne inc jns add add fisttpll inc je fimull or cmp add add xor enter xchg lret bound mov and lcall mov sahf rolb add cbtw lret std das add int xor sti imul xchg (bad) cli sub xchg (bad) imulb pop mov repz pop mov mov mov mov sbb mov sbb add sbb mov push add mov sbb mov sbb jns ficom inc je (bad) jo,pt aad cmp rolb cmp rolb cmp cmp roll add cmp roll add cltd lret (bad) xor enter xchg vcvtsi2sdl (bad) repz (bad) (bad) repnz ret pop (bad) (bad) hlt daa pop mov jae and je and mov sbb xorl pop les cmp jne fisttpl arpl xchg (bad) stc sub vmovntps ret pop mov repz and mov xchg (bad) sti imul fist inc ja fisttpll inc je (bad) jno (bad) or outsb mov lahf roll imul push iret add cwtl lret popa xchg (bad) xor cli sub sub (bad) repz mov cwtl lret std xor sahf rolb add add cmpsl (bad) jb xlat or mov add roll cmp rolb xor xor cld cs xchg (bad) imulb pop mov hlt sub xchg vmovaps repz pop mov mov mov sbb mov pop dec jl loopne inc js fstl inc jae (bad) jno aad inc jb xlat or mov popf rolb xor cltd lret std xor std das popa xchg (bad) pop mov imulb pop mov mov mov (bad) cmc sub dec test mov mov mov mov sbb mov pop dec jl loope inc jns fist inc jbe out dec jge loop inc jp fist inc jbe fildl adc adc fstl inc jbe fimull or mov xchg ljmp je sub lock mov outsl lret call dec sahf clc push test pop mov push and and inc add shrl adc xchg cmp push scas add adc xor fidivr hlt dec test bound mov mov dec cmpsb cld push mov jo das mov aas cwtl in inc popf add sbb inc cwtl out dec scas push pop scas inc fwait hlt dec mov jle inc cmpsl cld push scas or or sub push outsl clc pop (bad) xor rolb imul cwtl lret arpl xchg (bad) cld cs sahf rolb aaa imul xchg leave cld das jae lcall add push insb add xor inc movsb lcall jbe xor add cmp daa (bad) out dec movsb add notb push ja ss fs stos push and mov jno adc push mov jno inc fwait hlt push or pop mov jne aas mov push dec jl loope inc jp loopne inc jns ficom inc jne add test push inc je loop dec jp fist inc jbe fisttpl inc jb xlat or mov popf iret add cbtw lret (bad) xor (bad) stc sub ret pop mov mov mov mov sbb mov adc adc test or cltd sti pop mov fwait cmc push mov or jbe fisttpl inc jae fmuls cmp cmp add push fs leave sti sub sub add cli sub add sub repz xchg ret imulb pop lea xchg (bad) imulb pop mov repz aam cmp add add mov sbb dec jge jecxz push xchg mov sbb xorl jle jecxz dec jp fist inc ja fisttpl or insl jmp stos pop popa aam lcall (bad) lds in push mov lret daa xchg jmp push jno xor icebp and mov mov clc dec scas add enter aaa cltd repz mov (bad) inc scas js push movsb lcall or sbb dec mov jb pop jnp inc lods push test push mov ret (bad) xor rcrb shrb in mov pop mov insl lret fnstenv jle,pn add mov aaa xchg lock mov mov aaa mov dec test pop add and dec mov jbe sub push stos or (bad) es aas mov add pop mov (bad) out dec test jno daa sbb xchg lock mov outsb shrl mov dec test les sbb xchg in dec mov js daa sbb nop ljmp fwait push fs sub je mov jle cs adc mov inc mov sub adc decl out inc lahf cmc push (bad) imul int3 (bad) xor enter xchg (bad) imulb pop lea mov mov sbb (bad) mov add out dec jle in dec jl out dec jg in dec jnp loope inc ja fisttpl inc jae fmuls cmp cmp roll cmp roll cmp iret add fwait add pop cmp (bad) jo aad cmp ret and sub cmpsb lcall or sub fiadd add sbb mov mov sbb mov mov cmc inc sahf sti dec mov dec movsl sbb adc rclb (bad) lock stos add push xchg int xor sti sub xor cld cs xchg vmovntps ret pop mov lret shll jl sub aam mov dec cmpsb or cmovb or jp loopne inc js fmull inc jae (bad) jno,pt (bad) or jo (bad) or insb lahf rolb imul fs leave sti cs xchg xabort arpl xchg (bad) stc sub nop ret cmc sub mov mov mov mov sbb mov add add pop dec jnp loope (bad) cmp inc mov cmpsl in dec jle jecxz dec jnp loopne add mov sbb xorl jnp loopne inc jns ficom inc jne fimull jp fist inc js fisttpll inc je fimull jno (bad) or insl mov jp gs iret add xor cld das popa xchg (bad) stc sub lcall cld das bound xchg (bad) imulb pop (bad) (bad) repnz add add imul add cwtd int xor lret std xor enter lcall sti sub sub ret cmc daa pop mov mov mov mov sbb (bad) mov sbb xorl (bad) mov sbb in dec jnp fist inc ja ficom inc je fmuls cmp mov popf rolb xor cwtl lret pusha xchg vcomiss fwait into add gs leave cld cs xchg (bad) stc sub sub add cld xor (bad) cli sub nop ret pop mov cmc daa pop mov mov mov mov mov mov jae fimull jno (bad) or insl lahf rolb cmp into add gs int3 (bad) xor into pushl gs lret bound xchg (bad) imull pop mov mov mov sbb mov sbb scas loop inc jl loopne inc jge out dec jg in dec jle loop inc jns fist inc ja fisttpl or add cmp rolb imul imul gs lret arpl xchg (bad) sti sub sub ret ja xchg push xchg cli popf (bad) pushf pop (bad) jb lea push mov imulb add enter xchg (bad) stc sub ret imulb pop mov repz add vmovaps ret pop mov mov mov mov mov sbb xorb loopne inc ja fisttpll add popa xchg (bad) cli sub sub cli sub sub (bad) repnz and mov sbb xorl jns fisttpll inc je (bad) jo,pt (bad) or insb movsl fmuls cmp cmp mov lahf rolb imul popa xchg (bad) stc sub nop ret pop mov mov mov mov mov sbb mov pop dec jle in dec jnp loopne inc ja add add cmovb or outsl mov mov mov mov add roll add cmp cmp cmovno fmuls cmp mov popf rorb cmp mov pushf into add gs lret arpl xchg (bad) pop xchg ret cmc daa pop mov mov mov sbb call in dec jp fist inc jne fisttpl or or insb sahf roll xor xor (bad) cli sub nop ret pop mov cmc daa pop mov mov mov sbb jecxz inc jp ficom inc jbe fisttpl inc jb (bad) adc jecxz xchg in inc cmpsb adc and pop notb add mov imul xchg lock test arpl rcrl enter xor add dec mov jbe ss jmp lods add imul js and sbb add add jecxz dec jl jecxz dec jnp loopne inc js fisttpll inc jl loop inc jns fisttpll inc jne fimull jb (bad) or add gs and xor enter xchg (bad) imull pop mov repnz and mov mov mov mov sbb jecxz dec jnp fist inc ja fmull inc je fmuls cmp push stos sbb xlat or lods fist inc ja fmull add mov push dec jnp loope inc jns ficom inc jbe add push inc jae fmuls jno,pt xlat or mov sub int cmp add push fs lret bound cmp xchg lret bound pushf clc push scas push pop mov popa mov test pop add in dec jl loope inc jns ficom inc jne sub call add into xor gs xchg notb jno cs cmp loop cmpsl add push add add cwtl add pop xchg enter xchg (bad) clc sub ret cmc sub mov (bad) cli cs xchg (bad) cli sub and mov mov mov sbb jecxz dec jp fist inc jbe fisttpl adc test or jno aad cmp fmuls aas jb xlat or mov sahf roll xor xor leave cli sub sub clc sub xchg ret imulb mov mov sahf rolb xor add xor enter xchg (bad) stc sub xabort pop nop (bad) cmc sub hlt sub ret imulb pop mov repz and mov sbb pop dec jl loope inc jns loopne inc js fcoml inc jne fimull jb (bad) adc setne add fs leave sti cs xchg xabort pop mov repz and pop mov repnz and mov jmp push (bad) mov mov mov sbb mov push dec jnp loopne inc add fisub jo,pt aad cmp add insb sahf rolb xor cltd rolb xor xor cli sub add fs leave sti cs xchg vmovaps mov mov mov mov sbb cmpb out dec jge loope inc js fisttpll inc je (bad) inc je fmuls cmp cmp rolb add gs inc stos loope dec (bad) mov sbb jecxz inc jp ficom inc jne fimull jb add xlat or mov lahf roll push iret add cwtl lret std das bound lret std das bound ret cmc daa pop lea mov mov xchg ret cmc xchg add punpckhwd and popa xchg rolb cmp add push imul bound ret pop (bad) (bad) repnz and mov sbb (bad) mov mov mov sbb in dec jl add add sbb add push cmp rolb xor xor lret bound cltd int3 pushl fs leave sti sub sub ret pop (bad) (bad) repnz and mov mov mov sbb mov mov sbb mov sbb mov pop dec jl loope dec jp ficom inc jbe fimull jo aam cmp roll ss iret add push rolb xor cltd lret (bad) xor enter xchg ret cmc sub add (bad) (bad) repz mov mov sbb out and mov mov pop dec (bad) mov sbb scas loop inc jns loopne dec jp aas sar pop xchg ret imulb pop mov mov mov sbb mov sbb mov sbb mov pop dec jnp loope inc js fstl inc jae (bad) aas jb add adc test test adc cmpsl (bad) jno,pt (bad) or outsb mov movsb xlat or mov sahf rolb xor add cltd int3 (bad) xor enter xchg ret cmc daa pop mov mov mov sbb mov mov pop dec jge loop inc jns ficom inc jne (bad) jo (bad) or insb lahf roll xor xor sti cs xchg (bad) sti cs cwtl int3 (bad) xor lret popa xchg hlt insb (bad) or jo aad cmp rolb add cbtw lret popa xchg (bad) xor enter xchg (bad) imulb pusha xchg vmovaps ret pop mov mov mov mov sbb mov pop dec jl loopne inc jp loopne inc ja fistl inc ja fmull inc je fmuls cmp cmp mov popf iret add int3 add cmp aam cmp roll xor xor cld xor lret std das popa xchg xabort pop pop cmc daa pop mov mov mov out outsb out pop divb sub insl into sub inc mov insb leave sbb or add add notl add adc (bad) push scas add mov test dec test pop mov lahf add iret sub or jae fmuls jo,pt (bad) or outsb mov sahf rolb imul arpl imul imul int xor sti sub sub xor cmp (bad) or outsb mov pushf iret add imul fwait into add cbtw lret std das add bound (bad) shlb test inc lahf add pop mov addr16 xchg hlt jg jmp lock xor inc jmp mov pop scas dec or scas sbb sbb roll cmp iret add cltd lret (bad) cmp (bad) or mov aas mov inc jns ficom inc jne fisttpl or cmp rolb add cbtw lret push iret add cwtl lret bound add sub sub movsb add push test dec lahf clc push test push lods add push bound cmp stc sub mov push inc jne aam xor mull push test mov xchg ret push xorl pop mov xor (bad) cld mov push cmp sub sbb jl fisttpl cmp lret pop mov xorb roll xor xbegin out inc jbe (bad) push add and mov adc lahf iret (bad) cs lea stos fisttpl cmp je push clc fs (bad) std sub push dec jge gs (bad) mull pop xchg cmpsb (bad) push ss (bad) mull push mov test or push pop mov scas fimul outsb popf int sub sbb fisttpl cmp lret cli xchg or fwait lret sti sub mov test cltd leave clc das pusha add test jae rolb xor (bad) lock mov (bad) outsl sahf into ljmp pop mov lods fisttpll outsb sahf int sub nop (bad) lock scas fisttp outsb sahf int sub sbb stos fimull cmp (bad) mull push xchg mov addr16 (bad) mull push xchg test or addr16 (bad) mulb adc je roll xor shr dec jle fcoml inc jno rolb xor mov lods fmull jno rolb das pop mov dec jge fisttpl cmp leave clc sub mov adc add cmp leave stc sub mov pop inc ja (bad) add stc sub mov push inc jne (bad) push xor and mov adc jae aad xor and mov adc mov xchg (bad) repz add movsl aad xor xchg (bad) repz mov adc mov mov stos fisttpl imul mov lods fmull push leave stc sub mov push inc jne aad xor xchg ret push xorl pop mov xorl fmuls aaa addr16 (bad) cmc es test roll xor mov lods fmull cmp leave clc sub xor xchg out inc mov cmp cmp ljmp sbb sbb and pop outsl mov push mov push push gs adc (bad) fnstsw add (bad) daa jg and mov push movsb cli dec lahf repnz cltd ljmp je ss cmc addr16 inc cmpsb add and cmp les test inc movsl add (bad) and push scas adc sub jmp lds sbb mov mov jne cmp jb sub lds and mov ds add movsl out push lods or or mov mov add in sbb or insl popf int sub mov (bad) push data16 outsb ret sbb or lahf repnz xchg jmp adc (bad) pop jb sbb sub fimul outsb sahf into (bad) cs nop shr dec jg fisttp inc outsl lahf iret add pusha nop (bad) lock mov sbb stos fimull add cmp cmc and adc je aam xor ret push xorl iret ljmp pop lea mov inc xchg in mov xor in xchg jmp xchg call sbb jnp cmp push lods push push adc rolb aaa addr16 (bad) mulb adc jae push test dec popf (bad) pop lds adc cmp add fs xor (bad) stc pop mov jle inc mov fwait jmp sbb out sahf or and xor sti pop les fwait cli push mov lods adc cmp xor mov stos push outsl sarb sahf (bad) dec mov jle das (bad) repz scas or cmp test sub jae cmp inc mov add outsl lret (bad) xor pusha les (bad) out push mov jnp inc mov mov pop mov mov (bad) xor cli pop mov sahf stc gs sub lock mov movsl ljmp xor cli push lods add xchg dec mov imul popf add xor test dec mov jo mov xchg push mov scas or xor js add adc pcmpeqb xor outsb mov xchg in dec mov insl enter sub ja cmp xor pcmpgtb sbb xlat xor sub sbb punpckldq push cmpsl add pop pop (bad) and xor stc sub mov cmpsb xlat push ss int sub mov test pop add outsb popf int sub mov test xchg enter mov movsl aad xor xchg ret clc sub mov push inc jne aam xor (bad) repz mov adc mov mov lods fisttpl cmp leave clc sub mov push dec jnp fisttpl cmp xor das pop (bad) mov lods fimul ds pushf int3 sti sub mov test pop aaa addr16 (bad) mull push add add mov (bad) outsb sahf int sub sbb test xchg (bad) mulb push test mov (bad) mov lods fmull outsl mov mov stos fimull cmp enter xchg cmpsb (bad) add fist xchg out inc xchg in xchg xor fidivrl xchg icebp inc fwait icebp push stos or sar das pop mov test movsb aam xor xchg or inc int cmp (bad) mull push xchg add lods fmull imul mov movsl aam xor ret push subb int3 cld sub mov cmpsl xlat push xor sub mov cmpsl xlat push ss (bad) hlt and mov adc outsl sahf into std das pop mov stos fimull cmp (bad) divl xchg add movsl aam xor and adc jbe (bad) push ss (bad) push test rolb xor cmc and add add stos fstpt popa mov add (bad) and in ds lock test xchg (bad) hlt and xorl aam xor xchg int sub sbb jnp fisttpl cmp lret sti sub mov xorl bound xorl addr16 (bad) mull push xchg inc sahf mull sub mov test xchg (bad) mulb push test aam xor xchg ret sti sub mov stos (bad) cmp (bad) mull push xchg movsb out add push cmpsl sti push lods sbb mov cmp pop mov or mov mov dec lods or xchg std enterw pop mov xchg cmp ss sti pop mov mov rcll scas adc mov cmp ja cmp nop lock idivb xchg repz cmpsb push mov or adc add imul mov jp cmp push ja sub std pop mov mov add jle dec lods or cmp jbe inc lods adc dec mov je mov and mov mov pop mov jnp xor aaa xchg ljmp fidivrl test outsb call loope mov mov outsl flds add sub outsl pop cmpsl pop (bad) xor mov push cmpsb lcall (bad) pop add pop mov stos or add imul nop repz scas sbb enter and and xor insl enter push mov test inc test jp mov mov inc cltd out push mov jne cmp daa mov xchg cli lods sbb inc test mov pop mov mov and sahf add sub jbe inc mov xchg dec mov add addr16 push mov faddl push pusha shrl sahf (bad) dec cmpsl (bad) pop les sub out notl es ja dec mov outsl (bad) cmp xchg dec mov jle dec mov outsl aad xchg icebp pop mov stos or cmp fidiv out inc popf negb sub jp inc movsb or jae xor add jl dec call or aam fimul add cltd hlt add add sub xchg push mov lahf repz xchg loop mov xchg inc popf cmc dec lahf cli pop mov movsl cli (bad) xchg (bad) imulb into dec sahf jmp xchg jmp add call mov ss cs (bad) sbb aaa (bad) out sbb xor fbstp test es adc push outsl ret adc mov outsl lret add pop je xor sub fsubrl fdivs mov ss inc sahf cli dec popf add inc sahf add pop jp cmp pop mov rcrb mov test inc mov rclb rorb mov mov mov js sub imul in jbe out push dec jle fimul ds popf int sub sbb stos in inc jbe (bad) add hlt and mov sbb test cwtl enter xchg movsl aad xor xchg (bad) repz mov adc mov lea in sbb flds xchg (bad) lock dec jle fimul cld sub mov stos (bad) cmp enter test mov xchg (bad) lock mov adc add cmp lret cli sub popa xchg ret push test aam xor xchg (bad) cmc and push inc jbe (bad) push outsl lahf into add pop nop shr dec jg fimul jo,pt iret ljmp pop (bad) mov lods fmull sub mov add mov jle and (bad) sub sbb mov addr16 ja aas xchg negl sbb or imul inc jne aam xor xchg lret sti sub mov cmpsb (bad) push xor and mov adc lahf iret (bad) jnp dec lcall or sti sub mov scas fisttp outsb sahf int cs lea fimull cmp xbegin out inc jbe aad xor add repnz mov (bad) jae rolb xor shr dec jle fimul cld sub mov test mov xchg (bad) lock mov push outsb sahf rolb xor (bad) icebp and scas fisttp cmp sub mov test pop aaa addr16 leave clc sub mov cmpsb (bad) add repz push xchg movsl aam xor ret repnz mov adc mov xchg cli push leave adc mov add arpl (bad) mov adc test pop aaa imul inc ja (bad) push xor and xorl roll xor (bad) lock scas loopne inc jo aad ss (bad) cmc and adc add arpl (bad) mov adc mov mov lods fmull add popa xchg (bad) icebp and mov adc mov mov scas fisttpll ds add cwtl enter push xchg test or outsl les inc je aam xor jge push movsb aam xor (bad) hlt and xorl (bad) add hlt and xchg scas fisttp ds sahf int sub mov scas loopne inc jo iret ljmp pusha nop mov lods fisttpll insb pushf int3 cld sub mov mov (bad) outsb sahf int sub mov stos fisttpl cmp leave clc sub mov push inc jne aam xor add arpl xorl arpl xorb roll xor (bad) lock mov adc mov mov lods fmull cmp into ljmp pop mov stos fisttpl cmp mov push pop mov stos fimull cmp add ljmp pop mov scas fisttpll add fs ret repz mov adc lahf iret ljmp pop xchg (bad) lock scas fimul cmp sub add mov jecxz inc jb roll xor and xorl roll xor (bad) icebp and scas fisttp xchg or stc push cmpsb testl push cmpsb testb jb fs sub mov cmp mov nop shr dec jle fimul cmp lret cld sub lea fisttpl cmp rolb xor ret repz mov adc lahf iret ljmp pop mov stos fimull cmp (bad) mulb add add adc mov (bad) mov mov adc outsl sahf int sub sbb and leave and insb ret sbb and inc rorl aas outsl lahf roll xor push push xchg lods fmull imul mov pop inc jbe aam xor xchg ret push subb int sub mov test pop ss mov cmp jae fisttp outsb popf int sub sbb test pop aaa xchg les add and mov adc lahf into (bad) sub and mov push aas outsb sahf int sub mov test pop cmp enter xchg mov xchg (bad) lock dec jle loop inc jno roll xor push mov cmpsb (bad) add hlt and xorl iret (bad) cs nop shr dec jge fmull imul mov lods fimull cmp enter xchg mov nop mov jle fisttp outsb popf int add stc sub mov int xor (bad) lock scas fimul cmp sub mov test or push leave stc sub mov pop inc jnp fmull insb pushf lret sti sub mov stos (bad) cmp leave clc sub mov push inc js fadds aaa push push xchg movsb (bad) cmp (bad) mull push xchg movsl aad xor xchg (bad) cmc and test movsb roll xor xchg (bad) repnz mov adc mov xchg (bad) hlt and xorl rolb xor mov outsb sarb out lahf sar das pop (bad) mov dec jnp fisttpl cmp leave add pusha nop shr dec jle fisttpll sti sub mov test cwtl (bad) mulb pop mov stos fisttpl sti sub xchg (bad) push test movsb roll xor (bad) icebp and mov cmovno rolb xor rolb add add and scas fisttp outsb sahf into std sub or imul mov stos fisttpl cmp lret pop mov test or push push xchg movsl aam cmp fwait lret pop mov movsl aam xor ret repnz into push aad cwtl icebp dec xchg call fwait cli inc xchg out pop xchg (bad) hlt and xorl fisttpl cmp leave clc sub mov push inc jne aad xor xchg ret push xorl add add jge fimul outsb sahf int cs mov mov adc je aam xor ret push xorb add cmc dec mov push movsl stc dec mov cmp es aam jle add out lahf adc sbb nop lock mov outsl shrb xchg jmp das pushf roll xor hlt and test cmpsb aad xor sub sbb mov push mov popf roll xor (bad) repnz mov add add add (bad) outsb popf int sub sbb loope inc jo pusha mov test cmp pop mov imul and xchg repz test pop mov push das mov inc pushf negb jg aaa mov inc mov or sbb sub test arpl loope cltd notb push imul mov fs sub out xchg out dec cmpsb add adc int3 daa sbb xchg in inc popf (bad) pop mov jg xor dec test imul test xor out fwait add pop mov insl lret es gs icebp dec fnstcw repnz cmpsb lcall adc iret sub loope xchg repnz test jnp das test xor repnz test jae push mov outsb enter sub lock xchg and dec test pop mov in xchg out cltd sbb (bad) clc push scas push popa mov mov inc mov add ret push jnp xor mov (bad) fisttpll stc push test jecxz out mov jle cmp jp xor leave sub pop mov imul insb mov push mov pop scas add add (bad) push lods add mov pop mov bound dec pushf clc push (bad) dec add (bad) xor adc mov popf sub jecxz mov add mov mov mov jecxz fsubrl jl sbb rclb mov add pop adc jl xor out dec mov jle aaa movsl push arpl and push lods or loop fwait cli pop mov (bad) jmp test imul mov mov jnp inc mov sbb xchg cmc push mov insl enter inc lahf (bad) pop mov cwtl clc pop mov add jge ds stc push mov outsb fistpll cltd cld pop mov pushf cli push mov jae sub imul jp add add add add cs ds stc push stos lcall jne push scas add aam xchg ljmp mov dec test jge xor lock cmpsb add sbb cs inc mov insl enter cmp cli pop mov sbb xchg out dec test add daa test cmp les test ds cli push mov jae sub lcall adc fcomps sbb or push stos (bad) pop scas add add clc inc xchg ljmp add add or cmpsl (bad) push mov jbe xor pop rcrl dec movsb add adc sub pusha mov fwait push fs fdivrl xchg repz mov add cmp outsl iret xor out dec test (bad) negl jbe ss cmc push mov imul test imul mov dec stos or sub data16 and loop sahf add and push test pop mov pop mov data16 and test aaa lcall add add add add ds loope mov xor sbb int jle aas xchg in mov xor daa jns push pushf cli pop stos clc add clc dec xchg out test xor cmc dec mov imul jge sub fldcw sbb cmpsl std push movsl add or adc lret add pop pop rcrl fisubrl in lahf cli push stos add push imul adc jecxz lods or and xchg ds pop mov outsb enter dec test xchg inc add (bad) ljmp and lahf (bad) pop mov mov jnp cmp insb xlat jns and sbb adc adc or or adc sbb shll jb or mov pop mov fisttpl cmp cmc es xchg cmpsb (bad) push ss (bad) pop mov stos fisttpl cmp leave stc sub mov subb add add inc jo sar das pop mov lods fmull sti sub mov scas fimul mov jne push jo adc rcll add hlt inc mov sub sbb adc sbb daa pop mov mov adc lahf into (bad) sub sbb test xchg (bad) mulb push test mov fwait cmp mov punpcklbw gs gs pop mov insl aam mov cmp clc push fiadd add add repnz mov adc mov nop (bad) lock scas fisttp inc jbe aad xor xchg (bad) hlt and xorl roll xor mov lods fisttpll imul mov test pop aaa data16 lret sti sub mov test or xchg (bad) cmc and adc add (bad) cmp enter xchg movsl aam xor ret push xchg movsl aad xor xchg (bad) icebp and mov sldt add outsl sahf into (bad) sub sbb jnp fisttpll imul mov scas fisttp outsb popf int sub mov stos fimull cmp leave clc sub mov cmpsb aad xor and mov adc movsl (bad) add cli sub mov test or addr16 (bad) mulb adc mov nop shr dec jg loopne aas jo iret add arpl (bad) mov adc mov (bad) mov add add dec jg fimul cmp sub mov test or imul dec jge fmull imul mov test cltd leave add das pop xchg (bad) icebp and mov adc lahf iret pushl pusha pop hlt and (bad) mov adc mov (bad) mov lods fisttpl cmp leave clc daa push xchg movsb roll xor xchg ret repnz xchg lods into adc mov xchg (bad) push test add adc mov ja xor dec lcall leave sbb push fs pop mov add adc mov push movsb hlt dec test mov lret and loopne mov xor aad adc mov cmp repz mov jb and jg inc lcall and cld pusha mov pop lods cld push mov inc xchg in pushf repz mov popa mov push stos add mov mov imul lock lods adc sub nop in push les test inc mov insb (bad) xor xchg ds out push mov popa mov pop mov imul jmp mov jp inc mov jne sub cmp gs insl (bad) das xchg clc popa (bad) and ds cli arpl sub outsl lret in dec movsl cmp dec cmpsb add adc cs adc loopne fwait clc push mov (bad) gs xor inc pushf add add pop mov jb cmp mov ja cmp jle ds sti outsl iret xor (bad) and inc movsb add sub in dec stos or adc sub loop mov outsl (bad) and loope lahf clc pop mov addr16 xor sbb dec mov popa ret loopne lcall das xchg repz mov arpl jae and (bad) jmp scas pop jne and cmp popa mov jl jmp (bad) (bad) sub test dec mov sbb mov cmp lret fidivr add and inc stos add js cmp sbb mov cwtl cli push scas or and inc popf add into xor js xor icebp push mov scas adc sbb fldl jl xor push mov jbe cmp popf clc push mov js xor jnp xor xchg sti push mov outsl (bad) daa sbb mov gs xor jl dec mov addr16 lea mov cmp outsb rcrl sbb aam xchg xor in dec test popf cld les cmc pop mov xchg ss dec lods push gs sub fild push mov ja ss in dec lods or and loope mov inc xchg in inc cwtl in inc pushf add adc and pop mov cmpsl sldt add add xchg negb and in mov sahf add sbb lds ja xor pop int xchg hlt push ret sub je xor icebp dec test mov arpl cmp or adc and push popa les stc push mov pushf sti pop mov test aaa mov pop mov popa mov test dec lods or sub insl lret xor sbb sub in pushf lock mov add add dec test popa mov insl leave sub repz popf icebp inc fwait out inc xchg out cwtl jmp mov cmp cmp loopne (bad) in nop out xchg in inc cwtl lock add pop mov jb and cmp push mov bound jnp sub xor add push stos add add int3 and jecxz xchg ljmp imul jno and sub add add xor cmp inc sahf cmc dec mov push lods add adc lret fstpt xchg jmp stos add pop pop mov rclb jb and and xlat cs xor dec movsl (bad) push mov mov into sub inc xchg out dec movsb cld push stos add or mov imul jo push je and inc fwait repz cmpsl call add fnstenv xchg ss inc lcall lahf clc push test pop mov pop mov pop mov add xlat cs aaa (bad) loop (bad) loopne xchg xor fidiv test xor fsubrl (bad) aam jns daa jp and pop jb sbb adc adc add outsb rclb mov pusha mov pop scas add stos add std push stos add add pop mov pop scas add mov popa mov fs popa mov bound pusha mov fs insl ret lds imul (bad) and js and sub sub fidivl mov push mov fs jl xor pop mov pusha mov addr16 sub xor cmp cmc dec mov dec movsb cli dec test outsb leave and fidivl out cltd stc pop mov imul jno and sub xor cmp inc xchg in inc fwait add push mov pusha mov jns das mov cmp push mov insl leave and es add mov aas cwtl hlt dec mov jp sub add xchg out inc fwait repnz mov push mov imul jae cs cmp push mov pop mov rcrw je sub inc lahf (bad) pop mov arpl jo push jae and xor loop (bad) in (bad) out xchg ljmp dec mov imul je sub inc mov fildll shlb jge das mov add add xchg out inc fwait repnz mov gs jp xor dec test pop mov bound jne and in xchg ljmp dec lahf cmc dec mov insl popf int sub mov stos add adc mov (bad) mov mov adc jae roll xor (bad) lock scas fimul ds popf int3 cld sub mov cmpsb (bad) add imul mov cmpsb fimull cmp enter push xchg mov nop shr dec jge fisttpll imul mov cmpsb aad xor xchg ret repnz push xchg mov (bad) mov stos fimull cmp (bad) mull push test mov (bad) mov lods fimul cmp xor mov lods fisttpl cmp leave clc sub mov adc add popa nop shr lcall adc test xor out add aas xchg lock scas add scas push push mov arpl push mov inc lcall shrb xchg cmp mov inc nop fisubr fdivl xchg in mov dec mov gs (bad) lock ret add or movq inc mov gs sbb cltd icebp push mov jns mov hlt push mov mov add xchg (bad) push cmp sub test cmp add jno xor sub out ret sub cmp lcall push mov xchg insl fiaddl add sub lret add repz les xchg add dec mov mov pop xlat inc test jae cmp (bad) dec mov jae sub cmp pushf lret sti sub mov fisttpl cmp leave stc sub mov cmpsl xlat pop aaa addr16 (bad) mulb push xchg mov into add je and sbb sub lods fmull imul mov test pop ss (bad) push xorl jae sub and adc add mov jbe sub xlat sub (bad) in dec mov push mov imul mov jae daa and push push xorl add bound xorb iret (bad) cs mov mov add add inc je aam xor ret add mov pop inc js xlat pop ss (bad) push test rolb xor shr dec jle loop inc jb roll xor mov mov adc mov (bad) mov lods fisttpll std sub mov fisttpll jno rolb xor mov scas fisttpll std sub sbb fisttpll cmp sub sbb or imul add das pop icebp push dec movsl cli push stos add jb sub xchg out sahf cmc pusha mov mov sub inc je fisttpll std sub mov lods fmull cmp cli sub mov cmpsl (bad) push xor and adc mov xchg (bad) push (bad) mov adc mov nop add pusha mov mov lods fmull imul lret xor xlat daa jg add inc pushf out inc pushf in cmp dec lahf repnz xchg out mov mov into xor push mov popa mov ja sbb push popa mov push scas sti dec lahf cmc dec test push stos or adc sbb and inc (bad) fidiv xchg inc lahf clc dec mov jae cmp into inc stos add and sub pop (bad) sub xor dec movsb push mov and add jp push enter pusha rcrb loopne mov mov sarl movsl pop je push les popf jmp sub aaa cltd add and daa jl mov cmp roll xor mov lods fisttpll std sub mov xorl pop mov (bad) cmp enter mov dec rcrl or scas fisttp outsb popf int sub mov (bad) cmp enter xchg add lcall out inc je aam xor (bad) lock dec jg fimul sti sub mov cmpsb (bad) add repnz mov adc jae roll xor (bad) lock dec jle fisttpll imul mov push inc jne roll xor (bad) icebp and scas add adc or addr16 (bad) cmc and adc mov mov stos fisttpl cmp enter mov test or imul dec jnp les je pop jp jno loope inc jo sar add xchg (bad) cmc and adc mov nop (bad) icebp and test movsb roll xor ret push xorl popa xchg (bad) lock mov adc lahf iret pushl popa nop (bad) mulb push xchg movsl aad xor and fisubrl fidiv fisubrl fidiv mov inc fwait clc dec lods add mov mov cmp stos pop xlat inc mov arpl sub test cmp adc or sbb push mov pop ret lock mov adc outsl mov fiadd test cwtl (bad) mull push xchg cmpsb (bad) push ss (bad) push test lods fmull imul mov stos fimull cmp leave stc sub (bad) adc xchg (bad) push test add in inc je rorl cmp sub mov cmpsl inc mov pop lock scas fisttp outsb sahf into (bad) sub sbb jnp fimull cmp (bad) (bad) cs nop (bad) icebp and scas fimul cmp sub sbb stos fimull cmp enter xchg movsl aam xor xchg (bad) pop mov cmpsl (bad) push ss (bad) push xorl rolb das pop mov lods fisttpl cmp lret pop add mov stos fisttpl cmp jno rolb xor (bad) lock dec jle fimul cmpsl stc dec lahf testl test sub negl loopne movsl stc pop scas add ss out push lods or adc or sbb (bad) call lods or add hlt push mov pop lods (bad) push mov jae xor mov lods fisttpll sti sub mov cmpsl (bad) add hlt and mov add lods in push dec jge fstl je roll xor (bad) icebp push lret pop mov test or push push xchg movsb roll xor ret push xorl arpl dec stos or mov pop lods add (bad) loop (bad) fsubrl xlat sub shrb jg sub fldt sbb (bad) cli pop mov outsb push test add jg sub fildll and mov adc lahf iret add pop (bad) mov scas fldl add or insb pushf int3 sti sub ret repz mov adc mov (bad) mov lods fisttpll imul mov test outsl lahf into (bad) sub and mov (bad) outsb inc scas loope inc jb rolb xor ret repnz mov adc mov xchg ret push xorl imul push cmpsb std dec popf hlt dec popf out inc xchg out inc xchg in mov xor (bad) das (bad) in add add mov (bad) jecxz lcall or loop movsb or lds jo adc mov pusha shrl out iret das mov inc cwtl out dec movsl add adc and flds outsb rcrl lret and sub fildl cmp add inc mov loop rcrl fadds add lds std pusha mov je push ja sub xor sub (bad) test out dec sahf repnz (bad) fist fs ret rcrl sub add add inc nop fidiv mov dec lods or or das xchg call mov jb cs mov xor pusha mov cwtl enter mov ja xor xchg jmp jns and fstpt lahf add (bad) and xchg das jge sub sbb sbb (bad) sbb adc mov pusha mov dec mov dec lahf sti pop rcrb mov arpl mov cmp sub add add gs add je and aam cwtl add adc shrb mov inc mov push lods or adc into xor popa shll loopne xchg cmc push mov jge dec cmpsl pop pop mov push inc mov nop sti lds test inc stos push push dec movsb add push jbe cs in dec movsb hlt inc popf icebp inc sahf repz fwait hlt dec sahf add pop je xor pop mov je sub out inc lahf repz mov js inc cmpsl (bad) pop mov push daa mov cmp add add sbb das xchg ss in sahf stc pop mov fs daa js sub push mov push mov arpl sub cmp inc cltd notl mov les sub sub sbb aam xchg lock cmpsb pop data16 das (bad) icebp push mov jns cmp and or and (bad) sub hlt pop mov cmpsl or (bad) xor ja aaa xchg negb push jg inc mov nop cmc pop mov add sbb pop mov lds xchg repnz mov sahf clc pop mov movsb or and popa shrb lock mov mov mov push scas adc aas movsl add mov lahf add mov xchg repz mov sub movsl push imul cmpsb add adc adc adc jg dec cmpsl add aad xchg repnz cmpsl add push outsl lret es cmp nop jecxz repnz add dec into cmp xor ret repz in sbb jl fisttpl cmp leave clc sub mov pop inc jbe aad xor xchg ret dec jg fisttp ds popf int sub sbb scas fild push inc jbe aad xor ret push subb int3 cld sub jmp dec jns fimull cmp leave cli sub mov cmpsb (bad) or push lret pop mov movsl aam xor repz mov adc lahf into (bad) cs lea add mov stos fimull cmp leave stc sub in sbb or push lret pop mov cmpsb aad xor and mov adc roll xor (bad) icebp and mov adc jne (bad) push xor es xchg movsl aad xor and mov adc lahf iret ljmp pop mov lods fcoml inc outsl lahf iret ljmp add popa xchg (bad) icebp and mov adc mov xchg (bad) lock add add mov adc mov nop (bad) lock mov add pushf int3 sti sub mov test pop aaa addr16 (bad) cmc and adc movsb roll lahf add enter pop xchg (bad) push test rolb xor (bad) lock scas fisttp aas outsb mov nop (bad) lock scas fimul ds popf int sub mov mov (bad) outsl sahf into (bad) cs lea stos fisttpl cmp leave stc sub mov jp (bad) cmp enter xchg stos fisttpl cmp leave clc sub mov test cwtl enter xchg xchg out test es and sub loop mov inc mov push scas pop jb adc loop fwait std push add ss leave stc sub mov stos fimull cmp lret pop mov mov adc je roll add imul dec jns (bad) cmp lret add pop mov stos fimull cmp int3 std sub xchg (bad) icebp and mov stos add in sbb jl fmull insb pushf into std sub and mov adc mov xchg ret push (bad) mov sbb stos fimull inc loop stos sub or mov push test push cmpsb clc mov dec jns fmuls cmp enter xchg cmpsb fimul aas outsb sahf into (bad) cs lea lods fmull insb pushf int sub mov stos fisttpl add cmp lret pop mov lods fisttpl inc jo sar das pop (bad) mov scas fisttp ds sahf into std sub sbb test xchg enter xchg movsl aam xor (bad) imull pop mov cmpsb xlat pop ss add cld sub mov test pop aaa xchg (bad) cmc and adc mov nop (bad) hlt and push jnp fimul outsb lahf iret add bound mov mov pusha mov push cmpsl testl xor (bad) sub sub mov ss icebp dec lods or aad mov dec leave ljmp pop (bad) mov scas fimul outsb sahf int sub sbb jl fisttpl cmp lret cli xor (bad) hlt and mov adc mov xchg ret push (bad) mov adc jae roll xor ret repz mov adc mov cwtl enter xchg lods add notl inc xchg ljmp dec cmpsb or add pop jae minps loop nop out mov (bad) es (bad) dec mov pop mov pop mov imul push pop jne daa jg xor push stos add ret sbb sbb cmp cmc push stos or leave sbb adc mov pop mov push test push push mov mov fiadd negl adc insl mov jge sub das test inc cltd ljmp aaa mov xor mov push pop jge sub dec cmpsb sti pop lods adc and pop arpl imul cltd cli pusha mov xchg negb adc xor cmc dec test je aaa mov push mov je sub lds xchg repnz mov and mov fwait add sub (bad) pop mov mov mov inc mov add jo mov cs push inc xor inc cmpsl or xor push cmpsb (bad) push mov fistpll cltd icebp dec test and cltd repnz sahf notb pop pop mov jnp sub cmp popf sti push mov mov fsubrs mov xor cmp out inc xchg in inc pushf out inc lahf (bad) dec cmpsl add cmp and test (bad) rcrb dec scas or and hlt pop mov mov fs lcall add inc test js cs inc mov movsl add xchg cld pop mov cmp push scas push jb sub jmp mov je xor push test imul ja and sahf add sbb sub push scas add rcrl ret shlb ja adc push sbb sub cld push scas push insb aam popf add mov pop outsb shll adc xchg xor in dec mov push lods or enter and (bad) xor jmp xchg notb adc fnstsw xchg stc pop add and test shrw mov dec cmpsl push addr16 lcall ss std lds (bad) icebp push mov popf stc push mov ja cmp jl and sbb es fidivl xchg stc pop mov movsb add xor ret and jnp cmp clc addr16 add mov mov xor sub jo xor add add (bad) les pop test push mov xchg cli pusha lret lcall adc cmp mov inc mov push xor stc push scas push pop mov bound push movsb clc push test fs sub loop pushf notl adc in dec scas or add push gs popf push popa (bad) das xchg cld gs mov gs sub push mov (bad) loope movsb or xor insl (bad) sub in inc movsl adc sub jp inc test jo das pushf pop push xor cwtl repnz mov (bad) rcrb (bad) sbb pop push jecxz inc jae rolb xor (bad) lock scas loopne inc outsl sahf int xor xchg (bad) hlt add pop mov test fisttp outsl sahf int sub sbb jl fisttpl cmp lret pop mov cmpsl xlat pop aaa addr16 lret cli sub mov test cwtl (bad) mull push xchg adc push mov test or addr16 (bad) mulb push xchg stos fisttpl cmp leave stc sub mov push inc jne aad xor xchg (bad) repz mov adc mov mov lods fisttpll imul mov mov adc mov xchg ret push xorl arpl xorl add (bad) cs lea scas fisttpll aas outsl sahf into (bad) sub add jl fmull ljmp pop mov lods ficom inc jno (bad) push ss (bad) sub lea lods add adc adc pushf int sub pop dec jg fisttp aas outsl lahf iret ljmp pop pop lock pop mov fldenv outsl rcrb mov adc mov xchg ret push (bad) mov adc mov xchg ret push (bad) mov sbb jle fisttpll std das popa nop imulb pop mov add dec jp fimull cmp enter xchg cmpsb aad xor xchg ret repz mov pop inc jbe (bad) push ss mov fmull imul mov test xchg (bad) mulb push test stos (bad) cmp pop cs (bad) push xchg movsl aad xor and mov adc mov xchg ret repz mov stos fimull cmp mov mov add push add jecxz inc jae roll xor (bad) lock mov (bad) outsl sahf into ljmp pop mov mov adc mov (bad) mov lods fmull insb fwait lret sti sub mov stos fimull cmp enter mov scas fisttpll sti sub mov test cltd enter mov test pop aaa xchg (bad) push xorl or push lret pop mov jae add rorl add sub sbb jl fmull cmp lret cli sub mov stos fimull cmp roll xor (bad) lock dec jg fimul ds popf int sub sbb stos fimull cmp leave clc sub mov pop inc jbe (bad) push xor sub mov lods fmull add jp sbb or jp aaa lret or imul dec jns fmuls cmp enter xchg (bad) icebp and mov adc mov add popa xchg (bad) icebp and mov adc xchg and out mov sub sbb es inc cmpsb stc dec cwtl ljmp lcall sub push test int mov mov mov (bad) mov sub imul or imul and mov (bad) outsl lahf into (bad) cs mov scas fisttp inc mov xchg sub pop lods add mov jns inc cmpsl lcall xor xchg repz mov push mov cs ss jo es mov inc mov add sbb fs pop mov pop lods call add add mov pusha ret les sahf pop insl shrb mov adc jnp daa test ss out inc mov outsl leave sbb notb or pop mov jo mov pushf ljmp inc xchg (bad) hlt and add xorl roll xor shr dec jg fimul aas outsb sahf into (bad) cs lea ljmp mov stos fisttpl cmp leave clc daa push mov jge fmull insb fwait lret sti sub mov test pop ss (bad) cmc and sbb jae or cld sub mov test cltd enter xchg movsb aam xor ret push xorb aad xor add pop fnstcw loope add sub xor mov xor and jne sub sub aas sahf add outsl (bad) aaa fwait out inc jbe (bad) add mulb adc mov add adc or loopne inc jns (bad) cmp (bad) mull push xchg mov nop (bad) lock dec jle fisttpll cld sub mov test or addr16 lret sti sub mov add xlat push ss (bad) push xorl rolb xor pop mov fs dec sahf in dec test push mov pop mov pop mov add daa mov cmp and cs inc lcall sub or mov mov jg inc lcall push mov test inc cltd (bad) imul pushf stc push mov mov cwtl hlt pop mov xor sbb add jne xor push lods call add out push lods add pop arpl sbb gs stos or add xor push mov jp inc lahf (bad) dec movsl add das (bad) out inc mov imul cmpsb add or xor (bad) cmc push mov mov dec stos adc jns cmp adc cmp xchg notl and xchg push mov xchg dec lods adc jle add or xor adc cmp adc xor add (bad) ss icebp dec mov je xor mov dec lods push arpl pop stos add push jb aas mov mov cmp or cs stc pop mov jnp inc mov in dec mov pop mov dec movsb testb ds out (bad) in dec test js sub iret xor imul lods adc jmp enter jno inc scas push jg dec mov js xor mov arpl pop ja xor jl dec stos push bound pop mov jge inc sahf jmp push jo cs cld push pop mov mov jne jp jb ss sub jmp mov mov pop les push jno and xor pusha mov jbe cmp stc push add mov sub (bad) cs std imul fwait stc dec mov mov dec mov test dec mov add add xlat inc test fs sub jg cmp sbb adc dec movsl std popa enter inc scas adc mov push mov popa (bad) sub push outsb fiadd inc xchg jmp stos adc mov scas sbb dec scas push jne cmp mov push into std sub and adc mov imul mov lods fmull cmp lret pop mov cmpsb xlat push ss int add add add sbb jnp fimull cmp enter xchg movsl aad xor xchg ret repz mov adc mov (bad) mov mov adc jae aam xor xchg (bad) repz mov adc jns (bad) cmp (bad) cmc and adc fist inc jno roll cmp leave stc sub mov pop inc jbe aad xor and test roll xor (bad) icebp and mov (bad) outsb sahf into std sub add and add movsl aad xor xchg (bad) hlt and (bad) mov adc mov xchg (bad) lock mov adc mov (bad) mov mov adc mov xchg ret repz js fadds aaa addr16 (bad) mull push xchg movsl aad xor and push dec jge fmull insb fwait lret cli sub mov cmpsb (bad) add repz mov adc mov mov mov loope inc jno rolb das pop mov lods fmull cmp lret pop xchg jl fmull cmp lret pop xchg and sub lea (bad) aas out int xor ret push (bad) mov adc movsl aad xor es xchg test or push pop (bad) mov xchg cmpsl xlat push ss (bad) mulb push inc jbe xlat push ss lret pop mov stos add add (bad) outsl lahf iret ljmp pusha nop mov mov adc mov xchg (bad) hlt and test aam ss (bad) mulb push xchg stos fimull ljmp pop (bad) mov mov adc lahf iret ljmp pop mov lods fisttpll outsb sahf into (bad) cs mov scas jecxz inc je aam xor and mov test jb push lods push pop scas add mov add ds cld pop mov xchg stc push test push movsl std dec cmpsb es xor inc popf out inc popf hlt dec sahf clc dec movsl repz xchg call (bad) out xchg jmp scas add hlt push mov jle inc xchg ljmp push sbb xchg ljmp (bad) repnz lods push outsb (bad) push js xor push into sub sti push test push test dec movsl add push jnp es cmp push mov xchg cmc push mov aas xchg ljmp add xor aas mov and add xor cmp pop mov cltd (bad) dec mov les imul adc inc xchg repz cmpsb add cmp sub push test push test push test jge add shlb jg push mov (bad) rcrb outsl les jle and xor push mov jp das adc xchg jmp shlb loope lods or mov lahf push jae cmp add push mov insl into sub cmp inc xchg out mov out sbb or insb pushf lret sti sub mov stos fimull cmp enter mov lock mov (bad) outsb sahf into (bad) sub sbb jl fmull cmp fwait lret sti sub mov test cwtl enter mov lods fisttpl cmp lret pushf lret sti sub mov test cwtl enter xchg test or push add add mull pop mov lods fisttpll (bad) cs xchg push mov inc movsb (bad) dec test (bad) clc mov test test dec pushf in insl add lahf iret (bad) cs xchg enter xchg movsb roll xor ret push xorl pop mov test cwtl (bad) mull push xchg stos (bad) cmp (bad) mulb adc mov push push xchg movsb roll xor roll lock dec jle fisttpll add pop mov stos (bad) cmp enter xchg lds imul lahf (bad) dec mov pop mov jns and xor dec cmpsb xor cltd leave stc sub mov pop test cltd leave stc sub mov scas loopne inc jo iret ljmp pop mov lods fisttpl cmp lret pop mov (bad) lock mov (bad) outsb sahf into (bad) cs add jl fistl inc jno rolb das pop (bad) mov lods fisttpll cld sub mov stos fimull cmp leave stc sub mov test or insl popf into (bad) sub sbb jnp fisttpl cmp lret pop mov cmpsl fmuls ss cmp aas cmpsl add out xchg jmp mov pop mov pop scas push pop mov fs pop mov jne cs push aad dec jle add add mov cltd enter xchg xorl pusha (bad) mov scas fimul cld sub mov fimull cmp iret ljmp pop mov scas fisttp aas outsl lahf into (bad) cs lea lods fmull cmp je aad xor xchg (bad) repz adc rcrb outsl shrl jge sbb sbb test pop aaa addr16 (bad) mulb adc mov nop (bad) lock mov sldt add add outsl sahf iret ljmp pop mov mov adc mov nop shr dec jle fisttpll imul mov test pop ss (bad) mulb push test fimull cmp enter xchg movsl aad xor and mov adc mov xchg (bad) lock scas fisttp outsb popf rolb xor (bad) lock push xorb movsl (bad) add repz mov adc je roll xor (bad) lock add push xorl mov ss in xchg es adc push (bad) popa mov mov mov imul jbe aad jns and iret and loop xchg lcall pop lods pop pop mov adc test push lods push retw clc push movsl cmc inc test fs xor jno sbb (bad) sub jmp stos (bad) pop mov mov mov test pop aaa addr16 (bad) mull push xchg add movsl aad xor sub mov or push jno sub mov cmpsb aad xor xchg ret icebp and scas fisttp ds pushf int3 cld sub mov mov adc lods addr16 (bad) sbb or pop mov insb ret int xchg (bad) push test roll xor mov mov adc add popa xchg (bad) lock dec jle fisttpll sti sub mov cmpsl (bad) add add add lret pop mov test or push lret pop mov movsl aam xor (bad) icebp and scas fisttp outsb popf int sub mov test or addr16 (bad) imulb pop mov cmpsl xlat push xor and (bad) mov adc lahf into (bad) cs lea stos fisttpl cmp enter xchg test pop aaa xchg (bad) push test mov (bad) mov lods fisttpl cmp leave stc add add push xchg movsb aam xor (bad) imulb pop mov cmpsl (bad) push xor and add movsl aam xor ret repnz mov adc outsl sahf int sub mov lods fisttpll imul mov movsl aam xor ret push xorb int sub mov subb aam xor (bad) lock scas fimul sti sub mov cmpsb aad xor xchg add ret push xorl pop pop mull push test movsb roll xor (bad) lock dec jle fisttpll cli sub mov cmpsb (bad) add repnz mov adc je roll xor ret push jg fimul cmp sub mov test cltd leave clc daa push mov cmpsb aad aaa imul mov stos fisttpl cmp sub mov subb add add lea lods fmull push into (bad) sub mov stos (bad) cmp leave clc sub mov cmpsl (bad) push xor and xorl rolb xor cltd enter mov stos fisttpl cmp lret pop mov movsl aad xor ret repz mov adc mov mov mov adc mov nop (bad) hlt and adc add arpl xchg mov xchg (bad) mulb push xchg stos fimull cmp int3 cld sub jmp dec jp (bad) insl sahf int sub sbb jnp fisttpl cmp sub mov lods fmull sub mov cmpsl and pop inc jbe aad or imul mov cmpsb (bad) add sti sub mov test xchg enter xchg cmpsb xlat push ss add add mulb push xchg movsb aam xor (bad) cmc and add (bad) mov adc mov xchg (bad) icebp and lods fisttpll sti sub mov cmpsb (bad) or push pop or sub mov push inc jne (bad) add mulb adc jb roll xor (bad) lock mov (bad) outsb popf int das pop mov mov adc mov (bad) mov scas fimul aas jo iret ljmp pop mov mov lods fisttpll insb fwait int3 cld sub mov mov adc mov mov lods fisttpll insb fwait lret cli sub mov add popf int sub push dec jle jecxz inc jne roll xor repz mov adc jae rolb xor (bad) icebp and mov adc roll xor (bad) lock scas fisttp inc jae rolb add push push xchg movsb aad xor es xchg test cwtl (bad) mull push xchg test cwtl enter xchg movsl aad xor xchg (bad) hlt and mov adc mov mov lods fisttpl cmp leave (bad) das pop mov stos fisttpl cmp lret sti sub mov test cwtl (bad) mull push xchg movsl aam xor xchg ret repnz mov push inc jne aam xor and adc add add add xchg (bad) push xchg xorb into (bad) cs nop xabort pop mov cmpsl xlat pop ss (bad) mull push test mov xchg ret push xorl popa nop (bad) lock xchg test fist inc jo iret ljmp pop (bad) mov mov adc lahf rolb xor (bad) icebp and mov adc mov xchg leave stc sub mov sbb test lcall in push dec add add loopne inc outsl lahf into (bad) sub sbb jl fmull cmp add pop (bad) mov lods fisttpll outsb sahf int das pop mov stos fcoml aas outsl sahf iret add pop mov lods fisttpll std sub xchg (bad) lock mov adc jno rolb das pop mov lods fmull imul pop mov hlt es xchg mov stos fisttpl cmp xlat pop aaa xchg (bad) cmc and test rolb xor (bad) lock pop dec jle fisttpll insb fwait lret sti sub mov cmpsl (bad) push ss leave cli sub mov movsl aad add push lret pop mov movsl aam xor ret push xorb int sub mov lods fisttpll sti sub mov cmpsb (bad) add repz mov adc mov (bad) mov lods fmull jo iret ljmp pop lea stos fisttpl cmp enter xchg add in inc jbe aam xor ret push subb int sub and mov adc outsl sahf into std sub mov test or push push test mov (bad) mov xorl fadds cmp (bad) push xorl roll xor mov scas fimul cmp sub mov stos fisttpl cmp into (bad) sub sbb stos (bad) cmp sahf into add popa add add xorb rolb das pop mov stos fisttpl cmp iret ljmp pop mov lods fmull cmp leave stc sub mov adc add arpl xorl pop lea fisttp outsb sahf into std sub mov stos fmull cmp popf int3 cld sub mov cmpsl xlat push ss (bad) push xorl (bad) add repz mov adc outsl lahf into (bad) sub add add test fwait lret pop mov test add xchg (bad) lock scas fisttp outsb sahf int sub mov test pop aaa addr16 (bad) cmc and adc mov (bad) mov mov adc mov xchg (bad) icebp and scas fild adc add arpl xorb rolb xor (bad) cmc and sbb stos (bad) cmp lret cld sub mov add test xchg (bad) mull push xchg cmpsl (bad) add cmc es test stos fisttpll std sub sbb stos fmull cmp int3 cld sub mov stos fisttpl cli sub mov mov adc sbb fidivl lods fcoms decb sub inc fwait out ds loop xchg out (bad) jecxz xchg notl popa mov outsb out je aam xor (bad) lock scas fimul cmp add jno roll xor mov lods faddl adc mov mov lods loop inc jno roll xor mov lods fisttpll insb fwait lret cli sub mov test cwtl (bad) mull push test rolb ss (bad) push test movsb aam xor (bad) lock dec jle fisttpll cli sub mov jle fimul cld sub mov lods fmull sub add pusha nop (bad) lock pop fstps dec jns inc mov pop lods add push lods add or rcrl leave pop jl das mov inc test sbb xchg clc pop mov xchg cmpsl xlat push ss (bad) cmc push fisubr test dec rolb ss (bad) aaa addr16 (bad) mulb adc jae rolb push push movsb jmp (bad) repnz mov adc mov cwtl (bad) mull push test mov xor mov lods fmull push lret pop mov cmpsl xlat push xor daa pop xchg loope cmp lret pop mov movsl aad xor xchg ret repnz mov adc lahf add pop ss (bad) cmc and push dec jge fmull insl sahf int sub mov test xchg (bad) mulb push test mov xchg (bad) icebp and scas fist je roll xor (bad) push xorl add add inc jo iret ljmp pop lea stos fimull cmp enter xchg mov cwtl (bad) mull push test rolb xor (bad) lock mov adc mov (bad) mov lods fmull cmp jno roll xor (bad) mulb adc jae rolb xor jno sub sbb or cmpsl sti push stos std dec movsl (bad) imul lcall fnsave mov push scas or sbb mov add inc popf or leave sub aaa sahf sti jns test push stos cld push sahf icebp inc (bad) fidiv add mov pop mov pop mov pop mov sbb nop in inc mov pop mov jae and mov dec test popa mov pop mov xchg cmp pop ret sbb sbb pop imul lret jmp int jle push xchg stos fimull cmp rolb xor ret push xorl add iret ljmp pop lea stos fisttpl cmp enter xchg movsb roll xor cwtl enter mov cmpsl xlat jns cmp mov (bad) outsl lahf iret ljmp pop (bad) mov scas fisttp aas outsl lahf rolb xor (bad) lock mov sbb cmpsl xlat pop ss (bad) mull push xchg movsb aam xor xchg (bad) hlt and test aam xor xchg (bad) hlt and test mov mov adc mov add ret push xorl roll xor ret repz mov adc mov xchg (bad) hlt and mov test or push push xchg test or push pop mov test cltd leave stc sub mov scas fimul ds popf int int3 pop cmp enter mov cmpsl (bad) push ss pop mov test cltd leave incl aaa xchg (bad) mulb push test add pop inc jbe (bad) push ss (bad) push test movsb aad xor and adc push aaa insb popf int sub sbb jnp fisttpl cmp lret sti sub mov stos fimull cmp enter xchg cmpsb aad xor add bound xorl roll xor ret repnz mov adc mov (bad) mov scas fisttpll cmp xor ret push xorb add (bad) outsl lahf iret xor inc pushf icebp dec sahf clc pop lods or or adc mov dec sahf in cmp pop (bad) (bad) mull push test movsb aam xor xchg ret repz mov adc mov (bad) mov scas fisttp aas outsl sahf into std sub and mov add dec js xlat pop aaa addr16 (bad) mulb adc jae roll xor ret push xorl pusha nop (bad) lock mov push inc jne aad add add xchg ret repz mov adc mov xchg ret repz mov adc mov xchg ret aad jg dec scas or add int mov mov stos fimull cmp enter xchg movsl aad xor xchg (bad) hlt and mov adc cmpsl xlat push ss (bad) push test mov (bad) mov scas fisttpll cld sub mov test popf int sub mov add sbb stos fisttpl cmp lret pop mov cmpsb (bad) push ss (bad) push test mov xchg (bad) cmc and adc jae test xchg (bad) mull push xchg movsb roll xor (bad) icebp and mov sbb mov adc or push leave clc sub mov adc add bound jle fimul cmp sub mov cmpsl xlat push aaa xchg (bad) cmc and sbb add add insl pushf int3 sti sub mov test pop aaa xchg (bad) push test rolb xor mov mov adc mov mov stos fimull cmp lret pop mov movsl aam xor ret push jg fisttp ds popf int3 add pop nop mov lods fmull cmp leave stc sub mov adc add popa xchg (bad) lock lods fisttpll imul xchg (bad) sti sub mov add push dec jge fisttpll add rolb xor roll gs pop mov imul push and loope mov xor fnsave sbb xchg in push lahf repz scas push push and jo sbb adc fnstenv xchg out mov inc lods or notb sbb rcrb les fdivrs lcall add (bad) in pop mov scas push jp inc stos or loopne scas push insb lret fnsave test inc cmpsl out cmpsb clc dec add cmp jbe dec test and mov outsb (bad) inc stos or mov pop lods decb stc push cmpsb (bad) push test sahf hlt dec lahf cmc dec mov inc xchg loope jne pop push cltd jecxz je add jnp adc adc adc and inc lods add call clc dec mov aas xchg add pop mov cltd notl push arpl insl out xor ret repz cs nop (bad) lock dec jle fstpl dec js test pop ss (bad) push xchg mov xchg (bad) icebp and scas push mov jb sbb pop jae adc cmp jmp test push movsl (bad) dec popf out inc test insl fildl call aas xchg repz pop imul lds jge inc fwait repz mov outsb aad mov xchg out mov inc popf repnz mov jo xchg insl ret sbb push push mov inc mov ss (bad) mulb push test cmpsb (bad) cmovo add add rolb xor dec ret adc sbb cmpsl xlat push ss (bad) push test roll xor (bad) icebp and mov cmova xlat pop aaa xchg (bad) push test rolb add imul inc jne aad xor xchg ret repz mov adc movsl aad xor and xorl rolb xor mov scas fisttpll sti sub mov test or push add sbb lods fmull jb roll xor (bad) lock push xchg cmpsb xlat pop aaa addr16 (bad) cmc es test movsl aad outsl sbb aaa pushf lock xchg loopne lcall adc mov xchg (bad) icebp and scas fist aas outsb sahf rolb das pop (bad) mov mov push inc jne aam xor ret lret inc jns (bad) cmp lret pop mov mov sub mov gs xchg add sbb add fldcw jp loopne rclb lds xchg dec lods inc rclb out push dec jge fisttpll cld sub mov stos fimull inc jae roll xor ret push xorl or test daa jns daa jnp sbb adc aam sbb sbb cwtl lock mov jbe push jl xor (bad) pop mov (bad) lret das mov dec lahf cmc dec lcall and sarb mov add jp jl lcall mull push xchg cmpsl xlat pop cmp enter mov test cwtl enter xchg lods fisttpll imul mov pop inc jbe (bad) push xor and mov adc mov mov stos fisttpl lods cmp fimul ds popf int3 sti sub xchg cmp ljmp pop (bad) mov lods fmull insb fwait lret sti sub mov test xchg (bad) mull push add add jg fimul sti sub mov cmpsl (bad) push ss (bad) hlt and pop mov cmpsb aad xor xchg (bad) repz mov adc cmpsb (bad) add cmc and xorl roll xor ret push xorl rolb xor mov lods fisttpl cmp int sub xchg in pop dec jle fisttpll cli sub mov movsl aad ss (bad) push test rolb xor add xchg cmpsl xlat push ss sub imul jno sar das pop mov scas fisttp aas outsb sahf iret pushl pop nop (bad) lock mov test add xchg ret push xorb rolb xor (bad) push test movsb aam xor (bad) imull pop mov cmpsl (bad) push ss ret repnz mov cmovno ds push bound mov les add adc mov lock scas loopne inc jo (bad) rcrl mov ret cs pop (bad) xor fisubr lret les arpl aaa mov inc popf inc mov pop dec jle fisttp aas outsl lahf iret (bad) cs mov lods fmull insb pushf lret sti sub mov stos fmull cmp pushf aam xor xchg (bad) push test cmpsb (bad) push ss (bad) mulb push xchg movsl aam xor xchg ret repz mov add add inc jno rolb aaa push or mov pop stos sti dec pushf lock add dec movsb sti push sahf lock add aad ja es push in (bad) in xchg call mov xor xchg ljmp sbb or push leave clc sub mov cmpsb add or imul mov scas fisttp ds popf int sub mov test pop aaa addr16 (bad) cmc and adc mov nop mov add scas fimul test xchg (bad) mulb push xchg mov xchg (bad) lock scas fisttpll cli sub mov cmpsb aad ljmpw cs sub aas xchg in inc xchg call repnz mov pop lods decb add (bad) dec test push scas add adc jg pop stos fisttpll (bad) cs mov scas fisttp aas add xlat pop aaa addr16 (bad) mull push xchg cmpsl fmuls add add push pop mov scas fisttp aas outsl lahf iret ljmp pop (bad) mov scas fimul outsl lahf roll xor ret push xorl stos fimull cmp lret pusha nop rolb adc ja and sbb pop push push jbe and shrb jge sub in mov push mov popa mov jge sub inc fwait clc pop mov mov dec test bound mov inc cwtl out push scas add add add int3 and leave es push jne sbb mov aas (bad) loop (bad) aaa xchg out dec mov pop mov gs jno and and fldcw test cmp repz movsb cli push stos add or adc adc add sub sub fdivs mov xor out push or fisttpll aas jo (bad) cmp enter cltd adc add mulb pop xlat aaa xchg call xor (bad) lock aas lahf (bad) dec add mov pop stos add xchg fisttpll aas jo (bad) cmp leave stc sub mov test or push push xchg movsl aam xor xchg ret push (bad) mov adc mov xchg (bad) push test mov xchg (bad) lock scas fisttp outsb sahf into std sub sbb stos fisttpl cmp leave stc sub mov scas fisttpll sti sub mov test or xchg (bad) mulb adc mov xchg (bad) lock scas jecxz inc jae roll xor (bad) icebp and scas fisttp aas outsb sahf into std sub es inc xorl pop lea fsts inc outsl lahf iret (bad) cs lea fisttpll imul mov cmpsl (bad) push xor and xorl roll or insb pushf int sub mov test xchg (bad) imull push xchg movsb aam xor ret and mov adc outsl sahf into std sub and mov adc mov nop (bad) lock scas fisttp cmp sub mov stos fisttpl cmp enter xchg stos fisttpl cmp lret pop mov test pop aaa addr16 (bad) testl jmp dec jnp fisttpl cmp lret pop xchg (bad) icebp and mov adc mov nop shr push jg loopne inc jo rolb xor add testl add add push xchg cmpsl xlat pop aaa xchg (bad) sti sub mov lods fmull insb pushf int3 cld sub mov fisttpl cmp lret pop mov test pop aaa addr16 (bad) mull pop lea (bad) cmc and adc je aam xor xchg (bad) push test movsb aam xor xchg ret repz mov adc mov xchg lret pop mov stos fisttpl imul in sbb jl fisttpl inc (bad) dec mov ljmp cmp pushf int3 sti sub mov mov adc mov xchg ret push (bad) mov adc cmpsb aad ss push xchg test cltd lret sti sub xchg (bad) mull pop xchg cmpsb (bad) pop aaa addr16 xbegin jmp fiaddl lods fmull insb add (bad) mulb push xchg scas fist inc jb roll xor mulb pop mov cmpsl (bad) pop cmp (bad) sti sub add add mov lods fisttpll ljmp pop xchg (bad) imulb pop mov (bad) icebp and mov adc movsl aam xor xchg (bad) hlt and mov push inc les (bad) out xchg out movsl add pop mov gs sub push inc jo rolb xor shr dec jg fisttp inc outsl lahf iret (bad) cs (bad) mov mov adc outsl lahf iret (bad) cs lea lods fisttpl inc jno rolb xor mov lods fisttpl cmp lret pop mov stos (bad) cmp (bad) mull push xchg movsb aam xor enter mov cmpsb (bad) push ss (bad) push xorl add sbb cs aaa les cwtl enter xchg scas fimul ds pop lea lods fmull imul mov cmpsl xlat pop aaa xchg (bad) push xorl (bad) cmp lret pop add jge fmull insb pushf int3 sti sub mov add test pop aaa addr16 (bad) cmc and push inc jne aam cmp enter xchg mov xchg ret repz mov adc mov mov scas fisttpll sti sub mov cmpsl jno lock dec jle fimul std sub sbb test or push pop enter pop dec jle fisttpll je aad xor ret push xorb iret (bad) cs lea stos add fimull cmp (bad) mull push test movsb aam xor enter xchg movsb roll arpl subb int add cmp lret pop mov movsl aam scas xor xor fidiv xchg ds call mov fs and pop mov xchg notl pop jbe adc and mov pusha scas add repnz repnz cmc push cmpsb clc push mov data16 and add add pop xchg hlt inc lcall add adc sbb push ja sub test addr16 js sub (bad) fnstsw cltd notl add clc dec cltd out movsl (bad) pop cli push cmpsl (bad) rclb push xchg daa xchg sub and fidivrl nop out stos pop imul jmp ljmp aaa push push xchg scas fisttp aas outsb sahf int sub sbb stos fimull cmp push int dec jns test add cmpsb (bad) push ss (bad) mulb push xchg movsb fisttpl cmp pushf int3 sti sub mov stos fimull cmp leave stc sub mov cmpsl xlat push ss (bad) push test aad cmp lret pop mov cmpsl (bad) pop ss (bad) push test push sbb or imul mov mov adc lahf iret ljmp pop mov lods fmull imul add lret pop mov test pop cmp (bad) mull push mov stos fimull cmp enter xchg movsb aam xor ret push xorl pop lea stos fimull aas outsl movsb aam xor xchg ret repz mov (bad) jo iret ljmp pop mov lods fisttpl cmp leave stc sub add test rolb aaa addr16 (bad) cmc and adc mov xchg ret repz add jo adc loopne aas outsb sahf into std das pop (bad) mov mov adc je roll xor (bad) lock scas fbld les jne sbb or add mov jne daa pop xchg cmp sbb test cmpsl (bad) push ss (bad) push test mov xchg ret push xorl pop lea scas fimul add arpl mov adc mov (bad) mov out sbb (bad) outsl lahf rolb xor mov lods fisttpll add popa nop mov mov (bad) pop sbb (bad) in test sub fidivrl lods gs cs (bad) mov pop mov fistl xor xchg ret repnz sbb xorl pop mov lods fisttpl cmp leave stc sub mov sbb jnp fisttpl cmp leave clc sub mov adc add add add arpl xorl pusha nop mov lods fimul add pusha (bad) mov lods fisttpll sti sub sbb cmp push scas arpl pop xchg (bad) mull push xchg mov (bad) outsl lahf into and (bad) mulb push xchg cmpsb (bad) add cmc and adc je aam xor ret push xorl xchg (bad) mull push xchg mov add xor dec mov aas nop out mov scas fimul cmp fimull cmp roll xor (bad) icebp and scas loopne outsl fisttpll repz in inc jne (bad) push ss (bad) mulb push xchg movsl aam cmp sub mov stos fimull cmp leave stc sub mov cmpsb (bad) push ss (bad) push test mov xchg (bad) mulb push test movsl aam xor ret repnz add add push xorl pop (bad) mov scas fimul outsb popf int sub and mov adc mov (bad) mov scas fimul outsb popf int sub mov fimull cmp enter mov lods fmull imul mov test pop mov pop mov jnp and aad jno or cmc inc cwtl negl add sbb stos fisttpl sub lret pop mov add test cltd leave stc sub mov test or addr16 (bad) mull push xchg lods fisttpll imul mov cmpsl (bad) pop ss (bad) push test mov nop (bad) lock scas ficom inc jb rolb xor shr dec jg fimul sti sub mov cmpsl (bad) push ss (bad) hlt insb loop mov cmpsl xlat push cmp pushf int3 sti sub mov test push data16 add xorl iret ljmp pop mov lods fisttpl cmp (bad) mull push mov test xchg (bad) push test mov nop (bad) lock scas fimul cmp sub mov cmpsb fimull cmp add xlat pop ss (bad) push test sar das pop mov lods fcompl xor fdivs add cmc and sbb jnp fimull cmp enter add add mov adc add bound jne (bad) cmp (bad) mull push xchg lods fimul ds popf int sub sbb stos fisttpl cmp lret pop mov cmpsl xlat pop aaa addr16 (bad) mulb push test movsb aam cmp enter mov cmpsl xlat pop aaa xchg (bad) cmc and adc je roll xor xchg (bad) hlt and xorl rolb xor enter xchg cmpsb aad xor gs (bad) cmc and adc add arpl (bad) mov adc mov nop (bad) push test (bad) mov adc mov xchg (bad) repnz mov adc mov dec jg fimul cmp sub mov mov adc mov ret push test roll xor cmp pop dec jg fisttp outsb popf int sub and xorl rolb das add mov lods fmull insb fwait lret cli sub mov test cwtl enter ss ret pop mov test jecxz inc jbe (bad) push ss (bad) mul sub push dec jle fimul mov gs push sbb fidiv add inc xchg and ds out inc mov jno das xchg cmp fisttpll std sub mov fs cltd repnz fwait in inc xchg add add add cmp or sub lds mov cmp adc repz test and hlt movsb pcmpgtb sub out dec test imul xchg add aas stos push ja inc lahf clc pusha ret ljmp lahf or faddl jmp sub xor hlt push mov mov dec mov ja dec mov ja movsb add out mov dec mov imul in stos or cmp add adc add ds repz mov lahf add mov stos or add (bad) icebp dec mov mov test push mov cmpsl add iret xor mov push scas adc cmp es push lods pop jg cmp add daa mov push (bad) fldl out inc movsl decb jmp (bad) out add aam nop negb punpckhbw xor fs jg insl aam mov push mov cmpsl push jae ds cld lretw sub add pop mov xchg icebp pop mov lahf lcall and push add add pop mov cmpsl pop pop (bad) xor add test inc lods or jb and aad sbb movsb or sub and (bad) out push mov test mov lcall jle sub imul int xchg out push mov cmpsb add dec scas or sbb nop in cmpsb stc dec pushf lock add add movsb add call repz xchg jmp lcall (bad) dec mov dec movsl cld push scas push push pop xlat xor repz mov pop mov pusha mov stos push js inc lods sbb aaa lahf pop imul xchg notb sbb jae aas movsb push gs outsb out mov xchg std pusha ret negb es cmc push mov mov inc cmpsl or sbb mov nop ljmp aaa mov pop ret sti pop mov add scas sti push movsl std jbe xor ret push (bad) mov adc mov (bad) mov lods fisttpll add bound xorl pop lea fmull cmp inc test push stos add add mov pop mov push xorl add mov stos fimull cmp lret pop mov stos fisttpl cmp pushf int3 cld sub ret push add add jae roll xor (bad) mull push mov or sbb rcll push push or fs je and dec movsb cli dec lods cmp lods loope xor push cmpsl cld push mov inc sahf stc pop lods add add mov loop adc ja and aas pushf (bad) pop mov js dec mov je and xor dec sahf icebp dec sahf lock lcall hlt dec fwait jmp add cmp testl decb loop js adc call add add sub test pop scas (bad) push cmpsb cli push mov jne lcall add (bad) repz mov and movsb lcall adc xor pop mov (bad) jmp lds in dec lods pop arpl add and inc sahf (bad) dec mov js inc movsb or and mov movsb or das xchg xor mov push mov mov dec lods or fadds or mov xchg out dec mov cwtl lcall adc sub icebp inc popf icebp inc lcall sbb loop (bad) fbstp hlt push mov pop mov pop mov ja ds icebp inc cwtl out inc xchg ljmp aad xchg and lds outsl ret sbb sbb xor (bad) in mov inc xchg ljmp pop test dec mov pusha mov arpl jle sub aaa xchg in inc pushf (bad) dec lods add mov cmp addr16 xlat es fwait cmp outsb (bad) pop jp sub adc xor repz mov pop scas add decl call push outsl mov sbb mov outsb ret (bad) ss repnz lods add and mov pushf lcall sbb clc pop mov jb ds (bad) pop mov add add add das xchg out inc test imul clc mov mov ds repnz mov je cs inc pushf cmc push mov mov inc stos add pop mov xchg dec scas (bad) int3 sub mov xchg dec movsl cld pop shlb jecxz mov addr16 push cmpsl add sbb xor pop mov and add outsl rclb shrb mov sub aam mov cmp call mov mov ja cmp pop les lock mov outsl (bad) xor dec mov outsl leave sbb xor pop mov jp cmp mov jns xor push mov ja xor or pop (bad) cmp dec lods pop gs pop jnp cmp jb mov mov das mov inc popf add stos or (bad) and mov cwtl repz lahf (bad) popa mov cwtl clc pop mov add adc mov loopne stos add (bad) xor jb xor or push sub fstpt cwtl std pop ret in push scas or xor pop mov arpl popa mov push test add lock xchg call mov cs jnp xor daa jns sub push hlt push movsl stc push cmpsl add (bad) push movsl clc dec fwait ljmp inc xchg jmp movsb pop pop mov add sub jecxz (bad) jecxz xchg hlt push mov addr16 (bad) out inc cltd icebp push mov jb cmp inc mov jne sub jmp mov pushf in inc xchg out test es add sbb xchg jmp fcoml push cmpsl sti push lods add or (bad) pop mov ja cs inc movsl pop pop sbb xchg ds out inc movsb (bad) pop mov arpl lcall inc cmpsb or cmp push test add add pop jnp sub roll xor (bad) icebp and mov adc mov xchg ret push (bad) add test cltd leave clc sub mov das adc jle ss inc sahf lock xchg in mov xor sbb lret roll dec mov pop mov dec ja loope inc jno rolb xor shr push jg fimul cmp sub hlt and xorl roll xor (bad) lock pop push jg fist je roll xor sbb arpl dec lcall repz lcall cmp jnp xor cmc dec sahf icebp dec sahf notl adc push xchg test cwtl enter xchg cmpsb aad xor xchg (bad) repz in push dec jle fisttp aas outsb lahf into (bad) cs mov lods fisttpll insb pushf lret cld sub jmp dec jnp fisttpl cmp lret add sub mov lods fmull insb pushf lret clc push packsswb jnp sub xor lahf repz pushf cmc push lods add lods decl notl adc push push test xor repnz movsl add mov popl stc push movsl or sub and mov adc test cltd leave clc sub mov push inc jne (bad) add repz mov test enter cs das add lret xor mov push xorb rolb xor mov scas fisttp aas outsl sahf into std cs mov lods sub lret sti sub mov mov (bad) outsb popf int sub mov test pop ss (bad) push xorl sar das pop lea stos fisttpl aas outsl sahf int sub mov cmpsl (bad) pop ss (bad) hlt and mov adc lahf into (bad) cs mov xlat add pop aaa xchg (bad) push mov lds xor (bad) lock dec jle fisttpll cli sub mov cmpsl add or sti sub mov test push aas outsb sahf into std sub sbb test xchg (bad) mull push test mov xchg shrl pop dec jp fisttpl cmp leave clc sub sbb push (bad) mov adc mov lea (bad) cmp (bad) mulb push test add mov mov mov push outsb popf int sub mov test xchg (bad) cmc and adc mov mov stos fimull cmp rorl (bad) cs lea fadds aaa push push test mov mov stos fimull cmp (bad) imulb pop mov cmpsl (bad) push xor and mov (bad) outsb popf int sub mov test add add add je sbb push insb mov js cmp pop mov mov mov arpl dec fwait call jne push mov sbb test cltd leave stc sub (bad) lock scas xchg adc add or imul or push pop mov push lods sti dec movsl std push ret xor xchg (bad) mull push test stos fmull imul mov push inc jbe aam xor xchg ret push xorl pop lea add stos fisttpl cmp leave (bad) sub call add (bad) outsl lahf iret ljmp pusha nop shr dec jg fisttp aas outsl sahf into (bad) sub sbb jl fmull cmp add fs (bad) hlt dec andl cli sub sbb test xchg (bad) push test rolb add imul dec jl fisttpl cmp enter mov cmpsl (bad) add hlt fcompl dec into cmp add mov popf mov enter and das test aaa cwtl stc pop test pop mov jbe in mov insb lds push add scas call clc dec pushf in inc fwait notl jle cmp cmc push lods sbb sub rcrl rclb mov pop mov lret aam jnp sub and and aad cwtl cli dec movsl cli dec sahf cmc push stos or mov jne cs das xchg aaa nop cmc push mov push jno add add xor in mov mov inc mov cmpsl pop fs insb leave and and sbb sbb shlb mov xor in inc xchg out inc xchg ljmp (bad) dec mov jne and cmp dec movsb hlt inc xchg in inc lcall or out push mov ja xor sbb fidivr xchg repz and (bad) dec popf lock fwait jmp add popf sti gs sub xchg add inc stos or xor jo xor lcall sbb cmp and sahf cmc push cmpsb add (bad) xor (bad) (bad) fldt sbb fbstp xchg sub aad jnp xor add sbb aaa xchg out xchg icebp dec mov push stos lcall and test mov dec test jns dec stos or cmp mov dec mov jg sub push insb ret and cmp push mov add push push jns xor stos add mov scas sbb lods fldl bound xorl pusha nop (bad) lock dec int test movsl aad xor xchg les xor ret push or push (bad) mov adc mov (bad) mov lods fldl frstor push (bad) mov adc mov nop (bad) push test jg xchg das jl and sbb and ret pop jo aaa add add jne and ja das mov cmp inc nop fbstp xchg cmp ljmp mov push stos adc inc test mov cmp push and and inc popf repz popf icebp inc cltd out inc sahf add ret sbb inc stos or out cmp fidivl mov cmp push push sbb fidivl mov xor fsubrs enter cmp cmp cmp out dec mov add sti push scas add std push cmpsl add push pop scas add mov mov ja sub ss aas cwtl out dec lahf hlt dec movsl sti push stos add mov add push scas push pop lods or or or scas add sbb aas xchg in ds out nop loop (bad) out (bad) loopne mov xor pop scas push pop mov js es inc movsl add adc int3 sub fnsave xchg in xchg jmp test add add push js pop data16 pop (bad) sub pop les mov xor maxps push addr16 inc mov pop imul dec lahf lock xchg jecxz jne and push fistpl dec jnp fmull cmp lret pop mov test pop mov scas fimul std sub push loopne pop xchg ret push xorl pop mov push jae adc mov add shr dec jle cmp test pop aaa addr16 into (bad) cs mov scas fiadd dec jle fisttp aas jo rolb xor dec mov push pushf (bad) dec loope and push mov jo rolb cmp (bad) mulb push test mov xchg (bad) push (bad) mov adc mov lea stos fisttpl cmp lret pop lea lods fmull cmp leave stc sub mov push inc jne aad ss (bad) repz push (bad) mov adc mov (bad) mov lods loope inc jo into (bad) sub sub and mov test pop aaa xchg (bad) push test rolb xor ret push subb roll xor ret repnz mov adc outsl sahf into (bad) sub sbb jnp fisttpl cmp leave clc daa push xchg movsb aam add lahf into std sub sbb stos fimull cmp (bad) mulb push xchg movsb add add bound xorl pop xchg (bad) push xchg mov xchg (bad) icebp and scas loope inc jno rolb xor mov mov adc lahf iret (bad) cs mov loop inc jb roll xor (bad) icebp and scas fimul inc jo iret ljmp pop mov out push dec jle fisttpll imul mov lods fisttpll sti sub mov test cwtl enter xchg in inc je aam xor xchg ret push xorb aam xor xchg ret hlt and (bad) mov adc lahf iret (bad) sub sbb stos (bad) cmp enter xchg mov xchg ret pop xchg jl fisttpl cmp enter xchg movsb aam xor (bad) icebp and scas fimul cld sub mov scas fisttpll sti sub mov in xchg or outsb in xchg out add dec mov mov (bad) cmc and adc jae (bad) cmp leave cli sub mov cmpsb (bad) add hlt and xorl roll xor mov lods fmull push leave stc sub sbb jnp fimull cmp (bad) mull push xchg movsb roll xor (bad) lock scas fimul sti sub mov stos fisttpll insb pushf lret sti sub mov cmpsb (bad) push xor and mov loope inc jo sar das pop mov stos fisttpl cmp iret add pop mov add mov nop shr dec jle fimul std sub sbb stos fimull cmp lret mov adc lahf iret (bad) das pop mov lods fisttpl cmp adc jmp pop jns fisttpl cmp lret sti sub mov test lahf sar cs lea stos fimull cmp enter test mov add add add pop (bad) mov stos fisttpl cmp enter xchg test pop aaa pushw ja daa fwait hlt daa push xchg movsl aad xor and adc jae roll xor (bad) icebp and dec cmpsb add adc ds sub dec ja xlat pop ss (bad) push xorl roll xor (bad) lock dec jle in inc jae rolb xor (bad) icebp and xchg movsb aam xor ret push subb int sub sbb stos (bad) cmp sub mov test or push push test mov cmpsl dec mov pop lods (bad) push stos add mov mov mov ds loop xchg xor outsl ret cmpsl xlat pop aaa addr16 (bad) mull push test movsb aad xor xchg (bad) repz lea fisttpl cmp lret pop mov test add addr16 (bad) mull push xchg movsb aam xor xchg ret repz mov cmpsb (bad) push xor and test rolb xor ret push xorl pusha nop (bad) icebp and mov adc add bound xorl aaa addr16 (bad) cmc and push inc jne aad xor and xorl or addr16 enter xchg cmpsb aad ss (bad) and xorl roll xor ret push xorl gs (bad) push test movsb aam xor xchg (bad) push test aam xor ret push test (bad) or push leave stc sub mov test pop aaa addr16 (bad) push test roll xor (bad) hlt and test fist inc jp fisttpl cmp leave clc sub mov (bad) lock scas fisttp aas add add into std iret sbb push outsb popf into std sub sbb mov push inc jne aad xor xchg ret repz mov adc mov lea fmuls aaa addr16 (bad) cmc and ljmp cmp jae rolb xor shr push xorb into std sub mov (bad) cmp (bad) mulb push test mov xchg lds adc fldenv jbe pop insb mov int sub add add in sbb jl fmull cmp sti sub mov cmpsl xlat pop aas jo iret ljmp pop lea fmull (bad) in xchg lock mov jp cmp jnp dec movsl add sbb sub mov push pop jp xor push mov mov jo xor or mov jge inc stos push outsl (bad) xor add lock mov je xor sbb fild or add add xor sbb cmp pop jnp adc ficoml add pusha scas sub jns in cmpsl push les test inc mov test cmp add andl (bad) lret jmp mov mov xchg inc mov and sahf sti push lods push jo das mov dec mov les mov stos or xchg out push mov jno das nop icebp pop mov fwait stc pop mov pushf std gs add data16 imul mov push mov jbe ss (bad) pusha shlb fidivr lahf lcall xchg inc mov and les loope movsl add sbb fnstcw xchg repnz mov jno sub or int (bad) in dec stos or sub ljmp test inc pushf repnz scas or out stos or daa test inc scas adc xor popa les stc push mov dec cmpsl add mov push mov insb enter add cmp adc ljmp jge ss stc pop mov mov dec mov jbe cs jmp mov jnp cmp ret ficomp pop jne xor addr16 sbb xlat cmp stc push mov jno xor push scas or adc (bad) std push lods add outsb lret in lcall jge cmp jo sub push stos pop pusha mov jp sub add and push mov outsl lret daa (bad) fnsave xchg in inc sahf cld pop mov jno sub imul (bad) fidivr xchg repnz stos pop pusha mov test cmp icebp push mov jbe xor pop mov jge cmp lock mov sbb (bad) add xchg hlt push mov outsl into sub in popf stc push scas or jp xor pop mov mov push mov movsl add xlat xor add pop mov imul mov cmp or leave daa test ds hlt dec test pop mov jae sub inc mov insl (bad) sbb jp sub cmp inc xchg jecxz stos fisttpl cmp lret pop mov mov (bad) outsl lahf into (bad) cs lea lods fmull cmp lret pop mov stos fisttpl cmp lret pop mov scas fimul outsb popf int sub mov lods fmull insb sahf into std sub sbb or insb pushf int3 cld sub mov loope inc jo sar das add (bad) mulb add dec jnp fisttpl cmp lret pop mov test cltd enter mov lods fisttpll insb pushf lret sti sub mov stos (bad) cmp leave stc sub mov test cwtl lret pop mov scas fimul ds popf int sub pop push add jno roll xor (bad) lock mov adc mov xchg ret push (bad) mov pop inc jbe xlat pop ss (bad) mull push xchg movsl aad xor and adc je aam xor xchg (bad) hlt and test (bad) cmp enter xchg cmpsl fadds aaa addr16 (bad) mull push xchg cmpsb (bad) push ss (bad) mulb push xchg lods fmull insb fwait lret sti sub mov add jno add or push push xchg cmpsb (bad) add hlt and test test pop aaa xchg (bad) mulb adc je aam xor xchg ret repz mov adc mov xchg ret hlt and xchg lods fisttpl cmp lret pop mov test or addr16 (bad) mull push xchg movsl aad xor xchg (bad) repz jecxz inc jae fmuls aaa addr16 (bad) mulb push xchg add add aad xor xchg (bad) hlt and xorl rolb xor mov scas fimul cmp xor (bad) icebp and mov (bad) outsl sahf into (bad) cs mov lods fisttpll sti sub mov test cwtl enter lea stos fisttpll ds popf into std sub cmc and adc add fmull insb fwait lret cld sub mov stos fisttpl cmp leave (bad) xor (bad) icebp and mov adc add inc jb rolb xor ret repnz mov adc mov xchg ret repz mov adc lahf iret pushl addr16 (bad) sbb (bad) mov scas fimul std sub sbb stos fimull cmp (bad) mulb adc mov mov mov adc jae roll xor shr dec jge fmull cmp leave stc sub mov adc add popa xchg (bad) lock scas fisttp inc jae rolb xor mov add or push leave clc sub mov sbb test or xchg (bad) cmc and adc jae rolb xor (bad) hlt and mov adc lahf into std sub sbb xorb int add arpl xorl pop mov mov adc jo iret ljmp pop lea (bad) cmp (bad) cmc and adc mov xchg (bad) icebp and scas fimul add popa nop shr add add dec jle fisttpll imul mov mov push or add adc or mov test inc jae rolb xor (bad) lock dec jg loopne outsb popf int3 cld sub mov cmpsl xlat push xor and (bad) mov adc lahf aad xor xchg ret push subb int3 cld sub mov cmpsl (bad) push xor and adc jae rolb xor mov mov adc lahf iret add add pop mov stos fimull cmp add ljmp pop mov xorl rolb xor mov mov adc lahf iret (bad) cs lea fisttpl cmp enter xchg movsl aam xor xchg ret push xorl popa nop (bad) lock mov adc outsb sahf int sub sbb stos (bad) cmp (bad) mulb push test rolb xor mov mov adc mov (bad) mov lods fisttpl sti sub mov test pop aaa xchg (bad) push test (bad) push xor es test roll xor mov lods fmull imul mov test cwtl int sub mov fisttpl cmp leave stc sub mov cmpsb aad add imul mov in sbb or push lret pop lea add add ret inc adc xor mov mov (bad) outsl mov nop (bad) icebp and mov adc mov nop sar pop mov cmpsb (bad) pop aaa addr16 (bad) mulb push test movsb roll arpl add js fmuls aaa addr16 (bad) mull pop mov fisttpl cmp lret pop mov test jno clc sub mov test lcall out pop dec jg add add sahf int das pop (bad) mov scas fimul std sub sbb jle ficom inc jo rolb xor (bad) icebp and mov jl dec jle fimul outsb sahf into std sub sbb push outsb lahf iret ljmp pop (bad) mov lods fisttpll sti sub (bad) icebp and mov adc mov (bad) mov scas fimul outsl lahf iret ljmp pop (bad) mov scas fimul ds popf int sub mov add mov nop ret push (bad) mov adc mov nop (bad) icebp and mov adc inc ja (bad) push ss pop mov into add fs (bad) hlt and mov adc mov xchg ret sub mov test cwtl enter xchg xchg in mov xor es and fdivl in xchg repnz mov insb rcll int3 sub shrl jg xor add add push scas add lods pop pop mov jno sbb loopne stos or repz pushf cmc inc ret xorb into std sub sbb push inc jbe (bad) add repz mov adc lahf roll xor mov lods fcoml mov add fs (bad) pop mov fimull cmp enter xchg cmpsl (bad) pop aaa addr16 (bad) mulb push xchg movsl aad xor insb pushf lret cld sub (bad) ret repnz mov adc mov mov lods fmull sti sub mov mov adc mov nop (bad) lock xchg movsb roll xor (bad) lock scas fisttpll cli sub mov stos fimull cmp leave stc sub mov scas fimul outsb lahf iret (bad) cs lea stos fimull cmp leave clc sub mov pop dec jp fimull mov jl das test sub in add mov mov insb mov pop mov push scas or inc xchg ljmp cmp lret pop mov movsl aam xor int sub mov cmpsl (bad) push xor and mov adc mov (bad) mov xchg call test xor mov xor loop adc pop lods cld dec cltd out xchg jl,pn sbb loop lcall icebp inc lcall mov sbb mov jnp sub xlat cmpsb pop pusha mov js xor jae and fidiv (bad) jecxz mov (bad) lock lods add mov mov xor jecxz cwtl notl sbb (bad) sub inc lcall std pop rcrb sub adc stos std push mov jo and loopne mov movsb or daa mov dec mov ja xor and movsb push gs sub add add clc push mov lods adc aas cmpsb pop jae pop mov ja and and mov dec sahf icebp push lods decl out inc cwtl call cmp lret mov push movsl repz xchg out dec stos add mov fwait std mov dec mov jbe inc test add xchg inc mov lcall dec mov mov mov cmpsb adc aaa mov xchg in xchg xor sbb or add inc xchg loopne jg sbb enter repz mov pusha push jb jp push test pop mov push insl leave and and ljmp jmp xchg out inc cltd repz push movsl cli push lods add scas adc enter and aad xchg xor scas pop pop mov jb sub mov push scas pop gs cltd lock popf repnz stos or push je pop jns jp out dec ja xlat pop ss (bad) mulb add mov sbb jge fldl adc roll xor ret push xorl pusha xchg (bad) lock scas fisttp aas outsb sahf iret (bad) cs nop add mull push mov stos fisttpl cmp lret pop mov stos fisttpl cmp int sub sbb jge fisttpll insb fwait lret sti sub mov scas fimul aas outsl sahf into (bad) sub sbb jl fmull outsb jmp mov imul out inc lcall add lcall shll outsl les cmpsl xlat pop aaa addr16 (bad) mull push xchg cmpsl xlat push aaa addr16 (bad) mull push xchg test or push pop (bad) mov mov pop mov scas fimul outsb sahf into (bad) cs mov scas fist inc jno roll xor (bad) push test fimull cmp mov xchg ret push (bad) mov adc mov xchg (bad) repz mov adc mov add add xor ret add xor fbstp xchg cmc push mov popa scas or test cmpsb aad xor and test movsb aam xor ret repz mov stos fimull cmp lret pop mov test or addr16 enter xchg cmpsb (bad) add cmc and sbb stos (bad) cmp leave stc sub mov cmpsl xlat pop aaa addr16 (bad) imull pop mov test or push mull push xchg stos fisttpl cmp lret pop mov pop lods fist inc jo rolb xor shr dec jg fisttp outsb lahf into (bad) sub sbb mov adc mov mov xorl pop mov test xchg (bad) cmc and xorl iret add arpl pop mov movsl aad xor (bad) icebp and scas fisttp outsb popf int sub mov add xlat push ss (bad) hlt and mov movsl aam xor ret push xorl test xchg (bad) push test pop rcrb int3 sub or in inc je aam xor ret push xorl pop mov scas fimul outsb popf int sub sbb scas fisttp outsb popf int imul push xorb into std sub mov cmp add inc test mov mov mov inc mov pop mov jo inc js fadds aaa add sub mov cmpsb (bad) push xor and mov adc lahf iret (bad) cs mov lea dec xorb cmpsl xlat pop aaa addr16 (bad) mulb push xchg cmpsb (bad) push aaa addr16 (bad) mulb push xchg cmpsb (bad) push aaa addr16 (bad) imulb sbb or imul mov test xchg (bad) mulb push test add aam xor ret repnz mov push inc jne aad xor es test mov xchg (bad) icebp and mov (bad) outsb sahf into (bad) cs sarb repnz xlat or (bad) push ss enter mov test or imul dec jns fimull imul mov lods fisttpll sti sub mov test pop data16 mov test pop aaa add add test mov xchg (bad) push xorl test xchg (bad) mull push xchg movsb aad xor xchg ret repz mov adc mov xchg ret push subb into std cs mov lods pop cmc and adc add arpl xorl xlat pop aaa xchg (bad) push xorl rolb xor mov scas fimul ds popf int sub sbb stos add add data16 int3 sti sub mov test xchg xbegin out inc jbe aad xor xchg (bad) repz mov adc mov pop cmc es test aad xor xchg (bad) push xchg pop lods sti jp in inc jae roll xor ret repz mov adc stos fisttpl cmp add xor ret push test movsl aad xor es xchg add movsl aad xor sub add icebp es xchg cmpsb fmuls cmp leave clc sub mov lods fmull sub mov loope adc lock mov cmpsl (bad) push ss (bad) push test movsl aad xor and mov adc outsl lahf iret ljmp pop mov lods loope inc jo roll xor (bad) lock dec jg fisttp outsl lahf iret (bad) cs mov scas fisttp add add outsl mov nop mov lods fisttpll add bound jle fisttpll imul mov cmpsl xlat push ss (bad) cmc and adc jb (bad) cmp int3 sti sub mov add aam xor (bad) repz mov adc mov (bad) mov scas fisttpll push pop mov ss fbstp mov xor fdivl cwtl push xorl (bad) add cmc and mov push inc ja jl sub push jno sbb push je and push jno adc or or (bad) push cmpsb add xchg (bad) hlt and test movsb aam xor xchg ret repz mov sbb stos fimull cmp lret pop mov test cltd leave stc sub mov test cltd enter mov mov adc je aad xor and test mov xchg (bad) icebp and xorl pop lea lods loope inc jno roll xor adc out xchg (bad) dec lahf cld (bad) fistp dec jle fisttpll std sub sbb lods fmull cmp lret popa xchg ret sub mov pop inc ja xlat push ss (bad) push xchg movsb aad xor xchg ret repz mov adc mov xchg (bad) hlt and test mov (bad) mov lods fmull insb pushf lret add sti sub mov lcall ljmp inc jae roll xor (bad) icebp and mov adc mov (bad) mov lods fmull cmp leave cli sub mov outsb lret and adc xor sti push cmpsl clc push mov push scas add xchg ret push subb into std sub imul ljmp cmp add std sub mov add lret pop mov cmpsb xlat push xor sub mov pop mov push popf sar das pop mov stos fimull cmp enter xchg mov xchg ret push xorl arpl xorl pop mov test lcall out inc je roll aaa addr16 enter test mov (bad) mov lods fmull cmp imul mov movsl aad xor xchg ret push xchg movsb roll xor ret push xorb iret ljmp pop mov lods fmull imul mov push inc jne (bad) cmp (bad) mulb adc (bad) mov scas add adc jae roll xor (bad) lock scas fimul cmp sub mov scas fimul cld sub add xorb add add cld sub mov test pop ss (bad) push test fadds aaa xchg (bad) mulb adc mov xchg (bad) lock scas fisttp aas outsb lahf into (bad) cs lea stos fmull cmp iret ljmp pop (bad) mov lods fimul outsl sahf into std sub sbb jl fmull cmp leave stc sub mov cmpsl xlat push ss (bad) stc sub mov push inc jne aam xor ret xor lcall add ja fmuls aaa addr16 (bad) mull push test mov cwtl enter mov movsb aam xor xchg ret push xorl cmp leave stc sub mov cmpsl xlat push ss leave cli sub mov cmpsb (bad) or push xor shr dec jg fimul cmp sub mov stos fisttpl cmp rolb das pop mov stos fimull (bad) das pop mov add dec jl fisttpl cmp lret pop mov lods fmull cmp lret cli das pusha nop shr push subb into add pusha nop mov inc xchg hlt dec lret add cmc and test movsb aam xor ret stc sub mov test xchg (bad) mulb push xchg cmpsl xlat push xor and test movsb aam xor ret repnz mov adc push xor daa pop mov cmpsb add (bad) push xor add pop mov stos fisttpl cmp enter (bad) ret push test movsb aam xor cmc and in sbb jnp fisttpll std cs lea stos fisttpl cmp leave clc cs mov scas fisttp outsb lahf iret ljmp pop mov xor lcall cli push lods push mov and test lods fisttpll cld sub mov test add enter xchg movsl aam xor xchg ret repz mov adc outsl movsb roll xor (bad) icebp and scas fisttp outsb sahf into (bad) cs lea stos fisttpl cmp pushf lret std sub sbb test cwtl enter xchg (bad) icebp and scas fisttp ds sahf into (bad) sub sbb stos fimull cmp fwait int3 sti sub xchg (bad) lock scas fisttp outsb sahf int sub and scas fisttp jae,pt dec test pop scas adc sub repnz xchg in adc imul sub mov mov (bad) jo sar das pop (bad) mov lods fisttpll std sub mov fmull cld sub mov stos loopne inc jo sar das pop (bad) mov scas fisttp aas outsl mov (bad) mov scas fisttp aas outsl lahf iret ljmp pop (bad) mov lods fisttpll add popa xchg ret push (bad) mov adc mov add add xor (bad) icebp and mov adc mov xchg (bad) icebp and pop popa add add mulb adc add bound (bad) mov adc mov xchg ret sub mov stos fistl inc jno roll xor (bad) lock scas fimul jo,pt roll xor (bad) lock dec jg mov push inc ja (bad) push aaa addr16 mov test pop lods (bad) push movsl cld pop mov imul mov add adc lods adc (bad) fstl inc jno rolb das pop xchg xor mov (bad) pop xchg movsl aad xor xchg ret repz mov adc mov (bad) mov lods fisttpll push lret pop mov lods fisttpl cmp leave stc sub mov push inc jne aam xor ret push xorb int3 std sub sbb test or insb fwait lret sti sub mov cmpsb aad xor xchg add icebp and mov (bad) outsb sahf int sub mov test outsb sahf into (bad) sub and mov adc lahf iret ljmp pop lea stos fisttpl cmp leave clc daa push xchg jl fisttpl cmp sbb fwait rolb xor mov lods fmull cmp fwait lret pop mov movsl aad xor xchg ret repz mov adc lahf iret ljmp pop mov mov adc lahf into (bad) cs lea add dec jp (bad) cmp (bad) imull push xchg mov xchg (bad) lock dec jg fimul cmp xor mov lods fisttpl cmp lret pop mov test pop aaa xchg (bad) push test mov nop (bad) push xchg mov xchg ret push test roll gs (bad) repz test movsb roll xor or mov fimull cmp add leave clc sub mov push inc jne aam xor xchg ret repnz mov add dec ja (bad) push ss (bad) pop mov stos fisttpl cmp enter mov cmpsl fadds aaa addr16 (bad) cmc and adc mov mov mov cmovo into (bad) cs lea (bad) cmp enter xchg test inc jno roll xor ret push jg fisttpll add bound subb fimul cmp sub mov test xchg (bad) mull push xchg movsb roll xor fistpl xor (bad) lock mov adc lahf into (bad) cs mov scas loopne mov ja sbb iret mov lea in inc jbe aam xor xchg (bad) repz mov adc mov (bad) mov xor call lods (bad) push mov lcall pop mov scas push jno pop add add mov lcall dec movsl inc fnstenv (bad) aad jo sbb lds push adc mov imul jmp rcrb ss mull sbb jmp jbe cmp xchg pop mov mov dec les fwait es pop (bad) pop sarb adc xor test mov xchg out mov shll test push mov xchg lock scas push outsl sti popa (bad) (bad) sarb pop insb mov xchg testl and or sub int3 xor mov jbe ja cmp les cmpsb and and sub aad xchg das adc sti push test pop mov bound jns adc push jno sub xchg out test sub cs mov dec movsb add mov arpl cmpsb add jg mov jnp inc fwait out inc mov sbb mov add arpl pop jp xor adc cmp shll fidivl (bad) call ret mov ja and adc sbb les rclb ret ret pop push sub cmpsb decb cmc push stos add int cltd repz cmpsl pop les adc notl push jns inc mov (bad) clc pop xlat xor sub jp push mov mov lods adc xor add (bad) and out push mov sub fildl or notl pop mov push mov and fnstcw test imul xchg notb adc cmp fwait add das mov pop mov mov xchg dec scas push les jnp pop (bad) and add xor xchg cmc push mov jbe cmp sub js inc cmpsl (bad) add aas stos push insb leave sub mov push mov cmpsl and jecxz mov mov push mov jg dec stos or add cmc push shlb pop mov add dec mov mov jge inc mov xchg dec mov je cmp cs clc popa shll negb and je ss add and jmp scas adc aas movsb pop lds xchg dec lods sbb inc movsb pop push pop mov scas movzbl mov cmp scas or sbb push pusha mov push and add sub xlat sub ja sub inc lahf cld push mov imul mov ja daa (bad) faddl push scas add adc ret and or jb ss out inc fwait clc push mov add and fiaddl sti pop mov inc test mov je cmp xchg inc mov jnp aas sahf pop leavew das xchg hlt pop mov mov jl dec mov jo cmp add lret xor jne inc mov nop icebp add add daa mov push mov cwtl sti pop ret sub icebp pop mov mov mov sub (bad) pusha (bad) xor jo sub xor negl pop sub mov jns aas mov nop lock mov mov jge dec stos or xor mov push mov je cmp mov pop mov mov in cltd lock mov jp and leave push gs add popf call push jne xor in movsl add add add sahf add and ja cmp xchg clc pop mov lods adc xor notb insl enter add data16 inc mov sub push les cmp (bad) jmp std push and or or into xor jnp inc cmpsl pcmpeqw cmp lcall xchg clc pop mov shll in dec mov jnp add add inc stos adc fdivrl scas adc cmp cmp mov dec mov gs push mov scas pop js xor cld pop les mov pop mov js inc cmpsb or add cs push mov stos push je cmp lahf std fs mov mov dec mov jge cmpsl push je aaa test insl (bad) xor lcall sub mov pop shll add and sbb roll add push imul shll jno adc mov mov js aaa xchg cli pop mov mov lods sbb js inc cmpsl adc mov mov mov cwtl add vprotd dec lods adc mov movl fild push sub jmp stos push jp inc cmpsb or xor mov push mov movsb add sub push and icebp push mov add add add aas mov mov inc movsb push outsb or gs xor in push mov jp cmp jle inc xchg repz mov nop cmc pop mov xchg negb and cmp xor repz lds sbb fwait cld push mov ja inc mov jbe adc int mov dec mov ja aaa lcall adc inc movsl add add add cs push mov sub pushf (bad) dec movsb add (bad) push scas adc call test push test push cmpsl add lret jmp leave cmp xchg negb (bad) icebp push mov jnp dec lods (bad) inc add popf or sub ja inc pushf dec mov popf add sbb push jl aas mov movsl pcmpeqw cmp xchg std pop lds nop hlt push (bad) es in inc stos sbb inc movsl push jb cmp dec mov lcall je ds add insb iret xor and repnz shlb repz les imul iret and in mov sub in (bad) call xchg out inc cltd out xchg sub xor mov movq cmp addr16 and jne dec mov jle jne cmp mov dec lods adc aaa mov xchg cli pop ret out push mov jp inc cmpsl or mov pop mov mov add add add sbb dec mov js aaa add mov xchg cmc pop ret sub jl push mov jns cmp negl sub xchg cli pop mov movsl or ss cld pop shrb out dec test jbe inc mov cwtl cli pop mov stos adc xor (bad) in dec test jns inc movsl push jne cmp sub xor sub mov jl inc stos or xor loop mov xchg notl mov movsl or cmp nop stc pop mov cmpsb pop je aaa pushf std (bad) (bad) and jecxz stos or pushf (bad) pop iret cs icebp pop les mov push mov jnp inc test les xchg sti imul nop repnz (bad) sub lock mov jbe inc cmpsl or aaa xchg stc pop les stos or cmp add das xchg stc pop mov mov add jns inc movsl add sarb pushf std pop shll repz mov ja cmp mov add push mov ja cmp mov pop mov mov mov jl inc lahf pop outsl (bad) xor ljmp sub mov push ret and jle dec lods adc cmp xor jmp xchg jae aas movsb add sub (bad) lock mov jb cmp (bad) out pop mov cmpsl or inc stos push jo inc mov mov pop ret in dec mov jns ds (bad) aad mov add inc test jb das xchg clc push mov scas or fnstsw mov xchg std pusha lds repz mov jp inc movsb pop insl (bad) aaa fwait cld imul ret lock mov mov jge dec lods adc cmpsl or xor mov stos emms fiaddl or cmpsl or sub jbe aas fwait cld pop lret hlt push mov mov outsl aad mov xchg cli pop (bad) sub and jl dec mov add jbe xor nop lock scas sbb retw daa mov pop mov stos pop push pop les xchg repnz xchg in xchg out inc lahf push pop mov pop scas or or mov push lahf out aas mov das jg pop js pop gs dec cwtl in jbe or xchg and test cltd enter mov test pop aaa addr16 (bad) mull push xchg cmpsl xlat pop ss (bad) mulb push xchg stos fisttpl add fs iret ljmp pop mov scas fimul (bad) outsb mov stos fildl adc mov nop (bad) lock mov adc cmpsl xlat pop aaa test cmp pushf int3 std cs mov stos fisttpl cmp enter xchg mov nop mov mov adc jae rolb xor shr dec jge fmull push lret pop xchg movsl aad xor repnz mov (bad) outsl sahf into add popa add add add sbb sbb add cld dec sahf repnz lahf decl (bad) pop test push mov pop scas add adc adc and xchg sti push scas sbb sbb or mov mov shlb es sbb ret sbb and je and lret lret leave jae push push sbb (bad) jb jae sbb mov pop mov push pop outsb shlb loopne cltd stc dec movsb add add or and sub add fildl push lods movq and fnstsw xchg jmp xchg in dec scas or es inc cmpsb (bad) fdivrs notl or sub push rcrb fstpt popf add sbb fnstenv (bad) jmp movsl add sbb (bad) pop mov mov xchg push scas adc add pop test cmp pop mov insb sbb aad call fmull cmp leave stc sub mov movsl aam xor ret repnz add add cmpsl (bad) push xor and mov adc outsb sahf int sub mov test pop ss (bad) push xorl aad xor shr popa xchg ret repz mov adc mov mov stos fimull cmp (bad) mulb adc mov xchg (bad) repz mov adc mov lea fimull cmp (bad) mulb push test rolb das pop mov add mov (bad) outsb popf into push scas add add test pop (bad) mov lods fmull imul mov push lods add mov pop stos cli dec movsl add pop inc ja aad xor jne cmp dec jp (bad) aaa lds (bad) adc mov xchg clc dec cmpsb or std push movsl cmc dec mov popa scas or add dec fwait in inc xchg adc push xor and xorl (bad) jno cmp inc popf and out add daa pop mov cmpsl xlat pop aaa addr16 (bad) mull push xchg cmpsb (bad) push ss (bad) push test mov xchg (bad) icebp and mov adc add arpl xorl pop mov scas fimul cmp sub mov test popf into std sub sbb jnp fisttpl cmp lret pop mov test or inc jb roll xor (bad) lock add add mov adc add icebp and scas loopne aas outsb sahf into add pop mov stos fisttpl cmp leave stc sub mov push inc jne (bad) cmp (bad) mull push rolb ret mov aad lcall test aam cwtl enter mov cmpsb (bad) add ljmp pusha nop shr dec xorb iret ljmp pop mov lods fmull cmp lret pop mov cmpsl xlat push ss mov test cwtl (bad) mull push xchg movsb aam xor xchg (bad) hlt and xorl rolb xor ret push mov cmpsb (bad) push xor and add pop (bad) mov loop stos add mov push movsl cld dec mov pusha lret (bad) daa mov cmp mov pop stos cli push mov xor outsb ret sbb sbb dec mov bound or pop jne and in dec mov je xor aas xchg testb mov pop mov add adc push addr16 fs je and inc (bad) fdivrl xchg call cmpsl push jg sbb test or imul inc jne aam xor xchg ret repnz mov sbb cmpsl xlat pop aaa addr16 (bad) cmc and adc jae rolb xor (bad) lock scas fimul aas outsl lahf iret ljmp pop mov add fmull jno rolb das pop mov lods fmull cmp lret pop mov cmpsb (bad) push xor and xorl roll xor (bad) cmc and adc mov insl roll cmc and adc mov nop mov lods fmull imul mov lods fisttpl cmp lret pop mov movsl aam or push enter mov mov lods fmull add cmp leave clc sub jmp dec jp fmuls aaa addr16 (bad) cmc and test mov xchg (bad) push test movsb roll xor repz cmpl xlat or addr16 (bad) mulb push test rolb xor (bad) lock dec jle fimul sti sub jmp dec jp (bad) cmp sub mov jne aad xor xchg ret repz mov adc mov xchg (bad) hlt and mov add inc jno roll ss (bad) mulb push xchg movsb aam xor xchg (bad) cmc and test rep add push push test movsl aad xor lcall jmp fadds aaa addr16 (bad) imull pop mov cmpsl xlat push add sub hlt and xorl fadds aaa addr16 (bad) cmc and adc jae rolb xor (bad) icebp and mov (bad) outsb lahf sar das pop mov lock dec jg add scas fisttp ds popf int3 cld xor (bad) lock mov adc outsl lahf iret ljmp pop mov lods fmull cmp lret pop mov test pop aaa addr16 xabort push mov stos fisttpl cmp int3 cld sub mov lods fisttpll cld sub lea fimull cmp lret pop mov scas fisttpll inc jb rolb xor (bad) icebp and scas loopne aas outsl lahf iret (bad) sub sbb jnp fiaddl or push leave stc sub mov stos fisttpl cmp leave cld sub mov test cwtl enter xchg jge fmull imul xchg ret pop mov sub es sbb (bad) ret mov push mov pop mov insb iret dec mov xchg (bad) push test loope inc jno roll xor (bad) icebp and mov adc mov mov mov (bad) outsb sahf int sub mov stos fistl inc jno roll xor shr dec xorb into (bad) das pop (bad) mov scas fimul aas outsb sahf into add popa xchg ret push xorl xchg (bad) mulb push test test cwtl enter mov cmpsb (bad) add xchg pop push xchg movsl fmull insb pushf int3 cld sub mov stos fimull cmp leave stc sub mov test cltd leave clc xor (bad) lock dec jg add adc or imul dec jns (bad) cmp (bad) mull push xchg movsl aad ss enter xchg stos fisttpl insb fwait int3 sti sub mov test pop aaa addr16 xabort push xchg cmpsl fimull cmp enter xchg test popf into (bad) cs lea lods fmull cmp pushf int3 cld sub lea scas fisttp aas outsl mov add pushl popa xchg ret push xorl imul dec js fadds cmp enter mov test cwtl enter xchg stos fisttpl cmp lret cli sub mov stos fisttpl cmp lret pop mov stos fisttpl cmp lret pop add subb lods fisttpll aas outsl sahf into (bad) cs lea lods fmull cmp lret cli sub mov add add xchg (bad) cmc es test stos fisttpl cmp lret pop mov test fwait lret cli sub mov test fisttpll aas outsl lahf into (bad) cs mov mov adc movsl aad xor and pop inc jbe xlat or imul dec jp fimull cmp into (bad) cs mov hlt and test (bad) push xchg test pop aaa addr16 (bad) mulb push xchg add add add arpl xorb xlat push ss (bad) push xchg mov xchg (bad) icebp and scas fisttp aas outsb lahf into (bad) sub sbb jnp add adc cmpsb aad data16 mov stos (bad) cmp enter outsl in and xorl roll xor mov lods fstl add arpl inc jne roll xor (bad) lock scas fisttpll insb fwait lret add add pop mov movsb aam xor (bad) lock adc jae roll xor shr dec jge fmull imul mov cmpsb (bad) add repnz mov (bad) jne aad xor ret push xorl pop mov stos fisttpl cmp leave clc sub mov adc add arpl xchg cmpsb aad xor xchg ret repz mov adc outsl sahf lods in push dec jge fldl add add std sub mov (bad) mov adc add add (bad) mulb push test mov (bad) mov lods fisttpl cmp enter test mov xchg (bad) mulb adc mov mov stos fisttpl cmp (bad) mull push test roll xor mov mov (bad) outsl sahf into std sub mov stos fimull cmp (bad) mulb push test add adc jae rolb xor mov lods fmull push mov sbb test push ss (bad) hlt and mov adc sahf into std sub mov test xchg (bad) cmc and adc mov xchg ret push jg fimul cmp sub mov movsl aad xor xchg ret push subb lret cld sub mov lods fmull add mov lea mov push ds popf int3 sti sub mov jmp fadds ss (bad) push xchg cmpsl xlat push ss (bad) mulb adc mov nop mov scas fimul cld sub mov aam xor xchg (bad) hlt sub mov lods fmull cmp lret cli sub mov stos fimull cmp enter add pusha (bad) mov scas fimul outsb sahf int aaa addr16 (bad) mull push xchg movsl aad xor xchg (bad) repz mov adc add mov xchg (bad) lock scas fisttp outsb popf int add imul inc jbe aad xor and test rolb xor (bad) lock scas fimul outsb sahf into ljmp pop mov hlt and test rolb xor (bad) icebp and mov adc outsl lahf iret ljmp pop (bad) mov scas fisttpll add movsl (bad) push ss (bad) pop mov jl inc jb roll xor (bad) lock dec jg fimul cmp add add mov test cwtl (bad) mulb push mov scas fisttpll jp sub sbb or or push pop mov jb adc inc jl fmull imul mov mov adc mov xchg (bad) icebp and scas fisttp aas outsl lahf into (bad) cs (bad) mov scas fimul outsl sahf into (bad) cs mov mov jmp dec jnp fisttpl cmp leave stc mov fs inc nop fildll add or jmp adc (bad) (bad) xchg icebp dec stos add rcrl fistpll xchg in inc lcall imul jg das xchg sub sub sbb dec xchg add sti xchg push addr16 sbb inc add fcoms xor repnz mov push outsb popf int3 cld sub mov test or addr16 (bad) cmc and xorl xlat pop ss (bad) hlt and xorl iret ljmp pop lea add cmp sub mov cmpsb (bad) add clc sub mov movsl aad xor and xorl into (bad) sub sbb stos (bad) cmp leave clc sub mov sbb add inc jno iret (bad) cs lea stos (bad) cmp (bad) mulb adc mov mov cmpsl sbb lcall inc cltd ljmp aas mov inc jne (bad) add add repz mov adc lahf sar das pop mov cmpl fmuls aaa push push test movsb aam xor (bad) icebp and scas fisttp cmp sub mov movsl aad cmp leave clc daa push xchg movsb aam xor (bad) lock mov (bad) insl popf int sub lea scas fimul std sub pop dec jle fisttpll imul mov movsl add aad ss (bad) cmc and test mov xchg (bad) push cmpl fadds aaa data16 mov cmpsl fadds aaa xchg (bad) mulb push test movsb roll arpl (bad) mov adc add repz mov adc outsl sahf into std sub push dec jge fmull cmp lcall call (bad) push ss add add gs (bad) repz mov adc mov add (bad) mov adc outsl lahf into (bad) sub sbb or push int cs mov lods fisttpl cmp lret pop mov lods fisttpl cmp enter mov test cltd lret pusha (bad) mov scas fimul cmp sub mov stos (bad) cmp leave stc sub mov sbb cmpsl (bad) add mulb push mov scas fisttpll sti add bound add outsl lahf iret pushl pop (bad) mov scas fisttpll outsb sahf into (bad) sub and mov adc jb roll xor ret push xorl pusha nop mov lods fmull cmp leave clc sub mov push dec jp (bad) cmp jo iret ljmp pop lea stos (bad) cmp (bad) mull push test movsl aam xor (bad) lock scas fisttpll add pop mov stos fisttpl cmp leave clc daa add mov push inc jbe aad xor xchg ret push (bad) mov adc add clc sub mov adc add popa xchg (bad) repnz mov adc lahf iret (bad) sub sbb stos fimull cmp (bad) mulb push test test cltd leave clc daa push xchg add lcall out inc jbe aam xor ret push jg fisttp outsb mov xchg ret repnz mov adc mov add add bound subb rolb xor (bad) lock scas fisttp cmp xor xchg xbegin add and test xlat push cmp lret pop mov loop inc jb roll xor ret push xchg cmpsl (bad) cmp enter mov fimul cli sub mov lods fisttpl cmp popf int sub mov mov pop inc ja (bad) add hlt and add push test xlat push ss (bad) repz mov adc roll xor ret pop lea mov adc outsl lahf iret (bad) sub and mov lods fmull cmp fwait lret pop mov test or push iret ljmp pop xchg vmovaps mov push inc jne aam cmp int3 add xchg (bad) push xorl roll xor es xchg mov adc jae rolb xor rolb add add add mov adc pop cmp enter mov lods fmull outsb lahf into (bad) sub and xorl (bad) pop aaa cbtw leave stc sub mov sbb cmpsb (bad) push xor and adc push aaa imul push test movsb aam ss (bad) cmc sub mov stos (bad) cmp leave clc sub mov pop inc jbe aad xor xchg (bad) imull pop mov stos fisttpl cmp add mov jg fisttp aas outsb sahf int sub sbb jnp fmull outsb popf int xor (bad) icebp and mov adc lahf into ljmp pop (bad) mov mov pop inc jne aad ss (bad) push xorl add stc sub mov cmpsb aad ss add cld sub mov lods fisttpll jb,pt rolb xor (bad) icebp and mov adc movsl loopne inc jno aad ss push add add jae rolb fs (bad) cmc and adc add bound jg fimul inc jae aam xor and xorl roll xor (bad) lock dec jg fisttp ds sahf into (bad) cs lea stos fisttpl cmp aaa lcallw mov scas loopne inc jo sar das pusha nop mov xchg movsb roll xor (bad) imulb push xchg mov adc mov xchg (bad) push xorl add popa nop shr dec jg fimul cmp sub sbb mov adc mov nop (bad) hlt and mov adc fmull imul ljmp inc jno roll xor xchg ret push xchg test or imul dec jnp fmull cmp in push int3 insb mov push movsl stc dec cltd out adc xchg out inc cwtl lock xchg out add aas xchg jmp xchg loop xchg in dec sahf jmp adc add stos add pop jns sub xlat sub sbb popa mov push movsl (bad) dec pushf repnz sahf lock mov jo xor add and in lahf (bad) pop mov nop out pop mov outsb int3 sub out cmpsl add mov fwait (bad) pop mov popa mov dec pushf out lea dec jle fisttpll std sub sbb stos loope inc jo sar das pop pop lock mov adc mov popl (bad) mulb pop xchg movsl aad xor xchg ret repnz mov adc cmpsb (bad) push ss (bad) push xchg mov xchg ret push xorl pop lea stos fimull cmp into (bad) sub sbb jl fisttpl cmp leave stc sub mov cmpsl (bad) push ss (bad) push xorl roll xor (bad) hlt and xorl rolb xor (bad) lock scas fisttp aas outsl lahf into (bad) cs mov lods faddl adc mov (bad) mov mov adc xor fldenv je push mov cmpsl inc stos sbb add repz jecxz inc jae rolb xor (bad) icebp and mov test pop aaa addr16 (bad) mulb adc jae roll xor (bad) icebp and push xchg movsl aad xor xchg ret repz mov sbb test pop aaa add add add test movsl aad xor sub mov push inc jbe aad xor xchg ret repz mov adc cmpsb (bad) add hlt and xorl roll xor ret push xorl pop lea lods fisttpll insb fwait rolb das pop (bad) mov scas fimul ds popf int3 cld sub mov xchg add bound xorb into std sub and mov adc lahf into (bad) sub sbb or imul mov test pop ss (bad) mulb push test stos fimull cmp lret pop mov cmpsl xlat push aaa xchg (bad) mulb pop inc jbe aad xor and mov adc mov lcall ljmp push outsb sahf into incb fs (bad) cmc es xchg cmpsb (bad) push aaa addr16 (bad) mull push (bad) mov mov add loopne inc outsl mov xchg (bad) icebp and mov adc mov xchg ret repz xchg cmpsl xlat pop aaa addr16 (bad) std sub sbb or (bad) sub pop dec xorb roll xor (bad) mulb push xchg stos fisttpl cmp rolb xor ret push (bad) mov adc mov xchg (bad) hlt and adc push ss (bad) push xchg cmpsl fmull insb pushf int add pop mov scas fimul cmp cs mov scas fisttp aas outsl mov xchg (bad) cmc and pop dec jge fmull std sub push dec jge fimul add test lcall ljmp cmp lret pop mov repnz mov adc je aad xor and sbb test or imul dec jp fimull cmp std xor (bad) add mov pop inc js fimull cmp cld sub mov fimul aas jo iret add arpl xchg lods fimul outsb lahf iret pushl popa xchg ret push test cmpsl fistpll sub pop lods sti inc xchg in xchg and adc add jecxz xchg daa jne minps aaa xchg cmp in inc sahf repnz popf repz fwait call mov jo xor out cltd add or sub add lods (bad) push mov js xor (bad) lds add pop mov je cs cmp add jp aaa cwtl hlt pop mov mov cwtl lock mov insb leave pop sbb fwait add test popa mov test push lods or lret das nop ljmp out push dec test movsb roll xor ret push xorl pop (bad) mov lods fisttpll cli sub mov test or imul lret sti sub mov test pop ss (bad) cmc push jecxz popf hlt inc xchg loope xchg xor sub mov dec sahf out ds loopne xchg sub and jno pop jge and es sub cmp pop mov xchg lock popf out push mov ja xor inc lcall cmp inc pushf repnz mov sub gs sbb (bad) out push mov xchg sub xor cmp in dec scas or cmp sbb adc fsubrs mov push mov jge dec stos pop sub mov jp cmp faddl add mov dec mov mov dec mov (bad) out lods pop ja aas sahf add xor xchg addr16 sub fimull cmp leave stc sub mov test or imul dec jns (bad) cmp (bad) imull pusha nop mov add add pop dec jle fisttpll (bad) sub push stos or (bad) xor add cmp aaa addr16 (bad) mulb push xchg scas loope inc jno rolb xor shr dec jle fimul cmp sub sbb or add rolb xor (bad) lock mov adc add fs ret repz jecxz inc jae rolb xor ret push xorb iret ljmp pop (bad) mov lods fisttpll add add pusha nop (bad) lock dec jle fimul cmp sub mov fisttpl cmp lret pop mov cmpsl (bad) push ss leave stc sub mov cmpsb (bad) push ss (bad) push test rolb xor ret repz mov adc mov nop shr push test roll xor (bad) lock scas fisttp outsb popf int sub sbb jnp fimull cmp lret pop mov lods fildl add add insb fwait lret sti sub mov test lcall call fimull test sbb add and sub xor (bad) icebp and mov adc mov xchg ret push (bad) mov push mov xchg cmc pop mov xchg add mov (bad) mov scas fisttp outsb sahf int cs mov lods dec mov scas cmc and adc jae rolb xor sar add pop mov test pop aaa addr16 (bad) mulb push test movsb roll xor ret push xorl pop mov mov adc mov (bad) mov scas fisttpll std sub sbb test cwtl enter xchg stos fisttpl cmp leave stc sub mov cmpsl (bad) push ss (bad) push test rolb xor ret repnz mov adc inc ja xlat or cmp lret cli sub mov test or addr16 (bad) mull push xchg movsl aam xor xchg ret repz mov adc mov xchg (bad) mulb push xchg movsl aad xor xchg ret repz mov adc roll xor ret push (bad) mov adc mov xchg (bad) push test mov xchg (bad) hlt and test roll xor (bad) icebp and mov adc mov (bad) mov push xorl test aaa xchg (bad) mulb push test mov xchg ret repnz mov adc mov mov mov adc add xchg ret repnz mov adc mov (bad) mov scas fisttpll std sub sbb mov out inc ja (bad) push ss (bad) push test roll xor (bad) icebp and mov adc outsl lahf iret ljmp pop mov lods fldl add inc jb rolb xor (bad) lock mov (bad) outsl lahf iret ljmp pop ljmp jbe (bad) pop aaa addr16 enter xchg cmpsl xlat (bad) outsl mov pop lock mov cmovo sar das pop nop (bad) lock dec jg fisttp aas outsl sahf into (bad) das pop mov lods fimul add arpl (bad) mov adc mov nop (bad) lock dec jg fisttp inc outsl lahf iret ljmp pop (bad) mov lods fisttpll add add add bound xorl pusha nop mov scas fimul cmp sub sbb jl fisttpl cmp pushf int3 cld xor ret add sub shrb test xor out je loopne inc jo rolb xor (bad) lock mov adc mov (bad) mov mov test lcall ljmp cmp popf int sub sbb jl fmull insb pushf int3 cld sub add mov repz mov adc mov xchg (bad) push test cmpsl xlat pop cmp xbegin mov imul gs push mov jae adc in cmp add lods (bad) push mov push or cmc inc sahf out dec mov push popf repnz mov jo and stc pop mov xchg inc pushf stc dec fwait jmp cwtl call jbe pop imul jb das mov xor in push mov push sub add test dec lods push outsl int3 sub addr16 and imul jg cmp push sbb data16 and adc and and xchg dec mov arpl jg xor sub mov pop inc jbe loope inc jno roll xor mov lods fmull cmp lret pop mov test pop aaa addr16 (bad) mulb push test add roll xor (bad) push test rolb xor (bad) lock dec jle fisttpll cld sub bound (bad) mov adc mov xchg (bad) mulb push test mov xchg (bad) lock dec jg fimul add roll xor ret repz mov adc lahf iret ljmp pop xchg ret repz mov adc mov (bad) mov scas jmp clc dec mov cmp ss lock cwtl in inc xchg add add aas lcall sub add rcll and cmp xchg loope xchg imull sub (bad) dec lahf repnz mov pusha mov fwait notl push cmp popf lock xchg cmc push mov outsl ret mov pusha scas add push mov inc xchg cli pop mov mov push mov insl out sub mov cmpsl xlat push ss (bad) push test lods fmull imul add int3 cld sub mov mov adc mov (bad) mov scas fimul ds popf int sub add xorb iret (bad) cs lea mov cmovo rolb xor shr dec jle fisttp outsb popf int sub sbb stos fimull cmp leave stc sub mov lods fisttpll sti sub mov test cltd enter mov movsl aad xor xchg ret repz pop add mov cmpsl xlat or push leave stc sub mov cmpsl (bad) push xor and xorl rolb xor ret push subb rolb xor hlt and xorl rolb das pop (bad) mov lods fisttpl cmp lret pop mov movsl aad or push leave cli sub mov stos fisttpl cmp leave stc sub mov push inc jbe aad xor xchg ret repnz mov out inc ja je add push leave stc sub mov scas fisttpll test dec mov jbe cs lea stos fimull cmp leave stc sub mov push inc jne aam xor xchg lret pop mov test ss lock nop jmp int xchg ret push xorb into (bad) sub add push xorl fs ret repz xor loope inc jo rorb add sbb pop addr16 inc add add jg inc ja xlat push ss rolb xor mov lods fisttpll cld sub mov test or addr16 (bad) mulb push test roll or imul dec jle fimul cmp sub mov stos (bad) cmp enter xchg jge fisttpll cld sub xchg (bad) icebp and scas fisttp aas outsb sahf iret ljmp pop mov lods fmull imul mov add jns (bad) cmp (bad) mull push xchg test cwtl enter xchg movsl aad xor xchg (bad) push test xchg ret repz mov adc dec jnp fistl inc jb rolb xor ret push xorb into (bad) sub sbb fmull cmp leave stc sub mov cmpsl xlat push ss sahf int sub sbb stos fimull cmp (bad) mull push xchg mov xchg (bad) icebp add add push xorl xor sub mov test lcall out inc jbe xlat push ss (bad) push xorl test pop aaa addr16 (bad) imulb pop mov test cwtl enter mov movsl (bad) add repz (bad) mulb push test rolb cmc and adc mov mov stos fimull cmp enter add mov adc jne aam xor ret sub mov stos (bad) cmp (bad) mulb push test mov (bad) mov lods fisttpl cmp leave stc sub mov stos fimull cmp (bad) mulb adc mov (bad) mov scas fimul cld sub mov cmpsl (bad) push ss lds add pop (bad) mov lods fmull imul mov cmpsl (bad) push xor repz fldcw (bad) add add arpl xchg movsb aam xor ret push xorb roll xor mov scas fimul sti sub mov lods fisttpll imul mov cmpsl xlat pop ss (bad) push test mov xchg ret push (bad) mov adc lahf iret add add lret pop mov cmpsl xlat push ss (bad) push xorl add add nop shr dec jle fisttpll cld sub xchg (bad) lock mov adc outsl lahf iret (bad) sub sbb jnp fisttpl cmp leave clc sub cmp das pop mov stos fimull aas jo add add fs (bad) hlt and xorl roll xor mov lods fmull cmp lret pop mov add movsl aad xor xchg ret push jg fisttp ds popf int sub sbb stos add add or imul clc sub mov pop dec js (bad) push cmp sub sbb jnp fisttpl cmp leave stc sub mov cmpsl xlat push ss (bad) push test roll xor xchg jbe add fidivl jg pop push adc adc and and push imul mov push test pop mov bound inc popf repnz xchg ljmp sub sbb pop jle cmp fs sbb (bad) and push jbe inc mov add mov popa mov mov addr16 dec scas or sbb aaa mov cmp jne daa jg cmp add add imul mov stos fisttpl cmp lret sti sub mov stos fimull cmp lret pop mov test or addr16 into (bad) cs mov lods fisttpll std sub sbb add dec jl adc mov (bad) mov scas fisttp aas outsl lahf iret pushl push addl jmp dec jp fimull cmp enter xchg movsl aad xor mov and mov adc mov cltd leave stc sub mov test pop aaa addr16 (bad) mull push xchg movsb aam xor ret repnz mov adc mov xchg (bad) push test mov adc out xchg dec movsl sbb popa mov lcall cs mov nop (bad) lock dec subb iret ljmp pop (bad) mov scas fisttp aas outsl lahf iret ljmp pop mov scas fisttpll std sub xchg ret repz mov adc jo iret ljmp pop lea stos fimull cmp enter xchg movsb roll xor xchg ret push xorl arpl pop xchg movsb add add bound xorl pop mov fimull aas outsb sahf into (bad) cs lea fimull cmp enter xchg movsb roll xor ret push xorb int sub xchg (bad) icebp and test sub mov cmp out sahf out inc xchg out xchg in (bad) ds adc adc and xor stc dec stos add fnstsw sahf in xor add add pop lods add sbb fdivs xchg in mov inc popf in aas xchg jecxz mov xor push inc xchg in mov push movsb (bad) dec popf stc push test cmp jl and jns es push xchg (bad) mulb push test mov pushf lret cli sub mov jge fmull imul mov cmpsb aad xor and mov adc lahf into (bad) xor ret push (bad) mov adc outsl sahf into std sub add add jns fmuls aaa addr16 (bad) push xorl sar cs lea fisttp ds pushf lret sti sub mov jle fisttpll insb pushf lret sti sub mov cmpsl (bad) add repz or insl ret xor bound cmpsl (bad) cmp enter push xor pop mov scas fimul ds sahf into (bad) cs lea lods fmull insb pushf aad ss (bad) push test mov roll xor (bad) lock dec jge fmull imul mov push inc jbe aad xor add lea stos fimull cmp enter xchg movsl aam xor xchg ret push (bad) mov adc lahf into std sub sbb ret jbe xor int outsb mov bound dec lahf out inc xchg in (bad) in loopne roll xor (bad) lock scas fisttp inc jo fimull cmp lret pop mov add jns (bad) cmp enter mov test cwtl enter inc aad cmp sbb mov adc mov nop mov lods fmull insb fwait lret cli sub push test push test push movsl add jp xchg aas xchg out add xlat dec scas push arpl lods sbb xor xchg out dec mov mov pop mov and lcall es sbb add jb adc insl int3 cmp add add sti push lods add or push jg dec test push lods push pop mov movsl (bad) push stos pop shrb lock lods sbb loopne lahf or sub pop lds fidiv out scas sbb cmp notl pop jl xor sti imul mov mov xchg stc pop mov mov sbb lods adc xor pop js cmp mov cmpsl sbb inc inc scas or aad movsb pcmpeqd add aaa mov nop call test nop mull and push mov dec lcall aaa sahf sti pop ret fidiv xchg add sub sub movsl add xor jmp xchg out (bad) fildll jle and sub add and cmc pusha rcrl pop shlb loopne xchg clc pop mov mov sub mov lds xchg stc pop mov push sub mulb xor add dec cmpsl (bad) jo cmp and nop out xchg in pop leave sub push lods adc push lret cld push mov leave xor jbe and xor faddl adc hlt push lods add jge inc xchg in inc popf or cmp mov dec cmpsl pop jnp aaa mov arpl aas stos adc inc fwait negb sub (bad) inc cmpsb add std pop ret fisttp sbb inc test mov mov sub fdivs (bad) out pop les jnp xor std popa mov xor jecxz mov jle pop les inc test (bad) data16 xor mov cmp std popa leave sub or xlat cmp stc pop mov mov mov xchg lock cltd repz cmpsl cld push test pop mov push cmp jmp cmpsl add aad lcall sub mov test inc lcall sbb add add cmp xchg sti push mov gs sub mov sbb mov inc popf negl push jns cmp adc es cmp test dec cmpsb lcall adc enter or sbb ss (bad) pusha leave sub push lods or sub in inc mov je inc test mov inc xchg out inc lahf lcall xchg in push mov imul jbe xor ja inc stos stc dec cltd in inc (bad) fsubrl ja and add add add (bad) out fwait repnz lahf std pop mov mov inc movsl push push pop ret lds outsb iret inc mov insl shlb in dec movsb ljmp cmp scas or mov pop mov jle inc movsb add negl xor (bad) dec lods pop fwait int3 cld sub mov fisttpl cmp lret pop mov cmpsb (bad) push ss (bad) push test movsl aam xor cltd leave stc sub mov add xchg (bad) mulb adc add arpl xorl pop (bad) mov mov adc movsb roll xor ret repz mov adc cmp imul mov scas ficom inc ja and mov adc add arpl add jns fmuls aaa addr16 (bad) mulb push xchg movsl aad xor xchg int3 cld sub mov add add cwtl enter xchg cmpsb (bad) push xor and jecxz inc jb rolb xor shr push test movsb (bad) mov and mov adc mov (bad) mov mov adc je aam xor xchg ret repz mov adc jl fmull push lret pop mov movsl aam xor ret repnz mov (bad) outsb popf int sub mov test fwait lret cli sub mov ja (bad) pop aaa xchg (bad) push xorl iret ljmp pop lea stos (bad) cmp (bad) mull push test (bad) add repz mov adc outsl sahf into std sub repz mov adc lahf into (bad) cs lea fimull aas outsl sahf into (bad) sub sbb stos (bad) cmp (bad) cmc and adc mov lea lods fmull imul insl pushf int3 cld sub mov add sbb test xchg (bad) mulb adc mov nop (bad) lock dec jle fimul cli sub mov stos fimull cmp (bad) mulb push xchg mov mov lods fimull cmp enter xchg mov xchg (bad) push (bad) mov adc lahf iret (bad) das pop mov stos fimull cmp (bad) mull push test mov (bad) mov mov adc lahf add (bad) sub sbb stos (bad) cmp (bad) mull add dec jp (bad) cmp (bad) mull push xchg test xchg (bad) cmc and test mov nop shr dec jge fisttpll imul mov cmpsb xlat push ss enter xchg movsb aam xor ret push jg fisttp cmp sub mov cmpsb aad xor xchg ret repnz mov push inc jne aam xor add pop mov lods fisttpll std sub push dec jle fimul outsb sahf into ljmp pop (bad) mov mov push inc jbe (bad) push ss (bad) push test cmpsl xlat pop aaa xchg (bad) mulb pop xchg cmpsl xlat or fistpl push (bad) mov adc test or push push xchg mov fwait int3 cld sub mov lods fisttpl cmp lret cli sub fmull insb fwait and cs add jg loopne aas outsl lahf add push ss (bad) mull push xchg cmpsl xlat add imul dec jp loop inc jb rolb xor ret push (bad) mov adc mov xchg (bad) lock mov (bad) outsl lahf iret ljmp pop mov scas fist xor and xchg cmpsb (bad) push aaa addr16 (bad) mull push xchg cmpsl xlat pop aaa loop int3 adc mov je sub fdivs add test sub inc cltd out dec lods add notb cmc dec mov jl sbb sub dec mov xchg push mov sbb scas adc xor cs in pop mov cmpsb add int (bad) call add sub std push pop mov mov iret ds out inc xchg out lret out ss dec popf jmp jl xor add push imul jae and jmp add sbb mov cmp (bad) out dec mov jl ds cld iretw das mov pop rcrl aam and movsl or in test cmpsb cld push mov imul mov xchg push mov stos or aas mov xchg icebp pop enter pop ret mulb and jle dec mov test popf std pop mov les (bad) in pusha (bad) daa test inc fwait les and adc push mov add add push mov fwait add sub cmc dec test push stos std push movsl cld dec mov jge dec mov mov dec mov scas and lretw aaa lahf (bad) pop leave cs repnz mov pop stos sti push movsl testb add push mov xchg repz test arpl xor popf stc push mov sub stos adc das mov (bad) lret adc dec mov mov popa (bad) xor imul xchg std xlat inc test bound adc pop mov add adc sbb rcrl ljmp xchg inc mov xchg pop les xchg aas fwait or inc movsl add mov sbb into aaa sahf or xor pop mov xchg inc mov mov dec test lcall out pop mov cmpsb add pop data16 inc sahf sti gs xchg repz ret and sbb dec mov push push je inc cmpsb (bad) pop mov mov inc sahf add xor jg add add inc test popf add loopne nop out dec mov jg dec test jns inc stos push add mov pop shlb icebp add mov jg cmp aaa xchg in dec mov xchg dec stos pop jl push mov jb sub fidivl test ss in mov xor repnz mov jnp xor lds mov pop (bad) sub stos push insb leave sub dec cmpsb add push mov dec scas push add add jno es nop repnz mov test dec cmpsl add push outsl int3 sub jle inc mov imul xchg cld arpl sub ret out mov xchg in inc sahf notl sbb imul fwait cld popa enter pop mov jl inc stos push xchg push test jno xor (bad) call mov addr16 dec mov add cmp dec popf cmc push test add sbb and adc sbb cwtl icebp dec test xchg ljmp xchg jmp mov pop mov mov push mov scas jecxz inc jae aam xor ret push subb into std sub mov test xchg int sub mov test xchg (bad) mulb push test movsb aam xor ret push xorl pop mov mov mov push ds popf int sub mov stc sub mov push inc jne aad xor sbb adc lahf iret ljmp pop mov mov pop inc jbe xlat pop aaa addr16 (bad) mulb push test movsb aam xor xchg ret repz mov adc mov push push xchg stos fisttpl cmp jno roll xor (bad) lock mov adc mov xchg (bad) icebp and mov adc outsl mov popl add mov adc jae roll xor ret push xorl pusha nop (bad) lock mov adc mov (bad) mov scas jecxz inc jae rolb xor ret push (bad) mov adc mov nop (bad) icebp and mov adc lahf iret ljmp pop (bad) mov mov adc movsl aad xor xchg (bad) hlt and mov push inc jbe aad xor and adc add cmc and test add in inc je fimull cmp leave stc sub mov test cwtl enter xchg cmpsl xlat pop ss (bad) mulb push test jge fcoml inc jno roll xor ret sub mov test pop aaa push pop mov cmpsb (bad) push ss (bad) mulb push xchg stos fimull cmp lret pop mov test cwtl enter mov cmpsl xlat pop aaa push pop mov mov test push cmp sub sbb or (bad) sub sbb or std sub sbb jl fisttpl inc jb rolb xor (bad) lock mov adc mov nop (bad) lock scas fisttp aas outsl lahf iret (bad) cs mov lods fmull insb mov xchg (bad) icebp and mov adc add cmc es test cmpsl fmuls cmp enter xchg add out inc jbe lods fist inc ja xlat push ss (bad) mulb push xchg jl fmull insb pushf int cs (bad) mov scas fisttp aas outsl mov xchg (bad) icebp and mov sbb cmpsl xlat pop ss (bad) mull push xchg cmpsb (bad) add cmc and push inc jbe aad ss (bad) imull pop mov scas fimul outsb sahf int sub sbb jge fisttpll insb pushf int3 cld das pop (bad) mov scas fimul cmp add std sub sbb (bad) mov adc mov cwtl enter mov lods fmull outsb sahf int and mov adc mov xchg rol xor int add arpl xorl pop mov fimull cmp leave cli sub mov movsl aad xor xchg (bad) sti sub mov test pop ss (bad) cmc and or (bad) push xor and test in inc xchg in (bad) jecxz mov inc mov inc sahf repnz cwtl notl (bad) leave sub int mov dec lods or and push je sbb das xchg repz lods cld dec stos or pop jo pop push and imul outsl mov pushf hlt pop scas add adc mov rcrb aam xchg push mov ja sub fild add jbe daa mov insl shrl jmp popa mov pop mov push stos std dec xchg loope jp add add pop movsb out cmp add lock mov fildll je or repz mov sub adc testl push data16 dec xchg call push add out or pop lods or pop scas add testl fs lcall push (bad) mov adc mov xchg ret pop mov fisttpl cmp lret pop mov test pop aaa addr16 (bad) mull push xchg add jne aad xor xchg ret repz test cmpsl xlat pop aaa xchg (bad) cmc and adc ja (bad) push ss (bad) push xorl roll xor (bad) repnz mov sbb test fwait lret xor hlt and test add popf int3 std sub lea fimull cmp leave stc sub mov aam add mov inc in lahf std push scas lcall add out push test add add dec mov jno adc or lods sbb cmp pop les adc add xor xchg dec mov mov jne cmp xchg lock ret or pushf pop je das mov pop mov movsb stc dec sahf out inc xchg fisubr (bad) aam je sbb fdivl popf or push imul ja cmp mov ss inc mov nop jmp fidivr cwtl in push mov mov jl sub jb sub jo xor notb sbb dec lods push pop mov outsb aad test pop mov pop (bad) xor jl ds sbb dec scas adc inc scas push insl fldl push imul scas add and loope mov scas (bad) roll add ds lcall adc cmp mov xor shrb loop (bad) loope cwtl add mov push scas adc inc cltd testb ds out add add mov aas lahf add clc data16 xor (bad) loope lods adc xor xchg repz mov mov pop stos clc dec sahf repz xchg out dec lods or (bad) fidiv sbb add and mov (bad) std jo inc mov mov pop lds lcall dec mov sub lds ljmp mov jo inc lahf add add mov xor ret sbb (bad) cmp adc add (bad) sti imul xchg repnz mov mov pop mov jo cmp and lock add jb xor add xor stc pop mov shll call lret cmp pop (bad) sub jbe cmpsl or cmp aaa xchg negb and fisttp sbb dec scas push imul pcmpeqw dec movsb add (bad) cmp and mov js inc pop fild push rolw add cmp add fiaddl adc inc lods adc dec scas sbb xchg clc (bad) lret loope xchg negb and pop ret sub test inc mov imul mov jp and aad mov xor inc mov jae daa mov add pop sub shrb add cmp xor push mov outsb aam xchg clc outsb fiadd add mov imul xchg in dec add add push jns xor out mov imul mov push mov mov dec mov test push mov mov jg fldl call adc sbb xchg cld lretw sub push lods sbb aas fwait add xor inc xchg call jne sub xor inc test imul xchg jmp mov jo cmp leave pop jl pop mov je cs hlt dec cmpsb adc add xor push mov fs sub jnp dec mov test push mov pushf fimull cmp pushf int3 cld sub mov mov adc je roll xor ret add sub mov stos fimull cmp roll xor ret push xorl rolb xor imul dec jns (bad) cmp lret pop mov stos fimull inc jo iret ljmp pop pop out and scas loopne aas outsl lahf iret add add add (bad) icebp and mov adc mov xchg ret repz mov adc stos fimull cmp lret sti sub mov stos fmull insb pushf int3 cld repnz ret repz mov adc outsl lahf into std push push test lods fisttpll cli sub mov cmpsl (bad) push ss (bad) hlt and mov adc mov mov stos fimull cmp enter lea fimull cmp enter xchg add add add xchg (bad) mulb push test jp (bad) aaa xchg (bad) pop mov cmpsb aad xor xchg ret push subb movsl aam xor ret push xorb iret (bad) cs lea fisttp ds popf int3 cld sub mov test xchg (bad) mulb adc mov out and mov (bad) outsb sahf into std sub and mov adc mov mov sbb jnp fimull cmp (bad) mulb push test roll xor mov mov adc outsb sahf int sub mov test or addr16 (bad) push xorl test pop ss (bad) push xorl iret add arpl scas fimul cld sub mov cmpsl (bad) adc cmp gs dec xchg jmp pushf cmc inc lcall push jge sub xorl add add sar das pop mov stos fimull cmp (bad) mull push xchg movsb roll cmp jo iret ljmp pop lea lods fisttpl cmp enter xchg movsb aam xor cltd leave clc sub mov nop ret push (bad) mov sbb stos fidivrl lret sub stos fimull cmp enter xchg mov xchg (bad) lock scas fimul cmp sub (bad) icebp and scas fimul ds popf int3 sti sub mov stos (bad) cmp (bad) mull push xchg jl fisttpl cmp lret pop mov stos fisttpl cmp lret pop mov cmpsb xlat push ss (bad) push xorl rolb xor (bad) icebp and scas fisttp inc jae roll xor ret repz xorl push mov mov stos fmull cmp lret cli sub mov stos fimull inc jb rolb or push leave stc sub mov add add dec jns fmuls cmp leave stc sub mov stos fimull add mov nop (bad) lock dec jg in inc jne aad xor and adc je aam xor xchg ret repz mov adc mov xchg (bad) icebp and mov adc add hlt and test movsb aam xor xchg (bad) mulb adc add cmp fwait int3 cld sub mov scas fisttp aas outsl lahf iret (bad) das pop (bad) mov out push dec jle fisttpll std sub mov lods fisttpll cmp sub sbb adc mov xchg (bad) icebp and mov adc (bad) push ss (bad) mull push xchg stos fisttpl insb pushf int3 std sub lea mov adc add fimull insb pushf int3 cld sub mov stos fimull cmp enter mov add lahf iret ljmp pop xchg (bad) hlt and xorl add add xchg (bad) hlt and test movsb aam xor ret repz mov adc jne aad ss vmovntps mov lods fmull cmp xor ret repz mov adc cmpsb xlat pop cld inc jb roll xor imul mov mov adc outsl sahf into (bad) cs mov lods fmull imul mov stos fisttpl cmp lret cld repnz cwtl enter (bad) mov lods fmull add add add fisttp outsb popf int sub mov cmpsl (bad) push xor and mov (bad) insl popf int3 cld sub mov scas fimul rolb xor mov lods fisttpl cmp leave stc sub mov adc jae rolb xor mov test cmpsb aad xor xchg ret push jg ficomp xor xchg (bad) push xorl sar cs mov (bad) cmp (bad) pop mov test add fimull cmp enter test mov nop (bad) icebp and scas fisttp ds popf int3 cld sub bound jg in inc jae rolb xor (bad) lock dec jle fisttpll sub mov cmpsl (bad) push xor and mov adc mov mov push xor and xorl roll xor mov lods fmull insb fwait lret sti sub mov test popf int sub jle sbb mov stos (bad) cmp (bad) cmc and adc mov mov mov adc add arpl jg fimul cmp sub mov cmpsb (bad) add repnz mov (bad) outsb popf int3 cld sub (bad) lock dec jle fisttpll insb lcall out inc je roll xor mov lods fisttpll push enter xchg jnp fisttp add outsb popf cmp inc xchg call jnp sub xchg (bad) repz mov adc outsb sahf int sub mov test sbb in sbb jnp fimull cmp enter xchg movsb out pop (bad) mov scas fisttp outsb sahf into (bad) cs lea mov adc add repnz pop mov cmpsb (bad) push xor and mov adc mov mov cmpl add add inc ja xlat push xor and mov adc mov nop lret (bad) fisubr loopne mov mov adc mov xchg (bad) cmc and test mov mov lods fisttpl popf adc sar das pop nop (bad) icebp and scas fisttp ds popf int3 cld add push lret sti sub mov cmpsb (bad) add repz mov adc lahf into std sub sbb test pop aaa xchg (bad) cmc and ljmp ss (bad) push test roll xor mov lods fmull cmp fwait lret cli sub mov cmpsl (bad) or imul mov test pop data16 (bad) fimul std sub mov stos (bad) cmp enter xchg (bad) push test mov xchg (bad) icebp and push outsb sahf int sub mov test pop aaa xchg lds cmc sub mov cmpsl xlat push xor and mov adc outsl lahf into (bad) sub sbb test or addr16 (bad) mulb adc cmpsl add or insl pushf int3 sti sub mov cmpsl xlat pop ss (bad) push xorl roll das pop mov lods fisttpl cmp iret add pop (bad) mov lods fmull cmp enter (bad) stc push xor outsb lahf iret (bad) cs mov lods fisttpll insb popf add std xor xchg (bad) push test mov adc mov addr16 (bad) push xorl into std sub sbb cmpsl xlat push xor sub popa xchg (bad) lock dec jle fisttpll xor ret push xorb iret ljmp pop mov stos fisttpl cmp lret pop mov lods fmull push lret pop mov cmpsb (bad) push xor and mov adc movsb aam xor xchg ret push xchg jnp fisttpl cmp leave clc daa pop mov movsl sub or add pusha nop mov scas fimul sti sub (bad) lock mov (bad) fldenv fisttpll push leave stc sub mov adc add popa nop mov lods fmull imul mov lods fmull cmp leave clc sub mov push inc jne aam xor imul into and sbb jnp pop add jle out inc jbe (bad) push add pushf int3 cld sub mov stos fimull cmp lret pop mov test or push jae,pt rorb cmp (bad) mull push test mov xchg (bad) lock dec jg fisttpll out inc jbe aad xor and xorl fmuls aaa push sub sbb test xchg (bad) mulb adc mov nop mov pop dec jle fisttpll add pop (bad) mov lods fisttpll imul mov cmpsb aad xor xchg ret repnz mov (bad) outsb popf int sub mov scas fisttpll cli sub mov cmpsb fmuls cmp (bad) testb pop mov (bad) cmp (bad) push jecxz pusha nop (bad) lock push xchg mov push leave clc sub mov adc add (bad) cld (bad) (bad) lock scas fisttp add outsl sahf into std sub sbb mov (bad) outsb popf int3 cld sub mov fimull cmp (bad) mull push test mov xchg (bad) icebp and scas fimul outsb mov nop (bad) lock dec jle mov adc mov (bad) mov lods fmull imul mov test pop aaa xchg vcvtsi2ssl mov cmpsb (bad) push xor and mov adc outsl sahf into std sub sbb jnp fisttpl cmp enter pop mov mov adc mov nop mov mov cmovo rolb xor addr16 add arpl (bad) mov adc mov xchg (bad) mulb adc mov push push test mov xchg (bad) lock mov push outsb popf int sub mov lock scas fimul ds popf int3 cld sub mov test pop aaa xchg (bad) push test add mov pop out push dec jge fstl inc jb roll xor (bad) lock push (bad) add test xchg (bad) imull push xchg test push ss (bad) negb repz mov cmpsl xlat or imul dec jns xlat pop aaa enterw xor xchg ret (bad) ljmp and or mov jb sbb ret sbb xorb iret ljmp pop add sub mov stos fiaddl or imul inc jbe fisttp ds popf int3 sti sub mov cmpsb aad xor xchg ret repz mov inc xchg xchg push lock stos decb out inc lcall out inc popf in inc xchg loope jp pop jo or stos cld push movsb cmc dec fwait jmp xchg sub fisubrl add std push lods add cli push mov imul mov fsubrs jle pop outsl rorl lds pop lods cld dec cwtl loop add add or lods sti dec fwait jmp jl and (bad) sbb pop stos cli dec cltd ljmp aaa (bad) fbstp adc jae adc add icebp inc xchg ljmp and and sbb adc add repz xchg call test and pop imul cmpsb cli dec movsb cmc dec mov mov fistpl lret std sub mov jns cmp movsb aam xor xchg ret repz mov adc mov add popa nop (bad) lock mov (bad) jo rolb das add into ljmp pop lea stos fimull cmp (bad) mull push xchg mov (bad) mov lods fisttpl cmp leave clc sub mov stos fimull cmp enter xchg mov nop shr dec jle fldl adc je roll xor (bad) lock dec jle fstl inc jno rolb das into dec mov xchg (bad) repz xor (bad) test sub add add loope inc jo aad int3 sub loop xchg out cmp cmp inc lahf out dec fwait out pushf repz cwtl repnz popf clc push cmpsb cli dec mov inc xchg lock xchg out inc movsb (bad) (bad) sbb mov lret and mov inc xchg fsubl jbe and or push mov jle xor xchg imulb addl ds call or xor add adc mov jo cmp add pusha mov jp cmp faddl push imul stos adc nop clc pop shrl dec cmpsl (bad) dec movsl xor ds std fs cli pusha les xchg negb add mov inc popf clc push mov xchg icebp push mov lds xchg dec lods or adc inc stos adc aaa lcall dec mov jp inc cmpsb add xor sub xchg dec mov and jmp mov (bad) clc pop shlb cltd cld pop mov mov aaa cwtl cli arpl pop dec xchg cmpsb (bad) push xor and adc mov xchg ret push (bad) mov adc mov xchg ret push xorl add int sub mov fisttpl aas outsl sahf into (bad) cs lea lods fisttpll std sub mov loopne aas outsl sahf into (bad) cs lea scas fimul outsb popf int sub mov lods fmull cmp lret xor (bad) icebp and mov push inc jne aam xor xchg ret repz mov adc mov xchg (bad) icebp and mov adc mov (bad) mov scas ficom inc je aad xor xchg ret repz test (bad) push xor es xchg movsl (bad) push xor es mov scas fimul aas outsb popf int sub sbb jnp fimull cmp lret cli sub add mov test push cmp (bad) imull push xchg movsl fimul cmp xor ret testb pop mov mov push inc jp fimull cmp enter xchg stos fimull cli sub (bad) imull push xchg cmpsl (bad) cmp (bad) mulb push xchg cmpsb (bad) pop cmp lret cld cs lea fild sbb stos loopne inc jno roll xor ret push xorl aam xor vmovaps mov lods fmull outsl mov xchg ret mulb pop pop repnz mov push inc jne (bad) or imul jg loope inc jno rolb xor enter xchg stos fisttp aas jb roll cmp roll xor xor (bad) repz mov sbb jge loop inc je aam ss pop nop vmovaps ret pusha pop repnz mov push inc jge mov adc adc add add roll xor xchg (bad) cmc es xchg lods fisttpll add imul mov lods fisttp outsb mov xchg ret repz in inc je roll gs enter mov add scas loope inc jb rolb xor ret push test cmpsl (bad) pop ss push test lods fmull insb fwait int xor (bad) icebp and mov adc fmuls cmp into (bad) xor mov mov adc mov cwtl lret pusha nop ret repz xchg mov cmovae (bad) cmp lret cld cs (bad) mov scas fist inc jo (bad) push xor and test (bad) pop cmp sub mov stos (bad) cmp iret add cmp roll xor (bad) icebp and mov adc jae roll ss enter xchg mov adc mov xchg (bad) mull push xchg add inc jbe (bad) cmp int3 cld sub mov stos fisttpl cmp fwait lret pusha nop mov mov test lcall jmp fisttpl cli sub mov arpl loop inc jne (bad) push ss (bad) imull pop xchg cmpsb (bad) add mulb push test inc mov adc aam xor das pop pop lock mov adc mov (bad) mov add push dec jge fisttpll sti sub mov lods fmull add sub mov stos fmull das pop popl lret pop mov scas fimul outsb sahf into (bad) cs (bad) mov mov pop inc ja fmuls cmp leave stc sub mov test cltd lret pop mov mov loop inc jb roll xor ret pop mov mov adc mov popl add mov lods fisttp outsl lahf iret ljmp pop mov lods fmull insl popf int3 cld sub xchg inc (bad) or imul dec ja xlat push aaa xchg (bad) cmc and adc je roll xor ret push jg fimul add cmc and test iret (bad) sub sbb test xchg (bad) push xorl sar cs lea fimul cmp sub mov add xchg (bad) testb pop mov test xchg leave clc sub mov push dec jnp fimull cmp (bad) mull push xchg mov nop mov scas fimul cmp sub mov test pop cmp int sub divl sub mov cmpsl (bad) push xor and loop inc jne aad xor xchg ret repz mov push inc jbe aad xor xchg ret push subb add aas jo iret (bad) cs mov scas fisttpll sti sub mov cmpsl (bad) or fwait lret sti sub mov test pop ss (bad) push xorl add pop (bad) mov lods fisttpl cmp leave stc sub in sbb jl fmull cmp lret sti sub mov test pop aaa addr16 (bad) mulb jmp dec jp (bad) cmp (bad) mull pop mov mov adc mov cmp add popf int3 cld sub mov mov (bad) outsb popf int cs lea scas fisttpll outsb popf roll xor (bad) repz mov adc mov imul inc ja fmuls cmp enter mov stos fisttpl mov in stos cmp dec jg loopne aas outsl lahf into (bad) sub sbb test cwtl (bad) mulb push test mov test mov nop mov scas fisttpll insb lahf into std sub es xor sahf into (bad) cs mov lods fisttpll add gs (bad) hlt and xorl roll xor or jecxz jp push je push popa mov push lahf sti push mov inc cltd stc fs mov mov xchg mov inc cwtl lock xchg out cwtl call cwtl testl jnp and and call cmp xor add repz mov adc je aam jmp push lahf out cmp in xchg xor insb mov pop scas add hlt inc xchg out mov sub iret inc pushf into std sub sbb test cltd enter xchg jno addr16 pop lods add in ds fbstp mov aaa lcall pop push test bound pop jg in inc je aam xor into (bad) cs mov lods fmull add cmp lret pop mov cmpsb (bad) push xor pushf add mov push mov inc xchg ljmp or fildll jle sbb mov pop mov push stos decb clc inc cltd jmp sahf (bad) dec lahf clc pop scas add cmc inc pushf in dec test dec scas pshufw jecxz stc pop mov jp xor stc pop les fnsave cwtl ljmp pop scas or sti dec lahf sti pop rolb add xor xbegin jmp cld push mov push test push test cmp call or daa js das test aaa mov push test je sub push mov mov mov adc mov (bad) mov mov pop inc jbe (bad) push ss (bad) push test movsl (bad) pop aaa xchg (bad) cmc and adc je aam xor ret repz mov pop inc ja (bad) push ss movb add add and adc add gs (bad) push test roll xor ret push xorl gs (bad) push test aam xor repz mov adc mov push pop mov lods fisttpll cld sub mov lods fmull insb fwait lret sti sub mov push test fwait lret pop mov test sldt movsb aam xor add add xorl pop mov stos fimull cmp enter xchg mov cwtl xbegin out inc je aam xor and xorl iret ljmp pop lea fimull cmp enter mov lods fisttpll outsb popf int sub sbb stos (bad) cmp enter mov test or addr16 (bad) mulb push test test or add add xchg (bad) mulb push test cmpsb (bad) add repz mov adc cli mov adc xor shlb jno adc adc push mov push mov push inc jne aam xor and xorl rolb jno sub fimul repz mov lods add adc je aam xor ret add addr16 pop mov popa mov imul insl (bad) and inc mov mov xor add arpl (bad) mov adc mov (bad) dec (bad) or outsb sahf into (bad) cs lea scas fimul ds sahf into (bad) cs (bad) mull push xchg movsl aam xor ret push xorb int sub mov stos fimull cmp enter test test pop aaa xchg (bad) cmc and adc mov nop mov lods fisttpll imul mov jg ficom inc jb roll xor mov lods fisttpll insb fwait lret sti sub mov test lcall out inc ja xlat pop imul mov jle fimul sti sub mov fisub call fmuls cmp (bad) mull push xchg test cwtl (bad) mull push xchg cmpsb aad xor and xorl roll xor (bad) lock scas fimul ds popf roll arpl add add add repz mov adc mov nop shr dec jle fisttpll sti sub mov test xchg (bad) imulb pop mov test cwtl enter xchg movsl aam xor ret repz mov adc mov xchg (bad) lock push mov test lcall call (bad) add mull push xchg bound push mov push hlt dec popf in inc xchg add and mov adc mov xchg (bad) hlt and mov adc mov (bad) mov lods ficom in inc jne aam cmp lret pop mov cmpsl xlat pop ss (bad) push xchg movsl aad xor and xorl rolb xor (bad) cmc es test movsb roll xor ret push test roll xor ret repnz mov adc mov xchg (bad) push test movsb aam xor (bad) lock mov leave clc sub mov sbb cmpsl xlat push ss (bad) mulb push test add adc lahf rolb xor mov lods fmull cmp lret pop mov test pop aaa xchg (bad) push test test pop aaa xchg (bad) push xorl roll pop cmp (bad) mulb adc jae rolb xor (bad) icebp and mov adc lahf into add xor shr dec jge fisttpll cld sub mov test pop aaa addr16 enter xchg movsb aam xor (bad) lock push test movsb aad xor xchg (bad) repz mov adc outsb sahf loop loopne inc je aam xor xchg ret push xorl arpl test rolb xor (bad) lock dec xorl pop (bad) mov mov adc mov mov add add (bad) and test pushf int sub push dec jge fisttpll (bad) cs mov mov adc mov nop leave cli sub mov test or push push xchg jge fisttpll sub mov stos out or xlat pop cmp cs lea lods fmull insb fwait lret sti sub mov test pop aaa xchg (bad) cmc and adc mov add popa xchg (bad) push test roll xor (bad) icebp and scas fisttp outsb sahf int sub mov test cwtl enter test test or addr16 (bad) mulb push xchg movsb aam xor ret push xorl pop mov fisttpl aas jo iret ljmp pop mov (bad) mov adc mov (bad) mov lods fmull imul mov test add add sbb lods fmull cmp lret sti sub mov test pop ss (bad) sub mov cmpsl (bad) push xor and xorl xlat or xchg (bad) cmc and push inc jne aam xor xchg ret push (bad) mov adc lahf sar das pop (bad) mov lods fmull cmp lret ljmp pop mov out pop dec jle fisttpll cld sub mov fisttpl cmp enter xchg mov xchg add add icebp and mov adc jae aam xor ret push (bad) mov adc lahf iret (bad) cs lea scas fisttpll std sub mov loope fstpl dec jge fmull imul nop shr push xorb rolb xor mov lods fmull das pusha pop hlt and test roll xor ret repz mov adc je rolb xor push pop mov (bad) sbb add add pop jb pop sbb jp pop jno sbb push insb rcrb int3 cs inc sahf clc push scas or sbb sub (bad) dec stos push popa mov jge lea inc mov rcrb jge xor ljmp int sub sbb stos fisttpl cmp lret pop mov xchg mov xchg (bad) icebp and scas fimul ds popf int3 cld sub mov test xchg (bad) testb add and adc test cltd lret pop mov imul jne and int3 and sub fdivs mov cmp sub daa lods sbb sbb movl xchg cmp push stos push pusha mov js daa jge and es xchg jmp xchg in inc cltd icebp dec lods add scas push gs jae and sub in nop loop sbb (bad) in inc lcall push lock fwait in ds jecxz add cmp push ret mov push sub or adc and jmp sahf cmc push lods or sbb mov inc mov jbe das xchg add push scas or sbb in inc mov bound sbb nop jmp popf stc push test aaa xchg jmp fild std dec test pop lods add sti push cmpsb cld push cmpsl sti dec lods push pusha mov bound sub add jnp adc add push popf out inc xchg in pushf (bad) xor (bad) push test (bad) pop aaa xchg (bad) push test mov xchg ret repnz mov cmpsl fmuls cmp leave cli sub mov test or imul xchg jge,pn xor (bad) scas insb lret lds xor leave sbb push imul insb rcrb mov pop mov bound sbb pop dec jg ficom inc mov enterw inc add test inc lods (bad) in mov test inc mov (bad) mov adc jae roll dec lods pop arpl dec rcll call fmuls cmp leave stc sub mov mov outsb jmp push jg fisttp outsb sahf int sub mov test sahf into incb xor and adc mov nop mov scas fisttpll sti sub add pop mov cmpsl xlat push imul mov test xchg enter xchg movsb aam xor ret push (bad) mov adc mov mov repz mov adc mov mov lods fmull insb pushf int3 cld sub mov test pop aaa addr16 (bad) mulb sbb jge fmull push lret sti sub xchg (bad) lock scas loope inc je aam shll (bad) fidivr ljmp add add call test xor fs sub (bad) push mov ret sub adc or and push cmpsl call pop fs push adc push imul mov xor sbb (bad) dec cmpsl clc dec cltd icebp push movsl sti inc (bad) fldt sbb (bad) fdivl mov xor daa cwtl (bad) dec test inc xchg ljmp dec sahf hlt dec mov pop mov pushf daa sbb cwtl imul add daa subb fdivl mov xor inc pushf cmc dec cmpsl std push stos call add mov insl int3 and shrl sbb mov aaa mov inc cmpsl add sbb aas popf cmc dec lods pop pop mov pop lods (bad) push movsb std push mov pop stos add arpl lcall (bad) dec pushf (bad) dec mov inc xchg stc pop mov pop mov rcrl aam test sub xchg (bad) dec lods or ret pop jp cs sub aad test xor loopne (bad) add add dec test dec test push test mov inc test addr16 daa xchg add or int xchg inc sahf cli push mov je and push stos add mov pop test dec test (bad) jmp mov mov (bad) in dec cmpsl push outsl iret das xchg jmp xor xchg dec mov jne cmp inc scas adc cmp cli (bad) lret repz mov mov mov xchg push mov add jle dec mov jge push mov sahf pop insb sarb popf cld push data16 xor pop xchg add cmp xchg sti fs xor xchg cli pop (bad) xor mov cmpsl or ss clc pop ret sub nop hlt pop shrl stc pop shrl xchg hlt pop ret in push mov and stos pcmpeqw dec mov jnp dec mov jae inc cmpsl or xor cmp cs out push mov add jecxz mov sbb stos (bad) fadds and and movsl or aaa xchg (bad) addr16 fwait notb and mov pop int3 das xchg notl sbb hlt push mov jg inc scas or xor negb mov dec lods adc dec lods adc dec stos adc xor cltd cld lds mov pushf add sub sub hlt push mov ret ljmp sahf add add push cmp add add sub xchg repnz mov jle inc cmpsb adc inc test insb sarl movsb or das xchg negl and sbb push xor add xor (bad) in push mov jne cmp mov pop les mov pop mov movsl sbb test inc lods adc inc test fwait (bad) pusha enter insb aam movsl or das mov cltd std popa sarb fwait std arpl sub mov dec lods or sarb sahf add cmp movsl or xchg imulb xor fldl adc cmpsl or jecxz mov jne ds add (bad) shrw jne cmp movsl adc lock nop loope mov mov insl int3 daa mov dec mov je cmp xchg repnz (bad) sub negb sub cmpsl add aas mov test stos or xor cld pop lds repz mov mov and mov add jns inc lods adc std pop (bad) sub sub jl inc mov sub mov jge cmp cli push mov stos or add lret dec mov cmp insb les arpl bound push stos cld dec fwait icebp push cmpsl cld push test mov loop fisttp sub insl (bad) ss push js movsl or xor and mov mov xchg stc pop roll add sub mov inc stos movq xor jmp xor xchg hlt pop mov mov and ret in dec mov jbe inc cmpsl or and jns inc mov dec test test jae mov cwtl stc gs aaa mov pushf add xor xchg cli pop shlb clc popa lds repz mov (bad) sub test push mov mov push mov je inc movsl or mov push mov xor stos push jae inc cmpsl or xor jno xor pop mov xchg notb or (bad) daa xchg inc cwtl negb push sbb cmpsb push insb int mov push mov jae xor jnp xor and jae cmp mov pop lret das nop out dec mov jne cmp repz mov mov cmpsb push lds or addr16 dec xchg loope jae adc clc push add adc in aaa or pop test cmp iret sbb add push fwait out jns or test and adc add (bad) fisubl jno add jle adc aaa or pop cmpsl lock cld inc (bad) fldenv ret mov dec popf lock cld inc mov and incb fisubl xchg jecxz xchg das xchg sub mov adc xchg es dec mov pop mov outsb mov mov rcrl into sub inc lahf (bad) push scas pop jae xor push fs push stos add or sti push lods adc xchg ss out dec movsl std push lods pop pusha ret and sub aaa xchg out inc lcall sarb pushf clc push scas or aaa mov scas fimul ds popf int sub mov fimull cmp leave clc sub mov scas fild adc add hlt and xorl xlat pop aaa addr16 (bad) mulb push xchg movsl (bad) add repz mov test pop aaa imul dec ja (bad) push ss (bad) push test (bad) add hlt and test test or imul inc jbe (bad) push ss (bad) mulb mov xchg (bad) push test mov xchg (bad) mulb push mov test xchg (bad) mulb push test add aad xor and mov adc mov xchg leave cli sub mov stos fimull cmp leave clc sub mov lods fmull cmp cmp hlt push mov pusha mov outsb enter sub sub and add fdivl nop out dec movsl cli inc xchg out xchg jmp mov mov rcrb fnstcw xchg hlt dec cmpsl (bad) popa mov mov pop shll push mov stos or sub repz (bad) sub add add insl shlb xlat xor jb xor mov dec scas and imul xchg hlt pop mov mov mov cmpsb pop insl (bad) xor sbb movsb cmc outsb (bad) and es out xchg out xchg call sbb xchg lock lods or or mov outsl (bad) xor pop mov shll negl sbb imul mov jge dec mov jge inc test cmpsl or add (bad) inc sarb mov test mov test (bad) jp push cmp (bad) cmp add dec movsl add mov cmpsb or cmp mov push loopne in mov sub mov push ret xor mov std (bad) mulb inc mov stos sbb mov mov mov mov (bad) xor push mov ret add inc mov sahf pop jb dec scas add add add jno cmp lret adc mov stos push (bad) std insb cld sarb jne push mov lret cld popa leave sub pushf add movsb or adc xor fwait add cs hlt pop into cmp push outsl (bad) xor sahf add ss or xor dec mov xchg pop js dec scas or mov shrl add or adc and stc dec add mov inc mov outsb (bad) cmp or mov mov pop mov pushf jmp xchg pop ret daa lahf push ja dec mov (bad) call clc pop leave das lcall jbe dec mov mov pop int3 xor loop mov xchg push mov xlat lods adc dec lods sbb push mov mov jns sub cmp lds nop icebp dec lods pop arpl mov jg inc stos push add add add sub pop (bad) xor mov inc movsl add rcrb iret xor mov sbb xor jbe inc js jecxz dec test (bad) cld mov mov add sbb mov rorb popf cli pop mov mov inc lcall movsl add and popa ret fidivrl cltd add into sub push sub out inc lods or add sub or ret xlat pop mov test push mov mov add jnp jmp stc xor aad inc js jecxz dec test (bad) std xor aam inc jbe loop dec frstor mov stos adc push shll xchg int3 add outsl movsb fcoml dec xorl popf rorl inc jns jmp std xor aad inc jbe loope out in push stos or shrl mov inc lcall loopne dec xorl add add sti xor rolb aas clc js sub lret jno fstl dec mov and xchg rorb aas jne in lcall sbb cmpsl out cmp pop jne,pt loop dec cmpl pushl inc jbe jecxz dec add xor roll cmp cmpsl fcoml dec jle ljmp fs sbb mov enter mov (bad) mov lret imul out push mov int add cmp fcoml dec jle jmp cmc sub (bad) mov and pop add jno fcoml inc movb insb mov scas in dec test (bad) pushfw rolb cmp dec jle jmp pop mov cli das gs sbb mov (bad) cld xor rolb cmp inc jge call clc arpl mov mov sbb popl cmp fistl inc jge out push xchg enter add lahf aam inc jne fist and (bad) gs rorb je,pt fistp mov rorb cmp push fnstcw add dec out repz (bad) ret stc das fs rolb cmp test adc mov and enter jnp out push mov lret add insb movsb (bad) inc jl out push mov int cmp (bad) inc jnp out push mov aad inc ja in push xchg int cmp flds add inc jns in push xchg pop cmp dec xorl mov mov sbb mov into push cmp test adc jg ljmp movsl adc nop (bad) cld xor aad inc jl repnz enter sahf rorl cmp dec jle ljmp pop xchg lret push aam aas jne loopne dec xorl mov stos loope dec (bad) mov (bad) cld xor add popf rorb je,pt fist dec xorl pushf roll cmp cmpsl fstl dec (bad) mov add pop cmp test push dec xorl lahf aam inc jbe loop dec test add outsl movsb ficoml inc jnp out pop pop stc das fs into add outsb movsb ficoml inc shrl sarb pop mov mov sbb mov lret add jo ficom xorb add outsb movsb (bad) inc jnp out pop pop cli das add add add test mov and ret clc cs iret add adc xorb add insb mov mov sbb xchg lret insb mov mov sbb xchg lret add outsb movsl fcoml inc test (bad) std xor (bad) inc jnp out push mov stc das gs rorl je,pt (bad) mov inc jp in push xchg (bad) cmp dec (bad) mov and pusha xchg lret add insb mov inc ja loop dec xorl cwtl iret add jo fistl inc jl out push xchg imull cmp fimull inc jp in dec test (bad) stc das gs rolb adc mov sbb sub leave (bad) cmp fistl inc jnp jle imul rorl push push mov into add outsl movsb fimull inc jnp out push mov fsubl inc jbe loopne dec cmpl cli xor roll push cmp fistl inc jl out push xchg (bad) xor aam je,pt fbstp cmp cmpsb push (bad) ss jge jmp adc mov sbb sub leave pushl lahf aam aas je ljmp pusha xchg lret add adc in lahf std popa fstps inc js in push xchg add imul out and das gs add fistl inc jnp out push xchg enter sahf aam aas je fist jg ljmp push jae ficom dec jle ljmp pusha xchg lret add insb mov lods loop dec cmpl stc das fs iret or stos loope dec (bad) mov and (bad) cli xor rolb cmp dec jg ljmp push mov dec xorb stc cmp fimull inc jp in push test add add xor aad aas jne loopne dec xorb imulb xchg int3 add insl mov mov and (bad) imulb popa xchg lret add insb mov scas add and (bad) stc xor roll cmp fstl dec jge ljmp arpl stos loope dec (bad) mov (bad) gs adc mov sbb xchg cld xor rorl jae,pt ficom dec jle out and nop (bad) addr16 jmp ficoml inc jge out push xchg std xor rorl je,pt fist and (bad) divb push jae fstl dec jle jmp hlt sub leave add insb mov scas jecxz dec cmpl stc cs sbb mov (bad) data16 roll adc mov sbb sub lret push aad inc jbe loopne dec (bad) mov daa pop xchg enter sahf rorl jne,pt loopne dec addb add add (bad) cmc sub push jbe loope push or mulb jle cmpsb adc dec xorb add insb mov lods loop dec cmpl stc das fs adc dec cmpl cli xor roll cmp loope dec (bad) mov and (bad) cli xor rolb adc mov sbb xchg (bad) xor rorl aas je ficom in pop (bad) jae add outsl movsb fisubl push call add outsb cmpsb fcoml inc jp pop dec (bad) mov and (bad) negl popf add adc mov and pop cli das fs adc scas sbb notl test adc mov and ret arpl cmpsb fcompl push xchg pushl inc ja jecxz dec test (bad) push jne loope dec (bad) mov (bad) stc das addr16 inc jnp out push mov sbb (bad) aas mov mov dec mov jns cmp cmp fwait data16 movsb or cmp cmp adc or sub xchg adc gs pop jne jne dec mov xchg cmc push mov sbb mov push mov jnp dec scas adc cwtl add int mov jp out push mov lret add outsb movsb ficoml inc jl call cmc sub into add outsl cmpsb faddl sbb (bad) cld xor rorb jae,pt fild add and ret stc cs adc mov push push mov imulb xchg iret push cmp cmpsl fstpl dec test lret insb mov scas in push mov leave pushl mov lods loop push xchg pushl insl test mov leave call mov mov inc mov mov pop ret daa mov push mov outsb iret add mov test inc movsb add das nop jmp mov add add xor xchg add push mov js inc scas and pop lea js pop enter jle cmp xchg clc sarl movsb add or jmp (bad) xor and mov and sahf add xor pushf add and test retw and pop ret repz iret xor fnstenv cld pop mov push dec mov je xor cmpsl adc inc stos or add and lods push jge dec mov sub mov mov dec mov mov push inc mov (bad) std outsl fldl push jle push ret or inc stos or adc mov int sahf or dec mov int mov aam mov push sahf or insb faddl adc or sub adc pop mov scas adc loope mov mov insl fisttpl sbb adc mov and add fwait roll cmp dec jg jmp push mov clc cs roll cmp cmpsl ficom jg jmp push (bad) ret clc xor inc add mov stc das mov inc mov insb (bad) es mov jo xor push xor xlat push inc jnp out push mov lret imul in push xchg (bad) ss mov scas in push mov aam inc jbe loope add dec (bad) mov (bad) sti mov iret xor ljmp les js sub pop leave cmp jmp daa fcoms add int cmp fistl inc jge call mov imul jg cmp (bad) and mov inc lods push arpl xor cmp pop lret xor adc push shrb stos pop sub out push mov mov imul jmp ret sub inc lods push jl pop enter insb add add inc stos add aaa lahf or dec mov mov arpl cmp mov int test mov call or pushf ljmp inc cmpsl or sbb and test inc mov pop mov jnp sub fidivr xchg in inc lods pop stos and (bad) std xor aam aas jne loope dec (bad) mov (bad) cli das gs adc mov sbb sub lret jno fstl add add xchg (bad) cld xor rolb cmp dec jle jmp clc cs adc sub cmc sub xchg int3 add insl mov lods jecxz dec cmpl gs adc mov sbb mov int3 add insb mov mov pop push mov cmc sub xchg add or lods loope dec (bad) mov ret stc das gs rorb je,pt loopne push mov imulb xchg into add jne jecxz push mov int cmp dec (bad) mov lret add fstpt jne in push mov imulb cwtl int cmp test adc mov jns cmp pop mov stc das fs iret add jno fistl inc jl out push xchg std xor rolb cmp dec jle icebp daa pop xchg (bad) cld xor movsl fistl inc jp in push xchg (bad) cld xor rolb cmp dec jg ljmp bound test add add jg ljmp arpl movsl ficoml inc jnp jmp imulb cwtl into add adc mov push push mov cld xor rorl aas je fist dec xorl insl mov lods loop dec cmpl stc cs adc mov test push frstor push mov imull cwtl into add adc mov sbb mov (bad) std xor aam inc jbe loop dec mov add imull arpl movsl ficoml inc jnp out push mov into add outsb movsb ficoml inc jge call hlt sub leave (bad) xor lahf aad inc lret sub push mov add push mov cmpsl ficom dec jle jmp hlt sub iret push fist jg in and int3 add outsb movsb fimull inc jns in dec test enter sahf aam je,pt fist and (bad) imulb popa xchg int3 add insb mov xorb imull cwtl int cmp (bad) inc jp add and xchg (bad) std xor aad inc jbe loope dec xorl cltd aam inc jbe loope dec (bad) mov (bad) cld xor rorl inc jne loopne dec xorl lcall adc mov pop pop nop (bad) data16 roll cmp dec (bad) mov (bad) cli xor rorb jae,pt fist and xor aam aas je add in dec test lret insl mov cmpl add outsl movsb ficoml inc jl ljmp fs adc es xchg enter lahf aad inc ja xor inc jge jge push mov push sub sbb jno xor push scas or popf rorl aas jne fist jg ljmp pusha xchg lret add add mov inc lods aas xchg xchg lret jne loope dec xorl cld xchg notl pop jnp inc movsl add fild cs testl adc mov sub lret add insl mov mov push push mov lret add insl mov mov push push mov imull cmp ficoml inc mov (bad) and push scas add hlt push lods add and cmp xchg dec mov jl inc mov ja cmp and fwait add pop out fdivs add (bad) xor jge inc stos or inc test mov scas out push mov int inc jnp out push mov lret add insl mov mov sbb mov lret outsb mov mov add pop sti xor xlat or sbb mov int cmp fisttpl lret jno fcoml inc jl out push xchg int cmp add add fstps dec test (bad) cld xor rolb cmp dec jle jmp cmc sub lret imul loop dec cmpl pushl lahf aad inc jne loopne (bad) pop rcrl leave and mov and (bad) imulb popa xchg int3 add outsb mov mov sbb xor rorb cmp dec jle jmp repz leave (bad) xor sahf (bad) or pop fnstenv (bad) push out scas pop (bad) xor pop ret jmp int mov push mov mov popf or ds jno inc lahf sti pop ret fdivl (bad) call popf push jp test jle mov dec scas pop pop mov lahf cli pusha (bad) sub scas sbb inc repz gs roll cmp cmpsl fcompl mov lret insl mov scas in push test (bad) cld xor rorb cmp dec cmpl (bad) sti xor fmuls inc jp in push test int3 jns push repnz fistp dec cmpl sti xor roll cmp cmpsb fistl inc jl out push mov rorb mov imulb cwtl int cmp (bad) inc jns in dec test (bad) data16 roll ds xchg add repz mov (bad) out dec cmpsl add mov push insl into daa xchg mov jb and int jne sbb leave and and sub daa jl and ja sbb sub mov das adc js xor push mov imul mov aaa nop ljmp pop scas push pop mov push daa jle ds and fistpll notb or shrl (bad) in cltd out inc mov imul lret xlat xor outsl lds js es ss cmp out movsb sti dec mov mov mov jno sub insl lret adc add jl aaa mov inc fwait clc push stos or add leave daa and test gs mov inc mov outsb int (bad) fnstcw lahf std push mov insl aam test ss dec test outsl (bad) pop jp das mov inc cltd hlt dec test jbe xor inc fwait repz test push test push mov js xchg jmp popf icebp dec movsl add lds jg cmp pop mov jp es lahf add cld push test jne sub movsl push pop mov outsb (bad) and xor out popf repz test jne sub gs test xor outsl (bad) sbb test cmp ljmp fs and xor mov js sub lock cmpsb (bad) pop rcrl (bad) pop jle xor test pop mov outsl les jns xor dec movsb clc push cmpsl add sbb and add inc xchg cmc dec test jb sbb jecxz xchg ljmp pop mov (bad) fidiv xchg lock movsb call adc jl xor fdivrl lods or (bad) xor imul pop mov jl push int3 dec mov fwait sti pop lret xor xor outsb (bad) and sub pop shrl push outsl cs out push cmpsl stc push test jno sbb daa jnp sub inc cltd in inc lcall add add pop stos add adc sub jbe sub (bad) sub dec pushf hlt dec mov imul jae sub xor jmp lods pop pusha mov arpl jns and sub aaa (bad) in lcall lcall or sbb and inc mov rcrl leave and sub loope xchg icebp dec mov pop mov jnp sub dec movsl call add imul mov ds stc push cmpsb std pop mov imul xor outsl (bad) and hlt push mov outsb lret loopne fwait repnz mov push cs lahf repnz popf lock movsl lcall sbb lret and sub jmp stos call add or push jo and repz mov push scas add add or or or mov pop mov pop mov pop mov pop mov pop add bound mov ds icebp dec lahf (bad) dec mov dec mov inc lahf (bad) dec movsb clc dec mov inc popf repnz pushf lock cltd out push scas or and imul jg inc cmpsl add sub nop add pop je stos das aam int3 push xor jne lds push mov lock mov je xor sub imul mov inc mov add ret cmp mov (bad) sub xchg leave cmp (bad) mov and xor rorb je,pt loopne dec (bad) mov and (bad) pushfw rorb jle,pt jmp leave pushl sahf add jo fistl dec jge call hlt sub lret add insb mov lods loop dec cmpl cli aaa insl mov scas in dec test (bad) cld xor rorl jae,pt add sbb mov int3 add insl add in push xchg imulb xchg int cmp push mov sahf add inc movsl add insl cli inc jp out push xchg es adc xor call dec cmpsb or sbb aaa lcall sbb inc mov xorl fist and ret stc arpl mov sbb mov (bad) cld xor rolb cmp dec jge call hlt sub sbb add xchg int3 add insl mov mov cltd into add jno fcoml dec jge ljmp popa xchg int mov mov sub adc addr16 sbb aam mov (bad) out push mov mov mov xchg stc pop mov add cltd add mov add aam scas pop sub stc addr16 cmp push jle aaa xchg sti pop les mov push mov test rcrw sub incl add jne dec mov cmc pusha roll pop cltd adc insb fisttpl pop mov outsb fsts es add push mov out pop (bad) xor push ret xor jmp (bad) cmp and adc cmpl sarb sahf les rcrb sbb mov test ja push jnp dec mov out pusha rolb push mov cmc (bad) xlat inc mov sahf adc std jb push shlb add test dec lods push insl int xchg stc pop les cltd cli lds xchg inc mov mov (bad) cld xor aad inc jbe loop dec test cltd iret add adc mov and sar outsb mov mov sbb sub lret imul jecxz dec test ret arpl cmpsb fcoml dec jge call sti xor rorl jae,pt fist xorb sub (bad) dec xchg add pop xchg leave pushl mov lods loop dec test stc xor roll cmp dec xorb stc das fs adc xorb stc cs adc xchg pushl mov (bad) mov (bad) imul xchg add jno fist xorl test mov leave (bad) xor mov mov pop push mov add add imulb or sub jae jmp cld xor aam inc jne loope push mov int3 add outsb movsl fstl jg jmp sub int cmp fimull inc jnp out pop nop (bad) cld xor rorl cmp dec jg ljmp popa cwtl iret add adc jmp pop xchg (bad) std xor dec int3 add adc mov sbb xchg lret imul add add push dec (bad) mov and (bad) cli xor roll cmp cmpsl fstpl les push movsl pop mov aad gs rorb cmp sbb sub lret insb mov lods loop dec (bad) mov and ret bound scas jecxz dec test (bad) cli xor cmp xchg icebp push mov push mov push mov push mov lret xor mov stc das fs adc mov pop push mov imulb bound movsb ficoml inc add mov cli xor iret or ja jecxz dec cmpl clc arpl movsb (bad) inc jp in dec test add outsb movsb fimull inc jp out push xchg imull cwtl iret add outsl movsb ficoml inc jnp out push mov lret imul loope dec (bad) mov and ret clc arpl test mov and (bad) imull cmp jbe loopne dec (bad) add add (bad) sti xor rorl je,pt loopne dec xorl lahf aam inc jne loopne dec xorl cwtl int cmp (bad) inc jl out push mov cmc sub mov lock out insl mov scas in push xchg leave (bad) xor mov lods loop push xchg lret imul mov and leave add insb mov mov pop push mov imulb jae,pt add adc and ret stc das fs adc mov pop pop xchg enter mov scas in dec test lret add insb mov mov sbb mov lret imul ljmp data16 roll cmp dec (bad) mov add add outsb movsb fimull inc jge call pushl inc jnp out push xchg lret insb mov scas in push xchg (bad) xor add imul cmpl cld xor rolb adc mov and xor aam inc jne loope dec (bad) mov sbb xchg lret add insl mov mov sbb mov add or jne loopne push mov into add jo fistl inc jl call cmc sub int3 add outsb movsb ficoml inc jl out push mov lret add insb test adc xorb clc cs add adc mov and ret stc das fs adc xorb clc xor mov scas jecxz dec test leave pushl inc ja mov and ret stc das fs adc mov and lret insl mov scas in push xchg pushl inc ja jecxz dec test (bad) std xor aam aas jne add pop pop xchg leave pushl inc js jecxz dec test add pop xchg (bad) std xor aad inc jbe loop dec cmpl cld xor rorl add mov and nop (bad) cld xor rorl je,pt loope dec (bad) mov (bad) std xor aad inc js in push xchg lret insb mov mov and (bad) imull cmp fistl inc jl call imulb gs sbb mov (bad) std xor aad dec xorb cld xor roll cmp test fist jg ljmp xor inc ja loope dec xchg add insb cmpsb fcoml inc jle jmp imull cwtl int cmp (bad) inc jnp out push mov imull cmp (bad) inc jp out push mov cmpsb fstl dec xorl fwait roll inc jne loopne dec cmpl sti xor rolb cmp dec xorl inc scas sbb mov inc cmpsb add add add mov popf or push mov mov scas push je xor hlt pop int mov int stos movd pop lret ds adc mov aam lods sbb nop ljmp dec stos add shrl loop mov (bad) xor lret shrl test cmp push mov addr16 pop jp xor push cmp lock mov insb (bad) and das mov cmp push mov arpl fidivl cmpsl add ret push jns cs cmp sbb mov mov mov jl inc lods adc fnstcw add std pusha enter pop shlb dec mov jl inc stos adc fstpt mov mov xchg clc pop les xchg negl xchg stc pop (bad) sub add das xchg stc pusha ret negb and negb and in mov ja inc cmpsl push jne aas movsl add jbe cmp cmp in push mov mov jge inc mov jne inc movsl or ss add (bad) xor jmp cs cld pop ret lcall lretw xor mov pop mov scas adc push js inc lods adc mov loope nop out test int3 dec mov sub out push mov ja xor movsb push insb stc dec xchg (bad) cmove mov add inc js in dec test sub scas or sbb sub inc stos push jno sub or lods sbb fstpl inc mov jecxz sahf sti pop mov adc cmpsl or sub and imulb xchg int3 add insb mov lods jecxz dec test test outsb (bad) cs dec stos sbb sub cwtl into add outsl movsl fistl inc jl repnz leave (bad) xor add or ja jecxz add ret fs adc mov pop push mov clc arpl cmpsl fstl dec xchg add inc js jecxz dec test (bad) stc das gs rolb cmp cmpsl fstl jg jmp push mov imull cmp loopne dec cmpl sti xor (bad) or jns in cwtl adc mov dec lods add in mov xchg out push mov jg inc mov mov push mov xchg add pop push mov imull cmp fcoml inc jge call imull cmp fistl inc jl call std xor aam aas jne loopne dec cmpl sti xor rorb je,pt fist and (bad) addr16 aam inc jbe loop push mov cmc sub int3 add insl mov mov xor jl icebp sub lret add insb mov lods jecxz dec test (bad) cld xor rorb inc jl ljmp add clc sub cmp ficoml inc jnp out add (bad) std xor aam je,pt fist and ret fs xlat or sbb mov enter xchg out dec scas push mov and (bad) cmc sub int3 add insl movsl fimull inc jp in push test rolb cmp fistl inc jnp call repnz enter sahf aam je,pt loopne dec xorb adc and lret add jo fistl inc jnp out push xchg lret insl mov scas in dec test (bad) pushfw rorl aas js jecxz push mov lret imul jecxz dec cmpl roll cmp cmpsl fcoml dec jge call cmc sub lret add imul jmp push mov imull push aad inc jne loopne dec xorl imul loop dec cmpl stc das push aad inc jbe loope dec (bad) mov and ret mov inc jns in dec test (bad) cld xor rorb cmp dec jle icebp daa pop xchg leave pushl inc jbe loope dec cmpl cli xor rorb cmp push test roll cmp cmpsl fstl push xchg cmc sub int cmp (bad) inc jp out push mov into add outsb movsb (bad) inc jns in dec test (bad) sti xor xlat or add jecxz dec test (bad) cld xor rorl je,pt loope dec (bad) mov xchg int3 add insb mov lods loop dec test jae inc mov mov nop (bad) std xor rorl je,pt fist xorl fwait repz loop push xchg rorl cmp dec xorl fwait rolb adc mov pop push mov repz mov jno aaa lret xorl add movsl ficoml inc jl call cmc sub lret add insb mov scas jecxz dec test (bad) cld xor rolb cmp es xchg leave pushl inc js in push mov int3 add outsl cmpsb fcoml dec jle ljmp gs rorl mov lret or jg add insb mov scas in push xchg add insb add mov and (bad) pushfw rorb inc jg add ret bound movsl fistl inc jl out push mov leave (bad) xor lahf aad adc mov sbb sub xchg stc pop mov jge inc sahf or sub sahf aam inc jne loopne dec xorl lcall adc mov sbb (bad) addr16 rolb cmp cmpsl fstl inc jl out push xchg cld xor rorb cmp dec jge call hlt sub iret add adc mov push push mov leave (bad) xor aam aas jae fstl dec jg ljmp pusha xchg lret imul in and ret pushfw rolb cmp and ret fs iret add outsl movsb fsts inc jnp add and xor lahf aad inc jne arpl sub negl stos loop dec cmpl std xor (bad) or ja jecxz dec xchg lcall adc mov leave pushl lahf aad inc ja loop dec cmpl cli xor rolb cmp test adc mov and (bad) cli xor (bad) or js jecxz dec test (bad) std xor mov lods jecxz dec test (bad) std xor or mov and (bad) cli xor fcompl dec test enter mov lcall mov enter sahf aam jne,pt loopne dec xorl add int3 add insb mov lods loop dec test (bad) gs adc mov sbb mov cwtl int cmp fcoms dec jg jmp imulb pusha xchg lret add imul loop dec test ret stc cs rolb adc (bad) mov enter lahf push bnd inc add das (bad) in dec lods or enter inc mov jnp xor or mov lret add add insb mov mov (bad) data16 roll cmp fcoml inc jl out push xchg jecxz scas or daa xchg cmc dec mov mov dec movsb or sub mov xchg add fs pushf cli push mov scas push outsl (bad) aaa cltd cmc push mov jle cmp sti pop mov fwait lcall ds and push mov insl into xor jo sub or and push imul nop out push scas or stc pop add les mov popa shlb inc cmpsb add jge inc mov xchg clc bound test inc cmpsb or inc test mov mov cmpsl add sarb test retw and (bad) call in pop shll cli pop shll repz lret xor push scas or xchg stc pop mov mov push test dec sahf repnz lcall lock lods or mov cltd sti pop lds jl pop mov out dec mov add add cli pop mov outsl leave es faddl push jae xor xchg hlt pop int lcall inc cmpsb add test push lods xor or mov (bad) loopne fwait std pusha ret out dec lods or (bad) cmp cltd sti pop int sahf lcall sub adc cmp mov push das xchg negl xchg pop mov lods sbb sbb xchg mov add add cmp repz and nop (bad) cld xor rorl push sbb pop mov je inc shrl inc jne in push mov int cmp fstpl mov int3 add adc mov and ret stc das gs roll cmp test adc and (bad) cli xor aam aas jne jmp imull dec test enter lahf aad inc ja loop dec xchg std xor lahf add or lods loope push mov imull iret cltd adc lret pop lret add jo fcoml dec jg lret adc xor jge push stos (bad) push scas pop jno cmp xchg cli pop mov lahf add sub cmp pushf add and repnz pop jle inc cmpsb adc in mov mov imul mov dec cmpsb or cwtl (bad) jo cmp inc mov test inc stos or sub mov pop enter push mov ja inc scas push js cmp or pop mov shrb or pop ficoml xor fildl adc pop mov sbb movsb or or sub outsl (bad) aaa movsb push ja inc mov xchg popa mov fwait cs sub cmp fcoml dec jle jmp cmc sub int3 add outsb movsl fistl inc jl call cmc sub add popa xchg int3 add jo fstl dec test (bad) addr16 aam inc jne loope dec add xchg lret add insb mov scas in movsb das cltd add pop in adc and jp out push mov lret add insb mov scas in push xchg (bad) xor lahf aad inc jne loope dec (bad) mov sub int3 add outsb movsb fimull inc jnp out push xchg int cmp fistl inc jl call xor add add mov sbb ss mov scas in push xchg lret add outsb movsb fistl inc jge out push mov leave pushl inc jbe loop scas cmp pop mov clc das gs adc mov sbb sub lret insl mov scas in dec test int cmp (bad) inc jp in dec test (bad) cld xor add adc mov sbb xchg add lret push aad add in and leave (bad) xor lahf aam je,pt fist and (bad) imulb xchg int3 add insl mov lods jecxz push xchg int3 add insb mov mov fmull sub int3 add insb mov xchg pop (bad) es mov xchg negl es sub fistl inc jl out pop xchg (bad) std xor aam aas je fist and ret fs adc mov add push mov lret add imul out push mov enter lahf aam aas jne loopne dec xorl (bad) pop jge aaa mov or push mov add insb mov scas in dec cltd pop mov jns in push test (bad) cld xor rorb cmp sub leave pushl inc jne loopne dec xorl (bad) sti xor rolb cmp add mov push push mov aam inc jne fist jg ljmp pop xchg lret add aas je fist jg jmp clc stos pop jge xor mov cmpsb dec mov cmpl std xor (bad) or ja jecxz push xchg pushl inc jns in push xchg aam aas jne loope dec cmpl cld xor aam aas jne loope dec (bad) mov add add sahf aam inc jbe loop dec test into add jo fcoml inc jge call imull arpl cmpsb fcoml dec add xchg lret add outsb movsb ficoml inc jle in and add cmp test adc mov push push mov imulb cmp ficoml dec jle ljmp test mov and (bad) divl lahf aam aas je fist and (bad) cli das fs adc mov add push xchg cld xor rorl jae,pt in dec cmpl cli xor rolb adc mov sbb sub xchg int3 add sub icebp push mov lahf (bad) or ja in and (bad) cli das gs roll cmp cmpsl fstl dec jle jmp hlt sub lret imul out push xchg rolb cmp push xchg es loope dec xorl cwtl int cmp ficoml inc jp add and ret fs iret push cmp cmpsb loop dec (bad) mov xchg int3 or mov mov sbb lcall xor (bad) and pop mov leave pop mov scas in push xchg add outsb movsb ficoml inc jge jmp cmc sub pop (bad) xor sbb mov rolb jecxz dec test icebp push mov outsl int3 cs cmc push mov add jg cmp test pop mov (bad) dec mov jg pop enter jns inc mov fwait cmc push mov insl loop ret loop movsb add notb sbb fdivrl mov mov push jns cmp dec mov jp pop les cld outsl cli jb xor or and inc cwtl out dec cmpsl or test aas cltd repnz mov xchg hlt pop lret adc and popf sti pop mov popf icebp push add mov jae xor dec cmpl lahf and add insl mov mov sbb mov lret add outsb movsb fimull inc jnp out push mov imull cmp fistl inc jl call std xor aad add mov and ret arpl test mov and (bad) cld xor aad inc jbe loop dec xor push mov mov sbb xchg lret add imul lods loope dec (bad) mov and movl adc mov and ret imul xorl dec test enter ret add outsl movsl fistl inc jl out push mov aam aas jne loopne dec (bad) mov (bad) cli das gs adc mov push push mov int3 add insl mov push mov roll cmp cmpsl fstl dec xorb clc arpl add add add adc mov push push mov imull cwtl int cmp fist sub leave pushl adc mov pop push mov int3 add outsb mov mov sbb in mov ja xor js pop mov aam xchg cmc push mov mov int sub cmp push rcrb pop xchg int cmp ficoml inc jp in pop xchg (bad) cld xor rolb cmp dec jge jmp push (bad) roll add add sub cmp (bad) inc jns jecxz dec test (bad) stc das fs push dec xorb clc arpl movsl fimull mov clc sub cmp (bad) inc jns out push add xchg aam aas jne loopne dec xorl popf rorb cmp dec xorb cmc sub lret pushl imul loope push xchg (bad) std xor rorl add mov sbb add mov (bad) (bad) xor inc jne loope dec cmpl cltd aam aas jne fist and (bad) imull xchg int aaa insl mov scas jecxz dec test (bad) cld xor rorl cmp dec test mov lods loope dec xorl fwait roll cmp fcoml inc jl call repz lret push fcoml inc jl out push mov leave add add mov lods loope dec (bad) mov ret bound movsl fistl inc jl out pop add mov scas jecxz dec test (bad) std xor aam aas jne loopne dec xorl lcall adc mov (bad) stc xor roll cmp fstl add mov (bad) cld xor aam inc jne loopne rorl xor xlat push inc jp in push (bad) ret clc cs aad aas jne loopne dec (bad) mov in and enter lahf aam inc jns in dec test enter movsb fstl dec jge call std xor rorl aas jne loopne dec (bad) mov lret imul jecxz dec xchg add outsl movsl fistl inc jnp in and ret fs iret add jo ficoml inc jl jmp imull lcall adc and (bad) cli das gs pop add pop xchg (bad) cld xor aam add sub lret imul in push xchg cld xor rorl aas jne jmp hlt sub lret add inc ja add push push mov lret insb mov mov sbb mov (bad) cld aaa insb mov lods jecxz dec cmpl cld xor aam inc jne loopne dec xorb imulb xchg int3 add outsl movsb ficoml inc jnp in and ret clc sub cmp add add jo fimull inc jge call repz leave (bad) xor fmuls sbb mov xchg add aad scas packuswb inc pushf repnz popf cmc pop mov mov scas or (bad) es stc (bad) enter addr16 xor or cmp loopne cmpsb add add in lods or stc pop mov int fistl dec cmpl cli xor roll cmp cmpsl fcoml inc jge call std xor rorl pop add add cwtl (bad) or pop dec (bad) mov xchg lret add imul loop dec (bad) mov (bad) stc xchg add in movsb add sbb xchg (bad) xor aam inc jne fist and (bad) imulb cmp ficoml inc xorl cltd into add jno fcoml inc jl out push xchg lret push fmuls inc js jecxz dec test enter cmpsb fistl inc jnp out add xchg cld xor roll cmp pop pop mov xor roll jne,pt loope push xchg add adc mov add sub leave (bad) xor lahf aam inc jbe insb jecxz movsl cld pop mov imul jne aaa pushf add gs mov mov jg push ret lds (bad) cld imul mov jae push enter aas lods and test cmp out dec lods or fdivs cltd add rolb add add test insl (bad) xor (bad) out push mov (bad) and jbe xor jg dec mov jo xor jge jnp cmp jg cmp adc cmp (bad) inc cmpsl adc dec test xchg negl push test dec mov test pop iret movsl add and ljmp roll add es lods or xor (bad) gs stos movd push (bad) cmp add inc lods sbb xchg add add add dec mov mov cmc arpl xor or sti fs cmpsb push insb sarl inc mov lods adc dec cmpsb or pop enter popf add push shlb cmc push mov xor inc add mov faddl adc mov (bad) xor cmc dec cmpsl add (bad) and cmp cs cwtl notb adc repnz mov outsl into cs in dec lods or leave daa mov insb clc jnp pusha rcrl sub push fs fdivs fs sub pop mov cli das fs adc mov (bad) sti xor outsb mov scas in push test (bad) cld xor aam inc jp in push xchg (bad) cld xor rorb sbb mov and (bad) sti xor rorl je,pt loopne dec addl mov and (bad) imulb popa cwtl int cmp xlat push add mov sub pop xchg lret imul mov int cmp fistl inc jl out push mov lret add insl mov scas in push test sti xor roll cmp test adc mov and (bad) imulb popa xchg iret add adc inc ret jecxz mov je and jnp inc mov and lds xchg icebp push mov jle dec mov sbb cmpsl adc loope lods and pop mov mov ja dec mov and scas outsb out push mov sub and xchg add push mov push mov lods or sti jo xor add fwait (bad) gs popa enter push mov aam xchg cld sbb mov jne cmp sub roll cmp cmpsl fstl dec jle ljmp inc ja loop dec (bad) mov ret stc das gs adc mov push push mov lret add outsl movsb fsts inc jl add and ret stc cs adc mov push push mov lret imul in dec test enter movsl fistl inc jnp out push mov lret insb mov scas adc jmp fnstsw xchg notb or fdivrl nop out movsl std push stos or push and ret add imul jecxz dec cmpl sti xor rorb cmp dec jle mov daa pop xchg (bad) std xor aam inc ja loop dec cmpl sub mov nop in dec test je cmp jle dec cmpsb or add xor popa fimull imul mov and mov test js inc scas or or sbb pop mov mov jg dec mov jb and cs inc mov fisttpl and mov (bad) cld xor add push jg jmp push mov imull cmp fcoml dec jle jmp hlt sub int3 add outsb mov mov sbb sub roll cmp test adc mov pop push mov imull cwtl add or lods jecxz dec test enter lahf aad inc jbe jecxz dec test into add adc mov pop push mov cmc sub lret add insb mov scas in dec test leave pushl lahf add add or jge jmp hlt sub push jne loopne dec orl sbb sub lret add insl mov scas jecxz dec test int cmp fmuls sbb mov and xor mov mov push push mov imulb pusha xchg lret add insb mov mov and (bad) pushfw rorb je,pt loopne dec xorl cwtl into add outsb movsl ficoml inc jnp out push mov add sub roll cmp stos loopne dec (bad) mov enter movsb fistl dec xorl imul in dec test (bad) (bad) xor test mov and (bad) addr16 rorb aas je in push xchg or jne loop dec (bad) mov and (bad) cli cmp fcompl dec test leave pushl pop dec test (bad) pushl mov scas out push mov cli xor rorl inc add in dec test clc sub cmp fistl inc jl ljmp outsl cmpsb fistl inc jl jmp push mov clc das fs adc mov and int cmp fcoml dec jg jmp push mov imulb popa xchg roll cmp fstl dec cmpb (bad) xor mov scas in push mov fimull inc jle jmp imulb popa pushf rolb jae,pt loop dec test popf rorl cmp dec jg ljmp add add push pop add outsb test adc and xchg (bad) push jp in push xchg aad inc ja out push mov rorl jbe,pt loope push xchg stc cs iret add jo fistl inc jge add daa pop xchg enter mov mov pop pop pop cld xor rorl jne,pt loope dec cmpl or jne loope dec test int3 add outsb mov scas in push mov imull cmp loopne dec test rorb inc jbe in push xchg int3 add outsl movsl fistl inc jl jmp push (bad) ret addr16 rorl inc js in push mov cmc sub cwtl int inc ja in pop xchg enter mov mov sub int3 add mov and ret clc xor outsl movsl fist cmpb (bad) xor mov mov into add jno fstl cmpb push mov stc das fs adc xorl add xor mov gs rorb jae,pt fist and (bad) sti add outsl movsl ficoml inc jl out push mov lret add insb mov scas in pop xchg enter popf rorl je,pt fist jg ljmp popa xchg lret add insb mov scas in dec test (bad) cld xor xlat or repnz in gs rolb cmp fcoml inc jl out push xchg enter popf rorl jae,pt add mov and lret add insb mov scas in dec test (bad) sti xor rolb cmp dec jge ljmp xor sahf aam aas jbe loope push xchg std xor rorl je,pt loope dec xorl lcall adc mov push push mov rolb cmp test mov and (bad) imulb popa xchg int3 add insl mov xorl cwtl add into add outsl movsb fimull inc jp in pop (bad) ret fs adc mov int xchg sub dec jg jmp push mov imull cmp fcoml inc jge jmp add insl mov mov sbb sub lret add insb mov scas in dec test (bad) std xor rorl aas je in push mov imulb cwtl into add outsl movsl fistl inc jge call sti xor rorb jae,pt fist add in and xchg int3 add outsb movsl fistl inc (bad) mov (bad) std xor aam inc js in dec test leave add imul out push mov int3 add outsb cmpsl fstpl dec test enter mov mov sbb mov cmc sub cltd iret or inc jge ljmp push (bad) or ja call add outsl movsl fcoml dec cmpl movsb fcoml dec xorb pushl dec add test fmuls xchg sub sarb fwait incb push mov imulb xchg int3 add insl mov scas in dec test (bad) cld xor rorl cmp lods dec pop sti xor fistl inc jl out push mov and mov mov mov sbb mov int3 add insl mov loope aad dec jg ljmp popa xchg int3 add mov push mov outsb sarb popf stc pop enter cmp cltd repnz movsl adc cmpsl adc hlt jbe cmp ret pop pop nop pop pushf adc sbb xchg lret add insb mov mov sbb mov aad aas je loopne dec xorb imulb xchg int cmp fcoml inc jl out push xchg (bad) cld xor aam aas je in push mov sahf rorl inc jne loope dec (bad) mov (bad) addr16 rorb cmp add add mov and (bad) sti xor roll inc js movsb aaa out (bad) sub int3 xor add es push mov jl dec mov xchg push shrl hlt dec mov mov pop mov enter jg dec mov test dec movl xchg ljmp inc mov xchg add vmread cmp pop and or xor addr16 rorl aas jne loopne dec xorl lcall adc add sbb sub cmp fistl dec aam cltd roll cmp dec xorb stc das fs roll cmp dec xorb stc cs roll cmp cmpsl fstl dec mov imulb cwtl inc nop (bad) std xor add adc mov sbb sub lret push (bad) or lods loop dec cmpl stc cs cltd iret add jo fcoml and (bad) cli das fs adc mov sbb sub int3 add insb mov mov (bad) popfw rorl je,pt fist and ret stc arpl ja loop dec test enter mov scas in dec test (bad) std xor rorl jae,pt fist jg jmp push mov imulb xchg int cmp ficoml inc jnp out push (bad) ret clc cs pop dec cmpl sti xor rolb cmp add fistl inc jl out push mov int3 add insl test adc mov and (bad) imulb popa xchg int add mov ja xor mov lret imul loope dec (bad) mov rolb adc mov push push mov lret add insb mov scas in push mov lret imul call cmc sub int cmp fmuls inc js in dec test add mov xorl lcall sbb mov enter mov lods loop dec cmpl cld xor mov lods loop dec test lret add insb mov scas jecxz push test lret add jno fcoml dec jg jmp pop mov cld xor lahf aam inc jne loopne dec xorl mov scas in push xchg rorl jae,pt add add adc (bad) mov and xor rorb cmp dec cmpb cmp push xchg enter mov scas out push xchg pushl imul nop movb dec xorl sahf aam inc jbe repz (bad) cld jo inc mov (bad) aaa mov pop mov mov jmp (bad) (bad) (bad) sub jmp aaa mov scas sbb push mov ret clc pusha (bad) sub sub add inc test and in mov mov gs movsl or inc cmpsl or fnstcw stos adc mov test imul cmpsl adc nop negb xor mov (bad) sti rolb sbb jge dec mov addl addr16 xor cmp vmwrite inc stos adc jmp add sbb sub mov xchg sti push addr16 add scas and stc pop enter pop (bad) xor lahf add dec mov test pop shrb sti push inc mov mov pop lret (bad) out mov test pop int3 aaa lahf or mov sarl test ljmp jne imull cmp ret sub or jecxz scas pop sub mov lds xchg add cmp fiadd jnp dec mov jg dec mov xor (bad) sub add add cwtl add scas adc pop jnp cmp cmp mov xlat addr16 test test push mov sub cmp mov inc mov and stos push jno xor jae inc mov xchg mov push scas adc aaa cwtl hlt scas adc xchg cmc push mov js cmp test dec lods adc cmp jp inc mov nop repnz mov outsb into cmp out dec add stos or xchg icebp dec mov jne cmp (bad) ljmp inc movsb add pop and int3 xor mov dec lods or cmc push mov test cwtl cmc pop mov stos or clc pop mov fwait clc push mov jne inc movsl or mov dec mov outsl iret xor (bad) call lret jmp mov (bad) fldl or xor jae cmp add add and imul pop (bad) sub out push mov jo cmp scas adc inc stos sbb or aaa lahf push outsb faddl jns dec mov xchg pop std push ss add roll add mov mov (bad) out mov jle inc mov ja inc lods adc mov int xchg (bad) fs add ss add cmp mov fadds jnp dec mov mov push mov jns inc mov jnp dec mov mov pop ret cli arpl xor int3 cmp xchg adc iret inc mov sahf adc mov out pop les or adc dec mov mov pop into dec int mov or pop int3 inc mov int sahf pop outsb xlat lods and jb je das mov in (bad) sub add add and and js cmpsb or push rorb sbb mov insl roll jns push mov jg pop lret (bad) in pop roll pop mov imul mov fldl and cmp push lret sub fmuls sbb add push lret sub mov and lods daa lahf (bad) (bad) je push mov mov iret cmp pop mov and adc repz add cs pop (bad) sub ret add add imul cmpsl or inc cmpsb or dec scas adc fild or mov mov aam movsb push popa mov xchg ljmp xor inc mov jge dec stc mov push mov leave cmp xchg cli pop ret jecxz scas adc dec add stos and sarb scas push xchg add fisttpll sbb lock iret inc mov cltd or sbb jp ds sbb cmp aaa cmpsl or add add imul mov xchg or repz dec mov pushf jne nop repz mov lret xor add push enter cwtl push test pop (bad) xor mov xchg stc pop (bad) sub mov mov xchg cli addr16 lcall jnp push mov sub (bad) sub popf add inc mov mov pop (bad) xor fisttpll ss (bad) fimull and ss adc inc scas pop test dec mov jp add pop rorl cmp mov leave xor mov test push mov (bad) push lret cmp daa fwait or mov jb arpl push ret (bad) (bad) fistl and cltd add dec sarb and push mov pop ret sub rolb and xor fimull and popl push outsb (bad) xor mov push mov mov nop cld pusha into aaa mov lahf add xor add add mov movsl or cmp ss ljmp xor add sub nop repz mov (bad) ljmp pop shlb ljmp mov test push mov mov pop cli arpl das cltd std (bad) lds mov pop les mov push into movsb pop addr16 pop ret lret pop xchg dec mov xchg hlt pop ret sti pop shlb ljmp imul sahf add das xchg clc pop ret cmp lcall dec mov jns dec mov jp inc movsl or or inc mov mov ret in dec mov xchg push mov jg push mov jle dec mov (bad) in dec mov jnp dec mov jge dec mov jp dec mov (bad) daa (bad) repz shlb in push mov mov mov sub lock mov stos or xlat cmp das xchg stc pop shll in push mov mov mov pop ret hlt pop mov mov mov std pusha shlb in push mov jle dec mov xchg push mov sub in mov les xchg cld outsl aad mov xchg cld fs xor mov iret xor lahf or xor and jmp fdivrs movsb or xor repnz mov stos adc cmp mov repz cmp outsl (bad) inc mov test pop lds fwait add push mov add add push mov fimull pop xchg add inc stos sbb cmpsl adc cmpsl adc test mov (bad) ss mov fadds sub int movsl or aam mov mov (bad) negb xor or dec mov xchg dec lods or xor add xor cmp popf add mov ljmp cli push push ret or in push push les add imul cld imul xor xor (bad) inc mov fldl sbb in pop mov ficompl push (bad) cmp jecxz mov icebp fstl inc shrl jb aas stos adc push int3 add pusha xlat inc stos sbb inc mov scas adc aaa mov push mov loop (bad) xor rolb xchg or dec mov add pop xor cs sti data16 add add lahf adc ljmp cmp dec mov fildl sbb xchg push ret xor mull inc mov cltd sti imul fnstsw push lret sub adc push mov mov sbb lea jle (bad) enter jbe push jb cmp mov jbe cmp dec mov ret xor sbb repz enter popa lret pcmpeqw inc scas sbb xchg add cmpsb adc push mov flds sbb out push mov add sub bound pop mov xchg clc pop mov inc movsl push arpl and jo xor push sub sbb pop int3 aas mov rorl inc mov cltd jae mov adc scas and pop xchg dec mov mov mov lods pcmpeqw inc mov scas sub add sarl mov mov jnp pop rolb sub adc pop outsb (bad) aaa sahf adc push mov (bad) aaa movsb push push mov scas and in lret sbb ret cmp add (bad) xor add cmp aaa xchg clc arpl sub nop cli (bad) leave das xchg stc pop enter pop lret jno mov or cs pop mov insl roll cmp jno xor (bad) lock and or push (bad) xor mov push mov stos or out push mov mov jmp adc outsb (bad) dec les xchg notb lods adc fnstcw cltd cld pusha les xchg notl outsb int3 sub or xor sub test inc fwait cli pop mov xchg lock mov insb leave and adc inc lods adc cmp adc sbb adc mov push mov jp inc scas adc or (bad) gs sub ss add sub jl inc movsb pop pop mov lods adc xor test dec mov ja inc mov pushf add das xchg clc pop ret add cltd stc push mov add cmp loopne cltd cmc pop enter adc dec mov mov jns cmp add cmp xchg std jo add (bad) xor or sub pop jle cmp add and bound shrb add and cmp cltd add mov test (bad) das xchg (bad) push jae dec mov mov push mov (bad) daa xchg dec (bad) cmp push jo and imulb dec mov movsb or sbb in dec movsl std push mov jne sub push mov jp cmp xchg mulb sub outsl int (bad) negb and ljmp mov (bad) out fs xchg cld pusha lds jmp leave xor add xor add (bad) enter add out push mov mov jp add or xor sub xchg push mov jge inc test imul fwait (bad) (bad) lret sub jge inc lahf add daa xchg dec scas adc insb jmp dec (bad) xor roll es cmc push mov mov cmp in pop (bad) ss and xchg push mov jp push shll jmp out stos or mov adc and (bad) aaa popf pop outsl (bad) xor pusha roll adc inc scas adc pop int movsl push ret pop xchg lock mov dec mov sarl pop (bad) xor mov lea js push push (bad) xor mov xchg add add xor or dec mov jp inc scas and or out pop (bad) push xchg push shlb jmp push js dec mov jge dec lods and sti pop (bad) xor mov in push ret xor inc cmpsb pop js pusha sarl mov mov jnp dec mov and mov xchg or lret xor lcall sub mov jne push mov jl inc popf cld pop rcrl in push mov and lock mov add test dec mov addl xchg clc (bad) into xor movsb adc inc mov cmpsb push insl into xor mov xchg mull xor push imul iret xor movsl pop jg dec mov mov (bad) pop in popf cld pop les and lahf add int3 sub jg inc mov js aaa xchg sti pop mov add rclb inc movsb cld push mov jo sub pop (bad) daa xchg inc test or sbb (bad) sbb add sbb fildl daa xchg add inc scas adc sub insb lret jmp stc arpl xor jnp dec lods push jbe xor sbb (bad) jecxz lods adc inc cmpsb jmp push jge inc test je dec scas and cmpsl or aam fwait adc pop ret or push mov dec mov jle inc test imul xchg stc pop ret and jg inc movsb or lret xor lahf lcall aas movsb or sub adc cmp in test bound sahf add and rolb test aas mov xchg inc movsb add sbb aas mov (bad) out test mov dec scas psrld (bad) lock scas or mov leave xor push mov sarb movsb adc stos sbb cltd add shll faddl adc add cmp mov push les mov or cmpsl sbb mov pop (bad) sub sbb popf adc popl js dec mov mov push xchg add xchg add pop (bad) aaa sbb (bad) xor xlat dec mov faddl xor mov ljmp repnz mov rorb xor in sarb mov mov test dec mov jg add add sbb (bad) add sbb mov data16 inc mov jo cmpsl push jge inc mov ja cmp shrl adc dec mov nop (bad) push cmp jmp push xor mov mov loop mov jl pop lret clc fs cs hlt popa fcoms inc mov mov push xor sti popa lret cld insb loop (bad) cmp mov lds and mov ret clc popa add leave das nop repnz shlb in push mov sub fmull sub mov sub or arpl mov xor xor out mov inc cmpsb lcall cmpl jmp dec mov xor mov shll jl ss repnz mov push and fnstsw xchg negb adc cli push mov xor jge cmp and cmp push scas push insl lret sub mov add add inc mov roll adc mov (bad) icebp fimull xor xor das mov adc mov pop aam mov xchg add push (bad) cmp lock iret cmp movsb adc fidivr mov dec mov jg pusha fadds or daa xchg clc pop lret hlt push mov hlt insl jecxz enter xchg cmc popa aam popf add (bad) ficom aaa mov jns push mov add pop (bad) xor xchg cli pusha lds mov pop mov stos or fldl add cs push mov lock mov lods or add cs ljmp popf push insl iret inc test stos push jns inc test je inc lods adc cmp mov dec scas or push add push les stos sbb push lret cmp rolb pop xchg push xor (bad) inc mov lds or loop movsl or add add cmp inc scas adc xor scas sbb xchg or pop lret cs clc push int3 inc mov jg aaa xchg icebp pop mov test mov inc mov fwait adc inc movsl add push jns push lds mov dec stos pop addr16 dec scas adc push jae xor cmp add push jl push add cmp jne inc mov nop in dec loopne mov mov stos add add sarb mov xchg sti (bad) lds push fsts and pop (bad) in mov jnp arpl aas mov scas adc stos adc aas mov nop cli pop lret stos sub push mov mov leave xor cmpsb pop imul enter push mov cmpsb pshufw stos push js mov inc cltd notb push sub xor cwtl mull es push mov mov test dec add test inc sahf std pop mov cwtl repz mov mov in mov fdivrl lahf or cmp or cmp out shlb push mov ret cmp (bad) loop lds xchg cli pop into add adc inc mov cwtl or data16 xor data16 mov mov push int3 cmp enter je inc movsl or cmp sbb adc mov ja pop lret add xchg mull mov movsl adc jo dec lds adc (bad) xor ss cli pop shrl sbb fiaddl adc dec mov and (bad) mov mov pushf add daa (bad) fidivl sbb adc sbb (bad) fisubrl adc adc xchg xor xor cmp aas fwait out inc popf (bad) dec mov pop mov imul js and test xor inc fwait icebp add inc lcall add mov addr16 rcrl leave and sub loopne xchg jmp xchg in inc xchg repnz popf (bad) dec mov push lods or popa mov addr16 gs jb and jle sub and jp daa jl sub fldcw mov xor cmp (bad) dec mov dec mov sbb and sub pop mov ja and sub add add cs in xchg jmp mov pusha mov insb (bad) sub aas xchg hlt dec cmpsb std push stos add or adc sbb xlat das test sub xor in inc popf hlt dec test mov mov outsl ret sbb sbb leave push jbe es daa sbb test aas xchg in inc xchg out inc cltd lock movsb cli dec cmpsl call bound addr16 jo aad adc xchg xor add loop nop call pushf icebp inc lcall cli push stos (bad) push test insb lds iret sub ds in inc lahf hlt dec mov pop mov pop mov les lret and sub xor add sbb es xor inc sahf lock mov addr16 push jbe sub out nop out xchg in xchg call cmpsb or adc pop jo pop jbe and and shrl in add inc xchg ljmp push movsl int mov push test push lods add adc sbb leave sbb leave sbb int jp and int jns and fsubrs xchg xor xor xchg cmc dec test push cmpsl add add mov pop add sbb daa (bad) fnstenv mov xor inc cwtl in inc pushf icebp dec mov push test push stos or push sbb sbb fbstp (bad) out xchg out inc mov push test push lods add add or adc mov jb add mov aaa mov cmp inc cltd lock popf stc push test popa mov jnp cs xor xor in push mov push sbb push jno and cmp dec movsl std push stos add push pop mov push sbb les jg cmp push test jp das mov xor dec mov push mov push add jns es sub inc popf std push cmpsl std pop mov test ds lock lahf repz pushf repnz sahf cmc push lods push pop mov jno loopne mov inc movsb notl add ret (bad) xor inc lcall adc outsl ret sbb and in xchg out dec mov push cmpsb cld push lods or adc sbb and fldcw test xor pop mov pop mov push pop imul bound add insb ret (bad) sbb (bad) sbb int jbe pop jb and and xor mov outsb enter push cmpsb cli dec mov push stos call add pop pop mov arpl jae and test xor inc cltd icebp push stos add add or or adc push add push je and shrb sbb mov cmp ljmp dec mov push test bound lret shrl jge sub sub add hlt push cmpsb cli push cmpsl add sbb and xor ds in inc mov pop mov pop mov bound outsl lds lds shlb (bad) fdivl mov cmp dec movsb sti push stos add or adc mov cmp dec test mov bound mov gs fs imul adc sbb mov xor movsl jae daa jge sub jl sub fsubrs sbb mov ss in mov cmp cmp inc xchg add push bound gs imul leave and and and aad test sub aad sbb xchg xor inc mov push stos add add add mov pusha mov push sbb and sub sub cmp fs jne xor fistpll (bad) out cwtl out add add adc pop imul jb push cmpsl add add mov arpl imul (bad) fadds cmp cmp inc lahf (bad) dec cmpsb call and mov bound outsb les outsb lds jo sbb lret (bad) xor xor jecxz mov ds ljmp inc xchg in inc fwait repz mov push mov pop mov bound imul outsb ret and aad xchg xor dec lahf repz fwait icebp inc fwait repnz mov adc pop insb ret lret lret leave pop jbe and iret xor push stos add stos add or adc sbb es cs inc fwait repz mov pop mov pop mov bound fdivl mov cmp (bad) push scas push pusha mov je es sub jmp lcall add or ret sbb sub xor hlt push cmpsb cld push stos add rclb xor in dec sahf notb add add sbb daa jge sub inc sahf cld push test pusha mov push sbb and and shlb jge cs xor inc fwait repnz mov bound jne and and into and sub jno inc movsl std pop mov inc cmpsl add fdivrl push lret cmc pop sbb jne mov test enter add add push cmpsb pop sub jbe cs aas xchg in inc popf notb or jnp (bad) jmp mov lods add or das (bad) negb pop jbe xor mov arpl stos loopne push or xor pop imul mov xchg int cmp cmp mov inc mov jae xor out movsb std pop mov xchg push jge outsb leave sub xchg int cmp outsl movsl fcoml inc jle jmp imull cmp fcoml inc jge call cmc sub xchg int inc ja in and (bad) addr16 rorb inc jne loope dec (bad) mov pop mov test sbb mov cli xor roll jne,pt loopne dec mov cmp pop mov sahf cli popa mov (bad) jmp mov mov mov sbb nop in dec mov xchg inc sahf jmp sbb add cmp arpl cmp jl cmp popa mov mov (bad) cli (bad) int sar pushfw roll cmp add pop xchg leave pushl mov scas jecxz jmp mov std push mov clc das jae mov cltd repnz stos or (bad) cmp and mov push mov lods push pusha mov lahf adc sbb mov pop push mov imull inc jns xchg sub test adc xorb sti xor rorl aas jne loope push push mov imulb popa cltd iret add in push xchg ret int3 es nop out cwtl repz mov movsb inc enter pop mov aam lahf or rolb sbb aaa cmpsl adc loope dec fiaddl sti push mov push push mov jle cmp pop mov popa mov addr16 and jp inc test inc clc ja dec mov sub xor cmp iret cmp iret ds outsb loop shll jl push rcrl or stc pop mov fiaddl imul test mov jle cmp pop jle cmp and loopne rolb lds sbb (bad) xor rorb xchg cld popa add aaa sahf add push mov xchg add mov rclb and push mov or fs sub js cmp dec mov hlt pusha fimull es pop xchg arpl inc lods sbb mov out mov icebp (bad) xchg ret add xor jl ss std popa shrl mov aam mov xchg cli imul push xchg push pushf or in int cmpsb and shrl pop mov imul add dec mov xchg add fisttpll sub int sub inc lods adc mov (bad) ja inc pushf (bad) dec lods or out dec stos add jp cmp push jnp cli iret aaa fwait jmp and out stos or das nop icebp add and imul xchg (bad) lds mov dec mov jb xor jle inc cmpsb pop addr16 sub insl int3 cs push mov jno xor jp cmp add das xchg repnz mov ja cmp and mov mov arpl sub fstpt dec mov jae xor lcall lahf add and ss notb and pop shll out scas push jnp push mov mov shrl lock push mov jno inc mov pushf sbb cmp add sub mov jbe sub popa das icebp cwtl stc pop mov xlat add add mov push shrl repnz lods or mov insb lret sub insb lret mov push stos or es pop jge cmp jmp in lods push imul lds cs pop fwait rorb aas jbe loop push or lock mov xchg inc test rcrb repz cmpsl fstl jg jmp push mov stc das gs rolb cmp dec xorb clc cs roll cmp dec xorl add cmp (bad) inc jge call imulb popa xchg int cmp ficoml inc jl out push mov lret add insl mov mov sbb (bad) ret stc das fs adc mov and add add outsl movsl fistl inc jge jmp imull lcall adc stos jecxz push xchg add imul push pusha mov mov jb xor sti outsb aad movsl push insb enter data16 sub add jge call imulb popa xchg int cmp fmuls inc jp out and pop mov xchg cli pop mov xchg add adc cwtl int cmp cmpsb or and cmp mov sbb mov lret push (bad) or stos loopne dec xorb add insb mov lods loop dec (bad) mov ret bound mov test cmp add inc add mov je fs stos or sub add out pushf clc pop mov lods sbb out mov (bad) hlt push mov ja cmp jbe sub mov popf (bad) pop les pushf jno xchg repz mov jo cmp iret xor push je dec mov xchg in dec mov outsl (bad) xor dec movsl sub xchg push mov mov add sbb aaa xchg hlt push mov jecxz mov test dec mov lret scas xor (bad) fisttp push insl fistl push rclb push mov cli je,pt loopne dec xorl cmp fcoml dec jle ljmp popa xchg int3 add (bad) push cs sbb sub into add outsb movsl ficoml inc jnp jmp clc sub add jmp imulb cwtl iret add add sub outsb movsl fstl dec jge nop add es dec mov test jo and test inc fisubrl addr16 rorl aas jne in and (bad) stc xor rorb jae,pt loopne dec test enter mov les jmp imull inc hlt outsl sti pusha fild repz les jecxz stos or and (bad) pop mov in push stos push bound mov inc shlb add nop sub cwtl add sbb xor or (bad) es cmpsl push outsl fidivrl mov test dec mov test sbb mov rolb cmp dec xorl popf rorl inc jne mov inc jns in dec add rolb cmp dec jg imul cmp dec xorb clc cs adc jg ljmp popa cwtl int3 add outsb add mov (bad) pushfw roll cmp dec xorl fwait rolb cmp cmpsb fcoml dec jge jmp clc cs sbb mov int cmp fcoml inc jge call imull xchg int cmp fist dec cmpl std xor cmpsb fistl inc jle jmp hlt sub lret add inc jns out push xchg xchg (bad) cld xor aad add add inc jne call repz lret push aad inc ja jecxz push mov leave (bad) xor mov lods jecxz and (bad) imulb pusha xchg lret jae ficom dec jge jmp repz lret add outsl cmpsb fistl inc jle call hlt sub lret insb mov lods loope dec cmpl rorl jae,pt ficom dec jle ljmp pop xchg lret push (bad) inc jl out push mov imulb add add into add jne loopne dec xchg cmp pop sub jmp mov imul mov lret jns out push mov fimul or lods jecxz dec test enter mov scas jecxz dec test rolb cmp dec jg jmp push mov clc cs adc and (bad) stc das gs roll cmp add add mov rorb je,pt loopne dec (bad) mov (bad) pushfw rorb aas jne loope dec cmpl add insb mov push xchg add outsb movsb fimull inc jp out push mov leave pushl lahf aam inc jbe loope dec xorl cmp ficoml inc jl lock xchg (bad) std xor aam inc jne loope dec (bad) mov (bad) pushfw rolb cmp dec xorb clc sub aas jne loopne dec (bad) mov (bad) stc xor rolb jae,pt fist pop push mov imulb xchg int cmp fimull inc jnp out push mov stc das fs adc pop std xor rorl je,pt fist dec xorl cwtl into add insl mov add lret add imul jecxz dec test (bad) stc das fs adc mov push push mov add add sub lret add test mov and (bad) data16 roll cmp cmpsl fcoml dec jge call repz leave add insl mov scas jecxz dec cmpl add jo ficoml inc jnp out push xchg (bad) xor lahf aam inc ja jecxz dec test (bad) fs js inc cltd negl sbb inc mov and ret sub aam inc jne loope dec cmpl add add pop xchg leave pushl mov std xor aad inc jbe loop dec test (bad) std xor (bad) or ja jecxz dec test leave pushl dec test enter cmp sub popa add sub out movsb push fs dec cmpsl or push mov leave sub fdivrl xchg add mov mov dec mov imul movsl pop addr16 dec movsl add adc add add addr16 das xchg add inc mov ret (bad) fs es mov sub sarb sbb mov mov out mov xchg clc push lods and add dec mov pop imul test jo cmp test push imul push jg push mov ljmp jns cmp jge dec mov mov pop mov aas fdivl out es xchg lret insb mov add add (bad) imull insl movsb ficoml lahf push (bad) notb push jo das mov inc mov lcall push mov push lds stos push xchg add or lods loope dec test aam inc jp call imulb mov pushf cld (bad) and icebp dec mov imul mov mov mov jnp cmp mov pop mov scas in push xchg add imul add inc ja jecxz dec test rorl je,pt fist and ret mov cmpsb add (bad) xor addr16 sub mov dec scas pop jle dec mov test jo fnstenv xor std push mov imul sti push mov clc cs mov test adc sub xchg int cmp ficoml inc jnp out push xchg leave pushl mov lods add pop push mov ret arpl jbe loop push mov imulb popa xchg int3 add insl mov mov sbb jecxz lods or (bad) stc das gs adc mov pop enter push mov imulb xchg iret add adc mov push push mov into add adc mov mov mov inc mov jg cmp sub lods adc sub scas pop sub mov jo pop mov add add sub cwtl into add outsb movsb ficoml inc test (bad) std xor aam inc jne loop dec test (bad) xor scas adc xor out inc mov jg inc mov repnz mov mov (bad) repnz in sub lret add insb fsubs sub out push cli test dec push test (bad) xor or and fidivrl xchg add push mov stos or sub out dec cmpsb add pop mov out push mov add add negb adc sbb and scas shrb dec lods or adc in lahf add and xchg add xor adc push mov nop testl push shrl and mov cmp or sbb into sub pop sarb sahf cld pop fidivrl push mov mov mov mov jmp sbb clc add pop enter pop lret cmp cmpsb sbb xor inc mov je sub jne cmp movsb or aas mov (bad) jmp mov add cmp dec ret (bad) xor lcall addr16 cmp in ret adc jmp shrb add inc lods push jle addr16 mov outsb lret inc (bad) xor movsl adc jmp ljmp dec mov aam movsl push jnp dec add das pushf or mov repz int3 aaa mov int3 xor mov loop mov xchg ljmp inc test jp pop int3 cmp or dec mov out mov jb pop adc push xchg imul loop scas sbb dec scas sbb dec mov xchg pop les xchg adc pop (bad) push mov adc lahf push jb cmp mov mov jno inc scas sbb add add fmull sub sub test das (bad) mov js sub enterw icebp pop shrl sti push xchg arpl cmp cmp test and stos adc mov mov pop (bad) sub cmp sbb (bad) mulb das lcall in adc jmp int nop repz mov lret add sarl stos sbb dec mov test push mov add push jno inc mov sub cmc pop sarb mov int3 cmp cmpsl or sbb fldl add mov xchg cli pop mov imul (bad) inc scas sbb mov lods adc sub sbb pop (bad) xor cwtl ljmp cmp adc dec mov xchg push leave xor or dec lock mov sbb nop cli (bad) lret add lahf or inc test ja inc lods sbb cmp add xchg notl adc and and fldl or (bad) xor mov int xchg cli ja imul or mov mov aad adc repnz out pop mov cli xor roll cmp test mov and ret arpl cmpsl fstl dec mov (bad) cld xor aam inc jne loope dec (bad) mov (bad) stc das fs adc mov pop push mov stc cs pop dec cmpl std xor (bad) or ja jecxz dec test (bad) sti xor rorl jae,pt loope dec (bad) mov and (bad) push jnp out push mov clc arpl add push mov sbb xchg hlt pop mov xchg negb and les fwait or xor pop les sti pusha out push mov clc cs iret add lock cmpsb cld popa add add mov xchg dec cmpsl add mov (bad) adc daa (bad) in mov ja xor or es pop ret xor inc lods push jge push into aas mov xchg add and test jl add inc lods push test push enter (bad) in push mov (bad) icebp push scas (bad) inc movsb add push jl ss negb xor mov xchg add in inc fwait out dec lods add jmp mov jo sub add add lcall push test dec cmpsb or lds mov dec les xchg sti pusha lret cmp lcall insb iret das xchg negl and fdivrs or (bad) (bad) enter pop ret clc pop ret repz shll icebp push mov fnstsw mov sub cmpsb add in dec mov jae push mov xchg stc pop mov mov jae xor repz mov shlb dec scas adc cmp jns jecxz mov sub icebp pop (bad) daa xchg clc pop shrb adc cmp (bad) rolb jg sub and jno sbb adc or push mov insl int3 es and xor pop mov sub sbb int3 xor stc pop faddl add repz mov jle inc cmpsb adc (bad) xor out mov cmpsl pop jge cmp push outsl fadds lds adc fstpt mov add add (bad) aaa shrl sti arpl sub mull inc mov xchg data16 ss add mov pop (bad) xor mov inc mov je and aad sbb (bad) cmp pop aad cld (bad) rcrb in mov mov dec lods push fs pushf add push iret inc mov push jns cmp add dec mov test insb iret xor notb es dec mov jle push (bad) ss jl pop les add xor pop lret cli pusha lret repnz shll out test pop mov xlat inc scas adc mov mov mov push scas adc cmpsl adc pop mov lret or pop (bad) aaa mov mov imul (bad) cmp ret xor (bad) aas lods sbb cltd (bad) repnz mov int3 cmp mov xlat inc scas adc out pop leave xor int3 cmp flds and mov add lock int3 cmp flds adc ljmp rolb mov push hlt fs inc stos sbb mov xlat dec mov mull dec mov sub movq xchg jge push rcrl roll cwtl add push lods push outsb int3 inc mov cwtl or sub shrb jns push mov lds (bad) imull push mov xchg pop shll stc (bad) lret cmp sub add dec scas push mov (bad) into cmp movsl adc clc imul adc mov jns dec mov in pop lret push (bad) repnz leave aaa cmpsl adc in stos push sub pop jg dec mov (bad) xor dec mov icebp pop fist ss jle push mov fidivr sub loop movsl add jmp fsubrs dec jg jmp push (bad) ret fs pop push mov imulb cwtl into add adc mov pop push mov imull cwtl into add outsl movsl fistl inc jge call cmc sub int cmp pop dec (bad) mov (bad) cli das gs roll cmp test adc (bad) mov cmc sub int cmp fistl inc jl call hlt sub lret pop je,pt loop dec cmpl cld xor aad inc jbe loop dec cmpl sti xor (bad) or ja jecxz dec test int cmp fcoml inc jge xor push dec (bad) mov (bad) (bad) xor mov add add or lods jecxz dec test leave pushl insb mov mov and xor aam inc jne loop dec test enter mov mov sbb xchg lret add insb mov mov and pop sti xor rorb je,pt loop dec xchg int cmp fstl daa js add and (bad) cli das gs sbb mov (bad) gs roll cmp cmpsl fcoml dec jge call add push mov mov rolb cmp dec jg ljmp insl mov mov sbb mov lret add outsb mov scas in push xchg roll cmp dec jg ljmp test cwtl std pop shll out push mov and out mov and out pop les xchg add es sbb inc sbb pop mov insb int (bad) in pop mov add je xor lods push jne ds dec mov mov mov inc lods vmread aas movsl or jecxz lods and hlt push les jge cmp fistl inc jl jmp imulb or js in push mov xlat or js jecxz pop dec test (bad) std xor aad inc jbe loop dec xchg pushl inc ja jecxz push mov imulb popa xchg int3 add outsb cmpsl fcoml dec jge jmp testb add sub xchg int3 add outsb movsb (bad) inc jnp out push xchg (bad) data16 rorl aas je out push xchg pop (bad) dec mov jne sub or sub test dec stos add fiaddl add cmp sub fmuls inc jp out add shll loop lds (bad) lock lods sbb negb jo sub in push mov int3 or js in push xchg lret add outsb movsb fimull inc jl add mov push push mov imull cmp fstl dec jg ljmp ss test adc and leave xchg push mov cmpl cli xor roll cmp dec xorl xchg lret or stos loopne jmp pop xchg lret mov push inc jns out push mov lret imul jecxz push add ficoml inc jl call hlt sub lret add imul add sub push scas pop pusha mov mov jo sub pusha shll lock mov (bad) in mov fsubl pop nop (bad) addr16 rorb je,pt fist dec cmpl std xor aad inc ja loop rorb insl mov scas jecxz dec test (bad) sti xor roll cmp ficom jg ljmp popa xchg int cmp add pop dec mov fidivrl lcall scas push ja add sbb jno xor mov lcall adc enter popa int movsb cmp pop xchg enter popf aam push sbb pop dec test fildll in and (bad) cli das gs rolb add out and xor aad inc js in push xchg enter lahf or sub test ret jge call pushl inc jne loope dec (bad) mov and cld xchg cli xor sahf aam aas jne loopne dec xorl lcall adc mov (bad) popfw rorb jae,pt ficom xorb icebp dec mov ljmp jecxz push xchg aad adc mov movsl adc dec (bad) mov (bad) cld insb (bad) jno sub pop mov fwait cli pop mov mov test jmp push (bad) ret stc cs cmp insl idivl xor sbb sub js aas cltd cli push mov jb cmp xor dec test jl xor popa xchg int cmp fimull inc jp call hlt sub lret imul jmp push mov imull xchg int cmp fimull inc jnp out push mov lret add imul loop dec cmpl add insb mov lods jecxz dec cmpl add (bad) data16 roll cmp dec jle jmp (bad) sti xor rorb je,pt fist xchg cltd iret add outsl movsl fistl inc jl out push mov lret imul in dec test lahf std addr16 hlt je sub inc sahf stc push mov cmpsl fstl dec jle jmp push mov imull cwtl int cmp (bad) inc jp in push xchg pop cmp sbb cs adc mov pop push mov clc sub cmp test adc cltd pop lds sub lret daa (bad) ljmp mov push push mov cmc sub lret add insb mov scas in dec cmpl push mov test adc mov sub lret add insb mov scas in dec test enter mov lods loop dec test (bad) cld xor rorl aas jp out push xchg iret add add add jo ficoml inc jge call hlt sub lret imul jecxz push test movl adc and nop (bad) cld xor rorl aas jne loopne dec (bad) mov (bad) sti xor rorb cmp dec xorb add insb mov add (bad) cld xor rorl je,pt fist sub lret add insb mov scas out std ss mov mov (bad) cld xor add add rorl aas jne loope dec (bad) mov (bad) std xor aad inc jbe loop dec test (bad) cld xor ficoml inc jl jmp imulb xchg int cmp mov inc jp out push xchg (bad) xor lahf aad inc ja loop dec cmpl push cmp fstl dec jge mov leave pushl mov lods loop dec test (bad) std xor (bad) or ja jecxz dec mov int cmp add ficoml inc jl call cmc sub int cmp ficoml inc jl out push xchg lret imul jmp imulb popa xchg int or lods loop dec test (bad) std xor inc jnp out push mov int cmp pop enter mov scas in push xchg enter sahf aam aas jne loopne dec (bad) mov (bad) pushfw rolb cmp push xchg add add xor lahf aad inc jne loope dec (bad) mov (bad) cli xor roll cmp dec jle jmp imull sahf aam inc jne loopne dec xorl outsl movsl fistl inc jge call cmc sub xchg into add outsb movsb fimull inc jl out push mov rolb cmp dec xorl pushf roll cmp dec cmpl pop xchg lret imul in and ret stc add add cs add push xchg lret add insl mov scas in push xchg int cmp loope dec cmpl pushl inc jns out push mov clc das gs rorb je,pt loopne dec cmpl pushl inc xorl lahf aad inc ja loop dec test leave add inc jnp out push mov iret add sbb mov rolb cmp adc test cltd into add jo fcoml dec jg jmp pop (bad) ret stc cs rorl je,pt fist sub lret insl movsb ficoml inc jnp add outsb aad inc jns in push xchg lret add insl mov mov push push mov cmc sub aad inc js in dec test leave pushl inc js jecxz dec test leave pushl inc js jecxz dec test int fiaddl add pop mov push push mov into add outsl movsl fistl inc jl inc lret pop xchg int cmp (bad) lahf lcall push sbb mov jp xor sub (bad) and push mov imul mov add jle jo inc scas and add add mov mov imul mov lahf or dec mov xor sbb call (bad) cmp xchg add rolb add add add mov lcall lods and stc insb in mov orl adc mov stos pop xchg cld push mov (bad) fisub or test iret dec mov in dec scas adc inc lods es add ss (bad) outsl fmuls das xchg clc fstl push cwtl adc mov pop roll sbb inc stos adc push gs xchg pop ret in pop sarb adc mov fwait or inc mov jge dec add and mov jle cmp stc pop mov fidivrl mov xchg std add cmp xor mov out add inc mov clc fs mov xchg std imul ret sub sub xor jne inc cmpsl sbb std jne pop lret cmp into inc mov xchg cld (bad) cmp (bad) dec (bad) mov in mov (bad) loopne lods pop mov pop rolb sbb add add sbb xor insb fistl xor dec adc inc lods push jge roll pop xchg pop outsb aam (bad) xor xlat dec ret or ss out dec movsl (bad) push mov mov outsb flds adc mov nop add inc stos sbb mov sbb sub les jp aas movsl or xor std pop mov cmpsb sbb popa ret and mov mov mov add add sbb loope add aaa cmpsb adc cmp dec test lahf add jl pop fsts xor fstps popf add (bad) outsb fist dec mov lds mov xchg add xor xchg dec mov cltd or dec mov test push leave ds mov xchg add aas mov movsb sbb mov mov xchg arpl push fisttpll rcrb es pop mov mov popf push rcll (bad) and and hlt cmpsl sbb loop mov jp dec test insl aad mov test xor inc stos sbb mov xchg lahf push (bad) sub adc add addl adc mov mov outsl out mov loope into cmp push cmp mov (bad) cmp mov mov mov test jno inc lods and add dec mov int (bad) icebp push mov add jns mov xchg add mov cmc insb loopne (bad) ds pop cltd adc pop leave lods sbb stc (bad) leave sub add into aaa sahf add repnz dec mov lcall xchg push jo mov xchg cld pusha mov popf std pop mov jae inc fdivrs adc pop (bad) sub idivb enter lret or lret inc mov lods sub (bad) xor test push mov ficom cmp dec les xchg cli popa lret xor or pop lret cmp cmpsb or cmp loop mov js inc mov xchg cli insl fildl and das xchg add jle push (bad) xor mov shrb or pop (bad) xor xchg or hlt push jbe inc lods adc dec mov cmc popa ret sub icebp pop leave xor aam movsl (bad) fimul adc dec mov in push mov shrl incl add mov lret daa mov ds in inc mov xchg repz scas adc xor inc scas and repz inc mov sub fisttp xor stos fs xor mov jle cmp mov lock mov iret dec mov mov test pop pop stc das fs sbb mov enter popf rorl cmp dec jle call hlt sub lret imul add stos fist add cmp fmuls inc jp in dec cmpl int iret xor mov dec test jle popa cwtl iret add sbb sub imul test incl cmp test mov and (bad) sti xor rorl je,pt loopne dec cmpb aaa insl mov mov push push mov int cmp fcoml dec jg jmp push (bad) ret stc das gs add roll cmp push mov int3 add outsb movsb fimull inc jnp call imulb cmp fstl dec jg jmp push (bad) ret dec add sahf setne pop les dec scas sbb adc scas sbb pop into aaa lahf or cli (bad) movl out mov push jbe inc mov negl push int3 inc mov jl insb aad test mov sbb inc clc fs push jno ficom xchg add aaa xchg stc pop leave sub pop shll out mov in push mov sub jno dec mov mov fnstcw imul fmuls sub adc sub mov fisub test sarl mov xchg icebp dec scas or aad mov dec test js xor pop mov (bad) jg push mov (bad) xor adc dec les movsl or stc jno inc mov add xor aam cmpsl movsl adc xlat inc lods es add push leave mov xchg push popf adc push (bad) cmp adc mov xchg add sub imul sbb les (bad) in dec stos add push enter mov addr16 cmp outsl int (bad) out pop enter xchg add cwtl and push mov mov ja lock les stos push jnp pop iret cmp iret cmp sbb lcall sub popf adc scas push fisubr aas test jge push mov (bad) inc lods push xchg or insl loope (bad) dec les lods and imul add dec mov xchg ljmp push movb adc dec mov jmp int3 cmp sahf sti pop shll push mov pusha lret xor stos sbb iret cmp loop stos or ret negb xor ficom xor imul xchg inc mov add das xchg repnz scas or dec or push mov shrl adc add pop lret std loopew ret or sbb adc mov icebp pop rorb and aam mov mov add pop rolb adc arpl cmp pop gs dec mov rolb daa mov popa ficom and (bad) xor loopne mov int xchg stc push lcall add add dec ret cmp std jae mov ficoml movsb adc (bad) in dec stos push jns inc mov jbe daa jle sub or sub scas es push xchg addr16 movsl adc push les stos adc pop roll mov insl fcoms xor dec mov aam nop out dec scas psrlw xchg notb adc in dec push xchg icebp pop clc mov mov mov int3 cmp imulb pop rcll aaa popf push outsb (bad) cmp xchg add rorb cmp or pop imul mov movl fldl adc dec mov fcoml lret xor xchg add stc imul fiadd adc push lret cmp dec lods vmread inc mov popf sbb cltd jmp sub pop (bad) movsl or sbb ljmp icebp pop shrl sub push les cltd pop push cmp add xor ret sub xchg sti push mov bound mov push sub xchg push enter jne inc mov mov xchg add clc push scas or popa fisttp jno cmp rolb js aaa xchg or cmp mov shrb or push mov dec add das fs adc mov push push mov int3 add inc ja jecxz dec test out and xor roll adc mov pop pop xchg (bad) cld xor aam inc jbe loope dec (bad) mov (bad) addr16 rorl je,pt loopne dec xorl lcall sbb mov leave pushl mov lods jecxz push test enter mov lods loop dec (bad) push movl (bad) xor jo sub popa mov mov stos loope dec xorb and (bad) sti xor roll cmp fcoml inc jnp out and (bad) stc das fs adc mov or int3 sub out dec test gs mov cwtl rolb cmp test adc mov imulb cwtl int cmp fimull inc jnp out push mov lret add insl mov (bad) mov (bad) addr16 rorl je,pt mov and nop (bad) cld xor aam inc js jecxz dec test (bad) std xor aam inc jle add add lret cmpl sti xor rolb cmp push mov leave incl jne loopne dec xorl cmp dec xorl fwait roll cmp push mov int3 add insb mov lods jecxz dec test (bad) sti xor roll cmp dec jg jmp push mov imulb add (bad) inc jp in push xchg cld xor rorl jae,pt fist addb mov and xchg leave pushl adc mov mov push push mov lret imul loope dec xorl xchg int3 add insb mov scas in push out xchg in pop nop (bad) gs adc mov sbb mov (bad) sti xor roll cmp cmpsl fstl dec jge call repz add outsb mov scas in dec test (bad) stc cs roll cmp add add mov sbb test (bad) gs sub push imul mov xchg icebp pop mov xchg add and add dec scas sbb jmp stos or add mov dec movsl add and cmc mov (bad) xor lahf sti push mov push mov xchg dec sahf cmc push mov test push mov jle imul sahf std pop mov mov cmp add lret daa and mov lcall jae xchg add cld pop shrb jae cmp cmc jge inc popf add hlt iretw xor outsl (bad) xor add xor inc lcall cltd pop je jo sub mov jne cs inc cltd in ds out xchg out xchg out inc fwait jo cwtl notb std push stos add add fs gs insl ret shrb jle sub add fdivs (bad) loopne mov xor cmp and mov jnp ds add test pop leave cmp inc jg jmp push mov imull cltd iret add outsl movsb fimull inc jnp add and (bad) cli das mov mov in mov imulb popa xchg int cmp fsts dec jg ljmp bound movsb fistl inc jl out push mov rorl je,pt fist jg ljmp pop xchg int3 add add or jbe loop dec xorl cwtl into add outsb test dec cmpsb add es ss ss xor fldt adc je sbb adc and fsubrs test cs pushf stc push stos (bad) in lods or sub icebp pop mov insl int (bad) ljmp sahf cld pop mov cwtl repz mov jge inc mov xchg jo sub and and mov jle inc mov add je inc movsb adc push les xchg (bad) (bad) lret inc mov mov dec stos or jnp dec test ljmp pusha mov dec xorl lcall adc mov sbb xchg enter sahf fstl jle jmp hlt sub int3 add insl mov scas in push mov lret insb mov scas jecxz dec (bad) mov and lret add imul loop dec cmpl xor rolb cmp test mov push push mov imulb xchg int3 add outsb mov mov and mov lret add movsl jno into push mov push es out movsl push arpl pop cmp dec jg ljmp outsb movsb ficoml inc jl out push mov (bad) addr16 rolb cmp dec jg ljmp popa xchg int cmp (bad) inc jp add sub lret add insb mov lods jecxz dec test add add (bad) cld xor rorl aas je fist cmpsl es into add dec cmpb add insl mov lods loop dec test (bad) data16 rorl je,pt fist xorb imull xchg int je,pt fist jg ljmp popa cwtl int cmp (bad) inc jp in push test (bad) popfw rorl jne,pt loopne dec cmpl popf rolb cmp or les jne xor pop mov insl sarb cmp call (bad) xor cs repnz mov jl cmp add es xor bound test ret arpl cmpsl fcompl std xor aam mov cmpsl fcoml inc jl call hlt sub lret push aam aas je fist jg ljmp push (bad) or ja loope dec (bad) mov and ret add sub xchg int3 add insl mov lods loop ljmp fldcw pusha xchg int3 add insl stos loop dec cmpl cld xor rorl aas jne loopne dec (bad) mov (bad) stc das gs rorb cmp dec xorl movsb ficoml inc jnp out push mov lret add insl mov mov sbb xchg lret add insb mov mov sbb ret stc das gs roll cmp add jle sub icebp add dec mov ja add lahf (bad) pop mov mov nop negl sbb mov xor aad inc jne add push push mov leave pushl inc ja jecxz dec cmpl sti xor roll cmp test adc mov (bad) gs adc mov sbb xchg std xor rorl aas je loopne dec xorb divb pushfw roll cmp cmpsl fstl inc jl out push xchg add cld xor roll cmp cmpsl fcoml dec jge out push mov enter mov scas in xchg or aaa mov popf jmp cmp mov (bad) cli das fs adc mov sbb mov stc das gs adc mov sbb daa pop xchg enter jo fistl inc jl call repz leave pushl dec jge call repz pushf rolb add cmpsl fstl dec jle jmp imulb xchg int cmp fmuls inc jns in push xchg add outsl movsl fistl inc jl out push mov leave pushl mov insb stos fist push xchg leave add insl mov mov and (bad) stc das gs roll cmp dec jg ljmp bound mov mov sbb mov enter movsl fistl inc jl jmp hlt sub lret add insb mov scas in dec test (bad) sti xor rorl aas je loopne dec xorb (bad) xor lahf aad inc js jecxz dec test enter lahf aam aas jne add sbb sub lret imul call cmc sub cs loope dec (bad) mov (bad) addr16 roll cmp dec jle ljmp push jae ficom dec jg add add (bad) imulb xchg int cmp fmuls inc jns in push test cld xor rorl aas jns mov and ret arpl movsb ficoml inc jnp out push xchg enter lahf aam aas jne jecxz dec test into add outsl movsl fistl inc jl jmp imulb xchg int cmp add pop dec cmpl cli xor jno ss gs ficoml inc jnp out push mov add add enter popf rorl jae,pt fist dec xorl aam mov aas cwtl icebp push movsb std pop mov mov and lods pop sub (bad) xor fcoml jns cmp push jge push mov mov rolb cmp cmpsb or movsl sbb cmpsl or cmp (bad) jns push mov loop sarb test xor rcrl cs stos add xchg or push mov out aad popf clc push scas push push sub pop int mov test inc mov ja cmp cmp test push into inc mov xchg dec mov das fwait movq dec mov hlt jno dec mov js inc test lahf adc loope test jnp pop (bad) cmp popf add sub add ret dec mov call adc cli fcompl cmp adc cmc data16 add add mov out (bad) int cmpsb sbb (bad) cmp adc hlt arpl aaa stos sbb dec mov cmc pop xlat xor data16 movl ficom or and or add or aad xchg in push int3 inc mov test jo push mov movsb adc inc mov jle mov loopne mov fimul cmp lret xor lret or pusha sarl clc add push mov sbb and sub shrb hlt pop enter and pop jo dec mov mov pop fistl inc mov add pop sarb test mov adc sbb movsb pop jns jnp dec mov jbe sub cmpsb pop test pop leave das xchg sti (bad) leave cmp and leave xor add push roll or stc fs cmp loop fstl nop clc pop ret add add mov roll or lret sbb xor aam lret add inc mov xchg imul rorl ds sbb arpl inc add test jb pop ret or inc mov fmull and mov mov std pop ret sub xchg repz scas or enter test push (bad) (bad) inc cmpsl or mov xor mov mov cli arpl push mov out pop lds mov (bad) xor xchg negl ss adc push leave cmp in pop int shrb adc pop xlat push lds and test popl jb dec mov test mov push ret adc push dec mov jle pop int3 inc mov mov pop scas adc daa mov inc movsl add cs cld pop (bad) xor cmpsl emms jecxz mov mov je arpl dec (bad) xor jb inc movsb or dec lods adc (bad) cmc arpl mov repz add adc and jb xor negb or adc push outsb iret xor push fadds add ret es cmp clc pop mov mov ficoml sub repnz sarb add mov outsb in leave gs call negb cmpsl adc push clc icebp addr16 xchg test out pop ret jae dec mov test pop enter (bad) in push mov pop outsb jmp add inc (bad) mov push xor mov flds or push sub (bad) inc mov mov rolb sbb sub push xchg pusha lds xchg sti popa lds (bad) mulb sub xor in xchg jecxz push mov arpl sbb xor and scas pop xchg or inc scas adc inc mov fcoml or push jo es stos or cmp add cmpsb pop mov arpl sub adc scas and hlt pop movl jp dec test pop shrl adc push (bad) cmp xor outsb loopne shlb in dec mov mov push sub pusha iret sub sti push mov imul mov pushf hlt pop mov inc jbe loop dec cmpl std xor aam inc jbe loop dec cmpl pushl inc hlt je sub add pusha xchg lret add outsb mov mov sbb xchg dec xorb stc das fs adc jg jmp push mov pushl inc ja add and ret arpl cmpsl fstl add mov leave (bad) xor lahf aad inc jbe loope dec (bad) mov int cmp (bad) inc jnp out push xchg lret imul jecxz dec xchg and xor test add pop in adc add test cmpsl sub jnp push (bad) xor sbb lcall xchg or push mov xlat inc test jnp dec lods adc push mov mov fdivs push lds fidivr pushf add sbb dec cmpsl or xor outsb call (bad) jmp iret xor pop in push mov lret xor add dec mov js dec mov mov in mov add add movsl adc mov sarl pop and push mov outsl iret sub mov mov add dec mov mov dec cmpsl emms ficoml fwait sti pop mov fimul es icebp pop mov call adc fmuls adc flds xchg add faddl adc rolb mov push mov mov push xor mov nop sti popa (bad) daa xchg or ss (bad) inc test loop enter mov lods sbb movsb (bad) in pop mov jnp inc mov sarl cmpsb adc push mov int3 cmp ficoml dec mov add and push push xor or mov xor add add cs push mov mov into cmp jle push mov jp dec scas adc ljmp jns jp jno pop iret cmp imul shll fbstp (bad) out push (bad) ss xchg daa test roll mov xchg movsb adc dec idivb lret ja ss clc pop ret divb ret add inc outsl xor sarl daa add mov cltd or push shrl add sub mov popa sarl mov mov pop xlat lods adc dec mov jl dec ret xor and mov ljmp pop divb outsb mov sub xchg int inc jns std cmp in es popf fadds ret cli ss loop pop cwtl fsts jbe jmp adc ret (bad) cmp mov xor ljmp sbbb dec test notl ss outsl mov cmp nop lods leave out pop and pop jp mov in or inc pusha jl mov hlt adc dec push clc adc movsb rcr sbb outsb mov aaa push jo stos (bad) in sbb add add scas lret call jnp mov out or inc popa jle mov icebp or test xor xchg push insb mov ss jo test cmp into ljmp mov in or inc pusha jge mov out or inc bound mov dec sbbl mov xor outsb mov aaa push jno stos (bad) in pop cmp jne scas int3 call js mov in or inc pop jnp mov out or inc gs lahf mov in and pop js mov jmp and add pushf mov dec gs mov add insl mov aaa push jno scas int3 jmp jns mov in or inc pop jl mov icebp push sub sbbb dec andl adc dec imul popa jle mov dec insb mov aaa push jo test cmp (bad) stos enter cmp jne scas int3 jmp add inc pop jnp mov in or loope push (bad) scas loop inc jae rolb xor mov test stos fisttpll inc jg add cmp pop js mov ljmp mov std push andl push je lods lret pop cmp jne scas int push and jge mov lock inc bound mov dec gs sahf mov dec data16 xor mov push test test xchg ret repnz dec jg in add jne rolb aaa jle call inc jae scas lret call ja mov ljmp mov ljmp mov ljmp mov in or mov cvttsd2si sbbl lahf mov dec test notb das dec push notl dec push movsl ret sbb insl lea cmp (bad) stos enter cmp jne scas int3 das popa jg mov dec sbbl add clc adc mov xor outsl xchg scas lret call jbe scas int3 call ja mov jmp jns mov jmp and pop jp mov in or inc pop jnp mov out or inc sbbb dec sbbl mov xor mov xor mov push outsb mov cmp (bad) lods enter cmp nop lods leave in and jbe scas int3 jmp ja add xchg mov jmp jns mov ljmp mov dec push notl xor xchg push insb mov xor outsb mov ss outsl mov loope dec test add jns jmp pop aas jp divb outsb mov mov sub (bad) adc repz and xchg adc add sbb int inc adc inc cmpl xchg mov jmp add add and mov in or inc pusha jl mov out adc mov mov pusha int3 cmp ret insb repnz aam mov fimul lcall jnp sub and test flds and xchg out dec cmpsl cli cs jmp sub add (bad) xor (bad) gs test out je push roll sbb xor mov lea out popa sarb movsb (bad) pop les sub (bad) lret push mov (bad) mov rorl daa fwait or pop ret xor movl loopne mov mov push mov fldenv xor push (bad) das movsl adc sub add iret aaa mov ret or inc scas sbb lods pop mov jo popa int scas sbb mov loop push xchg add insl std pop adc xchg dec stos or (bad) inc add aas test mov loope ret es add leave xor cmp fmull sub sbb push mov sti arpl je data16 cmp les jbe push lods or pop jb cmp mov (bad) aas movsl adc movsl adc push lds push (bad) aaa cwtl cld xlat push mov fimull adc sub push add sub mov pushf pop jns push lds or xor jecxz mov jmp add scas and mov fiaddl and mov mov pop shrb call jl mov lcall push jae lods lret and pop js mov in or inc jb in push mov imull xchg lret add jp out push mov std xor fcoml dec add inc jl sub mov es rorl outsl lea loope push add mov inc ja out sub lret add jle in es xchg rorl inc cmpb or mov sub in pop xchg int3 or in push (bad) rorb das gs rorl inc jg repnz xlat push push xchg loope pop xchg xlat adc mov into jmp and pop jnp mov add adc mov dec push loopne sbb pop jne scas lret out and mov cmp pushl fs shr push test add add adc or adc mov push pop cwtl int3 cld das pushfw aad cmp inc jne fimull inc jne xlat push arpl lcall or cmp fstl sub lcall and rorl jnp jmp aaa imul push dec jns loope push xchg scas out dec xorb ficoml inc jne fmuls adc jbe in push fwait mov dec push mov xor xchg xor xchg xor mov aaa push jo test cmp (bad) lods enter cmp nop lods lret add mov out or inc arpl add cmp xorl push add mov cmp (bad) stos enter cmp nop lods leave out and pop ja mov out or inc popa jge mov out or inc popa jge mov out or inc add lcall popa jle mov lock inc bound mov icebp or lahf mov dec push notb das dec imul xchg dec insl mov xor outsb mov cmp nop lods leave out and int push and pop jp mov in or (bad) cmp mov and lock push jae lods leave jmp and pop jnp mov out or inc popa jle mov icebp or add add das dec push stc sbb cmp fcoms dec jl jmp pop mov clc sub sub mov cmp mov cmp (bad) lods enter cmp xchg scas lret and pop jne mov out dec xchg mov cmpl mov mov aad inc jge jmp pop cwtl (bad) or mov es cltd iret add je repnz aam dec xchg push xor mov aaa push jo add lea cmp (bad) lods leave in pop push mov ficompl push xchg jecxz push mov std cmp fistp dec test (bad) cmova mov sbb (bad) (bad) push jle mov dec sbbw push outsl mov cmp mov cmp xchg lods lret and int push and jp add dec test sti pop xor outsb mov lods leave in pop cmp jne scas lret add call js mov jmp and pop jp mov lock mov dec imul lea cmp xchg scas int3 call ja mov ljmp cmp sbb push outsl mov sub (bad) adc xor into add insb mov test test xor xchg push insl mov xor lret and jbe scas int3 jmp jp mov shr or inc pop jnp mov out or inc popa jle mov icebp or sahf mov dec push mov xor mov lret call js mov jmp and pop jp mov in or (bad) cmp or inc jnp in push sub gs lahf mov dec imul std sbb push jo test cmp (bad) stos enter cmp jbe scas int3 jmp js mov dec andl dec imul add add dec insb mov xor imulb pop mov daa pop xchg xlat pop aaa insb iret pop inc js in and shlb cmp mov push mov jnp inc cmpsb push imul mov mov fisttpl sub stos adc push shrb or pop leave ss push mov je push enter xchg outsl loopne aam mov jecxz iret ds push xchg push jl push imul mov xchg add dec ret sub add inc cmpsl or (bad) cmp pop and rolb push xor out int mov rolb push xor xor jnp add pop lret aas mov mov ja pop sarb push mov insb fmull movsl adc stos sbb xor in pusha rclb ss out ret cmp lds xchg hlt push mov ja inc test mov pop mov mov lods adc dec mov mov outsb fiadd add add fwait or shlb ret xor enter fwait adc add fimull mov and roll xor popa (bad) sub pop ret xor aad mov cmpsb pop jo inc mov test dec mov mov outsb fimul sub and mov in pop iret inc scas and mov clc ljmp dec mov into aas scas sbb imul inc lods sbb fs mov loope mov nop cli jae push (bad) xor lret cmp popf cmp pop mov fiaddl cmp loop mov (bad) dec mov imulb push les mov loopne rolb sub mov jnp dec test mov test fs cmp sbb imul sub adc imul cmc pop ret or add add inc cmpsb adc push add add mov xchg add ss xchg or pop iret inc scas and insb cmc imul pushl int3 inc mov popl ja push mov xchg sbb imul mov ljmp adc std jle outsb loop mov add inc mov cld outsl loope lret xor loop (bad) cmp and fstl and push jge jo pop int mov pushf adc add add popa fisttpl movsl adc es (bad) gs xor xchg std gs lahf add daa mov imul mov mov fs xor xor push jl pop int cmpsb adc enter popl nop xchg insb loop mov shll sti push (bad) aas stos sbb ja pop lds lods add sarw stos push jae fildl dec mov jl cmp leavew and dec scas adc mov mov add int mov dec test push sub cltd cli pop shll out in iret inc movsl sbb dec mov in mov stos or lret jmp mov jnp add add mov and dec scas adc xchg clc pop mov lods or in (bad) shlb fild jmp mov jb ss or dec mov (bad) out push mov jnp dec mov and out dec mov rolb cmp rep or add les js xor pop mov ja pop lds test inc lahf cli push mov outsl into sub mov imul and cmc dec test bound jnp das mov inc sahf notl popa mov (bad) (bad) jmp loopne fwait notb or jle xor pop mov sbb mov inc popf cmc dec cmpsb (bad) pop mov imul jle cmp pop mov add xor push add add xor dec stos add mov xor add adc fdivs mov cmp popa lret es xchg sbb mull cmp mov lret cmp sarb stos adc inc lods and shrl add fadds and (bad) jl inc mov lods sub jmp inc mov and shrl push jae inc lods sbb dec mov jecxz lahf push fdivrs push xchg icebp sahf add add pop mov test inc pushf lcall adc and cmp notl fs mov cmp or jns xor cmp pop les inc stos vmread inc mov and mov enter pusha adc notl adc xor addr16 sub push mov rcrw iret daa sbb inc movsb push arpl xchg pop jae dec mov test push shrb clc pop (bad) sub pop outsl fnstcw mov add cmpsl or dec stos push ja sub push mov jae cmp pop jge push mov fidivr inc mov fwait add ds mov in mov faddl mov (bad) int3 movsb push mov pop mov iret mov lds mov dec movsb push push mov mov sarb movsl push jg insl loopne mov fadds and mov mov pop add add xor xchg add call stc push (bad) and cs pop mov xchg or cmc popa into xor sbb test cmp push scas push pop mov aad xchg jmp push mov rcrb lret and jmp ljmp mov in push mov and mov jns cmp push imul fadds adc xor and xchg dec mov js add pop int3 cs jmp cwtl negl and je dec mov int cwtl std popa enter outsl sarl push jle push std outsl loop scas sbb add dec mov leave cs cmc pop rolb and dec mov loopne mov rolb aas test mov jb push mov clc arpl ss sbb call push insl (bad) push (bad) jns inc movsb add lret cmp mov flds add dec mov mov ficom xor mov jae pop ret out push mov loope sarb adc jne dec mov (bad) jne dec lds and or pop int mov out sarl test mov fmuls xor fist cs stc arpl dec mov (bad) xor je xor insb (bad) and fnstenv nop in dec test jl cmp add in (bad) xor add aam cmpsl adc add pop les pushf or lods adc add sbb lret dec lods punpckhdq sub pop ret fidivrl popf std pop mov movsl add or inc pusha jge adc sar pop mov fisttpll aas jae fstl inc jo roll ss jmp pop mov repz (bad) push xor mov lods loopne aas outsb mov lahf jmp push xchg (bad) clc sub (bad) hlt sub (bad) push mov add add and int3 pop cmp dec xorl mov push pop xchg stc inc mov (bad) sti aaa outsl mov mov ficom dec mov push cmp pop fwait (bad) adc sar js jmp push cmp jbe scas int3 jmp pusha jge mov out or inc bound mov dec insb mov dec push notl xor outsb mov ss outsl mov ss outsb mov add xor enter cmp jmp jo stos mov inc arpl repz loop dec subb in and iret or lods jmp bound mov xlat adc sar js in pop xchg lret je in cmp divb imul push inc jg divb push fwait shr or inc popa jle cmp js mov ljmp mov jmp and mov in or mov add out or inc gs lahf mov dec data16 lahf mov dec push notl dec imul xchg sbb push jo test cmp jne scas lret jmp and pop jns mov jmp and pop jns mov add or inc bound mov lock pushf mov (bad) or jno mov pop push mov mov sbb mov into add jae icebp sub out sub and (bad) cmovle add dec (bad) repnz mov mov push dec jl jecxz dec jl divb (bad) pop dec jns fisub cmp pusha xchg into or mov jmp jmp repnz nop xabort pusha xchg (bad) ja add jno xlat adc cmpl push mov mov mov mov pop dec jge loop dec xorb fisttpll jno roll gs vmovaps mulb push mov add (bad) hlt and dec xorl jb rolb xor leave cli sub mov scas fiadd adc cmpsb fmuls cmp roll aaa push int xor mov enter pushf into push cmp iret (bad) cs lea mov xchg ret dec ja ficom inc ja loope dec jp fisttpll adc mov adc jb fstl inc jnp in inc jne fisttpll inc jb loopne dec jle out push xchg (bad) add stos jecxz push mov pushl pop pop repz mov cld arpl lahf rorb push dec jnp lock xchg int cmp movsb (bad) cmovp sub fcoms dec jg cli xor adc jno ficomp push mov cmc xor sbb add je loopne inc js in and pop mov jae xlat cmp or xor sub mov (bad) imulb xor pushf (bad) or insl pushf iret add or jo cmpsl ficom inc ja fisttpl inc js fimull cmp add push roll add inc jae into std sub mov mov mov mov fsts dec cmpl das arpl xchg enter pushf int xor iret or insl mov lret jle and mov cs rolb ja,pt in sub adc mov push pop fwait rorb dec cmpb adc mov add sub xlat or xor ficomp dec xchg (bad) adc movl imul leave add je ljmp xchg (bad) aaa outsl stos out pop lcall or hlt sub cmpsb loop popa mov int dec cmpl adc xchg add test negb ss outsl mov aaa push jo stos (bad) jecxz sbb push jb (bad) adc movsb rcr sbb push jo mov aaa push jno stos (bad) jmp js mov ljmp mov dec jl hlt es xchg (bad) cld xor mov (bad) sti xor pop xchg lret xchg clc sub ljmp add mov (bad) std ss aad inc (bad) mov (bad) adc mov fcoml push mov std cmp mov das imul inc jle lock (bad) and divl push mov cli xor add add les inc jge out sub or jl repnz jo divb ja loope dec cwtl (bad) in pop cmp int repnz dec test notl xor insl mov cmp xchg scas lret and jne scas lret call adc icebp xor out es fwait aad push (bad) leave or js ljmp xchg roll inc jl repz lret ret out ds divb insb test sbb (bad) divl insb mov add lret jne jmp ljmp addr16 addr16 lret push mov jb in push mov cli cmp in and rorb dec (bad) mov das outsl test mov push jo stos (bad) jecxz sbb push jb lods leave in pop cmp jne lods lret pop cmp jne scas lret and jne scas int3 call js mov in or inc pusha jl popf mov dec sbbl cmp xchg mov ljmp and pop jns mov in or inc pusha jl mov cmc adc dec andw dec test notb das dec push notl xor mov xor xchg dec outsb mov xor ret (bad) sbb cmp (bad) stos enter cmp nop lods leave out push cmp xchg lods leave out pop cmp jne or test loope sbb push jae xchg mov jmp and pop jp mov in or inc pusha jge mov lock inc bound jle mov inc sbbl xor fcoml mov cld cmp in sub fcoml push mov std cmp in sub push xchg rclb dec mov pop aas jns out sub pop cwtl aad dec cmpl aam or popf mov dec push clc adc dec imul cmp xchg scas lret and pop jns mov in or mov out or inc popa jle mov icebp or popf mov dec ficom sbb xor into das (bad) in dec test add movsl adc inc mov jle dec mov test fsubl aas sahf or dec mov xchg add loop mov and movsl add cmp (bad) dec pop divb pop les cmpsl or sub cmp mov iret cmp mov mov mov pop (bad) xor out add push ret adc sahf adc (bad) test stos daa xchg add inc stos adc push mov aad cmpsl adc (bad) xor push (bad) loop mov inc sahf cld rol (bad) out cltd pop mov cmp xchg xchg push mov pop (bad) aaa test jns dec mov xchg ljmp inc stos adc mov xchg or mov das pushf adc xor push mov fistl jne aas mov pushf cld add push jns xor add mov dec lods push jp inc sti xchg pop mov mov cmc pop mov enter movsl pop add cmp push xchg cs stc pusha iret xor pop enter mov fimul pop jle pop push aad cltd cld pop pop in mov fs or xor ja cmp jp cmp (bad) pop mov mov (bad) xor and push dec stos or sub out dec scas adc xor add xor sbb add (bad) daa mov dec test lcall mov xchg inc test imul lods or lret sub adc xor jae xor negb and into xor out or cs lock scas push outsb roll aas lahf (bad) pop mov pushf jmp and pusha shll ljmp xchg dec stos or sub in dec add mov add add daa mov push mov jae xor jae xor pop xchg dec test cwtl sti pop mov das fwait add and dec stos push jo xor je xor jnp cmp push mov dec lods push jne cmp jg inc mov and movsb add fistpll cmpsb add loope mov jg aas lahf (bad) data16 daa xchg dec stos or negb push std mov sub into xor add jne aaa cwtl clc pop mov popf cld pop mov mov sbb lahf jmp and (bad) xor jnp cmp aam fwait jmp and dec scas pop (bad) in pop ret adc lods and lahf sub scas sbb jmp (bad) xor mov in pop in sub lret imul lock xor rolb cmp dec jle ljmp add xchg lret insb mov lods loop dec (bad) mov and enter sahf rorl aas ja loop dec test (bad) cld mov pop mov (bad) dec mov imull cmp das jb loope dec test aad inc jbe loope dec (bad) mov (bad) stc cs adc mov pop push mov imulb cwtl int cmp ficoml inc xorb clc sub cmp cmpsl fstl dec jle ljmp add imull xchg int cmp (bad) inc jp in push mov lret jb fstl dec jle jmp imull cmp ficom dec jg in and ret stc das sahf xor pop cmpsl adc sub pop fdivl out pop sarb cltd hlt cltd hlt sub cltd iret add adc mov and ret clc arpl jns in push xchg incl xor out stos pop popa idivl cmpsl fstl dec jle jmp add cmc sub mov dec lahf sti pop mov mov jp dec mov dec xorb imull cwtl int cmp fistl inc jnp out push pop xchg stc push mov push shrl mulb mov lret sbb repz (bad) mov gs add pop je push int3 xor scas sbb push les cltd add sub xor ds sub mov mov (bad) out ret add sahf add add add inc mov xchg pop jbe dec mov in les mov ret xor movsb or dec mov aam mov sahf add fiaddl sbb pushf or repz aas scas adc inc mov imulb dec mov xchg or dec mov mov gs xor inc lods adc pop iret cmp dec mov jl inc scas adc pop sarb dec mov in ret (bad) push add sarb test jbe dec test outsl fldl pop mov pop ret xor sbb xchg add jecxz mov test pop les dec mov ret inc mov jno and mov cmp pop xchg enter lahf aad inc xorb imull cmp fistl inc jnp out push mov lret add insl mov mov sbb mov int inc ja jecxz push mov int cmp (bad) inc jp add call cld push stos (bad) push stos add push pop mov gs and push stos push rcrl (bad) and and and shlb sub addr16 icebp push scas or es jmp jecxz enter outsl loope adc nop negl sub stos pop sub add aad cmpsl sbb mov fiadd mov leave cmp push enter pop mov sub cltd into add add xor je,pt ficom jg jmp push (bad) ret arpl orl add outsb mov scas in push xchg (bad) cld xor rorl jae,pt ficom xorl sahf aam inc jnp out push xchg cld xor rorb cmp dec jle jmp or pop mov stc das gs in and (bad) gs roll cmp cmpsb fstl pop call add into add jne loop adc push mov mov sbb mov enter test adc and ret arpl or xor test dec scas adc aas pushf sbb xchg imul int3 xor gs push dec jmp out dec movsl (bad) popa mov cmpsb add aas jg cmp insb fmull sub sub sbb add pop lret test movsb add xor adc lea fs xor rolb sub popf (bad) pop rcrb or cmp pop push mov clc sub cmp test adc mov and ret stc das gs or popa (bad) sub pop shll call lahf add inc mov in mov adc call jmp daa test dec mov xchg popa int mov jp push leave cmp jmp int3 jnp fcoms daa mov (bad) lret or add add test push les stc js add pop int lcall mov lods push lahf adc test dec stos or sub lods push jp (bad) aad mov fwait je mov pop mov ret loop mov jae inc movsb xor sahf add sub call call ret pop jnp dec test (bad) notl or and mov popa add inc mov sub ljmp add mov ds fiadd sbb roll mov push sub clc push mov test dec ret dec mov cmp sub in mov int mov and sub adc out shll aam xor jge (bad) fcompl inc mov mov mov dec mov js cmp lret mov pop sub and int mov dec stos adc xchg sbb add ret das xchg repz int3 aas mov (bad) cld (bad) into inc mov sub lret movsl pop add hlt cwtl (bad) test mov aad cmpsl vmwrite pop and push shrb in ret or inc ret jp push es and aas cmpsl push jne xor insl fiadd and mov xor imul pop lds cltd sti pop add aaa cwtl clc push mov jne xchg adc cmc push mov sarb test enter insl loope pop lret movsl xor push ret xor (bad) lock iret inc mov add pop aad pop mov cmpsl outsl add fwait push jns data16 sub (bad) sub outsl into sub adc xor lahf adc inc mov xchg outsb fimull sub mov fwait push outsl fldl sub xchg add inc lods sbb into mov add xor hlt push mov insl lret es cmp add cltd cli arpl and mov retw and jo sub or call add adc xchg in inc test sbb mov fimull xchg repz les push mov or dec cli jbe dec (bad) cmp xchg or lret inc (bad) xor sbb dec mov in iret inc mov pushf pop jle inc into cmp aaa fwait jmp sub mov mov dec rclb add add mov stos adc in rolb adc inc mov shrb fildl jbe aaa lcall in fldl cs adc mov add pop les dec mov ret xchg sub mov push ret or push mov cli je xchg pop mov movsb or call mov ficoml ret pop xchg adc lret aaa cmpsl or add icebp push lret add cmpsb pop mov js push shlb cmpsl or repnz fcoml das cmpsl sbb loop lds pushf jmp and ljmp or adc mov (bad) ret arpl movsl in push xchg (bad) xor sahf aam inc ja in dec test (bad) data16 rorb je,pt loopne dec cmpl fcoms push xchg dec into pop repnz add jg ljmp popa xchg lret add imul loope dec xorl xchg int inc js jecxz and ret gs sbb mov enter mov stos loope dec (bad) mov (bad) data16 inc jp out push mov int cmp push add gs test jle mov js mov fildl push mov mov pop (bad) or xchg add add xchg inc mov (bad) cli pop mov mov mov js dec or add xor mov fidivrl sub sti push mov xchg or mov fs mov jnp imul push jno dec mov loope ret cmp test jno push xchg mulb push (bad) sub std push mov insl leave es dec mov nop or cmp test dec mov mov mov cmp add insl fadds sbb stos or aas test (bad) cmp mov jno inc test jno dec into inc mov xchg hlt pop shrb adc (bad) out mov in dec mov jle add dec scas pop xchg or dec lret push xchg or pop and stos adc inc scas sbb (bad) cmp jge insb fisttpll xor sbb int mov xchg push test pop (bad) dec mov out mov ja inc or push aad sti push xor jno movsl push xchg stos and or and pop mov and xchg dec (bad) (bad) shlb loopne movsb (bad) popa les je inc cmpsl or and repz les test arpl sub sbb test lret in dec lods or jmp aam fwait (bad) jae inc mov mov dec mov xchg adc dec push je dec cmpsl or int3 sub rolb mov pop ret or mov xchg stc pop mov ret and shlb push sub out dec movsl add lds add fidivrl lods and add jecxz iret xor fadds cld pop mov test push mov jge dec mov sarl movsl (bad) fmuls xor or dec mov nop stc sarw lods push xchg adc or mov repnz push jb and add add pusha ret daa mov inc test rcrb out mov pushf (bad) les test dec lods adc dec cmc jle imul xor stos sbb (bad) push les cwtl push fsts ret or popa aad scas sbb xchg cli pop lds ret adc push mov ret sub imul lods sub xor (bad) ljmp or cmp add add lods and dec rcrb add insl in mov jmp and (bad) cmp and les lods push cmp cmp inc mov mov aam lods and (bad) rep loope mov xor sbb jp push les mov (bad) ds and mov mov xchg add jbe fcoms inc mov idivb push push int3 cmp add xlat cmp loop mov imull inc mov test (bad) xor pop int movsb sbb pop data16 sub jp inc lods pop xchg cmc pop ret es push shrb push js arpl pop fist dec int3 inc mov mov outsl sarb cmpsl push lea jo dec mov lahf pop test popa lret cmp test jl push mov mov outsl fmull push mov ja cs lcall push fcoml sub jp dec mov jge dec mov lock xor popf or lock aad mov jne dec mov out pop (bad) sub lahf or dec mov cld data16 pushf jmp inc mov xchg or out pop (bad) xor sahf or hlt pop int3 cmp lahf adc mull stos and jge xor leave xor divb jae inc cmpsb or pop lret sbb cmpsl adc pusha rorb add add pop mov (bad) sbb pop lret aaa sahf add imulb aaa fwait sbb xchg hlt pop sarb mov mov sub or pop leave aaa movsl sbb jmp mov cwtl call xorl fwait roll cmp cmpsl fstl mov imulb cwtl int cmp ficoml inc jnp out push xchg inc mov adc mov pop out push mov jns inc scas sbb das mov xor fildl cs sub sub xor aas xchg jmp and inc cwtl in inc mov push dec xorl movsl fistl inc jnp out push xchg (bad) xor aam aas je loopne dec xorb stc das gs cmove ljmp popa xchg int3 add insb mov scas jecxz push mov lret imul jecxz dec cmpl sti xor or add js in push mov int cmp fistl inc jl ljmp add lods loope (bad) outsl mov enter test adc mov and (bad) imull xchg int3 add insb mov scas jecxz dec test enter lahf rorl aas ja loop dec mov lret add inc ja loop dec cmpl std xor (bad) or mov sbb mov enter sahf rorl inc jp add sbb mov leave (bad) xor rorl je,pt fist jg jmp cmc sub int3 add insb mov scas in dec mov cmc sub int3 add insl mov mov sbb mov cmc sub jno fistl inc jle call imulb fs into add outsl movsb loopne dec test cld xor rolb cmp cmpsb fcoml inc jl out push mov sub jae das add mov inc stos sbb lods and lock rolb js cmp mov pop mov scas or cs add inc jo jb dec mov pushf or inc test fs mov jge push rcrb leave xor arpl and xor pusha shlb xlat inc mov ret xor (bad) xor lds cmpsb sbb mov insb add (bad) popa lea add cmp mov add std jo mov cmp add ds pop mov pop leave xor inc mov (bad) xor mov mov out mov mov push jnp pop (bad) aaa movsb pop mov arpl dec shrb or cld push addl dec ret cs add dec mov mov push mov (bad) xor mov xchg pusha (bad) sbb mov xchg add out roll and add add imul test aad mov (bad) sti popa rorl push mov imul faddl push cpuid (bad) into xor push mov jne (bad) fnstcw or lret cmp loopne into cmp jp pop leave sub les inc stos adc dec lods push test addr16 inc cmpsl or inc scas es add vmread pop lds fwait emms call fadds daa xchg pop ja pop (bad) ss or pusha into inc mov sub add sbb mov xchg cli popa lret pop test dec add push jno dec mov (bad) notb popf push jge dec stos or sbb xor push lods pop (bad) xlat inc mov jnp and (bad) sbb cli xor rolb cmp fcoml inc jl jmp hlt sub lret push aam dec xorl xchg int cmp (bad) inc jns in push test add add adc mov push push mov add add cld xor gs js in dec test (bad) fs roll cmp fistl inc jl out push xchg ret cli xor rolb mov enter dec mov jg pop lret or and jno cs sti pop mov iret inc mov (bad) negl cmp vmread push (bad) sub mov cmpsb push outsb faddl add sub fiaddl push jg dec mov into das popf pop outsb (bad) movsb adc add add sub cld fs lods or cmc pop mov jbe pop jae sbb sbb leave pop jb sbb sbb leave sbb iret and (bad) sub cmp dec lods push pop mov gs jns and aam test das xchg cmp cmp test cmp cld data16 add loopne mov xor call cmc xor push mov imulb xchg int3 add insb add mov add and ret stc das addr16 fstl dec jg ljmp popa xchg int cmp ficoml inc jnp out push mov int3 add insb mov mov sbb mov rolb adc mov push push mov mov sbb out jge add adc mov push push mov cmc sub aam aas jne fist and (bad) sti xor lods cmp inc cmpsl add adc lret xor jae cmp add (bad) inc mov popf add movsb pop stos out push mov imull cmp test mov (bad) cli xor outsb movsb ficoml inc jl out push mov cmc xor jno ficom jg jmp pop nop (bad) addr16 rolb jae,pt ficom jg jmp push mov imull add lods jecxz dec test int cwtl push mov xchg mov fsts adc (bad) xor jae daa mov inc sarl sarl xchg cli pop shll push mov lahf (bad) pusha mov mov mov mov jle dec test xchg clc fs sub or cs cmc push scas or daa xchg add push mov fcomps push call push cmp ret jmp sarb pushf jmp and cmp cmpsl sbb roll sbb icebp pop iret cmp stc arpl xor cmpsb or repnz scas or inc mov dec or inc mov sub ret add pop lds sub mov mov fs cmpsl adc shll mov popa lret add sbb mov insl xlat inc mov mov pop enter jne dec (bad) mov scas sbb inc mov (bad) lock les sub sarb adc sbb or (bad) xor stc iretw cmp mov xchg pop lret aaa mov mov add fs adc xchg pop int sbb pushf add ds pop shlb xor push xchg clc pop mov mov lods adc xor pop and adc jp dec mov xchg push shrl cli pusha leave sub notl jp cmp (bad) push mov jge inc lods sbb in pop (bad) xor push mov (bad) repnz icebp add out rolb pcmpeqw dec mov sub add aas scas and clc imul repnz shrl stc addr16 inc mov xchg cld addr16 xor nop lock mov jge inc scas pop mov dec mov jp dec mov call mull cmp int3 cmp stc insb fisttp popf push je push ret repz ret ljmp mov sarb cltd or dec mov mov pusha mov cmpsb add and adc or cmp xchg add lods or add add jns cs in push scas adc fdivrl lahf sti push mov lcall xchg inc lods or (bad) das nop add dec mov call sbb lds xchg add loope leave cmp sbb les xchg std pusha lret ss (bad) pusha rorl sub mov int scas sbb test imul lahf pop imul mov movsl or xor and stos (bad) in mov test push mov jg add inc stos adc hlt (bad) lret jmp (bad) xor sarb adc ss lock mov pushf cmc dec scas or sub in add push xchg leave (bad) xor inc js jecxz dec test roll cmp dec jle jmp cmc sub lret add insl mov mov sbb xchg lret insb mov mov push add (bad) xor aam inc jne loope dec cmpl cld xor add add or je loopne dec xorl cltd iret add sbb mov (bad) sti xor rorb je,pt fist aad nop out dec stos or sub in push mov imull lahf aad inc js jecxz push or push mov sub pop shll mov mov or sbb mov roll cmp cmpsl fstl dec jle in and (bad) imulb cwtl into add insl mov mov add add sbb xchg fwait roll cmp dec xorb (bad) xor (bad) or ja loop dec cmpl cld xor aad inc jns jecxz push test (bad) sti xor rorl inc jne in push xchg pushf roll cmp push xchg nop lock cltd negb sbb (bad) xor add cmp mov popf push jnp pop lret lock pop xchg lret outsb mov mov sbb add add pushl xchg cmp sbb xchg rorb cmp dec xorb cmc sub xchg int cmp fimull inc jge jmp hlt sub rolb cmp dec cmpl std xor lahf (bad) or scas in dec test add insl mov mov push push add mov mov and ret clc sub cmp fcoml dec cmpb (bad) xor add add mov and (bad) outsl movsb ficoml inc jl call add insl mov mov add nop (bad) addr16 aad inc jbe loop push xchg into add jbe in push mov rorl sub rolb sbb cli das data16 rorl inc jp ljmp gs (bad) or mov es xchg leave add insb movsl fistl mov int inc js ljmp outsl cmpsl ficom mov and lret imul jmp push nop lret insl movsl fistpl dec test lret add outsb mov mov sbb sub lret add insl movsb fstl dec cmpl or scas in push mov or jae in push mov int3 add jo ficom jg jmp push (bad) ret pushfw rorl aas jne loopne dec xorb stc xor fstl dec in push xchg add jb fist dec xorl add and (bad) addr16 rorb jae,pt fist xorb clc sub dec jle jmp hlt sub lret add insb mov lods loop dec test (bad) gs aas cltd add sub xchg (bad) push sbb cwtl hlt pop lret add aaa mov xchg repz mov and mov flds and add inc mov int3 daa (bad) es push mov and mov jae xor add and sbb mov (bad) sub add xchg add pop sbb nop ljmp dec mov mov scas out push test (bad) std xor rorb cmp inc jge out push xchg leave (bad) xor mov stos loope dec xorl push aad inc jbe loope dec test (bad) stc das fs int3 and xchg enter mov lods loope dec (bad) mov add add (bad) xor lahf aam inc jne loopne rorb je,pt loopne dec xorl stos loopne dec cmpb sti xor (bad) or sbb in mov ja aaa xchg cmc push scas or les jle cmp sbb pop lret jecxz nop jmp xchg out dec mov jne cmp lcall pop mov mov je xor adc sub ss or aas lods es insl fadds dec mov movsb sbb dec stos or call add rolb cmp test mov lret insb mov scas in push test lcall adc mov sbb xchg leave add imul jmp push mov imulb xchg int cmp fcoml dec jg jmp pop (bad) ret stc das gs roll cmp cmpsl fcoml dec jg in and mov sti aaa insl mov scas in dec test int3 add aaa insb mov scas in dec test enter sahf rorl aas ja loop dec xchg cli xor rolb aas jbe jecxz dec test leave add insl movsb (bad) inc jnp out push mov rorl inc ja in push mov fstl add insb mov mov push push mov cli das gs rorl inc jbe loope push mov cld ss xor dec les icebp jb inc mov test sub divb call pushl mov fstl dec jle jmp cmc sub int3 add insl mov mov std xor aad inc jbe jecxz dec test int3 add insl movsb (bad) inc jp out push xchg lret push ficom jle jmp hlt sub enter mov lods loope dec xorl xchg int3 add outsl movsb fsts inc jp in push mov stc das data16 rorl je,pt fist dec xorl add add and ret arpl cmpsl fisub mov sbb xchg ficom and into add push dec xorl lahf aad inc js jecxz dec xchg add insb mov mov and ret stc imul mov imull inc jns ljmp push js loop dec test pushf rolb cmp test mov into add jo fistl add add mov and (bad) cld xor (bad) jbe insb fist sbb inc mov xchg dec mov cwtl std jp dec mov xchg out dec stos add loop enter aas cltd repz mov mov imul ret pop xchg or lock lret inc lods adc lds add hlt pop (bad) push (bad) xor int3 inc mov xlat inc (bad) xor lea xor adc aam mov in popa lds sbb lahf sti push mov add inc mov scas pop outsl int3 xor jg dec mov in push mov test pop (bad) dec mov mov in mov repz mov (bad) in mov imul xchg hlt dec mov jbe xor (bad) xor push jge push mov sarb dec lods or cs stc pop leave cmp mov xchg data16 sub xchg push test lretw stc fs inc add add lods sbb mov cmc fsts sub in enter xchg add in leave xor jmp push lret sbb xor dec mov mov in fcoml cmp dec mov cwtl psrlq sahf cld pop int lods adc dec mov out dec cmpsl add in pushf add aas mov pushf or dec or inc cmpsl adc lret sbb add add add dec mov ljmp aam xchg lock add mov cmpsb push outsl fadds pop mov add push mov loop mov sarl lods sbb xor or data16 inc test mov adc mov xchg add aaa pushf adc test ds add fsts xor test cmp repnz shll int3 aas mov jle cmp add lcall pushf or pusha in (bad) cmp or inc cmpsb or out fidivl mov cmp sub pop iret dec mov cmc jge imul lods and insb fnstcw sbb mov repz movl sti fs ss or test inc mov movsb push jo inc (bad) xor sarb mov loop ret sbb sti jb push (bad) aaa mov xchg hlt gs pop fmuls add mov ret and push mov jbe popa aam mov add out imul mov ja inc mov movsl adc dec mov std outsl loopne aam lods adc push lret sbb lds mov inc popf add and mov iret xor stc jno inc mov mov lea xlat push (bad) mov and sbb pop shlb out dec mov lcall pop lret add cmpsl add sub sub mov aad movsb or push fs cmp (bad) notb sbb inc test pop in push shrl out push cmp faddl or mull cs add xor mov (bad) addr16 xor xchg add xlat inc add ds mov pop shll stos pop (bad) std jno inc lods adc inc mov xchg jae pop leave xor xchg adc add mov pop mov fstl xor adc fadds cmp pop mov and or pop int cwtl sti pop lret adc mov mov jns inc mov test push xchg out push scas push insb (bad) pop jns xor sahf or xor inc stos adc clc imul xchg negb cwtl add pop int3 xor inc sahf cmc dec mov movsb vmread inc lahf stc pop xlat dec mov mov jle push add mov iret inc mov scas sub mov and (bad) gs adc mov push push mov cmc sub aad inc js in dec xchg fwait rolb adc mov and (bad) imull cmp fimull inc jp out push xchg add adc mov push push mov lret add imul loop dec cmpl cld xor aam inc ja call (bad) imulb cltd rolb je,pt loopne dec cmpl push cmp icebp xchg into add outsl movsb fimull inc jp in dec test movb jae ficom dec jle call cmc sub lret insl movsb fsts dec jle ljmp pop xchg lret push aad add mov sbb arpl movsl ficoml inc jnp out push mov lret imul loopne dec cmpl sti xor rorl push sbb rep test mov and (bad) imulb xchg int cmp add adc and (bad) imulb xchg int cmp fistl inc add cltd iret add outsl movsl ficoml inc jnp call cmc sub lret add imul in push xchg pushl inc jl call imulb popa xchg int3 add jo fistl inc jl call cmc sub into add outsl fldt cmp jle dec test je pop rolb add add add and inc stos adc cmp add cs std popa (bad) sub mov test test pop (bad) ss push cmp add sbb (bad) std xor rorl aas jne loopne dec cmpl sti xor rolb cmp dec jg ljmp bound movsl fistl dec cmpl sti xor rolb cmp dec jg ljmp xor inc jbe loope dec xorl add jl call cmc sub lret add imul in push xchg enter mov lods jecxz dec test int3 add insb mov mov sbb xchg pushl inc ja out push mov cmc sub int cmp fmuls inc jns in and (bad) imull xchg int3 add insl mov scas jecxz dec test (bad) sti xor aad inc ja loope dec (bad) mov and leave add incl inc js out push mov int3 add insb mov mov sbb sub int cmp fistl inc jnp out push mov divb push fstl dec xorb imulb popa xchg int cmp fcoml dec jle ljmp data16 in and enter lahf aam inc jle jmp leave add je loopne push mov imulb popa xchg int3 add je loope push mov stc das imul jmp cld xor add aad inc jge jmp push pop pushl insb mov mov and ret sti xor (bad) inc jns out push (bad) (bad) cld xor aam aas jbe loope dec cmpl stos loopne dec (bad) mov and (bad) pushl mov scas in push mov lret insl cmpsl fcoml inc jl call incl cmp cmpsb ficom dec test int cmp test adc mov and (bad) cli xor aad inc jp out push xchg enter xor aad dec test pop cmp stos loopne dec cmpl push cmp stos loope dec cmpl rorl aas je loop push mov imulb cwtl iret or scas in push add test mov int cmp fist es xchg enter mov mov xlat or es xchg into or mov sbb xchg xlat or jp call add jo fstl cmpb add sub iret pop inc ja out and cmp jecxz dec mov int3 add jno jecxz push mov cli das push imul scas or es in scas pshufw add inc jp out push mov int3 add outsl movsb ficoml inc jnp out push mov clc arpl movsl fistl inc jp in push (bad) ret cld xor rolb cmp cmpsl fstl inc jl out push mov iret add adc mov and pop xchg enter add add xor aam aas jne out push mov lret inc ja loop dec test (bad) cld xor rorl cmp dec xorl movsl ficoml inc xorl mov stos loopne dec cmpl shrb xchg xchg loopne dec (bad) mov (bad) addr16 rolb cmp push xchg (bad) std xor rorl inc clc xor movsb or sub push arpl and add cmp fwait hlt dec cmpsb or js je adc dec test (bad) std xor aam inc jbe loop ret pop out cmc das gs roll aas jne loopne dec xorl test adc shll loope scas adc add jp out push mov ret stc cs in push xchg cld xor aam aas jne loope dec add fwait rorl aas jbe loop push xchg ficomp push mov imull cmp ficoml dec test (bad) pushfw roll cmp cmpsl fstl inc jge call repz jb xor sub test pop ret or aaa fwait add jns cmp cmc shrb cld popa les (bad) clc popa int3 cmp test dec lods adc loop mov mov lret cli pop sarl xchg adc (bad) in dec test cmp pop mov lds test add add add ds add push and aad mov jnp inc mov insb aad add out dec mov xchg ljmp inc mov xchg decb xchg clc arpl sub (bad) (bad) movb mov sbb mov (bad) cld xor aam inc add jmp imulb cltd iret add adc mov and sar fs iret add sbb mov (bad) cld xor rorl aas jne loopne dec test enter lahf add or lods loop dec (bad) mov (bad) cld aaa outsb movsb ficoml inc jl out push mov imull cwtl into add jo fistl inc jl ljmp popa xchg int cmp fcoml dec jle jmp (bad) xor lahf aad inc ja loop dec cmpl into add outsl movsl fstl dec xorb jp dec xlat dec iret sub jne,pt cmpb ljmp call imulb popa xchg int cmp fistl inc jl call push mov imulb cwtl int cmp fistl add mov rorl aas je loopne dec (bad) mov and les add insb mov scas in push xchg (bad) cld xor rorl je,pt fist dec xchg leave pushl mov mov sbb mov into add outsb mov scas in push xchg leave add outsb movsb fsts dec (bad) mov int3 add jo fcoml (bad) mov and (bad) gs rolb cmp add cmpsb fstl dec cmpl sahf rcrl jp repz int cmp ficoml inc jge jmp leave pushl mov mov sbb sub int cmp (bad) inc jp in pop pop cli das gs rorl cmp dec xorl cltd into add ja jecxz push xchg hlt dec movsl add and push mov fistl sahf aam aas je loopne dec (bad) sbb mov mov out and xchg (bad) std add xor aam aas jne loope dec test (bad) cld xor ficoml inc jge call cmc sub lret add insb mov scas in dec test leave pushl inc jns in push test into add outsl movsl fistl inc jge call hlt sub lret add insb mov scas in push xchg (bad) xor (bad) or pop pop (bad) ret stc das gs rolb cmp cmpsl fstl dec jle ljmp xor add add mov sbb mov lret insb mov mov push push mov negl mov mov cmp cmpsl ficom xorl fwait rorb je,pt mov stc das fs push push mov lret add insb mov scas in push xchg (bad) xor add mov and (bad) cli das gs roll inc js in dec test enter mov lods jecxz dec test add (bad) xor inc jns in dec cmpl add insl mov mov sbb mov enter inc adc cld xor aam aas jne mov dec mov jb and faddl pop mov nop in dec stos push (bad) shlb loope mov jb cs inc mov jnp sub push ja das mov aaa fwait std imul mov lahf pop imul xlat mov mov push fiaddl add xor or (bad) call xchg cmp (bad) push rcrl rolb cmp xor mov scas jecxz dec test (bad) sti xor roll cmp cmpsl fcoml inc jl out push mov pushf rolb cmp inc jge lock xor rolb adc mov pop push mov leave pushl mov stos loopne dec xorl lahf aam inc jne loope dec xorl xchg int add insl mov scas push sbb hlt push mov jns ss cld pusha ret jecxz lods add mov jne aaa mov mov test inc movsl add and aad mov dec cmpsb add sbb jmp jmp ljmp xor lds pushf or loopne stos adc inc test sahf cld pop (bad) push and push mov mov mov insl aad cmpsb adc pop (bad) xor scas sbb add and add add imul (bad) cmp dec mov mov arpl inc mov (bad) stc outsb fisttpll and lahf push jns push mov add inc mov mov push inc stos adc push mov aad mov mov pop lret sbb repnz test (bad) sti xor rorb je,pt fist jg ljmp popa xchg lret add insb mov lods jecxz push mov imulb cwtl into add outsb mov mov sbb mov icebp daa pop xchg (bad) std xor rorl je,pt fist jle ljmp popa xchg roll cmp mov and (bad) imulb xchg int aaa insl mov scas jecxz dec test xchg int cmp (bad) inc js jecxz push mov cmc sub lret add imul loope dec xorl cltd into add outsl movsl fimull inc jp out push add mov lods loop dec cmpl stc das fs add add add adc mov and ret bound mov scas in push mov imulb cltd into add outsl movsb ficoml inc jnp out push mov lret imul cltd into add jo fistl inc jl out pop mov stc cs push mov jae aaa movsl sbb pushl inc jbe loope dec test (bad) cld xor rclb dec jg ljmp popa xchg int3 add insb mov add add lods loop dec (bad) mov (bad) stc cs jecxz dec test int3 add insl mov scas jecxz dec cmpl sti xor rolb cmp dec jge jmp imull cmp adc mov mov out and (bad) cli das fs adc mov pop push mov imull xchg int3 add insb mov scas in push mov imull xchg int aaa insl movsb (bad) inc jp out add xchg lret add inc jbe loop dec (bad) mov (bad) data16 xlat or sbb mov (bad) imul (bad) mov or stos loope dec cmpl cli xor xlat or sbb mov (bad) stc das fs roll cmp cmpsl fcoml dec jge call imulb bound movsl fiaddl sbb mov lret add insl mov scas in dec test mov leave pushl lahf aam aas jne fist and (bad) imulb pusha xchg lret add insl test mov lret push aad aas je fist pop push mov imull xchg int cmp fistl inc jnp out push xchg add insl mov lods jecxz dec cmpl cld xor rolb jae,pt fist and (bad) cmc sub lret add imul sub enter lahf aam add aas jne loopne dec xorb cmc sub int cmp (bad) inc jp out push mov imull sahf rorl inc jbe in push xchg lret add insl mov mov sbb mov leave (bad) xor lahf aad inc ja loop dec (bad) add pushl inc jne loop dec cmpl clc cs rolb cmp fcoml dec jle jmp cmc sub lret insb mov mov and ret add imul js jecxz dec cmpl cli xor roll cmp scas jecxz push xchg cld xor rcll inc jl call hlt sub lret imul out push xchg (bad) xor aad inc jbe jecxz dec test iret add jb fstl dec jle call repz lret add imul jecxz dec (bad) mov and (bad) sti xor rolb cmp push test and ret stc add into add jo ficoml inc jnp in push test enter pushf rorb jae,pt ficom dec jg repz fwait rolb cmp stos fist jg jmp imulb cwtl into add outsb movsb (bad) inc jns in dec test leave (bad) xor inc jnp call cmc sub add or lods in push xchg clc pop nop (bad) (bad) xor mov jecxz lods adc das nop adc xor xchg sbb mov push add imulb popa xchg int3 add outsb movsl fistl inc jge out push mov int cmp (bad) inc jp out pop pop cli das fs adc mov sbb sub enter popf rorl jae,pt fstl jle jmp hlt sub iret add outsl movsb (bad) inc jns jecxz push xchg (bad) std xor aam aas jne fist and ret bound mov mov pop push mov enter add sahf aam inc ja loope dec cmpl stc das gs cmovne in dec test lret imul jecxz dec cmpl iret add jo fistl inc jnp out push xchg (bad) sti xor rolb cmp dec test leave pushl mov lods loope dec (bad) mov ret cli das fs roll cmp cmpsb fistl inc jle in and ret clc cs pop dec (bad) mov add and ret addr16 aam aas je fist and (bad) cmc sub int3 add outsl movsb ficoml inc jnp out push (bad) ret bound movsb fistl inc jle call imulb pusha xchg int3 add imul jecxz push xchg add insl mov mov and ret stc add insb mov lods loop dec cmpl stc das fs iret add adc mov sbb sub push cmp cmpsl ficom add dec jle jmp hlt sub addr16 xlat or js in dec test lret add outsb movsb fimull inc jns in push xchg rolb cmp test mov and (bad) cmc sub int cmp fcoml inc jle jmp imulb xchg int3 add insl cmpsb fistl dec test lret add imul in push test enter sahf aam aas jne loop push test enter movsb fcoms test add add (bad) xor aam inc ja loope dec xorl xchg int es aam je,pt ficom jg ljmp push (bad) or jbe in dec test (bad) gs rolb cmp cmpsb fistl inc jl call imulb xchg iret push aas jne loopne push xchg enter mov lods loope dec test (bad) std xor rorl inc jbe in push test (bad) std xor (bad) inc jp call mov imulb xchg into pavgw or xor jae mov js ljmp bound stos loope dec xorl cltd into add outsb movsb (bad) inc jns in dec xchg (bad) xor lahf aam add out push add mov lods loop dec xorl cwtl int cmp fldcw dec mov insl jmp pop xchg leave (bad) xor inc ja loop push (bad) ret fs iret add jo fstl dec jle ljmp out lcall push les (bad) fidivr mov call in mov mov ss mov lods loop dec cmpl cld xor aam aas jne loopne dec xorb cli das gs rolb sbb mov (bad) gs adc mov sbb mov (bad) cld xor rorl je,pt loope dec xorl add xor rorl jae,pt ficomp mov xchg push ret call mull aas lahf add xor mov fs dec test jb add daa popf adc js in dec test enter popf rorl aas je fist jg ljmp arpl lods jecxz dec cmpl clc sub cmp (bad) inc jl out push mov leave pushl lahf aam aas jne fist sub add add or scas in push xchg cld xor rorb je,pt fist xorb imull cwtl int cmp (bad) inc (bad) mov (bad) cli xor roll cmp cmpsl fcoml inc jl out push xchg leave (bad) xor lahf aad inc jne loopne dec xorl lahf aad aas ja in dec test (bad) sti xor rolb cmp dec jge call cmc sub lret imul mov add pop xchg add add jo fistl inc jl jmp hlt sub lret add xchg inc xchg (bad) cld xor rorl je,pt fist pop nop int3 add insl mov mov sbb xchg leave (bad) imul loop dec test xor add lret sub cmc push mov js dec mov (bad) hlt push mov sub and mov xchg negb es fs xor inc stos sbb add mov mov popa lret (bad) lock mov mov popa ret hlt push mov lahf (bad) pop fldl add sub outsb (bad) cmp nop hlt pop mov lahf or mov (bad) cld xor rorl je,pt loopne dec xorb imull cmp jecxz dec addl imull xchg add or lods loope dec addl sub into add jo fistl inc jnp out push xchg (bad) xor inc movsb or add add das mov inc cmpsb shrd push mov imulb cmp fistl dec jle jmp imulb popa xchg int cmp fstl dec jle ljmp imul loope dec (bad) mov ret clc cs iret add jno fcoml dec jle ljmp bound movsb fsts xorb imulb popa xchg int3 add insb mov scas in push xchg (bad) jns outsl fistp push test (bad) sti xor add add cmovne call repz lret imul loope dec xorl cltd into add outsb mov scas jecxz push mov imull xchg int3 add aas jne loopne add (bad) imull cmp fistl inc jl out or (bad) (bad) (bad) cld xor rorb cmp dec mov int cmp inc mov (bad) or lret sub stc outsb lret jecxz xchg mulb nop pop loopne xchg int3 add outsb movsb (bad) inc jl call add add mov scas in clc cmp fstl dec jle ljmp arpl cmpsb fcoml inc jge jmp imulb cwtl int inc jbe loope dec cmpl cld xor rorl aas je loopne dec (bad) mov and ret stc cs into add outsb movsl fistl inc jnp out push xchg clc sub cmp fcoml inc jl out push mov lret imul loop dec cmpl cld xor add rorl mov cmpl cld add outsl movsl fistl add mov int mov mov jbe inc mov mov push mov js inc lods or mov inc mov and scas and (bad) repz (bad) cs dec lods adc push lods pop (bad) lretw sbb push mov mov jle data16 ret adc inc cmpsl or and je cmp sub flds pop mov mov ja xor sub mov and mov jno sub ljmp scas adc xor jg dec add or aaa popf add into xor out push scas adc xor lret or jl xor fwait add ret sub xchg notl pusha mov mov pop ret mov jp dec mov sub lret cmp add and inc mov mov or lock mov fwait cli popa ret and sbb inc fwait hlt dec mov ja mov pushf pop outsb sarb pushf pop test dec test cmpsb vmread inc stos pshufw xchg jmp xchg add xor cwtl pop js dec mov fstpt cmp xor sbb aad popf clc push mov jp inc stos adc inc lods or inc mov jge inc test stos sbb test pop shrb adc pop ret icebp pop les cmp (bad) out icebp pop shlb std jae adcb fstpt movsb or mull sub cmp test jl inc mov js xor add xor pop mov mov js dec mov mov fwait push test push dec stos or lds (bad) fbstp and xor lds das clc popa mov mov ja add mov lcall jb cmp push mov loopne mov iret xor mov notb or or or inc mov jle dec mov test pop (bad) xor sahf add sub (bad) hlt pop ret add inc test mov mov xchg negb and xchg add inc lods sbb stos push xchg pop les xchg sti push inc add add ret or mov enter push mov xchg icebp push mov jno ss negb xchg std data16 aaa sahf push jo mov mov (bad) stc outsb (bad) aas movsb or dec mov lret aaa sahf push jb in dec mov (bad) sub cld arpl cmp mov test pop les xchg (bad) push inc lods and mov dec mov jp inc cmpsb or ds mov push mov sarb cmpsb (bad) add sarl stos add sbb mov rorl and mov cmc iretw cmp mull cmp sub mov mov pop mov cmpsb add das xchg negb push test dec mov jns inc scas adc fnstsw lods and push cs inc sahf jmp and dec lods adc xor fildl push jle cmp in push les mov lods sbb lahf adc add add xor leave cmp add dec scas adc es and cld add push lret or jecxz mov mov jne pop leave sub jg dec mov (bad) out dec scas punpckhdq cmp and out stos adc ss cli pop shrb add notl pop addl jbe cmp fwait (bad) addr16 and fnstsw xor hlt push mov cwtl clc dec cmpsl or jmp push mov clc sub add add adc mov pop push mov (bad) xor lahf aad inc jbe loop dec (bad) mov (bad) cli xor rorb aas je fist and (bad) stc das gs adc mov (bad) cli das gs adc and enter lahf aad inc jbe loope dec cmpl movsl loopne dec test enter lahf aam inc jns in push xchg rolb adc add add call hlt sub lret add dec jg ljmp push lods or int (bad) es push mov jg dec mov js dec movsl add cmp std arpl ss xchg pop jp inc sahf notb and cmp pusha mov xchg add dec cmpsb push imul enter pop (bad) and add ljmp adc add pop mov push out sbb test test inc mov scas adc jb das mov dec lods pop fs lock stos adc sti pusha lret daa xchg jmp dec mov xchg repnz movl jp push ret dec xchg (bad) std xor aad inc ja jecxz dec test rolb cmp dec jle call cmc sub int3 add outsb movsb (bad) inc add pop cli xor roll cmp stos loopne dec cmpl (bad) or stos loopne dec (bad) mov and (bad) cli das fs add adc mov push push mov imull imul (bad) cld xor aam aas je fist and (bad) cli das fs adc mov and (bad) imulb lcall sbb mov int cmp fcoml inc jg ljmp data16 rolb cmp dec xorl mov mov pop decl mov scas out push mov imulb cltd roll cmp add add add stos loopne dec (bad) mov in dec mov insl lret push js xor test pop mov (bad) in dec lods sbb in pop mov addr16 add add adc jg in and ret stc cmp fcoml dec jle ljmp arpl movsl fistl inc jnp in push xchg leave pushl lahf aam aas je fist addl cwtl into add outsb mov scas in dec xchg lret push (bad) or inc ja jecxz dec (bad) mov (bad) stc cs push dec (bad) mov and (bad) popfw rorl jne,pt loope dec xorl mov push cmp add loope mov lock lret aaa sahf add fildl and mov test pop (bad) xor movsl adc or jle pop les mov ret dec mov jns inc mov jne aaa mov test mov push iret inc cmpsl push jnp push add stos push add xchg popa int mov mov mulb mov scas sbb and add and ret sub stos push sub push jp add inc mov mov addr16 stos adc jp dec mov (bad) out scas adc inc lods pop sub repz les xchg add aas test mov ret add cmp adc adc adc add js dec mov mov pop ret sub mov stos push xchg push mov int3 cmp lods pop and mov leave cmpsb adc sub cmp dec mov mov pop int3 aaa lahf or jecxz mov mov pop lds pushf add aad movsl push jp dec mov jno inc mov sub ret sti fs xor aas test leave xor add sbb out pop mov mov ja in dec stos adc add cs dec cmpsb or ss or xor xor push add push jae sub insl aad push les mov data16 (bad) (bad) pop les jg cmp popf (bad) pop lds mov gs lcall out pop mov movsl or cmp or (bad) and mov arpl cmp fwait imulb mov in fcoms pop movsb fistl inc jge jmp imull add add adc mov and ret gs rorb je,pt jmp push (bad) ret arpl test xchg (bad) and mov mov imul jmp mov mov (bad) out adc push mov jp aaa lcall fcoml dec jle ljmp fs jecxz fist cmp jl xor mov jge pop mov cltd hlt push mov jg inc mov ja cmp add into sub xchg push mov mov iret dec or test add pop aam ret add sbb ficompl adc ss icebp pop mov lods push (bad) out stos adc dec mov mov jp inc lods and jg pop out lret pop lds ds push jl push mov in push mov jl push mov roll adc cmp jg add xor or inc mov mov push xchg pop xor lret cmp add idivl ja jecxz dec cmpl sti xor roll cmp dec jg ljmp xor mov lods jecxz dec test movl cmovne in push xchg std xor rorl aas je loopne dec xorb imull fs rolb cmp test adc mov (bad) data16 pop (bad) sub add add mov imulb xchg int cmp fcoml inc jge jmp cmc sub int3 xchg and loopne xchg adc pop xchg imull cmp fstl dec jg jmp push mov stc xor roll cmp test mov and int cmp fmuls inc jp out push xchg leave incl cmp cmpsb fstl dec jle jmp push jns ss out daa pop xchg lret imul out and pop cli das gs add inc jnp out push xchg iret add adc mov sbb mov int cmp fmuls inc jns in dec test (bad) cli xor roll cmp cmpsl fcoml inc jl out push xchg (bad) xor lahf fistl inc jnp out push xchg pushf roll cmp cmpsl fstl inc jge call repz leave (bad) xor aam aas je fist jg ljmp imul cmpl add add pop mov stc das fs iret add adc mov sbb mov leave add insl mov mov and ret fs roll js test jbe aaa xchg in nop add cs roll je,pt loopne dec xorl pushf fsts hlt push mov lcall ds lcall and ds std pop mov add cmp cmpsb adc in mov loopne mov mov ja inc add add mov or cmp or inc cmpsb adc stos sbb inc mov mov dec mov jb ss notb cs or aaa xchg add cld popa shlb jl inc mov (bad) xor jmp mov mov pop (bad) xor mov sub sti outsb lret xor mov pop lret out pop iret cmp sarl movsb or lock scas sbb (bad) sti push inc mov add daa xchg cld sarb cltd icebp pop mov jp dec add daa mov lds sbb aas pushf sti popa mov int xchg negb cmp mov pop rcrl jmp stc push lcall mov and icebp daa pop xchg enter stos loopne dec xorl sahf aam aas jne loopne dec xorl mov mov (bad) cld xor fstl dec jle jmp imulb add int cmp add mov lret imul jmp imulb xchg int3 add je fist jg jmp push (bad) ret bound cmpsl fcoml inc jle jmp cmc sub int3 add jo fistl inc jnp out push xchg stc das gs adc mov pop push mov lret add outsl test adc test add outsl cmpsb fcoml inc jge ljmp imul scas in dec test int cmp fmuls sbb mov leave incl cmp test adc mov es xchg leave (bad) xor mov mov popa cwtl iret push cmp cmpsl fcoml inc jge call repz enter setns daa pop xchg rorl inc jbe loop dec andl (bad) inc jp in push test lcall adc mov dec jg ljmp popa xchg int3 or stos loopne dec xorb jmp push mov imull xchg int cmp (bad) inc jp in dec test (bad) gs rolb cmp fistl inc cmpl fwait roll cmp cmpsb fcoml dec jle jmp imulb bound mov xorb int lcall out mov xchg sti outsb (bad) xor outsb iret es mov jb xor pop push (bad) ret stc add insb mov mov add (bad) std xor aam aas jne loopne dec xorl cwtl int cmp fimull cmp sub cmp fcoml push mov mov push test test (bad) sti xor inc mov (bad) fidivr cwtl notb pop addr16 mov cwtl rolb cmp fstl dec jle jmp imulb cmp fimull inc jp in push test enter popf rorl je,pt in push xchg add bound lods loope dec cmpl and (bad) gs sub imul jle pop mov mov outsl (bad) ss stc arpl es inc stos or sub mov jne out push xchg lret imul in pop pop sti xor rorb cmp dec jg ljmp bound movsb (bad) inc jp in push xchg enter mov mov add push push mov imull cwtl iret add adc lds orl imull cmp fcoml dec xchg lret insb mov scas in push test lret insb mov mov sbb mov lret imul ljmp bound movsl fistl inc jl out push mov imulb popa xchg int3 add insl mov (bad) mov (bad) mov add fwait (bad) pop rcrl ljmp cwtl hlt push mov jne inc stos adc pop lret ss adc cmp into inc mov (bad) or in push (bad) cmp into inc mov movsl sti arpl push cmp mov jg dec shrb add push mov pop addr16 dec lds xchg cmc pop aam mov jle dec ret cmp mov xchg outsb in les stos adc mov mull test adc clc jp dec mov add xchg push lret sarl sbb mov movsb adc pop iret xor push cmpsb pop cwtl or push leave xor call sbb mov mov aam mov sahf or arpl xor pop leave cmp mov jle dec mov repnz inc mov fmuls xor insb sarb mov ret sti jb push mov fildl sub push (bad) xor add in push int3 inc lods push mov push inc mov sarb mov cltd cld (bad) (bad) sub lret sbb xor outsl loope lds adc mov cwtl or push (bad) cmp or cmp outsl loopne mov and mov jne aas mov xchg pop jge pop (bad) cmp fisttpll sub or (bad) das movsb sbb mulb dec scas sbb push mov mov mov stos push mov dec jle ljmp gs roll cmp dec xorb cli xor roll cmp dec xorb add inc jbe loope dec cmpl inc test pop rcrb notl jne push mov and stc push mov insb les add pop jns dec mov jp dec mov xchg (bad) outsb fnstcw pushf ljmp sbb cmp pop addr16 sub cwtl notl ja inc lods or ficom and add cltd or loopne stos or xor sub xor test jbe dec stos or lock cmpsl push bound mov movsl pcmpeqw mov clc imul test js inc movsl jae inc sahf std pop les test push mov shrb lock mov jge mov rcrb mov fs cmp pop shll loope movsl or das mov cwtl sti pop ret add cmp add add add es pop lret xor sub mov stos or arpl stc arpl cmpsb fcoml dec jg jmp push mov add outsl movsl ficoml inc jl out push mov int cmp fimull inc jp in push xchg (bad) xor lahf aam inc jbe loope dec mov int cmp (bad) inc jnp out push mov int3 add insl movsb (bad) inc jp in push xchg int3 add insl mov add (bad) ret clc cs iret push cmp test adc and ret gs adc and (bad) stc xor xlat or sbb mov lret add insb mov mov sbb xchg lret imul in push xchg roll mov and xchg lret add insb mov mov push push mov imulb xchg int cmp dec jg ljmp fs iret or inc ja loope dec cmpl cld xor rorl inc js jecxz dec test (bad) cld xor aam inc js jecxz dec cmpl add outsb movsb (bad) inc jp in push xchg enter lahf aam aas je fist dec (bad) mov (bad) gs rolb cmp fcoml dec (bad) mov and ret clc cs adc mov push push mov lret imul jecxz dec test add add adc mov push push mov imulb cmp fstl xorb stc cs adc mov daa pop xchg lret add outsb movsl ficoml inc jnp jmp (bad) std xor rorl jae,pt fist jg ljmp arpl cmpsb ficom cmpl fcoml dec xorb clc sub cmp cmpsl fstl dec jg jmp push (bad) ret stc das gs pop push mov lret add insl cmpsb fistl dec xorb sti xor rolb aas je fist and (bad) (bad) xor rorl aas jne es xchg enter lahf aad inc jbe loop dec test enter lahf aam inc jbe loope dec cmpl std xor aam inc ja jmp cmc sub cwtl into add outsl movsl fimull inc jnp out and xchg enter lahf aad inc jne loope dec (bad) mov (bad) cld xor roll or in push xchg lret imul out push mov imulb popa cli mov pop rcrb and sti add es clc arpl aaa (bad) out xchg jmp cltd lock lahf cmc dec movsb sti push test pop mov gs je and inc lcall std push stos add pcmpgtd jb and sub xor loop xchg ljmp dec movsb sti push stos add or adc sbb push jne sub ss aas xchg in inc fwait repz mov pop mov bound outsl (bad) push jbe sub pusha mov fnstsw lcall jne xor mov mov inc mov and cmp clc push mov hlt push test mov sbb sub cwtl xlat or sbb mov enter sahf rorl inc jbe loope dec test (bad) data16 roll cmp cmpsl fstl jg add add into add outsl movsb fistl inc jl call cmc sub int3 add insl mov scas in push test push ret pop cmp push mov cmc sub int cmp ficoml inc jnp out push mov leave (bad) xor lahf (bad) or lods loop dec test (bad) cld xor (bad) inc jns in push xchg std xor aam aas jne loope dec cmpl (bad) xor inc js jecxz dec add int3 add mov int cmp fimull inc jp in push xchg rolb adc xorb clc arpl lods loope dec xorl lcall adc and (bad) cld xor rorb je,pt loopne dec xorb add add in push test add imul in push xchg leave pushl inc jl call add push push mov cmc sub aam aas jne loopne dec (bad) mov (bad) cld xor rorl je,pt fist dec (bad) mov leave pushl inc ja jecxz dec cmpl add adc mov push push mov lret add outsb mov scas in push test pushl mov mov and ret stc cs rolb cmp dec xchg add jo fistl inc add xchg (bad) std xor add add scas jecxz push mov imulb popa xchg lret add outsl movsb (bad) inc jl out push mov enter mov lods jecxz dec test movl sbb mov pushf roll inc jne in push mov int3 add outsb movsb fsts dec xorl lahf aad inc js lahf sbb push sub sbb aam inc ja jecxz dec test enter mov add add jecxz dec test (bad) or scas in push xchg add insb mov lods loop dec (bad) mov (bad) cli das fs adc mov and pop sti xor roll cmp dec xorb sti xor roll cmp dec add xchg (bad) cld xor aam inc jnp out push xchg leave (bad) xor mov lods jecxz dec cmpl sti xor roll cmp cmpsl add fstl dec jle call (bad) xor aam inc jns in and ret arpl cmpsb fcoml inc jge call cmc sub int3 add insl mov mov sbb (bad) ret clc cs roll je,pt fist and pop cli xor rolb cmp test adc mov and (bad) imulb xchg int cmp fist and ret gs rolb cmp dec jg jmp pop nop (bad) (bad) xor rorl aas je fist add add dec jg jmp pop mov stc das push xlat or ja loop dec cmpl sti xor aam inc jbe loope dec (bad) mov and sahf adc add (bad) jmp scas or dec mov fwait (bad) pop mov mov cmpsb fstl dec jle ljmp data16 rolb cmp cmpsl fcoml dec jle ljmp popa xchg int3 or stos loopne dec (bad) mov mov add and cmp aad cwtl (bad) js push push mov imull arpl movsb fimull inc jp lock leave pushl mov inc scas sub dec mov scas in dec test (bad) sti xor roll cmp cmpsl fstl dec jle jmp sti xor rolb cmp cmpsb fstl dec jle jmp cmc sub lret add inc ja jecxz dec test (bad) fs pop dec (bad) mov ret clc cs adc mov and (bad) stc das fs add add add adc dec cmpl pushl inc jbe loope dec xorl fwait rolb cmp test adc mov pop push mov clc sub cmp ficom dec jle jmp imulb bound dec add je jecxz dec test leave pushl inc jl call cld xor mov lods jecxz dec test (bad) cld xor mov lods loop dec cmpl add add fwait roll cmp dec mov lret push (bad) or mov jbe mov sti xor rolb cmp dec jle jmp push mov imull cmp fistl dec xchg (bad) xor mov lods loope dec (bad) mov (bad) cli das addr16 rorl aas je fist and ret clc cs mov and (bad) imull cwtl into add outsl movsl fistl inc jnp inc iret xor notl push jne xor add mov jge cs dec movsb sub adc or cmp xchg or sti addr16 and pop dec cmpl aaa insl mov mov daa pop xchg leave pushl inc jl out push mov lret add insb mov scas in push xchg enter lahf aam aas je out push mov lret imul loope dec cmpl cli xor add add push cmp cmpsl fstl dec jle jmp divb addr16 rorb jae,pt ficom xorb clc arpl movsl ficoml inc jge call cmc sub xchg int cmp (bad) inc jnp in and pop xchg lret imul jecxz dec test (bad) cld xor aam aas je loope dec xorl fwait rorb inc jns in push xchg leave pushl (bad) imulb cltd iret add in push add add mov int3 add insl movsb fimull inc jnp out pop xchg (bad) std xor aam aas jne loop dec (bad) mov and (bad) pushfw rolb cmp dec jg sbb mov leave (bad) xor lahf aad inc jge call cmp dec lods push insl into pop fwait rorb jae,pt ficom xorl lcall adc mov push push xchg (bad) std xor rorl je,pt fist and ret stc cs adc add dec xorb stc cs sbb mov pushf roll cmp dec jg ljmp bound movsb (bad) inc jp in push xchg std xor ficoml inc jge call imulb xchg int cmp fistl inc jl call cmc add mov fdivrs mov daa pop xchg enter popf fcoml inc jge jmp imulb xchg int3 add test xchg call (bad) test popa add add mov sti xor aam fistl dec jle jmp arpl movsb (bad) inc jp in push test add add adc mov push push mov lret push aad inc jbe out push xchg leave (bad) xor mov lods loope dec (bad) mov and ret stc cs iret add outsl movsb ficoml inc jl out push mov divb addr16 add adc mov push push mov leave or rclb sbb add add jo jecxz dec cmpl sbb cld pop mov jae inc mov xchg cmc pop mov ret and jo sub ljmp pop xchg leave (bad) xor lahf aam aas jne loope dec cmpl mov lods loope dec xorl mov aam mov inc cmpsl pop leavew push je sub sbb (bad) xor stos and dec (bad) mov leave (bad) xor jno add cmpsl fstl dec jle ljmp popa xchg int3 add insl mov mov and (bad) stc cmp pop mov xchg notl adc xor test push imul xchg negl xchg rolb sbb sarl sahf cld pop add sub xchg ljmp xor mov rolb inc scas and lret xor lahf and mov xchg in inc mov xchg (bad) push add rorl je,pt ficom xorb imulb mov scas in push test mov (bad) std xor rorl jae,pt ficom dec ljmp stos fist xorb xor rorl aas je ficom jle jmp add sub or jl call (bad) cld xor aad inc jbe loop dec test roll cmp cmpsl fstl dec jle jmp hlt sub lret insb add mov lods loop dec cmpl cli das gs pop dec cmpl stc add imul loop dec test (bad) sti xor rolb adc mov sbb sub add adc mov sbb sub enter sahf rorl je,pt fist jg jmp cmc sub lret add insb mov mov sbb sub leave (bad) xor aam aas je add fist xorb stc arpl cmpsl fcoml inc jge out pop mov cli das fs adc mov push push mov lret add inc add ljmp bound cmpsl out push mov into add adc mov pop push mov clc sub cmp test adc mov and (bad) stc das gs rolb cmp scas in push mov lret insl add mov add nop (bad) data16 roll cmp test adc mov and ret mov dec movsl stc pop leave (bad) fsts dec cmpl pushl mov scas in push xchg (bad) xor mov or or ljmp jno fistl inc jl out push xchg std xor rorl jae,pt fstl dec jge call cmc sub rorb cmp dec jge call repz enter add (bad) xor rorl je,pt ficom jg ljmp xor rorl jae,pt in dec test enter lahf aam aas je loopne dec jg ljmp popa xchg int3 add outsb mov mov sbb xchg iret add jo ficom xorl mov mov push mov jae sub jae push mov xchg std push dec mov test dec mov pop mov jbe sub add pop mov (bad) in mov mov jno test jge fs and in mov ja cmp ja dec mov imul jle cmp jmp movsl add pop jne cs jmp mov jns xor xor (bad) in push mov (bad) dec mov fildl adc xor (bad) cmc (bad) int stos sbb sahf inc aad add test ret add inc (bad) push (bad) inc out cmp test mov add and ret stc das fs adc mov call shrl adc arpl mov mov sbb mov cltd into add outsl movsb fimull inc jns in push xchg (bad) cld pop mov cmpsl jb ss mov jecxz popf stc push sbb mov fcoml dec jle ljmp bound mov mov sbb enter mov lods in dec test add pop xchg (bad) cld xor roll cmp cmpsl fstl fs pop (bad) and cli pop leave dec mov mov jne mov test pushl aas jne fist pop push mov leave (bad) xor lahf aam inc jbe loope dec add fwait rolb cmp dec jge call repz leave (bad) xor rorl jae,pt ficom and (bad) imulb xchg int3 add jmp insb mov lods jecxz dec test add add enter sahf aam inc add jmp hlt sub lret add imul sbb adc mov and ret clc das gs inc stos adc mov (bad) xor mov lods sub (bad) sub add and cmc outsb (bad) xor out mov and mov sarb cltd push outsl fcoml mov mov dec scas and or dec loope (bad) cmp jecxz sarl out push mov imul movsl or cmp iret aas lods push jne xor notl cmp fiadd add call les jg (bad) aad sahf add mov sahf cld push mov insb int sahf or cs dec mov (bad) add push xlat adc mov and ret mov int3 add insl mov mov in and (bad) cld xor rorb je,pt fist sub lret add imul add add sbb mov (bad) fs adc mov push push mov lret add jno fstl dec jle jmp cmc sub lret push aad inc jbe jecxz dec cmpl sti xor rolb cmp dec jg out and xor roll cmp cmpsl fstl dec jle call hlt sub leave pushl aas jne loopne dec xorb cmc sub roll add in dec xchg add add pop xchg enter lahf (bad) or ja loope dec (bad) mov and ret clc sub cmp (bad) inc jp ljmp bound mov scas jecxz dec cmpl sti xor roll add in popa sub in dec test into add outsl movsl ficoml inc jp in push xchg (bad) xor aam aas jne loopne dec xorb imull xchg int3 add insl test adc and (bad) testl add xor inc jbe loopne dec (bad) mov (bad) gs or fidiv cwtl in dec movsl or es aas xchg repz lods add mov rorl aas jne loopne dec xorb imulb popa xchg int3 add insl mov xorb loop popf rorb je,pt fist and (bad) imulb popa xchg lret add imul loope dec xorl je xor leave (bad) xor lahf aam add aas je loopne dec cmpb cli xor rolb cmp dec xorb clc sub cmp fist jg ljmp pop xchg lret imul loopne dec xorb stc cs into add adc mov and (bad) imulb popa xchg int3 add insb mov jg jmp push mov cmc sub int3 add insb mov scas in push test lcall pop dec xorl add and ret stc das fs adc jg ljmp pusha xchg lret push aad inc jbe loopne push push mov into add outsl movsl fimull inc jp in dec test (bad) cld xor rolb jp jmp cmc sub int cmp xchg adc mov aam inc jbe loop dec cmpl std xor rorl cmp dec xorb clc sub cmp fimull inc xorl add imull xchg int3 add insl mov scas in dec test enter popf rorb jae,pt loopne dec cmpl add insb mov scas in dec test add add insb mov lods in push mov lret insl cmpsb fistl inc jge call lret add imul jecxz dec test movsl daa xchg add pop jo cs inc movsl or shlb imul mov arpl add add pop pushf xlat or sbb mov enter lahf aad inc js jecxz dec test enter lahf aam inc jge call hlt sub lret insb mov lods jecxz dec test (bad) std xor aam aas jne loopne dec xorb cld xor rolb cmp dec xorl sahf cmp enter popf rorb jae,pt ficom jg jmp push (bad) ret (bad) xor add add lods loope dec cmpl sti xor outsb mov ss out push xchg leave (bad) xor lahf (bad) or lods loop add leave (bad) xor aam inc jne loopne dec xorl cwtl int cmp (bad) inc js jecxz dec cmpl (bad) xor movsl add sbb mov enter lahf aad inc ja loope dec cmpl cli das data16 roll jae,pt ficom dec jle jmp testl add add add push jne loopne dec test enter mov stos loope dec (bad) mov and ret cli xor rolb adc mov roll adc cmp ss out gs or lods loop dec cmpl add outsb movsb ficoml inc jnp out push xchg (bad) or in mov outsl lret daa sbb mov add xchg or dec mov jne ss negl pop js cmp popf sbb inc test imul in push test enter mov lods jecxz dec test enter cmpsb fcoml inc add (bad) fs cmovne out push xchg std xor rorl aas je fist jg jmp cli das fs adc mov sbb sub lret push aad inc jne loopne dec xorl add push adc lds je loopne dec xorb cmc sub lret add insb mov lods loop dec (bad) mov ret clc arpl lods in dec cmpl stc cs iret add outsl movsl fistl inc jle ljmp xor rorb cmp dec jg ljmp imul push mov lret imul and outsb shrb or sub add add add add jl aaa xchg repnz scas add js aaa xchg cmc push mov mov out and (bad) xor inc js in push xchg leave pushl dec (bad) mov (bad) cli xor rolb adc mov pop push mov cmc sub int3 add insl mov scas in push xchg add outsl movsb fimull inc jnp out push mov movsb or and xor push jnp inc mov iret or jne loopne add dec xorb add insl mov scas in mov stc arpl movsl ficoml inc jnp add and xor inc jne loopne dec xorb (bad) xor aam add mov sbb sub lret add imul jecxz dec test pop imulb cmp loop mov outsb add inc cmpsl adc push mov ja xor jg inc stos or ss or add (bad) in test xchg lock mov lods jecxz dec test (bad) popfw rorb je,pt fist xorb imulb xchg int cmp ficoml inc jnp jmp pop (bad) ret clc sub cmp fistl inc jl out push xchg enter sahf aam aas je fist xorb cmc sub rorb cmp dec (bad) mov and ret arpl cmpsl fstl dec jg ljmp xor lahf add add or sbb mov iret add jb fist repz lret add insl mov scas in push xchg xlat pop xchg int3 add insl mov mov enter sahf aam aas add push push mov imulb xchg into add outsb movsl fistl dec jg out and nop (bad) addr16 rorl je,pt loopne push xchg cld xor lahf xlat or sbb mov leave (bad) xor inc js jecxz add push xchg lret add insl mov mov and ret gs rorl inc jp in push fistp dec test (bad) cld xor rorl je,pt ficom jle jmp cld xor aam aas ja loop dec test (bad) stc xor rolb adc mov pop add enter popf rorl inc jns jecxz push (bad) (bad) cli xor rolb je,pt loope dec addl xchg into add jb fcoml (bad) mov movb add add xor rolb cmp cmpsl fcoml inc jge repnz into add jno fcoml dec jle ljmp ss mov mov sbb sub xchg cld arpl cs negl jle jmp bound cmpsb fstl dec jge call clc cs iret add adc and ret arpl cmpsl ficom cmpb add jo fistl inc jge ljmp bound cmpsl fstl dec xorb add and ret cld xor rorl jne,pt les mov in cmp fcoml inc jle ljmp popa xchg int3 add insb mov scas in dec test cltd iret add outsl movsb ficoml inc cmpl sti xor rorl jae,pt ficom add xchg leave add inc jbe loope dec test (bad) gs rorb inc jnp in push xchg enter mov jge call imull cltd add iret add outsl movsl fimull inc jnp out push xchg add outsb mov scas in dec test (bad) sti xor rorb cmp dec jle call hlt sub lret push aam inc jl call imulb xchg int3 add insl mov scas out push mov lret insl cmpsl fstl inc jge call hlt sub rolb cmp fstl dec jg xor roll cmp dec cmpb sti xor add pushf rorl cmp dec jle jmp imull mov scas jecxz dec cmpl cli xor rolb adc mov push push mov imulb popa cwtl into add outsb mov scas ljmp arpl in inc cmpsl or push jnp xor clc push test test dec rolb mov push push mov cmc xor inc jnp out push mov lret add imul jecxz push test add add add push cmp dec jle ljmp push jne loope dec (bad) mov and (bad) cli xor rorl je,pt fistpll shrl test cmp adc iret sub pop icebp pop mov jl xor fstpt xchg repz mov insl int cwtl add ljmp mov xchg add inc lods pop sbb mov xchg or mov mov scas push je daa mov pop add add xchg out dec lods or sbb xor and (bad) cs dec mov xchg sti pop (bad) xor mov sahf (bad) push jg inc mov xchg add iret xor xor xchg add fimul xchg cld push xchg addr16 cmp es add inc add cmp fldl and or fildl adc sub test dec stos or int xchg sti pusha leave sub add mov push insb aam lods adc in mov sarl lods and cmp mov mov pusha int lahf or cmp mov push mov cltd (bad) or ja jecxz dec test rorl aas jne loopne dec test (bad) addr16 rolb cmp test mov and (bad) imulb popa sbb loope dec mov clc arpl movsb fistl inc jp out push xchg (bad) xor add add or lods jecxz dec cmpl clc sub inc jne loopne dec (bad) mov (bad) cli xor rolb cmp ret call (bad) xor adc shrl fwait add test pop (bad) aas mov jle aas cmpsb or imul xchg cld inc negl sub or and push data16 xor jmp mov mov jl xor jle inc mov cltd stc pop mov insb (bad) and dec mov mov repz mov jp aas mov popf js stos or sub jns xor cmc arpl inc mov nop repnz scas pcmpeqb cmp and out dec mov (bad) and jns inc mov imul mov test jl (bad) in push mov mov rolb xor push dec (bad) mov (bad) gs rolb cmp dec add call hlt sub lret add insl mov add mov jbe cs rorb cmp dec jg ljmp popa xchg int add (bad) loope lcall push mov jbe xor insl int mov inc test data16 and jecxz lahf cld pop mov xchg xor lods jecxz push mov lret add insl stos loopne dec xorl xchg int3 add insb mov lods loop dec add add pop sti xor rolb cmp cmpsl fstl dec jge call cli xor roll cmp cmpsb fistl inc jl out push xchg enter lahf aam aas je loopne dec cmpl xchg add sub mov push (bad) xor add push mov mov add out enter mov jp inc stos add (bad) or in ret es cld push cmp xor xor add or jne loopne dec (bad) mov and les push xchg (bad) std xor loope dec cmpl (bad) faddl adc dec mov jle dec mov (bad) ljmp ret sub hlt push mov shrl xchg repz mov jo cmp popf add inc mov addr16 hlt test arpl insb aad mov rorb (bad) inc scas push jbe inc stos adc cmp cli pop mov jae cmp addr16 add add dec movsb or scas pop add idivb pop jno inc mov and mov jge inc test mov iret xor inc scas sbb inc stos adc inc cmpsl add add icebp pop ret jmp add dec mov test push mov mov jnp inc scas adc fild push insl aad cmpsb or cmp lcall jp dec mov xorl push mov rcrb add add jl dec mov jl inc mov (bad) sbb repz mov xchg sbb cmp inc roll or xor push sub (bad) es pop xlat push (bad) sub out push mov mov (bad) xor and int lods or (bad) xor xchg adc pop addr16 daa mov pop fcoml adc xor and pop mov add dec mov mov jne xor cmc add push stos pop popa shll aad mov inc lcall sub pop mov call mov add xor in fwait hlt jp dec stos pop addr16 sub xchg push mov mov (bad) enter addr16 xor test dec lods or sbb xchg aas pushf stc push mov imul jle dec mov jnp inc cmpsb or cmp cwtl or xchg push sarb push mov and loopne mov xchg cld push and add cmp insb xlat inc scas sbb mov lds cltd add sbb fwait or cmp enter xor test xchg sub lret sti jno add scas pop jp inc cmpsl or (bad) fidivrl add das xchg cli fs cmc pop mov mov and mov mov dec lods or cs lock mov jae ss add (bad) fiaddl or xor (bad) in mov mov jbe cmp mov push mov ja cmp lock les (bad) lock mov jnp inc mov test inc movsb or xor clc pop mov mov js cmp mov push mov jp inc mov sbb aas cmpsl or push push movsl add cmp jl cmpl xchg hlt pop shlb in push mov lahf add xor cmc dec mov jns push mov jbe es ret fildl pop fs sub (bad) mov mov dec mov js cmp lcall xchg push je pop ret jmp test xchg repnz stos sub stos sbb cmp mov or mov jno cmp pop mov xchg cli pop mov (bad) negl sbb mov push mov jb xor je dec add lcall jge dec mov bswap xor xchg inc mov mov rcrl add adc std pop or cmc pop (bad) fnstsw mov xchg std pop into inc mov mov dec mov daa test dec mov jg dec mov mov dec mov test pop ret cmp and pop les fstpt popf stc pop mov outsb lret daa test inc movsl pop jae cmp jns cmp sbb mov add cltd add sarb movsb or mov dec mov test dec mov sub adc hlt data16 aaa cltd clc arpl sub dec fistl add cmp into xor vmwrite dec mov push ret pop int mov int mov int rcrl out pop les (bad) sti mov movsb adc ss cmp int movsb adc popa aad mov xchg pop loop dec stos adc push outsb (bad) xor jle inc lahf add add inc scas adc sub or push les jb pop les cmp push lods adc fiadd or repz inc stos adc xor leave xor test rolb sbb popf push jb pop enter jns (bad) int cmpsl or lret movd pop roll sub je mov mov roll sbb std jae dec mov jecxz mov jmp adc add insb sbb cmp pushf pop jno xchg push jle popa roll or cmp iret aas or push ret xor or push mov mov push xchg add push mov out mov fimul sub and enter sub push mov aad mov popl insl (bad) and cld arpl dec mov in pop int cmpsl sbb into inc mov inc lret mov fistp aas scas sbb add inc mov (bad) cld ficoml xor inc mov popl dec imull (bad) aas test nop adc in pop sarb mov mov xchg add out roll scas adc jg xor or sbb push jnp cmp cli jae cmp nop in dec movsl cs clc stos and pop shll fs lret shlb bound (bad) out rolb js push enter js arpl dec mov mov popa int3 add xchg ljmp mov scas dec in push movsl adc push mov in mov pusha fstl sub mov nop add out shrb adc inc mov mov roll adc inc mov mov popa into cmp aad add cmp pushf adc dec (bad) inc mov xchg (bad) popa (bad) sub shll sahf cld popa lds add sub jo pop shlb jmp mov jne xor add add adc in dec lods adc fdivrs mov mov dec stos or aam xchg negb sbb loopne movsb push lretw xor adc xor and mov xchg sti (bad) pop pop fsubrs mov lcall inc test insl into cmp jp cmp into cs push mov xchg ljmp sbb sahf (bad) data16 inc mov jp push mov fimul or inc cmpsl or lret xor add add pop mov and sub mov jge dec scas adc dec lods adc adc xor (bad) in stos or xor jg inc test imul xchg notb sbb inc movsl or inc int pop pop sti xor roll cmp push mov cmp dec cmpsb or jbe xor repz mov push sub adc and fiadd or dec jle jmp add insl mov mov add add sbb mov enter lahf aad inc jbe loope dec (bad) mov ret stc das fs pop dec (bad) mov and (bad) cli das gs in push test cld xor rorl je,pt fist and (bad) divl push je fist dec xorl inc stos dec mov cli xor rorl aas je loope dec cmpl cld xor rcll dec jle jmp cmc sub add xchg int3 add outsb mov scas out push xchg leave pushl inc ja loop dec cmpl cmpsl je ret aad xchg icebp cmpsb vmwrite xor mov das pushf push rcrl in nop adc jnp xor imul mov mov pushf dec mov movsl add daa mov push mov mov addr16 xor jl pop mov xchg clc push scas or adc push mov lods push outsl shrl fwait add gs mov mov out pop mov in push ret or aad movsl adc dec scas push jnp cmp lret or xor push mov or push mov fistl dec ret inc (bad) xor divb fadds sbb rorl cwtl (bad) (bad) imul adc movsb add push out adcb movsb std push mov insb lret sub mov jecxz add push jne loopne dec (bad) mov and ret stc das gs adc push ret fstpt fiaddl cli das gs xchg lret add insb mov mov sbb mov leave pushl mov lods mov xor (bad) call imul data16 adc jbe imull sub int cmp ficoml inc jp in push test sub rorb je,pt ljmp xor add or pushl pop (bad) ss cli pop aam mov xchg push ja push (bad) xor or cmc push outsb (bad) xor mov xor or lods push fisubl fistl inc jge jmp imulb cltd into add jno fstl dec jle ljmp jae fist and (bad) cli das gs roll cmp test mov and (bad) cli xor outsb movsb (bad) inc jnp out push mov rorl cmp dec addl add add (bad) popfw rorl aas je fist nop repz mov mov pop pop xchg lret add outsb mov and and and ret fs adc mov push push mov imulb xchg int cmp fimull inc jp in pop xchg (bad) cld xor lahf (bad) or dec jg ljmp bound xchg repz cmpsb add and mov push mov xchg pusha sub loop pop pop cli das gs add rolb cmp test adc mov pop push mov imulb bound sbb in push test pushl mov out daa pop xchg lret imul out push mov lret add insb mov scas add and (bad) cli xor aam inc xorb sti xor lahf aad inc ja jecxz dec test scas xor sub xor jae cmp cmp mov ja mov add frstor cmp jge pop les xchg and xchg cmc pop mov xlat aaa xchg notl push jno sub hlt pop into xor add movsl or iret add cwtl stc push mov cwtl outsb cld pop mov jl inc lock pushf sti pop mov jae cmp clc push mov ja ja fild push imul (bad) in dec test xchg lock mov je xor ja xor jae mov jae outsb mov and int3 add outsb mov add (bad) inc jp out push mov lret add insl mov mov sbb mov cmp daa add xchg pushf rorl cmp dec jg jmp cmc sub into add outsl movsb fistl dec jge call std xor aam je,pt fist jg jmp pop xchg lret insl mov scas in push xchg std xor rorl cmp dec jle ljmp arpl stos loope dec addl add add (bad) gs rolb add scas jecxz dec test (bad) sti xor roll jae,pt fist and (bad) divb push jne pop add (bad) imull cmp fstl dec jle ljmp addr16 rorb je,pt loopne dec (bad) fsubp icebp js repnz leave pushl inc ja loop dec test (bad) gs rolb cmp cmpsl fcoml or fdivs mov and add sbb mov jl xor arpl sub cmp scas sbb jns aaa xchg repnz lds popf push outsb flds test dec mov fldl ja aas lcall push mov push and mov dec mov ja xor push mov les mov pop lds xor inc test shll call and and or sub push daa mov push das xchg add and lret add or flds sbb inc pushf negl adc leave sub xlat sub cs aad mov xor ja cmp insb mov (bad) out dec scas push loopne in add rorb jae,pt ficom jg ljmp je,pt fist jg jmp push mov imull cmp ficoml inc jnp out push mov lret add insb mov scas jmp add add push mov clc arpl cmpsb fcoml inc jge call cmc sub int cmp fsts inc jnp out push xchg xor xchg sbb aam xchg std pusha iret cmp pop mov dec mov xor ret sub xchg negl das cwtl sti gs cmpsl or sarl scas adc dec mov mov mov mov addr16 sub mov (bad) jmp (bad) sub cmpsl add add jle pusha (bad) mov mov mov push mov mov push mov aad mov lods pop and mov test pop shrl jle push ret push jae push mov sarb stos adc test mov dec iret xor fwait jmp sub xor insb fisttpl stos push jp ss (bad) fs sub clc pop enter push mov sub mov icebp push lret cmp xlat mov insl add inc test add add (bad) call lret in mov imul jg sub (bad) enter push lods push outsl (bad) xor inc mov sahf pop jno ss push je cmpsb adc std pop mov pushf notl pop gs add push push mov mov test dec test cmpsb (bad) fdivrs test stos adc dec mov mov je inc lods adc popf or mov lds mov add add lods adc dec mov in push mov rolb adc dec mov (bad) sub mov outsl loop int mov dec stos sbb inc lods adc xor and mov pop ret sub or lahf add enter jbe push lds lcall cmp sub ljmp mov lret adc loope mov xchg add cmp add add add dec (bad) ss hlt pop (bad) xor mov jmp int stos adc icebp pop into lahf jno imul adc outsl fstl xor sbb xchg lock test popa mov mov (bad) xor lahf add mov les and xchg hlt push mov jnp pusha adc mov mov fldl push jae inc cmpsl or dec mov pusha hlt pop enter jno push add mov jecxz ret cld addr16 popf pop jae push mov rolb sbb (bad) outsb rcr ret or in ret add es inc mov fwait add fiadd push je cmp lods or xchg add mov test js dec mov test dec scas adc ds jne push mov lret cmp inc stos push jns or sbb repnz ret add lret add mov and add xchg add xor mov sub xlat dec mov movsl adc iret dec (bad) aaa mov (bad) out dec mov lcall cltd std pop enter xchg stc pop (bad) das mov mov lods movq inc cmpsb or in stos add negb sub add dec mov aam sahf (bad) imul ljmp fldl mov pop leave sub add fadds adc sub add inc mov add sub les mov mov dec mov mov mov sarl aaa fwait (bad) gs xor lcall sub push lds xchg sti arpl sub cwtl (bad) imul add inc mov xchg push insl fimul and add add sub (bad) out dec mov mov jae xor (bad) negb adc daa sub mov mov cld gs xor popa (bad) ss add sub inc lods sbb cli arpl inc mov mov mov xchg flds sbb mov push les adc mov sub fimul and popf add dec lock add cmp xor std fs aaa lahf or inc add (bad) loop lahf cli pop mov outsb fdivrs lcall je inc mov sub mov mov pop enter ljmp mov add add cmp or pop xchg pop lret scas and stos adc dec stos push ja inc stos sbb nop repz sarb movsb or push lds and push (bad) aas mov mov mov pop enter jae sub xchg stc (bad) and xchg push mov (bad) sub fwait add add cs stc pop ret sub mov sarl psrld popf pop outsl (bad) add inc movsl (bad) jecxz mov dec push ja inc scas sbb fisttp sbb dec mov xchg add dec mov jge dec mov xchg pop lds negl into xor scas sub mov xchg clc pop shlb repnz mov shrl add dec mov daa xchg stc pop enter popa iret inc mov hlt pop int3 cmp sbb dec mov (bad) dec mov sub out pop ret sub data16 add add jnp aas mov (bad) icebp push mov mov push mov cmpsb push addr16 add inc lods add movsl sbb jns inc mov jge dec test ljmp cld pop iret aas mov sahf push and lret adc sub es or pusha fadds or sub rcrl fidiv pushf hlt dec stos or or push lods pop pop mov jbe daa sub mov add add pusha lret sti arpl xor add fdivs adc (bad) jmp scas or lcall pop mov xchg negb adc sub xchg std pusha (bad) daa mov data16 das xchg stc pop mov out add inc scas sbb stos or (bad) xor cmp lcall cltd adc mov in lds mov lcall nop repz mov enter pop ret add js push mov stc insb fldl dec mov loop lds xchg cli pop mov or or mov test (bad) cs cld gs sub aaa test xchg add das xchg add cmp roll and (bad) mov jno push les adc inc movsl push jbe push mov mov xor xlat inc les cmpsl adc sub aas mov cltd or and dec clc jp push mov mov jge pusha aam scas es or insb cmp push lea fsts rolb and jnp dec mov (bad) stc pop shlb in push mov sub (bad) xor jge pop lret sbb repnz xor mov mov int xchg clc pusha enter data16 mov test js push mov std jae dec mov cmc pop mov mov (bad) icebp pop mov mov add add xor pop lds mov loope into cmp jns inc movsl add adc push shlb cmc pusha shlb pop xor gs cmp je push lds stos sbb roll or loopne mov test pop leave sub cs stc pusha int3 cmp and jecxz int mov lcall scas and scas adc dec mov mov pop (bad) sub (bad) aaa add (bad) outsl fimul add add push lds mov cmp adc push mov push push mov repnz (bad) xor sahf push outsb sarl movsl sbb jne push shrb stos dec mov cld insl out mov and out lret std imul (bad) aam mov xchg ljmp push lret add and add pop fisttpll cs adc lods emms int3 ja jno arpl push leave dec ret dec mov xchg cmc pop ret cwtl std pop mov out iret cmpsl adc ret mov fmuls sub mov jl inc scas sbb mov push mov xchg add add sub or pop xchg ds mov in mov and scas pcmpeqw dec mov mov aad test loopne int lods sub int3 inc lods sbb mov mov enter push jo inc mov cltd add (bad) cmp dec mov loop movsl or dec mov xchg push mov shrb push shrb adc and rolb pop shrb shrb dec mov jnp inc lods adc fimul xor int lods sbb push enter xchg push mov mov xor mov enter sub iret cmp pop nop add in pop sarb xor rolb add add inc stos or add lahf add mulb dec (bad) xor test rolb and cld jo push movb jo aaa fwait add cmp stc fs cmp xor mov xchg or push lds scas and mov or cmp ret cmp push mov test dec mov in enter xchg pop jae push lds scas sbb pop into xor dec add add push repz cltd add sti test push mov imul fs sbb loopne or ss notb and movsl or cmp add jp cmp pop imul movsb or add and ds adc ja dec mov jns dec mov jbe ss cmc push mov jle inc mov mov scas sbb sub add sub cs clc pop sarl jle dec mov jp inc cmpsb or aam add add lahf pop imul enter (bad) icebp pusha leave sub das mov push xchg add inc stos push lea jo push ret add sbb jecxz lods adc inc movsl add aam cltd add sahf add ss out push lds mov adc fs jb dec mov fisttp and inc movsl push push popa (bad) sub add cmpsl adc test aad (bad) xor add adc dec (bad) es lock mov push mov je push mov leave sub and push jle pop int3 cmp push xchg pop int3 cmp out (bad) cmpsl pop jg dec test jno dec add shrb sti popa lds lcall (bad) cmp ficoml xor jmp es push mov shlb pop mov jmp and xlat inc mov lcall add add inc mov nop repz mov shrl add iret xor add xor fiaddl sub (bad) xor in int3 cmp or adc hlt xchg cld mov xchg and mov cmpsl adc push leave xor push xchg fs cmp jmp and divl fnstcw adc mov xchg movq pop int3 xor insl fstl xor adc jp add call icebp push mov mov test data16 cs or pusha rclb cmpsl adc push mov fidivrl mov mov scas adc inc mov movl in sarl cmpsl pop xchg or ret sbb adc inc lods sub and add mov push shlb dec mov (bad) sti imul mov push ja cmpsb or iret cmp add aas icebp jp cmp add add lret and rolb pop imul sarb scas adc inc mov jle push ret or pop movl in push (bad) cmp ficom inc cmpsl or xor mov jle inc stos push outsb loope ret sbb mov out pop int mov popl jno push mov lods adc fisttp xor xchg stc pop into cmp ljmp pop lret cmp fstl cmp and xchg push mov les mulb cld lods sbb push mov adc pop roll sub push (bad) cmp mov jne mov leave and add mov mov insl std imul lret adc inc movsl or and lds test xchg push dec mov lock aad mov (bad) daa mov mov cltd pop scas push xchg adc (bad) negb cmp or cmp add inc mov xchg push jp pop rolb sub int mov lock jmp cmp adc fidivrl movsb pop fcompl sahf add int mov rolb and mov out pusha sarb test in stos push jo cmp pop mov mov (bad) cmp loop leave cmp xchg add pop int into sub jmp xlat xor pop mov sbb lahf add (bad) xor notb add nop negl and dec mov mov pop enter jle pop into xor xchg sti outsb fnstcw ss std insb roll push xchg push sub int3 ds sbb mov out popa fmuls sbb mov mov ret repnz lds popf push jg sarl mov xchg or push mov clc imul outsb daa nop cli pop lret cli (bad) into ss push jge cmp add mov inc mov rcrl fidivrl pushf add in push (bad) cmp cwtl clc pop mov mov jae inc cmpsl push jo mov xchg icebp push mov jnp inc cmpsb push outsl (bad) aaa lcall push mov test insb iret xor or xchg sti sarb pop jg push mov jp inc mov into inc scas sbb jmp int3 xor cwtl or inc cmpsl or inc lods add add ret in lods or add sarl stos push mov pop enter push cmp pop insb sarl push mov outsl loopne mov out mov mov pop mov stos or sbb sbb cmpsl or pop mov pop mov loopne mov loop mov fisttpll and test data16 xor sbb aas mov xchg cld gs cmp loopne mov sub lret aaa scas adc jmp rolb push js gs test add push mov dec mov jge mov popf cli push mov jb sub xchg add xor add out movsl add out cmpsl or sub imul mov dec lods adc mov pop ret out dec mov jbe inc mov sub fiadd or push mov scas dec (bad) sub dec mov lods push pop stos std dec mov inc xchg in mov cmp cmp jl add and xor clc push stos or es inc lahf push mov xor daa jns pop jae sbb enter pop imul xor rorb je,pt ficom jg jmp push mov imull xchg int cmp fmuls dec test (bad) xor lahf aam aas je fist and ret bound mov mov sbb mov int cmp in out pop lret sub cli add push mov ja mov pushl lahf aam aas jne loope dec xorl insb mov lods jecxz push add rorl je,pt fist xorb clc sub cmp ficoml inc jp out push xchg std xor ficom dec jle jmp hlt sub lret insl mov scas in dec test (bad) gs adc mov sbb das gs rolb cmp add cmpsb fistl dec jge call repz push mov imulb xchg int3 add insl mov scas in dec test int3 add insl mov lods jecxz dec test (bad) data16 roll cmp dec jle jmp cmc sub xchg int3 add insl mov mov and (bad) imull cwtl int cmp fmuls inc jns in push test (bad) std xor roll adc mov push push mov addr16 enter inc mov add adc and mov inc popf cli pop mov leave and fidivrl cltd jmp xchg add xor pop jne ds pop enter push mov jp inc mov mov arpl and ljmp (bad) divl jp inc test pop or pop jecxz inc cmpsb (bad) push mov shlb add pop (bad) sub xor and push mov mov pop lret adc repz int mov jb inc lods adc or add aaa pushf add sub xchg cli pusha (bad) sub xchg sti pop shrl add adc inc stos push jnp push mov mov (bad) jmp repnz dec mov mov pop mov lret or ds add mov ret add inc test js push mov roll dec mov xchg pop mov mov loope mov jnp aas mov mov stos es add add inc mov fwait adc arpl inc mov mov nop add movsl push (bad) jmp leave inc mov test dec mov mov popf add xchg (bad) pop enter insb into sub fadds je mov mov xchg sti popa (bad) xor mov popa enter js inc mov mov pop mov loope mov ret out popa (bad) xor inc mov (bad) mull lods adc sub xor add cmp stos adc push mov aam mov xchg cli gs xor popf add dec mov mov outsb in mov (bad) out shll hlt pop lds test int3 cmp fdivrl mov lods pcmpeqd push shrb sti popa ret sbb iret sub in push mov jmp mov sahf pop leavew sub sbb call (bad) arpl aaa test jge dec shrb sti sarb movsl adc fadds add mov jecxz mov xchg cld push add mov into cs ljmp cmpsl or pop leave cmp in arpl pop fstpl xchg std mov pushf adc cmc pop mov fiaddl and lods sbb mov cmpsb or dec mov jg inc mov xchg pop lds (bad) cli pusha shll pop mov int3 xor mov scas pop test push mov shrl negb movsb add or cmp adc sub ret cmp les lahf or inc stos adc inc stos adc adc adc inc mov fadds pop data16 xor cli leave dec mov ja inc mov xor mov sub mov jl inc scas sbb cmpsb vmread push iret ds sbb movsl or dec mov fadds adc mov js dec mov stos push popa mov pushf stc pop mov add push mov (bad) dec cmpsb add sbb pop jae xor sub out dec mov sarl push (bad) es cli pop ret out push mov xlat dec mov sbb add pop (bad) xor mov xlat inc mov xchg add push les movsl pcmpeqb cs dec cmpsb add xchg inc lahf add sbb xor imul cwtl hlt dec mov insl leave and push mov test pop shll add cltd cmc push mov js cmp fnstcw lcall ljmp mov mov jb xor scas vmread dec stos adc loop movsl pop push sub stos pop xchg push jbe pop lret adc inc test mov fwait add dec mov repnz int3 aas scas and mov pushf push xor rolb push sub scas or jmp repz ret ljmp ret add add mov negb cmp jns pop lret add sub jg jno js mov fs dec out push (bad) xor xchg pop imul sti imul (bad) xor into cmp ljmp out dec scas sbb mov (bad) hlt pop ret negl cmp adc out (bad) xlat push mov clc arpl dec mov (bad) ja pop sarb add je inc test jp pop int xchg sti imul add add inc mov call sbb mov xchg or fnstcw mov cmpsl (bad) jecxz mov mov js dec mov clc push pop iret inc mov xchg add inc mov fwait or dec scas adc inc mov mov and mov jg popa rorl cmp negl cmp jmp sarl mov xchg sti pop shlb xchg (bad) imul jecxz mov jle push mov mulb mov add add lcall mov hlt xlat cmp lcall jg dec mov jl push sarb and aam mov clc jbe pop int3 inc (bad) xor xchg ljmp aaa stos adc inc test mov xchg add pop add push lret cmp fstl aaa cmpsb and mov mov test pop shlb hlt pop mov aad mov add ret and lds add add movsb sbb in pop mov sarb mov jl dec mov jnp push mov in pop into inc mov out (bad) aam mov out pop (bad) xor add fiadd jb dec scas adc cmp mov push add movsb sbb rolb pop and test movsl or (bad) iret cmpsl popa (bad) xor sub inc mov ljmp push mov out int mov xchg add pop mov add mov push mov out mov and hlt arpl dec (bad) aas scas sbb pop shrl pop xchg data16 push inc mov fs loopne shlb imul into cmp or inc mov xchg push int3 cmp call sub (bad) hlt jl pop out jbe jp jp cmp clc sub (bad) xor xchg add aas lods sbb ret xor pop fimull das movsb push xchg insb flds cmp push imul sti arpl cmp stos sbb push enter (bad) clc data16 sub lods and add popa sarl add (bad) in pop shrl scas xor xchg push mov xchg clc pop les mov pop mov fist cmp loope ret xor out pop aad mov mov fs es clc data16 aas lods adc dec scas adc push xchg push ja pop into mov sarl scas imul incl jge pop add int3 inc mov xchg pop (bad) repnz sarl popf jmp cmp scas push jnp dec mov sub pop xchg add call and into inc mov popf adc add or das xchg negb sub stos adc sbb adc mov cwtl or pop int add cmp std arpl and xor sbb add push mov and jecxz mov add add jb push ret sub int3 ds xchg add push int3 aas mov and lods sbb inc test mov test dec mov cwtl add pop leave cmp inc mov stc (bad) xor xor scas push jl inc mov ja dec mov lock iret inc mov mov jb pop sarb xchg dec mov jge push lds mov cmpsb pcmpeqd cmp sbb hlt arpl dec mov cmc popa int3 inc add mov mov fmuls es add dec fdivl (bad) clc ja mov pushf push mov adc fdivrl xchg cld pusha (bad) xor pop mov mov int3 aaa test lea je push les or imulb push mov out push mov jnp jge xchg cltd sbb ja xchg or mov cmp mov dec scas adc sbb xor adc dec test mov popf or lret add add dec mov jno sub lock mov fildl adc xor xor nop clc pop (bad) and and insb (bad) xor nop cmc js in pop pop mov (bad) cmp cwtl or xor movsb or inc test (bad) std addr16 mov pusha enter arpl sub test pop mov mov mov jg dec lods adc movsb or cwtl ljmp push ret xor add add xor xchg or push (bad) cmp jmp enter mov popa (bad) cs ljmp cmp add ss std popa mov mov je dec mov nop stc pusha sarl xor or jmp xor inc mov lods sbb jmp mov mov (bad) cld insb fist xor jno push mov add pusha rolb sbb push and mov mov pusha les notb sub add pusha xlat aas scas pop xchg add jno push ret xor (bad) add adc cmp cmp aaa cmpsl das fwait das mov les lahf or push je cmp rolb xchg add xor in pop iret dec mov shll sti (bad) lds lahf or dec mov xchg pushl push (bad) xor sarb js jae pop iret xor std pusha add cmp shlb repz mov lret and add das movsb adc cmp clc pop shll mov arpl xor xchg std insl fisttpll xor jmp adc lret sbb (bad) out cmp ja (bad) jmp add call negl sub mov scas and std insb fmull nop add pop iret dec mov lcall addr16 mov test ja inc scas and les add stos sbb mov mulb dec lret xor sti pop mov sarl add ss add inc mov nop or pop enter mov (bad) rolb sub lds fwait add cmp mov rolb xchg add dec mov icebp fmuls xor sbb ret sbb push jg inc lods daa xchg or (bad) cmp ds pop test data16 sub into cmp add add push lds movsl adc in scas adc sbb xchg or fmull pop mov push ret es mull pop clc imul mov add pusha les mov push mov pop out repnz lock test pop lret add aam cmpsb or xor and dec (bad) cmpsb sbb std imul or inc mov mov test pop lds xchg cld popa lds xchg add dec ret sbb lds add push (bad) cmp stos or mov mov and push mov imul mov xchg pushl enter xchg fadds pcmpeqb aas scas adc out les mov sahf or push sarl sbb std outsl fiaddl daa cltd adc xor cwtl push imul mov mov int3 aaa movsl or cmp fadds sub aam mov add xchg repz mov (bad) sub mov dec mov xchg dec mov mov outsl iret xor jmp xchg hlt pusha into inc lods adc cmp es dec cmpsl pop jbe inc cmpsl insl xlat ss (bad) imul mov mov jns inc cmpsb psrld mov xchg notb and sbb mov pop (bad) xor pop outsl (bad) xor push ret adc fildl es pop ret out pop mov int inc lods sbb cmp push mov dec cmpsl or dec mov nop imulb cmp es repz mov test push add xor or sarb movsl or push sub mov iret xor sub ret (bad) data16 xor mov push dec mov aad scas sbb int mov (bad) cld imul (bad) das movsl sub fisttpl daa sahf sbb loope mov mov add add mov mov loope mov test gs repnz sbb std popa les aas test jl dec lods adc cmp ret adc mov xchg push push inc mov sarl mov popl jae push enter mov imul lock sarb scas pop mov push xor adc lock shrl mov mov loop (bad) xor pop test pop ret loopne add (bad) pop sub test adcl mov and (bad) imull xchg into add mov pop push mov lret imul jp out and nop (bad) std xor aam inc jbe loope dec cmpl sti xor ficoml inc jl call imull cmp fcoml dec jle ljmp gs aam aas jne loopne dec cmpl cld xor ficoml inc jnp out push mov into add outsl movsl fistl inc jl call imulb cwtl int cmp fcoml inc jge call sti xor rorb cmp dec xorl sahf aam aas jne loope dec (bad) mov fwait rolb adc mov and enter mov lods loop dec test leave pushl lahf add in push xchg lret outsb movsb fistl inc jle fwait imul out and (bad) cli xor rorl aas jne loopne dec add (bad) mov and ret stc das fs rolb cmp cmpsl fcoml inc jle ljmp arpl scas jecxz sbb ja loop dec test (bad) cld xor aam aas jne loop dec (bad) mov xor push cmp mov sbb sub lret add insb mov lods jecxz dec test enter lahf aad inc jns out push mov lret push cmp dec jle jmp cmc sub int3 add add cmp fimull inc jp cmp xor rolb cmp sbb mov enter movsl fistl inc jl out push xchg cld xor aas ja loop add pop xchg (bad) cld xor rorl cmp dec jle jmp push mov sti xor rolb cmp dec jle jmp jae inc mov imull cmp fimull inc jp out push test push xchg mov outsb lret fild add in mov add add arpl cmp xchg dec mov jg dec mov mov dec xorb std xor loopne dec cmpl fwait roll cmp test adc mov pop push mov cmc sub lret add insl mov scas in dec test int3 add insb mov scas in dec test (bad) std xor rorl cmp dec xorb lret imul ljmp popa xchg int3 add insl mov inc jns cmp mov iret add add mov pop push mov imulb popa xchg int3 add insl mov mov and ret sbb fmuls inc jp out push mov ljmp fs iret push cmp test adc mov sub leave pushl mov lods loope dec xorl sahf rorl aas jne loope dec cmpl fwait roll cmp mov sbb sub int cmp add add fistl inc jnp in and (bad) imull cmp cmpsl fcoml dec jge jmp hlt sub lret or stos loope dec xorl fwait rolb cmp dec andb and xchg push dec (bad) mov and (bad) add fistl inc jnp lock xchg (bad) cld xor rorb aas jne loopne dec xorb imull arpl cmpsb faddl add push mov imull xchg into add jo fistl inc xorl pushf rorl cmp dec jg ljmp gs adc mov sbb sub leave add jo fistl inc jnp in push test (bad) pushl inc js in dec test leave (bad) xor rorl je,pt fist repnz rorb cmp dec jle jmp hlt sub int3 add jo mov push mov lret push aad inc jbe call cmc sub cli mov add add es xchg enter mov xorl fwait push movsl sbb shrl (bad) or jl dec movsl pop push cmp les (bad) in add sbb fnstsw cwtl repnz cmpsb (bad) nop cmc pop shlb idivl ss pop test insb fimul daa popf adc (bad) jmp lods adc out jae inc scas adc pcmpeqb cmp je xor dec mov andb jecxz (bad) dec mov int3 sub add add dec mov sub test gs xor enter cmp adc sub outsl fnstcw cwtl cld mov scas shufps ljmp pushf add sub jl inc movsb or add (bad) notb and and stos or inc scas push jl dec mov movsb add lret jmp stos or leave sub (bad) lock mov jecxz inc mov jle cmp add fwait stc pop mov les (bad) repz mov sub lods or pop jbe inc scas push jl push lret loop cmpsl adc inc test js inc mov lcall inc mov mov push iret cmp (bad) pop mov jno sbb mov gs pop push mov iret and and sbb push add dec movsb add loope dec xchg add outsl movsl sbb cmp add stos loope dec cmpl cld xor rolb cmp negb and sti xor rolb dec xchg lret insb mov scas in push xchg cld xor rorl ds add dec out aaa outsb movsb ficoml inc jge call repz rorl je,pt loopne dec (bad) mov (bad) cli xor rolb cmp cmpsl fstl dec jle jmp cmc sub int3 add outsb mov mov movb add cld xor rorl aas jne loopne dec (bad) mov (bad) addr16 rorb jae,pt fist xorb imull aas jne loope dec cmpl stc das gs in push mov int3 add insb mov scas in push xchg int cmp dec (bad) mov enter lahf aad inc ja jecxz dec test enter mov mov sbb xor mov add add mov sbb mov enter sahf aam aas jne loop dec test cwtl int cmp fsts inc jl call sti xor aad inc jne loope dec (bad) mov (bad) sti xor roll cmp test adc mov pop push mov cmc sub lret add insb mov mov and ret arpl cmpsb fistl inc jl out push mov lret insb mov test mov and int3 add outsb add out push xchg lret add insb mov xorl cltd into add jo fcoml inc jge call cld xor rorl aas jne loopne dec (bad) mov and (bad) stc das gs adc mov sbb sub leave pushl inc jl ljmp arpl movsl fistl inc jl out push mov int3 add insb add mov lret jo add fcoml inc jge call imulb popa xchg sbb or sbb mov enter lahf (bad) or ja loop dec cmpl add inc jns in push xchg pushl inc jp in push xchg lret imul out push (bad) ret clc cs adc mov and (bad) imulb cltd into add add add adc mov and ret clc cs add ja out push xchg (bad) xor lahf aad inc jbe loope dec (bad) mov and ret stc das gs adc mov dec flds or sbb mov int3 add insl mov mov sbb mov lret imul mov and (bad) imull lahf aad inc ja loop dec cmpl std xor aam inc jbe jecxz dec test enter lahf aad inc js loop dec cmpl add add sub int3 add insl mov mov sbb xchg pushl insb mov mov sbb xchg rolb cmp fcoml dec test (bad) cld xor rorl je,pt loopne dec xorl cwtl into add add loop dec test (bad) cld xor aam dec jle jmp stc das fs adc jle fstpl push mov int3 add outsl movsl fistl inc jle jmp push (bad) ret stc xor add movsl fcoml dec jge cltd pop jnp inc lahf clc push mov xchg repz mov mov pop ret cli pop mov (bad) stc pusha les add add in dec xchg lret push aad inc ja loop dec (bad) mov ret stc cs into add outsl movsb fimull inc jnp out push mov lret imul jmp push mov imull xchg int3 add jo fistl dec jge call repz enter sahf aam jae,pt loopne dec xorl add add push xchg (bad) cld xor rorb aas jbe loope dec xorl cltd into add jo fistl inc jge out add (bad) sti jae imul mov inc movsb or sbb adc jp inc jge jmp imulb popa xchg int cmp (bad) inc jp in push xchg std xor rcll inc jl out push xchg push cmpsb fstl dec jle jmp imulb cwtl int cmp (bad) inc jp in push xchg xchg enter jns in dec test (bad) std xor rorl aas je loopne dec xorl lcall adc mov push push mov sti xor rorl je,pt loop push test (bad) cld xor rorb jae,pt fist jg ljmp bound cmpsb fcoml dec test (bad) cld xor rorl aas je fist jg jmp push mov clc sub cmp fcoml inc jl add and nop add cli xor xlat push inc jns in dec xchg (bad) sti xor rorb cmp dec jg ljmp arpl loopne dec (bad) mov and lret push (bad) or lods loope dec (bad) mov and ret cli xor rolb adc mov and (bad) imulb cwtl int cmp loopne dec add xchg int3 add insl mov mov sbb mov leave pushl lahf aad inc jbe loop dec cmpl add add xchg (bad) cld ret icebp es xchg (bad) std xor dec add sbb inc and rorb je,pt fist and ret stc arpl movsb (bad) dec test (bad) gs rolb cmp fistl inc jnp out adc and (bad) cli das adc inc movsb add adc ss jmp fldl pop xchg push mov mov mov inc cmpsl (bad) (bad) xor jns aas fwait (bad) pop mov cmp add inc mov xlat cmp add jne xor sbb cmpsl pop mov push mov jb xor dec cmpsl add in dec scas or fdivrl xchg hlt dec stos add mov ret and mov push lods or and fsubrs xchg inc movsb or (bad) ss clc pop ret es in push mov out popa lret je dec test pop mov jnp cmp lcall sbb jecxz stos pop insl (bad) es dec mov jnp add cmp cmp pop mov (bad) inc test clc arpl cmpsb fistl inc jge jmp cmc sub lret add imul jmp pop (bad) ret clc cs iret add adc mov push push mov lret add insb mov scas jecxz dec test ret bound test mov and ret bound movsb fimull inc jp in push xchg enter lahf aam or jne loopne dec xorl lahf aad aas add call repz lret push (bad) or sbb mov (bad) addr16 rorl jns,pt out push xchg leave pushl mov lods loop dec cmpl std xor rorl aas je fist and ret push jbe loope dec (bad) mov and (bad) cli das fs adc mov pop push mov imulb add add lret add insb mov mov adc mov push push mov lret imul loop dec xorl fwait roll cmp sbb (bad) imulb xchg int cmp (bad) inc jp in push test (bad) cld xor aam jbe,pt jecxz dec test (bad) cli xor (bad) or ja in push test enter jb fstl dec jle call hlt sub lret imul (bad) or ja out push xchg add jo ficom and ret stc cs cs adc mov and (bad) imull cwtl into or jns in push xchg lret imul jecxz push xchg add imul in push xchg into add jo fcoml inc jge call imulb cwtl int cmp fcoml dec jg ljmp arpl add add test mov add gs rolb cmp cmpsl fstl dec jle jmp imull cmp fcoml inc jge jmp imull arpl cmpsl fstl jg repnz leave (bad) xor mov lods loop dec test lcall adc mov and xchg lret push (bad) or ja jecxz push (bad) ret stc cs adc mov pop push mov cmc sub xchg int3 add outsb movsb ficoml inc jp add sbb xchg lret outsb movsb fist dec (bad) mov (bad) sti xor rorl aas je loopne dec xorb stc das fs sbb mov (bad) imul jmp imulb cmp fcoml dec jle ljmp arpl cmpsb fstl dec xorb add insb mov xorb clc arpl test adc jg in and (bad) add xlat push inc jnp ljmp mov mov and (bad) pushfw rorb jae,pt loopne push xchg (bad) clc xor roll cmp dec jg jmp push pop cli xor roll inc jns in push test enter mov lods jecxz dec test (bad) sti xor rorl aas je loope dec xchg rorl aas jne loope dec cmpl or mov sbb xor aad inc jns out add mov into add jb loopne dec mov cli xor aad inc ja jecxz dec test int3 add jno fstl dec xorb push je,pt loope dec test add jne loopne mov mov scas jecxz dec test (bad) sti xor rolb cmp dec jle jmp cmc sub int inc jns in dec test (bad) gs rolb cmp cmpsb fcoml inc jl out and pop add add das gs adc mov sbb xchg clc sub cmp (bad) inc jp in dec test (bad) gs adc mov sbb mov enter mov scas jecxz dec cmpl clc arpl movsb fimull inc jp in push test push je fist es xchg (bad) std xor aam aas je fist and ret bound add outsb mov mov sbb mov int cmp (bad) inc jns in add (bad) imull cwtl int cmp (bad) inc jns in push xchg (bad) xor lahf aam inc jne loopne push xchg cld xor lahf aad inc jbe loope dec xorl cltd into add inc js jecxz dec test (bad) sti xor xlat or sbb mov leave add inc jne loopne dec xorl add add and ret mov movsl or in push jbe clc lret adc int nop ljmp and mov mov and and into add outsb movsb ficoml inc jnp out push mov (bad) or jp out push xchg lret imul jecxz push xchg pushl inc js jecxz push xchg add outsl movsl ficoml inc jl out add (bad) cld xor aam aas jne loop add dec cmpl std xor aam inc jne loope dec mov roll cmp dec xorb cli xor roll cmp test adc mov add pop xchg enter lahf aam aas jne loopne push mov imulb xchg int cmp fistl inc jl call cmc sub lret add insb mov scas in dec test (bad) cld xor fldcw test (bad) std xor rorl aas je loopne dec (bad) mov and add add add add stc das data16 rolb cmp cmpsl fstl dec jg jmp push mov imull lahf aam inc jbe loope dec (bad) mov and ret stc xor roll cmp fstl dec jle jmp imull cwtl into add outsl movsb fistl inc jnp in and ret clc cs adc mov add xor rorb jae,pt ficom dec jg jmp push mov imull cmp loopne dec xorl fwait roll cmp fcoml dec jge jmp pop push mov imulb popa xchg int3 add insl mov xorb add imul in dec test (bad) sti xor rorl je,pt ficom and (bad) imull cwtl int cmp (bad) inc jg jmp push mov stc das fs adc mov push push mov lret add insl mov mov sbb sub leave add push xchg lret add insb mov scas in dec test add add enter lahf aad inc jne mov sbb sub fmuls sbb mov xchg lret add insb mov lods loope dec (bad) mov and ret bound mov lods loope add (bad) cli das gs or and pop xchg lret push aad inc jbe loope dec xorl xchg int aaa insl stos loope dec xorl lcall cmove mov sbb mov enter sahf rorl aas je loopne dec xorb cld xor roll cmp fcoml dec jge ljmp popa cwtl int cmp (bad) inc js jecxz dec test (bad) fs aad inc jne loop dec (bad) mov (bad) sub inc cmpsb add xor or pop lret (bad) pusha enter pop mov sahf add aaa lcall and mov repz test (bad) (bad) and add add dec mov mov dec mov jp push scas adc inc mov mov push mov dec mov jp dec mov jge dec mov and dec mov lret xor sub out mov scas adc jecxz cmpsb or fidivrl adc dec scas push xchg arpl aaa movsl adc mov lds test jnp dec mov out roll pop xchg add fiaddl and mov (bad) ljmp add fimull sub les stos pop xchg fmuls sub adc inc mov test fimull and inc mov nop cld gs aas test mov jmp adc sarb aad mov lret cmp mov fimul int mov xchg sti push and ljmp mov cmpsl pop mov imul iret add sbb dec mov jg dec add add lret add or sbb mov stos and xchg negb cmp adc lret pop (bad) jmp jmp mov mov mov mov lahf or lock pcmpeqw cmp popl imul int3 xor movsb or xor mov fs das (bad) and xchg movl adc jg jmp push mov clc sub add add outsl movsl fistl inc jl out push mov lret imul xlat ss aas pushf stc bound xchg out push mov jno cmp mov inc scas add cs pop dec (bad) mov (bad) cld xor rorl aas jne jmp push mov imulb fs iret add add loop dec (bad) mov and (bad) cli das fs rolb cmp fcoml inc jl out push xchg enter movsl fistl inc jnp out push mov lret add imul loop dec test (bad) std xor rorl jae,pt fist daa pop xchg enter sahf rorl aas je fist and ret stc cs adc mov sbb sub lret jae loope dec (bad) mov and (bad) data16 roll cmp fcoml inc jl out push mov int cmp (bad) inc jp in push xchg imull aaa insl mov scas in push add add cwtl int cmp jbe loope dec xorl lcall cmovp mov stc das fs jecxz dec test (bad) (bad) xor lahf aad inc jne loope dec xorl mov mov pop push mov imull xchg int cmp (bad) inc jns in dec test (bad) push jp jmp cmc sub xlat or sbb mov add std xor aam aas je loopne cmpsl loopne dec xorl xchg int aaa outsb mov mov and ret gs rolb cmp test mov and ret clc cs adc mov pop push mov cmc sub rorl inc jnp call imulb cltd into add outsl movsb test lret sub add (bad) imull out xor rorl aas je fist jg hlt sub leave (bad) xor mov stos add add adc add pop xchg enter lahf aad inc js jecxz dec cmpl stc cs iret add jne loopne dec xorb imulb xchg lret add imul loop dec (bad) mov and ret arpl movsb fimull inc jnp in and (bad) imull cwtl int aaa insl movsb (bad) inc jns in push test (bad) gs rolb adc mov pop push repnz fistl inc jnp out push mov add add mov scas in dec test (bad) cli das fs adc mov and (bad) cli das fs adc mov sbb sub leave pushl insb mov xorb imulb xchg int3 add insb cmpsl fstl dec jle jmp cmc sub lret add imul add push push mov leave pushl inc js in push xchg rorl je,pt fist jg mov pop push mov clc sub cmp (bad) inc jns in dec test (bad) cld xor rorl aas jbe out push xchg (bad) cld xor rolb cmp dec xorb cmc sub rorb cmp dec xorl lahf aad aas jns in push xchg (bad) xor aad aas jne jecxz dec test lret outsl movsl fcoml inc jle jmp (bad) xor lahf aad inc jne loopne add dec xorl cwtl into add outsl movsl ficoml inc jnp out push mov add xor xlat or jnp out push (bad) ret clc xor aad inc ja loop dec cmpl stc das pushfw roll cmp jns out push xchg enter sahf aam aas je in dec test (bad) gs roll cmp cmpsl fstl inc jge jmp imulb pushfw roll cmp dec jg ljmp gs rorl je,pt loopne dec xorb imull xchg int3 in (bad) mov (bad) pushfw rorb cmp dec xorb add outsb movsb ficoml inc jnp out push mov lret add imul loopne dec xorl cwtl int cmp fmuls inc jle ljmp pusha xchg lret add insb mov lods loope dec (bad) mov and js jg cld xor roll cmp dec test into add outsl movsb fimull inc add in dec test (bad) std xor movsl fcoml inc jl out push mov leave (bad) xor aad inc jne out push xchg std xor aam aas je fist jg ljmp pusha xchg xchg int3 add insl mov scas in push xchg push cmp fstl dec jle jmp push mov imull xchg adc gs and or xor cli push mov jp mov ret sbb fisttpl add ret xor pop lock shrb adc popa into cmp fimul sub imull push roll xor sbb ret ss cld pop les pushf or dec mov loopne mov sti insl fcompl push (bad) xor jno pop fistl sub enter mov jo push les js mov lods add cltd adc popa roll ds xchg or ja pop lret sbb add shrl cmc pop int3 cmp out push mov int cmp (bad) inc jnp out push mov int3 add jbe loop dec cmpl stc xor rolb cmp dec jle jmp clc sub cmp fimull inc jnp in push xchg int cmp (bad) inc jp in push test (bad) cld xor aad aas jne loopne dec (bad) mov ret stc arpl stos fist add and (bad) imulb pusha xchg int cmp fmuls inc jns in dec test (bad) cli das pushfw rorl cmp dec xorb std xor sahf aad inc jbe in dec test (bad) cld xor rorl aas je fist hlt sub lret insl mov mov pop push mov imull fs into add outsl test adc mov push push mov lret add imul in push xchg add jb ficom dec add jmp cmc sub int3 add outsl movsb fimull inc jl call cmc sub int3 add outsl movsb fimull inc jnp out push xchg enter mov lods loope dec xchg add adc add adc jg jmp push mov imull lcall sbb mov enter mov scas in dec test (bad) push jae fstl dec jle ljmp push add add loope dec (bad) mov (bad) stc das fs adc xorb imull imul xchg push mov jo and inc jnp out push mov int cmp fcoml mov enter cmp cmc push lods push mov insl shrl mov dec mov xchg negl imul mov inc mov mov mov ficoml push xchg pop leave daa (bad) or dec add mov xchg inc lods ss sti data16 cmp mov mov jne xor sbb cltd add in int mov out pop leave cmp and cmp add fwait repz scas adc push shrl cli pop (bad) sub and xchg or das mov ret sub mov push mov mov mov jl dec mov and lods adc add and mov add add sub (bad) hlt pop mov mov mov mov mov mov jl dec scas adc loop mov jg inc stos adc inc lods adc cmp add cmp lcall gs xor negl sub cltd add das cltd add xor xchg sti (bad) (bad) sub xchg clc pop shlb in dec mov jle dec mov sub mov sub jmp mov add add jle cmpsb fstl dec jge call hlt sub lret add inc jne loope dec xorl xchg lret add js in dec test (bad) stc das fs into add outsl movsb fimull inc jns in dec test (bad) gs adc mov repz lret add insb mov lods loop dec (bad) mov les sub pop mov and ret clc sub cmp loop dec addl mov (bad) cli das gs adc mov sbb mov enter lahf aam inc jne loopne dec xorl lahf aad inc jne loopne dec xorb imulb popa xchg lret add imul jecxz dec cmpl cli xor xlat push inc js jecxz dec cmpl cld xor rolb cmp dec jge call repnz enter mov stos loope push mov cmc add pusha xchg lret push (bad) or stos loope dec xorl xchg int cmp xlat or push push mov rorb aas ja add and (bad) cmc sub cmp dec jle ljmp pusha xchg int3 add insb mov scas in push test add outsl movsb fimull inc jge call cmc sub lret outsl movsb (bad) inc jns in push xchg iret add outsl cmpsl fstl dec cmpl xchg int3 add insl movsb (bad) inc add pop cli xor roll cmp stos loopne dec xorl pushf roll cmp dec test iret add adc mov sbb sub leave (bad) xor lahf aad aas jne loopne dec xorb clc cs pop dec test (bad) sti xor roll cmp cmpsl fcoml inc jl call repz push fnstcw std jno mov push mov je add aaa xchg cmc push mov lods cli xor rolb cmp fstl dec jle jmp cmc sub xchg add or je fist and ret push mov js inc popf cld shlb xor fstl inc jge call repz leave pushl inc jne loopne dec xorb stc cs xlat or je loop dec cmpl int cmp aaa iret mov sub lret push aad inc jbe loope dec (bad) mov add pop cltd adc (bad) imull cmp fmuls inc jns in dec test (bad) sti xor roll cmp cmpsl fcoml inc jl out push mov roll cmp cmpsb fistl inc jl out push mov lret insb mov lods loop dec cmpl sti xor rorb cmp test lret fistp or pop lds ret stc das fs roll scas pop jg add popa xchg aas mov scas out and xchg push insb fdivs lods loop dec test (bad) std xor aam inc jne loope dec (bad) mov and (bad) cli xor rorl je,pt loope dec cmpl add outsl movsl ficoml inc jnp out push xchg (bad) stc cs rolb cmp fistl inc jnp out push xchg (bad) sti xor rorb jns,pt in push xchg mov lods loop push xchg (bad) std xor sahf aam aas jne fist dec (bad) mov movb add xor aam inc jp in push xchg (bad) cld xor rcrb or faddl std pop scas or sub and (bad) xor jns cmp add push outsb enter inc movsb or cmp jb xor imul inc lahf sti push mov outsb lds sbb in mov mov test je inc mov shlb jecxz popf add cs add push outsb cli add add cmp ret fist cltd jmp sub test ret arpl movsb fimull inc jnp out push xchg (bad) cld xor fistl inc jl call cmc sub imul xorl cltd iret add outsl movsb fimull inc jp in push mov rolb cmp data16 and xor rolb cmp dec jg ljmp bound mov add or sbb mov lret add insb mov lods loop dec cmpl stc das gs adc mov add pop xchg enter sahf rorl inc jp in push xchg (bad) std xor aam inc js jecxz dec test (bad) data16 rolb cmp cmpsl fstl movsb adc pop fcoms adc xorb imull xchg int3 add insl mov and xchg notl xor add push imul sahf add add xor lcall js aaa movsl or dec mov test (bad) imulb popa xchg aam cld cwtl aad inc ja loop dec cmpl cli xor fistl inc jnp out push mov leave pushl inc jbe loope dec test (bad) cld xor rorb cmp dec jle jmp cld xor aad inc jbe loop dec test (bad) cld xor rolb cmp dec jg out and add (bad) std add jo fistl inc jge out and adc clc dec movsl (bad) push sbb cs dec mov xchg icebp push lods movd cmp cmp push xchg or stos loopne dec xorb clc cs iret add jo ficoml add mov (bad) stc das gs adc mov xor jecxz dec test (bad) sti xor rolb cmovne in out shrb inc fwait icebp dec loop add add insl lds test pop rep fistl inc jl out push mov lret imul in push xchg (bad) xor lahf aad inc jbe loope dec cmpl add inc js jecxz push test (bad) cld xor aam aas jne loopne dec xorl fwait add cmove add ds add inc mov xchg add es repnz adc jg ljmp add pusha xchg int3 add imul loope push (bad) ret bound movsb fimull inc jp in push test (bad) stc cs lods jecxz dec cmpl stc xor aad inc jbe loop dec (bad) mov and ret bound jne loopne dec xorb imulb pusha xchg lret add insb mov lods jecxz push mov imulb popa xchg int3 add fstpl push mov lret push aad aas jbe add add sbb mov (bad) stc cs sbb mov jl cltd push sbb xchg icebp push mov jb sub out mov jno sub out push iret jg xchg rorb aas jne add sub lret add insb mov scas in push xchg lret add dec cmpsb add adc leave and xor push mov in sub cmp cmpsl fstl dec jg jmp push (bad) ret clc cs adc mov in add pop xchg lret imul jecxz dec test int cmp (bad) inc jns in push test add add adc mov sbb sub lret imul call cmc push pop sti xor rolb cmp fistl inc jl out push xchg leave pushl lahf aam aas je loopne dec xorb std xor rorl je,pt ficom dec jg ljmp pop xchg lret add aas jne loopne dec xorl lahf add adc mov sbb xchg (bad) xor js cs into add outsl movsb fimull inc jnp out push test (bad) sti xor xlat or pop dec (bad) mov and ret stc das fs adc scas in push xchg cwtl into add outsb movsb (bad) inc jp in push mov imull xchg int cmp (bad) inc js jecxz dec cmpl add aaa insl mov lods loop dec cmpl sti xor (bad) or ja loope dec (bad) mov and ret clc cs iret add outsl movsl ficoml inc jnp in push xchg leave (bad) xor rorl jae,pt dec rclb and ret clc sub cmp (bad) inc jns in dec test (bad) or stos loope dec xorl lcall sbb mov (bad) cld xor rorb cmp dec jg jmp push mov leave (bad) xor aam aas je fist xorl sahf aam inc jbe loopne dec xorl cltd push (bad) xor jae,pt fist es xchg (bad) std xor fstl dec jle jmp hlt sub fmuls repz mov push xor mov and (bad) cli das data16 roll cmp cmpsl fstpl push mov shrl and ret aaa xchg out dec test add add jp aas cltd repnz stos or inc test (bad) push mov mov jnp inc cmpsb add (bad) add ds hlt pop mov iret xor insb lret clc push scas or cmpsb adc icebp dec mov xchg repz mov into cmp and imull cmp stc gs cmp (bad) addr16 out fimul pop daa in leave jb inc jbe loop test push je xor push mov jnp aaa xchg out dec lods push jbe aaa pushf lcall pop mov mov out push mov lahf and xchg dec lods or xchg fcoml dec jge jmp imulb xchg int3 add outsb mov mov sbb sub rorb inc jbe jecxz dec cmpl sti xor rorl inc js in dec test (bad) cld xor rorl jae,pt fist xorb pushl inc jbe loop dec (bad) mov and pop cli das add add cmpsb fcoml inc jge call imulb xchg int cmp ficom jg jmp push mov cmc sub int cmp fldcw ja jl out push mov lret add insb mov xorb add imul loop dec cmpl cli xor rolb cmp dec xorb imulb cmp (bad) inc jle ljmp pusha xchg lret add insb mov pusha loop push add xchg lret imul lock dec test into add adc mov sbb mov (bad) sti xor roll cmp dec xorb imulb xchg int (bad) or in push xchg enter lahf aam inc jne loop dec (bad) mov and ret clc cs adc mov pop push mov sti xor (bad) or lods loope dec xorl cwtl into add cmp fimull inc jp in push (bad) push mov fwait cmc pop add cs dec test shlw push fldl add roll pop mov dec mov xor into cmp scas adc ljmp lret (bad) call adc and mov mov int scas mov cltd add cmp adc push mov or dec mov mov jo dec mov fildl sbb popf or push add (bad) aas stos adc ljmp in cmpsb and cmpl cmpsl fstl dec jge call aam push jl cs inc popf stc push incl lods jecxz dec test (bad) cli xchg sahf fcomps dec test (bad) cld xor rorb je,pt loopne push add in xchg notl or aad xchg cmc push mov in mov jno sub and aas cmpsl adc faddl or movsb or xor add add pop mov ret out mov stos push jle inc stos push insb enter pushf push jle push loope stos sbb dec scas or sbb jo cmp xchg (bad) imul test ret fidivrl cltd negl xchg pop into xor jo das mov dec mov jns cmp pop jae cmp jp sub loop mov shrb repz faddl or lret in mov lods add int3 daa xchg add in push mov jne sub sub shll lock mov mov mov jae dec mov mov dec mov enter push scas punpckhwd sub movd es cmp jg inc cmpsb or fist sbb ret out mov lret xor mov xlat dec mov leave cmp dec stos or xor nop repz lods push insb int3 sub out cmpsl add cmc pop add add xor sub lods adc cmp xor test ret sub movsl adc imul test test jle push ret repnz (bad) cs dec shrb out bound mov mov inc or xor adc pop ror push adc mov in js mov mov mov xchg ljmp test fist push test mov jecxz add aaa divl mov mov int sub add fmuls outsb (bad) jno out adc dec outsl add xor fist jne cmp ja mov (bad) mov push push mov mov icebp jbe jmp pcmpeqw mov lcall pop lds cmp push nop push lea popf out pusha loope add popl inc ljmp mov add push (bad) adc ficompl adc out pop add cs out dec ficompl inc mov (bad) sub add (bad) (bad) (bad) std xor push mov pop int3 jne pop cli jo xchg (bad) sbb xor rolb push int hlt js test fstl mov jl push js jecxz dec cmpl add outsl movsl ficoml inc lcall mov ds sti push mov jp xor bound (bad) cmp repz insb (bad) push sarb mov fwait stc pop mov mov add add sub cmc pop int3 cmp jecxz mov fdivrs pushf add ret sub dec scas adc flds adc fdivrs and or cmp movsl adc out stos or cmp mov jg push xchg or pop sarl pop xchg jl insb fldl vmwrite push ret or push mov sarl sbb stc popa movb xchg (bad) addr16 cmp mov xor add cmp dec mov in les movsl or dec mov roll sbb mov (bad) xor scas pop xchg shll add push mov mov arpl inc mov xchg add inc mov xchg push jp insb fildl pop sub lret (bad) call or push mov ret sub dec mov iret cmp mov xchg (bad) cmp jecxz int3 aas mov add es or dec mov mov pop into aaa movsb or xor mov jl dec mov jecxz ret sub add mov xlat dec mov out pop rorl and stos push (bad) out arpl inc scas and stc push dec lods sbb std push insb roll adc repnz xor mov mov pop lret pop xchg push push les test jmp pop js push int3 mov leave xor add movsl adc in mov (bad) cs add ds adc dec mov test pop iret sub loop cmpsl lcall sub jecxz xchg jmp pushf notb push jge aas fwait lock xchg sub loope sub rcrb popa aam rolb jo jle inc test inc cli je jno add mov push aam into dec rclb outsb vmread movsb push mov lret sub jo dec ficom dec (bad) push aam aad jmp lret inc rcll add loope add push addl leave dec fistp push or xchg setae mov lret inc loope into nop add test mov dec sarb fs (bad) add jbe movsb and sbb mov iret push cmp test adc popa hlt jle nop fstl and (bad) pushfw rorl aas jne mov cli xor rorl inc jne loop dec test (bad) std xor mov scas in pop xchg lret insb mov mov add sbb mov int3 add outsb movsb (bad) inc jnp out push mov leave pushl mov mov pop push mov cmc sub int add lods loope dec cmpl cli xor roll cmp dec jg ljmp bound test adc jg ljmp arpl ja loop dec test (bad) cld xor aam aas jne loope dec (bad) mov and leave pushl inc js jecxz add dec test (bad) cld xor rorl aas jne loope dec (bad) mov (bad) pushfw rorl jae,pt fist sub lret push aad inc jbe loopne dec xorb imulb xchg int3 add insl mov lods jecxz dec test lret insb mov mov sbb mov enter lahf aam inc jne loop dec orl jb fist and jg in and ret arpl add into add outsb movsb add sbb mov (bad) push ficoml inc jl out fwait sbb pop cli das gs rolb cmp jecxz dec test (bad) sti xor or pop movsb (bad) roll ss mov mov sbb mov jno loopne dec (bad) mov into add outsl movsb (bad) inc jnp push shrl (bad) xor mov lods jecxz dec test (bad) sti xor rorb cmp dec xorb pushl add aas jbe loope dec (bad) mov and ret stc das mov add outsb movsb (bad) inc jp out push test (bad) sti xor or scas in push xchg mov dec cmpsb or and dec cmpsb add flds adc xor or xchg inc test arpl sub in inc test je inc scas and mov lahf pop outsl fdivrl or inc scas sbb aas lods adc ret arpl xorl (bad) ret stc das gs adc mov push push mov int3 add insl mov scas jecxz dec test int cmp fimull inc jnp mov push push mov add xor or jne sub jne sub nop out dec (bad) and gs xor add xor mov pop insb lret and out test cltd negl push sub mov sahf jmp add sbb test mov outsb iret cs dec mov jae xor fild or sarl mov fwait sbb fiadd or sub inc cmpsb push outsb int popf add (bad) mov lahf or in aas xchg jecxz out sub xchg int cmp fcoms dec test cwtl into add outsl movsb ficoml inc jl out push mov lret imul in dec test (bad) mov adc add jns xor repnz cmpsl adc popa add dec out jne pop or xor ret pop sbb in sub cmp fistl inc jl out push mov enter lahf aam inc jne loopne dec xorb imull cmp loopne dec xorl sahf rorl je,pt loopne dec (bad) mov and (bad) cli das fs adc mov sbb cs rolb add cmp fcoml inc jl out push mov imulb xchg int3 add insl mov mov push push mov lret imul dec mov jg dec (bad) mov cwtl into add outsl movsl fistl inc jl call cmc sub int cmp ficoml inc jnp call imulb popa lahf aad inc jbe loopne dec xorl cwtl into add outsb movsb fimull inc jp mov and ret arpl mov scas in push mov add add imulb xchg int3 add insb mov lods jecxz dec cmpl cld xor rorb cmp dec jle jmp cmc sub roll cmp cmpsl fstl dec jge call imulb popa cwtl int aaa insl mov scas jecxz dec test (bad) cli xor rorl cmp push test (bad) sti xor roll cmp test adc mov pop push mov into add outsl movsb (bad) inc jge jmp push mov imull popf rorb add cmp dec jle jmp leave pushl inc js in push xchg (bad) xor sahf aam aas je fist dec xorl sahf aam inc jne loopne dec cmpl cld xor rolb cmp sbb mov leave add inc jp in and ret gs rorb cmp dec (bad) mov and (bad) push jbe loope push test leave (bad) xor lahf aam inc add add out push mov leave pushl lahf aad inc ja in dec test (bad) sti xor aam aas jne loopne dec (bad) mov leave pushl mov scas in push mov leave pushl inc jbe loope dec test enter mov scas in push (bad) (bad) cld xor aad inc jns out push mov popf aam aas jne loope dec xchg lret add outsb movsb ficoml dec (bad) mov int3 add aas jne loop dec test add outsl movsb fistl inc jl out push mov lret add insb mov xorb std xor fcoml cmpb add outsb movsb fsts inc jge jmp sti xor fistl inc jge call imull fs sbb std xor inc cmpb add jb loope push mov roll cmp dec jg in and mov stc cs rorb inc jnp out push xchg rorl je,pt jecxz push test into add outsb movsb (bad) inc jnp jmp stc cs rolb cmp sbb mov enter mov mov sbb pop pop sti xor rorb cmp dec xorb imull inc jbe out push mov imulb cwtl into add jno fstl dec jle in and enter mov mov int3 add inc ja out add ret (bad) cmp push dec test add sbb mov into add jae loope push xchg int3 add jo fstl dec jg icebp es cwtl rorb cmp dec (bad) or sub dec test int cmp fist dec xorl popf (bad) cmp in push xchg (bad) xor aam aas je fist and ret gs rolb cmp test mov and add stc das push fmuls sbb xchg add imul add and sar fs iret add outsl movsl fistl inc jl out push mov rolb cmp test adc and ret arpl movsl fistl inc jnp call imulb xchg int cmp jbe in push (bad) ret clc cs iret add outsl movsb fimull inc jp in push xchg lret add outsb movsb (bad) inc jnp out push mov int3 add insb mov mov and ret clc arpl stos fist jg push mov into push cmp ficom dec jg jmp push mov clc cs movsb ficoml inc jnp out push mov int3 add insl mov mov sbb mov lret add outsl movsb fimull inc jp in push xchg add ja xor sub cltd rolb cmp test out push xchg lret insb mov add xlat or and nop (bad) pushfw roll cmp cmpsl fstl dec jle jmp imull cmp (bad) inc jns in push test (bad) cld xor jo loope dec xorl cwtl into add insl mov mov push push mov lret add imul loop dec xorl mov lods loop dec (bad) mov (bad) popfw aad aas jbe loope dec (bad) mov and xor rorl je,pt out push mov lret imul loopne dec (bad) mov (bad) cli das fs adc mov pop push mov xlat or js jecxz push xchg pop ret dec fbstp cltd repz lahf sti pusha shlb flds inc stos adc dec mov jg dec test lret add dec jg in and (bad) cli xor rorl je,pt loopne dec cmpl sti xor rorb cmp add add adc and lret add aas jne loopne dec (bad) mov and ret stc das gs roll cmp cmpsl fstl dec jg jmp push (bad) ret arpl cmpsl fstl dec jle jmp pop xchg enter mov lods loop dec cmpl push scas adc xor sbb dec out sub lret outsb movsb (bad) inc jl repz lret insb mov mov sbb mov enter sahf aam aas jne loopne dec xorb add add ret arpl stos loope dec cmpl cli xor rolb cmp cmpsl fstl dec jg ljmp pusha xchg int3 add aas jne loopne dec xorl sahf aam aas je fist and ret stc cs into add jno fcoml inc jl call lahf (bad) or ja loop dec cmpl add insl mov scas in push xchg (bad) std xor aad inc rcrl es dec mov add jae sub jg push mov scas or and add and xchg in inc movsb add pop jns inc stos sub xor jnp cmp and stos push jno loopne test xchg hlt push mov outsb ret push jle mov xchg negb and mulb das xchg clc popa lds jge inc mov xchg jmp and xor sub sti fs xor push stos pop jns push scas movq cmp xchg pop mov jns cmp inc mov xor (bad) xor or dec mov mulb inc mov pushf or push lods cmovp mov add insb mov scas in dec test enter sahf rorl je,pt fist xorl cltd iret add outsl movsl ficoml dec xorl lcall cmovne out push xchg (bad) xor lahf aad inc add jne loope dec (bad) mov lret add outsb mov scas in push test ret arpl cmpsb fcoml inc jge out push mov leave add insl mov scas jecxz push mov lret insb mov scas in push test (bad) (bad) xor aam aas jne loope dec xorl cltd rorl inc jne loopne dec xorl xchg int aaa insl mov scas in push xchg add (bad) std xor aam jne,pt loopne push mov add inc jbe loop dec (bad) mov and (bad) cld xor rolb cmp dec xorb clc arpl scas in dec test (bad) cld xor rorl jne,pt loope dec xorl cwtl iret add jno fistl inc jnp call (bad) xor aad inc jne loopne dec xorb leave pushl inc js jecxz mov add add enter lahf aad inc ja loop push (bad) ret clc das gs rolb cmp fistl inc jp in push xchg (bad) std xor rorb jae,pt ficom jle in and ret arpl lods loope dec xorl lcall adc mov sbb mov leave add inc js loop push mov cmc sub lret add insb mov stos loopne dec xorb cmc sub lret add insb mov xlat or js jecxz push test into add outsb movsb (bad) inc jns jecxz dec cmpl clc dec mov cld mov test adc mov sbb sub enter cmpsb fstl dec jle call hlt sub leave (bad) xor rorl jae,pt mov sbb mov (bad) cld xor roll cmp cmpsl fstl inc jge out pop pop cli das fs adc mov sbb mov leave test or imul add add scas in push xchg roll cmp test adc mov push push mov leave pushl lahf aad inc jbe loope dec xorl cltd into add outsl movsl ficoml dec cmpl cltd into add outsl movsb fimull inc jns in dec test (bad) pushfw rolb cmp cmpsl fcoml inc jl call cli xor roll cmp fistl inc jl out push xchg std xor rolb cmp test add adc mov sbb sub leave add outsl movsb ficoml inc jnp out push xchg (bad) cld xor rorb je,pt fild sbb xchg (bad) cld xor rolb cmp cmpsl fcoml inc (bad) mov (bad) sti xor rolb adc mov sbb xchg pushl lahf aam inc jne loopne dec xorb sti xor rolb cmp fcoml inc jge call repz enter sahf rorl jae,pt ficom add dec xorl cwtl int cmp fist and (bad) imulb cmp fmuls sbb mov (bad) cld xor rolb cmp test adc mov daa pop xchg (bad) cld xor aam inc jbe loope dec test mov jle ljmp pusha xchg int cmp ficom dec jg scas sbb insb (bad) push mov (bad) jmp movsb or imul jne,pt loopne dec cmpl or jae ficom jg ljmp fsubrl test mov and sar arpl movsl fistl inc jnp out push xchg (bad) xor lahf aam aas je jmp sbb aaa cltd clc popa (bad) cmp ja aaa movsl sbb dec cmpsb or sub (bad) mulb xchg dec lods or push cmpsl stc dec lahf repnz xchg ljmp inc mov sub pop jl xor cmp xchg cld push inc mov mov jb cmp sub outsb jmp push clc cmp mov push cwtl daa call retw sub aaa mov ret aaa cmp stos xor push mov jle inc or aas pushf repnz stos or inc movsl push push gs xor sbb or bound movsb fstps dec cmpl add icebp es xchg (bad) cld xor rolb cmp cmpsl fstl inc jge out push mov lret push (bad) or mov push push mov lret push aad aas jne loopne dec xorb imulb xchg int cmp fmuls inc js jecxz dec cmpl add insb mov lods loop dec (bad) mov and ret stc cs iret add jo fimull inc jnp out push mov lret add jno fcoml inc jl call repz lret add outsb mov mov sbb mov add (bad) sti gs fs aad inc jbe loope dec cmpl mov scas in pop dec cmpl cli das gs adc jg ljmp popa xchg int je,pt fist xorb imulb xchg adc fidivl xchg inc mov mov xchg notb sbb sti outsl int xchg cmp jl inc stos pcmpeqb cmp cmp mov xchg negb inc add mov pop xchg lret add insb mov mov (bad) imul test (bad) std xor aad inc jbe loop dec test (bad) cld xor ficoml inc jnp out push mov int3 add outsb movsb fimull inc jle jmp clc arpl js jecxz dec test enter cmpsb fistl inc jl call cmc sub int3 add insl mov out push mov jle add loope lahf adc sbbb cmp push mov divb insb mov lods loop dec (bad) mov ret clc arpl movsb fimull inc jp in push test (bad) cld xor rorb jae,pt out push xchg std xor rorl jae,pt ficom jg jmp push mov imull cmp fcoml inc jl call repz iret add sbb (bad) std aaa insb mov mov push push mov imull add shll fild or push int cmp push xchg imull xchg int cmp fmuls inc jns in push test (bad) cld xor rorb jae,pt fist add xchg leave add outsl push scas inc cmpl add mov stos loope dec (bad) mov enter lahf aad inc ja loop dec test into add outsl movsl fistl inc jnp out push mov lret add insb mov scas jecxz add add mov jnp rcrb insb (bad) sub imull das xchg add inc stos adc xor add ljmp inc lods sbb cmp mov sub ficom push mov imulb cwtl into add outsb movsl ficoml inc jnp out push mov lret add insb mov mov sbb mov jmp inc ja loop dec (bad) mov and (bad) clc cs iret add outsl movsl fistl inc jl out push xchg add lret push (bad) or stos loop add cld xor roll cmp dec jle jmp cmc sub lret add insb mov lods jecxz dec cmpl xor loop dec mov clc arpl cmpsb fcoml inc jge jmp imull cmp fistl inc jnp call hlt sub lret insb mov mov pop push mov imulb cltd into or dec in outsb mov push mov add add xchg repz scas push jb (bad) rolb je,pt fist sub int3 add insl mov scas in push xchg cld xor aam aas je fist jg ljmp pusha xchg lret add imul es xchg enter lahf aad inc jbe loope dec (bad) mov (bad) cli das gs adc jg jmp push (bad) (bad) insl mov (bad) mov ret stc cs iret add adc loopne dec add (bad) mov and (bad) cli das gs jmp fwait adc in push mov mov dec cmpsl cld pop mov cmpsl or sub pop mov xchg (bad) nop pop jb dec mov scas lock popf rorb cmp test adc mov and sar arpl mov scas in dec test (bad) sti xor rorb cmp dec cmpl cli xor rorb cmp dec jle ljmp sub int3 add insl mov scas jecxz dec cmpl pushl lahf xlat or sbb mov enter popf aam aas je loopne dec xorb imulb xchg int cmp ficoml and popl int adc arpl cmp dec xorl add inc jbe loope dec cmpl add outsb movsb fimull inc orb xchg int cmp ficoml inc jnp call hlt add sub int3 add outsb movsb ficoml inc jnp out push mov imull inc ja loope dec (bad) mov (bad) cld xor rorl aas jne loopne dec xorl popf rorl je,pt fist and lret insb mov scas jecxz push test (bad) std xor aam aas je loopne dec xorb (bad) mov test jae mov pushf rorl cmp dec jle stos xlat inc in daa pop xchg leave add inc ja insb xor cmp fcoml inc jge jmp add insl mov lods jecxz add (bad) imull xchg int cmp js cmp push ret sub push mov xor int3 cmp test hlt imul mov xchg cld sarb mov jns dec mov sarb (bad) out mov mov outsb int cwtl clc push mov mov pop ret and out pop ret sub negl xor mov and test test push mov iret movsb or sbb lock mov jge inc sahf add sbb test (bad) addr16 nop cmc loope mov jge inc mov mov dec scas pop jg or loop cmpsb or adc inc lods pop xor into cmp mov out lds add sub push jae dec mov loop roll xor mov fmull add sbb add add fist cmpsl adc std imul or pop les sahf or mov xchg sarw cmpsl adc in pop mov ficom xor mov fadds sbb popf add mov fild sbb and dec mov mov pop ret ss add mov inc test jne aas mov stos or out push mov lds xor lahf or dec mov add xchg dec mov int lahf or dec mov jg dec mov (bad) lock cwtl cld pop mov rolb and mov cltd hlt pop mov mov push pop mov sbb xor xor (bad) out dec mov xchg cld pop mov movsl add je dec shrl mov pop movl xlat cmp sub and (bad) sarl mov mov xchg (bad) xor add imul xorl xchg int3 add outsb mov mov (bad) cli das fs adc mov sbb xchg add sub adc sub mov push mov call ret loopne xchg out dec cmpsb (bad) push mov push das nop in push mov pop fistpll mov fimul xor cmp imul fmull and add add xor jno xor clc push mov sarb cmpsb sbb xor stc outsb call fdivs stc pop mov lcall push mov jbe cmp add sub mov mov pop (bad) cs cmc insb fisttpll test push jbe pop sarb cmp loop scas adc adc fisttpll mov cmc addr16 mov cwtl or pop into cs cli pop mov (bad) xor add xchg ljmp (bad) cmc push mov jg popa lds mov int mov out lret dec les lods sbb ret ljmp cmc imul xor repnz aaa pushf add push jnp dec ret das movsl adc and or sub sbb fistl and cli imul adc xchg repnz mov lds xchg hlt pop shlb negl es add cmp add add (bad) les jle dec lods sbb xchg pushl inc mov dec mov xchg add les xor rcrl lock mov aad lahf push insl fisttpll sbb add and out cwtl notl ja dec mov mov jbe push mov imull cmp fcoml dec jge jmp cmc sub int3 add xchg lret insb mov mov (bad) cli das fs add adc mov push push mov lret add outsl movsb ficoml inc jnp out add (bad) sti xor cmove out push xchg lret push (bad) or ja loop dec cmpl sti xor rorb inc jne loopne dec xorl mov lods jecxz push xchg enter lahf aad inc ja jecxz dec cmpl cli xor mov mov pop push mov clc sub cmp fimull add mov sbb mov lret imul jecxz dec test movl cmove out push xchg (bad) std xor aam inc js jecxz dec test (bad) addr16 aam inc ja in dec mov cmc sub into add outsl movsl fcoml dec jg in and (bad) cli das gs adc mov and ret clc sub cmp add and ret clc arpl scas in push mov add mov leave pushl insl mov mov and sar fs iret or jbe loope dec (bad) (bad) imull xchg rolb aas ja in push mov xchg add (bad) or js jecxz dec xchg (bad) std xor aad inc ja in dec test mov stos loope dec test (bad) std xor aad inc jne loope dec cmpl sti xor rorl aas je fist or and das mov inc mov add arpl ficompl dec test add insl mov mov sbb mov add inc ja jecxz dec test (bad) gs rolb cmp dec xorl cltd iret add adc add sub int3 add outsb mov mov sbb sub int3 add insl mov scas jecxz dec cmpl (bad) xor (bad) inc jnp out push xchg add iret xor jnp inc fwait repnz add or je fist pop push mov cmc xor mov jle jmp imulb pusha xchg int3 add insb mov mov sbb sub lret add imul in dec test lret add insb mov lods loop dec cmpl cli xor roll cmp dec jle jmp cmc sub lret add dec xorb stc add fs iret add jo fistl inc jl out push xchg lret imul loope dec cmpl movsl ficoml inc jnp in push xchg (bad) std xor aam aas je fist jg jmp push mov imull xchg int jae,pt fist adc out lods in push mov xor aam inc jbe jecxz dec xchg add insb mov scas in pop xchg (bad) std xor aam adc mov add push push mov lret imul loop dec test (bad) std xor aad inc jne out push mov leave add push aad inc jbe loopne dec xorl cltd iret add adc mov sbb sub roll cmp cmpsl fstl dec xorb cmc sub lret add outsb mov mov sbb mov enter sahf aam aas jne in push mov lret add add dec xorl fwait roll cmp cmpsl fcoml inc jge call hlt sub lret add jno fstl dec jle jmp imulb xchg into add outsl movsb ficoml inc jp in push xchg int3 add insl mov scas in dec test add jno fstl dec add nop (bad) sti xor rolb cmp dec jle call hlt sub lret imul ljmp arpl add cltd iret add outsl movsl fimull inc jnp out push xchg cld xor rorl jae,pt fist and ret push fmuls inc jns in dec test enter lahf aam inc jne loopne dec xorb imull cmp fistl inc (bad) mov (bad) cli das gs rorb inc jbe mov push push mov int3 add outsb movsb fsts inc jnp call hlt sub lret push (bad) adc mov sbb imulb xchg int3 add insl mov scas in push xchg (bad) std xor aad inc js jecxz dec xchg into add outsl movsb (bad) inc jl out push mov popf rolb cmp dec xorb imulb bound movsl fistl dec jle ljmp insb mov scas jecxz dec andl js in push xchg enter lahf aam aas je fist xorb pushl mov add jbe loope dec cmpl stc das fs adc mov push push mov lret add insb mov mov push push mov lret push aad inc jbe loope dec xorl pushf roll cmp cmpsl fstl dec jge call int3 add insl mov scas in dec test (bad) sti xor rolb cmp dec jge jmp imulb pusha xchg int3 add outsb movsb (bad) dec cmpl add add or sbb fdivrl lcall idivb adc and ret clc cs iret add dec add add outsb movsb fimull inc jl out push mov int3 add outsb movsb ficoml inc jnp call imulb cwtl int cmp fistl inc jl out push (bad) ret gs roll cmp test mov and (bad) cli das gs rorb cmp dec cmpl popf rorl je,pt in push xchg sub leave (bad) xor lahf aam inc jbe loope dec (bad) mov and ret stc das fs adc mov pop push mov imulb adc mov sbb mov lret add insb mov lods jecxz dec test enter mov mov sbb mov aam aas jne loopne dec xorl cltd iret add jo fcoml inc jl call hlt sub lret imul jmp push add add mov mov push push mov into add outsl movsb ficoml inc jnp out push mov lret add imul in and ret stc das gs adc mov push push mov imulb pusha xchg int3 add insl mov mov sbb cs scas in push test enter lahf aad inc jne loope dec test (bad) sti xor rorl aas jne loope dec (bad) mov lret jbe,pt loop dec (bad) mov (bad) stc das gs rolb cmp test adc mov pop push mov imulb xchg int3 add insl mov mov and xor rorb cmp dec jg ljmp fs adc mov push push mov int3 add dec jg ljmp xor inc js in dec xchg leave pushl lahf aad inc jbe loope dec (bad) mov lret xor inc jl ljmp fs adc mov and ret bound test adc mov and int3 add insl mov mov pop push mov cld xor fmuls inc jnp out push mov imull cwtl into add jno fcoml dec jg ljmp push jbe add and (bad) imulb xchg int cmp fstl dec jle jmp imull cmp loopne dec xorl add std xor mov lods jecxz push xchg pushl inc js jecxz dec test (bad) std xor mov lods jecxz push mov imulb xchg int cmp flds push dec xorl fwait rolb cmp cmpsl fstl inc jle ljmp addr16 inc js ljmp pushfw rorb ja,pt jecxz dec test (bad) cld xor rorl jne,pt loop dec cmpl sti xor rorl inc jnp out push xchg lret add outsb mov mov sbb mov enter mov mov sbb sub inc jbe loop push push xchg negb add test pop mov cli xor rorl inc js nop xor push inc jns in dec test enter test adc mov and ret clc arpl movsl fistl inc jnp in push xchg (bad) cld xor aad inc jne loopne add cmc sub lret inc jle jmp clc add imul cmp jnp ss lock mov js das mov aas pushf add push sub pop jno inc mov mov popa int3 cmpsb adc in shrl jo inc mov jb xor pop xchg rorl aas jne loopne dec xorl cwtl into add outsl movsl fistl inc jl call hlt sub lret add imul add sbb imull cmp (bad) inc jnp add and (bad) stc cs adc mov sbb mov leave (bad) xor mov pop xchg xlat push inc jp out push mov imulb cwtl into add jo fcoml dec jle jmp cli xor rorl aas je loope dec (bad) mov iret add adc mov pop push mov imulb pusha xchg add or je loopne dec (bad) mov and (bad) cli das gs roll add adc mov and (bad) data16 rolb cmp cmpsb fcoml inc jge jmp push mov clc cs rolb cmp fcoml dec jl call cmc sub int3 add dec xorb cli das popfw rolb cmp test adc mov pop push mov cmc sub int3 add insl mov scas in push xchg imull cmp fcoml inc jge call cmc add push jae loopne add sub pop mov jne inc mov mov push ds mov loop mov mov imul faddl sbb mov lcall jmp shrl (bad) in push (bad) xor ret add mov (bad) and mov push scas adc lretw add jno fcoml inc jge call divl mov scas jecxz dec test (bad) std xor aam inc jne loopne dec xorl fwait roll cmp add add fist sub xchg int cmp fcoml dec jle jmp xor lahf aad inc jbe loope dec (bad) mov and ret stc cs adc mov (bad) std xor (bad) or ja in dec test add add cmovne out push xchg (bad) xor aam inc jnp out push mov leave pushl inc jbe jecxz dec cmpl cli das gs rolb cmp faddl adc mov push push pop sti xor rorb cmp dec jg ljmp fs iret add fs xor movsb aaa cmp sub mov outsb fiaddl or sbb lahf or xlat cmp mov in mov xchg popa int3 xor push imul repnz cmp xchg or inc mov ljmp ret cs add sub stos adc jae cmp lds xor movsb sbb nop icebp push mov xchg cli roll mov js dec mov cmp ret sub ret xor test scas sbb es std insb fildl or add popf push (bad) icebp pusha (bad) das fwait or sbb or sbb fwait or cmp push jnp sub inc mov test pop add mov mov xchg jb dec scas sbb pushf or inc mov mov pusha into cmp les inc scas adc out scas or repnz stos push outsl lret fidivr xchg repz scas or and sti pop mov jb sub jmp int and stos push imul jge inc mov xchg push scas push sahf add xor xchg clc add dec lods or iret xor jbe dec mov and mov add add cmp jo mov adc out (bad) sarb lahf or jno aaa stos sbb popf stc push mov jo sub push je inc cmpsl push popa mov stos adc cmp test push mov jnp dec shll cld pusha leave xor sub sbb mov push into aas stos sbb shlb jmp cmpsl (bad) in mov test xchg clc jo push sarb and xchg add add dec mov xchg add dec mov sub in mov mov jbe inc test insb aad movsl or into aaa mov mov and mov xchg std insb aad stos and dec sarl adc dec cmpsb add xor pop (bad) sub addr16 mov aam fisttpll xor pusha rcrb sti arpl xor jae inc stos adc out pop cltd rolb cmp dec xorb add xor movsb fimull inc jl call cmc xor (bad) or lods loop dec cmpl cli das gs adc mov sbb sub leave pushl mov jg lock xchg (bad) cld xor rolb cmp dec jg ljmp popa xchg lret add insb mov scas in push xchg enter movsb ficoml inc jnp jmp imulb xchg int3 add insb mov scas jecxz dec cmpl add add nop (bad) cld xor roll cmp dec jle out and xor roll cmp dec jle jmp leave pushl lahf aam aas jne loopne dec xorb cli xor rolb push aam aas je fist dec xorl cwtl int aaa insl mov lods jecxz dec cmpl into add outsl movsb ficoml and (bad) stc cs iret add outsb movsb (bad) inc jns in dec test mov cli das fs rolb adc scas in add lret insb mov mov sbb mov leave (bad) xor rorl jae,pt dec xchg jno pushf xlat or sbb mov iret add adc mov sbb xchg lret push aad aas jne loopne dec xorl lahf aam inc jbe loopne push xchg leave (bad) xor lahf aad inc ja loop dec (bad) mov and cwtl int cmp add fimull inc jp in and inc shlb fistl sbb mov (bad) cld xor roll cmp cmpsb fcoml inc jnp out push xchg (bad) std xor sub mov leave or lods loop dec cmpl sti xor rolb adc mov sbb mov (bad) cld xor rorb cmp dec cmpl int cmp or sbb mov (bad) cld add add pushfw rolb cmp test adc mov push push mov int aas je loopne dec xorl cwtl daa (bad) repnz movsl add adc or lret add insb mov lods loop dec test rolb cmp cmpsl fcoml inc jge out push mov enter sahf rorl je,pt mov push push mov lret push aad inc ja loope push mov leave (bad) xor mov scas in push xchg (bad) cld xor roll cmp fcoml inc jnp jmp hlt add push mov xchg cli fs fdivrl popf negb sub jl popf (bad) pop les icebp outsl enter dec lods or sbb mov sbb and mov jae es lcall sub (bad) cli push cmp movsb add es aas mov mov xchg add inc movsb add sub jg dec mov (bad) fidivr sbb das (bad) sub mov dec mov mov dec mov jns ds sti pop mov xlat cmp inc movsl pcmpeqd inc stos sbb pop int dec (bad) js cmp inc test xchg inc stos sbb negl and ljmp ret sbb sub sub cmp add outsb movsb fistl inc jnp out push mov movsl fistl inc jge call hlt sub lret insb mov add scas jecxz dec cmpl cld xor rorb cmp dec jg ljmp addr16 add adc mov sbb sub lret push aad inc jbe loop dec (bad) mov (bad) gs roll cmp lods jecxz dec test (bad) std xor aam je,pt loopne dec cmpl rorl daa pop xchg leave (bad) xor lahf aad inc jbe loop push mov cmc sub int3 add outsl movsl fistl inc jnp out push add xchg leave pushl add mov and ret fs iret add pop dec (bad) mov (bad) data16 rolb cmp loope dec (bad) mov (bad) cli das gs adc mov push push mov divb addr16 add cmovne in dec test (bad) cld xor rorl inc jne loope dec test (bad) cli xor roll cmp cmpsl fstl dec jle out and pop stc das fs jae xor push (bad) or lods loop dec cmpl sti xor roll cmp cmpsl fstl dec cmpl mov lods jecxz dec dec xchg lret add imul jecxz dec test (bad) pushfw rorb cmp push xchg leave pushl insb mov scas out push xchg pushf rorb cmp dec xorb imull inc jbe loop dec cmpl cli xor add add mov and ret bound movsl ficoml inc jnp dec mov jns cmp jns lret mov into add outsb movsb (bad) inc jp in push mov leave (bad) xor sahf rorl aas je loopne dec xorl mov lods loop dec cmpl stc das fs rorl aas je fist dec cmpl cwtl into add outsb test mov (bad) gs roll add or dec xorl fwait rolb cmp jmp jmp rolb cmp dec mov mov mov cld xor rorl je,pt loopne dec cmpl stc das gs out push xchg lret imul out imul test (bad) cld xor movsb (bad) inc jns in dec test (bad) cli das gs rolb cmp cmpsl fcoml dec cmpl cli das gs add add cmp dec jge call repz lret add imul loopne dec xorl xor sahf fmuls inc jp dec shll (bad) or lods loop dec test (bad) std xor rorl aas je fist sub xchg into add outsl movsb fimull inc jnp out push xchg (bad) xor lahf aad inc ja loop dec cmpl cli xor roll cmp scas in dec xchg (bad) pushl add add aad inc ja loop dec cmpl sti xor roll add mov sbb sub int3 pop cmp dec xorl popf rorb jae,pt fist jg add sub lret add insb mov scas in push xchg (bad) ss push push sub in loop push xchg (bad) cld xor rolb cmp fcoml inc jnp out push mov leave push jae,pt fstl dec jge ljmp add xchg lret imul loopne dec xorb cmc sub lret add inc xorb imulb popa xchg lret add inc jbe loopne dec xorb cmc sub lret push fmuls sbb mov enter sahf rorl cmp (bad) xor fs mov cli das fs cmovne mov and ret mov lods loop dec sbbl add xchg cmp insb (bad) pusha add lds mov fnstenv imul jge dec mov mov dec mov xor add outsb movsb ficoml inc jl out push mov int3 add insl mov mov sbb mov leave pushl insl lods jecxz dec test (bad) cld xor aam inc jne loope dec (bad) mov (bad) addr16 rorl aas jne loopne dec xorl mov lods loop dec test (bad) sti xor xor rolb ret jmp imull cmp fcoml dec xchg lret insb mov mov sbb mov enter sahf rorl je,pt fist jg ljmp xor rorb jns in dec test (bad) cld xor rorb cmp dec jle jmp xor add adc mov sbb xchg rorb mov aam dec addl add mov fisttpl adc es das xchg inc test push cmp sbb and xor inc mov test (bad) ficoml dec jg jmp push mov imulb popa xchg int3 add insl mov scas jecxz dec cmpl sti xor rorl cmp dec jle ljmp push je ficom and (bad) imulb xchg int3 add insb mov lods loop dec xorl xor rcrb add pusha xchg int3 add outsb movsb (bad) inc jp in push xchg (bad) cld xor roll cmp cmpsl fstl dec jge call movb movsl fistl inc jge call hlt sub leave pushl mov lods loope dec (bad) mov and (bad) cli das add xlat or sbb (bad) imull xchg into add outsl movsb fimull inc jnp out push mov enter lahf aad aas ja loop dec cmpl sti xor mov dec xorb add ret addr16 rolb cmp xchg in dec test mov inc scas sub push mov mov (bad) clc push mov nop sbb (bad) cld xor rorl aas jne loope dec xorl pushf rolb aas je fist xorb add outsb mov scas jecxz dec test (bad) cli das fs iret add outsl mov (bad) cmp jae sub ja push mov jns dec stos add jne add cmp xor in push mov sub mov mov push pop mov jno aas lcall in mov test push mov outsl (bad) ss sti addr16 xor xchg stc pop mov test imul xchg mull icebp (bad) lret sub adc jp cmp (bad) jecxz mov mov dec test outsb iret xor outsl shrb (bad) icebp push mov jb xor jo xor roll add and data16 daa mov dec test mov dec test insl int3 sub push sub imul stos or cld pop mov mov and ret in mov xchg inc cmpsb adc das mov push mov jb xor (bad) out mov cmp inc test imul lods or cs dec lods or (bad) xor jo xor pop mov add dec lods or lock mov jno xor pop js ss cmc push mov xchg clc push mov jge inc mov mov push scas push jne aaa cltd cld pop shlb imul scas push outsb int xchg stc pop mov lahf inc les cli popa shrl lcall adc mov cltd ss mov jns cmp jle inc mov (bad) jecxz movsl add jmp aam xchg repnz mov ja inc add cmpsb pop addr16 sub in dec stos or cs in dec mov jo lret push mov lcall cmp sbb inc cmpsb push gs dec scas movq das nop out dec mov outsb int3 sub lock scas movq xor jne xor cmc push mov xchg sti pop ret and cmp fdivrl lcall inc movsl add imul mov mov inc movsb or loope sbb add add das (bad) icebp push mov jb xor insl into xor outsb lret add jge cmp push jge cmp add pop jg dec lods or sub outsl aam xchg lock scas pop push and in dec scas or shrl adc movsb or cmp sub xor (bad) hlt (bad) lret clc pop mov mov jge inc movsb or push mov aad lods sbb pop shlb add add push je xchg repz stos adc sbb fstpl and fstl xorb cli xor aam aas jbe loope dec (bad) mov rolb cmp add sbb mov enter ja das xchg clc pusha iret xor jne sub pop mov xlat sbb mov lds imul adc imul add cmp mov movsb adc movsb pop jle mov arpl add add and loopne outsl cmpsb fcoml inc jge call repz lret push aad inc jne loopne dec xorl cwtl into add jne loope dec cmpl cli xor roll cmp cmpsl fstl dec jle call hlt sub lret push xlat or ja jecxz dec cmpl add outsb mov mov sbb mov dec mov xchg inc cmpsb push push xor push mov iret mov call add cmp sub aas je loopne dec xorl insb mov scas in push xchg lret add insb mov mov sbb xchg stc das fs iret add adc mov sbb sub lret add imul fdivs leave sub addr16 cmpsb add sbb sarb xchg or xor popa int lods sbb xchg and movsl sbb mov mov arpl sub negb xor loop sarb dec mov cli imul pushf std arpl scas push js aaa xchg clc pop ret call clc push mov jo inc test mov lods push jo cwtl sub pop into xor pushf clc pop mov mov mov xchg push mov mov mov popa lds cwtl or push (bad) xor pop les mov (bad) das lcall mov push ret movsl adc dec mov add and icebp pop mov flds push fistpl and xor jp cmp pop leave das fwait add cmp pop mov (bad) aaa lcall addr16 push push leave xor xchg or push mov xchg hlt pop xlat inc (bad) or scas jecxz lock sbb (bad) sub jno ds add xor xchg push mov sub mov mov (bad) cld insb aad mov mov pop (bad) jecxz mov call loop shll imul adc dec mov cld pop ret xor push mov clc arpl scas in pop adc mov es xchg enter sahf aam adc mov and ret stc das gs roll cmp test adc mov push push mov clc ss mov scas in dec xchg enter mov lods loope dec cmpl lcall add add add jecxz push xchg imull cmp fistl dec jge jge push mov jns xor es jp xor out pop mov pushf notl jbe cmp jp inc mov mov pushf jmp sub xchg inc pushf cmc push lods or int xlat sub aas jne loope push (bad) ret clc arpl cmpsb fistl inc jl out push mov jno dec xorl lcall add cmp fstl dec jge out and xor roll cmp cmpsl fcoml inc jge call hlt add addr16 rorl cmp dec xorl xchg int cmp mov sarb cmp outsl loop mov shrl adc sub loope mov test out dec mov fadds loopne sahf add fildl push mov arpl cmp ret add jecxz mov mov add push sahf or adc in movsl add and add adc jmp inc cltd rorb je,pt loope dec cmpl sahf add shlb jmp lock daa lods pop roll pop mov inc test in pop rorl xor dec les data16 scas and mov in aam mov nop repz mov jp pop (bad) inc mov push lret das xchg in dec lods psrlq add add jo push cld push jl push mov test inc mov dec mov scas pop popa mov xchg hlt pop ret out mov loope lcall ds inc lahf add sub push ret add ss pop jns cmp jno and xor mov dec lods adc fidivr test jb push leave aaa mov cmpsb or and movsl add jl add cmp mov push scas and push cmp js mov cmpsb or mov (bad) cli ret add ljmp jo push mov orl mov test pop lds mov push mov iret das xchg cld imul lahf aad inc jbe loope dec cmpl rcll xchg ljmp xchg enter mov xorb out pusha xchg int3 add insl mov mov push push mov int (bad) std insl sarb mov mov dec mov cld mov repnz shll ficoml dec jg jmp push mov stc das gs rolb cmp test push jmp xlat cs (bad) pop mov stc jl imul lret std jae loopne dec (bad) mov and (bad) cli xor rorl aas jne loop dec cmpl std cmp ficom jg ljmp popa cwtl into add jo fistl inc jge call hlt sub lret add pushl inc jbe loope dec cmpl sbb add cli xor rolb adc mov sbb xchg pushl inc fimul inc (bad) mov and iret add adc mov mov mov xchg pop jg cmp stc push mov jae xor insl xor adc inc lods adc jl push mov (bad) repz shrb repz shrb (bad) iret aaa movsl adc dec mov out add xchg cli sarl ja dec mov (bad) out int stos adc inc cmpsl push ja dec scas adc faddl jne cmp and push mov mov pop ret daa mov fs mull sub push jbe inc test js push mov test push ret inc lods adc dec and push lds sahf push jnp dec scas adc sbb test dec mov (bad) cld arpl sub lods pop add mov dec scas or xchg arpl xor add iret cmp dec mov sub les add lcall insb (bad) aaa push sub stos add xchg icebp push scas or (bad) ds negl pop (bad) loope cmpsb add mov pop iret dec mov cwtl sub jmp (bad) lret xor mov pop ret (bad) addr16 inc test lods adc dec push mov add cmp (bad) sub add xor push rorb adc add inc int out pop int3 xor cmp cmp dec lods adc cmp mov test mov mov pop ret cs cld popa les cwtl add or xor sub sahf push je dec mov (bad) sub dec mov test push mov mov scas or repnz stos or es inc mov jb cs push mov jne xor jnp aas popf cli fs sub (bad) jbe xor add cmp test dec test push inc mov mov test aas cltd sti push mov jo xor and movsb add lret xor jle ds cld pop mov aad lcall aaa xchg repnz pushl lock lods or and push loope sarl cltd cld pop mov xchg cmc push mov outsl into xor jg inc mov jge cmp cli pop ret fstpt xchg cli pop mov xchg add popa shll loopne mov jne aaa xchg hlt push mov (bad) les jle dec mov jnp xor add lret sbb mov fwait add sahf add and fnstsw or xor cmc push mov cltd mull dec mov imul xchg repz mov jno xor les mov inc mov mov lods adc aaa movsb push imul mov test xchg hlt push mov add jns aas lods push insb into ss add sub cld push imul clc push mov mov dec test mov pop lret or fnstcw dec lods pop jle dec mov mov dec movsb ljmp xor (bad) inc mov jp inc scas push jae das mov dec cmpsb or cs bnd sub enter adc push pop mov pop lds jns cmp or push jle imul pop mov mov add jg inc cmpsb (bad) pop mov xchg adc push jae cmp adc fdivs popf add aaa fwait push jb cmp lahf add pushl cmp add push jnp cmp lcall xor push jo cmp jg cmp arpl mov xchg dec test push xor adc push mov mov outsb into cs icebp dec stos or mov push add sub add add jl dec mov jg inc mov jnp movsb pop gs sub sub (bad) out int3 cmp cltd add xor cmp (bad) hlt pop ret hlt rorb add push imul (bad) mov repz mov ret sub jle out push mov mov mov test aas lahf add sub negl ss (bad) popa enter pusha lds repnz mov mov stos add add outsb aad popf add xchg leave inc mov jge inc stos pcmpeqw inc mov mov jne cmp gs mov adc sarb mov xchg or popa rolb xor sbb cltd std fs inc mov adc sub sub (bad) repnz mov icebp (bad) aam mov (bad) jbe push mov test dec lods adc nop negb and (bad) ja push lds add (bad) lock ret sub xchg cli outsb in mov xchg push shlb cli pusha int test sarb sub enter mov insl add push mov mov (bad) in lret inc (bad) aaa mov xchg add insl roll and movsl or sub enter imul cwtl cld push pop lds cwtl pop jne inc mov test lahf or or lret aaa cmpsb sbb mov mov add pop into inc mov lcall jo aaa cwtl or faddl mov push lds mov mov xchg std jo push lret and add dec mov mov push (bad) xor idivb adc clc imul movsl adc inc test cltd pop jae cmp sti imul shll call ljmp lahf push gs sti addr16 ss jmp cmp mov push mov mov mov js fidivrl inc test push mov lds cmpsl or jno pop mov mov mov xchg pop jp pop leave cmp out lds movsb adc mov cmc pop sti xchg pop mov mov mov fadds sbb dec mov fwait movq inc add pushl insl fiadd or pop out cmc imul sub daa (bad) lock les stos pop jge inc lods sbb in mov js add fisttpll and lods pop add popf push imul mov in mov shrb (bad) icebp pop ret push shrb sub mov xchg dec lods adc push leave ss jge push fiadd and hlt addr16 mov ret sti pop (bad) xor nop or push les mov pop mov (bad) inc cmpsb sbb mov rcll and jb inc mov stos and lods push jle jae aas mov jle dec mov pop adc mov mov push mov dec stos or test test xchg add pop mov lods adc push lds je sub jp xor xor mov cmp fadds mov aam popf pop orl std addr16 add leave lahf xadd jnp popl int3 xor add add add add repnz mov jl cmp mov cmc add xor sbb in dec stos adc cmp xchg or fidivrl movsb pop insb sti jns inc test mov mov mov mov inc lock loop pop fstpl inc scas inc fisubr cmpsb add loope stos or aad fwait daa xchg push mov pushf (bad) gs xor cld push pop rcll and fcompl arpl cmpsl adc aad add cmp pushf sub mov fs cmp mov stos cmp or adc fistpl add push mov push mov or fwait adc fs xor sub sub jmp mov aad cli xor inc add xor xor xchg dec fild sbb repnz mov jle inc cmpsb or pop jne cmp scas sub leave daa (bad) in dec scas and xor add add in sub or cmp xor inc stos push imul ret and (bad) lahf ljmp clc dec mov jle add xor sub dec stos or xor std pop shll jge dec lods (bad) cmp inc push movsb adc xor or cltd sti pop mov jmp lds lcall pop shlb out pop mov and sub fnstcw movsl pop imul (bad) ss sti popa shll dec lods adc stos adc stos adc cmp mov push mov jns inc test xchg hlt pop mov mov jns dec mov jnp inc lods add repnz mov mov pusha les sti outsl leave push mov ja dec test popf std arpl sub jne repnz sbb (bad) (bad) and lock mov jns push shlb sub pop xchg pop lret sub cli outsl fmuls push xchg inc test popf add mov mov mov int3 xor add add add aam xchg sbb inc mov mov push mov jo dec (bad) sub or cmp lds es (bad) lods sbb mov repnz int lret push int flds or outsl (bad) cs sti (bad) cmp xor fist xor or cld jns dec mov repnz mov or ss adc dec mov nop (bad) jno dec mov xchg push mov int3 aaa lahf add fadds adc jmp xor cmc pop (bad) add add mov push cmp add mov (bad) call loop shlb sbb xchg repnz mov lds push pop mov ret dec roll and xchg pop lret cmp fmuls sub roll das push lods sub dec mov cmpsb pop jo cmp daa mov push enter int lods sub cmpsb or iret inc lods push test fdivrl pusha lds add inc mov add add cmp pop test push ret add inc lods adc push mov mov movsl adc adc mov iret cmp pop roll pop xchg negb cmp out push mov mov mov add pushf sub (bad) cs stc gs xor cmp adc insb fmull jge cmp jg inc leave cmp inc mov lret add stos adc sahf add ds sahf or mov je pop sarb mov xchg or inc mov lods adc aas cmpsl push insl (bad) aaa lcall xchg push fidivrl jp dec mov sub jle push (bad) and sub loop mov xchg pop fcoms and and lret cli outsl enter cmp cmp push mov mov sub inc lods xor data16 add add daa test mov dec fsubrs push into push jge dec scas adc inc scas push (bad) pop mov fdivrs popf sbb insb sbb in mov add pop js fs sub add cmp or pop (bad) xor pop xchg jp sub movsb push push dec ret cmp add add cmpsb ds xor pop mov jmp movsl add sbb xor scas sbb sub daa mov ds add and inc popf stc push add add les mov js inc xchg in scas pop mov insb loopne int jp cmp push shlb out mov xchg negb sub dec lods xor xor loope out lods sbb mov lahf cmp or (bad) mov cs push jnp push lds push scas inc mov clc jno fs sbb lods sbb (bad) jle fs sarl xchg (bad) push cmp cmpsl adc daa xchg sti pusha (bad) sub add add or pop iret inc mov popf or aad lods and scas (bad) fldl add fisttpl jns inc cmpsb or fldl push iretw ds and incl iret xor cmp add sub stc pusha (bad) sub and (bad) jge pop hlt jo inc movsl or inc test mov ja ds jo fs add int3 cs mov imul mov mov gs jne add cmp dec lahf sti (bad) int3 xor ficom cmp add add stos inc mov movsb cld (bad) fnstcw jl inc mov sahf icebp jo xor fs dec mov cli push iret xor add inc mov mov int pushf jmp sub cmpsl or fildl es out pusha rorb push (bad) xor movsb inc mov adc lds nop (bad) pop (bad) cmp cwtl jmp sub int3 inc mov jnp inc lods adc inc test xor xor xchg dec test add add pop mov insl into cmp inc lods push jae ds sti push mov jp cmp xchg negl sub out push mov jle inc cmpsb adc aas cmpsb or xor (bad) jmp das xchg cli pop lds mov dec mov jne dec lods push jae inc mov imul ret cs or dec stos xor outsl fdivrl ss dec mov jnp dec iret xor xchg out push (bad) es push mov mov out pusha sbb movsb push pushf and ss mov sbb in pop les xchg sti arpl ss notl xchg inc mov and std jo inc (bad) cmp adc lods es cmp and pop mov xchg fs pusha adc icebp and fnstenv nop sbb cli pop (bad) cs jb popa fidiv pusha mov rolb daa add aam mov cltd push (bad) out fs mov mov insb xlat cmp mov sub add jp (bad) movb jbe aaa mov imul (bad) push out mov out fadds push jns pop lds mov js xor fldl dec loopne (bad) cmp fiadd mov ja dec mov jl pop ret ljmp gs lods ss lcall dec std jb sti mov mov movsb pop lea in mov insl movq sbbl cmp data16 mov ret push imul stos push test movsb or xchg or add test dec mov cmc push fnstsw mov imul test push inc (bad) mov mov les cmp ret cmp add call (bad) cmp sbb dec scas sbb mov nop (bad) push inc scas sbb (bad) cmp xor dec mov jns cmp xlat aas mov mov mov jg dec scas push xchg or mov xchg repz (bad) das add xchg sti pop ret sub fs xor stos sbb sbb push mov ret cld pop ret sub mov cmpsb adc dec mov iret aaa mov popf add sbb xor mov nop add cmp mov mov sarb mov scas push sub repz (bad) xor ds add sbb sbb cmp add xor mov inc stos movd sub or sub out dec scas or notb sbb dec rolb xchg or inc mov sti imul mov adc dec mov (bad) fs sub ss or out test lods sbb jle pop enter xchg sbb aam mov ljmp jmp in (bad) dec ret mov lods xor std fs sub add add repz dec mov mov jge gs xor xchg dec mov mov xlat imul add mov leave xor add jbe push mov (bad) imul sub repnz in les fwait or mov cld xchg sub movsl or dec lds pop jne jno push ret popa iret inc ret daa lcall fidivl cmp pop jb pop pop mov xor sti data16 lahf add add push lret aas cmpsb or xor or cmp mov (bad) jle pop aam lahf or popa int mov (bad) xor xchg cli push jl push mov jp cmp inc mov cmpsl adc lret sub cli pop lds das nop add dec mov and mov mov mov push mov mov ljmp imul ljmp loop rolb lahf add es add sub ret cmp roll and out dec mov mov push mov jns popa rorb das mov stos or mov xlat cmp call fiaddl push (bad) xor mov rolb and in pop int shrl stos xor enter popa les popf (bad) pop mov hlt pop stos adc out mov jns sub inc movsl or pop lds xchg negl xchg sbb or cmp xchg cli pop mov mov out pop int shrl xchg std imul nop std imul movsb or fild stos adc cwtl ljmp add lret and or or mov xchg je inc popf repz test vmread ss in dec in cmpsl std push scas add mov jno sbb dec mov cmp lds push fs popa mov les fnstenv mov imul imul add mov and mov lods adc adc fistpl add arpl pusha fisttpl or sub jnp sub fidivl mov cmp inc cltd out inc lcall adc sbb shrb jge sub mov jo sbb xor test cmp push insl rcll ret sub scas add scas jbe dec aad and add adc pop jno and mov jg inc lcall sub daa jl cmp or lock notl sbb sbb aas pushf pop test pop mov cltd sti push int je and stos adc or pushf or cmp repz lds xchg or dec mov add sub sub xor int3 sub sahf std pop mov dec mov mov (bad) jb dec test jo push in pop leave xor rcrl adc xor out (bad) out xchg cld push cmpsl std push mov push cmp cmp jmp cwtl lock stos sbb stos sbb int xchg cmp (bad) sbb shrl jle sub mov ss cmp je sub mov pop mov jnp daa jns ds add adc xlat das test das (bad) xlat sub xor outsb fidivr xchg call mov fiadd add add lahf icebp push test pop int xchg hlt mov push mov imul lret cli dec test push inc sahf cmc dec mov push add fs mov shrb jg cs xor xchg out inc sahf hlt dec add arpl outsb ret sbb push outsb (bad) pop jb and mov cmp movsb (bad) push test push test pusha mov pusha mov outsl enter daa jg xor aaa xchg jmp cwtl out dec lahf clc push stos add or adc les jne sub fnstenv nop in inc lahf cmc dec mov push stos add adc push je daa jle xor aaa xchg jecxz xchg (bad) dec movsb add adc sbb and in pushf cmc dec stos add or rcrl lret es xor aas lcall adc rcrb lret sbb loope xchg in inc mov arpl lret fnstenv mov cmp add dec mov push mov insb enter das mov cmp sahf (bad) dec test pop add jp daa jnp and iret pop fbstp (bad) jecxz xchg call cltd icebp inc lahf (bad) dec lds jle cmp inc xchg jmp xchg jmp fwait out inc cwtl jmp xchg icebp dec movsl std push cmpsl (bad) push stos add add add add mov bound jbe es mov xor loopne mov cmp inc mov pop mov pop mov add or adc adc adc adc jne and sub cs cmp dec mov push stos add add add mov pop lods add or adc arpl push ja es xor inc lcall notl push pop mov arpl jne and es xor inc popf sti push mov pusha mov mov (bad) sbb sub icebp push cmpsl incl fs jae and shlb jle cs ss cmp mov bound imul into and cs cmp (bad) out xchg lock mov pop mov imul aad test ss jmp mov push mov popa mov rclb les jno and xor dec movsl std push mov bound jno es xor cmp dec popf (bad) dec mov push stos add lods or adc adc and aam test out xchg call lcall stc dec test pop lods add mov addr16 insl ret sbb sbb fsubrs fidivl xchg xor xor in inc fwait icebp inc lahf repz mov pop mov pusha mov outsl (bad) pop jbe and sub inc xchg repz les jae push jno and es cs xor add cmp push movsb cli dec mov dec lods add or or or mov jno sbb and and shrl (bad) xchg xor pop mov data16 int3 and daa jle sub dec lods add or punpckhwd pop imul push sbb and aad mov inc mov imul inc cwtl out inc add mov outsl (bad) sbb (bad) sub sbb xchg out xchg repz movsl stc dec cmpsl stc push scas add mov jl ds (bad) dec movsb (bad) pop mov fs sbb mov ds (bad) dec cmpsl sbb mov dec cmpsb std push mov jge cmp mov xchg out inc mov xchg in push mov out pop mov adc pusha enter cld pop lds mov imul xchg add sub popf (bad) pop mov insb lret es inc test push sub add cs or fdivrs fwait std pop shlb sti addl jno out push mov lret add imul jecxz dec test fs adc jg jmp push mov clc cs iret adc mov sbb mov add add outsb movsb (bad) inc jp in push mov leave (bad) xor sahf aam inc js loop dec cmpl add insl movsb ficoml inc jl out push mov int3 add insl loopne push add xchg lret add imul loope dec cmpl mov mov sbb mov push shrl mov dec mov outsl lret sub cwtl add and out mov jp push sarb scas pop nop stc imul scas sbb lahf or and adc push mov lret es push mov jge pop mov add sub mov lds (bad) mull xchg stc pusha les xchg mulb pop aad nop out push shrb pop push inc pushf cli push mov lds jno sbb ret sbb and xchg sub loopne mov cmp inc xchg hlt push test jmp popf hlt push cmpsl sti push test push stos add fs sub adc sub ja inc mov xchg pop lret cmp or cmp outsl shrb mov push mov jg dec lods adc mov lds iret das xchg cli pop mov mov mov xchg ljmp xor xchg hlt push mov es dec scas sbb cmpsb adc push call pop sarb adc or add ljmp sbb mov hlt pusha out jmp dec sarb mov sub scas jmp inc shrl ds jmp pusha xchg lret add add loopne dec xorl pushf roll cmp dec xorb add sbb fs pop shlb fist dec xorl fwait roll cmp dec xorb imulb imul mov std xor aam aas jbe loope dec (bad) mov (bad) cld xor rorb inc jbe loope dec cmpl add insl movsl fcoml inc jl call repnz pop xchg enter push je fist dec xorb imulb pusha xchg inc mov mov jg divb add arpl in lods sbb lretw cmpsl cmp xor in imul imul pop clc arpl pop ficom push rorl pop lock jl push int3 push mov add sub xchg and add fst pop (bad) sub sub cs sbb pop in popf cld pusha add mov int sbb sbb mov mov mov xchg pop nop add push mov dec rcrl fistp cmp cmp and push fdivrl popa ficoml jbe inc movsl jmp pushf cld popa les mov dec mov jbe inc mov mov imul xchg cmc push mov movsl push and (bad) push fiadd pop xchg adc arpl add xchg push fiadd jge mov add add cmpsb push mov lock or sbb or out pop hlt data16 fistpl dec leave xor mov movsb sub adc push jns insb fild add loop scas sbb jmp lret xor in inc stos push jae cmp and jecxz mov test popa lds pushf or ljmp fcoml cmp repz jno add imul jecxz dec test lock xchg (bad) cld xor rorl je,pt loope dec xorl fwait rolb cmp fcoml dec cmpl incl daa xchg es je fist pop push mov imulb popa xchg int3 add jo fmull xor sub inc mov les add mov int3 add outsb movsb (bad) inc jl out push mov test add outsl movsl ficoml inc xchg lods and pushf ljmp add movsl adc jle push mov sti pop enter jno dec mov fwait push cmp cmp and adc imul in js dec mov sarl cmpsb adc dec mov in rolb and pop lret add loopne mov hlt pop (bad) xor mov test sub shrl adc inc add xlat cmp xlat inc mov xchg add push push leave lods and add add test fisttp sub mov xchg pop ja push mov xor lret adc pop mov (bad) cmc popa xlat dec scas inc sarb outsb loope mov in pop lret add inc mov xchg add mov popf std outsb flds sub xchg add dec mov lret xor movsb add adc lret es xchg lock test push sub popa leave push mov mov cmp (bad) ss sti imul add mov mov les scas sbb dec mov xlat inc mov je das (bad) in dec lods push jno inc mov jae xor nop repz enter imul mov fwait or out jno xchg cli add cmp sbb mov enter les in push mov mov mov (bad) inc mov mov mov mov shrl fiadd adc jecxz add pop mov imul mov aad mov mov imul test aam mov jecxz mov test (bad) and sub and repz lds lods and movsb or popf add jno scas sbb shrb (bad) in ret or add push mov (bad) das sahf pop addr16 insb iret xor imull inc mov pushf pop jae inc test and mov jle dec mov add rorb and and mov jnp inc test outsb add push mov lret jne loopne dec xorl cwtl add and inc scas or sub arpl int3 aas mov mov push shrl lock mov jne cmp roll and cmpsl adc dec mov scas or clc pop lret ja pop (bad) jbe push sbb add push add mov leave and and jo aas repz mov xor jo aaa pushf add and cmp scas pop (bad) mov pop std xchg inc stos adc inc scas adc xchg adc dec iret inc lods pop rolb pop xchg pop (bad) aaa mov xchg lock mov xor int3 ss clc pusha mov xchg clc pop shll cmp and mulb fimull xor idivb add add cmpsb fstl dec jg jmp push (bad) ret clc cs adc mov and ret clc cs rolb dec jg jmp imull cmp fistl inc jl call hlt sub int3 add outsl movsl fimull inc jp in push xchg into add outsl movsl ficoml inc jnp out push mov lret push (bad) or lods loop dec cmpl stc cs into add outsb movsb (bad) dec (bad) mov (bad) std xor (bad) or scas in push mov iret add jb fstl dec xorl outsl (bad) xor pushl and xor aad inc jbe loope dec xorl xchg int3 add insl mov mov sbb mov mov scas in push xchg (bad) sti xor roll cmp cmpsl fcoml inc jge call repz leave (bad) xor lahf aam aas jne in push mov add xchg (bad) std xor rorl aas je ficom jg ljmp addr16 rorb jae,pt ficom jle jmp hlt sub rolb adc scas in push xchg std xor rorl jae,pt ficom adc or ja loop dec (bad) mov lret push (bad) or lods loop dec (bad) mov ret stc arpl cmpsb fistl inc jnp out push test sub sbb mov add add pop mov scas sbb arpl cs dec mov gs mov jns dec mov out dec mov jg ss cmc dec cmpsl add sub add sub pop mov sarb lods and pusha mov xchg out push mov cwtl add push mov push mov mov imul sarl cmp pop loop mov out pop (bad) aaa fwait (bad) pusha icebp aas jne loope dec (bad) mov and add add adc mov and (bad) imull cmp fstl dec xorb clc cs adc mov clc cs adc mov and (bad) imull cmp test mov and ret data16 roll cmp cmpsl fstl add ret addr16 divb insl mov mov and (bad) imulb cwtl int cmp fstl dec jle jmp pop (bad) ret stc das gs rolb cmp push xchg add sub lret imul jecxz dec test int3 add jo fcoml dec jge jmp imulb gs roll cmp scas in push mov iret add adc mov sbb mov enter lahf aam aas jne loop dec (bad) mov int3 pop jae,pt loope dec cmpl add outsl cmpsb fcoml dec xorb add insl mov mov and lret outsb movsl fistl inc jle repnz pop add rorb cmp dec cmpl add adc and movb insl movsb ficoml dec xorl test add push mov into add outsb movsl ficom dec test lret jo loopne dec test (bad) (bad) ss mov mov es xchg lret add insl mov mov and pushl insb mov mov and int3 daa xchg add push (bad) xor (bad) ljmp jl push ret add add xor iret cmp cld imul test into inc mov (bad) stc (bad) in dec mov mov (bad) inc inc pushl data16 dec mov (bad) sti imul jmp lds lcall mov pop lret cmp adc lock lret cmp int3 cmp iret cmp pop ret das pushf or push mov fisttp xchg pop jae dec mov mov imul sti imul (bad) imul mov add sub push shrl fcoml xor pop ret add inc scas sbb fwait add fadds and test lds in fnstcw add es cwtl push jb loopne (bad) cmp iret cmp lds addl fimull and movsb or daa cwtl sbb lea cli jnp fistp xchg or push mov flds and cmpsl adc add inc stos push sub add push mov sarl cmpsl adc push shrb add fimull sbb cmc arpl inc lods sbb sbb stc data16 scas add popf or push mov adc push mov rolb sbb pop (bad) xor movsb adc roll sbb repnz shrl add jle push shrl std push dec mov mov fs aaa lahf or dec mov sub leave aaa movsb or jmp pop add add daa xchg sti push inc scas sbb movsb or sub iret cmp sarb cmp pop lret cmp dec mov jne popa lret add sbb imul incl mov xchg or push mov fsts xor mov (bad) clc push mov gs cmp insb jecxz scas adc ds repz lods adc and pusha rolb add inc lods adc xor add sub loopne mov add and scas movq xor je xor jb das popl cld addr16 xchg dec (bad) xor test data16 and cltd add sbb xor cmp dec mov loop adc cmp dec mov ljmp loopne mov xchg pop leave xor lret xor les cltd add and mov mov mov mov imul mov popl pop jae dec mov roll cs add inc mov mov gs cmp (bad) xor mov mov in mov flds mov fs adc and dec mov fiaddl sbb cmp lret adc mov ret or add mov loop mov fildl and test pusha sbb mov fimull and add inc mov (bad) sti push (bad) xor xor push inc mov (bad) sti rolb sbb (bad) cmc data16 daa xchg add sub roll xchg add inc mov mov imul das sahf or dec mov aam cmpsl adc pop lret xor add cmp add add aas lods push test (bad) int3 mov mov xlat inc mov mov sarw stos sbb mov mov mov gs cmp clc imul repz int3 cmp sub and scas sbb movsb vmwrite push rcll roll sbb sahf pop ja push mov aad lods sbb xor dec mov xchg std push inc lods adc out pop (bad) xor xor mov ja push mov fmull mov data16 stos pop (bad) in push ret xor mov mov (bad) inc scas sbb or push shrl add imul std push jns dec mov sarl test add cmp cmp pop (bad) xor js dec mov xlat inc scas sbb xor pop lds pushf or dec mov ljmp or jmp lret or in mov into cmp xor mov fadds sbb lods sbb mov push (bad) ss test popa int lods pop sub iret aas stos adc xor push mov sbb mov fmull pop mov popa lret cmp pop lret or loope mov and mov (bad) push xchg sti imul mov nop cld add dec mov (bad) aas stos sbb mov jmp (bad) xor mov fiaddl sub mov test pusha int stos sbb pop enter jle push lds mov lret adc push shrb mov in mov in lds lahf or dec mov mov data16 push ret add and inc mov mov data16 cmp adc mov mov pop (bad) xor or push mov xlat inc mov xchg pop enter jge pop lret push jnp push mov fmull sub or push shrl cli imul mov nop sti rolb dec mov flds sbb repz int mov xchg add inc mov mov outsb fmull and test roll lods sbb cmpsl adc xor pop jb inc mov add add mov mov rolw sbb dec mov xlat inc scas push mov (bad) into cmp mov fildl and lods sbb mov into cmp int movsb (bad) out mov mov jmp mov mov leave cmp mov jns dec shrl or arpl push les mov cwtl in movsb adc daa xchg cmp or push mov fadds daa add rolb sbb out iret ds sbb pop mov mov mov pusha leave das xchg negl add sbb gs in inc lods and insl (bad) sub out dec mov js aas mov mov xor xchg notl mov mov push xor mov and mov les inc shrl (bad) jns and fisttpl inc iret xor loope lcall stos adc sub pop scas cmpsb and xchg lret add insl mov jmp mov stos or lds notl or ret and cmpsb sbb out gs stos pop test pop lret aaa mov ret or inc scas sbb mov mov cmp out dec movsb add out push nop (bad) cld xor rorl jae,pt pop (bad) cmp add stc push mov insl leave sub add or cmp es dec stos or cmp jnp cmp mov shlb add aas mov sbb stos or xor lods sbb loope (bad) xor lds test into xor imul mov int3 sub test dec test mov loopne mov repz je dec mov test jo cmp dec mov js pop leave xor lcall scas sbb aad mov ljmp jmp xchg add inc stos adc mov lcall mov xchg cld arpl es ja dec stos adc cmc pop shrl adc in ret add fimull pop xchg jo inc mov jl pop les push mov imul sbb insl aam test nop sti imul mov xlat push mov mov (bad) into inc add fiaddl daa xchg cli push push mov add push ret adc xor scas and leave xor iret aas lods adc pop in pop (bad) xor fmull sub ret sub std fiaddl and mov jle pop lret xor or in pop enter mov insb sarl mov jle dec scas push test inc lods pshufw lds mov in shrl sbb mov mov (bad) out add add ds xchg push sub fadds adc repz cmp sub and movsl or xor stc pusha roll xchg add in (bad) aaa mov add jnp pop movl sbb ret (bad) fdivrl insb int3 das xchg dec ret daa cltd add mov push jbe aas mov rorl aas je loope dec test ficoml inc jl jmp imull sub and dec mov jnp xor jge dec stos adc fwait adc in and pop pop enter xor aad inc ja jecxz push test pop push mov imull cmp fstl dec jg jmp bound movsl ficoml inc jl call imulb cwtl into add outsl movsl fistl inc jl call imulb lcall adc mov enter mov dec add push add out loope bound add add nop leave pushl insb in jle imulb xchg int cmp ficompl add ret stc das fs adc mov push push mov lret add insb movsb ficoml inc xorb cli xor rolb cmp push test gs call fdivs sub cltd iret add adc mov leave pushl mov mov jo cmp movsb pop lret xor stc push enter (bad) int movsl or (bad) and add stos or les js daa (bad) out mov xchg inc fwait add fnstsw xchg hlt push mov js xor mov dec mov jge inc test mov inc lods sbb add xchg dec (bad) cmp into aaa mov shll push mov mov jb inc cmpsb or (bad) clc pop mov mov xchg cld outsb fimull daa mov pop int stos or int add es adc jp xor jae add push shrl lcall pop mov mov xchg push mov mov fs xchg cld addr16 add push jle dec mov and scas push jp push mov aad mov test leave sub cs or addl clc push mov insb int test aas lcall sarl stos and movsl sbb xchg add pop sarb popf std pusha les add ret insb das fwait cld pop frstor add add das (bad) in popf pop insl iret das mov cmp (bad) lds (bad) out popa ret cs or mov fimull xor mov icebp sarl mov mov arpl inc cmpsl or imulb cmp mov rolb cwtl or push lds mov pop into movsb or inc mov (bad) in mov int3 xor pop xlat inc mov clc imul mov ljmp add jge pop lret add sub leave cmp jecxz mov jmp sarb lcall mov fisttpll and xchg outsb fiaddl or jle push mov nop or dec mov fstl sub push leave aaa lahf or mov nop add mov fldl xchg std insl out (bad) xor iret cmp adc shll or mov xchg pop jne and cmp add imul add inc in (bad) xor push mov lock iret cmp ret push jae pop xchg data16 cmc js push (bad) cmp out pop int3 inc lods adc aaa test les movsb adc push shrl or inc mov (bad) cli push leave aaa test add stos pop (bad) out pop les lods sbb push jl pop lds inc mov (bad) mull (bad) mov out shrb add add mov fiaddl push mov addr16 inc mov nop (bad) addr16 aaa mov lods push mov sarb lods sbb mov fiaddl pop int3 cmp scas xor jg cmp xor mov fisttpl and mov mov xchg add faddl xchg gs scas sbb lock lret ss cli outsb fimul sub mov xchg add inc mov xchg pop int3 cmp ret pop jae add sub mov test pop (bad) xor sbb ret cmp push ret xor lret xor cmp lret xor str lods sbb or mov jmp add inc mov (bad) mull cmp fisttp es add dec mov nop add cmp adc push movsb sub cmc jb dec mov mov pop leave mov ljmp add mov stc insb add push (bad) aaa mov ljmp cs add dec mov nop clc (bad) in ret xor and inc mov jo arpl inc scas sbb cmp popa leave jae pusha sarl test (bad) out pop leave xor pop loope movsl adc mov les dec mov (bad) mull cmp xor or push mov mov call push mov in ret xor push mov repnz xchg push jae dec mov mov insb fadds and roll sbb test jle pop shrl add ds push sub lret adc push ret pop ja dec mov mov and leave xor adc pop ret ljmp inc scas sbb push mov pop int movsl adc aad iret aas scas sbb (bad) mulb cmp pop int3 cmp xor add add mov aad lods sbb mov shrl jo push mov sarl cmpsl adc mov (bad) inc lods sbb stos push test pop int3 aaa mov shrb fmuls and mov mov data16 inc scas sbb mov lds pushf add fimul daa xchg add call push jl pop leave cmp rolb and dec mov xlat inc add add mov loop mov clc mov movsl adc cmpsl adc arpl cmp iret cmp pop leave xor push jnp push shrl add mov (bad) (bad) push inc test mov sarl movsl adc scas pop (bad) in pop ret cs add je movsl jno popf or dec mov mov popa iret inc mov mov popa lret or lret aaa mov (bad) mov shrl add add inc mov (bad) inc mov (bad) stc push (bad) in push mov fadds xchg fs cmp inc mov mov popa int3 cmp mov aad mov mov (bad) int cmpsb adc dec mov add dec mov mov (bad) into cmp int3 cmp mov xlat inc scas sbb repz sarb mov mov sarb stos push (bad) out pop out (bad) xor mov loopne mov fadds sbb add add mov lds fwait add xlat inc lods pop mov gs cmp mov loope mov sarb adc push shrl jae inc mov mov nop cli roll sbb mov mov xchg ljmp push mov xlat inc scas pop mov data16 test mov sarb cmpsl adc pop lret adc push shrl shrb movd pop shrb adc xchg adc add in push ret das fwait or daa xchg cld push cmp cs or dec mov jbe pop enter jle push shrb scas sbb mov mov nop pushl inc scas sbb test jle push rcrl sub or mov mov je pop lret movq jb xchg pop js push (bad) xor mov sub and sub popa lds popf or sub adc test sarl stos push (bad) out pop lds cltd add aas test (bad) nop aaa test xor lds cwtl adc push shrb add inc mov test pop (bad) xor mov mov addr16 mov test pop ret xor ret cs add flds out pop (bad) xor and cmpsb adc pop leave xor or fadds and stc data16 xlat iret test mov sarb cmpsb push add mov mov popa int3 mov add add dec mov xchg ljmp mov mov pop leave xor mov mov (bad) iret cmp push (bad) xor or xchg add inc scas sbb ret push jb inc mov mov pop leave pusha repnz int3 aaa cmpsb push jns dec mov cld fsts xor add lods sbb repz int3 cmp shrl add mov mov sarl cmpsb adc push ret daa pushf or jbe or push lds mov les popf push add add push mov (bad) inc lods sbb or inc mov mov popa int3 cmp les test sub or dec mov xlat inc mov sahf adc clc addr16 scas sbb mov (bad) xor lret adc ret das cwtl add inc mov xchg ljmp inc mov nop sti sarw adc cltd add push pop enter jns pop leave xor push jo dec mov xchg pop enter popf or dec mov (bad) stc insb flds sbb xchg add fimull and xor pop lret mov cmp adc push ret add arpl cmp shrb or push mov flds adc xor pop (bad) xor call adc push shrl add inc mov mov (bad) int3 cmp lds popf pop jne dec mov mov mov aad scas pop mov pusha int stos add sbb popf or push shrl ljmp inc mov xchg pop int test xchg pop int mov enter jbe push shrb push jbe dec mov fimul popf or jge pop ret es add dec mov in les lods sbb mov mov data16 pop ret add dec mov mov (bad) iret cmp mov (bad) clc data16 cmpsb adc push (bad) xor ret das fwait or push les mov push jnp push add inc mov mov pusha out imul stc rolw push mov push inc mov mov sarb (bad) (bad) insl xlat inc scas sbb mov mov aam push (bad) std insl fadds and and iret cmp push xchg jno dec mov xchg (bad) push inc lods sbb nop ljmp inc lods push xor leave movsb (bad) dec mov fmull push xchg popa leave xor pop lds pushf push jae dec mov add xchg add fadds sbb push mov out mov fimull push mov iretw cmp sarb or mov xchg pushl dec mov mov (bad) cmp imul clc imul insl fildl and out mov inc mov xchg push je dec mov jle push mov loope mov mov push jl dec mov fadds sub push mov add insb (bad) daa nop cld mov outsb fisttpll es add aas stos sbb cmpsl adc xor or dec mov pushf push jne push mov aam stos sbb cmp int cmpsl adc mov lds or push mov in pop lret cmp add dec mov xchg (bad) into xchg dec mov loopne mov xlat aas scas pop sub adc push lret adc mov add xchg add lods pop adcl mov (bad) lret xor adc push mov aad lods sbb xchg add adc push (bad) xor pop (bad) xor mov mov pop lret push jnp add cmp lds popf or push shrb mov nop pushl dec mov sarl adc push ret das mov (bad) xor dec mov flds mov or mov fwait push outsl fildl sbb add add push jp dec mov loopne mov flds push jg push ret or dec mov fisttpl xor mov fiaddl adc ljmp insb fadds sbb dec mov xchg ljmp push les pushf push jae dec mov out mov flds sbb mov shrb add inc lods sbb cmc popa into cmp add cmp movsl pop test mov add (bad) iret cmp (bad) xor or jae dec mov xchg (bad) insb xlat inc test shrb (bad) imul ljmp inc mov sub or dec mov fadds dec or flds and stc arpl cmp (bad) xor mov (bad) fisttpll sub ret mov les fwait pop je push mov flds mov pop (bad) xor or ljmp push mov add add inc stos push sub or (bad) adc inc scas sbb lahf or mov xchg std imul negb dec mov mov addr16 scas sbb cmpsb adc lds sahf pop or scas sbb hlt popa sarl stos push xor outsb fiaddl and pop jb dec mov (bad) fs stos sbb scas sbb lahf or dec mov inc scas sbb aam mov add insb fadds and dec mov xchg (bad) imul lods sbb and adc stos sbb jnp pop lds pushf adc enter jns push shrl lods sbb int mov mov fadds sbb fwait add jecxz les cwtl add inc scas sbb xchg add inc scas push xchg pop lret cmp mov mov pop enter js push shrb add dec mov nop add and mull fmull sub mov nop cld sarl lods sbb cmpsl adc push mov (bad) cli push xchg (bad) lret mov les mov (bad) xor fmull sub add and adc roll sbb lods push enter and jno dec mov loope mov xlat inc scas sbb mov mov arpl cmp add clc imul push mov pop (bad) xor or dec mov (bad) stc fs movsb adc inc mov xchg std insb faddl sbb ds sbb sbb lods sbb movsb (bad) in mov fiaddl and aad mov fisttpll sbb inc scas sbb mov xchg add dec mov mov sarb test (bad) xor pop mov push jl push mov add add add sbb inc mov xchg pop (bad) xor jle pop lret or dec mov (bad) cli arpl mov mov into cmp lds pushf or push mov pop test popa add dec mov xchg (bad) push dec mov lea mov insl fisttpl and pop cli imul mov jmp add fmull and or jns pop (bad) cs pop outsl fildl and mov ret add add add push dec mov fisttpll and lods sbb mov shrl mov xlat inc lods sbb mov (bad) jne pop sarb push mov int cmpsb lahf dec les mov mov (bad) clc fs cmp mov faddl and or push int3 mov pop shrl outsb xlat inc lods sbb or push shrl cmp cmp iret cmp add add dec mov nop add dec mov mov pop enter jb in pop ret sub scas push mov data16 sbb and mov fadds xor (bad) jb push mov out pop (bad) (bad) insl fmull and lret xchg add dec mov aad mov xchg add inc clc jl pop int cmpsl adc add lds mov mov mov imul scas push mov add rolb sbb lods sbb cmpsl adc test je dec shrl add adc adc rclb jbe pop lret or loope mov flds and cmpsb adc pop ret xor mov test pop enter jae inc mov mov pop (bad) xor or loop shrb or loop mov int mov mov sbb stc test arpl aas test inc mov xchg add dec add iret inc stos sbb and test mov popa int test sub lret or and dec mov (bad) inc mov xchg rorl daa xchg std push movsl adc xor add sub xchg jns push shrb add dec mov icebp popa int3 cmp (bad) das lcall sub mov fisttpll and add inc fistl xor sbb cmc pusha add lret cmp lret (bad) out mov fimull pop nop sti (bad) sarb movsl push js dec mov (bad) stc push jp push mov loope mov flds sbb lahf (bad) push ret ljmp loope mov aad lods adc sub sbb lahf adc jmp shrl or sahf or inc scas sbb fwait or dec mov roll sbb add je insb loop ljmp jmp les mov mov test pop roll dec mov xchg sti push dec mov mov pop ret sub inc mov (bad) jmp ret sub push mov iret aaa cmpsb jnp insl ficoml inc mov (bad) inc mov lea xchg add dec mov xlat inc lods adc xor pop les sahf or dec mov into cmp mov mov push inc stos push sub les mov add add and mov nop clc popa int3 cmp mov sarl lods cmp or sub dec mov (bad) cld imul repz mov mov (bad) int mov ret cs pop jbe dec mov sarl cmpsb push ja push mov lret add adc in pop lds movsl and cmp and mull xor push add fildl push mov (bad) int3 aaa lahf or dec mov test pop les lahf or push mov aam movsl push jnp push mov fldl sbb mov enter jge push (bad) aaa mov call adc push mov xlat inc stos xor jg pop les sahf or in mov loop mov sarb pop int3 cmp jmp (bad) xor mov in int3 cmp pop leave cmp shrl add stos sbb mov int mov mov (bad) inc lods sbb cmpsb push jp dec mov xchg lock ret out add dec mov lock test lret xor push shlb (bad) insb xlat inc mov xchg sarb test or push shrl jno inc mov mov popa into cmp (bad) rep sbb inc scas sbb mov scas sbb movsb vmwrite add push mov (bad) inc lods sbb mov sarl jo push shrl mov sarl stos adc pop rolb sbb lods pop sub out pop lret or dec mov mov fs cmp ret push je ss nop (bad) insb flds and rcll xor nop add inc scas sbb cmpsb adc fisttpll sbb in pop int3 lods sbb add sub adc lods sub ret xchg or dec mov flds and scas sbb mov ret xor mov jmp ret xor mov mov or push mov fiaddl es add inc mov xchg xchg imul hlt pusha aam scas sbb clc jb add aaa movsb adc pop (bad) xor mov aad stos adc add push shrl add sbb xor sbb repnz (bad) xor mov fisttpl pop lret (bad) push shrl jb dec mov (bad) sti imul ljmp inc stos sbb lods sbb fwait or dec mov jl push pop fimull cs or push mov and fmuls sub mov (bad) inc stos adc aaa mov mov mov fs cmp add push shrb add flds pop sub adc loopne sarb lods sbb mulb add sarl cmpsl adc adc lods sbb out pop lret (bad) jmp adc test sarw test ret xor mov mov pusha lret cmp sub stos pop test sarl arpl inc test test pop ret xor lds sahf or add mov aam cmpsl adc push shrb add inc mov fisttpll and ds leave xor hlt pop int3 cmp pop ret sub inc mov mov pusha iret cmp (bad) xor in ret or loope mov mov fs mov mov popa int3 dec mov fadds sbb aaa movsl adc mov mov pop lret adc pop int3 cmp sarw adc add das cwtl add enter mov (bad) clc fs movsl sbb mulb lods sbb mulb cmp stc arpl xor sub sub mov fisttp sbb cmc pop lret pop (bad) lock enter mov cwtl add fadds sbb pushf or dec mov mov imul in pop les xchg add dec mov xchg add dec mov fisttpl and sbb lret adc mov add std imul repnz int3 cmp pop leave aaa movsb adc lret adc lcall xchg (bad) data16 adc pop leave cmpsb adc xchg add fldl and test aam lods sbb lock enter js dec mov mov bound ficoml aad mov mov fs cmpsb push sub inc mov nop (bad) imul mov fimul and stc arpl cmp popa loop leave movsb add adc jmp ret add inc mov mov pop lret cmp enter mov roll sbb or mov mov pop lds cltd add inc test shrb outsl fmull and stos sbb fwait add sbb popa int test jle push mov jnp dec mov aam movsl adc push shrl or test xchg sarb lods sbb icebp pop (bad) xor add jns push shrb xchg out push mov faddl push (bad) mulb cmp int3 cmp push shrb pop jae dec mov mov popa iret cmp add xor int movsb push js push mov push addr16 mov fisttp and and ljmp lods sbb aas test les push mov fildl sbb es sahf or dec add mov shrb add dec mov sarb lods sbb mov mov (bad) lret xor jg pop enter jbe dec mov iret cmp pop ret sub inc mov sub mov mov add dec mov (bad) stc outsb fimull pop mov insb (bad) inc stos adc sub add scas sbb mov mov in dec lods or sub xchg pop mov cwtl mov xchg clc pop mov add mov cwtl repz mov fs fsubl pop ja xor out stos or cmp sub push jno xor cmpsb add cli dec sahf hlt dec mov push xchg sti pop shll cli faddl or int3 sub jnp cmp lcall add pop rcrl hlt arpl inc mov lret sub das xchg repz mov into xor jnp cmp mov arpl add add test jle dec mov movsb adc jmp jecxz dec scas adc inc movsb add add cltd negb lahf or cs cli (bad) int3 inc mov out pop enter imul mov (bad) in dec test jge cmp repz mov (bad) fistpll inc mov mov fadds push (bad) or cmc insb xlat inc mov xchg add mov add mov (bad) dec mov fimul and mull add aas lods sbb es iret inc scas and lods pop test pusha lret mov andl or push mov dec mov add aam cmc (bad) into ds push test pop lret aaa movsb adc les mov mov fiadd and test enter jl push mov fadds sub push mov iret cmp jo dec mov xchg push shrl push rolb add cmp push insl les mov imul lods sbb popf pop jne dec mov flds sub push les popf or (bad) xor mov fisttpl pop mov sarb stos pop sub or push ret push js push shrb push js dec mov mov arpl cmp adc xor xor mov outsb loop mov cmpsb (bad) push mov flds add test ret sub mov (bad) insl fmull and in popa rolb and lcall cmpsl adc mov les popf or mov xlat inc mov mov (bad) sarb adc push ret xor sarl lods sbb test sub sub sahf adc sub xor ja push mov fiaddl sbb mov mov arpl aas lods add add xchg add dec mov xchg add ds jg pop les pushf push outsl fisttpl daa xchg sti fs cmp adc push (bad) movsl adc pop lds cs xchg add inc mov (bad) sti data16 cmpsl adc xor mov int sahf pop jg pop ret xor sub lods push jg push (bad) xor mov mov imul icebp pop (bad) xor out iret cmp add scas push mov gs cmp les or in mov aad stos sbb popf add sub adc xor push mov jmp add scas sbb lahf or jmp cmp vunpcklps test jl push shrb or out arpl cmp (bad) out enter js dec shrl or dec mov fadds sbb push mov outsl flds add scas sbb test jg push shrl add or xor push mov (bad) inc mov mov data16 mov mov popa into cmp (bad) xor mov mov (bad) inc lods push test pop (bad) aaa movsb adc push mov int mov xchg pop leave add push (bad) cld imul pop mov (bad) lret pop jae dec mov mov fs cmp ret xor and mov xchg add add xor (bad) xor sbb fwait pop je dec mov mov add ficom xor arpl cmp (bad) jnp fisttpll xchg ljmp add fimul push (bad) clc (bad) into cmp ret cs mov jo dec mov sarb cmpsb adc push mov fisttpl es xor sarb lods sbb movsl (bad) in mov in pop (bad) xor out mov int movsl adc push mov aad lods sbb cmpsb adc push mov loope mov jecxz mov fimull enter mov (bad) cld addr16 test jl pop enter jge push shrl add fimul push mov (bad) xchg pushl inc mov nop sti gs aas stos sbb clc fs cmp sbb mov lret adc lock lret or dec mov call and add add mov xchg arpl inc mov mov pop enter and lods sbb out pop (bad) xor mov in fs aas lods sbb mov mov sarb lods adc out pop lret adc push ret cs push outsl xlat inc mov test mov pop leave cmp enter jbe dec mov aam test into cmp shrl pop jae dec mov add or push ret sbb testl add add cmpsb adc push mov sub (bad) xor cmp sarl lods sbb lock lret or lret cmp aad mov mov pusha int3 cmp les lcall mov push xchg jb movsl adc or out pop (bad) xor and stos sbb cmpsb push jnp push add cmp pop (bad) xor mov mov insl (bad) inc scas and add add cmp mov xlat inc stos adc push ret ljmp mov mov roll and adc movsl push (bad) repnz (bad) jle into inc mov xchg pop int cmpsb vmwrite dec mov enter outsl xlat inc stos sbb or dec mov loopne mov test pop ret xor mov xor shrl or inc mov mov push mov popa iret aaa movsb or add das lcall mov pop (bad) xor mov xchg data16 stos cmp rolb sbb out pop (bad) es push xchg add inc lods pop sub (bad) xor mov sarl test jns into inc scas in je push les lahf push in xchg sub sarl leave xor pop into cmp pop lret (bad) push mov (bad) inc stos adc or dec lret sbb add add dec mov (bad) inc mov mov pusha int cmpsl adc out pop int3 aaa mov ret sub push mov fadds pop xchg lret and lock lret cmp (bad) xor mov (bad) cld push mov pusha int mov mov (bad) cld push mov sub enter jge push (bad) xor into cmp into pop into cmp lret pop jo inc mov mov pop leave cmp add add add add mov popa lret cmp shrl stos sbb adc les fwait add ds mov fisttpll xor mov fimul pop xchg sarl movsb push jnp push mov fisttpl and mov xchg pusha lret cmp aam lods sbb (bad) xor cmp (bad) cmp ret sub loop mov fistp fsubs inc mov xchg add mov mov push mov (bad) into cmp shrb add and sub push sarl adc aaa add dec mov (bad) inc mov mov arpl cmp ret or out (bad) xor mov (bad) ljmp icebp pop lret adc pop ret sub inc scas push sub or and cmp ret xor add add push sub enter jb dec mov lock pop mov push dec mov mov js lds lahf or mov xchg add inc mov mov jg pop lret xor push shrl add sub mov fiaddl and lahf or dec mov xchg cld push xchg or pop enter jns push ret pop jno inc mov mov addr16 test ret cs or sub mov lahf add sub scas push add cmpsb pop and enter scas sbb aaa mov shrl add xor mov int mov mov jmp mov fadds and lods pop test pop int3 cmp int mov (bad) xor mov mov jmp ret pop jbe dec lock push shrl add and add mov xchg cld imul repnz (bad) xor mov out ret adc mov arpl cmp int cmpsl adc (bad) cmp fisttpl and sti rolb sbb test (bad) mov mov add call add aas mov nop cld push inc test sub shrb mov mov arpl in pop lds sahf or mov fadds sbb add add xor (bad) das fwait add and ret or and mov test pop lret cmp imul (bad) outsb fiaddl and cmpsb adc mov flds sbb movsb vmwrite dec mov nop cld imul mulb inc scas sbb iret inc lods sbb stos pop (bad) stc imul in pop lds fwait or add popa int mov cmpsb adc pop lds add add sarb sarb mov shrl add dec mov mov arpl cmp mov ljmp dec mov es or loop mov mov addr16 pop int test pop jne push mov fildl mov popa lret xor pop jne dec mov mov (bad) int3 cmp into cmp pop lds pushf or dec mov pop jno push mov sarb scas sbb or push roll add add mov lret or xchg adc test int test jg push shrl add fimul and cmp pop sub les fwait or aam scas sbb cmpsb adc mov aam test leave xor int3 cmp lods sbb mov sarl stos sbb movsl adc lahf or es sti push shrl add add add inc mov sbb inc lods sbb mov shrb add mov mov pop int lahf (bad) ljmp fiadd pop mov jbe dec mov sarl cmpsb adc mov in mov fimul pop (bad) sti data16 mov mov mov pusha lret add xchg cld sarw adc push shrb scas sbb xchg add inc stos sbb in push ret inc int3 cmp add repnz into cmp cmp xor (bad) xor push mov sarl adc push shrb in lds lcall xchg add inc mov mov gs cmp daa nop sti fs sahf or dec mov rclb xor repnz cmp adc icebp pop leave xor mov sub sbb mov fmull and add mov mov rolb inc mov jl add fnstenv mov sbb test jl pop leave xor adc push les pushf or fmuls and cmpsl adc pushf or dec mov add dec mov lret or inc scas push test pop leave xor push js push mov aad scas sbb mov lret cmp (bad) das lcall mov arpl lods pop test sub push jp dec mov xchg pop lret add mov pusha int scas sbb cmc insb fisttp and cmpsl adc xchg add fisttp and adc push shrl jo dec mov mov pop roll sbb mull jo dec mov iret cmp adc add inc mov (bad) cld insb fiaddl sbb scas pop mov pop int mov int3 mov shrb int3 cmp int cmpsb adc int cmpsl adc enter jno jmp ret mov mov xchg pop les xchg add fadds sbb mov cmc pusha hlt outsb fisttpll and stc (bad) lret adc push mov in mov sarb pop les xchg add push sub les or sub mov (bad) cld jb dec mov enter je dec mov xchg pop int test jle pop les fwait or push (bad) cmpsl adc test add add cmp int3 cmp inc lods push test pop les popf push jno dec mov xlat inc mov (bad) stc sbb (bad) iret cmp pop xchg pop int stos pop xor sarb mov xchg pop int mov std insl flds mov test test popa lret cmp fimull and mov mov roll add pop enter outsl fiaddl xchg push enter jns dec mov mov pop enter jns push mov sub loope mov jecxz mov mov (bad) int3 cmp mov jbe push mov aam lods sbb out pop lret adc lahf or dec leave xor dec mov into cmp push shrl aad mov adc mov mov (bad) push shrl add sub inc stos adc cltd add inc mov mov sarb (bad) xor ret xor add inc mov mov (bad) into cmp sarb push sub les fwait add and cmpsl adc call or mov jle push shrl push bswap cmp ret cs add fldl push mov xchg add inc mov (bad) cli gs cmp mov sahf push or leave xor pop les sahf or dec mov xlat inc mov mov sarb add lods push sub shrb add mov loop mov loop out pop leave cmp adc xor mov xchg pusha into cmp les or dec mov xchg add inc mov xchg pusha lret (bad) out pop lret cmp lds lahf adc push lds mov mov sarb pop lret and inc mov mov addr16 aas test jle push shrb add inc mov (bad) mulb cmp push lret xor or dec mov fmull and dec mov jp push mov fisttpl and cmp lds mov in mov loop mov rcr popa sarl lods pop xor int test rolb push mov arpl cmp adc aaa mov mov out mov iret aaa mov ret cmp lret cmp iret aaa mov (bad) xor jmp add shrb jg pop lds lahf adc dec mov in mov (bad) dec mov mov xchg add dec mov fimul and movsl adc popa lret cmp mov mov pop lret or push ret or push mov fiaddl sbb scas sbb repnz lret push push aad mov mov data16 roll sbb out loop mov fisttp and add inc lods sbb mov mov fisttp and cli popa enter jo xor xor push mov xchg dec mov fisttpll push mov jb dec mov int mov shrl add inc scas sbb cmpsb adc xor mov ficom xor mov mov fs scas sbb fmuls and mov jne pop add inc scas sbb mov les mov leave xor mov loope mov fisttpll daa xchg (bad) push inc stos sbb pop cmpsb add es call shrb ljmp mov pop les jnp call fstpt push mov add dec mov aad sahf std imul xchg std pop rcrb push mov mov mov xchg icebp add mov jne push jbe aaa add xchg cmc push test pop mov mov push aas test je inc mov cwtl add loop mov in push sarb movsb or jg pop jmp aam mov mov sarl mov mov pop leave xor pop les lahf or loopne mov xchg (bad) imul jmp mov loopne mov (bad) cld data16 movsl adc (bad) sti sarw mov fisttpl xor or cs xchg pop les xchg add loope mov rolb add add pop (bad) das popf or out ret das fwait add lds fwait pop jns push shrl jae dec mov fiaddl push jg pop int3 cmp shrl add jge push mov fisttpll push (bad) aaa movsb adc fwait push outsl fiaddl and test jg add dec mov mov enter mov flds push mov arpl dec mov rolb sbb cmpsl adc pop ret sub push mov add mov mov (bad) cmpsb adc push mov fisttpll (bad) stc gs cmp shrb (bad) iret inc mov xchg pop jae inc mov mov (bad) sarb stos mov test and mov xchg add insb fisttpl and sbb mov shrl or pop shrb (bad) adc int movsl adc sub adc mov (bad) cmp les popf or dec dec (bad) xor push leave add add add mov fisttp shrl or dec ficom cmp mov pop lret sbb mov xchg pop lret cmp sarl (bad) jmp les xchg add dec mov mov fisttpl sbb cmp push test pop leave xor int3 dec out xchg add in mov fildl pop xchg pop lret push jno push ret xor ret add fisttpll nop sti push test pop add add ss or in push les fwait add adc ss or cmp jmp enter jle push shrb imul jmp ret xor pop mov arpl cmp sarb test lret (bad) pop (bad) outsl fisttpll and movsl or sub mov xchg sub pop iret cmp and mov imul add pop lret cmp (bad) inc add scas pop mov adc mov fimul sub ret add dec mov flds adc sub add mov mov sarb sbb movsl adc push shrl or dec mov nop adc mov mov data16 scas sbb pop jae dec mov mov popa int mov ret cs lea or or dec mov adc push les mov jnp push ret or push mov flds mov rolb adc cmp lds cmpsb adc xor stos push jg pop leave xor push mov fisttp sbb fimull xor cmp dec fimul cltd jbe pop int3 cmp popa sarl stos adc ss or mov (bad) into cmp adc mov loop mov (bad) mov xchg inc sahf inc into cmp add dec movsb std pop mov ja xor and mov insl fadds sub xlat inc sub repnz int mov mov fadds mov push leave cmpsb ja pop iret aas scas sbb bnd xor sbb dec xor jo push ret (bad) jmp loopne mov sarl pop les fwait add dec mov mov fs mov jecxz mov fimull sbb add cmp mov (bad) stc rolw adc in push mov sarl cmpsl adc pusha lret mov mov imul cmc pusha int3 cmp mov xlat inc mov test push ret ljmp inc scas sbb hlt pop int test sarl lods sbb or inc mov mov pop lret cmp mov popf sbb mov mov fs aaa movsl adc test jns dec mov aam stos sbb add cmp adc push shrb add inc lods sbb cltd pop jbe push mov jmp add add xor mov cmpsl sbb dec in ret xor mov in xchg nop cmp sarb cmpsl adc shrl jo inc scas push mov rcrw fisttpl cmp int3 cmp mov repz int mov mov and insl fimul daa xchg ljmp mov xchg pop lret or push mov sarb lods and aaa test lock es or mov mov push jns pop int3 cmp mov dec mov lock stos adc daa nop cld jge push (bad) aaa mov ret sub mov mov pusha int3 aaa mov mov sub (bad) xor or push les lcall xchg ljmp inc scas sbb mulb cmp pop (bad) xor lahf pop outsb fadds sbb xor mov mov pop int movsb adc push mov out mov fildl push (bad) stc push jge pop lret or xor push shrl add es (bad) push dec jae pop (bad) cmp (bad) xor es cli arpl aas scas sbb ss pop jb inc mov mov pusha lret aaa movsb adc push (bad) xor mov lea roll sub push shrl add and (bad) sarw cmpsl cmp mov sarl in gs insl fadds sbb mov adc dec mov fiaddl and mov mov sarb cmpsl adc outsl fisttpl and scas sbb lahf add test pop lret push (bad) out pop into movsl push (bad) sub mov jb inc mov xchg repnz test pusha mov sarb test add cmp sub and or rolb sbb push mov mov ja inc mov mov dec mov insl (bad) ss notb jno xor outsl shrl (bad) in jae cmp cmp mov test dec stos adc cmp push mov scas (bad) fld cmp aaa popf std (bad) loopne ret and xor and and mov pop (bad) sub xchg add add pusha (bad) sub and or sub aad jnp and es cs mov push sub loope stos sbb ds cmp pop leave mov repz lret push ja dec mov lcall mov sarb stos sbb lcall xchg add inc scas sbb xor mov add lock aas stos sbb test add adc jmp ret or dec mov (bad) cli push mov pop (bad) xor mull fisttp cmp mov imul mov mov gs jno dec mov xchg (bad) insl fadds sbb pushf add sbb cmc popa iret cmp int mov mov sarl test test sarb pusha lret cmp shrl add dec mov fldl sbb mov pop add int3 cmp leave cmp fs movsb adc pop les fwait or push mov xlat inc mov sarb pop (bad) xor push js push mov out mov xlat inc scas sbb negb xor in pop ret sub push add mulb inc lods sbb mov mov (bad) stc vmovlps xchg add inc lods sbb cltd add fimul and stos add test pop (bad) xor push jp dec mov or mov mov insl flds adc ret push mov jno dec mov int cmpsb adc mov (bad) inc lods sbb mov mov (bad) and lods and mov mov pusha int3 cmp loope mov fist es add jge pop lret adc push mov out (bad) xor lret aaa movsl adc out pop add cmp lret or dec mov aad test ret or out mov loopne mov add in mov out mov loope mov sarb test (bad) xor mov fimull es std addr16 push mov fmull and movsl adc push shrb add inc stos sbb lods pop (bad) out pop out arpl inc mov mov push cmp add push mov fsub jp pop (bad) xor pop ret add fimul and stc data16 movsb vmwrite dec mov faddl test pop les pushf pop jo js pop (bad) xor mov fiaddl and cltd add pop (bad) cli push jns pop lds fwait add mov mov arpl xor dec mov sarb mov ret jl pop lret adc in pop (bad) xor cld imul add (bad) int movsl (bad) jecxz mov aam lods adc xor and cmp enter je inc mov mov push jno inc mov test pop lret adc pop les sahf or out shrl jno mov xchg push je dec mov out mov lret xor or dec mov test pop lret aaa mov ret push jo inc scas sbb xor and and add add adc sub lods sbb out pop lds ret adc ljmp jle jp test (bad) aas stos sbb or and stos adc xor mov fadds sbb mov int3 cmp add pop leave aaa test (bad) out pop lds mov mov mov push cmp adc in pop les mov mov loopne (bad) stc push add sub lods sbb test sub leave xor dec mov mov push lods pop mov dec mov ljmp in add inc mov mov push sub ret push jne dec mov fadds sbb repnz lret cmp fildl pop ret xor lock lret adc (bad) xor ljmp cli sarl mov pop enter jb push shrb add add add dec mov (bad) std insb fiaddl push cwtl add repnz inc lods sbb lods sbb test aad stos sbb stos adc out pop lret push jnp push mov flds sbb lahf or mov mov imul mulb cmp jmp into ds leave movsl adc pop les pushf pop je dec mov xchg cli data16 pusha iret cmp adc aaa movsb sldt add add dec mov fadds sbb adc dec mov cmp pop (bad) xor jl push lds test sub add and movsb push jp dec mov jl popa iret inc scas pop mov popa int3 cmp lret and lods sbb xchg (bad) sarl jecxz leave aaa cmpsl adc ljmp jecxz mov iret aas scas sbb cmpsb adc push mov add (bad) clc popa lret or mov mov arpl cmp mov sarl cmpsl adc dec mov aam lods push mov pusha int3 xor pop loop (bad) xor ret cs or (bad) mov aas mov cltd or push mov flds sbb stos adc xor ljmp inc scas sbb lahf or inc mov xchg ljmp inc stos adc push shrb ljmp inc scas sbb cld addr16 inc mov add xor mov cmp adc sahf or in ret imul test mov in mov mov vmovlps mov mov mov arpl xor push ret pop jno lcall sti imul aaa mov mov fadds jg push mov leave xor mov xlat inc mov mov data16 cmp and add inc lods push xor lret aaa movsl adc int scas sbb xor push mov flds and ljmp inc scas sbb mov xchg pop lret push jp push mov faddl sbb repz into cmp les lcall ret push ja push ret sbb cltd add jbe (bad) sarb lods add add or push mov fimul and lods sbb mov int add ss or push mov fimul pop nop add inc stos push sub shrb jb dec mov fadds sbb icebp pop (bad) xor leave mov xlat inc mov xchg pop lret adc push mov loop mov xlat inc scas push mov popa int movsb jb mov mov sarb mov mov aad lods adc sub mov mov pop lret cmp popa leave xor jl add add cmp (bad) pop aad mov mov push jg push mov loope mov cld rolb sbb hlt pop lret or dec mov mov pop sbb pop data16 adc movsb adc mov (bad) inc mov mov pusha leave mov mov fisttp and mov mov sarb mov aam stos sbb test jl push ret xor add sub mov mov gs mov mov (bad) xor or in pop les lcall mov roll dec mov jmp or push mov xlat inc scas sbb mov cld imul mov (bad) sti gs cmp lret or mulb cmp adc xor or push mov fildl dec lret cmp (bad) xor mov add ljmp dec add sarl adc sub mov mov popa sarl mov mov aam cmpsl adc push mov fsts sub movsb adc dec mov std imul out pop into cmp shrb jne jbe pop (bad) xor push mov imul mulb movsl adc pop lret mov iret cmp sbb cmpsb adc fadds pop mov pusha into cmp add add cmp push sub or out mov sarl stos pop sub adc mov pusha lret cmp push test arpl inc scas sbb cmpsl adc pop lds cwtl add and cltd or mov xchg add inc mov (bad) cli sarw stos push jg push add cmp insl fisttpl aam adc jp roll sbb mov mov fisttp pop leave cmp lret test (bad) cli sarb adc jmp les popf or dec mov aam lods sbb popf or dec mov (bad) inc mov push dec mov lock (bad) xor pop xlat push lret adc xchg add dec mov rolb pop push mov mov popa into cmp int mov (bad) sub xor fadds sbb mov xor iret aas lods sbb add aas mov lcall xchg add dec fwait push xchg ljmp inc scas sbb cli arpl cmp shrl int stos sub (bad) inc mov add mov flds sbb inc scas push mov push test pop shrl jno dec mov fmull sbb (bad) jp push ret or dec mov fiaddl sbb ja push ret pop jo inc mov (bad) clc popa sarl pop add (bad) xor les pushf pop ja dec mov orl aaa cmpsb adc xor das lods and and push out ret aas mov mov (bad) or pop (bad) xor xchg add push mov in mov fmull add pushf or dec mov flds sub mov xchg cld fs cmp push ret or mov aad lods sbb cmpsl add adc pop shrl adc xchg (bad) insb push mov (bad) into cmp (bad) xor mov sarl stos push sub ret pop jb inc mov mov pop leave xor push ret das lahf or cs pop je dec mov sarb adc push jge pop ret cs add dec mov (bad) cld fs inc mov xchg sti sarb adc dec mov lret aaa mov mov flds sbb clc fs cmp jge push mov mov leave xor or and inc scas sbb jp pusha int3 cmp int stos sbb add iret cmp insl xlat inc lods sbb stc gs lods push sub push je dec mov nop or mov (bad) sti data16 lods xor stos pop xchg flds and sbb xor mov fisttpll pop movsl sub mov or out mov adc (bad) imul pushf pop jo fs ret xor (bad) jmp or ss xor pop mov xor data16 inc mov xchg add push leave mov (bad) imul stos adc push shrb jae dec mov sarl cmpsl adc dec mov xchg add fildl and aam push jp push mov fild pop les lcall mov pop int3 cmp (bad) xor add add inc (bad) push mov jmp lds test ret or les or xor push shrb add inc mov mov (bad) rclb lret adc pop lret ss push mov pop enter jbe push mov cli pop mov popf outsb fdivl (bad) (bad) daa xchg inc mov imul xchg add dec mov mov outsb ficoml xor sarl movsl adc push mov fisttpl pop mov pop les inc scas sbb add pop enter jae inc lret inc mov mov (bad) xor push js push mov fisttp (bad) cli imul inc mov call or push mov aad mov fisttpll and inc and add dec mov (bad) clc gs sub or xor mov jecxz les pop les mov ret xor int3 cmp xor mov mov mov data16 pop lds movsl adc mov stc insb fadds sub jne dec mov sarl pop int3 mov (bad) xor lods and ljmp add pop les popf or sub test sub rcr fimul outsb xor (bad) and ret xor std jb dec mov iret cmp enter jl add add push mov xor and sbb loop mov fadds sbb popf or xchg imul sub mov fldcw pop sarb lods sbb mov mov push inc mov mov sarb pop enter jl mov (bad) iret cmp (bad) into cmp shrb or push lds test sub lds mov les (bad) jmp ret das popf or mov jb dec mov fildl sbb scas sbb lahf or dec mov movsb adc lods sbb cli addr16 inc mov xchg add dec iret push shrb movsb adc push movl int cmpsb adc pop shrl push jo dec mov (bad) stc push test (bad) sarb test (bad) repz int stos sbb stos sbb cmpsl adc out pop lds fwait push outsb fmull and push add mov add add mov mov fldl and inc mov xchg (bad) push inc mov xchg (bad) sarb movsb adc push mov jecxz mov jecxz mov sarl imul inc mov xchg add pop mov fimull jg mov (bad) cli imul adc mov xlat dec mov roll leave push fimull popf or push add ds push (bad) std insb fiaddl mov add sub add loop mov fiaddl pop mov imul push jb inc scas sbb mov lret adc pop (bad) cmp ret add inc mov sub mov negl cmp mov sarb stos sbb fwait or dec mov cli imul add inc mov xchg cld push inc scas sbb dec mov (bad) stc push aas lods pop xor lret push sub mov imul add inc mov (bad) sti sarb test iret cmp sbb and cltd insb repz inc mov xchg cmp mov mov sarw scas sbb stos pop sub ret xor shlb cmp inc lods sbb mov mov into cmp nop add jge push lds mov les pop jo inc shrl je dec mov aad scas push xchg add inc mov (bad) clc addr16 add add shlb dec mov fadds sbb inc lods sbb lahf or out mov loope mov nop (bad) imul lock (bad) xor push mov fisttpll and mov nop (bad) imul test ret sub add dec mov cmp sarb mov les cwtl add inc scas sbb mov (bad) sti push add mov fisttp and add add xor mov mov sarl mov mov sarb (bad) repnz into cmp shrl add and stc popa lret aaa sahf push jne dec mov fildl pop shrl pop je jb push shrl adc out pop les fwait pop je dec mov loopne mov fadds cmp outsb faddl pop mov pop lret adc pop les popa int3 cmp lret adc pop ret xor add fisttpl daa xchg sti data16 cmp les mov enter je dec mov sarl pop mov repnz leave xor sub jo mov lds movsl adc push shrl or push mov sub or push mov dec mov (bad) inc lcall add inc mov (bad) cli outsb flds sbb lahf (bad) jmp add add imul scas sbb test test pop lret mov mov gs stos pop mov arpl cmp adc mov push (bad) mulb ds adc pop enter jl push mov in mov aad lods push xchg add dec mov mov data16 mov mov flds pop jle pop (bad) xor and rcll mov leave xor popf (bad) out shrb ljmp inc mov mov arpl into cmp (bad) xor mov jecxz mov loop mov sarb stos pop test pop int3 cmp insl fildl test pop (bad) xor jmp ret xor mov adc mov nop (bad) push inc mov mov rolw sbb out pop ret xor mov mov (bad) into cmp add jecxz mov out push shrb mov mov xchg cld roll aas stos sbb cmpsl push xor lret adc lahf or push mov in push shrl std push xchg pop leave aaa mov ljmp loop mov flds adc ljmp out (bad) xor mov fisttpll sbb movsb adc pop enter jae dec mov aad scas sbb mull cmp (bad) sbb outsl (bad) xor xchg add sub mov mov data16 pop mov imul ljmp inc mov mov gs cmp pop test pop lret push js push mov in mov aam test mov sub or es cld sarb lods sbb cmpsl adc push mov fiaddl sbb cmc arpl cmp (bad) xor jl pop leave cmp adc push lds (bad) out (bad) xor add push xchg adc mov hlt arpl ds sbb scas pop mov pop fimull push (bad) sti push in mov xchg cli gs inc mov (bad) sti imul stos adc push (bad) xor mov xchg ljmp inc scas add inc mov xchg add je mov xchg add inc mov nop sti sarl test pop leave xor push ja dec mov fadds pop mov vmovups mov loope mov flds and add lret adc test jg pop std jp pop les mov mov in shrb add dec mov fmuls and clc arpl cmp pop les pushf or sub scas pop mov popa xlat inc mov (bad) cwtl add fisttpll sub mov mov fs insl fisttp fmuls sub jp cwtl or push ret or cmpsb adc jmp add inc mov mov popa int cmpsl adc mov iret cmp mov aad lods adc or pusha lret cmp (bad) xor lds pushf or dec mov (bad) inc mov mov outsb fisttpl and mov mov outsl fstl cmp adc cmpsb push jl push ret or dec mov fimul cs into cmp adc out push leave xor add das sahf or xor add or pop (bad) xor mov fisttp sub add dec mov fildl xchg sarl mov ret or out in pop into cmp push lds pushf or dec mov sarl mov mov gs mov xchg add enter fstpl cmp push xchg popa iret aaa mov mov (bad) stc roll sbb test add js push leave xor pop into cmp add sbb cld data16 ss (bad) in pop leave aaa mov les inc scas push mov fs inc mov test pop int movsb adc push ret das popf or push shrb jb inc mov scas sub mov jmp or (bad) lcall mov (bad) sbb sub popa mov cwtl cmc push int3 sub fistpll lcall aaa xchg repz mov stos or and flds add add popf add jbe xor lds (bad) jmp lahf sbb fnstsw xchg or and cmp daa xchg clc (bad) (bad) sub jne movsb or fildl or sub jns aaa cltd jmp es dec scas or out push mov jo xor ret and push fs sahf std pusha les and mov jge ds lcall and jbe cmp jecxz mov add add sahf add xor jae cmp xchg inc movsl push outsb lret sub or daa mov dec lods sbb push jle inc lahf (bad) pop mov nop icebp dec scas or daa xchg inc test outsb lret xor (bad) repz shll in lods and xchg lock mov push sub and popa rcrb fdivrl pushf clc pop mov test push pop mov scas adc xor add add adc xor (bad) xor push mov jae xor mov jl aaa xchg repz lods add or (bad) out dec mov insb int3 sub push inc sahf cld pop mov cwtl clc push mov jns cmp out cmpsb adc xchg repnz mov jae xor jae xor je xor cmpsl and ret and add xchg cmc push mov js mov das xchg repnz mov jl ss cmp mov inc lods or sub lds mov dec lods adc inc cmpsb add sbb aas lahf std pop mov das xchg cld pop mov mov js cmp sub insb faddl add ret and or int mov dec scas push js cmp ljmp xor xchg dec mov jae xor test dec mov add add dec stos or xchg lock mov ja inc test push push mov je xor ja cmp out push mov test inc stos or and add and pusha rcrb out mov jb cs push mov ja cmp sbb in cmpsl cmp mov inc mov add (bad) in dec test and mov and cmpsl or lcall pop mov add add xor jnp inc mov and test nop stc pop shll ljmp movsl or (bad) xor dec mov jge aas popf (bad) pop mov test jo xor jp cmp jb ss notb adc xor jp dec stos or add ja aaa fwait stc push mov jns ss negl sbb sarb ds (bad) gs daa (bad) cmc push mov lahf punpckhdq mov jl inc stos adc add push mov jb aaa xchg cmc push mov jo das (bad) out dec stos or and sub iret sub out push mov jae cs hlt push mov insl lret loop pushf cli pop mov jb add lahf add and arpl es inc movsl add mov lods adc xor fistpll mov jl inc mov jle lods or sub and shrl push xor mov add jmp scas or negb push jl cmp aaa lcall xor ja aas popf jmp and je cmp push dec stos or pop mov cltd hlt dec scas or int xchg ds lcall and cmp jge ds cli pop mov xchg out dec lods push push sub gs sub lds add sbb stc (bad) cmc add add sub icebp dec mov jns xor adc add pop mov mov inc mov sbb pushf cli pop mov jns cmp daa mov dec lods or sub add ret loope mov je cmp (bad) xor jo das mov dec lods adc xor outsl into xor outsb into das mov addr16 ljmp test inc lahf inc dec mov jne xor add add and or es jae aaa popf add daa mov jbe cmp pop jo cmp and jl inc movsb add jmp and je cmp sub stos push js cmp jns cmp (bad) popa shll in mov je cmp clc pop mov movsb add sub jae fs add add sub pop jl inc test imul mov add add add stc gs sub jno xor hlt push mov ja xor into sub in dec scas adc cmp mov dec scas push jbe ss (bad) data16 xor mov inc mov (bad) xor jge inc cmpsb or xlat aas mov xchg cmc push mov jns cmp cld pop ret and jl ds (bad) pusha mov cmpsl or ja xor repnz scas or (bad) xor cmc push mov jl inc mov jnp mov add add outsb (bad) xor sarl sarb movsl sbb pop sarl mov xchg pusha rcrb aam mov dec mov pusha mov (bad) in mov xchg dec lods or push int pushf pop ja push mov mov inc mov bound cwtl divb stos adc pop jge dec test jnp aaa mov dec test sbb xchg repz (bad) xor pusha int3 cmp js cmp sub (bad) cs add mov add jle push mov aad cltd jmp cmp sub (bad) aaa lods sbb lods sbb xchg dec test outsb lret xor xchg out dec stos adc movsb add adc daa mov push scas adc fimul add inc mov mov addr16 inc mov mov popa int mov rclb mov nop (bad) push inc stos adc fwait pop ja inc mov xchg pop lret or sub scas sbb add xor (bad) xor ret or push mov sarl lods sbb or sub dec mov sub or daa mov dec mov jbe or xchg jmp cmpsb add adc lret (bad) out dec cmpsb add ret and dec stos or and imul test pop mov insb (bad) and dec mov scas jmp and out lods adc mov push add stos es pop mov sahf sbb xchg cld pop les shll in dec mov fadds and enter mov outsl jmp xor fiaddl xor (bad) aam lods push mov imul sbb lods sbb mov in (bad) cmp pop (bad) xor ret daa xchg pop and mov cmc popa iret aas stos adc push mov mov add add jo xor pop mov test mov dec cmpsl pop lds loop sahf std pop mov xchg add loop mov sbb xchg hlt dec mov jbe inc mov mov dec mov and mov and popf (bad) (bad) (bad) and sbb imul push mov mov ja xor adc in dec lods or sub into sub call enter add ljmp mov pop mov and movsl or xor jb ss repz mov movsb pop imul add cmc pop mov xchg negl sbb sub mov jl inc mov test dec cmpsl or sub jb cs in inc movsl (bad) pop mov mov jg inc mov imul cltd lock cmpsb add punpckhdq nop jmp cmpsb add add and add jl xor push addr16 xor cld push mov js cmp jp cmp jb das mov dec lods or cs inc movsb add jmp lods add mov inc cmpsb pop les (bad) jecxz mov pusha mov xchg out dec test jbe xor pop mov mov mov dec test jge xor stos or xor cli pop mov sahf jmp mov add add adc notl and pop mov xchg hlt push mov insl lret sub data16 and sbb cmp jno sub dec stos or sub jmp mov xchg aas fwait cli push mov lock scas push outsb int3 sub (bad) cmp and inc mov push mov jnp cmp outsb int3 sub pusha rcrb fidivl xchg repz mov outsl iret sub or add sub jae xor add aad cwtl notl push jl cmp js cmp and ret jmp xchg out inc lcall add sbb xor inc lahf sti push test (bad) out dec cmpsl push les jle cmp cld pop mov mov jle aas sahf add cs out dec mov ja cmp add xchg dec lods adc xor xor outsl lret sub pop mov add add sbb insb (bad) xor insl fidivrl pushf cld pop lea and add mov dec cmpsl add loop lahf std pop mov fwait add sbb sti pop mov cmpsl or sub imul nop repnz mov outsb lret sub ljmp cltd idiv shlb inc test and sahf sti pop mov stos or aad xchg repz mov jbe cs in dec stos push outsb iret sub insl (bad) xor add mov dec stos or sub insb enter dec scas adc xor push jg inc mov lret icebp push mov jne mov test inc mov and cmpsb or daa xchg dec stos or loop mov adc cs cmc push mov mov ja jae cmp movsb push push dec test cmp fnstsw sti pop mov jns cmp add and pop mov mov pop (bad) sub jle dec mov jle fwait add mov dec mov jbe inc cmpsb or pop ret jmp fidivrl lahf or sarl mov lahf add and mov sahf add iret xor jp inc mov jle cmp test dec stos or xor xor fdivs popf add arpl das xchg ljmp inc lods adc inc movsb add add pushf std lds std popa (bad) cs cli pop leave sub and arpl push xor xchg dec scas psrlw cwtl (bad) pusha shlb out lods (bad) fidivrl mov cmp add push pop mov test fwait add push xor hlt pop mov cmpsl psrlw xchg out dec lods push insl lret out test jo inc cmpsb or xchg repnz mov jbe ss clc pop mov mov test xchg add add add repnz rcrb loop movsb or faddl or aad aad cwtl clc pop and xor jp inc cmpsl or mov push mov mov jle inc mov xchg push mov jne inc lods or or lcall and shll jmp lods or out dec scas push outsb int nop out push mov test mov mov push mov jbe cmp jl cmp jmp and enter push add mov (bad) in movsl add stos or and jmp xlat aaa lcall dec add sbb and mov jl inc test xchg cld popa ret es inc cmpsl or das xchg clc pop mov mov and lods or cs ljmp mov push mov jae xor cli jg push mov push push arpl into cmp inc mov and sbb cmp add push mov jne ss hlt push mov jno xor nop add fstpl jae les iret push int3 pop fstps pop mov cmp sub inc mov (bad) fsubrl les fwait sub pushf add xor sub hlt js jne jl xor out mov dec scas dec iret dec faddl outsl into xor mov push mov loop fldt outsb stc popl xchg stc push loop cmpsb pop cwtl sub xchg cmc add add sbb cld jb pusha repz mov mov add dec out pop icebp insl testb lods sub lods inc rolb lahf add imul sahf sub and pop cmc jle jl mov inc mov fstpt movsl sub push stos and sub inc ficoml imul lret dec lds push notl xor adc and push jg ds cmp inc add leave aas sarb iret push lret push into pop out in icebp jge jns inc mov stc mov xchg xchg adcl adc sub push mov mov rcrb flds adc mov inc sarl sarl cwtl stc pop mov lret cmp mov enter mov test orl mov mov enter mov repz inc mov stos setne cltd sub sub aaa int add jle jl insb cli jbe xchg sbb mov icebp push out out out jo push add and aam add adc lock mov jae data16 and jecxz movsl add (bad) sub jno xor xchg dec test xchg pop (bad) push mov sub (bad) pusha shrl mov insb loopne out scas pcmpeqb push ret lea scas ss rcll push mov popa ret sub cmp add mov cwtl or adc shlb cmp scas xor mov xchg and push rorl dec aam (bad) dec into jbe jo xchg or or xor das (bad) xor mov pusha loop mov push (bad) push lret pop out jmp add xor sbb jne outsl icebp push insl lock popa shlb sbb sub cwtl ss int3 pop aam fs addb lock fimul arpl insb in (bad) testb or push xchg and inc iret dec aad std jl inc stos psrlq popf add sub fidivrl movsb or sub or mov imul stc sub aad cwtl notl adc notb adc in incb jmp or daa pushf and xchg stc pusha ret sub and xchg add lahf sbb enter mov hlt pop mov (bad) push out ficoml fs and pop jecxz loope cmc imul leave push lret in dec scas or sub pusha (bad) ss rorb mov dec movsb or sub data16 and mov stos or sub data16 and cmp xchg inc movsl add sbb or sub in dec lods or add jae cmp and test test inc movsb add and psrlw int3 cmp push jb aaa cwtl add or sub repnz mov mov (bad) hlt or xor pusha lret jecxz pushf cli push mov ja xor pop and movsb push jo xor movsl push arpl and in movsl or and lcall sub arpl sub pop mov pop jns add fnstcw xchg repz mov outsb into sub in add push jp xor jp inc mov nop clc pop sahf or daa mov dec stos or lret in cmpsl add call je test inc mov (bad) pop rorl fnstcw pushf cld (bad) imul mov pop fdivrs lcall xor adc out dec lods push outsb int3 das fwait cli pop mov jne xor push mov cwtl testb add pop mov adc popf stc pop mov cs adc xor jbe xor add ss push mov jle push mov and cmpsl or aad xchg notb sbb jmp aad mov mov push mov jnp cmp cltd sub lahf (bad) arpl push jle inc movsl add les xor jle aas pushf xchg fistpl jae inc mov jp cmp sbb ljmp xor in cmpsb pop outsb into das (bad) jmp scas adc test js aaa pushf add xor jbe das nop add pop mov mov jp mov cwtl cld popa ret and in dec mov js cmp out push mov sub (bad) xor nop negl and sbb mov sub xchg cld pop mov mov mov test dec mov jle inc cmpsl or es dec lods push jb ss cmc push scas adc cmp je xor jb das scas pop sub aam popf sti pop mov add mov stos or jp cmp (bad) loope xor out dec scas push insb lret sub xchg add dec scas push jo xor les test dec cmpsb push push or in dec mov outsb int mov dec mov outsl int mov inc mov inc mov (bad) loope xchg out dec test gs and dec test popa mov (bad) xor sbb cmp notb scas adc mov push mov js ds add xor sbb ds lcall and insb sarl inc movsl add and cmp add sbb in dec movsb add ret loope popf cld pop mov jb xor notb jne xor jno sub outsl iret cs dec stos or aam xchg repnz lods or push jnp add or and std pop mov xchg cmc push mov outsl into sub push jb xor jne xor jno cs in dec scas or and inc mov sbb les jmp and (bad) xor jo xor lds and mov xchg dec mov js cmp faddl add ret out scas push insl add xor jb xor jns imul mov jle aas mov xchg dec lods or xchg clc push mov jp cmp jns cmp jnp xor sbb cmp sbb ss cli pop ret fisttp pop lds mov pop mov fidivrl lcall negb sbb cmp and mov stos cmp cltd cli pop mov xchg lock lods adc pop or inc mov test dec stos or int3 mulb notl lcall loopne sahf (bad) pop (bad) es dec test mov ja cmp and in lods adc inc mov test push ds enter pop mov lahf add daa xchg dec mov js cmp add in test mov je ss cmc pop mov mov jne cmp add js cmp loopne mov xchg repnz mov jae das (bad) in dec scas adc xchg sti pop mov mov jp xor jns cmp mov xchg push mov pop shlb loop mov mov dec scas or sub push jge cmp sbb inc add add push jle dec lods or icebp dec mov jo sub pop mov jae inc test insl (bad) aaa xchg repz mov push es inc test rcrb (bad) aaa xchg notl sbb aaa xchg repnz mov insb (bad) sub data16 daa test push mov xchg hlt push scas pshufw xchg icebp push mov imul push mov jb xor adc sub xor jno xor jbe xor je xor push inc mov mov dec lods (bad) lret sub imul stos pop les (bad) add inc popf lcall jns xor sbb xor jb xor ret addr16 xor outsl sarb and cmp add pop mov popf cli pop mov mov inc movsb or xor jae xor stc pop mov popf clc push mov jo xor insb leave sub addr16 sub add mov pushf add xor test add add add out test gs sub (bad) xor jle inc mov ss cmc pop mov sahf std fs sub in stos pop push xor sub sbb fidivr lahf add sub mov mov mov dec test imul ret daa mov dec mov ja cmp jae aaa cwtl add lretw in push mov jns aas mov mov dec mov jae cmp das xchg repnz mov js cmp and add cltd sti push mov jo pop shll loop mov and aam xchg lock mov jae xor and into aaa pushf sti pop mov popf lcall and and (bad) xor pop mov push lods adc mov xchg icebp dec scas adc lcall pop lret sub lcall cmp and add add daa (bad) jmp mov jp inc lahf add pushf add sbb mov test int stos sbb xchg (bad) data16 xor mov mov lods add or jmp mov and cmp inc mov mov pop roll or (bad) xor clc push mov stos push outsb xlat dec mov add mov push mov movsb pop push pop mov lahf clc push lods adc outsl leave xor mov mov dec stos pop gs fidivrl lock test bound mov inc mov jle ss aas popf clc push mov test mov mov xchg mull sub int xchg cli add inc scas adc test sahf add sbb dec mov mov enter js push enter jle pop iret cmp repz flds es or les cmpsl sbb add roll sub fistp inc mov std push inc mov xchg bound sub push mov xchg add out (bad) pop les data16 sub lock push shrb scas sbb mov jl dec test nop repz test pop mov jbe inc sahf lcall and or lock lods or and pop mov jno js cmp outsb int mov add or lret xor fdivrl sahf add and in test data16 es dec lods adc xor (bad) out pop mov mov mov ja aas mov test inc mov mov push mov outsl lret out stos or pusha (bad) sub in movsb sti push mov mov mov js cmp mov inc mov xchg icebp dec lods adc aaa add push popa les add and mov xchg std fs and pop shlb in cmpsb add out scas add or sub adc inc fidivr xchg lock arpl daa xchg cmp pop mov push and inc fwait (bad) dec mov popa mov insb les fild add push jge dec stos or sbb int3 and in dec stos or in dec test test cmp stc push mov je gs sub add pusha les loopne popf push les sbb fwait cli push mov jae sub hlt dec mov lds mov dec stos push jecxz rcrb (bad) xchg in push mov mov dec mov jp daa jge xor sbb and aaa xchg cmc pop (bad) aaa xchg stc popa lret pop outsl aam sahf std (bad) ds (bad) pop mov (bad) loop stos add mov fs (bad) in cmpsb or cs in dec mov push inc mov jle aaa xchg repz scas or decl pusha mov stos pop pop mov gs jbe daa jle sub jmp jmp mov jno cs inc mov js inc cmpsb add enter pop mov cmpsl add lret sub test dec movsl or cmp add daa (bad) repz cmp push mov insb shlb and cmp popa mov mov inc movsb add jno sub in sahf (bad) pop mov jb cs out push mov jb cs out dec scas adc ljmp xchg inc movsl push les and mov jp ds add and data16 and pop shll lahf std pop and jne and fldl cs je mov (bad) hlt pop mov lahf cli pop mov cltd negl sbb lds or cs inc mov and les loope sahf cli pop mov add add xor adc inc aam sahf std pop mov cltd stc pop mov mov jge cmp adc inc movsb add xor jl cmp mov dec lods adc inc cmpsb or xor cli (bad) (bad) es in dec test inc mov xchg xor lods push outsl (bad) xor xchg add xor push mov jl dec stos adc adc inc mov jno ss jmp das xchg sti imul lahf add xchg negb xor jbe xor jmp mov pop mov cmpsl push arpl push mov mov cltd std (bad) les mov push mov jbe dec mov jp inc cmpsb or cld (bad) (bad) sub sub jns cmp ljmp xor jge inc mov xchg inc mov and fnstcw test outsb xlat ss add sub push shrl notl jg inc sahf add and or sub lock (bad) sub pop mov (bad) in dec test cltd (bad) push push mov ja jmp mov mov mov jp lods adc cmp xchg hlt pop shlb jmp jmp fadds or aaa pushf add mov push mov and loopne cmpsb or ds add and ja cmp sti pop mov mov jns ss negl sbb fistpll mov add add arpl and out scas or clc pop mov sahf add es dec scas adc je inc movsb add xchg dec lods or nop lock lods psrlq (bad) lock scas pcmpeqw dec lods psrld cwtl clc pop mov lcall push mov jns inc movsb push push dec scas adc popf jmp sub pop and mov mov push loope fnstsw and jo xor stc pop mov jge cmp add add jno sub push scas or aad lahf add sbb add lcall ss xor daa sbb pushf cld popa lock jecxz frstor pop call test and test lea jle xchg and sub inc stos xor and mov test (bad) sbb pop int3 push fildl and jnp cmp jb xor addr16 and in mov jl pop (bad) ss xor mov mov test mov je lcall loopne pop xchg adc add jge cltd adc or (bad) and cmc fs in fadds pop aam int xchg cmc push mov jo imul pop fildll push jle lea mov leave xor or mov mov aam nop hlt xchg add (bad) xchg and aam lahf add sbb xchg sbb and test cmpsb sbb lods aas stos push imul jp xor jnp inc cmpsb std pop mov xchg hlt arpl daa and out mov incl rorb sub pop mov outsl fisttpll pushf or gs inc mov out xlat inc add aaa movsl sbb into inc mov sahf or cmp jp arpl inc mov xchg push mov je xor or in stos adc int xchg cli (bad) (bad) int stos or inc mov mov push add ds mov jnp pop rolb or into xor sbb xchg inc mov xchg in dec scas (bad) push les xchg lcall pop jno sub arpl daa xchg dec mov aad xchg cli arpl cmp test jge xor (bad) js inc mov and (bad) and sub shlb les outsl enter add add sbb xor and mov popf add sbb (bad) xor pop mov shrl movq inc stos push jo ds sbb sbb clc (bad) int cltd add dec mov (bad) xor aam lods pop jp inc stos sbb pushf adc sub test jbe inc mov mov pop mov aad movsb adc dec scas adc sub (bad) xor inc mov test pop sarb sahf add add add sbb jns inc sahf add lea daa mov imul daa shrl dec out out cli ja jo pop loope fcoml out cmp and xchg repnz mov mov aaa xchg ljmp insb lret das xchg sti insl xlat inc lods push fsubl pop fstl dec frstor js mov push fiadd sbb jmp sub add mov (bad) pop mov inc mov jge add inc test xchg or lahf cmp and mov rorb fldl xor fldenvs pop (bad) and dec leave push iret push mov in repz mov sub xor (bad) in dec mov je ss (bad) pusha add xor pop mov or sbb ss repnz mov je xor loop in fsubrl hlt jp xchg mov dec mov mov scas cmp (bad) insl rorb add pop lret inc mov mov push mov jmp sbb pop jg pop roll mov jae mov dec stos or ss repnz mov jl aas fwait clc push mov cmp jno je outsb int (bad) push aam out cld jle xchg push pushf adc jle ficomp lcall sahf push jmp and aaa sarl out mov fist into push fimull pusha (bad) ss hlt mov xchg test jg adcl add add ret and sbb pop aam add jle mov scas and cmpsl or hlt gs xor or int3 sub sub and lahf ss pop mov mov sbbb adc sub cwtl add sub cmp push leave pop ret sub cmc outsb add xchg add hlt jne dec enter repnz fs stc pop sub sub mov jo jp ret or jge fadd push mov outsl or cmp dec add add inc sbb adcl imul mov repnz xchg aas and fisttpll lcall mov dec mov repz (bad) fwait or and test mov ja stos push cwtl adc mov mov pop xlat pop nop jb jns cltd into jmp adc aam or cmc (bad) lahf mov xchg cwtl (bad) mov xchg mov push mov loope test cld cmpsl movsl addr16 pop push fild push test fxch cmp pop cmp arpl iret jno dec lock xchg popa std out loopne scas lea jecxz enter sbb int add sbb divb pop sub faddp push call sti (bad) cmp stc movsl ds cmp cmp mov cmp test test cmp test mov test test test test test mov test test test cmp cmp jmp call test test test test cmp mov test test test test test mov test test test test cmp inc cmp test test test test mov cmp test test test test mov test test test test test ret pop cmp cmp test test test clc adc test cmp test test test call push sbb mov dec insb add decb out mov mov xor mov (bad) push (bad) sub test test test jmp test cmp cmp test test pop test test cmp test test add test test test test test mov test test cmp cmp test mov inc test test test cmp test test test test test test dec test test test cmp cmp test test test test cmp dec test test test test test test test test test cmp dec cmp test test test test cmp test test test test dec test test test test test cmp cmp test test test mov test cmp test test test test test test test test call test cmp cmp test test test test cmp test test push test test test test test test test cmp cmp test test jne mov test test test cmp test add test test test test test mov test test test cmp cmp add test test test test cmp call test test test test test jmp test test test test cmp pop cmp test test test cmp push cmp cmp test test cmp push cmp cmp cmp cmp push test test cmp test cmp mov test cmp test cmp test call test cmp test cmp test pop cmp cmp cmp test cmp cmp jl cmp cmp test cmp cmp mov cmp test cmp cmp test sub cmp test test cmp cmp mov test cmp test test cmp sub test cmp cmp cmp test call cmp cmp cmp test cmp mov cmp cmp test cmp cmp push test cmp test test cmp mov cmp test cmp test test push cmp test cmp cmp cmp push test cmp cmp cmp test push cmp cmp cmp test cmp call cmp test cmp test test jmp cmp cmp test cmp test pop test cmp test cmp cmp inc cmp test cmp cmp cmp push test cmp cmp cmp test pop cmp cmp test cmp test inc test cmp cmp test cmp or test test cmp test cmp xor cmp cmp test cmp cmp mov cmp test cmp cmp cmp cmp jne test cmp cmp test cmp mov test test cmp cmp test cmp test test cmp test dec cmp cmp cmp test cmp dec cmp cmp test cmp cmp dec cmp test cmp cmp test dec cmp test test cmp cmp pushl test cmp test test cmp test cmp cmp cmp test cmp cmp cmp test cmp cmp cmp test cmp cmp test cmp test test cmp cmp test cmp test test cmp test cmp cmp cmp pop test cmp cmp cmp test cmp cmp cmp test cmp cmp test cmp test test cmp cmp test cmp test test cmp test cmp cmp cmp test cmp cmp cmp test cmp cmp cmp test cmp cmp test cmp test xor test cmp cmp test cmp cmp cmp cmp test cmp test cmp test cmp test cmp test test test cmp push test cmp test cmp test cmp cmp cmp test test cmp cmp cmp cmp cmp cmp test test test test test test cmp test test test test test test cmp pop test test test test test test cmp test test test test test test cmp test test test test test test cmp test test test test test test cmp test test or test test test test cmp test jne test test test test cmp jmp test cmp cmp test cmp lock mov xlat inc mov dec outsl jg xor addr16 jle pop mov repnz in push mov fucomp std aam lcall loop pop rol pop jne clc popf repz cmp cmp test test cmp test cmp cmp test xor cmp test test cmp test cmp cmp test cmp test ret ret cli fdivl sub jl sbb pusha imul pop inc ds enter jecxz das inc dec mov nop sbb push rcl pop (bad) dec stos inc mov mov xchg int push xchg lds and add push cmp xor orb lods cmp leave jo insl inc test test adc gs cmp test test cmp cmp mov test cmp test test cmp pushl test cmp cmp test cmp pop test test cmp test cmp mov cmp test cmp test test mov cmp test cmp cmp test push cmp test test cmp test mov cmp cmp test cmp test mov test cmp test cmp cmp mov test cmp test test cmp inc test cmp cmp test cmp cmp jne test test cmp test cmp mov cmp test cmp test test inc cmp test cmp cmp test inc cmp test test cmp test cmp jne cmp cmp test cmp test pop test cmp test cmp cmp mov test cmp test test cmp mov test cmp cmp test cmp mov test test cmp test cmp add cmp test cmp test test mov cmp test cmp cmp test mov cmp test test cmp test add cmp cmp test cmp cmp mov test cmp test test test add test test cmp cmp cmp lods test test cmp test cmp test je cmp cmp test cmp test add test test test test cmp mov cmp cmp test test cmp cmp jne test cmp cmp cmp test mov cmp test test test test cmp jne test cmp cmp cmp test mov test cmp test cmp cmp push cmp test cmp test test pop test test test cmp cmp push cmp test test cmp test push cmp cmp cmp test cmp push test test test test test push cmp cmp cmp test test push cmp test cmp cmp cmp push test cmp test test test push test test cmp cmp cmp push test test cmp test cmp call cmp cmp test cmp test add test test test test cmp ret mul pop jb loopne push mov sub mov imul test decb mov mov xor mov test mov dec outsl jg xor jle pop mov (bad) repnz in push cltd mov out std aam lcall loop pop rolb addl repz inc ret cli fdivl sub jl sbb pusha imul pop inc inc ds enter fildll inc dec mov sub adc pop (bad) mov adc adc push mov (bad) xchg lds and add push sbb pop mov jb (bad) (bad) sti xchg or mov xchg cmpsb (bad) in jb loopne push mov pop and cmp mov clc mov xor lret aaa push fcoml pop popf subps scas cmp sub jl pop rcrl scas cmp outsl add push or pop xor pop inc lret pop sub push xor dec sbb cmp or pop xor packuswb imul pop out mov jg jge xor cmp leave jo popf insl inc mov popa and test adc mov xchg cmpsb (bad) in ja out mov push sbb mov dec insb add decb out mov mov xor mov mov xlat inc mov dec outsl jg xor addr16 jle pop mov repnz in push mov hlt (bad) call fdiv inc divl loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas stc loopne aas fcomps enter push fbstp sub pop and mov sub mov xor sbb jae inc idivl sub mull xchg lock mov (bad) into mov sbb jmp sub stos sub push mov xor lret test cmc xor lds jl test push sub (bad) dec divl mov inc lahf xor inc (bad) into mov sub into mov jl cmp inc clc mov inc divl mov divw jb xor sub xor xchg xchg nop sbb divl stos mov divb sub add fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave (bad) fnsave sbb inc lods fnstenv les sub pop push inc lahf xor inc repz sub or clc les inc ror cmp jl in adc inc scas mov sub lods fnstenv divl mov inc jbe sub xor mov inc clc mov outsb divl daa cs mov mov divl pop outsb divl daa cs adc push mov xor mov inc cmc xor test xor inc outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov outsl test mov inc jge inc rcll mov fnstenv sub divb sub xchg mov ret stos mov fnstenv sub mov sub mov xor sbb xchg inc idivl add push sbb test jle insb lret rcl xor sbb mov insl or mull cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and push out cmp and imul xor inc jle pusha lret shrl sub pop pop sub jns jl test pop sub fnstenv divl mov inc jl sub pop adc inc lods fldcw divl mov inc jl sub loopne sub fstps inc divl mov inc jl sub xor sub fnstenv (bad) out xor inc jl sub sub sub fldenv inc divl mov inc jl sub mov sub (bad) inc divl mov inc push lcall jle adc cmp sub mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov clc dec mov test jle loopne divl stos mov mov (bad) lret sbb mov roll xor xor mov inc divl mov imul jo pop inc xor fcom inc divl pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe push pop jbe je ret daa lds je add jl cmp sub adc out or loope push pop add imul lds sub test inc imull test jl jo rdtsc daa lds je add jl jo sub dec and xor and mull mov bound xlat inc divl test inc mov xor push or dec fidiv sub jbe sub xor je sub jbe adc (bad) xor mov jmp divl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add fistpl add (bad) jns inc rorb je sub jno pop jg push xor imulb inc divl sub mov sub sbb xor pop cli xor sub pop sub xor popf xor lahf xor inc mov xlat adc mov sbb icebp mov inc popf xor stos adc stos adc das xchg jl add imul fs xlat ja fs inc xor inc pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg pop sahf xchg popf xor popf xor negl mov mov mov mov jle jl mov jmp push add inc idivl cmp idivl gs movsb xor jbe sub divl xor mov jbe jl or sub or das mov test aaa inc roll adc (bad) (bad) shrl jp iret sbb ljmp divl xlat xchg je xor xchg nop sbb xor jge mov or xchg mov inc jl js js sub mov stos cmpb insb enter and addr16 jbe clc inc divl mov inc divl (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait (bad) jmp fwait mov pop divl jb mov xlat mov (bad) repnz fcmovnu daa divl jno sysenter aam divl mov ss pop dec popf xor popf xor inc inc or (bad) sbb sub leave sub popf (bad) mov divl jno mov xor sbb adc mov jl and lods fnstcw mov out popa rcrb sub mov xor sbb test sub inc lods mov xor imull test pop ret xor fadds inc divl push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec push cmp dec mov pop divl jb push int mov divl rorl mov inc je sub push (bad) xor imul or xlat mov dec sbb testl stos andb stos (bad) repz mov idivl lods aas cli xor stos mov inc sub bound or xlat ss xlat aam xor inc popf jno inc (bad) xor mov negl sub into mov enter inc negl lret lahf sub inc xchg sub into pop inc jl and jl or divl out add imul divl sub dec (bad) xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl sub clc into pop adc xorb mov idivl lods inc sti xor lret out inc mov into pop or lret xlat jae data16 rdtsc daa les cmp inc jl dec lret dec or es inc xchg mov inc xchg xchg test mov movsb mov sub jl and je sub xchg and push jno mov dec xchg lret out inc lock inc je nop inc divl sub lcall push add inc imull add andb push dec pop inc or stos mov cld xor lret shll sub mov mov shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb shlb sub pop sub or jmp movsb mov mov xor push dec sbb clc mov dec divl mov icebp divl sub mov jnp enter dec push divl inc imull orl and inc or stos mov (bad) xor test xor inc popf jno inc (bad) xor sub and inc popf xor mov idivl sub idivl push lret sub divl mov push divl jb test xlat mov jle test inc movsb into popf cmc divl sub mov loope lock sub sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb sub negb jle test inc movsb mov sub xor sub bound mov popf xor aas inc mov xor inc jle test inc movsb mov sub xor sub bound mov popf cmp inc divl jnp push sub mov inc cmc xor adc mov push mov mov inc jle sub negl adc test dec sbb in sub popf xor cmpsl into popf icebp divl sub mov data16 jl sub stos sub inc lods fxam mov into mov inc push lods sub mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov sti dec mov or fcomps test jle test divl mov xchg jle inc lret shl xor sbb lret fnstsw divl jb jl inc adc loope mov mov inc inc popf xor jl pop adc outsb and divl sub dec int inc divl sub shlb sub fstps add mov and mov xor sbb stos fnstsw daa mov sub bound lahf xor inc (bad) into pop inc jl and divl sub divl sub mov cmp and into xlat test xor inc cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsb pusha jns cmpsl popa rolb xor inc or stos mov repnz lret rcrl mov scas int xor enter mov jl and dec int inc divl sub lods lahf add xlat ret daa inc divl sub jl test sub fldenv or js ja sub data16 mov xor sbb add mov divb sub mov xor sbb das fdivrl divb sub mov sub enter inc idivl sub sub mov inc divl rcrl inc pop addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb addb or sub leave sub adc cmpsb push inc divl stos (bad) xor inc idivb lods adc xor lret sub or inc div daa lds out shrb xor jl xor cmp xor dec jae sub or inc divl daa lds sub lods add xor test xor inc cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp out cmp inc cmc icebp daa lds sub adc inc aaa lods (bad) sub sub divl test orl cs add inc inc jl inc inc mov divl test jae sub or inc div pop push lret inc aaa lods and xor jl xor sar adc xor jbe mov xor bound sub xor imulb sub xchg mov sub push (bad) mov or jge ds divb sub or xlat mulb sub cmpsb push inc divl ret cltd push imulb inc divl add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add jno add xor lahf fdecstp xor mov (bad) into mov test iret xlat mov (bad) into lahf fdecstp xor mov (bad) into mov test iret xlat mov divl stos mov or xlat ret daa lds xlat mov xorl inc movsb pop sub mull sub inc sub test xlat jb movsb test xor inc divl jnp mov lahf (bad) sub idivl xlat aam xor inc lahf xor inc (bad) into lahf fdecstp xor mov (bad) into mov clc idivl sub mov inc (bad) lret inc dec or xchg divl sub push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov push scas mov inc divl jnp (bad) into lahf (bad) sub idivl xlat aam xor inc push jle mov mov adc jl adc rdtsc daa lds nop xor xor push jl pusha enter test divl jbe pushl sub icebp sub jl and jl es into loop stos mov cmp mov daa je and (bad) aam xor sub xor in dec and xor sub negl inc divl test inc mov xor push or cmp mov inc repnz inc aaa xor adc das cmp div xor enter test xor adc mov inc (bad) (bad) xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl xchg decl aam (bad) cmp sub dec and xor sub ret stos and lods xor xor inc jle jno cmp mov lods or dec lret dec lret dec js inc and pop rcll jl adc rdtsc pop mov jl test and inc lods fsts lods or mov inc repnz sub bound or ror into xlat sub pop sub hlt pop sub negb inc divl mov enter push cmpsl xlat aam xor inc jle fs xor inc lahf pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub pop inc sub leave stos and inc fs inc jo inc cmpsl xlat aam xor inc mov addr16 xor add xor lret mov or idivl pop inc jle imul cmp mov outsb mov inc divl inc inc popf xor popf xor lahf xor inc mov xlat adc mov call mov mov sub mov into jge push mov inc negl add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add sbb imul add leave sub (bad) xor and add lret out mov inc jg daa ret dec ret pop scas xchg mov shrb cmp repz fsubrs stos sbb jmp dec xorl out inc clc push sub xor repz inc je sub xor push dec jle test inc popf xor popf xor popf xor divl cmp or jo sub push divl jo jb sub fcomps push divl jo xor and (bad) inc divl mov inc xabort pop (bad) mov adc testl divl jo pop xor inc mov iret test inc test loope jmp test testl sbb sbb out push or push or push or aas out sub pop inc sub mov (bad) xor sub outsb sbb or pop dec jg outsl ret ret mov or cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs icebp cwtl cs and or sub mull inc repz ret jle inc leave sub or divl xlat adc fsubs ret pop pop jl sub fidivrl inc lods fsts mov divl inc inc mov mov inc pushl sub negl sub addr16 inc popf xor adc fisubl inc scas mov inc xorl inc popf xor or xor xor call xor xor loope and sub sub mov inc ja sub repnz cld (bad) xor inc idivl lods jo xor test sub mov sub fadd inc divl mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov push xchg mov lods mov sub pop sub testl add xor popf into xlat aam xor inc jle or divl mov inc push push es imull pop jl and push add inc idivl imul lock mull sub sub sbb jle aas add xor inc idivl mov pop jl jl mov xor (bad) lret (bad) mov insl and cmp inc divl sub mov rorl dec test cmp inc lods mov sub mov sub push sub push mov hlt (bad) xor inc xchg mov inc cmpl xor ljmp mov inc jle add xor jp sub mov sub notl inc jl adc xor pop (bad) lods or xor lret jmp mov and leave sub lods mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul (bad) mov imul inc xchg xor enter inc divl mov inc add stos mov jb sub add daa jl stos xor xor enter inc notl int3 ret xor inc sbb dec test iret xlat mov divl mov (bad) xor mov sub mov sub mov or (bad) icebp lret mov inc divl lock enter inc divl inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub inc sub fisttpl icebp daa das cld movl add jmp (bad) xor ret pop fwait clc inc jmp stos adc (bad) xor mov inc xabort ror nop xor mov dec repz mov cmp mov arpl inc divl jnp mov sub xor or mov sbb inc xor nop add ljmp into jp xchg push js cwtl push dec xor push inc pop inc les divl xlat mov or xor xor lret out mov jns enter add into enter stos test sub push pop jb xor cmp pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub fwait pop inc sub adc xlat das adcl neg ljmp je xor push sub pushf push pop das xchg pop sbb (bad) xor mov push inc or pop inc xor into xlat adc inc insl xor ds mov pop xor xor or into xlat jae push jle test and inc push inc pop (bad) mov mov pop pop das xorl in xor add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add jae add xor pop adc pop dec xor push jnp xchg inc inc cs xor ret adc xlat jae pop inc and push dec and or xor dec and push dec and popa aad mov xchg pop insl aaa xchg pop pop inc pop cmp mov fwait pop inc and inc pop xor pop gs pop pop cmp fadd inc divl movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl int3 jp movsl test mov inc inc and pop pop and push sub mov jb das adcl pop pop and push sub mov jb das adcl pop pop and push sub mov pop add push sub call dec xor xchg inc pop add fwait pop dec cmp (bad) stos or outsl and je sub popa pop cs push pop xor fnstcw or imul push pop and inc inc and fld test into insb and inc dec adc push dec xor inc add pop pop inc push out inc negl in pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test pop pushf test mov dec xor jo xor test and inc sub mov push inc adc inc insl cmp fldcw into fs push sub jo test mov push inc add dec sub or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or (bad) mov or jg sahf inc outsb test and pop pop inc pop scas into mov xchg inc dec adc gs xor imul or xor mov dec xor ret or xor test cmp shrb push dec xor fldcw test into imul inc inc das (bad) push insb and inc dec add push inc xor or imul push pop and pop inc and xor sub into xlat push test and pop inc and fstps xchg or imul pop dec sub sbb xlat adc inc dec add sbbl mov jg push and inc notl rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb rclb fs cmp xor cmpsl xor mov fwait pop sbb (bad) mov into jnp xorl xchg jo xor adcl fsts or jp xchg push outsb sub in mov fwait je and inc pop and xor je into xlat push xchg inc fs push js sbbl lcall mov lcall xor xor pop and xlat push xchg inc outsb sub push sub mov pop adc xchg inc inc push neg repnz divl push aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas mov aas pop out fidivrl neg loopne or addr16 xlat je xor inc pop sub adc popl dec movsb push pop popa mov push inc sub test xchg jle sub data16 test xor fwait pop or cmp mov adc or dec xor stos jl and inc je sahf pop dec addb (bad) inc pop and inc jle test cs insl jp cltd jle and (bad) mov test sub push dec push test and pop push or fsts or or arpl test jb cli cmp lahf bound fwait pop push adc fld fwait or sub divl sar into xlat inc divl sub divl sub popa cld mov neg cmpsl xchg or sub xor lods and xlat inc pop scas ret mov fwait push inc and push sub stos inc pop and inc sub movsl push dec sub dec cmp jg sub xor push and xlat insb xchg push roll cmc fnstcw les rolb into xlat xor inc sbb pop hlt mov neg pop mov into mov dec add xor pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc pop adc dec fsubrl jne push mov insb cli add cmpsl leave adc pusha lret pushf pop loop xor fdivl fsts into addr16 (bad) mov rolb or cmpsb ss loope xor lds shrl loopne in stos test cs xchg inc dec mov nop test cwtl xor ss adc mov or xchg clc sti hlt into test gs enter mov (bad) mov mov cmp add mov push mov jbe jno mov lahf inc or dec pop inc fcmovnbe out jnp jo xchg mov adc (bad) mov or lods iret sbb data16 mov mov push in daa mov fwait (bad) xchg in or cmp ret imul dec inc push por clc xchg cmp cmp iret mov lcall int3 push ja mov add aaa add mov sarb pop lahf mov adc pop loope pop and pop cmc lods lds inc cmp hlt pop xor and (bad) cmpsb mov or jge cld push movsb stc insl or scas xor pop xor lock and icebp jo or (bad) stos jno insb inc std pop mov mov cmp test rcrb cmp data16 (bad) (bad) cmc push lock stc daa sbb (bad) fcmovnu push leave mov dec mov pop push dec repz aas sahf mov xor xlat iret mov andl loop pop jb outsb push mov ds mov jp dec ja insl rorl outsl pop push popa stos sub inc arpl nop lahf add insb cmp out icebp ljmp (bad) pop xor stos jg mov jne dec or test push or notl mov push mov jnp lods out das adc test inc outsl push mov dec mov push xlat mov rclb lea cmp mov jge or (bad) push inc mov test cwtl add inc xchg and mov or mov push pop push cmp and dec cmp sub pop mov jno cmovle mov lea sub jecxz (bad) in xchg pop or aam sbb cwtl clc stos ds mov cmpsb or pop sub cltd mov jmp scas ret adc (bad) mov jne in cmpsb mov out sti ss mov fsubrl popa std or mov add xchg add inc insl mov insb daa adc sahf dec lds ds repz or dec (bad) fwait ret sarl mov scas (bad) hlt int3 mov call sub xchg in fs stos mov (bad) popf mov (bad) xlat pop add pop ljmp adc fcmovnbe scas gs lahf add inc push mov nop cwtl pusha cmp pop dec cmpl aam sahf cmp shrl gs xchg pop mov cmpsl mull in loope jae sbb or lods mov mov add mov add mov (bad) xchg mov xor and icebp jb lea dec sub cmp adc sbb jnp repz mov lcall ja push fcmovne sub int3 inc rcrl lds jbe hlt lahf cli inc ret scas (bad) les pop and outsb and leave pop mov cwtl insb shrb push xor test jp int jb cmpb (bad) lods daa add mov sbb cli and sti in jbe sbb adc jne into scas mov movsl nop outsl mov aam add repnz (bad) ret or data16 push mov scas cli dec fstpt and and adc add add adc add add add add and add add add add add adc add add add add into or add add add add add add add sbb add add orb cmp adc push and daa and and and and and and sbb sbb pop sbb sbb adc or push or push or sbb and aaa xor pop push lahf nop jge test ror into in in in in in in repz ror into in jecxz mov xorl mov xorl sub xor aaa xor xor xor sub and and pop sbb adc or push or xorl nop jge lret (bad) fstp fcmovu fcmovnu loope fucom (bad) in jecxz out in in in repnz repz cld cld cld cld cld cld cld cld cld cld cld cld mov xchg (bad) mov mov lea scas fwait jmp mov jge xorl pop push push dec ds push dec lods movsb pushf mov (bad) int mov mov int mov aam fstp (bad) (bad) in jecxz in in out out out repz div clc div clc cld cld cld cld cld cld mov mov popf xchg jge xorl pop push pop push dec push inc xor lods cmpsb mov mov mov movsb mov mov mov into lret int3 lret rcr fcmovnu loope fucom jecxz in in in repz repz cld cld cld cld cld cld cld cld cld cld cld cld scas fwait xorl movsb jns xorl pop push push dec ds dec cmp jb mov stos scas test mov movsb mov mov mov int mov iret into fcom rcr fcmovnu in jecxz in in in in in jmp hlt repz repz cld cld cld cld cld cld cld cld cld cmpsb xchg jl xchg jl jb xorl pop dec push inc xor push mov movsb mov cmpsb lods cmpsb mov lods movsb mov mov mov les int mov aam fstp (bad) jecxz in jecxz in in repz repz repz cld cld cld cld cld cld cld cld cld cld cld cld mov jae addr16 outsb pop dec push inc cs nop jge mov lods cmpsb mov test mov movsb mov mov mov into int3 lret into (bad) aam (bad) aam fstp (bad) (bad) in jecxz in in div clc cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld sahf mov andl lods cmpsb mov cmpsb mov cmpsb mov test mov mov lods movsb mov pushf (bad) mov (bad) mov lret (bad) mov lds lds (bad) mov lds (bad) repz cld cld cld cld cld cld fwait andl pop inc sub movsb lods cmpsb mov cmpsb mov mov mov movsb mov lea lea mov xchg mov lea xchg jge xorl pop dec inc cmp inc cmp fcom ror (bad) mov (bad) mov aad gs dec push dec inc xchg jge subl andl mov lods movsb mov xchg mov push xorl jb xorl pop push gs dec pop push inc dec inc cmp xor cmp inc cmp inc cmp dec inc cmp ds cmp lods movsb pushf int mov lds jb sub pop (bad) jns mov jmp cmpsb mov mov lahf nop jge pop dec push dec cmp dec inc push dec inc push dec inc dec inc cmp cmp cmp inc cmp inc cmp inc cmp cmp cmp cmp data16 inc cmp push dec inc lret (bad) mov mov lret (bad) mov (bad) mov aad xorl xor mov lods movsb pushf scas test mov pop outsb pop inc outsb pop dec outsb pop inc push dec inc inc cmp cmp aaa xor xor cmp inc cmp dec inc cmp dec imul movsb pushf int mov cld cld cld cld cld mov (bad) (bad) mov (bad) mov (bad) mov into lret pop dec pop push inc movsb jne mov mov test je sub push sub imul jae pushf test mov lods movsb pushf mov movsb mov lret jecxz cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld cld jmp cld lahf nop jge mov mov movsb (bad) mov mov cs lret jne mov mov mov gs sbb mov lret rcr fcmovnu in jecxz in in out out out repz cld cld cld div clc div clc repz repz repz repz in in in in in in div clc popf xchg scas pushf mov pushf mov pushf mov mov aam sahf mov mov je sub push sub addr16 subl xchg jl lods movsb ror into in jecxz jecxz in jecxz jecxz in in in in in in repnz in in in repz repz in in in in movsb in in in in repz into lret pushf test mov xchg mov mov pop sbb pushf gs sbb xor pop xor pop xor pop xor pop xor push sub arpl les repz in in in in in in in in in repz out out out repnz in in in in in in in jecxz repz lahf nop jge cwtl jg mov mov mov (bad) mov pop data16 xchg jnp gs sbb jp xor pusha cmp cmp addr16 xchg xchg jp xor imul cld cld cld cld repnz in in in in in in in in in in in in in jecxz jecxz jmp jae xchg jl fwait subl mov (bad) (bad) mov xorl sbb mov gs sbb je sub push xor pop xor push movsb jo xor inc cs xor inc ss aam cld cld cld repz in in in jmp jecxz (bad) in jecxz mov fwait andl jl xchg jl xchg jl fwait xorl imul arpl mov inc adc inc sbb and sbb xor xor xor and and and and sbb pop adc aam cld cld cld in jecxz jecxz data16 fstp (bad) in in lahf nop jge andl jae mov xchg jl xchg jl fwait cmpl pop sbb jp xor imul adc inc sbb sbb sbb sbb or sbb dec sub dec sub push dec inc inc and xor repz jmp fstp fcmovnu fstp fcmove int3 lret pop fwait andl outsb mov jae xchg jl xchg jl mov pop sbb jp xor addr16 fs adc push sub push sub push sub imul jg mov into lret jecxz cld cld cld int mov popa cmp pop xor cld cld fstp fcmovbe aam jmp (bad) mov mov insl dec fwait andl gs xchg mov mov mov mov pop sbb jp xor jne subl xchg jl mov in jecxz jecxz in jecxz jecxz in in in in in in in in in cld cld cld outsb pop dec popa inc and sub mov in jecxz iret into (bad) aam lahf nop jge insl dec xchg jge xchg jnp fwait andl gs xchg mov fwait andl pop sbb jle cmp add cmp jp xor mov fstp (bad) (bad) in jecxz out in jecxz sub jle cmp xor movsb inc in jecxz lret aam xchg xchg mov xchg jnp xchg jge fwait andl gs xchg xchg jl pop dec sbb cmp add cmp pop xor dec sub xchg jnp cld jmp in jecxz (bad) in in in mov push jp xor pop xor pop xor push sub mov ror into mov sub insl dec subl jne mov xchg jnp xchg jnp fwait andl jae push inc sbb cmp or gs sbb fs adc push jp xor repz in jecxz repz subl sub je sub pop xor push sub mov fcmovnu xorl pusha cmp dec xchg subl jne mov xchg jnp mov inc sbb andl aaa or fs adc fs adc dec sub popf xchg repz fstp fimull or je sub push sub push sub push sub jnp in jecxz push sub popa cmp arpl andl imul push mov mov fwait andl inc and andl aaa or fs adc fs adc pop aaa or cld cld cld mov push gs sbb sbb sbb sub inc sbb mov push sub pop xor popa cmp arpl andl imul dec subl andl sbb andb xor fs adc fs adc fs adc dec sub into int3 lret outsb pop xor fs adc inc sbb sbb sbb sbb imul push sub pop xor pop xor popa cmp arpl movsb addr16 xchg mov xchg jnp push inc xor adc andb xor fs adc fs adc fs adc push sub je sub aaa or popa cmp fs adc inc adc arpl jp xor inc sbb je sub pop xor pop xor pusha cmp cmp addr16 xchg mov push inc xor adc jp xor sub pop xor pop add add add add add jp xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor popa cmp gs sbb sbb sbb je sub push sub push sub arpl inc and pop mov test gs andl gs andl gs andl gs jnp fwait andl gs andl gs andl gs andl gs xchg xchg mov mov mov mov xchg jl xchg jl xchg jl xchg jl mov adc or xchg cmpsb xchg jl xchg jl xchg jl jmp scas fwait subl scas fwait subl scas fwait subl scas fwait subl stos cwtl jg xchg jl fwait subl mov test mov mov xchg mov xchg jp xor add add add sub add adc add and add add sbb add add inc add add pop push dec push dec dec dec inc inc inc inc cmp aas pop push xchg mov shr call out in in loopne fnstcw jb jnp jb push pop dec cmpb lcall mov mov rcl loope fucomp call stc stc cli cld cld cld mov mov jp gs xchg (bad) mov cmpsb mov test mov ret mov xlat aam loop loopne in in hlt hlt cmc stc stc cli cld cld cld movsl xchg jns push lods cmpsb mov lods cmpsl mov lods ret enter lds int3 (bad) loope fucomp in in in jmp popf mov mov cmpsb mov cltd lea jbe jg xorl jo je pop push push jl movsb enter ret mov xchg test test outsb popa push pusha push dec pop push dec pop push dec fs push outsl addr16 xchg lcall mov test movsb cltd popf xchg adcl lods mov sarl loopne out out in in call popf mov popf test mov inc test subl (bad) ror (bad) in jmp data16 icebp lock lock out in jmp ror enter mov xchg mov js jg jno sub push xor jne cmp dec fwait popl out out jmp loopne scas mov pushf test pop lea imul inc and and inc sub xor cmp (bad) loopne aam int3 mov jno xchg jnp xchg subl movsb popa ds andb lea enter jae cmp aam mov xchg jle cltd (bad) data16 mov mov popa push mov push push jbe xor in loope xchg push sub mov mov mov xchg jle xchg subl push mov inc push fs adc sbb enter jo sub xor je andl insl dec mov js pop push dec mov inc push fs adc jno sub pushf mov sbb dec es jp jge cmp andl outsl push pop push inc mov addr16 sbb push inc push imul arpl inc push addr16 sbb sbb push sub pop xor andl dec inc mov xchg mov jbe nop jbe nop jbe movsb jns nop jbe nop jbe nop jbe nop jbe xchg jnp xchg subb mov mov add add add and add jp outsl add or add add jb add inc add incl jo dec add pop ja add add adc (bad) incl add add add add add add add add add add add add add cwtl sbb (bad) (bad) (bad) incl add add add add add add add add add add add add add mov inc add (bad) (bad) incl add add add (bad) (bad) incl add add inc add and or dec add inc add mov add inc add dec add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov call push push push mov movl movl movl movl movl movl movl lea push push lea push call push call call lea call movl movl movl cmpl jne movl call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl call mov movl push call movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call jmp movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea call movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov mov cmpl jae movl jmp call mov mov cltd idivl mov xor mov mov mov movl cmpl je jmp movl push push call mov lea call movl push push push call mov movl movl movl lea mov call movl or test je movl movl movl movl lea push lea push lea push call mov lea call movl push push call cmp jne movl call movl movl movl lea push lea push call movswl test je jmp jmp movl movl movl push lea push lea push call mov mov call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push call push push mov push call mov call mov mov movl lea lea call movl push lea push call mov lea call movl call fwait push jmp lea call lea call lea call ret lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl xor lea push lea push mov mov mov mov mov mov mov mov mov mov mov mov mov call push call mov mov lea lea mov mov call lea call lea push call lea push lea push call lea push call lea push lea push push call add push push call fstp push push call fstp push call lea push call mov mov lea lea movl call lea lea movl movl call lea push call push mov push push call push push lea push push lea push call lea lea call fwait push jmp lea call lea push lea push push call add ret mov lea call mov lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop sahf sahf sahf sahf mov (bad) (bad) (bad) (bad) lcall adc add movsl or shlb add add fisub add (bad) movsl or push cmpsb or and add inc cmpsb or push cmpsb or outsb cmpsb or jl or mov or stos cmpsb or mov cmpsb or fsubs or cli cmpsb or push cmpsl or xor add cmpsl or inc cmpsl or pop cmpsl or outsb cmpsl or js or xchg cmpsl or movl or mov cmpsl or fisub or (bad) cmpsl or adc or push test add test add or dec test add or lods add andb outsb test add add test add add mov test add test add test add test add add andb add add or add add dec push push inc push dec xor inc dec dec add xchg add jbe popa push popa jb jae inc je push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add add jbe popa dec outsb inc jae jb add pop pop jbe popa push popa jb imul pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 popa inc outsb gs je inc outsl jne fs jb outsl jb add add inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push je push popa jb popa insb add enter jbe popa dec xor jb add add jbe popa dec jae je imul gs pop inc dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs pop jbe popa push je push outsl inc outsb jae add test bound jo xor pop add jbe popa push popa jb outsl jo add push add dec popa je outsb add add jbe popa push je dec outsl jbe add inc add jbe popa push je push popa jb outsl jo add insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 