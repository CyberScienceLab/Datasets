push mov sub movl movl jmp mov add mov mov add mov mov add mov mov cmp jae mov movsbl sar mov mov mov mov mov movsbl shl and mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl shl and sar mov mov add cmp jae mov movsbl sar movzbl or mov mov movsbl and mov mov mov mov jmp mov movb movzbl mov mov mov mov jmp mov movb mov movb movzbl mov mov mov mov jmp mov movb mov pop ret push mov movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl sub jmp movsbl cmp jl movsbl cmp jg movsbl add jmp movsbl cmp jne mov jmp movsbl cmp jne mov jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov add mov mov mov sub mov test je mov add mov mov movzbl push call add movsbl shl and mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl and shl mov mov movzbl push call add mov movsbl sar movsbl or mov mov movsbl cmp je movsbl shl and mov mov movzbl push call add movsbl movsbl or mov jmp mov sub mov movb movl jmp mov sub mov movb mov mov movl mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov jmp mov mov pop ret int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl jne mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne cmpl jl cmpl jge mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl jmp mov sub mov cmpl jl mov add mov sar and je cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp jmp cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov add mov jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov pop ret int3 int3 push mov sub push movl movl movl movl movl movl movl mov mov mov test je movl movl movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov movl mov shl mov shl lea mov shl add mov movl jmp jmp jmp jmp push push push call push call push push call add mov cmpl jne jmp push mov push mov push call add movl movl mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov mov push call add test jne mov cmp jge cmpl jne movl mov shl mov shl lea mov shl add mov cmpl jne mov shl mov shl lea mov shl add mov mov mov mov sub mov imul mov shl mov shl lea mov shl add mov mov mov mov add mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov jmp mov sub mov shl mov shl lea mov shl add mov mov imul mov shl mov shl lea mov shl add mov mov mov mov shl mov shl lea mov shl add mov mov add mov shl mov shl mov shl lea add mov mov mov push call add mov mov add mov mov and sar mov mov mov add mov mov and mov mov mov add mov mov mov mov mov add mov jmp mov push call add test jne mov push call add mov jmp movl mov push call add movl jmp mov add mov cmpl jge mov movl jmp movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge movl jmp mov add mov cmpl jge mov shl mov shl lea mov shl add mov cmpl jl mov and shl mov mov and shl or mov mov and shl or mov mov or mov cmpl jne mov mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov mov cmp jne mov mov jmp jmp mov cmp jne mov mov mov mov mov mov add mov movl jmp mov add mov mov shl mov shl lea mov shl add mov mov cmp jge mov shl mov shl lea mov shl add mov mov imul mov mov mov mov jmp jmp jmp jmp jmp cmpl jl cmpl jl cmpl jge jmp jmp mov sub mov mov mov jmp movl movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov jmp mov add mov sub mov mov cmp jge mov mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov cmpl jl mov cmpl jge mov add mov mov mov jmp mov cmp jge mov add mov sub mov mov cmp jge mov mov mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl mov cmp jl movl movb movl mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb mov cmp jl mov cmp jl mov cmp jl movl movb movl movb movb movl movb movb movb movl movb movb movb movb movl movb movb movb cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl cmpl jl cmpl jge movl movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov sub shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov add mov movl mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov mov add mov movl movl jmp mov add mov cmpl jge mov cmpl je cmpl jne mov mov mov mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add movl jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add jmp mov add mov sub mov cmpl jle mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp mov mov push call add jmp mov movb mov add mov mov add mov mov mov push call add mov mov jmp mov cmp jge mov add mov sub mov mov movb mov add mov mov add mov mov push mov push call add mov add mov jmp mov add mov mov cmp jge mov mov push call add mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jge cmpl jne cmpl jne movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov jmp jmp movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne mov mov mov mov mov add mov jmp movl movl jmp mov add mov mov cmp jge movl jmp mov add mov mov cmp jge mov mov mov cmp jne jmp jmp mov cmp jne jmp mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov add mov jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp movl cmpl jne mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov imul movl mov add mov jmp mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov sub imul mov imul mov mov mov imul movl mov add mov mov cltd and add sar add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push cmpl jge mov add mov call movl movl movl movl movl movl movl movl movl movl movl movl cmpl je movl mov push call add mov mov add mov jmp mov sub mov jmp mov sub mov cmpl jl mov imul mov imul mov cmp jne mov add imul mov imul mov mov jmp movl jmp mov add mov mov cmp jge jmp movl movl jmp mov add mov mov cmp jge movl jmp mov sub mov cmpl jl mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp cmpl jge xor jmp lea push push call push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add push push push lea push call push push call add mov mov push mov push push push call add mov push call add call push call add push call add push call add push call add push call add mov mov mov mov mov mov lea jmp dec dec dec dec xor pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 push mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov mov mov mov mov add mov movl mov mov mov mov mov cmp jge movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp movl jmp mov add mov mov cmp jge mov add movzbl mov movzbl cmp jne jmp jmp jmp mov cmp jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movzbl test je mov push push mov add push call add add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp push mov push mov push call add movl mov mov mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add cmp jne jmp mov push call add mov jmp mov push call add movl movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov mov movl movl mov mov mov cmp jge mov cltd and add sar cmp jge mov movzbl test jne mov add mov cmpl jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov cmpl jne mov movzbl test jne mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov jmp mov add mov movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov shl mov mov mov jmp mov add mov mov add cmp jge mov mov mov mov mov add mov jmp mov mov movl jmp mov sub mov cmpl jl mov mov mov sub mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp mov movzbl test je mov add mov movl jmp mov sub mov cmpl jl mov mov mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp mov add mov jmp movl movl mov cmp jge mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne mov push push mov add push call add add mov jmp mov add mov mov movzbl test je mov or mov mov add mov mov add mov mov push push mov add push call add add mov jmp push mov add push call add xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push call add mov cmpl jne xor jmp mov push call add mov mov push call add test jne mov push call add mov add mov mov push call add mov jmp mov push call add movl movl mov cmp jge movl mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov movzbl test je mov or mov mov add mov mov mov mov mov add mov jmp push push call add mov cmpl jne xor jmp movl mov push call add test jne mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov mov push call add mov mov mov movl mov shl or mov mov shl or mov mov shl or mov mov or mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov imul mov mov mov add mov jmp mov push call add movl jmp mov add mov mov sub cmp jge mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push mov imul mov push call add jmp movl mov add mov mov mov mov addl cmpb jne mov sub mov mov push push push call add xor mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov movl jmp mov add mov cmpl jge mov movb jmp mov mov cmpl jne mov add mov push call add mov mov mov mov movl mov movl movl jmp mov add mov mov cmp jge mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movsbl cmp jne lea mov mov add mov mov mov mov addl cmpb jne mov sub mov cmpl jne movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp movsbl cmp jne mov add cmp jle mov mov mov mov mov add mov mov mov mov addl cmpb jne mov sub mov je mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp movl jmp mov add mov cmpl jge mov movb jmp mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov add mov mov add mov cmpb jne movl jmp mov add mov mov movsbl cmp je jmp movl jmp mov add mov mov movsbl cmp je jmp mov movb mov add mov mov mov jmp mov add mov mov add cmp jge mov sub mov mov mov jmp mov movb mov add mov mov movb mov add mov mov movb mov add mov mov movb movl jmp mov add mov lea mov mov add mov mov mov mov addl cmpb jne mov sub mov mov cmp jae mov mov mov mov jmp call jmp jmp xor jmp jmp movsbl cmp jne jmp jmp movsbl cmp je movsbl cmp jne jmp jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push lea mov addb lea mov lea mov lea mov lea mov lea mov push push push mov push call push push push mov push call mov push call add mov push mov push call add test jne xor jmp push mov push call mov push push push lea push call test je lea push mov push mov push call test jne lea push call lea push call jmp mov pop pop mov pop ret push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret push mov push mov mov push push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov mov mov cmpl je cmpl je cmpl je jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp push push mov push push mov push call jmp mov push call jmp mov push mov push mov push mov push call jmp jmp lea push mov push call mov lea push mov push call jmp push call jmp mov push mov push mov push mov push call jmp xor mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je cmpl je jmp mov jmp mov and movzwl cmp je mov and movzwl cmp jne mov and movzwl push mov push call mov jmp xor mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add xor jmp mov and pop pop ret mov push mov pushl call test jne call jmp xor test je push call pop or pop ret xor pop ret mov push mov pop jmp push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push pushl pushl call add mov cmp je xor jmp call mov pop pop pop ret mov push mov sub push push push xor cmp je cmp je mov cmp jne call push push push push push movl call add xor pop pop pop leave ret mov cmp je or xor divl cmp ja mov imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je jl mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl push push push push push call add xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov sub push push mov xor cmp jne call push push push push push movl call add or jmp push call cmp pop mov jge mov push push push call add cmp mov jl mov test jne sub jmp mov mov push mov sub mov test je mov mov sar mov and shl testb je mov cmp jae mov cmpb jne incl xor inc cmp jb cmp jne mov jmp test js call movl jmp testb je mov cmp jne mov jmp mov mov sub add sar and lea mov mov shl testb je push push pushl call add cmp jne mov mov add jmp cmpb jne incl inc cmp jb testl jmp push pushl pushl call add test jge or jmp mov cmp ja mov test je test je mov mov mov testb je incl mov sub mov mov add pop pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret mov push mov push mov mov test jne call movl or jmp and cmpl mov jne push call add andl pop push call mov pop test jns and mov jmp test je test je test jne movl pushl pushl push call pop push call xor add cmp setne dec mov pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp mov cmp je cmp je cmp jne pushl call pop mov push pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov push push mov push xor or cmp jne call push push push push push movl call add or jmp testb je push call push mov call push call push call add test jge or jmp mov cmp je push call pop mov mov mov pop pop pop pop ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp testb je mov mov call ret push call pop mov push call pop mov movl call jmp mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl push push push push push call add orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret mov push push push mov call movl mov pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov jne orl mov call push call pop push lea call push lea push call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret xor ret push push call xor mov lea push call push pop mov mov cmp jne mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov jmp mov xor inc push call pop test jne push call pop call test jne push call pop call mov call test jge push call pop call mov call mov call test jge push call pop call test jge push call pop push call pop cmp je push call pop call test je movzwl jmp push pop push push push push call mov cmp jne push call call mov jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov jmp xor inc ret mov movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec cmp mov jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov test je inc cmpl mov jl mov sub cmp ja movsbl movsbl and xor jmp xor xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov cmp mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmp lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl xor mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmp jne lea push push pushl call pop call pop pop cmpb jne cmp jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop sbb inc add inc add add leave inc add lret inc lret jne inc add mov mov pop ret mov push mov sub mov xor mov andl push push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea movl mov mov mov mov movl movl mov call push mov call lea push call test jne test jne push call pop push call push call mov xor pop call leave ret mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret mov push mov pop jmp mov push mov pushl call pop test je pop jmp push call pop pop jmp xor push push push push push call add ret mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov xor cmp jne push push push push push call add push pop jmp call mov mov xor pop pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp mov cmp je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp pushl lea pushl movl pushl movl push mov mov call add pop leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push xor cmp jne call push push push push push movl call add or jmp push mov push mov cmp je cmp jne call push push push push push movl call add or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge dec dec pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov push mov push xor cmp jne call push push push push push movl call add or jmp push mov cmp je cmp ja call movl jmp pushl pushl pushl pushl push push call add cmp jge mov cmp jne call movl push push push push push call add or pop pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov push push xor cmp jne call push push push push push movl call add or jmp push mov push cmp jne cmp jne cmp jne xor jmp cmp je mov cmp ja call movl jmp call pushl pushl pushl cmp jbe mov mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push mov call add mov cmp jne cmpl jne call cmpl jne call mov mov jmp cmp jge mov cmp jne call movl push push push push push call add or pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jge or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jge or pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov cmp mov jge andl add push call pop pop ret add push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call push push push push push movl call add xor jmp movl jmp orl mov jmp movl orl xor inc inc mov push cmp je lea mov cmp je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne orl movl jmp or jmp testb jne orl jmp movl jmp testb jne mov and or mov mov and or mov jmp cmp jne orl movl jmp sub je sub je dec je sub je sub jne testl jne or jmp cmp jne andl movl jmp cmp jne or movl jmp testl jne orl jmp testl je xor jmp orl inc mov cmp jne cmp je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add orl jmp push push push call add test jne add orl jmp push push push call add test jne add orl jmp inc cmpb je cmp je call push push push push push movl call add jmp push pushl lea pushl pushl push call add test je xor jmp mov incl mov mov mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp shl push call pop mov mov mov add cmp je push mov add push call pop pop test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov mov call mov xor mov mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call push push push push push movl call add or jmp push push mov mov sar lea mov and shl add mov add sar mov mov cmp je cmp jne mov not test jne call xor mov call push push push push push movl call add jmp testb je push push push pushl call add pushl call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call test je xor cmp je test je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add cmp mov jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete inc inc addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov add testb je mov mov test jne mov cmp jbe jmp mov mov andl sub lea cmp jae mov incl mov inc cmp jne incl movb inc incl mov inc incl cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov cmp jne cmp jbe jmp mov mov andl sub lea cmp jae mov addl movzwl inc inc cmp jne addl push pop mov inc inc addl addl mov inc inc cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop pop mov xor pop call leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor cmp jne call push push push push push movl call add or jmp mov pop pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop test inc add out inc add out inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea jnp inc add inc add inc add inc add inc add inc add inc add out inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov xchg out inc add inc add or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop xor inc add inc add inc add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea aam inc add lock add lock add lock add lock add lock add inc add icebp inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov xor inc add icebp inc add inc add add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push push call xor mov lea push call movl push push pop push call pop pop cmp je mov mov lea jmp movb orl movb mov movb movb movb mov movb add mov add cmp jb cmp je mov cmp je mov lea lea mov mov cmp jl mov movl jmp push push call pop pop test je mov lea mov addl lea jmp movb orl movb andl andb movb movb andl movb add mov add cmp jb incl cmp jl jmp mov andl test jle mov mov cmp je cmp je mov test je test jne push call test je mov mov sar and shl add mov mov mov mov mov push lea push call pop pop test je incl incl inc addl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp mov dec neg sbb add push call mov cmp je test je push call test je mov and cmp jne orb jmp cmp jne orb push lea push call pop pop test je incl jmp orb movl inc cmp jl pushl call xor jmp xor inc ret mov movl or call ret mov push push mov mov test je lea jmp cmpl je lea push call mov add add cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret push push call mov test je cmpl jne push call pop andl push call pop mov test je push push call pop pop movl call cmpl jne pushl jmp push call pop ret push push pushl call test jne call mov call push call mov pop call ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov push mov push xor cmp jne call push push push push push movl call add jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov cmp je cmp je testb jne push call pop cmp je push call pop cmp je push call sar push lea call and pop shl add pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or mov or pop pop pop ret mov andl andl movl ret mov push mov push mov push push mov movl mov test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl movl mov pop pop pop pop ret mov push mov mov mov movl mov andl mov pop ret mov push mov push mov push mov movl mov mov test mov push je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov pop mov pop pop pop ret mov push mov push mov push push mov cmp je mov mov test mov je test je push call mov inc push call pop pop mov test je pushl push push call add jmp andl jmp mov mov pop pop pop pop ret cmpl movl je pushl call pop ret mov test jne mov ret mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov pop jmp mov push mov push push push push pushl call pushl mov mov call mov pop pop cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call pop mov pushl call mov add push call pop mov mov pop jmp xor pop pop pop leave ret mov push push push call mov push call add mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret push push call andl mov cmp ja push call pop andl push call pop mov movl call mov call ret push call pop ret mov push mov cmpl jne call push call push call pop pop mov cmp jne mov test jne inc push push pushl call pop ret push mov cmp jne push call pop test jne test jne inc add and push push pushl call pop pop ret mov push mov push mov cmp ja push push mov cmpl jne call push call push call pop pop mov cmp jne test je mov jmp xor inc push jmp cmp jne push call pop test jne test jne inc add and push push pushl call mov test jne push pop cmp je pushl call pop test je mov jmp call mov call mov pop mov pop jmp push call pop call movl xor pop pop ret mov push mov mov mov pop ret mov push mov push push call pushl call pushl mov call push mov call add mov pop pop ret push call pop ret pushl call pop ret mov push mov pushl call pop test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push mov push call pushl call add cmp ja test je pop pop ret mov push mov call pushl call pushl call push call add pop ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov cmp je mov xor pop pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push call mov movl call cmpl pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl call pop mov mov test je pushl call pop mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call add cmp jne cmp je mov mov mov mov mov mov jmp push mov call pop push mov call pop movl call cmpl jne mov push call pop pushl call xor inc cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push call mov push call push call push call push call push call push call push call push call push call add mov pop ret mov push mov cmpl je pushl pushl pushl pushl pushl call add pop ret mov push mov push push push mov push push xor xor mov cmp je inc mov cmp jb cmp jae push call pop cmp je push call pop test jne cmpl je cmp je push mov push mov push call add test je push push push push push call add push mov push push movb call test jne push push push call add test je xor push push push push push call add push call inc pop cmp jbe push call sub add push mov push sub push push call add test je xor push push push push push call add jmp xor push push push call add test je push push push push push call add mov pushl push push call add test je push push push push push call add push push push call add jmp push call mov cmp je cmp je push lea push lea pushl call pop push pushl push call pop pop pop leave ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret mov push mov push push push call mov test je mov mov push mov mov push cmp je mov imul add add cmp jb imul add cmp jae cmp jne mov jmp xor test je mov mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov mov mov mov mov cmp jne mov mov mov add cmp jge imul mov andl mov mov inc add add cmp jl mov mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call mov pop mov or pop pop pop leave ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call mov inc cmpb pop je push push call pop pop mov test je push push push call add test je xor push push push push push call add add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov mov sub push push mov push xor xor cmp jne call mov cmp je movl jmp call cmp jne push pop mov jmp mov cmp jne cmp jne call mov cmp jne xor jmp mov cmp je inc inc cmp jne inc inc cmp jne mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp je cmp jne call mov cmp je cmp je inc cmp jne inc cmp jne sub inc push mov call mov pop cmp jne push call jmp pushl push push call add push call mov pop pop pop leave ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov pushl call test jne pop jmp pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret push call pop ret mov push mov push pushl mov call test je mov cmp je push pushl call call test je mov jmp mov push call test jne push call pop test je push push call test je pushl call mov mov pop pop ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call pop mov push pushl call mov pop ret mov push mov pushl pushl pushl call pop call pop ret mov cmp je push pushl call pop call orl mov cmp je push call orl jmp push push call mov push call test jne push call pop mov mov movl xor inc mov test je push push mov call mov push pushl call mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call pop call pushl call mov cmp je push push call pop ret jmp jmp mov push push mov push call test jne push call pop mov test je mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl call pushl mov call pushl mov call pushl mov call add mov call test je push pushl call pop call mov cmp je push push call mov pop pop test je push pushl pushl call pop call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret xor inc ret mov push mov xor cmp push sete push push call mov test jne pop ret xor inc mov pop ret cmpl jne push xor cmp push mov jle push mov add push push pushl call pushl push pushl call add inc cmp jl pop pushl push pushl call pop pop pushl call andl ret mov ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov shl or mov not mov pop pop pop leave ret andl ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and jne call mov call movl push push push push push call add or mov jmp push call pop mov mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call mov orl orl movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret push xor cmp jl cmp jb call push push push push push movl call add xor jmp mov and sar mov shl movsbl and pop pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add inc mov inc test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp movb inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb mov add jmp cmp ja orb mov sub mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov inc inc cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov inc mov inc inc inc dec jne mov call jmp orb inc cmp jbe inc inc cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov ret mov ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add lea mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret test je test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop ret xor ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl lea mov call mov movl call jmp push call pop mov ret mov push mov push push call mov test push pop sete inc mov mov cmp je xor cmp je cmp je cmp je call push push push push push movl call add or jmp and jmp or mov jmp orl mov pop pop pop ret mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push mov xor cmp jle push lea add pushl pushl pushl call add test je push push push push push call add dec jne pop pop pop pop ret mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test je push push push push push call add mov jmp push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test je xor push push push push push call add cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret mov push mov push push mov push pushl pushl call add xor test je push push push push push call add lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret mov push mov sub push xor inc push mov call pop mov test je push lea movb mov mov lea lea pushl mov push pushl push push push call mov add mov movl push push push call add test je xor push push push push push call add pushl mov pushl call pop pop test je andl incl mov addl shl lea lea pushl mov mov push pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call add lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add xor test je push push push push push call add cmp je xor mov mov mov mov cmp je mov mov jmp push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test je xor push push push push push call add jmp xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test je push push push push push call add mov jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call pushl mov lea push lea push push lea push push add call add test jne xor jmp mov shl lea pushl lea push call pop pop test je lea push call add push mov call pop pop mov test je mov mov mov lea add imul mov mov mov lea push push mov lea push call mov lea push mov mov mov add add push push call add test je xor push push push push push call add mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov mov mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add shl lea pushl call test jne pushl call pushl call andl pop pop mov mov add shl movl mov mov mov pop xor pop call leave ret mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp shl mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test je push push push push push call add pushl mov lea movb call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je push lea call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call xor mov cmpl jbe call movl push push push push push call add xor jmp call mov mov call orl mov push push call pop pop mov mov cmp je push call pop movl mov mov call mov call pushl mov mov call pop mov cmp je cmp je push pushl call pop pop test je movl push call pop movl lea mov call push call pop testb jne testb jne mov mov call push mov add push push call add call andl call jmp mov mov xor push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push push xor lea pushl call add pop mov cmp jb pop pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret push push call xor xor cmp setne cmp jne call movl push push push push push call add or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop push push push push push mov call add mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop push push push push push mov call add cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov pushl push pushl call add pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov pushl push pushl call add test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push mov push mov push pushl xor lea mov mov mov mov mov mov mov call orl mov cmp jne call push push push push push movl call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc xor cmp mov jl mov sub cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmp jne push lea push push call add mov jmp mov mov cmp jne push lea push push call mov add dec lea mov mov cmp jne cmp jl cmpb jne cmp jge cmp jle mov mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp jne cmp jl cmpb jne cmpl jge cmp jle mov shl lea cmp je pushl push push jmp shl mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec lea mov cmp je shl mov mov cmp mov jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov mov incl test je mov lea call jmp orl jmp movsbl cmp jg je cmp jg je sub je push pop sub je sub je sub jne add mov mov orl cmp jne cmp jne cmpl ja mov shl lea cmp jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne push pop testl je cmp jne addl mov movzwl jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push jmp mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cmp je mov cmp je testl movswl mov je cltd sub sar mov jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp je pushl pushl push jmp mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test je jmp cmp lea mov mov mov jge movl jmp jne cmp jne mov cmp jne mov add mov jmp cmp jle mov mov cmp jle mov add push call mov pop mov cmp je mov mov jmp cmpl ja mov shl mov add mov mov mov mov lea push pushl movsbl pushl push pushl lea pushl push pushl call pop call mov add and je cmp jne lea push pushl pushl call pop call pop pop cmpb jne cmp jne lea push pushl pushl call pop call pop pop mov cmpb jne orl incl pushl jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp test je cmp je cmpl ja mov shl cmp jne lea cmp jne movl jmp pushl pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp cmpl ja mov shl cmp je mov movswl jmp cmp jne addl mov movzwl jmp cmpl ja mov shl cmp je mov movzwl jmp test je cmp jne addl mov mov jmp cmpl ja mov shl cmp je mov mov cltd jmp cmp jne addl mov mov jmp cmpl ja mov shl cmp jne lea cmp jne mov jmp pushl pushl push push call add test je jmp mov mov xor testb je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp mov cmp ja shl cmp je mov mov testl mov je cmp jne mov mov mov mov jmp movl mov mov mov jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne xor cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add cmp mov jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop aaa aas inc add inc add aas inc add inc inc add inc inc add inc inc add inc or je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov testb push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop pop ret mov push mov sub mov xor mov push mov push mov xor push mov pushl lea mov mov mov mov mov mov mov mov mov call test jne call movl xor push push push push push call add cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc xor cmp mov jl mov sub cmp ja movsbl movzbl and mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jge orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov push test je mov mov mov jmp movl pop add mov mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmpl jne lea push push pushl call pop call pop pop cmpb jne test jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je inc inc test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov mov test je mov mov jmp xor cmp je cmpl je call push push push push movl push jmp cmpb je mov andl mov mov pop pop xor pop call leave ret mov jo inc add inc add push inc add inc add inc add push inc add push call xor mov push call pop mov push pop mov cmp jge mov shl mov add cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push push xor mov cmpl jne lea mov push pushl add call pop pop test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call pop pop test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov push mov sub push xor testb push push mov mov mov movl mov je mov movb jmp movl mov lea push call pop test je push push push push push call add mov mov test jne test jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop push push push push push mov call add jmp mov jmp test je test jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov cmp mov jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp jne movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp movl jmp test je orl call mov cmp jne call mov orl call movl jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov jmp pushl call cmp jne mov mov sar mov and shl lea andb call mov push call pop pushl call cmp jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push or push pushl call add mov cmp jne call cmpl je pushl call jmp push lea push pushl mov call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp mov testl je testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl movl jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl movl mov sub push lea push pushl call add cmp je add cmp jg mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or mov cmp jne testb je mov mov and sar mov shl lea orb mov mov mov and cmp jne testb je pushl call push pushl lea push push pushl and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov pop pop pop leave ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov movzbw decl incl movzwl movzbl testb mov je cmp jne movzbl testb mov jne movzwl mov jmp mov mov cmp jne mov jmp shl movzbw or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov movzbw movzwl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbw or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbw movzwl jmp movzwl mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub push xor cmp jne xor jmp push pushl lea call mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov movzbw decl incl movzwl movzbl testb je cmp jne movzbl xor testb je cmp je mov andl xor pop pop pop leave ret mov mov cmp jne xor jmp shl movzbw or incl movzwl movzbw movzwl movzbl inc testb je cmp jne xor jmp mov decl cmp je movzbw shl or inc movzwl cmp jne cmp je cmp jne jmp sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov mov mov pop ret push push call andl pushl pushl call mov jmp mov mov mov mov xor cmp sete mov ret mov cmpl jne push call andl movl mov call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov mov xor cmp sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov sub mov xor mov push xor cmp je cmpl jne call mov cmp jne mov jmp push lea push push lea push push call test jne cmpl jne call cmp jne mov push push push lea push push lea push push call push call mov cmp je push lea push push lea push push call test je mov mov xor pop call leave ret movl jmp push push call xor mov xor cmp setne cmp jne call mov call movl push push push push push call add or jmp pushl call mov push call pop pop mov mov decl test je mov movzwl addl push call pop mov cmp jne orl movl call mov call ret push call pop ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbw mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov mov push push test jl cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor cmp push push jl cmp jae mov sar mov lea mov and shl add testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret push xor cmp jl cmp jae mov and sar mov shl add testb jne call mov call push push push push push movl call add or jmp mov pop pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call pop pop test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call pop pop test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret push push call mov cmp jne call movl or jmp xor cmp jl cmp jb call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl call pop push call test jne call mov jmp mov cmp je call mov mov call movl orl movl call mov call ret pushl call pop ret push mov sub mov mov mov mov mov shr jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne mov mov mov pop ret push mov sub mov mov mov mov mov cltd mov mov xor sub and xor sub cltd mov xor sub and xor sub mov or jne mov mov and mov cmp je sub push push push call add mov mov test je mov mov add sub mov add sub mov mov mov mov rep mov jmp cmp jne neg add mov mov mov mov rep mov add mov add mov sub push push push call add mov jmp mov mov mov mov shr rep mov and rep mov mov mov mov mov pop ret push push call andl movapd movl jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl movl mov call ret mov push mov sub xor push mov mov mov push pushf pop mov xor push popf pushf pop sub je push popf xor cpuid mov mov mov mov mov cpuid mov mov pop testl je call test je xor inc jmp xor pop leave ret call mov xor ret cmpl jne xor ret mov sub neg sbb not and ret mov push mov mov lea push cmp jbe call xor push push push push push movl call add push pop jmp xor cmp jne call jmp mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp cmp je mov mov xor pop pop ret mov push mov push push pushl call mov test jne pop ret mov andl andl mov xor mov movl inc pop ret mov push mov mov mov imul add jmp mov sub cmp jb add cmp jb xor pop ret mov push mov sub mov mov push mov push mov sub add shr mov imul lea mov mov dec mov test jne push lea mov mov mov mov mov mov test jne sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov sar dec mov cmp jbe mov cmp je mov mov cmp jne mov cmp jae mov shr not and decb jne mov and jmp lea shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov push shl add mov push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov imul mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret mov push mov push xor cmp jne add imul push pushl push pushl call cmp jne xor jmp addl mov mov imul add push push pushl call mov cmp je push push push push call mov cmp jne pushl push pushl call jmp orl mov mov incl mov orl mov pop pop ret mov push mov push push mov mov push push mov push xor jmp add inc test jge mov imul lea push mov pop mov mov add dec jne push mov push shl add push push call test jne or jmp lea mov cmp ja mov sub shr lea inc orl orl lea mov lea movl mov movl add dec jne mov mov add lea mov mov lea mov mov andl xor inc mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret mov push mov sub mov mov push push mov push mov mov sub add shr mov imul lea mov mov and dec cmp lea mov mov mov jle test jne add cmp jg mov sar dec mov cmp jbe push pop mov mov cmp jne mov cmp jae shr mov lea not and decb jne mov and jmp add shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov sar dec mov mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov lea mov mov mov mov mov mov mov cmp jne mov mov inc mov cmp jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov xor inc pop pop pop leave ret mov test je mov push shl add push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne cmpl jle pushl push pushl call mov mov imul mov sub lea push lea push push call add decl andl ret mov push mov mov sub push xor cmp jne or jmp cmp push mov push mov mov jle mov cmp je mov mov lea mov mov lea mov mov mov mov mov push xor cmp pop lea mov mov mov rep jl cmp je mov add cmpl lea jne cmpl jne mov mov test je dec cmp jg incl jmp mov sar dec cmp jle push pop lea incl cmp jl test jne cmp jg lea cmp jne mov cmp jb jne add inc cmp jl mov mov cmp jne xor andl lea mov mov mov cmp je mov cmp je mov cmp jb add cmp jae mov and add lea cmp je cmp je mov and add mov cmp jne cmp je mov sar dec cmp jle push pop cmp jne mov cmp jne incl mov mov cmp jne cmpl je cmp mov jge mov shr or or jmp lea shr or or mov cmp jne mov cmp jne cmp jne inc cmp mov jl mov mov xor mov cmp jne mov cmp jne addl addl shll incl add cmpl mov jl mov cmp jne mov cmp jne add incl mov cmp mov jl xor pop pop pop leave ret push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp push pop jmp mov push mov push xor cmp jne xor jmp mov cmp jne mov cmp jbe call push push push push push movl call add jmp mov xor inc jmp push mov cmp je cmp jne cmp ja push call pop test jne call push push push push push movl call add jmp mov movl xor inc jmp call movl xor pop pop pop ret mov push mov sub mov mov imul add add and mov sar push dec cmp push push jge or shr orl jmp add or xor shr mov mov mov jmp mov mov and and or jne add mov cmp jb cmp jne mov jmp mov mov and and or jne add mov cmp jb cmp jne jmp cmpl jne add mov cmp jb cmp jne mov jmp cmpl jne add mov cmp jb cmp jne call mov mov test jne xor jmp push call pop mov mov mov cmpl je mov mov mov mov cmp je mov mov and and or jne andl mov lea mov and and or jne incl mov add jmp mov mov imul lea mov mov xor and jne mov and push pop jmp add inc test jge mov mov mov sub mov sar dec cmp mov jle push pop cmp je mov cmp jne cmp mov jge mov shr mov lea not mov and mov decb jne mov mov and jmp lea shr mov lea lea not and decb mov jne mov mov and jmp mov cmpl mov mov mov mov mov mov je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jge cmpb jne mov mov shr or mov mov shr mov or jmp cmpb jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov lea mov test jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call push push push push push movl call add or jmp mov sar push lea mov and shl add mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl push push push push push call add jmp mov shr mov cmp jb mov pushl call pop mov cmp jne call movl call movl or jmp push push push pushl call mov mov mov add mov mov add testb je mov cmp je cmp je mov mov inc decl movl movb cmp je mov mov cmp je cmp je mov mov inc decl cmpb movl movb jne mov mov cmp je cmp je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov cmp jl cmp ja mov add lea testb je cmpb je cmp je mov cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne inc inc mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov add testb je inc cmp mov jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp cmp je mov cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov inc inc inc inc mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov inc inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc inc sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne mov jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call mov call movl jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov add cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov jmp push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test jbe lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp je push push push push push call add mov mov mov mov mov mov mov jmp push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp push push call xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp cmpl jne push call pop mov push call pop mov cmp je mov sub mov jmp mov movl call cmp jne push push pushl call mov mov call ret xor mov mov push call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call pop test je andl call jmp xor inc ret mov movl call int3 push call pop mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl pop cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call pop ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov cmp je jmp mov add mov imul add cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov jmp pushl call pop mov cmp je push call mov pop movl call cmpl jne mov mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl xor push push push push push call add or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call mov add mov jmp mov sub je sub je dec je call movl xor push push push push push call add jmp mov mov jmp mov mov jmp mov mov movl push call mov pop xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push push pushl call mov mov xor pop cmp jne call push pop push push push push push mov call add mov jmp push mov cmp jne push call mov cmp jne call push pop push push push push push mov call add mov jmp push push call mov cmp jne call mov mov call push call push push push push push mov call add call push call pop jmp push call pop mov call push push mov call cmp je pushl call push pushl call test jne call movl call mov jmp xor pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor cmpl push mov mov jne push push lea mov push pushl mov pushl push call mov add cmp jne call cmp jne push push push pushl pushl pushl call add mov cmp je xor inc push push call mov pop pop cmp je push pushl mov push pushl pushl pushl call mov add cmp je push push call pop pop mov mov cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test je push push push push push call add cmp je push call pop xor jmp cmp jne push push mov push pushl pushl push call add test je mov mov movzbl push call pop test je mov mov imul add sub inc inc cmp mov jl jmp mov push mov mov mov pop ret mov push mov sub push push push call andl cmpl mov jne push call mov test je mov push push call test je push call movl push mov call push call movl push mov call push call movl push mov call push call pop mov test je push push call push call pop mov mov cmp je cmp je push call pushl mov call pop pop mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call pop test je call mov test je mov cmp je push call pop test je pushl call mov pushl call pop test je pushl pushl pushl pushl call jmp xor pop pop pop leave ret mov push mov mov push xor push push cmp je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov cmp je inc dec jne cmp je mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop pop ret mov push mov push push mov xor push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov push push push push push call add mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov push xor cmp jl cmp jle cmp jne mov jmp mov mov jmp call push push push push push movl call add or pop pop ret mov push mov mov mov pop ret mov ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov push push xor push mov cmp jne push push xor inc push push push push call test je mov jmp call cmp jne movl cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov mov cmp je testl je cmp je cmp jg pushl pushl push pushl pushl pushl call jmp cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop jmp mov mov cmp jne mov mov mov cmp jne mov mov mov pushl call pop mov cmp jne xor jmp cmp je push push lea push pushl push pushl call add mov cmp je mov push push pushl push pushl pushl call mov cmp jne xor jmp jle cmp ja add cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push push call add pushl push pushl pushl pushl pushl call mov cmp jne xor jmp pushl lea pushl push push pushl pushl call mov mov add neg sbb and push call pop jmp pushl pushl pushl pushl pushl pushl call mov cmp je pushl call pop mov cmp je cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov push push mov xor mov mov push push xor push mov cmp jne lea push xor inc push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne mov cmp jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop jmp xor cmp jne mov mov mov cmp jne mov mov mov pushl call pop cmp jne xor jmp cmp je push push lea push pushl push pushl call mov add cmp je mov pushl pushl pushl pushl pushl call mov cmp je push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret mov ret call mov mov cmp je mov test jne call mov ret mov push mov sub movzwl movzwl mov mov test jne or leave ret andl push push mov lea push push push xor inc lea push push call mov lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call push push pushl or lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl push lea push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push mov push lea push push call add or mov pop mov pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push push mov cmpl mov je push push call mov pop pop test jne xor inc jmp mov call test je push call push call pop pop jmp movl jmp mov add mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push mov push xor push mov mov cmp jne cmp jne mov mov movl jmp push push call mov pop pop mov cmp jne xor inc jmp mov push pop push rep call xor pop mov cmp jne pushl call pop jmp mov cmp je push call pop mov cmp jne xor inc pushl call pushl call pop pop mov jmp mov mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push mov lea push push call add or je push call pop or jmp mov mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov lea mov mov mov cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov lea mov mov mov cmpb jne jmp push pop mov mov rep mov mov add mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl cmp mov jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle inc inc cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl cmp mov jg lea jmp mov incl mov mov inc inc mov mov movzbl cmp jle mov inc inc mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp lea mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret xor ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea push call mov pop mov test je andl mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl mov inc sub lea push push call add test je xor push push push push push call add push call add incl cmpl pop jb movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov lea mov movl pushl call pushl mov call mov pop pop mov add add decl lea mov jne lea push call mov pop mov test je add movl mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add mov movb pushl inc sub lea push push call add test je xor push push push push push call add push call add add decl pop jne movb cmpb pop pop pop je mov andl mov leave ret push call pop ret mov push mov sub push push push pushl lea xor call mov mov mov mov shl pushl call pushl mov call add incl cmpl pop pop mov lea jb lea mov movl mov pushl call pushl mov call addl pop pop mov add decl lea jne pushl call pushl mov call pushl add lea call pushl lea call pushl lea call lea push mov call mov add test je push push push lea call andl lea mov add sub mov mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call mov lea mov mov pushl mov sub add push push call add test je xor push push push push push call add push call incl addl cmpl pop lea jb lea mov lea mov movl jmp mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call lea mov mov mov pushl mov sub add push push call add test je xor push push push push push call add push call addl addl decl pop lea jne mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add push call lea mov sub add mov pushl push push call add test je xor push push push push push call add cmpb je mov andl pop pop mov pop leave ret push call pop ret cmpl push mov je push mov test je mov mov incl inc decl cmpl jne pop pop ret cmpl mov push jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb pop ret mov push mov push push push mov xor mov cmp je cmpl mov jbe push cltd pop idiv add mov inc decl mov test jle cmp ja mov mov dec mov mov mov dec mov inc cmp jb jmp cmp jae dec lea test je push cltd pop idiv mov add incl mov dec cmp jne mov add sub jmp mov pop pop leave ret mov push mov push push movsbl cmp push push mov mov jg je cmp jg je sub je sub je sub je sub je dec je sub jne mov xor cmp jl cmp jg jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jg mov mov jmp mov movb mov incl decl jmp mov xor cmp jl cmp jg cltd push pop idiv mov cmp jne push pop jmp sub je push pop sub je dec dec je dec dec je dec jne pushl pushl jmp mov xor cmp jl cmp jg cmp je lea jmp mov xor cmp jl cmp jg mov mov cmp jl cmp jg cmp jge xor jmp push cltd pop idiv cmp jl inc jmp mov xor cmp jl cmp jmp mov jmp mov cmp jl cmp jle call xor jmp cltd push pop idiv pushl push add imul add jmp cmp jg je sub je sub je dec je dec je dec je sub jne mov xor cmp jl cmp jg pushl lea push jmp mov cmp jl cmp jg mov pushl push pop mov mov call pop jmp pushl xor pushl push push cmp je push pushl call add test je mov cmp je mov pushl movb mov incl decl push push push push pushl call add test jne jmp push jmp mov xor cmp jl cmp jg mov mov jmp mov xor cmp jl cmp jle call push push push push push movl call add xor jmp mov mov jmp mov xor cmp jl cmp jg lea jmp sub je sub je dec je dec je dec jne call call mov xor cmp mov setne mov mov mov jmp mov xor cmp jl pushl cltd push pop idiv mov jmp pushl xor pushl push push cmp je push jmp push jmp mov xor cmp jl cmp jg pushl xor inc jmp mov xor cmp jl cmp jg cmp mov jg mov jmp mov mov call xor inc pop pop pop leave ret mov push mov sub mov xor mov mov push push mov xor sub push je dec je mov jmp mov jmp mov cmpl mov je cmpl mov jne mov mov add push mov mov inc mov mov mov mov mov mov mov mov push xor push mov lea push push pushl mov mov call mov cmp je add cmp jg call mov cmp je movl jmp push call pop cmp je movl add mov cmp je pushl mov push push lea push push pushl call dec test jle mov mov cmpl jbe mov mov mov mov incl mov inc decl dec test jg pushl call pop xor inc lea pop pop pop mov xor call leave ret mov test je mov mov cmpl je xor mov mov inc inc cmp je mov movsbl cmp jg je cmp je cmp je cmp je cmp je cmp je pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov dec je dec je jmp movl mov jmp push push call pop pop test jne add jmp push push call pop pop test jne add mov mov jmp add test je mov test je cmpl je cmp je pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp inc jmp mov dec je dec je dec je dec jne mov jmp mov jmp movl mov jmp mov sub je sub je sub je dec je sub jne mov dec dec je dec dec jne mov jmp mov jmp mov cmpl mov jg mov jmp mov cmp jne cmpl jbe movsbl pushl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl decl jmp cmpl jbe pushl movsbl push call pop pop test je cmpl jbe lea cmpb je mov mov mov incl decl mov mov mov mov incl inc decl mov test jne jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov jmp mov dec je dec je jmp movl mov pushl mov pushl mov push pushl call add test je mov jmp xor jmp mov push mov sub mov push pushl xor lea mov mov call mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov mov cmp je mov cmp jne mov mov mov mov cmp jbe mov cmp je cmp je lea movsbl push push call pop pop test je xor inc cmp jbe lea cmp je mov mov mov incl decl mov mov mov mov incl inc decl jmp mov cmp je inc xor cmpb jne inc inc push pushl lea push lea push mov lea call add test je inc cmp ja cmp jbe mov mov sub mov cmp je mov andl jmp mov mov mov cmp jne cmp ja call movl jmp cmp jbe movl jmp call push push push push push movl call add cmp je mov andl xor pop pop pop leave ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov push push pushl pushl pushl pushl call add pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret call mov cmp je mov test jne call mov ret int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jge dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov sub mov xor mov push mov test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je lea push call pop mov xor pop call leave ret push lea push push pushl call test jne xor jmp lea push push call pop pop test jne call jmp mov push mov xor mov cmp je inc inc cmp jb xor inc pop ret xor pop ret mov push xor jmp mov sub inc cmp ja add jmp mov sub cmp ja add movsbl shl lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov sub mov xor mov push push lea push mov and push or push mov call test jne xor jmp lea call cmp je cmpl je mov push mov call push mov call pop cmp pop je xor inc mov xor pop call leave ret mov push mov sub mov xor mov push push push mov call mov mov add call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov mov add call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call mov mov add test jne orl jmp lea lea mov mov test je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je call jmp call cmpl jne push push push call add test je mov test je cmpb je call jmp call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov sub neg sbb and mov call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call add jmp push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea mov ret movzbl movzbl sub je xor test setg lea mov ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp lea (bad) fildl and jecxz add out add fiaddl lcall add inc add inc add fiadd jmp inc add in add flds test inc add add inc add add faddl jmp in add fadds outsb faddl pop loopne add in add fadds loop inc add fild mov inc add fildl inc fild sub inc add push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret pop lock add inc add inc add inc add out inc add inc add sti inc add inc add inc add testl mov repnz add cli inc add out inc add repnz add testb cli inc add icebp inc add stc inc add in inc add lock add hlt inc add in inc add inc add inc add call in push andl push mov test jne xor jmp push cmp jb lea test jbe mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov jmp mov test je cmp jne inc inc incl cmp jb xor pop pop leave ret movzbl movzbl sub jmp int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret push call pop ret push push call mov xor cmp jbe push pop xor div cmp sbb inc jne call movl push push push push push call add xor jmp imul mov mov cmp jne xor inc xor mov cmp ja cmpl jne add and mov mov cmp ja push call pop mov pushl call pop mov movl call mov cmp je pushl push push call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne mov cmp je movl jmp xor mov push call pop ret cmp jne mov cmp je movl mov call ret push push call mov test jne pushl call pop jmp mov test jne push call pop jmp cmpl jne xor mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne xor inc mov add and mov push push pushl call mov cmp je mov dec cmp jb mov push push pushl call push pushl call add movl call cmpl jne test jne inc add and mov push push push pushl call mov jmp mov mov push call pop ret mov test jne cmp je push call pop test jne call cmp jne mov call push call pop mov jmp test jne call cmp je movl jmp test jne inc push push push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor call ret call jmp test jne call mov call push call mov pop mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call push push push push push movl call add xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call mov add mov xor xor cmp setne cmp jne call movl push push push push push call add or jmp push call pop mov push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov mov sub cmp jne andl jmp mov cmp jae movzwl mov mov and movzwl mov jmp pushl lea call mov pushl pushl lea push push lea push lea push push call add test jne and cmpb je mov andl movzwl movzwl and leave ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl movzwl and leave ret cmpl jne pushl lea pushl push push lea push push push call add push pushl pushl call add leave ret mov push mov pop jmp push mov sub mov mov mov shr pxor jmp lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne mov mov pop ret push mov sub mov mov cltd mov xor sub and xor sub test jne mov mov and mov cmp je sub push push call add mov mov test je add sub mov xor mov mov rep mov jmp neg add mov xor mov mov rep mov mov mov add sub push push push call add mov mov mov pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmpb je mov andl xor jmp cmp je cmpl jl cmpl jg mov push mov mov lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test jl cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne inc mov inc mov mov xor divl movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test ja mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp xor cmp jl cmp jb call mov call push pop mov push push push push push call add mov jmp mov sar lea mov and shl mov movsbl and je cmp jg jl cmp jae call mov call push pop mov mov jmp push call pop mov mov testb je pushl pushl pushl call add mov jmp call push pop mov mov movl call mov call ret pushl call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push mov mov sar lea mov and shl lea mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl xor push push push push push call add push pop pop ret push push call xor pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl xor push push push push push call add or jmp mov cmp jne call movl jmp xor cmp jl cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop mov mov testb je pushl pushl call pop pop mov jmp call movl orl movl call mov call ret pushl call pop ret mov push mov sub push xor push push cmp je pushl lea call cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp je mov cmp jbe call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne pushl push pushl call add cmp je mov andl jmp mov movzbl lea push push call incl mov movzbl lea push push call add inc decl je cmp je cmp je sub mov jmp xor pop pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je cmpl ja pop pop jmp push pushl pushl pushl call add pop pop ret xor push push push push push push push call mov ret xor push push push push push push push call mov ret mov push mov cmp je cmp je push call mov cmp je cmp je push call pop ret mov push mov mov mov inc inc test jne sub sar dec pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop sub inc add add inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea sti adc call adc fcoms inc add adc enter rclb add inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov adc inc add inc add adc cmp inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop mov inc add adc add inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea push adc pop adc adc insb adc je inc add add inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov inc add adc fcoml inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl shl inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne lea cmpb jne mov inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov cmp mov jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete add mov jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne add mov mov pop pop pop ret nop inc sbb test inc add sbb cmc sbb or sbb sbb inc add sbb aaa sbb mov not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne inc inc pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test ja push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test jbe sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub mov and and push xor lea push push lea push pushl mov mov call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test jbe mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov lea push push call movb jmp test je movb pop mov pop leave ret mov push mov cmpl push mov je push push mov call test je pushl mov pushl call jmp xor mov test jne movb pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp push jmp push mov call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test jbe mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push mov cmpl je push call jmp push mov test je mov test je sub je dec push mov je push call test je pushl mov push call jmp push call test je mov movl mov jmp xor mov test jne movb jmp movb pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl cmp push lea mov mov mov jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne push mov call jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl andl shr not test je and sub je push pop sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret push jmp push mov call mov leave ret mov push mov mov mov mov test je cmp je push jmp incl push call jmp push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub cmp pop pop jle mov cmpl je lea push call lea push mov call cmp jne push mov call cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov sub push mov xor cmpb mov jne inc movl mov mov cmp jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov jmp push push xor jmp test je cmp jl cmp jg movsbl sub push cltd push mov push mov push mov call add mov adc inc mov mov mov mov cmp jne mov inc mov cmp je push mov call mov jmp push jmp xor push push cmp je cmp je lea call jmp lea call jmp cmp je lea call push pushl lea push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push call mov mov add jmp mov mov mov mov mov leave ret push jmp push mov call mov leave ret xchg sub add sub add sub add inc add call in mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov push call jmp mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret push pushl lea push call push lea push push call add jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push push mov xor inc mov mov movsbl mov sub mov je dec je dec je cmp je mov cmp je cmp jne add shl movsbl inc push lea inc mov cmp jbe push lea call push push lea call push lea push lea call mov mov mov mov push lea push lea call mov mov mov mov cmpb mov pop jne incl jmp push lea push lea call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp push jmp mov movb jmp cmp je push mov call mov jmp mov push lea movb call jmp cmp jne mov cmpb setne dec and add mov mov incl mov andl mov pop pop leave ret mov push mov mov sub push xor cmp je call cmp mov jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je push lea push lea push push call push lea push push call add mov call push lea call cmpb jle cmp je lea push lea push test je mov jmp push lea push push lea push push call add mov call mov call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov push cmp je lea push push lea push push lea push push lea push push call add mov call jmp lea push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub push pushl lea push push call push lea push push call add mov call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc cmp mov jg mov cmpb je lea push call pop push lea push push lea push lea call mov call push mov call cmp jg mov cmpb je push jmp mov mov test je cmp je push lea push lea push call push lea push push call add mov call push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push call add push mov call mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne dec mov push jmp mov inc mov mov mov mov mov leave ret push mov call mov leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push movsbl cmp push mov jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne push mov call jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp push lea push push cmp jne push lea push call add mov call jmp push lea jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov mov pop pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push push lea push call mov mov mov add jmp test je lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp push lea push lea push lea push push call add mov call jmp push lea push lea push lea jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc cmp mov mov mov jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push call mov mov add mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call push lea push push call add push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push call mov mov add mov mov cmp je lea push lea call jmp dec mov push mov call mov jmp cmp je jle cmp jle cmp jne movsbl inc cmp mov jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp lea push lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call pop pop lea push pushl lea push lea push push lea push lea call mov call mov jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je push jmp lea push pushl lea call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc cmp mov jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov inc mov inc lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call push lea push push call add push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov mov mov pop mov mov pop mov pop leave ret mov push call mov leave ret mov push mov sub mov xor mov mov push mov movsbl push mov sub mov cmp ja mov incl push push call mov jmp andl mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov push mov push mov call pop test jne addl jmp mov mov push mov call pop test jne addl lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp push call push lea push lea push lea jmp push lea call push lea push lea push lea push push call add mov call push lea call jmp cmpb je cmp jne mov xor and incl mov mov jmp push push lea call mov mov mov mov pop cmpb je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov andl push mov call add push mov call mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call push mov call mov mov cmp jne incl jmp cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call push lea push push call mov mov add mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov push call mov leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov xor inc cmp je testl mov jne mov cmp jne mov push call mov jmp cmp jne push push pushl call add jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call push lea push push call mov mov mov add mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push call pop mov push lea push push lea push call mov call push lea call lea push call mov pop test jne push lea push lea push lea push push call add mov call push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea push lea push lea push push call add mov call mov call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push call mov mov mov lea push mov call mov mov mov lea push mov call add jmp cmp je mov and cmp jne lea push call pop mov mov mov mov lea push call pop mov mov mov mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push call add push lea call jmp mov mov mov mov and xor mov cmp je lea push push call push lea push push call add push lea call testl je mov mov mov mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne push lea push lea push lea push push lea push lea push lea push push lea push lea push lea push push call add mov call mov call mov call mov call jmp test je mov and cmp jne push lea push lea push lea push push call add mov call push lea call jmp push lea call push lea push lea call push lea call push lea push lea push call push lea push push call add mov call push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push pushl lea push call pop push lea push push lea push lea call mov call mov call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push call add jmp lea push lea push call pop pop jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push call mov mov mov add mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push call mov mov mov add mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push push lea push call mov mov mov add mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push call mov mov mov add mov test je lea push lea push push call mov mov mov add mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call cmpl pop je cmpb je lea push lea push lea movb call mov mov mov cmpb mov mov je lea push call pop mov mov mov mov lea push lea push lea jmp lea push lea push lea push push lea call mov call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je push jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne push mov call mov pop pop pop leave ret mov push mov sub push xor push mov push mov andl mov mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push call add push mov call cmp je push lea push push call add push mov call mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call push mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call push mov call mov cmpb jne incl jmp push lea push push lea push lea push call push lea push push call add mov call jmp push push lea call push lea push push call add push mov call mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call push mov call cmp je mov mov cmp je cmp je push jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call push mov call pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call add mov leave ret cmp jl cmp jle cmp je mov push call jmp push movsbl sub inc mov cmp jne mov test je movsbl sub inc cmp mov jl cmp jmp pushl push pushl call add jmp test jl cmp jle or cmp jne mov push call mov jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push call mov mov mov mov add cmpb lea mov push je lea push lea push call push lea push push call add mov call jmp lea push push call add mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test je lea push lea push lea push call push lea push push call add mov call mov mov mov mov jmp call pop push lea call jmp push jmp lea push push pushl call add jmp lea push call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je push lea push lea push lea push push call add mov call mov mov mov mov push push mov call cmp je movb andl mov mov jmp xor lea push push call pop pop push lea push lea push call push lea push push call add mov call push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp push mov call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor mov movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl push mov dec and add sub and mov pop mov sub je dec je sub jne mov shr not test je push call add cmpl lea push je lea push lea push push call mov call mov mov mov mov jmp mov shr not test je push call add cmpl lea push je lea push push lea push call mov call mov mov mov mov jmp mov mov shr not test je shr not test je push call add cmpl lea push je lea push lea jmp call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub jmp mov mov mov jmp cmpb je inc mov cmp ja pushl lea call lea push lea push lea call mov mov xor mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov cmp je lea push lea push push lea push lea call mov call mov mov mov mov test je cmp je push jmp cmpb je lea push lea push push call mov mov mov mov add cmpb lea push mov lea je push lea push call pop mov call jmp push push call add mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmp jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push call mov mov add mov mov test je lea push lea push push call mov mov add mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea push push lea push push call add mov call mov call jmp test je mov mov mov mov jmp mov cmp je push lea push push call add push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push pushl lea push push push lea push push call add mov call mov call jmp push push pushl call add jmp mov cmp jne push mov call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call push lea push push call add jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp push pushl lea pushl pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or cmp movb jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp jne pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp jl cmp jle cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push pop mov mov and xor mov mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push push lea jmp lea push push lea jmp lea push push lea push call mov mov add mov mov mov cmpl je push lea push push call add push lea call mov mov mov mov mov jmp cmp jne test je push lea call test je push lea call jmp test je push lea call lea push lea push pushl call jmp pushl push pushl call add mov pop pop pop leave ret cmpsl popa inc add popa inc add popa inc add popa inc add add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call mov mov incl mov lea push lea push pushl or mov call jmp mov cmp je cmp je mov push call jmp inc inc mov movsbl sub je sub je dec je dec jne and push lea push push pushl lea inc push mov mov call push pushl call add jmp push pushl inc pushl mov call jmp pushl inc pushl mov call jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push push pushl call jmp incl andl push lea push push mov lea push lea push call mov mov mov mov lea push pushl call add jmp lea push push pushl call add mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call add pushl lea push push lea push lea call mov call push mov call mov pop leave ret mov push mov sub mov xor mov testb push je push call pop call test je push call pop testb je mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea add mov lea push movl mov mov call lea push call push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzwl and cmpb je mov andl leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl call pop pop pop ret mov push mov cmpl sbb neg pop ret mov push mov mov and pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl call pop test jne cmpl je pop ret xor inc pop ret mov push mov pushl pushl call pop pop test jne cmpl je pop ret xor inc pop ret mov push mov movzbl push call pop test jne cmpb je pop ret xor inc pop ret mov push mov pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov push push mov xor mov mov push mov push push xor xor inc cmp jne push push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne cmp jne mov mov mov mov push push pushl pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov jmp pushl pushl pushl pushl call lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub mov xor mov push lea push push pushl movb call test jne or jmp lea push call pop mov xor call leave ret mov push mov sub mov xor mov mov mov mov mov push mov mov push mov mov push xor mov mov mov cmp je mov lea push push call mov test je cmpl jne lea push pushl call test je cmpl jne mov movl cmp jne pushl call mov pop inc cmp jle cmp ja lea cmp ja call mov cmp je movl jmp push push pushl pushl push pushl call mov cmp jne xor jmp push call pop cmp je movl add mov jmp mov cmp je lea push push pushl call add push pushl pushl pushl push pushl call test je mov cmp je push push pushl push push pushl push pushl call test je mov jmp mov cmp jne push push push push push pushl push pushl call mov cmp je push push call pop pop mov cmp je push push push push push pushl push pushl call cmp jne pushl call pop mov jmp cmpl je mov mov pushl call pop mov lea pop pop pop mov xor call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor cmp jne call push push push push push movl call add push pop jmp mov mov xor pop pop ret mov push mov mov push xor push cmp je cmp jbe cmp je mov push mov cmp je mov cmp je cmp je call push pop push push push push push mov call add mov jmp cmp je call push pop push push push push push mov call add mov jmp lea pushl call inc pop mov cmp jne xor jmp cmp jbe push pop jmp pushl pushl pushl call add pop pop pop pop ret mov ret mov ret mov ret mov ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret mov push mov call mov mov pop ret push push call xor mov mov mov mov mov mov push call pop mov call mov lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add lea push call pop cmp je push push push push push call add call mov mov or mov mov push call pop mov mov cmp je cmp je mov cmp je push push call pop pop test je mov cmp je push call pop push call inc push call pop pop mov cmp je push push call pop inc push pushl call add cmp je push push push push push call add jmp mov cmp je push call pop mov push call cmp je xor inc mov mov imul mov cmp je mov imul add mov cmp je mov cmp je mov sub imul mov jmp mov mov lea push push push mov pushl push push push pushl mov call test je cmp jne mov mov mov jmp mov mov mov lea push push push mov pushl push push push pushl call test je cmp jne mov mov mov jmp mov mov mov movl pushl call pushl call pushl call add movl call cmp jne push push push mov pushl call add test je push push push push push call add add cmpb jne movl inc push call pop imul mov mov cmp je cmp jl cmp jg inc jmp xor mov push call pop ret cmpb jne inc push call pop imul add jmp cmp jg inc mov cmp jge cmpb jne inc push call pop add jmp cmp jg inc mov cmp jge cmp je negl movsbl mov cmp je push push push pushl call add test je push push push push push call add jmp mov mov mov call mov mov call mov call ret mov push mov sub andl cmpl push push push mov mov mov jne and jns dec or inc mov jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov shl mov jmp mov shl mov mov lea cltd lea mov idiv push pop inc push mov mov cltd idiv mov mov sub mov lea cltd and add sar mov imul add add lea cltd pop idiv mov imul sub add cmp jg lea jmp add cmpl jne cmpl jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov mov jmp mov mov cmp jle sub jmp and jns dec or inc jne mov push cltd pop idiv test jne lea cltd mov idiv test je mov jmp mov add imul add imul add imul add cmpl jne mov mov mov jmp lea push mov mov call pop test je xor push push push push push call add mov imul add jns addl decl jmp mov cmp jl sub incl mov pop pop pop leave ret mov push mov sub push lea xor push mov call pop test je push push push push push call add cmp jne xor jmp mov push xor inc cmp jne cmp je cmp je movzwl movzwl push movzwl push movzwl push cmp jne movzwl push push movzwl push push push jmp movzwl push push push push push movzwl push call movzwl movzwl add push movzwl push movzwl push cmp jne movzwl push push movzwl push pushl push jmp movzwl push push push pushl push movzwl push call add jmp cmp push pop push pop movl mov jge push pop mov movl movl push push push push push push push push push push pop call mov push push push push push pushl pushl push push push pop call add mov mov cmp mov jge cmp jl cmp jg cmp jle cmp jge mov pop pop leave ret cmp jl cmp jg cmp jle cmp jge xor jmp mov imul add imul add imul cmp jne xor cmp setge jmp xor cmp setl mov jmp push push call xor cmp jne push call pop mov cmp jne call incl movl call call ret push call pop ret push push call push call pop andl call movl call call ret push call pop ret push push call push call pop andl mov call mov movl call mov call ret push call pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call xor cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp mov cmp jne push pushl call pop pop jmp push mov movzbl lea push push call incl mov movzbl lea push push call add inc cmp je cmp je sub mov pop cmp je mov andl pop pop leave ret mov push mov push xor cmp jne cmp jne call push push push push push movl call add mov jmp cmp je pop pop jmp push pushl pushl call add pop pop ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov push push push mov xor cmp jne call push pop push push push push push mov call add mov jmp push cmp ja call push pop push push push push push mov call add mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov cmp je movb lea movl neg mov xor divl cmp jbe add jmp add mov inc incl xor cmp jbe mov cmp jb mov cmp jb mov jmp mov dec mov mov mov dec mov inc cmp jb xor pop pop pop leave ret mov push mov cmpl mov jne test jge push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub push xor push cmp jne call push pop mov push push push push push call add mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov mov cmp jbe add jmp add mov mov inc inc mov test ja test jbe cmp jb mov cmp jb movb call push pop mov mov xor jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret mov push mov cmpl jge xor pop ret pushl pushl pushl pushl call pop ret mov push mov sub pushl lea call cmpl jge xor jmp pushl pushl pushl pushl call cmpb je mov andl leave ret mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret pushl call pop test je call push call push push call add jmp mov push mov push pushl call pushl mov call pop pop mov mov pop pop ret pushl call pop ret int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret mov push mov cmpl push mov jne xor jmp push test jne cmp je call test jne mov test je cmpl je pushl call pop mov jmp push call pop cmp jbe mov cmpb jne push pushl push call add test je add mov test jne xor pop pop pop ret mov lea jmp mov push mov push push mov xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je cmp ja jmp cmp jne cmp je mov push pushl call mov pop cmp je push call inc pop mov cmp je cmp jbe push pop jmp push pushl pushl call add test je push push push push push call add xor pop pop pop pop ret mov push mov push push push xor cmp jne call push pop push push push push push mov call add mov jmp mov mov cmp je mov cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov jmp pushl push push call add test je push push push push push call add mov cmp je mov xor pop pop leave ret push push call xor xor cmp setne cmp jne call movl push push push push push call add xor jmp mov push pushl call pop pop cmp sbb neg je push call pop mov pushl call pop mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je cmp ja cmp jne cmp jne xor inc jmp xor cmp je cmp je mov pushl call pop mov cmp je push call pop inc mov cmp je cmp jbe movl jmp push pushl pushl call add cmp je push push push push push call add mov movl call mov call ret push call pop ret push push call push call pop xor mov xor mov cmp setne cmp jne call push pop mov push push push push push call add mov jmp mov mov cmp je mov xor cmp setne cmp je pushl call pop mov cmp je push call mov inc push push call add mov cmp jne call movl call mov mov jmp pushl push push call add cmp je push push push push push call add mov cmp je mov mov movl call mov call ret push call pop ret mov push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg push mov mov mov mov inc cmpl mov jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp jne cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne inc mov inc mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov cmp jne pushl push pushl pushl call add jmp pushl push pushl push pushl push pushl lea push call add cmp jne cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov push pushl pushl pushl call add pop ret mov push mov push push push push xor push mov mov mov cmp je mov push push push push push push push push call mov cmp je push push call pop pop mov cmp je push push pushl push push pushl push push call test je lea push push call pop pop test jge cmp je pushl call pop mov add mov cmp jne xor pop pop pop leave ret or jmp pushl call pop jmp mov push mov push andl push lea push pushl pushl call mov add test jne cmp je call test je call mov mov mov pop leave ret mov push mov xor cmp jbe mov cmpb je inc inc cmp jb pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push push push xor mov mov mov mov cmp jne push mov push push push push push call test je movl jmp call cmp jne movl cmp jle pushl mov call pop mov mov cmp jle mov push call mov pop mov jmp cmpl jge xor jmp cmp jl mov cmp je cmp je xor inc cmp jne mov cmp jne mov mov mov cmp je cmp jne cmp jne push pop jmp cmp jg cmp jle push jmp lea push pushl call test je cmp jle cmpl jb cmpb lea je mov test je mov cmp jb cmp jbe inc inc cmpb jne jmp cmp jle cmpl jae xor inc jmp cmpb lea je mov test je mov mov cmp jb cmp jbe inc inc cmpb jne jmp mov push push pushl push push pushl call mov mov cmp je mov test jle push xor pop div cmp jb lea cmp ja call mov test je movl jmp push call pop test je movl add mov jmp andl cmpl je push pushl pushl pushl push pushl call test je push push pushl pushl push pushl call mov test je jle push xor pop div cmp jb lea cmp ja call mov test je movl add jmp push call pop test je movl add mov jmp xor test je push push pushl pushl push pushl call test je push push pushl pushl pushl pushl call mov push call pop pushl call mov pop jmp xor xor cmp jne mov mov mov cmp jne mov mov mov pushl call mov pop cmp je cmp je push push lea push pushl push pushl call mov add test je push push lea push pushl push pushl call mov add test jne push call pop jmp mov mov pushl pushl pushl pushl pushl pushl call mov test je push call push call pop pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl mov pushl lea pushl pushl pushl pushl call add cmpb je mov andl leave ret mov push mov sub push pushl lea call mov xor cmp jne cmp je mov andl xor jmp cmp jne call push push push push push movl call add cmp je mov andl mov jmp cmp je push mov cmp jbe call push push push push push movl call add jmp mov mov cmp jne lea push push pushl pushl call add jmp pushl lea push pushl push pushl push push push call add cmp jne call movl cmp je mov andl mov jmp add cmp je mov andl pop pop leave ret mov push mov cmpl jne pop jmp push pushl pushl pushl call add pop ret mov push mov push mov jmp push push pushl call add test jne mov mov cmp je test je add mov test jne mov sub sar neg pop pop ret mov sub sar jmp mov push mov push push mov xor mov test je cmp je add inc cmpl jne push inc push push call mov pop pop mov test jne push call jmp push call mov add add pop mov test jne and mov pop pop leave ret mov push mov sub mov push xor mov cmp jne call push push push push push movl call add or jmp push mov push mov cmp je push push call mov pop pop mov cmp je cmp je xor cmp sete mov mov cmp jne call mov cmp jne cmp je cmp je call test je call movl or pop pop pop leave ret cmp jne push call pop mov cmp je mov cmp jne push call pop mov cmp je mov mov mov cmp je sub pushl call mov cmp pop jl cmp je lea pushl call pop cmp jne mov mov mov mov jmp mov mov mov inc lea cmp jne cmp jae push push pushl call add cmp je jmp cmp jne cmp jge neg lea cmp jl cmp jae push push pushl call add cmp je mov lea mov mov mov mov mov cmp je mov push push call inc pop inc push call mov pop pop cmp je push push call inc pop inc push push call add test je push push push push push call add mov mov sub add mov inc neg sbb not and push push call test jne orl call movl push call pop cmp je pushl call mov pop mov mov jmp pushl call mov pop mov xor jmp mov push mov push xor cmp jne xor jmp push push pushl call mov inc push call mov pop pop cmp je pushl push push call add test je push push push push push call add mov jmp xor pop pop pop pop ret mov push mov sub push pushl lea call mov xor cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne pushl push call pop pop jmp movzbl testb je inc mov cmp je movzwl movzbl shl or cmp jne dec jmp movzwl cmp je inc movzbw movzwl cmp jne movzwl cmp jne cmp je mov andl jmp cmp je mov andl xor pop pop leave ret mov push mov push pushl pushl call add pop ret int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp movl mov jmp lock inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add inc add add add aas inc push gs gs imul inc inc add add add inc mov and inc add inc add add add add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add cmp add add add add add adc add add add add add add add add add (bad) (bad) incl add add mov inc add add add aas inc push bound pop arpl je jae fs inc add add inc add add add aas inc push bound pop je jo imul add add add inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add mov inc add add add aas inc push je jo pop imul addl add add add add add add add add add add test add add add add add add add add inc add add add cmpsl inc add add add cmpsb inc add add add add test add dec cmpsb inc add add add inc add add in movsl inc add add add movsl inc add add add inc add add add movsl inc add add add movsb inc add add add add add add je inc add add mov add pusha mov add push mov add pop add add add or add (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add in add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add inc add (bad) (bad) incl add add add add add or inc add jmp add jmp add jmp add jmp add add add add add out inc add lods inc add mov add inc add jmp add add add jmp add in add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lock add and inc add inc add add inc add add inc add inc add mov add mov add mov add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add mov add mov add mov add mov add add inc add add inc add add inc add inc add mov add add add add add add add inc add add add inc add (bad) dec add (bad) dec add (bad) dec add (bad) dec add (bad) dec add (bad) dec add (bad) dec add (bad) dec add (bad) dec add jg jg jg cmp inc add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add icebp (bad) incl add add push add push add out inc add (bad) (bad) incl add add add add (bad) (bad) incl add add add add (bad) (bad) lcall add add add add add js add xchg add add add add add add add add add add add insl add add (bad) (bad) lcall add add add add add ja add xchg add add add repnz add add add add add add insb add add insl jo jno je je add cs popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb arpl popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb add add add add adc rolb inc add add rorb addb add or push add pop add push inc xor mov add pop add or add adc xchg add daa add inc push add shrb orb add sbb aam (bad) aaa add push inc je mov add pop sarb add inc test and adc rolb adc add add rorb adc movsb add or push add push inc mov mov add pop add sbb push xor add sbb push mov add sbb in xor add push (bad) ja rcrb hlt pop mov add xadd add inc add xor adc rolb or rorb or dec add xchg add es xor mov add lahf add or push add sub or shrb or pop add push (bad) mov shrb je mov add pop sarb or bound adc rol inc xor or add ror xorb or sbb xlat push (bad) ss mov mov add fild add inc les xor xchg sbb add cmp rorb nop add test pusha in pop push add enter pop mov jo add pop inc sti pop loopne inc cld push sarb and add or sbb push adc test add adc cmp adc mov mov add add sbbb sbb rolb adc mov jo mov rolb mov and push add popa push or or inc adc xchg add adc orl mov pop dec add loopne test push mov ret push fwait add daa add or and jbe rcrb or push add pusha sub (bad) xor shlb or ret shlb dec or and dec add adc sub pop or push add int3 sub pusha or pop (bad) (bad) push inc pop test pop inc aam lock mov mov (bad) ficom add jae mov jo add push push pop add in das cmpl pop lock xor or popa add sbb push sbb add sbb rol push cmp add sbb xchg loopne or aaa xorl mov mov ror push rolb add push roll add sub cwtl add add sbb inc jb pop add pop sbb test mov addb test popa adc mov inc cmp rcr add pop mov clc inc rorb fiaddl push and add and jo nop push xchg adc xor sbb sbb push or test adc xchg cmp adcl cmp lret jb mov out sbb inc fwait push jo ret sahf add call rorb cwtl adc mov cmp push push mov andb add sbb cmp add loopne xchg jns lret sub cmovo ret rclb xor movsb sub push add or mov in push cmp xorb cmp xor add add seto out inc cli adcl (bad) arpl lock nop std push dec aas popa cld psubsb sub jo xchg inc add adc addb or ret add add sbb inc ljmp push rorl adc rcl mov (bad) or sbb icebp or pushf or push and and push mov rorl js les add andb add insb inc repnz push mov jl call adcb shlb subb dec or add add insl les inc xchg or sbb call add mov adc fisttp adc inc addb adc sub push add mov inc popa les mov push dec (bad) push adc lret jb xor popa sbb adc mov andb push addl popl mov dec and sbb add xor pop pop adc cmpsl adc push rcll and inc add sbb sub mov push push test test jecxz push xor add dec sarb add dec loop adc and adc bound xor mov shlb mov inc lods or sub push xor stos sbb or pop adc xchg inc sbb dec add mov and and xchg dec (bad) gs gs int3 pop icebp xor or lcall cmp es orb inc mov dec push xchg or addl cmp or daa inc or or add andb add insb inc repnz push test jl mov les or fiaddl mov lock inc or or adc jns orb or bound and jle sarl or push add or loope pop add bound or pop (bad) inc push rol cmp adc inc cmp inc aas push inc and sub popa inc xchg push (bad) lea add sbb mov cmp movsb add add and inc adc movsl push mov adcb sub test sub or pop add push xor fmuls bound lret dec or imul subb push (bad) popf or push dec xchg fsubrs or test loopne rcll sbb movsl push js inc movsb pop inc cli xchg push ret shrb or stos subl jno or lods inc fs or add pop mov xor add push push pop push mov lock imul push bound cmpxchg add add push adc pop or add add add pop adc xchg add or and or add adc test inc jl call popa arpl push inc or cmp adc sbb pop or add sahf inc cmp add xor ret lock mov fcompl mov insb sub cmp orl jo pop sub pop loop add pextrw mov mov inc faddl jb mov shrl adc fiadd adc and outsl xchg loopne or les adc sub adc pop (bad) in mov je js and nop/reserved repz cmp push add push mov rclb mov mov out push and or pop punpckhbw gs pop (bad) hlt push pusha pop inc ljmp loop pop enter das mov or dec and pop lock (bad) icebp push push inc pusha add sbb jg push xor subl fildl call push add sbb ret and xor add mov inc ljmp mov rolb mov rolb mov arpl call loope mov or imul or xor (bad) (bad) sub rorl pop or push xor inc or or rorb orb jge enter sub fimull add inc adcb lea sub (bad) js add sbb enter and mov xor or inc subl dec mov push or xchg mov sbb lahf add inc mov inc sbb and sbb int cmp ret mov addb adc movsb sbb inc dec sbb adc and int mov or add and mov mov xchg nop repz pop (bad) (bad) add addr16 cmp iret add sbb inc enter inc jl shlb sub mov ret in mov add cmpsb adc jge test mov mov roll or xor fldl lock lret into or sbb ror push movsl push sbbb inc lods rcl xchg movsl orb sub push add and pusha push adc movsb xor add or dec adc stos push test loope or inc inc mov rolb adc mov mov and loopne inc mov and pop sbb pop ret popa arpl or mov add xor pop sbb and dec add cmp cwtl arpl andb adc sbb outsl (bad) enter or cmp cmp (bad) and xchg add cmp sbb inc shlb adc lea cmp jl lock mov pusha xchg sbb xchg ss mov mov es mov mov ss jo (bad) pushf or mov ja lock or add sbb adc push add aaa mov xchg push or movsb shll mov loope adc pop (bad) in mov sarl add add sarl push and add pop add xor test jo orl mov ret push xchg rol xchg adc aaa or xorb inc arpl dec loop push cmp jb adc cmp mov push (bad) mov imul rcl rol fdivs std sbb in and popa cmp sbb add pop cmp push push jb invd add cmp loopne or rorb cmovo pop les adc loope sbb out push rclb or or pop adc into add and js call loopne push lock sahf sbb call roll cld je daa adc jmp push mov jmp loope mov pop mov xchg (bad) add push inc aas push inc jmp sub rorb sub cwtl sbb or add adc jbe aad sbb add adc push or mov mov shll scas test mov (bad) insb cmp orl inc into add push and or xchg mov sbbl xchg (bad) jbe xor push sbb movl cmp or enter cmp cli push cld sbb or xor loopne or add and sub popa push subl sbb sbb es enter (bad) xchg cmp pop inc sbb inc cmp add test inc jmp pusha ret cmp js xor mov (bad) pushf push mov shrb add add push jno nop push and adc add lods or inc push cmp add sbb nop push ret adc add jl call icebp or push and add (bad) cmp mov addps fadds dec add sbb xor fstps add xchg add ret fstpl lock or jo mov icebp or arpl add and sub push inc add ret out jo (bad) sarb xchg cmc add or fiadd adc ret movsb and and mov movsl pop pop sti add stos add xchg adcb jle pop or cld inc in adc (bad) rorb popa out enter aas pusha pop test push pop inc lods push mov test xor add push and mov rcrb jns sar ret andb xor rclb fdivr inc ljmp loope or jle and and adc inc arpl call xor or add repnz addb mov push push pop inc cmp adc add cmp rorb cmp add inc icebp (bad) adc and sbb inc xor nop push (bad) mov shl jno add add lods or adc cmp mov mov add adc and test sbbl push sub or test inc (bad) sbb inc adcb nop or andl add dec add inc mov pusha xor pusha mov dec inc ret lock add and lea cwtl jo mov icebp add test in lock dec add add jno,pt nop movsb sub sub push sub inc mov mov fiadd add fcoms enter lods pop push test inc into push pusha pop adc cmpsb subb jecxz or lock enter ret faddl sbb jo mov test or or add roll xchg jle (bad) sbb adc inc mov rorl js rol adc dec add add cmp adc inc inc adc fs and or adc xor addl mov mov sbb sbb addb push add pop pop repz nop xor fadds sti pop call loope mov inc jo mov inc scas xor aad cmp sbb or pop add sbb rolb adc and js cmp add test mov loopne add popa int js pusha sub add add daa adcb or dec add daa mov mov (bad) dec xor add cmp adc jno xchg mov test add dec mov ret outsb push push mov sbb sub pusha adc inc push pusha jae mov sub add je test sub push adc movsb add push inc dec and and push add cmpl sub mov fmuls (bad) ljmp push xor add (bad) jbe mov andb pop or or bound adc or add ret lock testb lea loope and inc addb mov adc push push xor fistl es add loop or test xor mov js ror roll adcb add adc imul cmp pop mov add xchg loopne ret jo ret jo adc popa push add bound cmp add mov ret mov and rolb inc pop shrl push cmp addl jp pushf and and dec adc mov add or mov dec add (bad) adc lds dec inc loopne hlt nop mov test nop dec xchg sbb cmp sbb pop and cmp add xor nop mov or (bad) xchg adc sbb inc and popl out sub cmp sbb mov mov (bad) cmpsb or subb add inc adc loop add dec add mov rolb xchg bound pop inc aam pusha sub and pop or inc lock sbb inc pop or nop testl or pop (bad) (bad) dec jo add loopne pop fcom add pusha xor ret enter inc inc push (bad) ss enter push pop xchg arpl and add dec (bad) xor xor mov sbb cmp adc add sbb scas add sbb dec cmpl cmp rorb xor mov dec cmp push xchg cwtl and add les adc rorl add mov add and cwtl add orb and or nop mov fcomps enter arpl xchg add inc rcrb inc add and pop add xchg adc js inc bound icebp imul dec sbb pop mov sub js xor pop rclb adc xchg push mov shlb inc outsb sbb movsb test sub or add sub cmp adc sub stos and flds add dec adc push test test or and mov cmpb dec xor fmuls popa out enter dec push sub mov push aam pusha sub cld sub pop inc mov cmp jl insb das xor adc pop lock sbb sbb pusha leave jo push pop xchg jge je adc push inc xor adc fs xor add fs add dec sbb xchg rolb and mov fwait cmp faddl outsl or sbb (bad) test xor in js rorb sbb nop push ret bound nop push adc jo ret and add jp and push xor shrb pusha dec push adc jmp fcoml cmpl (bad) sbb and add (bad) pop xchg add fadd sbb repnz or or addl push sbb test loopne pop and xchg add and in cmp add pop dec push push adc inc pusha mov mov cwtl (bad) mov inc and jne mov xor dec add inc mov je shll xor push nop repz xor adc sub adc jbe cld sub mov sub jbe jmp xchg sbb clc sbb sbb dec lock mov mov mov and and jg sub jo cmpl rcll dec inc jo push lcall movb iret xchg in xor out pop adc add jne mov cmp push xchg push and pop cwtl jecxz in and mov inc loopne adc or inc add mov mov loopne test (bad) fildl mov inc or or rorb addb adc ret test rolb add add add dec add popl shlb loope leave sarb mov mov dec and in add push dec push jae adc inc bound inc adc pusha and sub popa mov and inc jno loopne add adc mov in push imul ja shrb icebp add and and push nop je bound sub xlat daa cwtl push ret andb cmp or xchg dec test movsb notb push cmp repnz or shrb dec divb nop mov push add sub hlt dec loopne adc aas (bad) out lock adcl loopne add pop add mov fdivs test or mov jnp mov add push popa dec add ror dec mov jg sub jo xchg adc movsb add xor mov rcrl sbb addl and add pop cmp ds loopne or or cmp test or adc add lods or (bad) push adc int3 add mov xorb sbb in sbbb sub arpl add test add insl ret inc xchg add or dec adc lds daa loop or cmp push push and loope les test push cmp adcl insl jecxz push push mov dec test mov push leave fsubl jo adc sub cmp jno lret rcrl add rolb je bound adc adc cmpsb adc adc inc andl sub mov shrb add sub sbb mov cmpl or push pop pop pop movl inc addr16 jae and orl push push xor loopne inc test das popa jl rcrb sahf das mov test sbb popa dec cmp jno xchg fs sub xor cld sbb mov sbb fist xor pop xchg js ret dec pop sbb ror lock lods rcl add add pop sbb fcoms add adc (bad) movsb sub (bad) adc sarb inc mov enter or push and push add inc or or rorb push add jnp clc mov cmp adc sub add or inc xchg add xor lret add sub js dec push or fild sub ret adc sub ret inc pop pop and xchg add fildl test sub inc add push and mov cmpsb and cltd mov mov scas adc adc adc pusha adc push fs daa sarb sub add or mov xor movsb pop loop add loop orl lds xor sbb sbbl mov test cmpsl popa jnp loopne add das jo xchg xor (bad) push nop mov mov cmp push inc ror inc push test adc (bad) pop loopne mov push inc outsb or cmp cmp shlb lahf add cmp adc add jne xor jmp nop cmp adc push dec sbbb and pop cwtl aam mov loopne or test sarb dec mov andl add shr adc and movb add andb sbb fcomps inc cmp rorb jg xor adc or popa push add add adc test push (bad) aas or add mov gs or push shlb dec or shlb (bad) and push add enter add loopne (bad) sarb mov push (bad) xor dec test cmp xchg and addb adc or push sub adcb jge flds imul xchg fs pusha mov cwtl movsl xorl addr16 lret jno test mov bound mov rol ror inc mov in pusha into or push inc in loopne or stos rcl sub sahf sbb xor clc sbb mov inc push ret cmp xor imul push push jae adc cmp xchg test add add cmp or push add movsb or aam jbe loop adc pop call add nopl mov adc imul mov add and add inc andl lea push cmp or add test add or and cmp rclb add pop shlb push or mov imul mov pop mov sub push xchg cmp inc je sub les nop pop add inc jne shlb in dec shl xor jecxz adc push add push jo mov or ja adc ret cmpsb xor mov jp cmp or cwtl push add and sub inc stos adc jbe pop push rorl les test or sub mov mov bound add test subb test mov shlb or or lock rorb lret sub pusha lret sarb mov or or ret xor mov sub and test pop shrb jl mov inc int3 sbb jb and inc adc cmp nop sub add push roll inc push mov adcb lahf adc inc aam mov add (bad) add mov add (bad) adc sbb adcl mov adc add nop or jns loopne inc inc add (bad) or arpl (bad) or shrb pusha dec push ss push inc add and xchg pop or lcall sarl dec and rorb dec les shl test push and sbb in sub add loopne add jns or and and out sub cmp sbb push test stos add or or mov cmp mov xor pop pushf or inc lods add dec in sub pusha inc cmp xor aam rol rclb rcll ds or pop (bad) imulb pusha mov push sbb sbb pop and xchg sbb stos dec js adc push sbb mov inc cld or push inc push int3 push push jae add gs pop add or add mov arpl mov lret xor mov add ret icebp cmp or push cs cmp add nop or test clc pop sarb mov (bad) movb or add shrb add add or or sarl add add (bad) xor in daa adc adc add pop mov les adcl scas sbb enter inc add outsb push dec jb ljmp roll daa les cmpsl adc gs adc mov test mov jns test add adc sub cmp in xorl call mov (bad) int3 push mov or xchg pop (bad) in push and cmpl pop sub cli lock sbb inc pop push inc iret inc out pop lock hlt push popa push jnp lock jg adc or or push in sub pop inc (bad) or nop and cwtl ret cld sbb subl or lods xchg push fs or sbb lret and push jne mov push add int3 or ds fdivl push or inc jo xchg pushf and or adc xchg push add inc and mov push les and jmp orb mov rolb (bad) add shrb dec arpl (bad) or shrb pusha dec add adc add (bad) xor pusha mov xor xchg adc add and sub adc xchg and sbb push inc and in or and pusha push (bad) xor jo add jo add and and add je cmpsb xor cwtl mov or ret inc push add int pop and push xchg hlt or inc into adc cmp enter andb cmp push add push nop mov pop or in or inc fisubr loope add pop add nop xor xorl jnp mov sub gs sub xor pop mov add xor rorb cwtl rolb ret das mov jg sub jo mov rol xor mov pusha add cmp adc push addb les cmp or loopne xchg mov and sbb sarb mov mov add xlat push lods and and inc pop sbb test mov pusha or add pop add add adc mov loopne inc (bad) and adcb or test pusha sub add scas pop lock add add and or adc arpl mov xchg inc ret jl and xchg int3 mov sub dec (bad) (bad) sbb adc mov pusha dec xchg adcl add pusha in aam inc lea push add sub popf and push add mov rolb in inc stos or push int3 sub push add adcb add sbb push in (bad) mov movsl mov mov aam pusha mov test mov mov imul push loop or pop js mov xor aam rcrb xor in dec icebp fldl es inc repnz sarb adcl pop loopne push inc jo mov mov clc xor add dec add sbb jb pop inc lods ret inc es or inc ljmp rolb loopne and add cmp adc mov add pop call loope or or adc or or pop adc mov adcb enter add sbbb pop icebp or pop add (bad) push cmp add fiaddl adc push add nop add aaa and add pop les add insb and cld pop push jo sbb and add push add or xor push sbb add dec (bad) push pop pusha xchg cs add cmp cmp xorb xor pop dec mov je dec adc mov adc fs add movsb adc push popa loope test xorl sub adc ljmp fdivrs bound and mov loop cs icebp cs pop mov jbe pop pop mov pop je and xchg sbb mov cmp adc iret add pop cmp mov mov lcall and das adc icebp xchg nop pop inc std add dec int3 dec push repz add or sbb and adc push lods mov inc ret inc or or adc jo mov inc inc pop mov (bad) movb and or mov or mov or add arpl add sbbb add mov inc sbb repnz movsl je inc mov inc repnz cmp dec fcompl mov frstor jo inc je andb sbb add pop dec cmp sbb inc push xchg int3 sub add adcb pusha lods adc jbe in xchg mov rorb pop pop cmp and pop xchg jns call pushf xchg mov inc jb bound test mov add fdivrl clc pop js mov or js jl add rclb sarb sbb jo xchg std psubsb mov xor mov pop aam mov dec negb ror dec dec inc add mov mov jl and adc push xchg pop ret pushf sbb adc add cmpsb push mov add push loope or inc or (bad) push roll test push add mov and push mov ret xchg add adc add and add inc ret bound nop push xchg sub pop les jno add mov sbb mov pusha sub add add addb inc add and outsl or and in pop cld cwtl and add rcr rol and sbb orb inc cmp push sbb loop clc shlb push mov ror cmp sarl jecxz or adc cmp adc ret movsb sbb shlb mov dec sub adcb mov ret inc clc add sub dec prefetcht2 jb jo sbb add jle mov add outsl push or js adc rol rclb rcll or inc repnz mov add push or xor push pusha shrb sbb sbbl loopne push inc push cwtl lret mov pop sbb psubb int sbb adc mov add cmp adc inc loopne pop push roll inc push mov add sbb (bad) sbb loopne xchg mov and add inc js loopne add or sbb fiaddl xorb dec xor sub pop adc loop adc nop or js enter pop mov loop or test sbb sbb inc or add cmc rorl inc pop push je rolb dec add adc test push sbb adc jo push dec push out mov and test cmp cwtl xor xchg andb push adcb cmpsb and fadds or mov add mov scas pop test mov or clc pop in add mov and push cmp sbb (bad) dec add lock cwtl xor popa mov test ret xchg jl mov add and lds ret adc test inc and cwtl int3 inc pop ror je rcr cmp adcl inc lods rcl adc jno push push add adc rcl mov add (bad) loopne pop (bad) ss xchg pop loope add ret lock dec xor push and orl sbb orb push add sbb rolb pop orb je mov dec aam rclb adc add inc adcb push add adc inc dec bound pusha xor clc dec or dec add adc aaa mov or sbb pop adc push clc mov pop or sarb mov loopne add lock add jl and adc sub adc inc or push cwtl sub mov test inc inc xor xor flds and scas adc adc jns xor loopne sbb pop (bad) cltd xor xchg dec add loopne sbb pop roll jo sahf xor adc ja lret pop dec insb pop mov add push js inc divb sbb push xor add xor leave or adc add enter or sbb lret jae adc cmp or push pop add inc and add sub lock cmpsb cmp out adc mov sbb loopne sbb mov inc or and add insb inc repnz push test jl clc test sbb addb or mov add or or push je pusha xchg orb inc loop xchg lods je inc xor and lea sbb fwait or loop sub jo pop cmp popa ret push and dec or adc sbb ss xchg adc cltd or xchg ret loopne add rolb adc ret movsb sbb cmp or adc adc push mov js sarb add pop loope add ret and out push adc add jo add push sub jp sub gs mov add leave movsl xchg pop icebp xchg mov xor push xor add andl decb aaa xchg sbb inc loopne lock test jo adcb sbbl pop push push add add shr mov mov test loopne add push dec adc (bad) add xor inc mov adc or push add sbb rolb pop cmpb add add pop sarb test movl add popa mov lock pop adc lea xor and pusha adc sbbl gs xchg sbb cmpsb pop sub int3 rclb xor daa sub loope adcb subl adc int cmp and add je cmpsb xor fmuls xor push add adcb dec les test ret nop push cltd nop int3 movsl push xor push or cmp mov xor (bad) jle mov js mov or js aam mov sarb xchg lret pop inc imulb pusha mov push or popa push mov loope and lcall in push test sbb lret subl sbb inc xor and and sahf sbb cmpl push addl inc cmp push adc ljmp shll or push mov arpl loopne xor mov movsb ja jo ret dec xor xor add fcoms xor sbb inc sub inc aaa adcb sbb rolb leave push push mov (bad) movb and add shrb cmc ret outsb or add (bad) sub clc and cmp add pushf into add sub inc jl adc (bad) sub loope add pop or fwait or nop mov sbb jecxz clc pop rclb mov add mov les popl or rolb loope sbb push inc test andb or add add add jae rcrl or pop and xor pusha cmc add add icebp sub mov and out or sub enter inc xchg or clc add push push shrl inc ja js fcom dec repnz cltd call fsts xchg xchg adc (bad) mov xor xchg jo ficoml or push inc jl add cmp nop iret sbbl xor ljmp xor add inc and add shr loope xchg nop push std add add and roll or imul test sbb popf ret inc or or nop push add and fcomps add xor inc loope push xor add add pop or inc adc jmp adc es xchg push lock xor mov nop inc push mov add dec int and add adc test xor mov movnti pop pop or add orb sub cmp xor and dec dec and mov test and je mov pusha rolb test push pusha pop add xchg mov lea arpl pop sbb shll push pop pop inc lods add sub cmpsl or sbb rol rclb ret mov ror xorb dec pop xchg std test sbb addl pop pusha ret xor test addb sbb inc enter xor push call lock lcall rolb push pusha xor mov add sbb add test inc jmp pusha push add int3 test mov sarb cli imul ret subb xor shlb xchg add pusha xlat add (bad) and add push or and or add cmp jg fdivs inc test add add and cmp mov add and scas add dec add mov push call imul sub sbb (bad) sub pusha mov sbb push xchg xchg gs sbb ret xchg dec sbb ds xadd or or add push sbbl shl mov test jmp mov mov dec adc adc sub add cwtl xor pop int or xchg adc mov fs mov add xchg ret mov mov in mov or cmpl rolb cwtl rorb push lds test addl push inc insb xchg fiadd stc test jecxz and dec das call push jae add addl addb pop push roll inc push mov wrmsr sbb daa rcr nop ja xchg push and pop cltd js sbb mov adc rcrl cli pavgb adc add outsb add add mov data16 sbb mov test aam adc addb add sbb mov rorb orb jg mov test shlb subb push and add sbb or xor cmp adc and add xchg adc fisubr lcall popa lretw adc xchg mov subl push (bad) faddl es mov adc cs add das adc mov mov dec jbe loop mov and lods daa mov (bad) fcoml cmp ret pop add push adc pop subb sub pop int imul add push and (bad) mov adc xor sub mov das inc jnp mov add (bad) data16 mov test ret daa sbb (bad) (bad) mov shrl adc xor adc sbb mov fs inc pushf adc inc lods lret and subl sbb fmuls loope mov arpl loopne adc push push add add push adc push lods sbb mov ret inc or or nop push add and call jo test add add ret mov add and pop adc and dec or add pusha xor inc push mov in cwtl inc xor jle (bad) jo mov or ret hlt fs push or pop mov ret mov test rorb push adc leave sbb orb and shrl mov sub mov fwait add xchg adc adc sbb cmp sbb insb inc in add inc pop adc inc (bad) or (bad) in lds das dec mov mov (bad) in or lds dec loopne lcall jnp mov sbb and pop xchg jp and sarl pop or pop push pop xchg sbb lods add xchg xor add sbb inc add dec add es enter movsb sbbl lret ret mov dec or push adc int3 lret add mov cmp adc mov les pop add or push and push adc leave xchg test sub push or add push inc cmp rclb add add jl xor or add add mov or inc or xchg mov int3 push add data16 xchg sub inc adc rclb sbb cmpsb sub nop outsl rcrl adc nop xlat movsl jo mov dec cmpsb sbb push adc add rcrb sub add mov sub popa mov and ror test add sbb dec fwait pop mov jae adcb mov sub adc add and sub mov and sub cmp mov mov lds xchg dec mov or shrb loop daa lock js push into loope add pop add add fildl int mov (bad) rol xor sbb sbb sbb sbb iret or arpl and and pusha andb sub into or imul add gs jb or sub add orb and sbb rcr pusha rorb add push movsb sub movl ss inc fmuls loopne nop dec xchg movsb adc jo test and orl sbb mov fwait jl add adc nop or js mov push addb pop add pop icebp or sbb and (bad) cmp xor and leave mov jb je pusha test dec mov jae sbb pusha xor add adc addr16 cld inc pusha xor jle (bad) jo xor cmpsb jmp aam mov pop add mov ret xchg pop push mov movb jb fdivl add or pop sbbb or (bad) out adc mov and mov xor adc and ret lods adc adc adc pusha adc sub mov or push xor or dec fiaddl ffree in pop push icebp daa fwait mov sub orl jo mov add jo rcrb add jb adc sub popa nop aaa mov shrb nop push inc push xchg cmp mov addb push add les jmp push push xor mov cli push sarl add ret cmp lods outsl cmpb lods inc and or in pop xor add push (bad) js add add popa mov loopne inc hlt pop sarb sbb pop aaa enter cmp andl lock inc xchg enter adc xchg fs push sbb jge inc push loopne or add mov sub loope or test pop ret mov mov or or sub adc popl add jmp mov inc or mov rcll pop add adcb sub dec mov add test add stc mov repz or (bad) rclb mov rclb ffreep (bad) or bound adc or mov ja jo inc mov in pusha into pop fdivrs sbb js push popa rolb sbb enter test loopne ret cld sbb unpcklps rcr sub movsb or and add cmp cli push jo addb cmp inc es or sbb mov jo js inc mov inc fiaddl rolb add inc ja jo adcl addl sub add adcb sbb rolb pop nop push add insb int3 and mov or cmpsl add push add andl or nop insb (bad) cmpsl pop and push jo adc add jp inc test push inc je inc lret and sbb cmp add dec add or pop adc mov into or add inc (bad) fiadd adc xor cmpsl (bad) call mov or mov or add js popa in test inc into dec mov (bad) hlt pop (bad) lret cmp shrb add outsb pop push add add sbb pop add xor in sub subl popa jnp nop mov sti push adc inc imul sbb out adc mov cs loop push cmp movsb sbbl add xor ljmp rcl cmpl inc out xchg test xor les and repz or sbb popa add adc mov jae ja mov nop mov insb fsubl jns loope inc jno,pt adc clc inc ret push or shrb pusha dec inc or pop add arpl add add mov sahf dec mov or or loopne dec scas (bad) sub inc mov jb pop (bad) inc inc popa ret push mov loopne pop mov pusha xchg add fildl pop xor mov or or or sbb icebp cltd mov pusha movsb xor dec out mov and mov loopne xchg mov ret int3 or data16 sbb leave add push mov sbb push mov orl push push sub mov jnp jo add aam loopne xor arpl cmp inc bound mov ror cwtl sbb push lock and addb lods rcl adc ljmp xor push xchg or lret jb xchg cmpb ret cmp and adc enter or sbbl add jecxz cwtl add and sbb cli sbb adc rclb inc sbbl add adc add pop cmp pusha inc add mov ret js xor jl pop xor sbb pop add cmpsl xor push inc push pushf enter or int3 ret mov repnz adc sbbl mov mov add inc rcrl or fs cltd adcl jne dec adc or adc jbe cli jae out add push inc pop cmp xchg inc sbb push mov inc into push push sub sbb push lds imul dec add loope das mov adc in xchg mov add pop mov pusha enter inc mov in pusha into cmp pop into jp adc rclb xor movb xor pusha or mov xor adc aaa xchg or lahf adc cmp sub cmp add mov pusha in add imul fmuls ds xchg pop and add xchg add add mov test es shrb jo test popa mov loopne or sarb jnp fdivs adc fwait add add inc push test and pusha dec loopne cltd shlb and xchg inc cmp inc inc mov cli je mov rorb roll loope push mov pop mov xchg mov xchg lock mov jb xor fildl push jo roll adc cmp inc mov test jmp xor js (bad) bound ljmp inc adc nop adc adc sub fimull shll fs rorb push pusha out or mov lock subl sub mov jl mov add add shrb hlt sbb fwait sub mov sub enter inc xchg or clc push lock pop mov inc (bad) sbb jge fsubr popa hlt sub xchg inc sbb add xchg and inc arpl loopne add je cmpsb xchg xor mov (bad) scas lea and pushf push pusha adc cmp push mov (bad) cmp inc push sahf push shl xchg xchg (bad) arpl add inc sbb test inc ljmp and push mov movsb jns clc inc inc xor jo add sbb call sarb sbb mov inc push add andl scas inc mov mov dec mov xor popf insb jmp pop add lahf (bad) dec cmp push sbb cmp dec mov mov mov loop (bad) pusha sub inc adc daa ret and add flds mov cwtl sub rcrl stos xchg inc pop adc ret enter adcl mov mov inc sub cmpsb subb ret jg call mov mov and sarb adc popa fistp xor fiaddl popf lods in orl adc addb ficomp xchg add push sbb inc adc arpl push and insl sarl jbe mov and jnp leave fiadd mov sub push mov aam popa inc (bad) dec stos bound sbb adc cli dec xor cs mov mov push lock cmp inc rolb lods enter add les jmp push imul pusha (bad) and iret or ret out xchg jo mov enter add loope sahf sbb orl add adc fcomps add add push lea inc mov mov inc hlt adc inc (bad) or add sbbl bound jge add dec add adc add dec dec adc add cwtl or cmp sbb loop adc sarb clc and xchg add push mov pop add xchg inc add and (bad) xchg add push dec pop adc repnz addl xchg and sub or lret add add jns repnz fcoml mov ret inc rcrb repz lcall mov loope adc adc jne mov pop out and shlb or add jnp in sub testl pop cltd push add jo cmpsl sahf or pusha mov imul sub cld adc xchg popl movl adc fs cld pop push insl xchg mov ret xor xor and inc add gs test mov sbb ja (bad) hlt mov (bad) dec sub jle mov sub loopne xor push lods add pop cmp adc add adc or pop add or add adc add jp fcomps inc incb arpl aam inc fldl push aaa addl cmc gs or add sub lods cmp jp sbb dec je das adc nop dec xchg xlat mov mov bound push (bad) mulb push adc xchg pop add insl mov or sbb out sbb loopne and in punpckhdq adc jmp nop sub out xor roll push faddp xchg or fisttpl sbb daa mov jmp nop es call cwtl push xchg mov pop sub test int3 push mov ret inc int3 adc outsl (bad) mov and icebp dec add loope sbb aas dec enter subl or xchg or clc add cmp das mov sbb mov popa dec jle xor pop add or loope pop cmp xchg pop hlt sbb sarl imul fs add dec cmp cli jl rolb sub sbb add adc pop adc and xor xchg inc and sbb add adc and mov inc adc jno dec xchg cmp and ja mov or add push add nop push add and pop sarb pop jp (bad) sbb inc push xor rclb push add add adcb adc or lcall and ds add into xor add lea jmp add xor add pop cmpsl mov nop dec ret and lea cmp xchg test jl ds and inc (bad) pusha cli and sbb add add adc shrd ds add jo mov ret (bad) dec xor (bad) aam pusha mov mov xchg mov clc loop lcall (bad) jbe lock daa jmp mov pop push fcoms add in sbb jno repz xchg adc loopne inc dec pop and sbb cmpsl fidivr stc push sbbl adc lahf add loope sub stos (bad) les adc add push fcompl push outsb pop cld cld and les inc xchg inc or rolb bound pop xchg dec inc out xor add mov pop add cmp or xor lea sar dec push xchg mov sub jecxz in bound sbb mov aam int3 xor cli iret fdivrs negl mov nop push push xor test faddl lsl pusha or add pop inc mov rorl xchg ss sub lea enter and inc test orb xchg or add push or aam shlb and mov adc adc test adc pop dec inc lds mov arpl lcall addl flds or das sbb jmp mov leave incb lahf in arpl test push arpl sbb inc cmp call mov cmpl pop inc sub aas jmp mov and xor add and in or arpl adc add (bad) mov xor mov test or sarl xor adc or xor jne xor movsl pop cwtl sbb adcb mov push arpl repnz ljmp cmp loopne sbb push sbb mov mov xor inc iret xchg and add pop add push inc xor and js mov push lea shlb or add lods and or or add add sbb or cwtl test data16 add pop enter pop sbb mov adc jo sbb add cmp mov or adc push insl add add and fimull pusha dec add adc pop punpckhdq push and mov lock ds add and mov push inc or add add adc adc (bad) das and bound inc les add or insb push pusha pop xchg dec push and es mov hlt add push (bad) popf xor xor add xchg hlt das dec xor andb adcl (bad) pusha aad mov test aam or add cwtl inc push es outsb add cmp add push jno and inc fxch nop js and subb ret push inc cli adc (bad) test mov or adc test add sbb fnstcw mov or pop add test (bad) stc or test sub and mov xor or loope les ds nop cmpsb test or or dec mov mov pusha cmp push push mov mov mov inc lock and add ret pop or sbb xor pop cmp cmp add xor and pop les fdivs mov pop inc jno xchg xchg adc xchg or lods xor and push mov mov adc je and cmp jp ficompl add push in cmovo push (bad) pop push inc and mov ret cmp inc and push or je and adc test adc xchg push cmp xchg and adc add ljmp xor loope and mov es dec or sub add mov add inc dec mov inc shrb push and jp add js mov nopl cmpl sub add cmp (bad) xor add inc adc xchg test fs adc mov orb and or nop push xchg call sbb adc adc add cmovo hlt (bad) xor psrad adc and mov push cmp adc mov (bad) stc or mov dec add add or push pop or push add mov sbb dec nop mov mov and inc in pusha sqrtps push inc and add xchg xchg inc pop ret mov lds sub roll es (bad) mov jbe mov and push sub and xchg inc js,pn (bad) repnz pusha adc movsl adc es push add pop mov cmp push aam je sbb cmp mov sarb inc mov shl mov sub or pop mov in cwtl adc cli cmp (bad) fcoms mov inc std nop decb pop inc push adc sub stc and int mov adc push adc or nop dec (bad) jb push add push stos test or mov (bad) xor nop or rcrb inc inc adc arpl sbb adc sub jo add cwtl mov xor out and add and mov pushf adc (bad) into aaa enter adc and dec inc push adcb fs mov push pop add push cmp add pushf cmp rcrb mov and adc push add cmp and dec inc push and or loopne mov adc add or bound add xor (bad) aam in add imul cmp nop inc xor in xor mov add ss enter adc xchg adc jp fdiv add or scas add mov popa xchg nop test sub push xor inc add test adc cmp cmp stos add or cs jp arpl pop cltd push paddq fs sbb cmpsb loop mov adc sub push sub rcr jle adc push cmp inc pusha mov push ret mov xorb add das (bad) cmp pushf pusha hlt addr16 test adc xor push orl xor call push scas push adc mov sbb xchg push add xor xchg repnz add (bad) xor nop or adc mov adc jo mov adc pop ret aas cwtl or xchg test xchg and shrb call je mov scas inc ror xchg adc mov pop cmp mov add pop add sub cltd jmp and push lods mov sbb push inc jbe movsb or xor les in mov or mov add add push shll loop mov xor sbb in rcrl je dec fldl cli xchg insb and add or push mov sub xor add inc inc mov inc push int sahf mov out and (bad) daa xchg (bad) jns mov inc xchg or inc in and xor push into (bad) les mov prefetcht1 ret repnz sub dec and cmp scas add test in or popa add mov call inc dec mov call inc rorl movsb imul inc loope xchg cmp (bad) adc lahf sub sub andl or push add pop add push inc xor adc jo inc test clc and sbb (bad) movl nop adc xor or shl push jecxz mov inc orb and or cmp push inc jp push mov or mov mov lds test xor mov ret sub leave adc inc xchg mov insl leave (bad) cmp and daa imul push dec (bad) insb and add lock (bad) and fsubs push inc xchg push orl lret je adc or mov xor adc pop rorb loop call mov sahf pop jge outsl inc (bad) sbb and and adc fs mov mov ret xchg inc movsb sbb dec jge andb adc cmp pop rclb pop xor mov adc xor ds nop push test xchg push andl adc or lock or fs orl inc rolb imul movsb xor mov (bad) and mov add and fadds sbb clc sub sbb mov cwtl or and push mov add inc sbb mov imul adc sbb inc push mov mov adc movsl inc lret aam les add cwtl sub mov xor and push dec sub or pop push xor orl std dec and hlt mov or test jno and sub and inc add adc mov inc adc fwait test and inc inc dec adc push nopl mov mov push dec xchg lea mov push and and add sbb or or mov and xchg jno add inc loope inc jns inc nop sbb dec pop sub leave sbb enter test add (bad) xor movsb or arpl mov jo subl loope sub inc rcrl or mov cmp and and cwtl inc cs stos loope sbb dec push inc adc cmp xor xchg add and sbb mov mov add push add (bad) xchg in or sbb add or or inc cmp (bad) fsubl jns loopne push nop xchg push lods adc and and add ds psrad and inc mov mov sbb cmp mov adc xor subb lock add xor or or pop add sub add cmp dec lret test push les inc lcall and push mov adc test test add push into mov and sub push add dec add cmp xor fimull (bad) in mov push xor xchg add aaa jo pop inc or sbb (bad) inc or add add and and push xchg cmp xor fisttpll push jae repnz lock xor jge mov pusha repz cmp call xor jo add pop test pop push xchg xchg inc bound adc add pop pusha int3 or pop mov repz popf sub sub rolb or loope mov sar je loop cmp repnz add xor inc inc add or add or rolb add stos add sarb xor xchg rolb push or pop add sbb nop push ret adc in sbbb xchg nop jo or adc add psrad and test mov adc and sub cmp adc add push adc cmp rorb test mov mov shlb mov loopne daa dec jmp test sub add mov cmp rclb or push mov pushw add dec sahf adc mov scas dec adc add mov dec pop and ljmp ret or fadd pushf and loope add int3 adc int3 sub push or (bad) jb adc mov mov pushf sub jecxz or pop or inc push add loop add das enter or testb or and pop shlb loop sti cmp inc or sub ss inc push inc sbb movsl push dec sub mov push outsl add jmp ret adc xchg adc xor xor call jno push sahf add add add adc movsl inc xor inc inc and jo adcb push add mov popa adc shrb nop push add or cmp and add punpcklbw adc (bad) and mov and mov fs push adc and sub lds mov lock sbbb lea lret pop add sub push mov shlb xchg movsl dec subl movsb push sub pop dec stos push mov push lods sbb imul and add je pop daa cmp adc cmp inc lret dec add addl adc bound and push add or and sbb roll add inc push les call je inc jecxz cli pop add pusha sub das mov rol js mov enter add pop pusha int3 pop test leave outsb and sub sarl xchg inc mov adc push dec dec xor mov sub imul xchg popa sti sbb cltd add or pop sbb xchg xchg loopne dec sbb mov test or mov call add xor mov add add cmpb mov push mov or cmpb pop (bad) bound or or popf pop daa inc sbb test addb sbbl ss inc push adc addps bound xor xchg out xchg stos mov lock jl add xor mov add inc sub jne xchg push movl adc movsl jmp (bad) xchg clc add push sbb lret push xor mov cmp mov ret outsb sbb adc pusha loope inc inc mov shll mov daa adc xor add pop inc mov les dec or add and adc xor and pusha dec and ja les xor insb repnz pusha lret add cmpsb adc inc jae repnz sbb add movaps movsb xchg cli add push loopne cmovno (bad) cwtl push sub adc testb stc xor adc rcll sbb xchg sbb sub sbb (bad) adc and xchg sbb jnp movsb lock hlt dec popa xchg rcrl dec adc cmp jmp shll test mov aas push inc or dec mov add add andb sbb nop push ret inc cmp (bad) fsubl jns loopne inc sub ljmp xor loopne xchg in add push dec rolb adc cmp leave cltd add (bad) ds mov inc and dec cltd (bad) into cmpsb js bound dec clc or test and and sub pop gs rorl push test dec lcall mov or les add xchg xor or add dec add and and adcb orb push pop lcall pop inc mov adc es prefetcht2 hlt jae (bad) sub inc fisubl es insl ret aam subb popa aaa and adc addr16 insb push mov test sarl push popl test test push into pushf add cmpsl or jno mov sub dec pop jae lcall mov sbb aaa push mov xor roll xchg cmp dec mov test mov dec shrl mov in daa insb mov nop dec loop push mov test and dec fwait push les and (bad) add add sbb rolb adc mov loopne es enter push movsb xchg addb test pop int3 imul pushf adc lea adc dec sbbb movsl int3 imul push pop or into sahf adcb adc push mov add or inc push sahf les sbb daa imul mov xchg clc jl out sbb lock xchg lds add adc loop xor and sbb mov inc rcrl add mov dec mov int3 adc jle sbb sub cld test mov pop (bad) (bad) popa loopne nop sarb gs stc inc push negb push push lcall jg cld xchg fs std inc or dec bound add push cmp push add add and inc fistl aaa push push mov jns addr16 jno (bad) aam push mov sub dec push add jmp adc inc and cmp push out lcall das adc sub cmp add mov popa adc shrb nop push add mov or mov and add dec test sbb cmpsb out mov and xchg mov and push rolb dec test push xchg and fs test lcall mov orb mov insl ljmp and and push mov and mov bound cld or dec and cld cs icebp test sarb mov inc push add push or rorb pop inc mov int3 push cmp add iret cli mov inc inc notb popa dec inc das shrb add mov aam mov push mov sbb jo fstl rclb popf add stc inc in cmp mov mov dec inc xor lret adc push add inc adc and enter in loop push and inc sub or stos test or add (bad) xor nop or adc shrb nop push add or mov test arpl and push arpl add and mov mov leave lcall lock cmpb xchg add pop sub jo xchg inc insl and cmpsb mov add cwtl mov add imul pushf movsb lock mov mov ret pop sbb push clc cmp add cli inc (bad) xor test push mov push mov dec inc rcrb rcrb dec (bad) jae push sbb sub mov test dec inc xor cmpsb shr fisubrl adc inc loope push dec jle clc cmp cmpsb lock sub cmp mov popf std aaa stos pop push cli cwtl adc sbb sub sub add lods dec loope adc mov mov or adcl sub lcall sub sub jno mov je insb sbb cs adc cmpsl adc dec aas imul mov int3 add inc push mov and push pop xchg sbb in sub push or pop add sbb rolb adc mov loopne es enter dec xchg pushf addb push into lods sub mov rolb dec push mov rcrb scas punpcklwd mov or xchg fsubl sub loopne xchg xor add loopne push sbb dec or and test push fmuls sbb xor dec jge repnz push mov and sub adc push pop and inc stos adc std push sbb xchg dec icebp hlt push or shrl rorb (bad) test and and orl xor mov mov roll js out inc adc mov es sbb daa clc pop mov jl push out roll test xor xchg cli pushf and jecxz or arpl xor fldt adc stos adc sbb add adc mov add dec add xor jbe add mov push dec mov mov cmpsl push inc add mov test jecxz push pop stos or sub sub push xor jo add pop add push inc xor and mov or inc cmp aad sbb or jo jl sub dec xchg xor loope popf pusha pop out subl push movsb clc adc and sub xor and in add push je cmc push sub loop xchg clc dec inc push sahf sub lcall mov ret push sub call push jge ljmp pusha and cmp pop (bad) push les lods or inc cmpl or jo xchg (bad) and das adc dec xchg inc sub cmp movsb shrb mov mov add addr16 push mov xchg or aad stos add ljmp and xchg or mov push or jg or inc movsb mov dec outsb sub stc dec int3 push sub inc push xchg arpl sbb pop dec dec mov test pop inc out inc mov mov mov push xchg pushf xchg inc addr16 in jle adc add push inc xor inc cmp (bad) fsubl jns loopne dec push add int3 mov ret cwtl out dec jo mov fadds push push movsb sbb (bad) push and or nop and or push test dec adc mov push mov or add fmuls dec call subl rcll call fisttpll imul popa adcl test lds adc nop dec cwtl inc pop sbb sbb sub sarb or mov inc inc ss push popa push mov ret mov push jns inc cmp push dec mov xchg push lock addr16 enter push add or scas adc stos mov mov adc pop pop push loopne or stos inc repnz push sub and clc adc xchg or add xor aad mov mov push mov test and adc adc stos out push jp inc in hlt mov push stc inc xchg add mov xchg rolb andb sbb nop push ret inc cmp (bad) fsubl jns loopne inc sub sarb (bad) push jae daa inc inc sub scas add sbb lret js adc cmpsb sub mov mov push push mov add ret mov subl xor push pop inc jp and mov and mov jl jmp fsubr aad scas mov or push add xor ds mov in and add (bad) lret sahf or and and push (bad) lcall add add add pusha inc repnz jo mov (bad) aad test add mov mov and mov dec fisub pusha xor je cmc pop es pusha stos xchg seto xchg or add or push mov sbb adc or adc inc and or orl or pop jp enter lock push and push popa sbb lods dec bound add orl push bound into sahf mov push sbb mov popf mov sub jns or mov cmp inc pop in aas jns push inc cmpsl and mov xchg inc insl repnz mov mov cmpb mov push xchg movsl push leave cmp icebp (bad) dec lock or add enter adc push inc xchg and inc sbbl enter les scas sub mov inc mov add or popl xchg xor add and pop cmp or hlt imulb sub lret push aam test daa xor jmp loopne sbb pop sub mov mov inc jne lods mov js push cli xor and pushf jbe sbb (bad) int3 push bound cltd push jo stos xor bound mov (bad) dec pushf and movsb shll cs mov mov add outsl cmc fwait sbb callw mov xor aas lcall jp mov ss aaa jo roll pusha sbbb or mov mov movsl pop (bad) add dec jmp ret xchg push pusha xchg cli rorb scas mov mov mov mov mov xchg push sbb lods sbb pop cmp and mov mov imul (bad) push inc and or test mov cmpsb add test stos add lock mov (bad) xor cmpl push add mov sub push ja push mov add pop inc cld xor pop ret lcall popa fs popa xor lock sbbb mov inc cmc arpl pop push add sbb lock inc test xor push lret into cmpsb js cmpsb out mov in add push pop or jl fiaddl aam imul movsb mov and sarl jp or adc das adc sbb add inc clc and push add sbb cmp test shrb push add jb lcall (bad) fldl push cmovp scas lods rorl test mov add stos stos mov cld push in sub pop shlb xchg jne push lea jmp dec inc dec cmpsb inc add insl inc sub lret mov jl cmpsl adc sbb scas sub sbb orl push pushf lods iret (bad) testl test or fcoms and lods xchg imul sbb add sahf sbb inc pop pop xor sbb test subb orb and or adc in andb adc cmp push add imul cwtl pop les mov sbb and insl add rclb mov fimul call add (bad) sbb dec (bad) dec add lea popf dec icebp mov iret lods mov mov lret movsb popa sbb or cwtl mov xchg inc loopne sbb pusha dec push fisubl or pop mov xchg inc push adc cmp test pusha cmp push mov dec add or and mov mov adc daa mov (bad) je sarb pop dec sub mov jae jmp cmc mov xor cmp inc cwtl das push mov iret pop mov movsl mov jp cli (bad) clc xchg jo and and fist test jo orl adc jmp push fsts lret mov push jo add loop mov add cmp lret mov orb (bad) push cmp les add sub loop push add sub adc and test sbb movl mov and lock adc and cmp add jmp jns or aam jno sbb and push inc pop loop subb add cmp subb call adc aaa xor xchg or add or test jno arpl lods push push stos and add pop movsb lods inc jp mov test inc adc imul or lret xchg sub inc leave scas push cmp xor xor cwtl xchg or sub xor mov hlt pop mov aad mov into vaddpd pop add cmp push cld cmp pop lret add mov cmp nop jge sbb push rol push mov ret andl add inc mov pusha imul mov scas jno mov subb orb add pop add xor add insb add iret test add dec cld nop je sub aaa add push push mov mov xor jo or inc out cs pop xor rolb xorb test daa add aam push ljmp cs and cmp test or jb adc test xorb nop or adc mov adc jo mov rolb ljmp mov inc lods mov cmpsb xorb xchg ljmp inc sub insl and dec mov test mov les shrb rcl cmc jbe orl sbb lock adc sbb scas int3 adc inc test inc popa add or mov dec data16 sbb mov add dec js mov fnstenv mov push subl ja mov scas movsl fist xchg mov lcall adc iret sub les sbb or mov fwait aad test sbb lock adc mov ret sbb roll sub js outsl or icebp xchg mov in and push rcl jne cwtl icebp add push ret sub cmpsl dec call xchg pop or mov add or or inc cmp (bad) fsubl jns loopne xor sarb mov jle xor andl fs (bad) es rcrb jmp sbb jecxz xor insl add add pusha xor jo mov dec test lahf add mov pop sub aam or inc push jne ret movsb add cmc enter fisubrl add testb inc (bad) scas push loope enter enter sub sbb adc movsl xor jne test sub int cwtl je mov pop (bad) or pusha mov out fisttp clc or dec adc and mov push jns mov jecxz push jp xchg (bad) cmp repnz xor xchg into mov jl mov sahf xlat shlb push fs lret lret sbb fcomps imulb push dec adc cmp das lds or js add mov arpl pop test add or pop ret loopne xchg aad mov sar shlb adc or cmp pushf pop loopne mov pusha or push add pop add push inc xor and js mov push cmpb push add xchg add inc mov sbb imul outsb fs jo loop push nop mov or add insb xlat sbb and inc lea sub roll adc push pop (bad) (bad) shlb adc stos mov inc leavew pop rclb xchg mov sbb xchg test outsl or add ljmp movsb icebp inc mov fcomps and sub or das mov inc adc (bad) sub push xor sub jb mov adcb add pop sbb add mov xor pop and jb dec fwait push mov jb mov cmp cli pop jno mov xor cmp loop push sbb loop push ljmp push and cli (bad) adc adc and xchg jl xor cwtl sbb mov inc daa dec lret incb test call sbb aad add add jecxz sub dec sbb int3 add mov add add cmpb mov adc fs movsb adc lock push pop add rol push xchg test imul add dec inc inc cmp inc sub push mov adc test bound dec add sub lods sub clc or cltd xchg cmp dec add adc push push push cmp les movb jnp push ret adc scas enter mov (bad) (bad) lcall dec sbb test dec pusha addl xor add in (bad) mov mov enter push push cs mov fisubrl cmp movsb shrb aad out popa mov sbb push jns mov and pop stc xchg test pop data16 jmp dec xor add gs mov loope test (bad) mov dec add and mov sbb pusha sbb sbb int mov lret mov pop add repz dec pop jmp adc push in and add add sbb popf xchg xor lahf xor pusha adc test subb orb and or adc in sbbb sbb push push sbb sbb xor sub mov and push int3 dec mov dec mov mov lods add xor cmpb fimull add jnp pop sub fldcw sub and (bad) fcompl dec bound add mov push lock pop lcall xchg bound pop sahf mov cmp pop sub int jb add adc sub adc outsb test or in bound mov or adc mov xor orl lds jo insb push push mov xorl mov adc sub mov fistl aam es and insb sbb mov je add enter adc push jb cwtl mov aad stos dec and sub add jo sub sub sti push dec mov cmp adc mov cmp add pop add push inc xor and js mov push movsb push imul sub into stos lea lea and fcomps push xor or (bad) sub dec out rclb andb push adc js arpl rolb sahf and add xchg cmp push or xchg adc arpl jecxz push jne xor loopne inc push sub pop or cmpsl hlt and sbb lahf aad mov push and (bad) sub jbe inc inc call icebp fdivs or shlb cs sbb push imul int xchg pop mov sti dec mov xchg pop sub pusha push adc ss bound fwait sbb adc shr xor jns pop loopne adc add xchg les je add cwtl push add lea pop loop and rolb inc scas lea mov xchg sbb and dec es pusha add or dec ds (bad) ljmp push and sbb mov cmp add add inc add outsb adc mov add push xorb mov jnp dec xchg dec or scas mov sub xor adc cmp test xchg xor pop and cmpsl jo sbb xchg sbb push or add jbe mov daa xor loop clc cmp add xchg push and arpl adc and and bound lock push add push cmp mov scas push loop mov sbb (bad) sbb mov roll loop cwtl dec sbb push fwait aad push adc mov (bad) mov lods aas loope sub or push pop js mov inc xor sbbl sub lock push je add mov xor add pop push mov inc dec fadds jns pusha pop xor or xchg inc and fdivs inc test mov aad jbe,pt daa les pop inc adc xchg or dec sub dec inc (bad) lret dec enter sub lretw shlb or adc lock push or fwait sbb xorb fimull lret sbb push in xchg and in xchg sbb push dec and pop lods xchg fs (bad) mov pop add jne mov test xchg jo adcb add or push cwtl inc add sbb jo in mov add inc adc and push and sbb sbbl adc dec sub mov push mov xor dec pop push mov dec fmul mov mov pop mov push test inc adc pop loope ss adcl push movsl adc lret dec es aam mov fs inc xchg xchg sbb push mov adc lcall lahf sbb lret xor sub mov add ret je dec movsb inc pusha pop add std mov dec lret sub sub mov ror test cmp jle ljmp sub push jae inc mov inc arpl ficomp rorl orl xchg adc lods fsts shll add mov or movsl cmp gs sub or repz push or add adc pop in lods gs sarl mov and add xor jb lret or add add sbb rolb adc mov loopne es enter push mov popa pop add pop test jae daa or popf xchg movsb popf mov pop imul bound or insl add sbb jp pusha dec loop xchg mov ljmp lcall inc add (bad) cmp int3 mov flds lods lods xchg test lret jecxz (bad) pusha cli sub adc cmp js adc push mov jb loope inc push add push insb pop es mov add mov shrl repnz lret je add pop cmpb loope add push mov dec rcrb out arpl xor jg or inc dec jo nop ret adc gs push xor stos fnstcw inc outsb sahf mov rorb dec sarb jb add add or stos inc popa sbb hlt (bad) sbb loope push int3 xor mov sub xchg push daa inc push lahf (bad) shlb xchg cmp sbb push and and sub push or pop add sbb rolb adc mov loopne es enter inc mov mov enter arpl cmp or pop loopne add and (bad) or and and aaa cmp arpl adc sahf xchg ss xchg pusha sbb cmp add xchg xor jp inc push push add cltd and xor test inc cmp jecxz cmp inc xchg (bad) bound (bad) enter or pop shrd sbb outsb movd loop jge sbb mov inc cmp adc cmp xchg daa fsubrs xchg (bad) stos xchg push add pop (bad) in or xor xor ficomp xor (bad) stos out lock data16 push jl add push test mov lret or nop les push enter enter pushf dec loope mov pushf inc imul ds jne mov and and data16 (bad) xchg xor in xchg cltd lcall push adc xor aas or lods lock mov fnstenv push add add add popa adc shrb nop push add rclb or adc daa repz or pushf adc or dec sbb lcall popa into mov inc pop dec mov aad xor loop dec adc ret test pop push xchg push add adc mov dec sub push xchg aaa sbb cmc or (bad) push or mov and pusha jo pop sub mov cwtl and nop add nop inc mov ss fs inc add push push sbb adc pop mov inc jb mov and adc sbbl cwtl sub push hlt sub into push xor popa dec add data16 lds push fdivs cmp pop pop ljmp mov pop in in push sarl xchg pushf push xor or push call divb lds pop inc mov cmp lods push pop roll stos inc test je imul pop nop sbb jbe pushf add add xchg xchg cs bound addr16 sub adc sbb xor xor inc or add push (bad) and mov test add cmp shlb cmpb add inc dec mov int jecxz cmp sub push cltd xchg lea insb and sbb inc or loop sbb ret fmuls push addr16 sub test push cwtl mov insl or add jne fldt push es (bad) ss and in add inc into iret bound and fs stos add (bad) (bad) int in inc mov xchg pusha (bad) hlt mov js daa dec push xor int or call test mov cmp sbb jge cltd push sub cmovp sub sub punpckhbw addr16 ds xchg jp mov and cmpsb mov mov xor add xor ja sbb loope mov add add sbb adc and gs or movsb mov pusha imul mov xor mov fldt add jp inc sub jbe mov or adc mov fcoml and add add andb add inc ret cmpb or and inc mov mov push xor push xchg mov inc (bad) or xor and sbb lret sbbb or imul xor sarl inc mov sub push add sbb xchg cmp mov inc add lds mov push sub jl push push sub xchg mov rep mov dec lock cltd in dec inc xchg shlb mov cmp rcrb push or inc pusha js repnz hlt sbb push loopne les nop mov xor push pop xor lret fdivrs xchg loope push or jg jle add sahf std mov cltd dec mov cmp xor rcl outsb mov lea sbb cmp xor mov jno mov add movsl pop mov inc sarb loopne push mov test out add dec or push mov xor add or or inc cmp (bad) fsubl jns loop dec push sbb or cs mov dec test push dec jecxz add jp cmp push mov lret sub mov mov nop insl fs xor pop movsb sub insb out sub inc sub add inc stos inc inc push push dec mov data16 sbb add and cmp cmpsb lods bound dec mov je xor xchg add add sub sub mov in pop and faddl xor loope push ljmp adc xchg or xor mov mov movsb sub js jae sub clc add mov add shll sysenter mov dec fimull nop ret dec or dec xor mov mov cwtl cmp dec je (bad) xchg sub mov je and into imul xchg xor loopne or adcl je jmp or inc loop xchg rorl jmp lds insb or enter add aam dec adc adc sbb in rcl (bad) xchg mov add test subb orb and or adc in sbbb add adc add sub and mov push push lea or and push sbb mov fsubrs fsubrl popf dec icebp mov mov insl inc or subl xor mov pop dec dec dec (bad) not add sbb push dec sbb test inc adc (bad) pop (bad) int3 (bad) jo xchg mov lret mov pop add jb cmp and adc bound push xor xor inc enter mov imul or jbe lock inc test jb or mov jecxz push jns popa addl gs xchg dec rorb hlt ds adc mov sbb push and pusha outsb xchg and jecxz xor int3 dec mov rclb dec dec imul repnz sbb add mov push jns jo aad test push imul es in inc movsl add jb adc push (bad) and sub pusha or or inc fcomps add insb (bad) sub add test rolb xchg inc psrad xor add add sub adc (bad) push rolb or arpl (bad) inc mov sub or pop pop mov xchg mov dec fildll sbb mov and je push popf test push inc cmp js jb mov pop add or cmp add divb rclb loop add lock or les in (bad) in cmpsl xchg pop sbb add cwtl outsl mov int3 mov loopne popa pop pop lcall sbb mov or pop test xchg gs and push lret sti dec mov sub pop (bad) aam push sbb es fisubl movsl daa outsb push inc add mov or adc test test push lcall push sub rcl movsl xor in outsb adc push and fs pushf add push imul int3 pusha pop push popf cmp andb shrb fldcw add or add add inc ret sbb test and call add pushf je les mov add add and and lret dec pop repnz sbb pop inc or lcall add dec mov add sub jecxz mov (bad) mov dec add pop and test cwtl mov sbb jmp mov mov daa and or jnp shrb stos add add fildl fcoml out jno (bad) cmp test test cmp xchg jg clc inc ljmp aaa xchg and fs mov sbbb stos add adc and push movsb cli or mov push jb pop add inc lcall mov fs xor add outsb fidivl stc and inc or daa cltd call inc push (bad) mov or sub push arpl mov (bad) mov movsb in out push push inc mov subb mov add sbb sub add imul add loopne add mov pop rolb inc cmp andb orl inc sub jo add adc fadds pop sbb test and call je add add xlat int3 push add pop sub xor xchg pushf dec mov xor mov adc leave inc inc arpl jp and mov dec arpl mov sbb loope aad lock mov xor test mov pop mov jns add ret xor dec (bad) or mov push enter mov lods mov inc pop lcall sub enter mov push push sbb add add lods and sahf pop loope stos stc mov sub push cli test push lret pop aam (bad) lds lahf inc imul mov sbb pop push inc inc xor mov lods add lea pushf pop xor mov sub add inc pushf movsb add and imul loopne xor xchg add rcrl push sahf push jno add scas sub inc mov mov test subb orb and or adc in sbbb add dec les adc add (bad) inc cmp add mov (bad) cltd lock stos pop roll cmp inc push cmpsl pop dec jo mov pusha fs push mov and and ljmp cmc scas or les icebp addl mov mulb dec nop aaa mov xorl js push out jne pop mov push dec cwtl sub fstl cmp xor outsb fwait subb add sub adc fs ds rcll fcom dec ficomp fistpl (bad) jns addr16 jns fs mov inc dec push adc or scas cwtl movsb movsb cmpsl and or rcl or movsl xchg and pop inc pusha mov scas (bad) movsb pop xor xchg push jne xchg in xchg loopne dec push fldenv inc cmpsb mov imul xchg cmpsl pushf imul mov mov andb orb adcl add insb adc mov ds inc push xor inc or add push (bad) and mov test add cmp rclb add or lcall jo mov or ljmp gs sub clc add movsl add jno sarb jl mov dec xlat cmp (bad) mov enter adcl inc pushf sub push sub dec sub gs add dec movsb clc xchg add (bad) or add sbb pop int insb push sbb pop inc mov adc mov pop insl int3 adc leave inc subb pop xchg pop inc push sub or in mov fldl cmp mov xchg inc xchg and jle add cli (bad) movb insb sbb sbb mov mov loopne xadd nop lret sbb fistpl push add loopne add adc mov add mov or fadds (bad) sbb nop add ljmp in nop inc add aad and es mov test leave js lock push add add add popa adc shrb nop push add cmp add push inc mov mov adc mov add mov pusha sub repnz xchg loop push sbb enter dec movsb sub push subl mov dec jge jb adc xor pushf pop movsb and and and push leave xchg int3 mov lock xchg flds aam inc inc sbb and leave mov cmp mov inc jne xchg fsts sub or shrl mov prefetcht1 jo inc (bad) outsl lret test movsl push sub push imul pop jo pavgb ja or sbb bound fcoms mov mov mov mov call int3 lahf add pop xchg dec xor fstl inc jbe xchg js arpl inc (bad) ss mov sub push ret inc and daa sbb xor add xchg arpl int3 sbb jo add mov add mov int ja mov orb add add insb dec ret push and and rorl pusha mov or adc add or add test push or xchg add dec adc xchg sbb xor bound sbb (bad) pop sbb adc adc out add aad push lea cmovb repnz test push movsb out dec and (bad) xor inc add fbld add add lods test push test rep mov add sti adc or pop (bad) xchg add into and lock pop adcl add jo add pop sub inc fwait xor push lahf insl push push jb ret inc scas hlt or clc adc rorl aas xchg pop push lods sbb xchg cmp push push pop inc pop aad inc test xchg xor call and sbbl movsl shrl test fsubs sbb aam or nop (bad) adc andb enter add lcall push push inc push sub arpl or cmp data16 or xor or inc xchg out adc add jo add adc fadds pop sbb test and push dec push pop pop cmpl xor inc dec add xor mov inc and xchg sub cmp cmp add mov pop or test ret aam push mov push jecxz mov mov in les sbb mov adc inc sets cli xchg loopne inc push addl lahf adc gs sbb in mov fmul sub andb pop mov and (bad) xor add push jo adc addl outsb test je xchg fcoms xor and icebp aaa imul pusha aad sub mov mov lcall and inc mov ret stc mov (bad) addr16 xchg inc pusha lock lcall sbb fidivl mov (bad) shrb adc or lds popf movsl int subl jno push lods (bad) push mov push popa stos outsb xor aam or xchg mov jo add adc fadds pop sbb test and adc dec add movsl sbb sbb and push int3 mov sbb test test leave push mov insb and aam push mov xchg mov addr16 and inc outsb mov cmp imull mov in mov dec cmpsb and inc addl sub stos push jae xchg subb inc jnp mov (bad) mov xchg mov test push lret inc nop xchg in mov lea jo jno mov sbb fstpt sbb or jbe sbb repz or push daa adc arpl sbb xchg dec mov jo stos xor push enter cmp stos add dec lock and outsb mov xor inc mov and mov inc addl mov outsb lcall xchg movsb subb adc inc or lds sub leave into fnsave mov xor and popa xchg loop xchg (bad) xchg movsl dec sub and mov scas pushf imul xor call push repnz jmp jp pop mov jae adc gs pushf data16 jl adcb add or push cwtl inc add sbb jo in sbbb add adc add mov mov add pusha mov ljmp sahf xchg jmp add nop loopne xchg sub mov xor push out mov mov xchg dec int add pop xchg lods (bad) dec jb adc add mov insb lea stc ret cwtl sbb adc stos hlt jl lds jae add ficom cmpsl or adc rolb repnz xor aam insb inc rclb cmp sarl rorl rcll lret dec cs mov xchg inc jo adc sub and shrl mov fcmovne jae icebp sub outsb (bad) cmp js test in pop lods int dec jns into (bad) out sub push adc cwtl xchg lret mov jae nop hlt lret adc pushf loope cs in jmp mov test jecxz and and cmpsb setl or js movsb push jecxz xchg push xchg and loopne sub call xchg aam popl pusha adc cmp faddp and add jo add adc fadds pop sbb test and ljmp add ret or adc mov add fldl2e rorb bound insl (bad) sub out pop cmp inc das pop cmp shrb add rcrb push and mov mov pusha pop xor or mov mov in pop clc test arpl inc add or xor aaa mov jp push add and movsb adc fdivrs out add lock dec lret push pusha cmpsb inc jp (bad) push lcall (bad) clc das and add fwait xor add xchg test gs and popa mov add lods icebp cmp rcr cwtl mov pop in xor mov add cmp add adc push adc mov push jp and push mov add mov push pop and adc loop sbb mov add add cmpsl mov adc cmp add add mov popa adc shrb nop push adc ss and add add adc and leave adc sub mov popf pop daa inc lds pop xchg push push mov add addl fs push pop push xchg sbb dec sbbb xchg adc in xor cmpsl adc loopne and scas xor int cmp insl add adc mov sub or pop ret lods add fmull sbb in (bad) popf adc inc mov aad inc xor lret dec fbstp or rcrb mov dec pop inc sbb icebp xchg call ficoml incb xor movsb (bad) add or sbb add das dec jp (bad) xor les ret and or mov or dec cli lea mov and gs cmp sub mov aam push add jo stos xchg adc xchg xor imul lods xchg adc or push adc add outsb add and pop and push ja or dec and mov lret add loop push lds jno push mov add mov popa adc shrb nop push add and and adc add add push mov adcb nop lods xor jb shl sbb stos pop and or into xchg ja and ss mov push xchg lock push test jnp mov enter cmc inc push hlt pop mov imul mov mov mov push sub mov xor and pop into pop pop pushf mov cs notb or pop loopne xchg es jnp aaa inc cmp (bad) mov cli and jl cmp xor sbb mov mov pusha imul aaa xchg push and dec enter lds fiadd dec mov pushf and sub cmp adcl jg pusha cmpsl in xor (bad) adcb into adc cld mov rol stos mov movsb xor push sbb xor pushf sub shll jo ret push inc cmp sarb cli add sbb add movsb mov push xor ret cmp or push push sahf and cmp movsb std adcb push ret pusha dec rorb add jo add adc fadds pop sbb test and call loopne push mov cwtl movb add push int3 (bad) popa sbb fdivs mov in mov or push imul pop inc sbb cmp and and cmp mov pop add shlb in mov insl add adc sub xor inc (bad) xor mov test inc xchg sub rclb pop lock add mov pop push push add in es pop mov lds jmp (bad) lahf inc mov pusha jle jb fcmovu int lods mov pop jmp mov hlt lcall test add in sbb or inc mov loope bndstx popa or mulb sbb iret or cmpsl sbb mov inc adc mov sahf aam xchg shrl mov push or push mov dec adcl mov mov or aas cmp sbb mov lahf adc and cmp adc xor test loopne and jno add mov mov sbb adcb (bad) adc std or rcrl add or add or push cmp sbb xor inc dec cmp ret sbb push or cmp adc xor ljmp sub jno jmp loop add adc into and jb adc xchg add loop (bad) cltd (bad) in or and xchg add dec pop sub sbbl (bad) mov dec adc icebp cmc sbb and fsubs cmp or or add sbb test fcompl loopne (bad) dec inc popa out into cli or adc movsb mov push pop push and repz sbb mov pop add and mov mov cwtl rcll jmp adc fcompl sbb aad mov cwtl or dec into xor fs (bad) popf js (bad) dec inc jno jle aam sub xchg sbb scas sbb sub add xor inc sbb jecxz leave lahf add cmpsl loope jecxz cwtl out jbe or and sbb mov jo adc rcr xor fs mov in bound sub mov sub push mov cltd push and cmp sbb add scas cmp les mov out fidivrl and inc or add push (bad) and mov test add cmp popa and adc pop lock push (bad) jae lret add xchg nop and pop data16 (bad) sahf pushf jp xchg or and lcall or xor addb jmp dec mov adc push cmp sahf scas cmp rorb xchg sbb mov adc adc xor and push xlat sbb (bad) pop and mov pusha adc mov mov cmpsb sbb aaa (bad) xor les sub mov jae pop lea fist jp mov jae or out or xchg xor pop or addl or xchg inc add (bad) push nop fldenv mov push jl and inc xchg jecxz pop xchg pushf addr16 push pop arpl xor dec cmp add inc add lret outsb mov sahf push dec push and lods dec je aaa test cmp xchg xchg ret cmp xor fsubs (bad) pusha add mov js xchg not and mov pusha adc jb ror inc xchg les dec pop adcl sub jo add adc fadds pop sbb test and ljmp pop int3 jae sbb push xchg stos pop loope add add inc mov into and test rolb jno adc sub sub cmpl or push mov insl addr16 jb or stos mov adc (bad) sarb nop dec dec dec or push push adc sbb inc lret aam sbb push mov adc jno mov inc lods test inc adc push or test adc xchg or or dec stos add fldt sub popa pop or out pop out (bad) mov enter or and and push sub subb lret bound and cmp imul jnp dec jo xchg sub xor fdivs xchg test xchg pop dec imul mov dec xchg rorb or pop insb in push jne add addb adc cmpsl sub dec shrl adcb cmp add pop gs adcl mov orl inc sub cmp les int3 add nop or adc mov rorb push mov xor jp rorl push sub inc xor (bad) arpl stos sub inc test jmp fmuls add test es mov insb add add popf enter adc jno inc pop dec jmp mov mov or add loope push test mov add push (bad) mov dec dec out daa and sbb (bad) adc mov inc mov stos lret inc aad mov lock nop mov or mov jb add mov ret rorb and add hlt test jns les push xor pop (bad) mov out dec and lahf stos mov xchg adc or das dec xor shlb mov movsl add cmpsl int in pushl je ljmp inc mov or dec pop add (bad) dec sbb cmp sbb sbb add push dec (bad) test adc add jo inc inc add out add dec inc gs or fwait add cmp add xchg push arpl jo sub dec mov or mov push jns add sar cs push or test add pushf jo jecxz sbb add or add or nop push push fs and xor gs subl or mov adc fcoms in and or subb das mov xor aam sbb imul or jecxz sub xchg daa cmp push add outsb or adcb insb add mov or xor fmuls or inc scas add inc cmpsb mov mov pop and adc out mov fimull add sub push daa cmp cmp das or out subl shrl adc xchg sarl (bad) sub loopne or inc cmp xchg push test pop lea mov jne adc and out xor xchg jbe adc xchg mov add mov push sbb adc addr16 pop or and adc subb add andl add stos out or mov add push imul or add push (bad) and mov test add cmp rorb add test (bad) je andl inc pusha or or (bad) or inc sub loop mov push sbb ret pusha dec loop adc or xchg repnz sbb cmp add xor lea cmp xor push jnp sub add sbb ret push and dec jl sub cltd xchg cmp jae rcrl xlat cmpsb adc push jae mov xor in push or add mov pop mov jb addr16 movsb shrb cs mov je divl aaa cmp popa sbb movsl shrb pusha xor xchg test push xchg frstor lcall adc cld xchg (bad) xor push fisttpl ficom adc sbb fiaddl xchg sub mov aas cmp rolb (bad) xor sub mov inc add mov push jnp xchg dec out data16 push add lods inc sbb add rolb add orb and or adc in sbbb lea nop pcmpgtd push sub addr16 adc or mulps or xor test lds push add mov sbb inc js inc inc lcall aas jae xchg test aam and or xchg movsb scas dec (bad) add and scas mov adc mov or mov xor push and jle jns dec add in xchg sahf pushw add out lret adc xchg adc out mov jne cmpsb dec daa mov sbbl mov xorl pop mov test xor pop fnsave pop sbb inc xchg xchg movsb aaa je mov cs xchg (bad) int sub adc lods daa sbb leave enter or push pusha cs and or ror cmp pop (bad) hlt pop popa sbb and inc ljmp andl and sub inc push pushf daa push nop add mov adc xorl mov cs stos dec clc add xchg push test mov mov jo add adc fadds pop sbb test and call add xor fadds repnz mov inc sub push or jbe jne daa xchg fiaddl lret insl mov (bad) loope (bad) push je mov cmp adc mov repnz test sbb sub add cmp pop cmpsl mov and pop jo xor push sub cmpb mov imul and adc aaa shl or movsb adc insb stos pusha adc add stos xchg pop arpl push in jecxz xchg std inc mov or bound cld sbb shll push punpcklwd outsl xor add jl or mov mov jmp mov ss dec out mov popa dec add ss jge lea stc call (bad) or ss xchg (bad) mov stos addl mov sub jo mov jge cmpsb pop xor ror testl rolb push sub inc lret pop cmp (bad) repnz xorl or mov add dec cli iret fcomps shlb dec jl inc test cmp and or int3 fidivr jo add pop add push inc xor and js mov test sub and push cmp icebp or pusha jp movb insl push in inc adcb sbb xchg push push or sub mov inc iret fwait inc subl sbbl push pop xor and xchg inc mov pusha sbb addb in add sbb scas xchg push mov cwtl mov lcall mov lds das test sbb sbb xchg test nop mov mov jnp mov push (bad) test sub lds dec push mov push xor in addr16 cmp loop mov jb js mov sarb insl int add inc in punpckhbw inc out sarb iret or scas xchg jbe sar popf std xor in lock mov mov iret inc enter add dec and rcrl xor mov or sbb inc sbb and dec or add enter rorl dec mov mov sub je pushf push sbb add jo or or pusha aaa xchg jmp push call or inc adc les mov test subb orb and or adc in sbbb pop lock add test sbb add cmp fiaddl rorl js jecxz rcll mov ljmp sub mov jbe test nop inc xchg xor fwait cmpsb dec enter xor enter mov mov sub xlat aas mov loopne and mov sub push jb,pt mov push or sahf mov push enter loopne inc mov andb test ficompl xchg xchg cmp push jae loop add push push cwtl xchg sarb daa fcmovbe outsb aam xchg jns popa jno leave mov jns mov inc cli sub inc nop push cmp fisubl adc aad das xchg mov cmpsl pop (bad) mov jbe push jno icebp cmp dec cmp outsb mov xor movsb (bad) and mov pop dec sbb lods add mov and push enter dec addb add adc dec mov out test push lahf adc push aaa push lods scas dec adc push mov add (bad) xor nop or adc mov adc jno add mov pusha ds pop movl stos rolb les test xchg sbb nop or bound stos pop and xchg pusha movsb xchg sub xchg xchg or nop cmp and sbb pusha mov daa and jp xchg push shlb nop add or dec mov mov add push inc cmpsb add orb or mov pop jns rclb popa adc xchg inc sti pop mov jb sub out daa cli call fbld dec xchg push mov test cmp dec xchg jl xchg (bad) das or jmp inc sbb arpl and push or cmp adcl call sbb (bad) sahf adc adc adc push or shrl pusha push push (bad) in mov push push loop inc cmp jo inc push xchg (bad) aas (bad) enter daa sahf dec xor sbb lea fisubl pop cs adcb dec push lcall arpl lods test or lret dec xor xchg sbb es push adc sbbl mov jo add adc fadds pop sbb test and ljmp add rorb dec cmp inc (bad) adc cwtl mov dec insb in mov sub or mulps push les xchg pusha fcoml in cs cmp int daa xchg push xor adc cld or cs jne test sub inc dec stos adc mov mov aam sub sbb (bad) lea daa pushf sbb push xor or inc out sub and add lret cld cwtl add test inc dec sub adc and into push inc sub inc pop mov push lret into add jo xchg adc xchg pop adc in loope sub push add mov or push sub inc cmp cwtl inc or (bad) leave xor inc (bad) xor mov sbb and arpl jbe jno xchg add inc push inc pusha decl pop add aam xor mov pop add xchg nop pop mov adc arpl and les mov pop dec mov hlt push gs cmpsl ds mov pop iret xor loop or push or pop add sbb rolb adc mov loopne es enter test (bad) sbb sub jo adcb push ss adc xchg nop push ret (bad) add cwtl add pop add and jae aam sub or push sub jp adc xchg mov ret lret push adc adc icebp insl mov dec mov (bad) enter daa jns (bad) sbb jno add dec fs js dec push add lods inc xchg ja aaa and (bad) sbb (bad) jmp scas call pushf mov icebp fistpl aam (bad) fwait insl push movsb (bad) js jecxz adc push fcomps addr16 or jbe xchg scas inc sahf inc and cmp and repnz cmc repnz or jp mov adc lods imul add mov jg mov pusha ror (bad) fbstp pop sub pop mov nop or jmp ror fcoms and enter jbe lods (bad) in push imul (bad) cmp lret setp xor movl jl test xchg imul dec subb push or pop add sbb rolb adc mov loopne es enter mov or shl (bad) into sub dec add mov xor and jecxz ret cmp jb mov push outsl leave insb inc inc cmp sub and mov das sbb es adc adc and dec pop pusha and addl jne or jnp sbb cs dec lret sub ret test bound lock cmpsb xor out nop mov xchg or test bound mov rolb jae mov lods in mov js sar and push shl mov xor (bad) icebp (bad) imul lahf call sbb sub sub or mov add nop enter bound jecxz stos pop js or fmulp pushf lahf xlat pusha add inc adcb pushf (bad) pusha xchg push and dec push adcl inc pop sbb pop cmp loop adc les shll inc jbe dec enter (bad) cmpsl dec mov sub pop mov arpl das xor pop mov inc (bad) ret dec push pusha pop and lods add or sahf adc dec int in popa sub push adc xchg or adcb add popa adc mov adc jno test dec rcrl rclb rorl sbb sbb pop xchg loop xor scas data16 push push dec mov test dec jmp (bad) push pop imul mov clc neg in push testb pop and rol mov add out and and sub pop nop outsl adc ret mov in push fstl (bad) fldenv fstpt (bad) add xchg lahf pop enter stc into sbb add pop test pushf pop outsb xlat cmp and leave and dec sbb and (bad) cmp mov test pop jmp ret push mov cltd jmp pop dec mov scas enter sbb jmp rcll popa jo in xor loop inc xor xorl push mov sub inc mov nop das or and cmpsl cltd pop fiaddl insb cmp (bad) push dec adc adc and sarb mov decl jno sub add lea cmpsl repnz xchg in les pop add jo add adc fadds pop sbb test and rolb roll gs data16 outsb xor enter xlat into mov add je in dec mov xchg iret adcl mov xchg inc add scas xor lret es sub push push test and xor orl mov and sub or (bad) (bad) pop stos mov cmp pushf hlt nop push jno dec pop dec pop push cwtl adc cmp push push clc adc insb and mov mov xchg pop mov mov mov jb (bad) lret xchg mov xor xchg pop xchg xor xchg inc push es cmpl xor inc push or dec pop push stc lcall js lret pop addr16 mov mov and xor dec cwtl mov sahf test arpl loope fidivl and and sbb iret push iret mov mov push mov or add orl cmp and add ffree xchg push push mov pop mov pop add (bad) in inc push adc sbb addb andb sbb nop push ret inc cmp (bad) fsubl jns loopne dec stos and or pop jns sbb xchg stos xor pusha xchg and pusha xchg (bad) shrl inc mov (bad) adc inc push stos scas inc fwait inc adc leave xchg jno stc fmull mov jmp imul add outsb sbb fwait push (bad) (bad) mov dec sub and jp,pn sbb (bad) mov xchg jg (bad) xor cmp push push dec cli loop lods es mov dec es sbb fidivl loope pop mov push bound (bad) fstpl scas pop pop cmp repz les dec inc fist lea xchg orl and mov inc mov adc mov push rol inc jae test or (bad) cwtl push hlt ljmp icebp sub andb xchg push add mov les adc cmp psubusw cmpsl push sub (bad) jmp push ss imul xor mov popa adc shrb nop push push int3 add mov rcrl fisttpll add cmc or lea call (bad) pop jmp jne dec and scas dec pop xchg mov add adc mov or pop mov push xor inc mov mov mov in bound push les mov mov imul scas rorb icebp inc cltd in push push add (bad) arpl lret mov cwtl sbb (bad) jae es ss inc jb mov push inc mov mov mov xor or call enter push push add lcall inc add addl mov inc push stc je out and arpl shlb jno loopne idivl std cmp dec xchg fwait out inc shrd push pushf inc and xchg push sbb or loopne or or lcall xor mov xor subl aam dec out pop jns mov bound pop pop mov stos sub ret rorb xor into repz ljmp mov add inc or add push (bad) and mov test add cmp adc add jp lcall xchg or cmp andb cmp add dec (bad) jo nop xor test or jns sub or scas mov push xchg bound ja sub adc testl aad bound out popa imul mov sub pusha dec and inc lods test xor push and call les adc or or sbb fild stos add mov pop dec and cmp xchg ds dec mov rolb in pushf rorl fdivrl mov fmul adc lahf push xchg jle cmp pop and lods sbb ret outsl or nop push out xchg sbb imul xchg and pop and mov xchg and add lea inc inc fwait xor arpl and xor mov es xor add mov pop andl in jo mov aad add jmp or lock andb es add (bad) loopne add orb and or adc in xchg test push je arpl leave push pop mov lahf and or push inc mov adc add or mov adc cmp xchg outsb call lret shll mov add (bad) push jmp xor jb fidivl notb xchg lods push sub lcall push add mov sahf or push sbb dec enter dec (bad) and add into xchg xor xchg insb push or jb shl xchg dec adc mov xor js incb mov rorl add jo xor lock js push popf insl push sbbl push add iret (bad) lock out pop aad mov (bad) inc xchg push test pop fldenv jecxz ret xor or dec bound and das fildl popf sbb ret stc inc stos inc and clc je or in inc ret cmp fimul mov or imul ss mov adc push xor xor jmp (bad) ficoml xchg or add jno in and inc test xor add add add adc fadds pop sbb test and ljmp lea aam test pusha fiaddl adc add test xlat xchg movsb shll xchg inc or js cltd pop adc ficompl add mov mov push dec xchg xchg fs test cmp cmovg and sbb push or xchg test cmp (bad) mov outsb mov bound dec or insb push inc jmp hlt clc movsb fs arpl add cwtl sbb push add xor ret inc pop xchg pop inc ljmp pusha push sub adc jg lods pop or repz cwtl arpl mov fsubs dec or dec push ret push xchg aas lock sub add push sbb adc xlat jecxz sub jge cmp icebp xchg (bad) lock sub mov push pop sub jne mov push cld fildl cmpsb and les add push imul inc pusha aam jmp mov ret aaa adcb push add mov popa adc shrb nop push add loopne add sub cld and (bad) pop mov subl adc fadds mov xchg arpl lods xor push iret sbb dec sbb scas and test sub mov add and jbe fmuls add loope sbb (bad) xor adc jnp das add int3 or or add or loopne adcl loop or (bad) xor mov sub adc dec add push mov rcr xchg mov push jb xor bswap jbe xor and jo mov sahf icebp ss add mov or sbb mov call add mov outsl xor mov loop push xchg shrl or dec pop or (bad) or js mov mov sub inc jl fcmovnb leave scas bound sub (bad) mov push pop dec les (bad) loop movsb push xchg adc rcr sub lea mov or pop adc cmpsl mov or and or lock sbb out out add sbbb sbb enter adc cmp in sbbb add adc fs and fcomps cmp popa or inc dec mov mov adc loopne into inc inc popf test push adc dec mov push lcall loope or or push mov sbbb mov subl fisubl fildll dec call sub aaa inc push xchg and push cmp adc cmpsb add add sub sub jp popf pop inc test jmp nop mov sbb mov pop xchg mov and call and test or push push es mov sub mov outsb shll scas and push (bad) outsb mov inc push imul lods addr16 mov loop push or or jge cld jmp ret fwait xlat mov adc adc xor inc lods push push int sbb and out or int3 fs dec jo push ss shrb cld gs es pop and push add dec les push xchg pop add add pop jl or push add pop add push inc xor and mov or inc cmp aam adc inc test pop cltd jo add leave das push dec add add jae mov and add mov test push pop rolb cmp subb pop adc add shrb xchg sbb and add or mov pushf mov xchg in push sub aaa fmuls mov mov adc mov mov cmpsl mov ret adc stos rol adc jb lds xor movsb out mov nop les cmp xchg push enter pop mov sub or mov daa or push inc add push xchg inc inc sbb nop push xchg rorb mov xchg mov pop add stos pop push call xor adc push loope inc xchg pop add inc sub fcoml mov mov add pop xchg mov aad lcall pop inc cwtl in cmpsb in int mov sbb movl mov jl movsl push and xchg movsb movlps add mov push xchg mov or add adc add and or adc ficoml leave push inc xchg ret mov or pop add jo add inc sbb cwtl inc add add push mov inc add inc sub mov and sbbb xor jae pushf sbb (bad) stc inc inc adc mov push dec mov xchg and sbb sbb xchg daa cwtl push add push sbb nop sbb mov lret movl sbb cmovno movsb jp or and shr popl test lock sub fs test daa pop sbb xor fadds inc jmp pop bound inc xor dec or cmp bound lcall ret cmpl rolb call push add xchg jmp int dec je stos cmp and push call ret lret (bad) add pusha xchg cmp or or cltd fsubs push ret (bad) flds nop insb mov pop xchg in roll ret mov cmp (bad) mov adc pusha add jns cltd or dec and mov push dec je mov cmp inc cmp rclb inc js push adc rorb dec shlb xor in dec or ret add nop push and loopne add sarl fsubrs js and icebp lods adcb add push inc xor and sbb inc outsb and push fs pop add inc add pop rorl popf pop or sbb test test pushf loopne stc or test sub and push aad cmpb add outsb add and inc jle andb hlt or inc mov mov (bad) sub adc call (bad) dec xor (bad) aam (bad) fwait add and enter push adc ret sbb jle lea sbb dec mov push and cmp add push enter sub dec stos jle xor push xchg or imul iret fs jb add fcmovnu push out mov cmp into sbb movsl in add push pop mov mov xor adc dec dec repnz mov inc mov outsb int3 lock cmpsb lods lods popa inc bound rolb inc daa fdivrs jle dec es xor sub push jp int3 bound loopne (bad) add pop cmpsb test mov ret cmp pop jb pop dec add test lret loopne daa or xchg (bad) dec sbb or rcrb pop dec int3 push fs xchg cmp insb jecxz pusha inc dec dec mov aam test mov lds pushf movsl cmpsb jb mov daa orb sub push push out lea cmp jae adc enter sbb ret mov sbb pusha in sub imul lret push mov and es cmp pop mov jne lret fistl xor xchg jno enter imul out jae or outsb pushf mov xor dec and fdivl and (bad) and xchg cmpsb lock cli inc push jbe (bad) pop push adc mov aad or stos mov mov cmpsl or push adc cmpsb or add xchg adc sub inc prefetcht2 roll leave ds xor push (bad) bnd mov in and push (bad) sub ret xor rolb adc push cmpsb and adc mov lock cmp mov dec bound and cmp fwait repnz inc in xchg movsb pop (bad) add pop sar mov in rorb cmovg and lods inc imul es mov push xorl push mov xchg adc fistl insl inc (bad) (bad) arpl jmp jb (bad) dec addr16 mov daa cmp inc lods adc arpl xor aam sbb fs call test test (bad) mov gs inc xchg add xchg mov jecxz adc dec mov ret mov cwtl or mov mov movsb int3 lods int3 or mov push mov movntps inc outsb xchg (bad) lahf fs loope pusha mov subl in dec rol mov test dec es dec cmp lret lret pop add je xor ret (bad) xchg inc xchg sub aam xchg push ss xchg cmc cmp sbb fwait lds pop jae adc mov nop cmp je add inc xor cmp and mov mov jne or cli sub cld xchg add push dec ret mov pop pusha cmp sbb pop add sarb xchg mov mov fisubrl push ljmp or adc aad mov ficoml adc shll inc cmp insl or xor dec cmpsb lea adc out adc inc push sub jne lods sub popf or notl sub jnp sbb mov xor sub mov pop and addr16 sbb cmp push and xchg lea rcll cs fisubrl lret gs seto mov (bad) adc outsl xchg aad sub sbb (bad) lock jns xchg dec jbe and pop pop lea leave or in vrcpps test pop cmpsb mov mov (bad) out add scas aam or cld or fisttpll pop jl push mov loopne loopne jne xchg push into and cmp (bad) (bad) in adc or mov test insl and push loopne or inc inc mov mov jecxz sbb rclb push and pop xor adc add sarl add sub insl push sbb (bad) enter sub fstps outsb loope cltd loopne mov rolb add mov cmp xor sub and lods mov sbb stos mov cmp and and lcall and and sbb cmp aaa sbb cwtl lcall loope inc mov test inc leave test das cvtpi2ps sub or int3 in sub or jmp pop or lods lret push es in test dec cltd in lds mov test fs xchg push pop aam push bound inc bound mov dec or dec pop inc sarl (bad) mov mov push push or int3 in insb insl push sub into (bad) sub push adc xchg loopne rorl and adc xlat pop data16 jbe icebp and ja inc adc inc push rcll pop push rorl or pop push cltd popa mov test mov xchg call jo in loopne mov in mov pop adc inc les popf and add ljmp sub out sub lret jno and ret jnp mov test loopne push mov repnz imul es xchg dec dec sub lods lods dec xchg xchg cmpsb push testw and add mov xchg ret dec xor les sub repnz mov nop and xor or xchg in and mov inc test push push pop fisttpll pop sbb enter shr mov push cwtl mov xchg (bad) push mov mov and xchg enter sbb fstp fistl push adc (bad) rorb jo stos fadds push push jno jb xor ja push jb inc jo jns dec dec adc push push js adc mov fisub stos mov leave sub fisttp rclb or mov in data16 daa and rol test fnop fsubl fwait icebp and mov (bad) stc adc and (bad) (bad) lcall data16 xor je outsb dec dec bound push dec xor inc push ja insl cmp inc je inc dec push dec inc imul xor popa push and mov and pop inc inc push inc inc js push xor addr16 fs imul dec jo jp push insl insl xor dec insb dec dec imul xchg fnsave (bad) dec inc and cmp inc xchg ret pushf dec xchg jo mov push mov stos call adc or (bad) clc cwtl rolb les (bad) (bad) (bad) (bad) jmp je mov (bad) out push xor jg (bad) daa adc (bad) and aas (bad) stc xchg sbb xor jmp pop inc xor daa je (bad) cld dec cs mov (bad) and sbb dec pop adc icebp sub fldenv inc int nop xchg jno movsl jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std cmp popf fldl add out inc or and (bad) (bad) or push or push adc cmp mov jp jb or add mov mov ret jnp or jnp stos mov mov push mov push (bad) bound sbb or loope xor xchg movsl imul adc lds (bad) dec shll roll xchg jp dec ret and ret lcall push arpl cmp dec adc adc sub pop inc jb mov sub cmp ret sbb mov cmp sub pop xor (bad) push or bound lret mov jns jp mov or leave mov adc sbb and je test push es add push xchg insb mov call lret sub stos test out dec imul mov sub fmull xchg lods in push sub addr16 xchg xchg mov nop push dec ljmp enter enter das ss outsl dec enter mov lcall stos es cwtl and xchg mov cmp sub push movsl lods lea adc bound cmpsb pop lcall cmp sbb or inc xor sub cs inc and jb dec lret sub loop js xchg inc dec imul adc push dec ja test sbb sub test mov popf imul cmp insb cmpsl sbb test mov sbb ficompl call xor jbe xchg or sahf test repz adc ficompl rcr cltd adc push push pop rcrl pop mov push xchg fs mov xor repz mov mov int3 (bad) addr16 jbe jbe jb sarl mov mov mov inc push push (bad) or out inc dec das fs cld int into jmp xchg or (bad) xchg and jae push je pop cmp inc ljmp call rcrl mov push pushf mov jb xchg cmp fisttp pop xor gs dec inc cmp or or xor sub test inc pop sbb xchg or bound jae stos cmp lret mov dec pop ret andl gs sub enter sub sub inc adc adc inc hlt cmpsb push adc xchg pop inc jae aam ret add jbe movsb ss cmp out dec fs fs push jb ss imul xor das dec jbe ss in push imul mov cmpsl adc es sbb and es sbb or rol push inc imul inc push push je mov and mov dec sbb inc push repnz push xchg sahf pushf lods push test sahf mov and push cwtl mov mov xchg cmp pop addr16 and sub mov cmp cwtl sbb movsb mov cmpsl and movsl cmp lcall sub (bad) rcl and cltd xchg movsl gs addr16 jne push jns popf aad fcmovbe pushw pop jae adc cmp mov popa mov leave mov dec xchg xor mov jp xor adc rcll imul test sub cwtl bound mov lret xchg jb pop jb cwtl movsb rolb movsb int3 test mov sbbl jo insl outsl cmp inc dec dec cmp push push pop cmp inc jp insl outsl pop adc (bad) jb jp or or shll xchg cmp push rorl adc (bad) rclb push fimull mov ret adc sbb lret or cmp or fstl (bad) sahf inc inc inc push cltd lcall lcall push adc push cltd cltd push sbb and pop adc push push fwait pop (bad) or int3 popf fcom sbb icebp sub lds bound mov ss and inc dec jb dec push jp dec es bound mov mov mov mov xor mov xor xchg pop int3 mov movsb rclb mov push rcr fistpl dec sub out push cmp fwait and and push mov loop inc adc js push or outsb test jo mov xchg out pop xor pop mov loop test jo ljmp imul outsl dec imul lcall adc sbb adc mov vmovapd or call mov rorb xchg xchg mov mov xor or sbb pop push shrb stos adcl inc xchg and fistpl pop push jno cwtl dec rolb adc xchg loop data16 inc xor pop dec int3 rclb mov mov or das dec out push lret cmp xor lret sbb adc aaa cld dec ljmp dec or inc data16 popf rolb stc xchg pop fcmovnbe push fidivl cmpsl jl lods inc mov icebp pop movsb mov es sub les psubb cmpsb or fist adc les arpl andl mov imul lods cmpsl mov movsb sbb pop movsl sub mov cmpsb (bad) inc inc xlat movsb fistp loope xchg adc enter (bad) or loop inc adc xchg pop mov stos stos sbb sbb sbb push xchg cltd and data16 jb xchg inc jb mov ss daa cmpsl push arpl mov xor dec dec dec mov dec dec and xor lcall lea jmp les adc and je xchg test fbstp (bad) cmp mov stos sbb imul or adc ror into nop rcl mov cltd lea pushf loope or push cmp (bad) cmc clc xchg sbb xor or xlat adc inc ja lds inc inc push cmpsl pop nop cmpsb sahf insb xchg fmuls cwtl xchg aam push inc dec call mov inc out inc pop je jmp dec jns sub mov mov (bad) hlt cmpsl jae xor (bad) stc sbb sbb ficoml push aam rcl push popf loop dec adc es sbb and sbb pushf xor lret xchg movaps and out dec shll mov fwait (bad) xor mov inc lea dec sub mov and jns xor cld dec xchg xchg aad call adc jo mov inc or mov dec push fmull fnop xchg nop mov and push bound adc bound mov and dec or mov and dec adc sub xor (bad) aam adc adc mov and or sub jg (bad) (bad) and xor xchg add hlt cmpsl jae gs gs (bad) mull adc gs inc hlt out inc mov adc ret test cmpsb repz push je adc arpl push movsl jne mov test adc xchg data16 fs jne inc cmc adc divb jae adc xchg addr16 cmc cmpsb xor adc je adc addr16 je movl fs testb fs xor je lds test ja in inc push add repz add adc test roll in cmpsb cmpsb hlt and je adc (bad) mov adc cmpsb repz push xor adc mov jae xor bound adc jbe push mov mov push xchg add out push movsl add adcl inc jae in data16 hlt push push xchg inc cmc ja add adc addr16 push movsb inc daa je push jae adc xchg mov adc push mov mov push inc adc xchg inc (bad) aam inc add xchg adc jbe ja mov adc and adc notl inc adc xchg out hlt adc testb repnz jb repz aam es inc test addr16 repnz mov adc xor es inc not test aad not adc aad testb fs (bad) repnz adc aam (bad) jne out and xor xchg push je xchg test jae hlt lds push ret xor les xor xchg add les xchg and addr16 (bad) notl aam adc test daa jne add arpl repz and adc xchg add inc divl jae xor adc inc test push adc adc movl fs lds xchg test xchg add xchg xchg push xchg xchg xchg lds jne xchg addr16 push in divb fs push xchg testb je push xchg je test push arpl not test inc divl jae xchg push adc xor xchg push xchg push addl xchg fs adc inc push push je xchg test inc push loop xor and in xchg add push xchg adc es test jae adc xchg (bad) repnz mov mov adc add push es inc adc adc data16 xchg je and xor and adc xchg jne ja push inc jne repz push je adc les inc xchg and mov xchg push xchg xchg push inc push xchg jae je push cmpsb aad adc add divl adc fs xor push andl adc xor testl cmc and adc adc xchg xchg jae mov push push push test jbe push cmpsb notb xchg les inc je add mov xchg xor les ja and adc xor mov xchg add push xchg push xchg push xchg test adc jb jne push push and inc pop xchg in push cmpsb notb repnz inc inc xor inc adc adc adc xchg push movsl fs inc jecxz xchg repz and adc adc bound fs adc gs cmc cmpsb xchg xchg adc xchg inc jecxz xchg add inc divl xchg inc test jne push je push je xchg test inc adc adc adc xchg pushw xor adc xor data16 inc push push lds fs xchg test xchg test push hlt adc adc xchg inc arpl inc and adc adc bound aam xchg xor xchg in push test xchg add test adc adc test xor je lds and testb xor and mul xchg push adc (bad) xor mov adc adc add xchg arpl xchg push je es xchg arpl bound je inc test arpl xchg adc fs repz adc xchg add movsb xchg test inc daa (bad) repnz je inc adc addl xor push roll (bad) jne and and jecxz xchg out xor xchg inc ja es add push push xchg add adc arpl push jne xor ja es adc xor movsb (bad) mull cmc jne in push ss inc xchg and adc je xchg je adc xchg hlt xchg addr16 repnz movsb push movsb push je inc push inc jae xor adc adc cmpsb xchg test push xchg add add xor push lds fs xchg adc inc xor mov je les jbe adc gs adc jae cmc push je adc (bad) xor adc adc inc repz adc xchg inc aam push xchg cmpsb xchg xchg adc adc xor xchg je ja push divb add scas xor mov xor sub cwtl mov sub mov test fwait sub and stos adc sbb mov and mov mov lods sub aad cltd xchg into dec xchg cwtl pop aam or push sahf pop push cwtl fcomp int inc in out gs xor adc push adc sbb adc into push sahf push push xchg sbb aam dec nop push push aad rcrl adc push xchg lcall adc test outsb into pusha (bad) inc test test in mov sbb sub push push pop rclb rcrb into sbb push mov pushf push popf enter xlat scas sub and lcall ss mov mov push jne inc int3 mov aad or enter mov fistl jae jno inc imul dec cmp aad inc out hlt sbb mov dec xchg push and call mov xlat andl test mov les fs (bad) cmc and xor adc aam (bad) jne out and fldl pop inc push dec push insb gs sub dec dec dec push inc dec jae push insb adc and mov and arpl push push adc push adc rcrl movsb fs inc inc rcrb or pop push into adc adc mov cltd xor es jne xchg movsb sub add and push sub mov xor lods sbb imul push cmp cltd xchg add loop inc xor mov adc xchg ret xchg push xor movl dec dec inc push addr16 fs adc call sahf es ret inc push xchg jae je push cmpsb aad adc push divl sub push and cmp sub mov int test sub sub or int dec shrb inc and xchg and lds and out inc ss dec les shrl mov pushf fxch enter pop inc xchg in push xor xchg and adc pushf lcall cmpsl lcall bound lods and push mov rclb sub (bad) call dec int3 fiadd test sub aaa mov repz nop lcall jb xchg loope sub xchg int3 jo fs mov mov rorb (bad) mov pop into and aaa cmp dec rcrb push mov push sbb push inc mov mov cmp stos bound jb xor xchg mov mov dec adc adc das addr16 and andl xor xor popa adc imul mov out inc dec js push jno movsb cltd inc aad popa lea sub out nop rcr xchg mov mov mov push es je xchg jb mov sub inc movsb push movsb sbb enter and stos and sub inc imul or lret js push loop dec les mov push js roll fbstp or stos xor adc mov call rorl sbb bound les adc push pop addr16 push gs lods sub fwait sbb out (bad) lcall movsb sbb lcall xchg xchg sbb and ljmp pop xor push int3 jb insb mov test andl push shl popa rorb xchg dec ficom adc inc insb scas cld lret dec (bad) lcall adc push and arpl mov and jae movsb mov xor lods sub pushf and cmp enter enter xchg and lcall cmp mov adc mov in es mov or mov int3 mov hlt (bad) rorl bound adc push cmp and mov or sarb rorb clc (bad) sbb mov lds movsl dec lret andl inc mov sbb popf shl jo push push adc aas clc cltd cltd bound adc push inc pop insb dec adc nop lcall incb and scas movsb mov push or push clc mov bound repnz push dec les xchg test mov cwtl test mov mov jb test and mov dec sbb xor xor mov adc push xor lcall xor je stc adc int aad int les adc inc or imul dec cmp jns insl dec sub dec das jno xor imul xor push dec imul ss xor sub gs cmp push dec das inc push push xor das das das das xor inc inc dec je inc dec je ss pop dec fs gs pop push inc dec push push ja xor push imul jb pop insb cmp xor dec je cmp dec ss dec imul dec xor jp push xor cmp ja inc dec push gs dec fs jns push imul je inc inc dec dec xor inc dec push xor inc je xor gs das cmp imul jno fs jns push imul dec jo jbe insb imul push jp dec je inc dec je das dec je sub cmp dec jbe pop arpl dec push sub inc inc ss addr16 inc inc push push xor inc ja push dec aaa inc inc push push xor cmp inc das inc pop jp xor imul outsl cmp inc inc dec dec cmp inc push pop addr16 dec js je push xor inc pop push inc push push inc dec arpl cmp xor je pop push push ja inc dec pop push xor push inc xor inc inc inc ja insb pop fs xor je pop inc push xor dec dec inc jbe arpl jb dec dec insb sub dec push pushw insb jbe ja bound dec push jp push push inc dec dec pop inc inc push push inc das xor inc fs inc push inc dec push xor xor push push cmp dec dec inc inc inc push das push das cmp ja push dec imul inc ss outsl popa dec push inc inc push cmp dec dec inc inc dec jbe push sub das das das das push insl push inc push jbe push inc dec inc inc inc dec pop inc fs jb fs push dec das cmp push inc push dec imul aaa inc popa addr16 outsl imul outsb inc push jbe xor inc inc dec jae arpl inc inc push das push push popa inc outsl xor inc inc addr16 push fs fs das jp jae inc inc inc das cmp xor inc fs imul inc jb insl push inc das js xor inc inc imul push push dec push sub das sub dec push popa popa dec imul js dec addr16 inc inc push jbe xor push xor inc dec inc imul push das inc push jns push push inc inc inc inc inc push das jp jae inc inc inc das js ja imul das inc inc cmp bound jp ja xor ss jbe das das cmp das inc push das jp jae inc inc inc das js outsl imul cmp ja inc outsl xor inc inc addr16 push fs pop push das jp xor xor ss dec das das das cmp cmp inc push push push push inc das outsl push jp push push inc inc sub xor das inc push push inc push push inc inc inc push jp push push inc das ss xor inc inc jno inc push jne inc inc ss ja inc inc inc outsl popa dec push inc inc push cmp dec dec inc inc dec insb inc xor dec fs pop dec push push push inc jp xor pushw ja push jbe inc push sub das sub dec push insl popa inc imul gs dec dec push jns push push inc das xor inc inc inc push inc das xor das cmp push inc inc dec data16 inc inc push inc inc inc js pop dec inc push inc inc push aaa push inc imul push pop dec dec inc inc inc outsl dec ss pop jb inc inc pop xor inc dec je inc dec insb inc bound inc fs imul dec insb inc bound xor push inc push arpl push aaa das das das das outsl inc addr16 inc inc dec addr16 inc inc inc inc ja outsl dec ss push jno inc inc pop ja pop pop das js dec addr16 inc inc das jp outsl xor inc inc imul aaa das das das das push imul push dec popa inc push inc inc inc inc jno gs inc imul insb pop fs jo das jp outsl xor inc inc das jp xor push inc ss push das das cmp cmp ja push pop popa addr16 push ss das sub das cmp data16 dec dec inc inc dec dec dec inc push sub jne dec push jne imul inc push push push xor cmp dec inc inc inc inc sub aaa inc push jne inc das das das das imul push dec popa push push inc inc inc insl dec js aaa inc popa addr16 inc inc dec addr16 ja inc imul pop push push inc inc dec push imul push dec addr16 inc ja inc push pop je dec dec pop inc fs fs ss jae inc inc inc pop imul inc xor inc outsl das push outsl inc inc inc insl dec push push inc ja push dec push dec push inc addr16 inc push pop je push dec pop inc fs fs ss inc dec inc inc inc pop imul inc xor inc outsl xor inc inc inc insl dec push insb ja imul dec pop ret xchg mov mov adc xchg mov cmp xor mov and mov sbb sbb fwait pushf sub stos aas and stos cwtl mov xchg xchg lcall and and sub and sbb sub sub mov sub xor mov sbb lea push dec mov fimul sbb xchg rcrl adc push sbb loopne cwtl xchg call lods adc sbb xor lcall or mov cmp cmpsb jno sub xor dec push rcll sub or call push sub es dec insl inc sub test sub jmp dec or inc sub mov imul outsl cmp inc inc dec dec cmp inc push pop addr16 js je push xor inc pop push inc push push adc and ret stos ret cmp andl mov push mov inc mov sub mov subl sbb mov or mov mov sbb jae pop or xor ret arpl xchg ficomp inc dec inc das xor inc fs inc push dec push xor xor push push cmp dec dec xor cmpl inc mov mov inc mov sarl dec xchg adc nop test out mov mov (bad) cmp int3 dec into shll and das loop inc mov xchg mov imul daa xchg int3 lds mov push mov mov and addr16 ja xor xchg push imul out or or jp lret jb push mov sbbl ret mov stos out jbe xor mov xchg adc ja sub roll (bad) pop cld dec int push cltd pop int and dec insb mov adc sahf es cmp push inc insb jmp mov adcl push jnp pop or test clc fwait adc pop dec movsl and xor mov mov xchg xchg mov das sub sbb mov imul fwait mov out (bad) fs xchg movsb leave adc ficoml bound les xchg pop mov xchg mov mov xchg test or (bad) xor inc mov cmpl into mov mov pop jno sub xchg pop clc popf cltd mov sahf ret xchg or inc bound mov and sub xchg dec and inc push icebp sub fwait xchg cmp aad sub mov ljmp dec xor xor ret fs sub push jg rorl mov test incb div sbb dec addr16 cltd pop rcrl xor leave test ds cmpsl xchg insb lea insb clc xchg xchg js push icebp sub jmp sub sub xor fcmovnbe lea test das adc and jg adc mov pop icebp sbb inc sahf hlt and xchg sarb and sub mov fmulp mov xchg mov sbb scas adc lcall cld dec (bad) mov sub and adc mov out lods sub sub es lret nop pushf mov inc pop outsl jp jp lcall movsl push and mov push test mov inc movsb mov jl dec inc inc push popf mov in cld inc out dec mov sub lret cld (bad) out das maxps jb adc pop icebp and decl adc dec or cld dec push and mov popa (bad) test sbb es xchg aad mov xchg mov xor fstl inc insl dec fcoms enter insl mov dec dec push inc dec loop inc adc cltd in fldenv pusha (bad) lret outsl inc sub push outsl pop push (bad) (bad) (bad) call mov loop jo xchg adc dec int and enter xchg adc and cltd cmp nop lds xchg dec int3 in ja push (bad) enter xrelease je and dec icebp xor lock xlat das xor (bad) sbb push (bad) dec push out les jmp in mov xchg and push dec icebp xor les fimul lret xchg fpatan and mov and lea ja lcall loop inc (bad) aam clc nop rolb mov cmpsl enter cltd mov mov push dec int3 jl jmp lods mov inc ljmp and xchg adc adc adc sub add add push add sbb fstl mov add push test sbb adc gs xchg dec int fldenv imul fldl add and or lds mov xchg fucomp lods lds cmp movsl fadd inc mov inc add fstpl fstl popf call adc test inc adc add popa inc xor loope sbb sbb add mov inc in inc inc adc mov pop mov pop sbb test adc mov rcll lods and fldenv pop popa xor sbb and mov popf inc fsub int loope call inc add xchg or mov add inc add imul popf adc dec add cmp adc rcll add cmp add mov xor rcll cmp roll and sub gs dec add or adc adc pop mov lods inc add xor lods sub push mov dec add cwtl mov movsb mov add cltd xchg dec shrl inc aad and rol aad and add inc aad and mov mov mov mov cmp in inc inc or sbb cmp mov lods mov or adc mov cltd call mov add dec add sub gs jmp or fldl lds cwtl mov adc inc and int xor adc cmp add popf or add add mov adc add int lods adc mov xor test test mov fmul mov lds fdivrs fadd mov rcr fstpl mov add cmp add inc xor aad mov fldl pop cmp add sbb pop aad roll popf lds inc add roll adc mov sub adc xor fisttpll mov add or (bad) sub add pop pop fstps add xor pop inc movsl pop popa mov movsb shll shll fdivrs lods and sbb sbb add xor or add pop in popa mov xor pop lds loope xor jmp xor jmp int sbb popf pop pop test (bad) fstpl lds or fldl sbb add or add and mov cmp test mov mov test fwait mov test mov cwtl sub sbb cmp mov sbb mov ss fldl adc and xchg cmpsb mov and in adc inc es jae push xor cltd fidiv mov mov xor sub mov scas mov cwtl pop xchg test rolb and xchg test adc repnz lds ret adc adc add push or jns mov lcall nop push sbb nop ret nop mov lock mov lock aaa jb mov adc sub jnp mov sbb shll or mov rcr pop enter push cwtl (bad) hlt out lcall ljmp and mov inc pop push inc mov xor rcll cmp enter nop mov hlt nop xchg int3 xchg dec insb cmp bound jp outsl nop fnstenv sub push mov mov pop int3 pop pop (bad) fdivs lret int3 lret xchg fisub push nop xchg les push inc add ret sbb movsl daa xchg mov sbb dec fcompl sahf in ret push and adc ljmp mov pop data16 addr16 nop mov bound and fwait dec push xchg test in (bad) es push das enterw mov aaa mov mov inc dec push or sarl ss fcomps addr16 cltd pushf loope xor jecxz and mov mov cwtl cmp pop movsb cmp stos cmp ja lcall jl call xor jmp movsb mov jae push lds xlat xchg je push pop mov pop movsl pop (bad) sub add pop pop fstps xor loope inc adc movsb dec push sbb mov xor inc push push and and lret xor arpl into aas int3 hlt xchg mov mov mov cwtl (bad) out inc out inc adc sub test lods inc fstpl sub adc dec push push (bad) dec mov test cmp (bad) jo cmc and sbb popf adc fimull adc sbb pop lret int3 lret dec xor lret pop ficoml xchg xchg fsubrs push daa inc cmpsl inc (bad) xchg push cmp dec sbb imul leave out out inc inc adc sub adc sub push leave or int3 jmp inc or push lea test push loop adc and lds divb (bad) cmpsb xor ss mov inc (bad) and test leave test lret adc add out xchg ds cmc jbe shll aaa mov mov lds daa stc xchg xchg pop adc jg fs xor jb inc push xchg (bad) xor cltd pop loop push cld dec cmpsb rcll xchg icebp sub mov mov scas lods es xor fs arpl xchg xor test sbb fidivrl mov (bad) int3 jmp (bad) sub imul bound and imul outsl imul jb inc push inc pop xor or mov loop insb movsb xor mov cmpsl xor and or ss ja adc xchg adc or sub mov or inc and add loop arpl sub daa stos sub dec push rcr pop xchg nop dec ret fiadd enter pop sub sub movsl ljmp sub push adc xchg sbb sbb or adc sub lret movsl out or or insb into ljmp imul pop aaa and lcall jno sub or adc dec cbtw popf sbb jns cld dec mov xchg sbb jns nop in adc or (bad) adc out mov mov es repnz outsl adc pop mov dec mov push xchg inc in aas loop jo sbb jb pushf and or scas xchg test bound mov xor push pop adc jp xor inc lret outsl mov mov xor mov push into inc addr16 adc and call adc push push push nop mov sbb enter dec inc mov rorb add (bad) ljmp icebp and aaa xor test lock push shr pushf add xchg cmpsb and cmp in inc jbe imul inc push pop pop xor xor inc push inc inc jbe inc inc inc inc inc dec inc inc inc dec inc push inc dec fs insb xor xor jb push imul das das addr16 inc push inc inc outsl popa inc jno push inc jp pop insl inc insl inc push inc inc inc dec pop push push inc push push cmp inc push cmp dec dec inc inc dec pop inc jbe inc inc inc inc inc push push inc inc jp dec imul inc inc inc dec cmp dec jo imul pop inc ja inc dec dec push jb push xor bound aaa pop inc dec cmp inc imul insb inc xor ja inc popa imul inc inc inc inc js js imul xor inc outsl inc das xor push push pop das xor push inc gs push inc inc push popa addr16 jno dec push dec push inc inc dec cmp xor push push pop inc addr16 inc push xor push push pop inc ja inc push inc data16 fs ss inc dec inc inc inc inc js push push das xor push push pop inc push inc inc push xor push push pop inc ja inc push inc addr16 inc addr16 inc das xor push sub inc inc inc inc cmp dec cmp je js insl push bound pop push dec addr16 ja dec push inc dec push push pop inc addr16 inc ss xor dec xor inc dec inc push ja insl inc inc inc inc dec imul inc inc jb dec popa inc inc push inc inc push inc jbe arpl jb pop xor push inc inc inc dec fs addr16 das das das das cmp push insb inc addr16 je addr16 xor push inc inc xor popa dec dec push aaa inc pop arpl inc ja dec push inc dec xor inc dec dec jae addr16 outsl pop fs inc push inc xor dec dec jb addr16 outsl imul inc inc inc inc aaa jp dec inc imul inc pop jp dec push sub dec push inc inc arpl inc inc inc inc jns dec jno inc imul inc pop xor das jbe das das xor xor push push insb push push inc inc push xor dec pop dec das bound xor je popa dec pop xor jno dec addr16 cmp das push pop jbe ss xor popa xor push insl inc pop data16 imul pop imul outsl xor inc popa inc cmp popa push jbe push push dec dec inc inc dec pop inc fs sub imul inc xor bound das jp das xor popa dec push inc inc dec insb dec popa dec jae popa dec push inc inc dec insb xor push inc inc push push inc dec push data16 das das das das ss push inc inc inc inc jb outsl je xor dec imul inc pop ja push dec aaa dec push jae inc dec jp xor push inc outsl pop dec push das xor sub outsl imul inc inc dec push gs push dec arpl push inc inc push inc inc inc push cmp dec inc inc inc inc push inc imul inc ja gs addr16 aaa cmp dec inc pop push inc inc inc inc inc das js dec addr16 inc inc cmp das jbe xor je cmp inc inc dec arpl dec dec inc inc inc inc inc inc inc inc jb inc push dec imul inc ja pop jbe push cmp push pop jbe sub outsl popa inc jno push inc jp pop insb inc das inc dec dec pop push js imul push das imul jbe imul dec ja push das push das das dec cmp ja inc inc dec insb xor bound xor xor push inc inc inc inc das xor cmp push inc inc inc inc inc jns xor das ss xor inc sub addr16 inc inc dec dec das data16 inc sub addr16 inc inc inc sub js inc das inc push jns push push inc inc ja sub inc inc inc inc dec xor inc inc pop das js push imul arpl push inc inc outsl inc push inc inc inc dec xor pop push ss outsl ja inc inc jp imul inc ja push imul ja push push inc inc inc data16 inc xor push inc inc inc inc push pop jbe addr16 jns sub addr16 inc inc inc sub push jbe push je outsb jo addr16 inc inc inc addr16 inc push inc inc push dec arpl inc outsl outsl jp inc inc dec je xor inc jbe dec dec insb xor xor dec push inc inc dec insb xor imul dec inc xor sub push sub ja jae imul inc jae inc inc inc inc inc push aaa dec push sub push addr16 dec dec das push cmp pop inc addr16 xor fs dec fs das push gs inc js imul pop imul dec js insb aaa inc dec fs inc inc inc inc inc inc inc outsl addr16 jbe das xor imul push push insb xor insl popa dec dec push inc insl imul fs dec cmp push sub das das bound das das sub inc dec fs inc inc aaa ja bound push imul jbe inc inc xor xor das das das push dec gs xor inc inc inc inc inc inc push xor mov and sub sbb test mov and mov xor sub sbb cmp test xchg mov mov aaa mov cmp sub mov mov sub cltd and sbb sub and rcrb dec imul inc inc dec cmp dec jo imul pop inc ja dec dec push jb push xor bound lret inc lcall sbb or dec leavew mov mov daa daa and mov mov jmp int3 test or xor jb adc adc lods bound mov or cmp test mov xchg mov mov inc lods xor dec rol loope mov mov add adc dec dec cmp mov lret adc cmp es rcrl and adc or sub movsb cmp sub and lods mov jmp xchg les xchg inc bound and or dec pop push push push or inc out lahf push xor inc dec dec jae addr16 outsl pop fs inc rcrb cltd rcr (bad) push xchg nop dec push push push push push dec fimul movsl xchg test dec sub into sub add inc pop xor jbe das das xor xor push push insb dec inc inc push xor dec pop dec das bound inc xor xor pop xor jno cmp out out mov jp inc (bad) or mov jnp ret jnp mov stos sub and xor jb or mov mov rcrl hlt out repz mull xchg or (bad) dec insb xor push inc inc xor inc xchg xor pop and jnp mov jae push lods scas cwtl outsb xchg mov hlt bound fidiv mov mov xchg test push adc push push xchg cwtl jl enter test or es mov dec into in scas or mov or cmovp mov adc insb jb mov mov call icebp sub in sub lret cs insb in in decl inc dec dec pop push js xchg pop lods mov into hlt jb in push movsb sbb cmp dec mov (bad) out movsb sbb xor enter movsl adc and dec dec add mov and dec in icebp adc sbb jns insb mov sub bound and pop adc inc test adc jns sbb rcll push cltd pop aam cwtl fstp aam sbb gs adc push sarl hlt ret daa arpl pop push jb mov arpl adc into mov test dec dec dec and xor imul sub cmp dec jb mov cltd rcll lea (bad) inc dec fs das push gs cmp dec arpl dec js insb aaa std sub mov movsl push xor inc pop mov xor push or inc adc mov mov les xchg lcall mov fs adc addr16 mov mov xor test insb xchg pushf push xchg mov out aam (bad) push test fwait cmp cmpsl sub push pop and sbbl mov xor inc inc push les adc (bad) mov ret xchg xor cmpsl sbb dec dec pop in dec push cmp lret or push shrb dec or mov (bad) mov and adc lods js push xor mov jmp in sub fs cli inc stos jp mov (bad) sub inc mov dec enter rclb pushf push sbb adc dec insb das inc inc dec and jnp and adc mov inc or push mov sub push les inc inc adc adc xor movsl sbb mov scas mov in xchg xor mov ret (bad) imull aaa les outsb das and inc mov (bad) loop inc adc int3 mov inc data16 or aaa mov pushf sarl adc aad pop test push lods scas inc and les mov stos cmp sub mov xchg aad int cwtl rcl sub es xchg mov sahf lcall mov lret adc and mov xor adc cmpsl cld test in cs daa sub dec adc push mov daa movsb adc cmpsb bound icebp xor inc (bad) in ret mov aam jb xchg test sbb stos jnp adc adc js push inc push inc jne (bad) adc xchg mov or push push xor jno lcall lcall test aaa scas mov dec int sub mov pop push jbe push xor enter scas adc mov and adc lcall es jne and jb cltd mov hlt test push push adc and and adc daa sub xchg inc bound sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec ret xchg or lret pop mov sbb cmpsl in pop pop adc jns jns and mov jnp and mov (bad) adc cltd jns mov rorl and cmp jns arpl mov mov jnp jns pop popa ret pop stos stos sub inc stos sarl xor or adc jnp jnp jns mov rcll jnp jno mov jp lret mov mov jae jns jp or sarl inc stos or xor (bad) xor fwait dec rorl or jns push xchg sub pop jns jns mov dec or or xchg mov imul dec lcall push or fwait cmp dec cmp or and adc mov dec sbbl pop sub imul ret push adcl xchg lcall mov inc mov xchg mov jp pop jb or cmp or ret dec push adc dec ret or sbbl rclb xor mov dec xor or mov ret mov mov or or or arpl xor dec dec addl lret and inc or mov push jns mov adc inc (bad) adc pop inc dec sbb cmp and or jns push inc pop push or sbb pop or addl adc or stos ret push ret xor sbb cmp or dec stos stos cmp mov or or test or mov dec (bad) sub mov or or mov stos cmp or and jp mov or pop jae mov xorl cmp sbb push sub and dec (bad) mov sub or lcall or dec ret mov mov or mov xor jns sarl sbb or dec (bad) or dec bound lret and cltd (bad) jp cltd (bad) and or mov leave mov or mov cmp jns stos cmp or mov cmp or dec cltd mov xor mov leave mov or mov cmpl leave mov pop sub cmp lcall mov and or jns sbbl mov or jns stos sbb stos lret leave mov or mov cmpl or or or push cltd ret mov push stos mov and or ret adc shrb (bad) jns jno or mov cmp jnp or mov jp ret and jb or and or and jnp sbb leave mov jns shll xor jnp mov xor sbb mov mov sbb xor mov adc xchg sarl xchg push jnp xor test add adc dec bound pop xor jnp sbbl jnp jns jns mov jae mov and sbb and mov xchg xchg xchg mov xor xchg mov sub mov mov sbb cmp fwait mov xor cmp and adc xor loope sbb push imul cltd mov add lds rcr mov lds fldenv pop fstps or xchg cmpsl cmpsb test data16 cmpsb cmpsb movsl push cmpsl ss mov sbb mov movsl adc and xor push push push push push sbb aad rorl pop aad dec imul dec sub jmp insb jmp xchg or push push popf int3 push rorl xchg rcr int loop dec push push bound xor xor push xor js push push das push xor dec dec inc inc inc addr16 inc push push push das cmp dec dec inc inc dec pop inc fs imul inc adc xor push push nop xchg xchg or ficomp addr16 inc inc insb fs dec xor imul mov inc or mov push inc mov adc insb inc adc and dec lret xor inc pop push push sbb pop or addl adc stos ret push ret xor sbb cmp pop enter stos les (bad) push lods out mov push test adc ret arpl cmpsl rcrl lcall aad sbb lret or or and mov and adc xchg test ja xor mov and fwait and cmp mov or nop roll xor xchg divl xchg arpl add push das adc adcb test cmpsb mov cmp inc push and cmpl sbb mov int inc mov add arpl fwait mov mov push arpl stos iret icebp sbb dec int cwtl pop push pop mov sbb xchg push adc nop nop inc enter stos arpl orl sbb shrb inc sbb push cmp rcrl xchg adc jae popa ret sbb leave mov push shll xor aam mov popa sub test inc cs push add xchg mov je in jo push icebp sbb cwtl loope push and dec imul repz dec push data16 dec imul xor dec push push push push mov inc xchg je jb pushf sub adc movsb icebp sub mov adc leave or fs mov xchg divl mov inc inc xor loop dec adc icebp cmp adc mov out adc and fxam pusha mov adc (bad) rcr xchg xchg push jl or push les and push data16 js dec addr16 mov into ret enter mov jae xor adc mov mov and stos lcall cmp mov cmp sub lods jg and mov cltd stos dec test mov or mov sub xor xor cmpsl sbb adc and (bad) (bad) and push mov test dec out push rcl push cltd or test inc dec dec push imul inc das loop je jnp pop xchg inc xor xchg cmp (bad) jmp xor jnp and movsl cmp adc inc adc xor lcall mov mov cltd fstpt mov sub sbb and lods pusha fmuls sbb jmp mov hlt fs mov nop mov mov into fs pop test xor dec xor cmp adc popf int3 mov test or fwait rol mov mov xchg push shlb pushf mov movsb push inc mov inc aaa xchg lds sub gs into cld mov lods mov aaa das and sbb (bad) adc addr16 push jbe inc jb mov es lea sub fstpl xchg test je adc ja adc sub (bad) in arpl fs bound mov push inc xchg xchg xchg sub mov push popf lret fsts and or mov dec icebp and (bad) hlt into es (bad) dec jb jp or xchg mov in pop pop push into pushf push adc movsb enter test and dec jae (bad) call dec (bad) jb pop and mov and jno fsts cmpsl sub cltd adc movsb outsb sub adc xchg push (bad) daa je xor or rolb ss xchg xchg xchg mov mov test mov pop xchg cwtl mov sbb cmpsb sub test mov mov sub mov sub cwtl sub pop xchg xchg mov and pushf cwtl and and and pushf and mov cwtl stos cmpsb sbb and mov mov cmp sub xor mov and and and sbb mov sbb and cwtl mov mov and mov stos pop mov mov mov cmp sub mov xor xor mov mov sub stos stos and mov and lods xor mov mov lods sub xchg xchg pushf cmp mov cwtl and mov mov and stos daa cmpsb sub test stos xor cmpsl mov mov and pop mov xchg pushf sub sbb sbb sub mov adc sbb mov mov test pushf xor lods and mov mov mov mov mov xchg mov mov cwtl and and mov sub and xchg mov cmp sub mov mov mov test mov sub mov and and cwtl xor mov mov mov cmp fwait and mov cmp sub cmpsl mov and sub fwait test xchg test test sub sbb mov mov cmp mov lcall mov xor mov sub cmpsl mov and pushf sub and sub aaa mov cmp mov xchg lods aaa xchg movsb mov sub and and mov cmpsl sub sub aaa stos mov test mov mov aaa sub mov movsl xor cmpsb mov mov sub and mov mov sub mov mov mov test cmp cmpsb fwait cmp sbb daa movsb movsl and movsb mov cwtl and cltd test mov mov stos stos movsb cwtl sbb mov aaa sub mov fwait test xchg stos stos and cmpsl ss mov test xor lcall xchg mov cmpsb mov mov sub aaa mov and stos lods sub lcall stos mov cmp cmpsl sub xchg xchg cltd xor mov xchg xchg pushf lods sub mov aaa mov mov cmp lods mov sub cmp and mov and mov cmp es mov sbb mov mov xor mov and mov sub and mov sub movsb lods xor sbb cmpsl mov mov xchg mov mov cmpsb pushf and fwait xor mov xor sbb mov mov cmpsb sub mov cmpsb sub mov xor xor and mov cmpsb sub stos cmp test cmpsb sbb test cmpsl pushf mov movsl and adc cmpsl test mov fwait sub and mov xor pushf and sbb mov mov mov ss and mov sbb mov sub mov fwait sbb sbb test mov cmp sub mov test mov mov and mov es mov and ss mov mov mov movsl cmp sub mov test and mov sbb and mov test stos sub movsb xor and cwtl sbb and mov mov sbb sub xchg pushf sbb and mov mov sub pop mov mov mov sub pushf and xor aaa lods pop mov test and sub pop mov mov and cmp sub test and movsl mov xor xor dec and cmp adc lds adc dec or mov adc rolb inc ja insb xor dec inc push das xor inc push pop outsb dec cmp ja push inc ja push dec aaa dec push jae dec je inc inc pop pop popa addr16 inc push push inc dec gs jp pop insb inc sub and or dec adc push push rclb push or or push push (bad) nop push dec push mov enter pop mov (bad) mov in call push ljmp in mov mov imul jmp sub or int or dec dec stos dec mov xor adc ret jb arpl push adc cmpsl xchg adc adc test push push sbb aam push fwait sbb mov or ficomp mov adc lea xchg mov push sbb into push adc push adc nop push pop dec xchg and out inc inc dec movsb sub lcall and jp and fs push inc xor mov nop xchg lea rcrl adc popf rclb test mov fs insb jp adc mov cwtl xor lds mov or in dec pop and int3 stos sahf shrb xchg into jo stos lods ljmp xchg mov fs mov pop push mov xchg test xchg sub mov dec cld enter mov pop dec (bad) sbb mov xchg loopne (bad) mov call stos (bad) nop mov test xor aas mov pop and loope dec mov dec dec cmp aam sbb out xchg add and aaa cmpsl xchg movsb and cltd test repnz loop push dec dec insb pop das inc popa inc inc dec inc fs xor or dec push dec call dec lods fisub rclb xchg or mov ss jb adc aam and cmp popf popf ficompl xchg push sbb push push test inc test es (bad) gs xchg (bad) xchg (bad) rcll adc xchg xchg xchg daa ja inc jne je cmpsl fs aaa push push sub push mov sbb sub inc xchg or xchg call (bad) shrb je jecxz dec push jp and cmp push gs aam movsl inc bound sub rorl aam aam sbb dec mov xor xor dec inc jbe cltd popa and int inc or lret js inc les test addl inc hlt xchg sub dec int inc sub jmp xor cmp add leave or push sbb test stos xchg inc cmpsb mov adc cmpsl mov dec test es shl ss dec or cmp xchg and mov cmpl sarb inc cmp movsl dec repnz lods movl jae xor mov pop xlat dec pop xor xor imul dec push sbb aam xor aam divl push jne arpl and xor jge dec aad push inc or push push data16 sub flds mov daa xor cwtl sahf pop pushf bound push fcmovb adc and dec dec adc mov mov adc int in mov sbb shrl sub sub or adc cltd mov in and insb inc push jmp sub or dec les ss stc adc ret mov pop sbb mov and int3 mov in mov push sub push push jp pop in mov fs inc sub adc mov mov dec inc into popa and dec lods (bad) lea dec das push pop cmpsb es sbb das dec jae and xor add inc in and cmp movsl out or or pop daa xchg xchg xor pushf mov rorb push inc xor jno ret adc jo icebp sbb stc adc xchg int rcll push sbb push aas adc lcall push push bound push dec ss mov push adc sbb lds sarl out mov nop dec and adc mov stos xchg xor dec inc lret sub dec or or inc or sub test and mov es inc inc and push jb mov push adc mov enter pushf es ds add pop les incb mov mov out xor mov aas loop xor movsb xor les mov xchg aas loop dec adc jo adc sahf pushf inc inc hlt inc outsl mov mov dec cwtl lods cwtl in inc mov bound dec cmp dec insb inc outsl das je das das xor ja das dec pop fs insl dec push data16 push pushw das xor cmp dec push das data16 das imul push dec push dec dec pop arpl push inc imul dec cmp xor dec das xor gs cmp push push inc push inc inc dec push push insb gs push push push inc push push inc jp jp xor dec jno insb xor dec data16 pop imul push dec js push inc gs push inc inc push inc inc inc dec jae das js dec addr16 inc inc addr16 push dec js dec inc gs push inc ss push inc dec push xor push sub inc inc inc inc inc jbe fs das das xor ja das dec xor push inc arpl inc inc inc insl dec push ss js push dec inc cmp dec push push inc pop push pop fs dec push push push inc push push inc push push xor js push push sub push push insb dec push imul pop imul push jns outsb xor das dec cmp imul push xor push push cmp dec inc push push push xor xor inc fs aaa das fs push push ss jp das das cmp push ja inc dec je dec inc inc push das js outsl imul cmp push inc jbe fs push aaa ja push inc das js jae imul das inc aaa cmp inc arpl das das jp gs jo dec inc push xor dec pop xor pop inc imul das fs das sub jbe push pop push dec push jbe push dec dec dec inc inc dec insb inc das das das das push push pop pop ss inc push js js das js ja imul cmp insb xor push outsb inc popa insb push outsl arpl inc dec addr16 xor das das dec das sub data16 push pop js das js xor imul xor das jbe das das xor popa imul xor das push push imul ja inc inc inc dec inc inc dec push addr16 push push inc imul push addr16 inc inc inc inc ss inc push inc push inc addr16 das js inc inc inc outsl insb xor dec pop inc dec inc inc inc push inc push dec js inc insl inc outsl insb xor dec pop inc dec inc inc inc ja inc dec inc gs cmp inc inc ja inc dec inc inc inc aaa ja dec dec pop push cmp sub addr16 inc inc dec je xor inc xor das inc inc inc inc imul dec inc inc jne push gs sub addr16 inc inc jbe inc dec dec das jae inc xor inc inc inc inc inc jb xor popa imul xor arpl push outsl je xor xor gs cmp inc dec inc pop dec inc xor inc inc inc inc dec imul inc inc inc jb jae inc inc inc inc inc inc push das inc push inc push dec xor inc dec inc addr16 dec inc inc push inc push dec js inc insl inc outsl dec addr16 inc inc inc push inc push inc cmp imul inc arpl push gs xor push inc inc cmp jae imul inc xor inc dec pop das insw xor push dec inc dec push xor addr16 outsb sub dec inc ss fs jne inc dec push dec push data16 dec dec inc inc dec pop inc fs jns fs dec js dec xor pop push insl dec cmp inc addr16 xor inc cmp inc dec push gs dec inc dec imul dec dec push addr16 outsl outsl inc cmp dec xor inc inc outsl jns arpl inc insb pop push dec imul inc das push addr16 push gs inc xor inc inc insb cmp jns dec cmp cmp dec insl inc addr16 xor xor dec jae addr16 push fs jne sub xor inc dec inc dec inc jb jae inc inc dec inc inc xor push inc popa jbe pop ss dec ja push xor inc cmp push push cmp dec dec inc inc dec jbe addr16 das das fs dec inc das xor push das cmp dec dec inc inc dec pop inc fs push dec push imul addr16 addr16 fs popa inc push addr16 inc ss inc sub xor inc dec inc inc push inc inc dec xor inc inc outsl dec js inc inc inc insb pop push das cmp dec jae addr16 xor push dec arpl jbe das das xor sub push push data16 das das das das dec fs cmp inc das inc push inc inc push push inc jp dec jae dec cmp ja je ss fs das push aaa das das das sub das outsl inc dec inc das das cmp push aaa imul xor inc aaa js jbe arpl dec inc outsl pop inc fs dec das xor inc inc inc jbe arpl pop jae push push aaa imul xor inc aaa js jbe arpl dec inc outsl pop inc fs dec das xor inc inc inc jbe arpl pop jae push imul popa dec push data16 cmp fs fs das fs das xor inc push pop push dec push insb pop push push insb bound push inc inc inc dec push inc inc dec xor inc inc outsl inc xor das xor inc push pop push dec push insb pop push push insb bound push push inc inc dec dec cmp inc dec gs jne data16 arpl jp and adc adc lret fisttpll popf ror rcll adc cltd lcall fwait int3 dec dec push ficoml fimull sbb adc push rcl xchg pop int3 adc pop push adc test adc xchg repz inc push fs adc test in data16 push lds adc mov (bad) jae or mov jp dec jp mov aad pop push push enter sub out insl and ljmp mov inc nop (bad) pop mov inc adc add adc cmp or inc add lea sahf movsb insb cwtl lock ficoml push inc pop push pop fs dec push push mov push pop sahf sbb mov push xchg push or lea stos sub xchg mov jae xor jbe aaa outsl and inc mov stos mov movsb scas and repnz push lcall sbb nop nop xchg enter (bad) nop imul jbe fs push aaa ja push inc adc cwtl aam pop hlt into lret adc and push or into push nop inc shrb popa pop and push mov mov dec dec mov mov sub rcrl adc les (bad) les push outsl arpl and or rcrb lock or push or test mov inc gs jne imul mov inc inc dec push addr16 push mov movsw xchg je xor sbb out aam lock fs xor and push sub sub cmp cwtl mov mov (bad) xchg xor inc addr16 mov sbb or imul and cmp in sub xor and mov mov xchg insb pop push cmp sbb es ror imul push sub dec outsb bound and cmpl xor jmp rorl sub mov fs or mov push xchg sbb mov int3 fisubl push dec inc dec push xor lods and test mov fiadd int3 and pushf int3 mov movl test xor adc mov into sahf xchg movsb into inc hlt adc adc dec lea and addl test mov or lret lret stos popa rol cmpsb mov inc cmp and mov (bad) int sbb data16 mov in mov mov ja push xor inc adc vphaddubq jp adc aad incb movsl push sahf es xor mov (bad) rcr icebp es in or adc adc push jp pop mov xor cltd adc jae xchg (bad) (bad) mov cmc or sub das cmp push aaa adc int js adc mov sbb in mov mov adc daa xchg outsl (bad) cld dec or dec and sub outsl adc jle adc sub xor xor in lahf loop push inc dec gs into mov into stos hlt mov xor push dec int3 movsb xchg (bad) shll mov or pop xor mov inc ss ds dec dec mov push xor sbb push and sbb (bad) or inc gs addr16 aaa mov cmp mov ror lret push movb stos sub push dec sub sub or or loopw push (bad) daa xchg cmp les jno sbb popa fimul jbe das insl xor (bad) and jl in out jae movsl daa xor in xchg es shll pushf jg and push pop mov stos es js adc test cmp mov scas nop fsts cltd xchg inc call xchg push aad fs out inc addr16 and sbb mov lods sbb loop outsl enter andl rcrb mov outsl pop jbe dec sub sub stos sub out xor cmp inc push adc fwait and stos (bad) out lea ret sbb xchg xchg pop test fdivrs jb cmp lods in sub and mov adc int in add push sbb push mov lcall imul sbb inc (bad) mov (bad) daa fs dec test dec insb inc nop int or inc push dec xchg test xchg xchg and les es xorl sbb adc push or dec dec lods jmp leave (bad) and cmp mov inc es jne fwait push xchg sbb cltd or sbb push int3 enter in into pop pop jb insb pushf nop ljmp out (bad) (bad) (bad) xchg push enter mov pop pop jb lock mov pop in pop pop pop push into xchg (bad) (bad) (bad) (bad) shlb (bad) insb mov pop pop pop mov into in xchg in pop pop pop (bad) fmull shlb xchg lods fisub lock aam mov into test bound pop pop push stos xchg ret fdivp call fcompl in jo push mov out ficomp mov enter push mov fs (bad) into scas mov outsb movsb mov test push rorb lock (bad) lcall enter int3 fiadd mov (bad) insb enter (bad) (bad) mov rcrb xchg enter jb stos mov jb xchg mov cmpsb mov test mov jb mov pushf bound push fsubs xchg call mov mov (bad) retw fisubr (bad) ficoml mov fiadd movsb lret movsb int3 hlt push pop pop pop pop insb mov (bad) (bad) xchg data16 xchg lods bound (bad) (bad) xchg mov int3 enter ret pop pushf mov mov (bad) rolb fs int3 enter mov (bad) test (bad) (bad) ficomp (bad) fimull in pop pop pop push in nop mov mov lock (bad) lcall mov pop pop jo pop push fimul pop pop jb out hlt in int3 enter movsb movsb (bad) outsb lock lcall mov pop pop jo loop mov out in mov ret push cwtl mov rorb data16 lcall jb insb (bad) out test mov stos lcall pop pop scas lret (bad) mov lcallw (bad) out push mov out mov (bad) mov (bad) into pop outsb into mov xchg (bad) mov test scas pop outsb pop pop (bad) ficoml (bad) lcall stos mov sahf jo mov (bad) (bad) (bad) outsb pushf (bad) hlt jb (bad) test lods mov stos sahf aam test (bad) (bad) into jo lcall fmul push out lods ljmp scas mov mov in nop enter mov jo repnz fsubrp mov lret fsubl fsubp out mov push pushf mov mov test push lret cmpsb mov enterw jb ret mov push mov xchg pop jo test jo repnz test mov nop enter mov jo repnz fsubrp mov lret cmpsb movsb (bad) (bad) (bad) mov fnop out mov mov outsb pop pop pop pop ficomp xchg pushf jb (bad) test mov fs into jo mov (bad) mov lcall jo test jo out xchg test lock cwtl enter mov shl test pop pop scas (bad) sahf cwtl int3 lret pop out push mov out (bad) (bad) (bad) mov jb nop fmuls lods ljmp scas mov (bad) mov cmpsb pop in pop pop insb pushf in pop pop jo int3 lret les mov into stos mov insb pop pop pop scas mov mov mov push mov out (bad) (bad) (bad) sahf shlb pop pop pop sahf mov into enter (bad) (bad) out (bad) (bad) (bad) mov (bad) mov fs lods fcomps test jo out xchg test int3 jb lods aam mov nop fmuls lods ljmp scas mov (bad) enter pop ljmp mov outsb pop pop (bad) (bad) ret pop pop jo (bad) mov mov mov pop pop mov in pop pop loopne mov mov enter cmpsb sahf in pop pop push mov into stos mov insb in pop pop shlb int3 in fcmovbe (bad) (bad) mov mov mov mov (bad) rolb out xchg sahf push enter shlb (bad) test fmuls xchg les (bad) fidiv jb (bad) (bad) hlt out xchg (bad) pushf in mov (bad) mov mov (bad) (bad) (bad) (bad) test call xchg mov stos mov stos (bad) jo in fsubrp stos xchg (bad) mov test (bad) (bad) mov mov test ljmp rclb mov xchg mov data16 lcall (bad) lcall jo (bad) jo loopne mov xchg mov data16 shr push jb mov push (bad) (bad) stos push out shrb jo lods mov dec and das das cmp dec dec jne jp or mov xchg and inc mov addr16 andl sahf or push or mov into xchg push shlb (bad) insb mov mov leave mov mov mov mov test repz test add push je adc adc hlt movsl add lcall push push insb fcompl in jo push mov out ficomp and adc cltd es sub mov and (bad) push call fnstenv aaa mov movsb test mov xor mov xor dec imul addr16 cmp push inc dec das pop inc dec cmp push cmpsb mov test mov movsl add dec (bad) sub or xchg xchg mov mov jae jbe and inc sbb cmpsb insl dec data16 xor lret or inc xchg xor pop mov cltd lcall in (bad) sub int3 mov lret lret mov test int3 insl sub sbb sub xor xor (bad) imul mov dec incb push (bad) icebp sbb sub inc outsl inc ss push cmp xor add loopne inc pop mov into adc xchg push push dec xchg adc push adc mov mov dec dec xchg sbb mov cmp test mov fstps rclb hlt lcallw jno mov dec rcrl cltd push stc adc cmp sbb cmpsb mov or arpl dec xor xchg cmp movsl inc xor pushf loope xor lret arpl stos jnp mov mov push adc and and pop jns outsl jbe push inc adc sub xchg lcall lea mov stos xor xchg mov jb ret in loope lods adc fisubrl loopne or mov push sub and mov pop test pop ficomp mov inc xor cmpl adc arpl test lds cmp xor ret pop mov mov xchg xchg push sub dec dec inc cmp out or sub mov cmpsb fwait pop enter arpl in es in mov dec sbb sbb (bad) jg push ror jb lods aam lea mov sbb inc out push pop sbb push adc and sub jnp xor cmpsl decl sub data16 insl push mov xchg sahf imul bound (bad) out xchg inc jp pop jbe xor test and lcall sub loope push add test push sub inc insb repnz lods (bad) cmp xor cmpsl sub mov imul push xchg data16 lcall add cmp test cltd or pop push data16 shr push jb mov and mov push sub push sbb bound xchg pop sbb fstps int3 mov out push shlb fisub (bad) fs aaa xchg (bad) mov dec dec scas call mov iret mov mov xor sbb movsb mov aaa es and repnz nop into mov add sub adc fsubrs and dec insl ljmp mov pushw and cwtl or icebp cmp or inc imul stc or popf cwtl js aam xchg or pop push sub xor adc lods or push push adc fcmovne push or jl test and and pop sub aas mov lods adc mov mov (bad) icebp xor cld dec dec xchg push imul cmp inc je add xor aaa xchg popf and int3 leave imul sub es cmpsb push sub mov push adc or push mov xchg pop ja cmp shl push pop les xor stos stos cmp push push adc rcrb cmc dec lret sub mov pushf dec jmp call dec in jl ljmp in sbb mov lea test imul cmc jle xor daa pop mov daa in pop gs enter imul in xor fs decl mov pushf call ljmp xor and sub fwait movsl cmp aaa mov inc test (bad) test test xchg and adc xchg pop cmpsl je inc inc ja test push adc push xchg xor inc add adc repz cmc push adc adc xchg push pop movsl jae cmc push adc adc and adc daa adc add push adc xchg and adc xchg (bad) inc adc jbe adc adc push adc adc push adc (bad) testl push movsl es adc arpl hlt in and adc hlt data16 xchg adc roll xor test and add adc inc je xchg aam repz fs adc xchg addr16 inc push xchg lds testl and and xchg xchg mov fs push xor push push je push movsl xchg pop jne adc adc jbe notb test xor les xchg add xor add xchg jbe push xchg testl adc xchg inc je push inc jbe push je adc (bad) xchg fs xchg test inc push xchg inc xchg add push in adc adc and adc inc arpl addl xchg gs jbe mov movsl push xor xchg mov mov xchg divl adc inc mulb je push xchg and out pop cmpsl (bad) repnz test je push xchg fs addl je adc push adc adc adc xchg adc addl and adc in ja movsl xor xor adc ja movsl xor xchg movsl adc mov add and xchg xor xor es mov add aam lds mov adc jbe inc and hlt adc adc push xchg xchg addr16 fs xchg test gs cmpsl jae je je pop xor xchg inc in xchg inc and fs xchg xor inc xchg inc xchg test test push xchg xchg pop xchg adc xor movsb adc push adc push xor xchg add xchg daa jne inc xchg push hlt xchg ss push add test push fs xor and inc fs xchg mov xchg add je adc xchg inc loop aam push and aam mov mov inc andw repnz jne (bad) mov inc fs inc fs fs jb mov push je adc xchg daa movsb ja pop es add inc movsl push je and addr16 adc inc ss inc push jbe jbe ss xchg mov lds xchg in adc push xchg xchg (bad) xchg movsb inc push adc adc divb adc testl xchg inc add xchg inc fs lds xchg inc hlt xor ret push xor inc in aaa fs adc xor test mov add xchg inc xchg hlt xchg inc in aam hlt and mov mull addl adc test push movsl test lds xor jne xor test movsl jne xchg movsl aaa jne lds xor aaa jbe lds adc push adcl jne xchg inc and add xchg xchg test daa jne movsb test adc mull push je adc xchg inc inc arpl in push mov movsl push xor add xor gs push inc and in mov je adc push je pop es add xor xchg xor adc xchg adc adc adc adc mov movsb push xchg inc fs xchg inc loop xchg adc xlat addr16 movsb xor (bad) aam cmpsl and inc inc fs xchg adc adc xchg les cmpsl add adc add gs je adc adc and adc lds and in je movsl xor xchg in inc add jbe inc push inc cmc add inc xchg (bad) xchg inc push mov addl adc adc inc adc aam mov push fs mulb repnz xchg inc add inc inc add test repz ja je adc xchg daa movsb jne repz xchg push xchg xchg (bad) test push adc inc inc in xor mov inc push inc inc arpl aam jne xor xchg jbe mov adc adc inc mov test add xchg data16 xchg adc xchg add xchg test ss xchg add xchg xor addl arpl cmc add push mov xor movsl pop cmpsl xchg push xor xchg xchg xchg data16 xchg pop xor xchg data16 xchg pop xor repz xor inc push mov adc add inc notb push aaa xchg inc adc and add je cmc xchg adc mov xor cmpsl push ss addl movsl push jbe addr16 adc xchg inc inc jae inc in push ret push and and mov adc adc xor inc push xor adc je pop adc and lds inc les and movsb mov and sub sbb mov test mov sub mov push sbb push push pop xchg int or stos dec dec sub dec sub push sub or sub mov dec in call inc dec inc inc inc pop das js jae push fs cmp push addr16 inc jbe xor data16 dec push push xor inc inc das inc arpl push push inc jb xor dec dec sub outsl insb sub cmp add xor sbb pop gs push pop sbb xor or or inc inc outsb push lea inc and sub sub push ja add pusha rcrl mov or inc add in mov mov xor cmp adc adc nop test repnz and fcomp movsl pop pusha loope sarl fstl lea cmp cmp movsb inc mov pop adc jns jp mov mov xor mov cwtl shlb xchg add xor mov push xchg rclb rcrb xchg rcll xchg lea mov out nop rcl lcall adc adc pop push push sbb mov fisttpl push adc pop dec sbb xchg rclb dec int3 lret or sub xchg sub push je dec dec push imul je dec jbe dec xor cmp adc pushf sbb push push push out inc inc inc inc push mov rorl pushf lods mov dec push fabs test and xor inc xor push nop in xor and cmp dec xor sub xor adc mov dec mov pop adc fs movsb ja pop and lcall test ss xor pusha push ljmp cmp dec push cwtl mov mov pop lds cltd adc push dec out adc adc push or inc out inc imul mov into sub and imul or ja mov shlb dec (bad) shlb loopne test cmpsb xchg test mov xchg cltd adc xchg adc out test inc push ss lods push and jns xor adc addr16 cwtl shll test or or test lods les inc data16 inc xor lds dec mov push enter test ret test push popf sbb cmp inc loop jbe inc push inc repnz xor mov and test and sub mov jnp nop dec test and and cltd popf push cltd adc bound nop aam and inc push mov rorb int3 push push fdiv and clc mov inc jo inc xor xchg mov les cld lea dec sbb imul rorb push add inc negb mov xor xor jne addr16 in addr16 les les inc ss movsb and push out dec call sbb mov inc mov xor push inc push push xor dec adc addr16 inc test xchg arpl cs xor xchg xchg out push xchg inc inc cmp mov fs push dec cmp sub add bound (bad) cld dec test in in jecxz nop fcmovnbe adc xchg je aaa adc test xchg andl es jns push sbb adc enter movsl outsb (bad) xor imul mov push inc inc movsb cmp xchg cwtl mov sub inc repz (bad) and push js xchg test push rcrl and repnz aad pop nop fsubrs (bad) sub leave xor sub dec dec movsl out dec dec lret es cmp rcrl insb cmp lods inc dec insl aas in dec xor movsb daa xchg mov xor mov and dec jae loop cmp ja les mov push scas and adc and sarl stc or adc jl or inc xor fs fisttpll loop dec adc jle test mov out imul sbb pusha aad push xor or cltd xchg bound les adc adc xchg lea adc aaa les xchg pop adc es pusha rol iret sub mov mov dec lods in inc jae loop jns sub push daa xchg xor lds adcl inc inc gs daa xor mov and inc adc ss testl xchg xchg jbe push je adc xchg adc adc xchg aam test adc xchg aad je adc adc movb ret push push xchg ret xchg inc jbe (bad) (bad) adc adc adc (bad) movsb xchg and adc xor adc and jne cmc cmpsb testl adc adc movl xor xchg je adc xor test inc test inc je adc push push xchg and adc xchg add xchg les test xor and fs cmc push jne adc xchg adc je les xchg adc and add inc (bad) inc data16 add adc xor inc xchg xchg movsl es inc hlt gs and adc addr16 test push push push movsl push test movsb xchg fs xchg test inc pop xchg arpl je testb (bad) hlt inc adc pop jne test xchg fs fs hlt gs and cmpsb adc pop cmpsl movsl arpl xchg adc xchg test adc adc (bad) in gs addr16 movsl ss push adc fs mov je ret add adc repz jbe xor fs and jb (bad) aaa mov push testl fs test repnz xchg inc notl cmpsl xchg arpl xlat movsb xlat xchg lds push cmpsb hlt push push inc add pop movsl add jae inc and jne test inc fs cmpsl xchg jbe es es adc xchg fs jae movsb xlat movsb xlat movsb xlat movsb xlat xchg lds jae adc push push push adc push je xchg mov xchg (bad) push in push jne inc andl adc aam test xor adc inc xchg inc xchg add adc inc gs push xchg cmpsl je xchg push jae add movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb gs je and adc xor jne test adc adc xor je test (bad) push xchg testl mov add push xchg adc test movsb adc adc adc mov (bad) inc (bad) hlt adc adc adc hlt adc and adc jae repnz adc xchg add xor add adc adc push jbe adc push adc fs repnz test xchg addr16 adc add mov push jbe xchg xchg xor inc adc test addr16 repnz xchg mov adc adc adc (bad) gs push ret push arpl xchg add xchg les adc adc (bad) ja hlt lds addr16 repnz roll mov adc adc adc jne xchg push jae lds xor and adc movsl movsb xchg push adc out push push adc repz adcl inc inc xchg add xor inc test adc xchg push push adc xchg cmc xchg aam xor add inc inc fs push inc daa xchg pop je inc xor fs jne push push adc add jb adcl xchg push adc test jbe out xchg jbe ja push push adc mov xrelease push xchg ret xchg and inc inc xor add xchg (bad) inc and hlt xor inc xor daa jne adc mov arpl inc push inc divl ret inc arpl xorl fs add repnz test aam push and test inc jb ss ss xchg push cmc xchg add repnz addr16 test jbe fs jb jne inc inc xchg inc fs addl movsl jae add testl test adc mulb divb adc mov xchg push adc data16 adc xchg mov xchg push adc data16 push adc addr16 mov xchg push adc addr16 push adc addl adc fs divb inc les data16 je jecxz inc adc push test je adc adc push and es inc fs mov es and adc mull mov je les xchg add adc jb xor inc adc and inc inc add adc les xor fs xchg add pop addl mov adc adc xchg add push push xchg jae adc push push xchg push ss jae push gs push push xchg test push push adc xchg push inc inc adcl movsb inc xchg inc test mov and mov ja repnz addr16 repnz xor mov adcl xchg xor push and lds inc xchg inc push adc inc push xchg testb jbe in dec and mov mov and sub cmp xchg xchg mov and mov and stos mov mov pop mov enter int xor stos xor xchg pop or push pop push pop adc push pop sbb insl push xor imul lods dec hlt xchg push test pop ror xchg popf rorb movsb enter push push xchg and adc sbb (bad) mov sub cmp mov mov movsb mov sbb sbb and roll sub test lret dec sub addr16 test push (bad) movsl push test movsb xchg fs pop xchg arpl je testb mov dec or and mov adc movsb pop cmpsl movsl arpl xchg adc cmp adc fxch mov push xchg push mov into call es in call leave or or int3 in leave dec int outsl inc out inc insb test push inc leave sub imul lea sub enter out dec movsb jns push inc cltd adc push pop rol or out mov or or dec and jns popa inc gs addr16 inc push sub pop jbe lcall cmp addr16 je inc push push xor je inc inc dec cmp cmp dec addr16 fs push push dec addr16 dec das insb jns pop je inc inc push pop dec je inc dec push inc inc pop dec dec inc jbe arpl jp pop loope aaa cli inc (bad) xor pop nop into inc test arpl jne mov push (bad) gs jo cmpsb aad mov fnstenv sub incb xor add and mov test dec test xchg adc mov push jbe xchg xchg addl addr16 outsb loop dec rcrb push or push sbb pop ficoml push adc aam je (bad) aam (bad) ja hlt lds roll icebp sub mov (bad) and adc inc bound or jg dec sub enter inc pop xor dec jbe popa das pop dec inc xor sbb out jb push ja and fst dec bound xor inc lea push in leave dec in imul out lret and push cwtl popf sbb adc ror into push pop adc xor movsb mov loope shrl mov mov inc xor mov dec (bad) dec jns arpl mov mov out mov sub xchg and jb es inc xchg inc fs addl movsl jae or stos mov pop mov mov and stc or and push les push or inc mov dec jno adc test test sub call inc cmp jns and xchg inc xor adc jb xor inc adc and inc inc add daa sbb xor pop dec test ficoml ss mov mov mov mov inc inc adcl mov xchg adc jmp fstp mov movb movsb gs pop fwait push es (bad) and xchg xchg or and lahf call and xchg scas and pop jp inc inc push movsb adc jl or mov pop adc aad or test mov imul xchg int addl in dec or xchg dec out xchg mov mov (bad) xor fwait (bad) lock mov enter test fs and inc push jns repnz (bad) cwtl outsb pop es scas and add sub or addr16 mov dec push popf (bad) daa inc ret and mov mov xchg and mov imul push addr16 enter arpl cmpsb cwtl nop mov mov jne sbb dec icebp sub mov sbb popa rorl sbb mov arpl fwait lcall or push inc cmpsb repnz dec dec int3 mov out cmpsb mov adc cmpsb and ds xchg xchg das xchg add popf adc out arpl dec inc icebp xor and lcall rclb hlt and sbb and pushf mov mov cmp mov mov mov xor imul adc and and sub or lods pushf dec test xchg push jno sub jo adc xchg push clc cwtl fxch mov popa shrl lret mov insb test mov pushf pusha mov inc movsb je gs adc xchg aam jns dec sbb or or out dec or inc outsl addr16 cmp sub fs dec push inc push dec pop cmp push inc push inc ja push dec aaa inc inc push outsl popa inc jno push inc jp pop insb inc das dec inc dec gs push inc push xor xor inc push xor xor push pushw das pop inc push insl addr16 xor push jbe push push dec inc inc inc dec pop inc fs imul inc inc jb push cmp dec inc inc inc dec push xor dec push dec popa addr16 pop outsl xor xor inc popa inc dec gs push inc addr16 addr16 inc xor push inc inc inc inc dec cmp push inc inc inc sub push push inc inc xor pop pushw dec jae imul push pop imul inc dec cmp pop push inc push push das cmp inc inc sub push cmp inc dec xor push inc inc inc inc inc push das xor das cmp sub inc xor jb inc inc inc pushw inc das das inc das das xor xor xor ja cmp push inc inc dec arpl ja inc inc inc dec js jbe fs jp inc dec jp inc inc inc jb push inc outsl inc jae das das jp inc push pop push dec js inc xor inc cmp imul push jo push push das push inc outsl inc push sub das jbe das cmp push xor fs inc das fs js inc cmp inc push das push push cmp inc inc inc push das xor das js push addr16 inc inc imul outsb xor das das imul je dec das pop xor inc dec jae imul push arpl xor push imul insb inc inc push cmp dec dec addr16 addr16 push push pop push inc dec cmp jp inc inc dec push gs xor push push inc push das xor push push cmp inc dec push inc imul addr16 cmp push arpl push dec das xor das xor das xor das xor das xor das js push addr16 inc inc dec das dec dec sub dec push jne gs das das push pop jbe push pop jae xor cmp xor push jp das cmp push pop jbe sub das xor push xor inc xor das das das fs push dec push inc das fs inc das fs jp fs push fs push das fs inc das fs jp inc jbe das das xor inc dec dec inc cmp inc inc xor je sub push ja popa dec fs push dec push dec inc inc inc inc inc das fs outsl dec dec push das das cmp inc dec addr16 push das das das xor ss push dec das das das das fs push das das cmp inc dec addr16 jns das das das xor ss jp das das das das dec jne inc jns das das das xor ss xor das das das imul das cmp dec dec push js das das das xor ss pop dec das das das das fs outsl xor das das das cmp dec dec push js das das das xor ss xor das das das fs outsl js data16 das das cmp push dec imul cmp das xor ss dec dec das das das das imul data16 das das cmp push dec imul xor ss jb das das das das fs inc outsl imul das das cmp push dec imul xor ss dec dec das das das das fs jp gs das das das cmp pop dec push das das xor ss jb das das das das fs push pop jae das das das cmp bound popa js das das das xor ss dec dec das das das das outsb push outsl push jae das das das cmp gs push das das xor ss jb das das sub inc das je inc inc inc inc inc outsl dec dec data16 das das sub push dec addr16 das aaa popa dec inc inc inc inc ss bound das das das je ja inc inc inc outsl inc cmp das das sub imul inc dec addr16 js das das das aaa popa push inc inc inc inc ss pop inc das das das das je addr16 inc inc inc outsl ss das das das sub outsb inc inc inc inc dec push js das das das aaa popa addr16 inc inc inc ss push inc das das das das je push inc inc inc inc outsl jns bound das das sub jno inc inc inc dec imul cmp pop jae push imul pop xor dec inc push inc gs je inc dec push dec push dec imul pop je inc inc jae dec je inc dec push dec push dec imul pop je inc inc jae addr16 je inc dec push dec push jne cmp das das push push aaa inc push outsl je dec inc imul xor dec ja inc xor fs fs ss das inc das das cmp xor dec ja dec xor fs fs ss xor das cmp xor dec ja dec xor fs fs ss jbe das das cmp xor dec ja push xor fs fs ss outsb inc das das cmp xor dec ja push xor fs fs ss inc das das cmp xor dec ja pop xor fs fs ss pop inc das das cmp xor dec jp arpl xor fs fs ss push inc das das cmp jae dec dec and cltd lret cltd sbb push push push adc sbb sub call sub dec or jmp sub dec enter (bad) lods mov or movsl jmp ljmp test into (bad) or test sub sub sub push stos dec sub dec mov adc xchg pop int and call xor inc inc add adc jns push inc imul sub inc mov es or xchg adc xchg xor xchg add push xchg push push xchg xchg movsl je jne es and adc xchg adc push lods out mov push test adc inc mov arpl mov sub call xor xchg adc pop jbe lcall sub (bad) mov adc movsb fisubrl adc int mov mov xchg lock mov mov push mov dec aad fcmovnbe push dec ficoml (bad) adc xor mov xchg aam aad sbb mov pop test inc adc mov repnz aam push cmp sahf lods pusha mov imul int3 nop sahf into rolb inc sub sub dec or test dec push adc test outsb jo test (bad) mov stos test push jg mov dec in mov addr16 xchg push xchg add mov mov stos adc sub inc in or into bound mov int int es push dec push data16 and fimul push test addl adc test movsl inc enter pop push push xchg popf push mov and divb dec sub mov xchg stc xchg push dec nop pop xchg fs jne inc int3 mov insb mov dec push pop (bad) je das cltd gs fnstcw mov dec push enter fwait enter (bad) mov out inc ss dec dec mov adc ficompl sub and enter cmp leave in sub xchg dec xchg jl scas jns push ficompl jb xor insl repnz mov in ja inc (bad) enter cmp test mov mov mov dec or inc dec enter xchg and je nop into xor mov jo insb out pop adc lea fiadd in js sbb cmp loop inc mov xchg fimull enter mov xor cmp dec stos sahf ror xchg rcrl cld dec sub popf or out into lahf (bad) (bad) jno sub mov in dec scas inc divl pop adc mov mov and push xor dec sub and xchg aam dec enter pop adc aas jmp pop imul arpl enter outsl xchg push jmp cmp enter mov mov xor pop outsl imul mov xchg or inc dec and push inc pushf bound insl dec xor mov inc sbb mov es aaa sub adc xchg frstor outsl imul popf adc bound mov pop dec or sub lds (bad) call xor adc and sub and adc daa and mov es xor nop lds test and xor mov xchg int3 sub pushf lea cmpsl sub mov mov jb outsl mov push adc xchg nop ljmp cwtl lods sub mov iret es cmp incb (bad) add xor add jno xor adc mov subl dec in mov mov push sbb loop dec mov test test xchg xor sbb or repnz push push adc addr16 data16 cmp insl xor lcall xchg orl subl test popa mov lahf and inc popf add in sbb inc loope dec dec ret loop dec adc pop pushf adc push mov push addr16 dec push ja dec adc xchg rorb lock sahf mov hlt mov gs sbb push aam mov add dec insl mov decl lea fmull icebp and jno mov fcmovbe or test mov mov outsb xchg fmuls mov jbe dec call mov and adc xchg adc inc and push movsb jae adc xchg inc fs push addr16 xor push xchg jbe xchg and fs push addr16 xor push xchg jbe xchg and je xchg test arpl xchg xor in adc mov divb mov es push xor xchg mov ss push xor xchg add hlt cmpsl jae xor inc inc addl push test je adc test jbe mov jb xchg inc jb mov ss xchg andl notl and adc (bad) xchg xchg loop movsb xchg es push adc movsl push mov xchg xchg pop je adc xchg add xchg (bad) jb adc mov mov push and adc xchg xor test push xor adc mov and adc daa jne adc mov je mov adc push push xor add cmc pop fs test ret xchg adc xor xor je mov adc je xor add testb cmc pop fs cmc add mov mulb cmc add jne adc push xchg mov inc xchg xchg je daa je mov je xchg daa je mov je and mov daa je inc jbe hlt inc ja hlt inc mov jne jbe and repnz andl notl and adc adc adc daa jne adc ss adc inc test adc xchg adc push xor adc movsb test adc daa jne adc out push adc xchg add les xchg xchg push xor push cmpsb test xchg add les test xchg push xor push cmpsb jbe movsl and test and les jne in xchg add adc adc adc adc mov xchg adc xor divl adc adc xor test aaa xchg and xchg inc mov add adc test inc inc fs push addr16 xor in adc mov je xchg daa je mov je xchg daa je lds xchg inc mov add adc test inc add push testb xchg test arpl xchg xor movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb gs je xchg cmpsl je and adc xchg adc mov xchg je mov test jae xchg and addr16 movsb mull xchg xor mov es push inc pop xchg inc xchg divl mov hlt je daa bound xchg xor xchg mov inc je xchg xchg testl xchg push addl gs adc adc testb jne data16 adc test push push push xchg adc xchg add repnz mov push addl adc adc hlt inc add fs add repnz cmpsl jae je je pop xor mov jae mov adc test addr16 lds es movsl es xchg lds push test xchg je jbe push xchg xchg add add repz xor xchg xorl xchg xorl adc movsl gs jbe push push movsl push ss push fs repz cmc test xchg andl push push push inc arpl push je inc xchg in push test repz adc je and jae ss adc xor jb addl adc test xor xor repnz test je testb inc (bad) mov add mulb inc inc movsl push adc inc add and adc inc xchg div fs adc xchg fs xrelease hlt (bad) xor movsb xlat je adc aaa inc arpl (bad) testb testb adc arpl inc xchg hlt adc xor inc add fs cmc xchg jb mull adc xchg xor test xchg push xchg push adc push and and add out and mov xlat mov inc test test xor xchg repz (bad) testb repz push inc (bad) mov xchg jae xor (bad) testb inc arpl data16 testb hlt gs xor adc test jbe arpl jae pop xor inc xor test xor fs test inc jb xor xchg adc add inc xchg hlt adc xor hlt and and repz lds inc aaa inc test movsl adc push data16 testb repz cmpsl xchg jb inc push inc hlt push and repnz aam push inc and inc jecxz xor xchg inc jecxz xchg mov repz in repnz cmpsb xchg add test xchg add test xorl ss xchg inc movsb xlat movsb xlat movsb xlat movsb xlat movsb fs inc xor xchg inc inc adc xor test and mov aaa fs jb push test test xchg pop fs daa je adc dec and xor and mov mov cmpsl test mov movsb lcall mov xchg aam rcl (bad) sbb push lcall test xchg pusha stos xchg mov pop xchg out push pushf enter aam (bad) cmc push test jbe adc push mov push mov jb xchg inc jb mov ss xchg andl notl and (bad) (bad) xchg xchg loop movsb xchg es push xchg xchg lret dec or cmpsb inc inc dec cmp adc xchg nop push bound and xor mov inc or mov mov test imul aam xor mov mulb sbb mov jg inc jae mov movsl sub and mov movsl loop dec and mov and adc fnsave lods inc popf inc popf mov mov repnz out mov sbb rolb push mov rcl adc pop sahf push push adc dec push pop push push aam call xchg and inc dec adc push imul and mov push and icebp adc rcrb inc dec inc inc inc inc js xchg dec inc mov (bad) and lahf adc (bad) call rcrl rcll xchg push push mov cwtl stos cmpsb ljmp dec out sub into push or in push mov sub out ljmp dec lds or movsb dec push imul push adc sub dec les push push and jnp lea add loope xor mov gs and lods int gs mulb jne inc loop inc add fs or push sbb xchg rcr int enter xchg adc movsb enter and mov mov movsl add repz enter push mov enter lods nop (bad) fidiv adcl ss gs fs imul xor mov fs pop push inc int3 outsb pop lock mov out pop ss push das push sub insb inc dec das sub dec sub push and fwait and xor cmp mov dec enter xchg jmp call mov sub in mov sub sub ljmp inc and addl jbe push pop xchg adc lods (bad) cmp dec inc push dec or sbb mov lock clc xchg or xor and out push xchg xor cmp sub or sbb xor mov mov cltd stos xor lcall inc xorl and push adc cmp sbb fucom lds mov add clc mov mov xor sub dec mov es adc and mov lret dec in xor into insb leave test out xchg push or adc inc loope fisttpll sub sbb push mov ja inc inc jbe dec inc dec inc cmp jns jbe push imul sub cmp lods or or sbb sub in push adc roll mov inc cmpsl daa popa adc (bad) (bad) lahf and adc adc inc dec mov lods sub mov mov ficom inc inc popa dec push cltd or (bad) in push push jb fwait push bound adc mov and sub imul add dec dec xor mov das loop dec repnz sub sub or sub inc outsl inc ss jns adc popf pushf int3 out into stos bound xchg add inc bound pop dec arpl jp mov jo daa es enter jmp in lods stos xor cwtl loop pop les fs test dec scas les dec inc inc int3 lods insb mov ret push (bad) mov and push ja adc cmp jnp mov adc adc mov rcrl cltd xchg push fsts sbb xchg popf adc pop into enter or xor sub mov in push dec mov (bad) adc sub dec dec add dec jb cld dec push xor cmp and mov sbb lods cwtl cmpsl or (bad) and es xor jle shrl icebp sbb adc stos inc mov mov lcall mov fs push push adc (bad) enter arpl xor inc adc xor out mov pop aaa jp (bad) int3 iret dec dec xor inc outsl arpl and lcall call lret pusha xchg pushf les adc cmc xchg inc je inc testb in fs cmc inc push (bad) and inc gs gs push inc inc and and push inc and lds xor xchg ss adc adc and add xchg cmpsl je test inc adc cmpsl je xor data16 inc push push lds xchg inc xchg test xchg xor adc jbe adc xor hlt adc repnz test inc ja ja cmc push adc adc out pop push jne inc add cmc jbe in xchg mov inc je inc testb in fs repz and repz inc arpl adc adc bound fs adc add push xchg (bad) adc test (bad) je je adc xor inc push jne inc jne xchg jb adc je xor add inc jae addr16 ss ja es add push ss add xor hlt cmc movsb and adc inc inc adc inc testb fs (bad) repnz movsl jbe in xchg mov and inc adc mov adc mov je add adc mov xchg adc mov push xchg adc mov inc xchg adc mov xor add adc adc gs xorl es movsb adc xchg adc cmpsb divl and add adc adc es and adc (bad) movsb xor adc cmpsb divl movsb xchg adc xchg add adc jne adc lds xchg adc inc fs add mov push movsl push push xchg divl jne adc movb hlt test adc and adc push mulb gs mov adc xor fs push adc mov adc inc test push adcl adc adc adc notb adc xchg (bad) repnz add add adc aam xor repz xchg fs mov inc push mov push push je mull push (bad) adc add and jbe jbe push push adc test jne push push ja add mov adc test je notb push (bad) hlt xor add and fs hlt gs and jae test mov inc data16 je adc jbe xchg adc xor adc adc es adcl es mov inc jae inc aam adc adc adc adc push adc adc adc add testl pop ja xchg testb gs inc hlt push xchg inc adc fs push xor adc adc xor test xchg add inc push movsb and movsb pop es adc adc jae in arpl push movsb and gs ja mov aad inc adc es movsl push adc adc push notb adc test and adc movsb mov adc adc push xchg add inc xchg xor inc je xchg add jae jbe lds xchg add cmpsl inc add aaa andl xor xor aam pop xchg movsl xor xchg inc fs aam adc push xchg push and adc lds aam fs mov adc xor and aam arpl inc inc inc aam adc add adc adc jae adc daa ja add movsb xchg xor adc adc adc arpl and adc adc xchg inc and xchg inc xor inc lds test adc adc adc inc push adc ja testl adc ja testl pop xchg movsl aaa jbe movsl pop jne cmpsb pop ja gs fs movsl jae xchg push adc adc pop xor xchg ret xchg hlt xchg inc xchg xor inc in aam add and inc and xchg es adc adc adc adc and xor cmc daa xchg es xor arpl inc adc and aam xor arpl inc jbe and xor xor xchg adc pop xor xchg ret xchg hlt xchg inc fs aam mov add adc push jae mov xchg adc push xchg gs mov add xchg add xchg fs fs divb repnz add xor inc fs inc arpl push inc and test mov add xchg xor inc xchg add add push cmpsl and data16 xor je test gs xchg lds inc cmpsl push testl xchg inc fs adc and and repnz test xchg lds addr16 ret push arpl push ja adc add cmc adc xchg add inc aad xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb xlat movsb fs inc xor jbe jne gs xchg test repnz xrelease and adc mov movsb aam inc adc adc adc push adc in movsb xlat movsb xlat movsb data16 dec and lods cmp mov mov mov sub and stos cmp cltd sub mov stos sub mov xor sbb xor and sbb add fisttpll and push inc (bad) and add fstl fldl test sub xchg sub into sub call push push das das sub inc inc addr16 ja push push inc inc dec xor stos cmp (bad) daa xchg ljmp mov jns xchg or rol sbb sbb lds inc in or lcall cmpsb in lret ljmp push or or or out into in insl enter dec insb adc test rcll dec dec test xchg jmp es cs pop int3 repnz into mov loopne (bad) xchg (bad) pushf outsb xchg and mov lea adc (bad) jb nop pushf (bad) mov lcall test aam es mov aaa mov inc fs ss test mov or (bad) adc inc inc and add push stos stos dec jnp xchg mov push das dec inc push inc adc adc or lea adc xchg adc cltd pop or and inc and mov sbb fcoml mov mov hlt pop xchg jo mov mov and mov cwtl mov (bad) rclb sub ficom jl sub ss mov dec or inc inc and mov popf into push adc fmul lods xchg movsb loope pop adc push and inc jae inc aam adc (bad) ljmp je dec inc push dec push push ja jns push push pop je inc dec je dec inc xor adc push rcrb bound int3 out bound mov cmp test pop hlt stos sub das dec or imul dec imul test scas sub cmpsb sub and mov sbb aaa mov es in dec add leave mov inc inc inc movsb sub movsb fwait and sbb xchg adc rcl gs adc dec sub adc push xchg jns lea bound adc fsubs adc adc adc movsl sub test sub sbb mov jmp cmp dec je dec je inc dec dec jo xor aaa cmp mov repnz xor inc xor mov sub int3 enter push adcl rcrb adc or or ficompl lcall xchg jb jnp mov (bad) jns addl and mov insb mov ja insb inc repz adc dec rcrl pop push or adc push xchg les lcall stc adc pop xchg jg (bad) xor jb sbb into sbb mov sbb sub enter adc mov xchg jno cmpsb adc or hlt test xchg ret xor aam sahf sbb out pop enter dec mov leave xchg mov inc (bad) adc xor lods xchg xor mov dec push sbb mov add sbb or dec dec xor push jp jns adcl push sbb lret xchg lret mov push cltd pop fidivrl jmp push dec (bad) int3 rcll test push pop in cmp (bad) in out jne and cmpsb pop loop xor cmpl pop mov bound rol adcl sbb dec (bad) or inc dec inc cmp into (bad) mov fsubrl addl lods test xor imul dec lods cmp xchg loope adc mov int es lods dec mov in push daa xchg sbb out icebp and frstor inc sbb push repnz ficomp adc and xchg pop (bad) mov test and add dec dec push stos mov adc lea push nop mov out out dec addr16 addr16 and pop aad mov rorl loope dec dec adc movsb and and cs or pop mov aam push cltd adc rcr dec adc push push or fimul add into inc test sub xor mov imul stos lret cltd adc adc xor daa and fwait push xchg push push rorb pushf lcall fstps xchg pusha xchg adc sahf inc jae inc bound jb fs ss xchg jl out das sub imul flds daa xchg cltd sub sbb inc dec repnz sub or adc push cltd fcom or popf rcrl xchg adc dec adc cwtl push sahf xchg nop push xchg dec int3 aad dec int3 aad dec int3 aad pop adc sbb push (bad) nop nop push fnop xchg push ficompl (bad) push push sbb adc pop xchg pop xchg pop xchg pop xchg xchg rorl dec sbb xchg cltd adc adc push sbb cwtl pop sbb xchg aam rcl cltd fcompl adc rcl push sbb rcrl sbb rclb fstl rcrb sbb fstps push lcall ficomp pushf cltd fsts mov adc fcomps lret fcomp rorl xchg pop nop xchg int3 dec pop sahf pop aam pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop push xchg pop mov int lcall push rcll dec adc aam aam push dec sbb push pop dec push pop rcl sbb push push adc lcall dec sahf dec aad sbb pop or pop cltd nop rcrb push push push push sbb into pop push sbb adc into pop push adc mov lret fisttpll rorl pop xchg adc dec rclb (bad) push push or adc lret ficom sbb adc push nop push push mov aad push push push rcrb push push push nop push adc push push push push rcrb aam push or ficomp pop popf int int3 aam lcall lcall adc aam (bad) mov xchg push adc popf int or push ficoml aam or fstl sbb rcll or lret fisttpl rcll pop xchg sbb push pop popf lret into sbb push nop nop push push sbb rclb nop push push sbb push push nop nop push push sbb rclb nop push push sbb xchg push nop nop push push sbb push pop rcr sbb mov xchg push or adc push push nop nop push push or ficom adc pop ficom pop lret into dec adc fcmovnbe dec ficom push pop int3 push pushf push push push adc nop push push dec adc fnop nop push mov dec ficom push pop dec rorl rcrl push rorl rclb adc push or adc push (bad) rcll pop rcrb or adc xchg aad sbb cltd push xchg dec ficom push pop fcmovbe push pop sbb mov mov aad int3 push lea or cltd xchg rcl push push rcll push adc pop dec adc fnop push push push push fcoms push push sbb popf int3 fwait ror ficom sbb aad push pop rclb popf int3 push rorl push push push push push xchg rcll adc rcll xchg or fstps ficompl rcl cltd cltd nop push sbb push rcll cltd push rclb into or push dec xchg cwtl xchg sbb rcrl push (bad) rclb cwtl xchg sbb rcrl push rcrl lret into push pop xchg push pushf lret lret aad push adc nop push fcmovnbe ficoml or push push or fxch int3 int (bad) rorl push push push pop adc rclb push push dec nop pop push push xchg push push pop adc push nop xchg push push dec push mov xchg or cltd sbb push push rcrl dec adc cltd adc fcmovbe push pop xchg push adc push push adc nop push fcmovnbe lret into push pushf push push or fimull sbb cltd rclb push adc pop aam rcll adc push dec ficom push sbb push push pop push xchg fsts rcrl lret into push dec ficom push pop xchg push fcmovne (bad) xchg cltd adc mov int3 push or cwtl pop push xchg push push or push push mov into adc or push push pop pop aam rcll pop mov adc push lcall fcmovnu push xchg or int adc fwait or push push dec push rorb xchg or lret int3 cltd rcr rcll push push dec xchg cltd adc mov int3 push fwait rcrb aad rcr rclb int3 aad dec xchg lcall rclb sbb fimull dec xchg sbb push fisttpll or pop push xchg pop adc fst xchg pop adc adc push mov adc push adc push push push push push push mov push pop sbb push pop adc push dec rcrl push push push push push dec dec aam adc nop push pop or xchg ficoml rclb sbb push ficoml fcmovbe push pop xchg push fcmovne (bad) adc nop push push adc fcompl ficoml dec xchg pushf push or lret int3 push or xchg pop push xchg push push rcrl dec into or push nop push mov int3 adc pop xchg push int ficom or dec xchg sbb pop rclb mov pop pop rorb push xchg adc mov push push pop fstl sub lea cltd fcom or popf rcrl xchg adc dec adc cwtl push sahf xchg nop push xchg dec int3 aad inc stos lcall outsl push dec pop inc inc dec jae dec xor pop mov xchg mov sub mov gs je inc jne inc inc in pop cmpsb inc push and xor xor jae mov mov pop push cmp (bad) push mov jp ret cmp and mov dec cmp jno or arpl fwait and adc and mov xchg cmp aad flds (bad) sub inc or hlt jae cmp xchg lret mov mov pop std sbb pushf mov push (bad) andl sbb sub pop gs jbe adc xchg adc fs jb movsb sub sahf mov dec insb xor call xchg test inc test pop in push xchg inc dec cmp dec inc das inc inc sub js xor ja jp push adc and dec or inc add nop xchg test pushf lcall xor rcrb aam push or ficomp out insb out data16 xchg push cltd push dec push adc fs gs inc sbb int sbb lds lods cmp mov jnp adc (bad) lret inc movsl push ret mov fdivrl or push push push nop mov xchg xchg pop and in or inc dec push xor mov mov xor js push addr16 adc int3 inc es push jno push outsl inc adc dec xor movsb mov inc inc addr16 adc or hlt inc hlt ss and mov mov es adc je xlat xor pop inc frstor gs pop mov cmp and pop addr16 aaa cwtl mov cltd dec psubd movsb rcll lea testb adc fmul mov cmp jae inc adc xor popa dec or pop pop jmp fs dec data16 mov adc ljmp repz cld dec int3 cmp inc sub xor shrb inc pop stos mov cltd lcall in inc outsb inc int3 fs ret mov push inc push inc les inc inc xchg xor mov jno xor mov jmp push or ja jb dec jo or ret lret clc xchg fdiv sub pop clc xchg or sbb mov in gs repz mov sub lods gs add sub xchg xchg cltd or and imul shll mov outsb jb and xchg or or xor mov int3 in dec test xor xchg push xchg test dec je inc dec mov movsl sbb push adc bound and mov lea sub ret cmp adc dec das cmp enterw adc lcall test xor imul data16 inc je mov xor sub mov jle xchg xor jno sbb loop inc icebp sub and inc xchg mov test pop jp pushf lods push roll bound insl sub sub push adc push les mov js dec or fidiv (bad) movsb incl and lods lcall push inc adc xor push or sahf sbb push mov dec inc imul cmpsl je adc inc adc xor jns push push xchg rorl or es cmp dec mov out inc fs push jl dec push xor and sub in inc dec inc clc popf xchg je and mov adc icebp sub jb and ss je loop inc and rcrl fwait mov stos jg pop inc jmp dec mov cmp pop or mov test mov test sbb dec push bound les lret enter mov pop nop (bad) (bad) xor dec lods mov and fnstcw nop fist mov xchg adc outsl dec push loop jno and xor mov mov loop dec (bad) aam and lahf mov adc push push adc dec dec or movsb (bad) mov mov int or test push jg sub push jg mov and daa cmpsb cld int3 sub in jmp ja xor mov (bad) popf mov mov sbb xor sbb test insb mov in insb les popa enterw fbld mov cltd test rorl movsb loopne xchg clc mov insl dec push ja lret push inc jne xchg pop cltd push lods test aam inc bound cmp adc and and sbb push bound xchg shll or nop lods fstl dec outsb loop xor adc xchg lock test xchg adc sub cmp xchg fs mov xchg (bad) into pop inc out popa xchg pop pop pop fmull and inc push mov sub les inc inc xor adc jb je inc inc fs je push xchg add jecxz and mov adc and adc es adc inc push aaa mov xchg add inc adc xchg repz pop push ja test inc xor xor push add inc adc inc repnz mov xchg push (bad) hlt inc xor adc ja hlt push xchg xor andl adc je repz movsb gs push adc xchg hlt hlt lds adc repz aam push je adc xchg adc push xchg jecxz xchg adc add adc cmc test mov testb movsb daa arpl and add arpl and xchg test adc adc inc arpl fs push out push adc xchg inc push movsb gs push adc jne adc in push and xor and and aam jne adc xchg adc xor inc hlt push data16 hlt out les add and xchg test adc adc xchg (bad) mov movsl and adc movsl xor je adc xor and and push push jb gs adc xchg out movsb and xor arpl xchg push and xor and and (bad) xchg pop jbe fs notl push push test push adc adc out mull repnz (bad) aam xchg arpl fs repz repnz cmpsl je divl and xchg adc inc fs repz and xchg push lds xchg add adc xchg (bad) repz data16 xor movsb and xchg data16 adc adc fs xchg xchg repz je and test xchg xor repnz je ret push adc hlt push adc adc adc cmpsl adc es push push jbe hlt adc adc je add data16 adc les ret test and push ss je push xchg xchg fs (bad) repnz test xchg xchg adc movsb daa test repz (bad) xor xor push hlt es adc xchg ret add inc inc hlt push xor adc xor xor push push xchg lds adc mov xor repz lds fs test adc (bad) mull mov gs repnz (bad) push je hlt push xchg xor pop arpl push adc xchg movsb and add push adc ss adc fs add inc arpl xchg push and xor adc add inc xchg mulb cmpsl data16 repz adc notb jbe push je adc adc repz movsb gs testb repz xchg add gs hlt data16 adc ret push es adc jbe adc gs addr16 test adc es (bad) notb push divb aaa (bad) inc jne je push xchg push test test xchg arpl jbe push ja push xchg xor addl adc (bad) inc addr16 movsb hlt jne adc cmpsb inc daa xchg cmpsb inc xor cmpsb inc ss cmpsb inc aaa xchg cmpsb inc inc inc test inc adc push xchg arpl xor test push xchg jae jne je adc movsb xchg adc adc dec and add call addr16 imul dec xor inc dec aaa popa dec push inc inc dec xor inc push inc fs arpl outsl jbe xlat sbb xchg int3 or pop rclb pop sbb mov pop adc rcll sbb adc lea lret into push mov fcom pop push pop mov cltd adc xchg push push or sbb pop push enter insl push inc inc dec das xor jbe je dec inc push inc gs push inc and pop or bound push push int3 push push push sbb sbb mov dec push rcll mov mov int3 push sbb adc mov int3 pop mov sbb push nop popf mov nop push push dec xchg adc (bad) rclb nop push push adc rclb push sbb sbb cltd rcll adc or xor sbb ret int3 pushf (bad) mov cld mov sub dec lretw pop mov insb call mov scas xchg xchg xor cmp (bad) cwtl out (bad) mov mov dec fs jp insl and imul int imul out jmp dec inc inc and inc prefetch or add adc xchg (bad) repz data16 sub test int fs adc sarl (bad) mov xchg lcall mov cmp inc xor or and popf sbb sbb lds sbb xor sbb inc push xor sub or push and inc jmp imul inc addr16 mov sub and cmp push dec stos lret scas (bad) and sbb rorb or xchg movsb sub push and mov test pop arpl pushf fnstenv pop stos or sub cltd mov aam les bound sahf rorb ss jle inc arpl sub bound cmpsb and sub sbb cmp jno push push lds test fcom xor test dec mov pop push cmp dec es push ja popa adc pop leave (bad) in lret add cltd adc adc cltd sbb int3 mov je mov and mov lods lea out hlt test inc jne movsb cwtl xchg push mov cltd fnop xchg xchg cmpsb inc pop imul (bad) out push mov in inc es adc xor xor dec jb push or and push lea mov leave lods or sub lods dec sub lret outsl sub out jmp xchg pop dec int3 stos mov (bad) and inc xor sub inc cmovbe lods imul dec aam (bad) mov jbe push into inc test pop lods dec cs ucomiss inc mov push adc mov inc popa insb ss dec dec xor inc pop jb sbb pop fcmove out lret and (bad) adc (bad) ljmp nop fiadd aaa cwtl hlt xchg repz repz cmpsl int3 mov sbb aam and sbb push adc or mov xchg jg xor bound sbb fwait lret mov push xor cmp xchg mov aaa (bad) cmc jne clc xchg xchg and mov dec or adc inc push notb movb push test inc adc lds mov popf push jp ret xchg or rorb ja stos mov and or inc or sarl push adc cwtl repnz pushf cmpsb in inc push dec mov sarl xor adcl les movsl clc popf sbb push xor inc and cltd leave jns xchg popf push or test jne jb cltd lods sbb push adc orl pop (bad) in nop and cmp push cwtl data16 arpl or fstl mov nop mov cmpsb bound push mov dec daa add (bad) hlt xchg mov sbb add fmull push cmp lds into rcrb inc inc inc dec cmp xor xor lcall sub sub push xchg (bad) in add mov push inc adc adc sub pop sbb sbb mov loope inc push fs in (bad) or xor mov adc call sbb pop sub mov and sbb fnsave ljmp lret jne (bad) (bad) enter and ss lods mov in les daa add mov int3 lock jb scas nop fmul jb ror pop jno dec movups xor or pop int3 test mov jne sbb push fcmovnb loop xor adc mov push pop fxch int3 popf rorb popf push push push push push push dec push cwtl nop sahf push dec sbb pushf rcrb pop rcll xchg lret fstl sbb adc xchg xchg or xchg adc xchg dec int3 push push pop lret fnop cltd adc dec push sbb xchg sbb rcrl sbb pushf nop sahf mov rclb rcrb push dec fstps nop sahf pop pop popf or rclb push push sbb or push pop sbb adc mov rclb push push nop aam push mov sbb push adc adc int adc into sbb fstl xchg push push push sbb cltd pop mov int sbb adc rcrl pop aam push or rclb int3 (bad) push push dec rcl fst push push push pop push sbb push push push push pop adc rclb pop xchg push or lret lret lret ficomp rclb push pop or (bad) xchg mov mov int3 push or cltd sahf push xchg push push rcll cwtl pop push xchg push push ficoml aad nop push dec xchg mov mov int3 push or pop mov rclb push pop into dec rclb nop push dec xchg mov mov int3 lcall push or sbb adc pop xchg push or dec lret lret aad dec xchg mov mov int3 push or pop mov rclb push push dec xchg mov mov lret into or rclb push push ficompl adc or sbb adc pop xchg push or dec lret lret aad dec xchg mov mov int3 push or pop pop rcrl xchg push or dec lret lret fcoms pop adc push xchg dec into pop push push adc lcall push pop xchg push or lret lret lret aad or ficoml dec xchg mov mov int3 lcall push or sbb adc pop xchg push or dec lret lret aad dec xchg mov mov int3 push or pop mov dec xchg mov mov int3 lcall push or sbb adc pop xchg push or dec lret lret aad dec xchg mov mov int3 push or pop pop cltd fcoml push or lret lret lret aad or fstl push push push rcrl lret lret rcl push push nop push (bad) push or push push push push pop dec push push pop dec sbb sbb or adc push dec fstp popf rcr dec adc adc push dec xchg mov mov lret (bad) push push push pop pop mov pop xchg push or mov lret aad or sbb push push dec fst adc xchg push or mov lret aad or sbb or xchg sbb push lcall push pop xchg push or mov lret aad or adc push fisttpll push rcr rorb adc push pop sbb mov cltd mov nop push or nop nop push push pop adc rcll lcall push fisttpll lcall push pop xchg push or lret lret lret aad or fstl push push push rcrl lret lret rcl push push nop push (bad) push or or lret lret aad dec xchg mov mov int3 push sbb (bad) push aad or int push mov lret int or sbb push push push push adc ror sbb push pop sbb pop pop rorl xchg lcall push push push fimull rorl dec int3 xchg xchg xchg adc push push push aad push push or push push push aad push push or push push pop push push aad push push push pop push push rclb push rcrl lret lret rcl push push nop push (bad) push or pop xchg push mov dec lret lret aad push adc nop push pop int3 pop xchg push nop nop push ficoml adc push mov dec lret lret aad or lret ficom push pop pop mov sbb rcll xchg push mov lret lret lret fcoms fistl push xchg dec into pop push push adc lcall push pop xchg push mov dec lret lret aad or lret ficom push pop xchg push mov lret lret lret lret ficom push pop push ficompl push push xchg dec into pop push push adc mov lret into push pop xchg push mov dec lret lret aad or fcomps rcrl lret into pop ficom xchg or dec adc push adc xchg or lret int3 push rcrl lret into push dec into pop push xchg pop ficom xchg push mov lret lret lret fcoms fistl push xchg dec into pop push push adc lcall push pop xchg push mov dec lret lret aad or lret int aam push push push pop xchg push mov lret lret lret fcoms pop adc push xchg dec into pop push push adc lcall push pop xchg push mov dec lret lret aad or lret int rcll push push pop xchg push mov lret lret lret fcoms pop adc push xchg dec into pop push push adc lcall push pop xchg push mov dec lret lret aad or lret int3 rcll xchg push mov lret lret lret fcoms fstl push xchg dec into pop push push adc lcall push pop xchg push mov dec lret lret aad or fstl push push push rcrl lret lret rcl push push nop push (bad) push or or lret lret aad dec xchg cltd xchg sbb sbb xchg sbb adc fwait or int push sbbb pop cwtl mov cmp mov mov cmp lcall mov xchg mov sbb lcall sub sub xor movsl and xor stos lcall adc popf adc cltd test sub push bound push xor dec dec js pop das inc pop insb cmp xchg push push push nop aam push mov or push mov inc add mov in gs xor sub call pop mov inc mov or add add mov movsb mov sub addr16 xor roll adc pop or (bad) xchg mov mov adc rcrl push rcll cwtl inc outsl push inc mov xchg sub mov xor jo inc inc xor cmp mov loop dec (bad) and pop mov sub fcmovu mov ret fcomps mov (bad) repnz ror cmpsb in xchg pop xor push stos push mov xor call push aas repnz cmp inc das inc dec inc inc push pop pop xor stos xor cmpsb movsb mov xor and mov mov mov cltd daa sbb cwtl mov inc int inc dec sub mov mov sub add frstor aas loop push xor xor sub jmp mov xchg mov sbb mov cltd mov nop push or mov pushw ss inc mov or repnz and lcall push aam adc push stc cltd sbb pop pop rcll lcall (bad) sahf aam insb int3 and mov and push xchg fnstcw lret lods incb xchg inc arpl (bad) es pop out jp pop push popf scas enter fcos incb xchg repnz and popa addr16 dec enter xchg and arpl lcall inc stc cwtl push xchg pop ficom sbb fstpt call in dec jns (bad) (bad) call dec cmpsl (bad) dec ret jmp aaa jmp dec les insl dec pop inc mov inc dec cmpsb cmp and aad inc inc and lcall repnz cmp mov and xchg hlt cmpsb (bad) cmpsl push pop data16 loop xrelease fimul in das dec push adc xor pslld xor jle xchg dec pushf push cld dec test (bad) clc xchg mov (bad) (bad) inc sahf popf enter test clc xchg xchg aas dec lods out int push sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb adc cld inc imul ss inc xor push mov mov test lret inc mov pop mov xchg and int3 test shlb sub cmpsl xchg inc lods sub sub les (bad) push bound adcw sbb ret fistl mov lret or inc xor and mov adc popf (bad) push xchg pop sarl or jae and cmpsb sub test mov test mov sub push mov xchg inc jp lods int es inc inc hlt adcl movsb cmpsb test xchg sbb lea or mov sbb clc cltd adc aam inc (bad) (bad) inc pop fwait adc mov mov inc je inc je adc addr16 fs movb cmp xchg cmpsb mov (bad) (bad) xchg mov and mov sub jb adc mov cmp push mov push je (bad) lret (bad) call daa lods and mov adc dec imul test test xchg xchg adc and scas repnz das jb mov dec in shrb pop mov mov push inc xchg add (bad) fdivp repnz mov dec rcrb and dec jmp call dec into call in mov enter sub sub mov in out test out in push sub sub sub sub outsb (bad) in out jmp imul dec mov sub push es es out dec xchg push lret inc push or xchg imul or dec sub sub push or sub pop or jmp cs imul push sub sub pop sub enter scas dec call out or dec push sub lret mov inc in ljmp ljmp cs imul mov cs insb in scas in call cmpsb sub sub dec inc out lods imul stos test mov lret or (bad) dec and in in out sub add cs lods ljmp gs dec inc push or or jmp es (bad) push gs mov test sub sub outsl push sub (bad) jmp sub into in in in mov mov sub sub dec test mov inc in mov mov sub jmp (bad) or sub enter call push in push inc movsl in jmp or sub call sub dec sub es test (bad) ljmp sub push int outsl sub out dec sub test sub test sub sub test imul sub jmp sub int test mov call sub sub sub test in sub sub imul test sub test dec stos sub in int test sub in insb enter sub sub dec sub sub sub test mov dec sub or or sub or dec sub sub sub dec stos sub lret dec ljmp sub sub mov leave dec push sub mov or test sub sub es dec lea sub or test sub sub call dec test sub mov mov iret or or sub sub dec push sub mov addr16 test or in lea sub imul test push sub scas lods or dec stos sub int3 mov outsl push or leave push jmp sub dec or test ljmp sub sub dec push sub push (bad) daa or test call lods lea sub imul test insl sub dec dec insb out lea push enter sub imul test dec dec or sub leave in dec or sub and leave sub out or or test sub vpsubsw mov dec and and mov mov cmp stos xor mov lret sbb push cltd int fcmovbe adc push push or xchg nop aam aad (bad) push xchg dec shl mov pop bound out mov mov mov hlt out xchg bound mov (bad) mov into xchg int3 stos mov pusha loopne xchg stos push enter xor inc xchg sub or test xchg movsb and xchg inc fs out mov xor test xchg xchg les add arpl xor xchg hlt push push mov push inc xchg cli inc sbbl push mov mov sbb or mov mov mov cmp mov dec imul lods imul test push dec dec push jp sub das das dec cmp push das mov adc lods ljmp das xor mov stc adc push xchg inc enter fs hlt movsl cmp xor addr16 xchg xchg inc call pop dec popf rclb or push nop nop push fcmovnbe lcall push mov mov in xchg out (bad) les enter or lea stos ljmp push lods lods rclb mov and and rclb aaa dec inc inc xor mov xchg dec or loop out nop into insb mov (bad) cwtl test mov rcl mov dec pop dec dec dec dec push inc loop inc dec insw dec inc inc inc dec inc imul mov cmpsb sbb or (bad) mov jb es ret mov les and sbb imul leave or es push ss inc push dec inc inc push inc cmpsl sbb movsb mov pop xchg pushf xor inc xor test cmpsb scas int3 int3 lock inc test xchg rorl into sbb push xchg sbb or and cmp push pop les mov push inc loop pop adc sub popf push pop movsb (bad) dec sub outsb xchg scas test enter dec pushf (bad) xor cmpsl icebp xor rcrb push push jge sub loope mov push int3 vpsubsw aaa movsl mov mov (bad) push jl dec and push imul xor push bound inc and push xchg pop or and movsb movsb adc adc int3 push movsb inc data16 xor bound lret or sbb sub fbld xor mov enter dec sub inc sbb pop loop push cld dec or out dec push inc fs (bad) pop jl test int3 out loope xor inc test dec lret cmpsb xor cmp mov sbb pop mov inc and lret cmp dec mov ljmp add mov dec xor xor sbb mov das mov adc call inc inc and sbb adc or mov adc and sub and arpl jns jo xchg inc mov and icebp sub or pushf inc push xor mov cltd loopne sarl inc repnz mov inc mov inc inc mov mov and xor test and sub lret jns inc dec insl sbb push jno cmp pop jp insb loop xor dec push dec sub dec dec les jae lcall mov mov popa mov sub mov jae lea pushf push adc movsb mov bound xchg test (bad) movsb ret adc icebp xor mov jg daa mov inc imul jbe icebp sub loop dec out inc inc jns inc icebp and push adc cwtl nop xchg mov mov mov and inc call hlt addl push (bad) jecxz test mov inc mov loop push incb add jg xchg dec icebp sub (bad) (bad) (bad) (bad) (bad) dec aam pusha cmp add xor and sbb and mov test and test stos movsb cwtl cwtl and and and lods sub mov mov test mov and stos and mov and and sub cmpsb mov movsl and mov fwait and xor mov test mov movsl cltd mov mov sub sbb sub cmpsl sub test stos movsb cwtl cwtl and sbb and es sbb sbb mov test mov test mov sbb and and mov sub and cltd stos test cltd stos cmpsb fwait daa mov mov mov cwtl sub fwait and pop mov test and cwtl mov sbb sub mov mov lcall fwait and mov movsl and mov sub test mov xor stos xor mov cmp mov and xor test sbb cmpsb mov mov xchg mov sub xchg lods sub and and movsb mov cwtl mov cmp sub mov aaa stos and xor mov test sub mov mov pop cwtl mov mov cmp mov xor mov mov test mov movsb sub xor sbb sbb cmp sub ss cmp sub stos sub mov test mov fwait sbb sub sub xor mov and sub mov mov sub mov mov cmp xor cmp adc sub sub sub mov and stos test lods xor sub cmpsb and sub movsb and sub mov test mov cmp lcall stos test test mov cwtl movsl movsb mov movsb mov sub mov mov and mov stos mov stos cmpsb mov sbb mov mov cmp sbb mov cltd sub test pop xchg cwtl cmpsb cmp sbb mov test mov sbb mov sbb cwtl es sub xor mov xchg cwtl mov mov xor mov mov mov movsb lods and lods sbb mov mov mov sub mov lods test and cmpsb sub cmp movsb stos test test mov and mov cmpsl mov cmpsl mov sub xor mov sbb mov mov sub cmp and mov xchg lcall mov mov cmpsb and pop xchg xchg cltd cmp stos test test mov movsb mov sub mov sub xor mov sub and mov sub stos mov pop stos test mov test cltd aaa mov xor mov cmp mov and aaa mov and mov movsb lods aaa mov cmp mov sub lods ss sub movsl mov pushf and mov sub mov sbb cmp sbb sbb mov mov mov sub mov stos sbb xchg cwtl mov test daa sub xchg xchg xchg cmpsb sub and stos test cmpsb sub cmp and aaa mov mov lods and mov sub xor mov xor mov sbb mov xchg cwtl mov cmpsb mov mov cwtl sub xor mov xchg cwtl mov sbb mov sub xor mov xchg cwtl mov sbb mov xchg cwtl mov cmp mov cmpsb mov sbb mov mov mov mov xor movsb mov mov mov mov xor movsl xor cmp sub mov mov and sub mov aaa test cmp mov sub sub and xor cmp test mov sbb daa and mov xor mov cmpsl xor mov cmp stos mov xchg mov cmpsl xor mov add mov and cmpsb cmp and mov mov test and test stos movsb cwtl cwtl and sub mov sub adc sub enter push xchg sub sub dec insl sub popf push pop movsb (bad) dec xchg jmp push sub test xchg add dec (bad) rcrb xor inc das adc add mov sub xor cmp lods adc or pop xchg movsb shrl sbb xor int3 stos push out in imul sub test mov sub and mov mov ss test rclb ja (bad) es xchg push push push or xchg adc adc adc aam mov (bad) pop pop rcll xchg sahf push or mov xchg aad mov mov push pushf mov test shlb data16 hlt gs adc and mov push push push xchg xchg add cmpsl push inc push aaa cmpsl je inc xchg in test hlt sbb adc dec sbb adc push xchg adc xchg popf pop popf push fwait xor data16 and push je adc adc sub lcall inc arpl sbb dec push adc push push xchg or mov mov adc inc add xlat xor cmpsl jae inc bound addl add sbb push push dec xor bound push dec movsl and sub movsb imul sub lret sub data16 xchg xchg pusha lcall sub aaa mov dec push gs push push ja das cltd xchg sbb add push and ficompl lods out and adc jno sbb movsl sbb int3 (bad) xor xchg push dec lea mov pop or rorl cmpsb xchg adc movsl movsl push adc mov mov jae test and popl int adc dec dec inc dec xor jae insl dec ja adcl movsl adc push je sbb rcl or cwtl xchg push cld test scas ret (bad) and imul cmpsl adc call push xor fsts inc push inc inc dec adc sbb xchg inc mov daa jbe sub and sub xor and (bad) nop into jo mov stos mov xchg arpl xor cltd sbb les and fstps xchg xchg or cli inc lret jnp xor inc xor jp jbe pusha rorb cld dec lods fnop test cmc cld dec push sahf nop mov pop pop outsl dec dec xor dec dec inc inc dec addr16 ja cmp roll push outsl dec jbe das js arpl rcrb push pop push cltd sbb les sbb xchg (bad) mov mov mov xor cmpl sbb leave es enter sub arpl cmp lea xchg test mov clc pushf push bound loop dec and pop repnz daa pop test dec addr16 fs inc dec je push inc (bad) cltd mov mov cmp cmpsb and jno sub adc push mov cmp dec loop data16 xchg cwtl dec in fcmovbe loope pushf xchg inc fs push ret xor push (bad) and xor movsb rorb rorb dec sbb les insb leave adc mov (bad) pop aad dec dec nop fldcw and mov pop js adc (bad) (bad) (bad) incb xorl xchg push out je xor cmp xor lret xor mov xchg pop push sub in mov daa xchg test js mov call mov cwtl pop mov popf pop adc call inc inc (bad) cld lea loope and aas cld dec cs push and bound dec icebp xor fs dec xor loop xor repnz cmp decl arpl (bad) and cltd popf mov cwtl push mov push lods xlat cld dec push pushf dec cmpsb pushf dec call adc xor push cmp mov into (bad) and xor mov js nop jno mov jmp push inc inc inc inc das push push imul push inc push inc inc push push cmp dec je cmp dec popa dec inc jo push inc push das xor imul push push push dec je cmp dec push xor push inc dec push inc dec inc dec xor inc dec push das xor inc inc push push jae inc inc inc dec pop data16 push pop addr16 js jbe inc xor push sub das das push push inc inc push das das das xor inc imul dec push xor jne inc jbe fs jo data16 das xor push push cmp dec pop inc push xor jp imul inc dec sub inc xor das das xor xor push das das das sub jae push push cmp inc sub push inc das xor bound ss das sub inc dec push push das das das outsl insl inc jbe das xor inc xor xor inc dec jp xor push xor imul push das js aaa js xor xor das xor inc imul push das sub dec push inc das das das das imul das push push push inc dec cmp xor dec insb jo jbe das imul xor das das das ss dec jb das sub fs push push push inc cmp das das push dec fs xor inc inc inc inc das inc push inc inc push push inc inc ja sub data16 das das xor inc jp jae push push inc cmp das das push insb inc das push push ja js sub data16 das das xor dec das push sub addr16 js jbe inc xor push sub das push push inc inc push das das das xor inc imul dec push xor jne inc jbe fs jo jbe das das xor push js xor push das das das sub popa jbe das imul push push dec dec xor inc inc das inc pop jns push push inc jno inc gs push pop inc push push push cmp dec dec inc inc inc push jno inc inc das js pop imul push pop arpl push jae dec dec cmp imul dec push insb jo insb inc insl dec je xor pop xor jno xor addr16 inc aaa inc inc dec das dec push insb jo push jae dec push dec das inc outsl inc das xor push push outsl popa inc push jno push inc jb push outsl inc sub imul push inc aaa inc inc insb imul cmp aaa dec xor imul jno inc inc jo push insb push dec pop das push push push inc ja xor push push push push push cmp dec dec inc inc dec insb fs dec je imul push push das sub dec push inc das das das das imul das push push push inc push dec imul das das imul xor das das das ss pop jo das sub addr16 inc inc dec push fs inc dec xor inc dec inc aaa inc inc dec das dec xor jno push insb jo inc insb das xor push outsl xor inc inc das inc popa inc inc push push inc dec pop data16 push pop imul xor push sub das push push inc inc push das das das xor inc imul dec push xor jne dec pop das fs jo pushw das xor push xor dec inc push das das das sub popa data16 das push push push push push cmp dec dec inc inc dec insb fs dec je imul xor xor push das sub jae push push cmp and mov mov sub and and sbb movsb mov movsb mov and xchg cwtl mov cmp xchg mov dec stos mov mov xor jns cmp inc test or xor pushf fucom rcr gs inc dec lods mov dec sbb inc test mov push push xor jne inc jbe fs jo data16 das xor cmpsb and sub pop mov bound mov les cld enter xchg loop xor mov mov or mov out (bad) and jmp mov add cwtl pop lock pushaw call dec imul push pop jae dec stos cs adc xor and jb inc push repz xchg adc xchg xchg add or push fs push and stos imul mov or lret xor mov mov sub stos mov mov movsb dec dec das push clc xchg push (bad) jmp cmp das dec je js xor push adc cwtl pop mov mov imul gs push pop cmpsl sbb cmp xor pop gs lods and mov in or sub gs mov inc test adc push pushw je inc je dec inc dec push dec das inc outsl inc dec pop jae pop push outsl popa inc push jno and push mov arpl fisttpl lock in and mov movsl lods pop rcrb xchg push aam outsl dec xor dec arpl jp lcall jmp push inc mov mov enter loope push addr16 inc inc dec icebp and mov pop and jb sbb aaa loop popa stc lcall test push mov dec dec cmp repnz xor or lahf decl push push and lea pop movsb lods in aad mov push dec ss pop push (bad) into fbld imul jp sbb bound ret arpl and pushf push fwait and push adc adc push nop xchg pushf xchg or adc push fs pop gs inc jne push inc and fcoml ss push xor lret fwait mov xchg xor ret (bad) push or jnp mov jnp stos mov mov and xchg lods sub jne add and xor jne adc ret xchg push adc sub pusha mov adc imul into xchg mov xchg pushf leave pusha ror or xor (bad) arpl jae or (bad) cmp jp test add xchg or add mov es das push push sbb lcall push push fs push dec data16 sbb pushf dec ficoml cmp inc outsl mov dec inc and and mov movsb test xor loop inc mov adc push and mov lret in mov repnz cmp mov pop adc es jb sub mov lds sub imul mov cs or ret xchg fidivl and gs inc ja or jmp repz repnz inc dec dec ja mov cmp or cltd adc jo and fisub cmpsl mov inc xor nop pop pop rcr int ss es inc test nop fidivrl (bad) fadd mov mov sub and pop and cmp imul dec or inc adc daa push fcomps mov and xchg xchg push or mov sbb xor sub bound dec and xchg mov adc lret xor es movsl sub sbb stos daa clc mov xchg xor stos sbb lret scas repnz mov imul lds pop cld dec jmp pop cld dec dec mov fs je mov xchg xor lret das push icebp sub mov inc xor add stc cwtl push rclb bound mov sbb (bad) (bad) (bad) push and mov inc enter ss arpl adc adc and inc test out xor adc push xchg and movsb movsl adc adc and testb movsl xchg push mov adc adc fs repz movsl push and repnz movsl xchg push mov adc adc add mov movsb mov cmc push xchg adc movsb push and (bad) repnz test xchg push je adc mov inc cmpsl xchg push push test testb movsl xchg push mov adc adc add testb repz xor and and push divb cmc add divb adc add xchg inc add inc adc test inc addr16 testb movsl xchg push mov adc adc add testb repz xor and and push divb add divb adc add xchg inc add inc inc jne xor xchg adc push movsb push daa pop je je adc and mov push push adc movsb push adc repnz xchg xor je xor (bad) inc and jb xor xchg adc testb jae adc xchg inc push xchg in ss je push movsl push push mov fs div push je adc hlt aam cmpsl je adc inc hlt cmc addr16 les xchg test inc testb fs lds adc mov xor jbe les adc arpl in adc adc addr16 ret push arpl xchg push mov adc adc adc in xor xchg jae jbe in aam adc xor ret xor add cmc gs addr16 jne and adc movsl push addl pop (bad) repz test addr16 adc test push push push xchg adc les xchg xor notb and xchg add repnz hlt addr16 and xchg jb repz push movsl xchg addl (bad) test xchg fs jbe adc test push push je adc push aad adc jbe push adc aam xor xor xchg xchg repnz adc test push push push repz xchg inc and inc hlt ss and add adc testb je xor cmpsl jae xor je xchg adc adc add data16 inc adc xor es add xor test xchg fs xchg (bad) aam arpl push je adc adc xor test divl adc xchg fs push ret xor xchg add adc repz testl adc adc xchg adc daa movsb xor je adc push add and notb cmc adcl inc gs addr16 add mov jne inc ss je movsb and inc add mov test inc ss cmpsb inc inc movsb cmpsb inc push cmpsb inc gs inc je cmpsb inc test xchg je xchg daa xchg xor out mov xchg je push push xchg push adc xchg hlt addr16 daa test test data16 xchg je push push xchg in repz hlt addr16 es xchg je push push xchg adc addr16 and roll xchg je push push xchg addr16 adc xor data16 xchg je push push jne adc xchg hlt addr16 pop add test data16 xchg je push push test repz hlt addr16 adc aad es push je adc test push xchg repnz xchg xchg and es hlt mov (bad) add jae repz adc repz xchg xor test test push jae adc jne data16 add jne xchg inc jne les fs mov adc xor inc jbe push cmc push push adc hlt xchg movsb and xchg add push xchg adc inc fs notb and data16 add gs mov xchg mov and rcll and inc push adc inc push adc adc xchg adc mov xor xchg xchg xchg xchg xchg xchg xchg xchg xchg jne arpl testl test test daa adc xchg adc push addr16 xchg xchg jne adc divl out jne movsl inc xchg movsb test je test test adc adc xchg arpl xchg arpl addl adc addr16 mov push add mov adc in gs push jbe and test push push push xchg adc push mov hlt gs and jae mov inc inc addr16 fs hlt gs xchg adc je push mov repz and jbe and cmpsb and gs adc je adc movsl es test ja adc adc movsl xchg je push xor xlat xor gs in push fs mulw rcll sub inc dec push inc push stos xchg mov inc mov or inc lods mov and mov xor mov push dec adc mov repnz and sbb rclb lcall lock mov mov inc inc loop das mov nop aam push push fxch lret aam xor sbb sub sbb sbb and sub pop (bad) jmp addr16 clc nop (bad) bound mov mov pop adc out sahf into mov jnp ret pop cmp and push das push pop loopne in pop pop cmc fs mov pushf pushaw lods sahf lods pusha lcall adcl pop push sbb nop aam rcrb aam mov sbb mov add call les xchg mov cs lods mov inc dec mov mov and cmpsl push push or sbb faddl xchg js nop enter addr16 lods mov out lret test xchg (bad) aam pop cwtl mov mov (bad) into mov test pushf (bad) xchg pushf test lret addr16 and mov mov add push adc nop push fcmovnbe inc mov fs loop mov (bad) ret loop scas fimul adc sub (bad) out sub adc and lcall inc cmpsl jae xor je enter into xchg and or and xchg pop dec outsb mov (bad) into xchg nop mov xor popa pop dec lcall fstl adc mov mov and and xor enter mov push into push out into stos push mov sub mov cltd adc adc cltd adc cltd adc pop pop rorl int3 (bad) lock gs push xchg push adc mov jecxz (bad) and and inc ret adc lods mov pop mov lcall adc jg inc inc jno or adc jne dec insl or inc data16 xor enter test dec sub mov dec in jg xor inc push dec je push dec inc addr16 sub adc fxch cmp inc dec and test insb mov push lock stos lods pushf mov jb pushf int3 aam push adc dec mov sub sub rcll push inc ficoml movsb mov sbb or dec test push cmp dec xor lods dec dec xor inc jno jns addr16 xor (bad) cmpsl xchg out jne movsl inc xchg movsb mov xchg movsl pop shll outsl push or push mov xor mov xchg push js push (bad) sbb es and mov in cltd push mov es xor jmp push ficompl push xchg cltd ficoml dec xor mov nop cltd xchg into sbb addr16 lcall dec les (bad) lret fiadd cmp mov dec or push inc adc adc sub les and stos int3 mov sub sub mov inc xor sbb das aaa das loop push rclb push pop dec (bad) xor sbb cmpsb sbb dec mov rcrb jecxz (bad) dec vpaddd adc icebp pop mov (bad) xchg cmc dec call push push bound sarl sub int sub dec jnp into and inc movb cmpsl xor insl inc sub inc js rorb andl inc rcl dec mov dec push (bad) jmp pop inc clc xchg cwtl jne mov test into lods das les divb fs addl sbb stc adc cmp mov daa lcall and repz sub (bad) jb fisubr and lret cmp lcall mov enter enter nop dec inc movsb popa adc inc enter push test mov les and lret adc jo ret adc in outsl pop imul dec lcall (bad) ljmp xchg sbb loop inc icebp sub adc popf inc or cltd lret icebp sub cld dec test mov xor mov inc adc sub or aas adc cld dec test mov mov mov int3 push rclb xchg xchg push push push push fwait rcl push push push push push dec push rorb push or lret int3 push or cltd xchg rclb push push dec lret into push dec ficom sbb aad push push adc push nop push push sahf xchg fwait pop aad lcall lret (bad) adc nop push dec xchg mov sbb rcrl lret into push dec ficom push dec int3 (bad) push sbb mov lret int3 aad push dec push or xchg xchg rcrl adc dec or aad pop dec push sbb pop dec or lret int3 aad pop xchg push sbb (bad) push push push ficoml int3 push or mov sbb or sbb push cltd sbb adc adc or lret lret lret int3 (bad) push or adc push push or popf rclb pushf nop pop xchg adc rclb push xchg rorl xchg push push push push adc lcall fwait rcrb xchg xchg aad mov pop or aam dec push aam adc nop push push adc push pop pop rcr int (bad) adc int adc or cltd mov push dec push aam dec push xchg cwtl mov adc or sbb rclb rcrl rclb or adc push dec mov fstps sahf mov xchg sbb push push fst push (bad) rcrb xchg pop pushf fxch fst push fwait int3 push mov nop pushf push push adc xchg popf mov pop or aam dec push rcrb dec rcrl mov push push push push or xchg nop rclb rcrl pop rcrl sbb rcll adc rclb rcll int3 push mov xchg lret int3 aad dec int3 (bad) push or push rcrl int3 (bad) push or cltd cltd int mov dec rcl adc push xchg cltd lcall xchg push or push cwtl mov adc or sbb adc (bad) push sbb pop push xchg mov adc nop push adc dec sahf push rcll lcall rclb nop push adc sahf adc fstps sahf push nop mov adc nop push sbb nop dec aad rcrl push push push xchg rorl lea mov nop pushf push push adc cwtl pop ficoml sbb rclb adc push pop sbb rcll ficoml push push mov or adc nop push adc mov rcll adc pop xchg popf (bad) push pop xchg push push adc ficom adc push push push push push adc nop push push adc rcll fsts sbb pop mov push adc nop push push adc xchg or dec adc sbb push mov (bad) push or push adc pop pop aam popf pop xchg push lea ficom int3 xchg push adc rcrb push push adc push push nop nop push push adc or sbb rclb push push pop adc mov pop xchg popf fstps fnop push pop dec adc ficom cltd rclb pop xchg adc popf int adc nop push mov xchg adc dec popf fcmovu xchg nop aam pop push push push pop rclb rclb aam or push mov xchg adc sbb fxch adc adc xchg xchg xchg dec nop pop sbb lret lret cltd aad sbb adc pop rclb adc xchg or lret lret lret sbb push push push push cltd pop int3 push rorl rcll xchg rcrb or pop push push sbb dec adc sbb push sbb fnop push push push rcll fcom or xchg cltd push adc fstl cltd cltd pop push xchg cltd lcall cltd xchg push pop push push sbb xchg push rcrb push push sbb sbb ficoml push sbb sbb rcll rclb lcall mov push or adc dec pop pop adc (bad) dec push fstl mov fisttpll dec push pop xchg adc push pop ror int ror pop or int adc rorb fst (bad) adc int3 fcmovne popf (bad) sbb rcrl lcall pop rclb pop adc push adc pop fcmovbe or or sbb (bad) pop int3 int3 into adc rcrl push mov into push (bad) rcrb (bad) aam push mov xchg mov push dec aam sbb or lret lret cltd lcall rclb pop push push or mov lret lret fimull pop dec adc fstps push popf rorb push adc push adc sbb sbb rcrb popf fsts ficoml push push or pop sahf pop rclb push xchg rorl dec pop push cltd push adc cltd sbb rclb push or adc int push push push push push sbb pop xchg adc push mov xchg push fwait or push rcll push adc cltd lcall adc adc cltd adc rclb pop adc lret push cltd rclb dec push push sbb push rcll push push push mov sbb rcrb xchg xchg mov push mov mov int sbb rcrl cltd cltd rcrb pop mov dec and sub xor sbb mov mov mov test xchg scas and mov test cmpsl xor stos sbb xchg pushf test mov mov mov mov int push pop imul dec push push cmp dec inc inc inc dec and push jae mov stos mov bound lock jno dec mov mov or les stos test (bad) das xor push outsl repnz xor sub (bad) shll adc dec xchg enter mov lods in in aam (bad) repnz xchg stos (bad) mov scas aam inc push inc add inc stos xor jp cmp sbb xchg aad mov mov movsb mov push pop pop rcr int (bad) adc adc or cltd test and xor out das inc push push inc and xor push cmp inc xchg pushf outsb xchg out ror (bad) lods mov out push out lcall loop test inc arpl inc adc xchg mov xor dec and sub dec cld test sub ret nop fxam xchg xor out inc imul cmpsl js or and dec adc xchg rolb adc popa sbb mov test adc test or and mov xor push bound enter test rol inc push ss and and imul jbe ja push inc xchg push sbb mov adc pop hlt inc push xchg insb dec test sub jbe test dec lcall mov lret pop ret xchg adc sarb push push nop mov xor je xor xor cmp sub mov mov cwtl and stos mov mov (bad) rorl or mov sub xchg xchg sbb push push push dec nop xchg test sbb mov jo jo bound insb (bad) loopne bound sub into out adc sub or out mov nop out (bad) es leave in imul test aad xor popa xor (bad) rcrb insb lea imul xchg movsb hlt in cwtl xchg adc add push ja in push xchg les xchg mov adc inc fs testl mov push je xor repz inc adc inc test mov cmpsl xor inc push fs xchg xor repnz test cs xor and push sbb (bad) pop and lret xor or and dec lods daa mov dec adc mov ret push lea adc pop xchg push sbb in test xor mov (bad) jae sub mov xchg das inc xchg and add test inc adc mov jmp jl push add loop jns pop mov (bad) mov push movsb ss ja mov les outsb repnz jg mov mov or push orl (bad) sbb push adc xchg inc sbb push aad int3 out adc dec adc into sbb aad lcall aam push inc in outsb data16 (bad) mov lea and adc dec lds (bad) mov or xor mov add lods int sub gs xchg pop inc arpl and inc cmpsb fcoms es and xor dec sub mov in inc push adc js cltd loop outsl adc and stos test push mov push rolb imul dec cmp addr16 in cmp adc push insb adc xchg nop movsb jns push ja lods mov push pop (bad) rol test aaa sub mov xchg mov and call push popa mov sbb push adc rclb stos xlat mov inc lret das inc dec dec mov sbb lods lea ret cwtl lods cmp xchg pushf jo mov mov mov xchg dec ret adc cltd adc ficoml loop das icebp xor nop pop in xor enter jno sub xchg jo out lcall fsts xchg shll mov pushf aaa and sub dec sub pop dec ss xor xchg adc adc pop adc inc mov mov dec sub mov enter test lods push and mov xor or daa mov dec inc push push loop ja leave xchg sbb push adc sbb cmpsb mov jp xor mov fadds cmc xchg lahf xchg dec adc enter inc sub push repnz mov add in outsb (bad) in cmp mov jl push or shll cmpsl bound dec dec or mov imul enter in sub in in call push sub sub das push sub pop sub dec vpmulhw out dec inc in mov inc call sub imul iret or sub dec (bad) lret and jmp or or stos pop sub cs imul in into in cs scas push sub sub push dec (bad) push test out inc call sub imul test insl sub (bad) out movsl out in and into push leave lret mov xchg int3 in sub sub out mov jmp or in in int in inc or xchg mov dec and dec sub test in mov sub or add in mov in mov or leave gs in push imul mov imul or out lods push out sub pop sub int3 int push (bad) gs mov es jmp sub out enter push test or in sub cs ljmp int3 mov sub test mov movsl out or call or sub test daa daa sub dec call sub sub or sub dec dec sub or test int3 test sub sub dec sub xchg dec enter sub dec sub sub sub cs call push in mov movsl out or sub test cs sub int push or int3 outsl inc out dec leave in daa sub mov sub sub or imul or sub sub sub push sub sub in lods push mov sub or jmp lret mov dec daa or lret or cs insb in ljmp dec push or leave jmp in das dec test in ljmp sub push mov sub sub or test daa sub test (bad) and sub inc sub or mov sub sub sub imul (bad) or and dec insb call or push cmpsl or add sub or mov or imul or sub int3 lods outsl or push or or enter sub enter sub sub push out push in outsb ljmp insl out mov sub mov mov dec lret or sub xchg sub push sub sub in or cmpsb sub mov or sub or out in sub enter lret sub sub lret vpmulhw dec dec push (bad) or in iret or sub es push or push data16 sub sub das or mov das sub enter in ljmp sub int3 enter call sub sub sub or int into in sub inc dec imul inc or push dec call or sub dec jmp es sub dec dec daa or inc mov push mov mov cs cs lods imul test or test sub ljmp push addr16 lea mov or or or out or push xchg jmp or (bad) sub or sub lret sub in sub dec dec or mov sub sub addr16 push test or mov test or push call or in jmp or ljmp out imul or mov call in in data16 sub leave dec out mov test ljmp mov (bad) ljmp dec lods insl push pop or test sub sub sub sub dec sub jmp sub out jmp imul mov into enter sub sub int sub imul or sub or test ljmp insb in sub insl insl sub insl in sub outsb insl sub outsb in sub data16 call test cs sub push or lods xchg push dec daa or sub das push or mov sub enter inc dec and mov and xor and cmp mov sbb and cmp cmpsl mov dec insb hlt hlt pop dec inc gs push push inc dec adc jno adc dec adc das cmp pop sub rol sbb xchg sub ret mov fsts pop pop rcl pop rcrb dec mov lods data16 mov mov xchg mov fsubrp pop pop pop bound pop push push dec push push xor xor dec addr16 inc inc inc inc das xor inc das dec push insb xlat sbb lret fimul push push adc dec lret push nop push sbb enter addr16 movl inc icebp and xchg loope fldcw xchg inc int popa cmp rcll int mov or iret xchg push lea lret int push shrl and and mov pushf aaa and and mov mov mov inc inc xor cltd adc pop lock xchg popa and in mov adc or (bad) or sub dec inc cmp dec inc mov xchg and sbb and xchg pop pop rcr aad les inc sbb xchg mov addl push int es movsb sbb cmp enter aad dec inc xor push inc aaa pop dec ja imul inc inc dec dec dec gs imul dec inc push jp push arpl imul and in ljmp push or leave jmp in das push sub out lock mov mov aad aad test sbb lods add sub test add mov mov addr16 push addr16 dec sub adc ret sub or mov sbb loope adc inc mov xchg and xor movsb mov xchg pop arpl test aaa jne adc (bad) cmpsl and repnz mov xor daa movsb test xchg xchg adc adc adc push push mov cwtl mov adc sub mov xor fwait cltd mov les push and loop cmpsb sub or add or js rcrl data16 (bad) icebp movsb sub cmp daa xchg mov or data16 je jg xchg mov mov inc cmp adcl xchg aas mov arpl mov and adc pop inc aaa xor jne lcall or or cmp inc cwtl mov sbb shrb xchg loope (bad) mov lock mov gs arpl nop pop pushf push push pop test bound xchg enter into mov sbb inc stos pop cltd sub (bad) rcrl or int3 in jmp xchg mov lcall jo and sbb inc xchg adc sbb dec or sbb aam xor mov test xchg and popa sbb pushf mov daa xor xor xchg in popa cltd movsl and imul movsb jne inc mov xchg arpl jno mov int inc outsb bound ja stos xchg mov stos dec dec stos cmp jmp adc mov jecxz xchg xchg dec leave cmp xor push jbe popw arpl mov into mov into inc jb and fs adc popa imul repnz and dec outsl dec ja inc adc xchg roll es and sbb dec sub sub mov fs push (bad) hlt das (bad) and das mov loop inc mov inc xchg (bad) in mov sub dec pop adc dec dec (bad) popa inc dec push push dec push xor fs xor inc clc cwtl int (bad) (bad) clc xchg sbb scas or dec push js or dec or (bad) (bad) cld dec es (bad) (bad) clc nop dec mov mov sub pushf mov adc data16 and pop dec dec rcrl mov ja ja dec das pop aaa js dec call mov test xor sbb sbb adc push adc and push gs sbb or inc add push and fwait push xchg loop inc nop leave sbb inc inc es xchg and test nop roll mov lcall imul enter sbb dec adc xchg out xor rcrl clc xchg (bad) mov and fisubl push adc inc add push je xchg adc adc push and test in movsb and fs adc xchg adc xchg testb in fs adc adc cmpsl xchg inc in test xchg mov xchg add adc xchg adc aaa add adc xor adc in fs jbe mov push pop (bad) div push and adc adc arpl adc fs push inc adc adc es jne andl cmpsb aam push addl arpl fs adc pop jne test xor inc adc adc movsb inc and mov es gs adc aaa jne aam andl je push je pop xor inc and mov es and adc adc addl je adc je jne arpl xor adc test daa add push (bad) mov push cmpsb adc je push xchg xor aaa jne arpl arpl inc cmc daa xchg hlt adc inc add roll cmpsb aam and adc add repz movsb inc cmpsl xchg mov adc add jbe push movsl push xchg jbe inc adc xchg xchg adc adc adc xchg inc hlt adc (bad) repnz jecxz je and notb div cmpsb xchg mov adc les xchg mov adc gs cmpsl jae je je push cmpsl je les les test and hlt fs testb testb testb hlt data16 adc and fs add xchg aam gs je push cmpsl je les les test and hlt fs testb testb testb hlt popw xchg adc and fs add xchg aam gs je push hlt adc adc xchg xor push notb je xchg addr16 cmpsl je inc and movsl add addr16 lds je testb testb hlt movsb xor adc add inc jbe je notl push adc xchg add push and test ja hlt adc adc and inc mov add cmc push addl addl inc in fs push fs adc push mov adc test push jbe xchg data16 adc je je adc and push je and (bad) adc adc xor push adc adc aam adc out xorl adc xor push adc adc xchg daa adc mov data16 add es push push je inc push push and movsb xor adc add jne movl jae jbe and and inc les addr16 adc add cmc ja repnz add xor test xchg fs les jbe adc roll xchg in test push push mov test and movsb pop cmpsb hlt aad repnz addr16 repz inc daa and inc xor test xchg and adc test inc pop inc jb test pop xor xchg movsb les adc je je xchg adc adc data16 mov push je push movsl xchg andl repnz arpl (bad) xchg and inc mulb repz jb repnz test jae gs adcl add arpl inc push adc repz mov xor repz test mov adc mov je xchg ja in ss ss adc mov adc test push movsl xchg addl repnz push add and jbe inc fs andl vfmsubadd132pd pop and fs test adc ss adc mov adc xchg and inc push xchg out mov adc xchg adc data16 not adc arpl xchg xor push adc je je xchg adc adc jbe inc push mov adc push je push movsl xchg andl repnz je adc (bad) repnz test cmpsb mull xchg mov adc xor xchg xchg repnz adc test push movsl xchg addl repnz push add and xchg xor adc and and xor test adc hlt rcll test es xchg jae test arpl repnz addl jne out push push movsl xchg addl repnz push add andl (bad) jae addl repnz adc ja push mov push movsl xchg addl repnz push add xchg (bad) repz adc addr16 xor xchg mov and xor adc je cmc cmpsb hlt es adc xchg and mov xor repz rcll mov xor repnz push loop repnz adc cmc test adc inc inc movsl xchg addl repnz push movsl jbe xchg push jbe push push xchg add (bad) xchg push dec and adc adc rcr push push push dec (bad) dec xchg cltd sbb push dec push mov nop fistl xchg fwait rclb pop rorb push ficompl push sbb push mov pop sbb cltd nop xchg dec xchg or push enter mov (bad) or jmp or dec jb xor nop das js ja imul jbe outsl push push dec inc inc adc and mov xchg mov push dec sub test aam push addl arpl mov or inc push inc and adc sub nop push fst xchg push push or rcrl out cwtl fs test mov pop test nop dec pop add jns adc (bad) sub leave in push inc js bound rcrl push hlt and aaa jb mov imul call jmp mov insl dec test jns jp and lret pop xchg or sbb popa fstl mov movsb mov sub inc dec inc and daa sbb mov dec dec rcr pop lret fidiv aam dec lret or dec aaa inc inc jp bound test das fs and mov jl int3 sub test and fs add movsb cmpsb cld dec mov call lret (bad) jmp add dec push dec dec sub fwait cmp cmp cmp mov xor add and lret cmp int rcll jmp cmp mov (bad) mov sahf stos and push and rcrl sbb pushf mov loop lods mov mov and adc mov adc sarl je fs and (bad) adc popf push dec (bad) lcall jg (bad) push mov xor outsb push push xor test in dec enter (bad) out (bad) mov inc inc dec inc ss jno push xor push jp mov push mov test xchg and mov inc and pop rcl adc mov aaa cmpsb test push into in in in mov in mov stos into les inc xor or or inc xchg or sbb push jno cmp xchg mov push jno sub mov imul cmp lock out push mov sbb and lods fisub xor repz cmp mov leave push push aaa js dec push adc inc and push icebp sub jl sub sub pop int3 pop xchg push dec popa inc push gs mov bound clc popf cltd mov mov xchg pop loop les xchg outsb daa es (bad) (bad) daa xor inc pop mov sub push fwait rorl adc push push mov dec lea lea sarl inc (bad) icebp pop lods adc popf ffree scas icebp xor dec push imul sbb movsl loop les adc mov addr16 outsb das les mov sub cmp icebp xor cltd adc scas icebp pop movsb (bad) and pop in dec dec popa les ljmp mov sbb and xchg pusha (bad) (bad) xchg popf xchg frstor adc call mov and test addr16 xor lea mov and sub popa fstps dec or dec ret (bad) (bad) (bad) (bad) (bad) (bad) push xor xchg cld dec or push jns dec outsb inc and test ss mov inc gs adc dec and cltd push inc jb loop push cld dec or daa fs mov les stc push sbb or outsl inc adc decl aaa repz xor pop mov out push xor push loop cmp pop xor sarl enter xchg and jb int3 sub sub je cmc add dec jp xor cmp mov lods xchg inc inc aas (bad) into repz fs faddl and dec jae xor and dec push adc xchg daa adcl sbb xor and pushf ret inc and xchg out out xor sub mov mov clc xchg adc dec dec push push mov xchg frndint inc or test in call test sub dec sub sub lods push sub or sub sub insb out dec sub or or outsb es ljmp sub in jmp sub test test dec in stos ljmp (bad) out scas push (bad) in out (bad) push lods or ljmp push enter push and call push and ljmp out xchg or sub inc sub lods dec sub sub data16 or sub call sub int es mov dec pop or in call dec sub imul in sub leave dec lods push call sub sub cs test in jmp in sub lret stos push out inc outsb test in mov sub push sub int sub or call es jmp mov add inc and jmp push (bad) or sub push gs sub in mov sub or push dec mov dec ljmp in or inc or mov sub imul in push (bad) lret add dec sub and stos pop or leave sub dec sub or inc push out test test sub enter sub outsb call movsl out (bad) sub enter push in out addr16 mov int or sub int3 dec jmp sub or sub sub sub imul lods mov (bad) call mov dec sub sub dec vpminsw dec sub sub imul out sub sub sub sub (bad) out data16 sub addr16 leave sub in call dec dec stos in ljmp or or call lods int3 sub imul push test imul or lea (bad) leave dec stos mov sub out sub leave (bad) imul enter sub das cs (bad) sub dec sub sub sub leave dec in push call lods or test or mov jmp sub test dec sub sub mov imul lret sub sub in mov dec sub sub in or mov or dec dec dec or push call imul int3 lods ljmp stos or lret push xchg into sub call in es or inc or enter out into test data16 mov push lods sub push push leave (bad) outsb gs imul sub sub dec stos in in sub outsb xchg scas into gs imul int3 scas sub sub lret lret or insl outsl or sub inc push lods cs dec lret dec sub out int stos in out push or call enter dec lods push es sub imul jmp or dec stos or lret push xchg into sub jmp dec lods call or sub sub or ljmp ljmp cs das inc insl insb ljmp out dec call in mov push sub in in in imul out stos and out or leave cs enter scas jmp imul sub (bad) or mov (bad) in out (bad) sub sub movsl out sub in call sub pop sub or or mov sub mov sub sub call (bad) out push int3 inc in mov test lea scas or sub sub int test dec in push dec into sub in out test mov inc in dec jmp out dec call movb inc into in (bad) out call add or outsb (bad) in out stos sub sub test mov or or sub dec lods jmp sub add or data16 sub sub out lods in sub test mov in mov ljmp push in or xchg pop sub or sub enter dec vmovaps int3 mov sub es ljmp es or outsb jmp sub or dec and and and cmp mov mov mov and sbb xor sub mov cmp cmp fldl jbe xor push push jbe pop addr16 dec aaa jne inc pop imul inc inc dec push gs cmp inc inc push pop arpl inc push das xor and ret test inc add xchg lret jnp cmp mov push arpl sbb or test (bad) xchg bound shrb pop pop pop into fs data16 es adc sbb sbb xchg stos (bad) and push adc and daa and mov sbb dec mov and inc mov xor xchg in and test cwtl stos cmpsb les and sbb lret mov inc pop jbe mov je (bad) jae (bad) adc repz and adc notb data16 repz gs inc inc add inc push mov jne mov xchg mov xchg lds hlt inc xor adc push test in pop lret lret or sub in les cmp push adc mov adc les (bad) lret stos pop and les xor xchg xor xor jp xchg mov or adc shrb or bound dec sbbl dec pop dec mov sbb sbb cltd mov xchg icebp and adcl dec pushf push test mov ss push inc xor xchg xor push dec push xchg ficoml dec fldenv addr16 dec inc xor inc dec and andl dec push dec adc sbb loop xchg (bad) inc in cmc add xor into ljmp lret sub dec pop jbe cmpsl jbe mov push sbb cwtl fimul xchg inc outsb mov push fs adc push imul arpl push les inc dec xor cmpsb xor mov and mov mov gs xorl and pop fstpl mov pushf mov nop loop fmul outsb lret mov fs stos mov lods mov sbb stos push stos sbb ds loop push adc push mov out pop push push fs push das inc gs cmpsb sub sub sbb mov pop pop pop rcl test xchg into outsb mov mov insb (bad) nop nop es dec into jle push in dec push lahf adc rcl fisub addr16 mov push inc xchg jne inc adc add es data16 movsl cmp cwtl cltd aaa mov xchg dec xor icebp cmp xchg mov sbb pop (bad) lret loop inc adc js push hlt test xchg test mov inc inc xor aaa repz mov and out and xchg mov pushf outsb push xchg test out jmp inc je xor pop lods or and insb dec sub push cmp adc les xor xor test inc xchg inc test xchg pop enter mov sub fs int push dec mov xchg outsl call pop xchg adc int3 mov cmpsl adc jae mov dec scas cwtl outsb xchg nop out imul lahf and lret and popa and adc lds sub mov sub loop data16 dec mov sub fdivs inc xchg push je xchg sarl jg aaa dec ja addr16 push pop adc mov xrelease pop xchg push enter (bad) repz lods pop xchg fwait int3 sahf mov xchg sub test ficom movb sub mov and loop imul mov in dec dec inc adc sbb fsubr and lret in in loop inc xchg push jmp push iret adc adc mov pop dec jae data16 inc inc cmp adc (bad) xor adc adc lea xchg popf mov movsb dec push jmp int3 sub or sbb xchg (bad) mov lret dec dec push cltd adc cmp movsb lret xor iret xchg aad mov data16 cmpsl xchg xchg sub lcall test jmp jmp push aaa and orl clc cwtl pop (bad) and lds (bad) fstpl add test and adc and mov mov and xchg lcall daa jl dec mov sub test push lahf adc das adc mov adc or les push bound inc lods or rcll mov mov sub xchg xor inc mov int mov sub loope sarl cmp add cmp leave xor sarl movsb loope leave fisttpll inc enter dec sbb popf xor push popf push popf or add dec lods pusha mov push lds mov sbb mov inc lods lods add xchg adc in sub inc adc frstor gs (bad) lods adc loope sbb int inc mov inc mov aad test and cmp xchg movsl fldl frstor xor pop int mov and and add lods or inc sub mov movsl cmp pushf fnstsw gs or cltd inc dec leave fisttpll dec lds add adc mov inc lods sbb add loope xor pop flds xor or add and sbb adc mov cmp and lods adc or add cmp add test or add push adc mov add mov fdivrs inc inc add sbb push cmp add xor pusha mov sub in (bad) int xchg sub xor in dec add fldenv xchg dec lds sub adc inc inc or pop xchg sub lods or mov add rcl test movsl add sbb in push cmp add pop pop rcl loope add inc and sbb popf imul rcrl lea rorl cmp fnstcw call adc sub add fldl pop movsl imul inc cmp int lods or inc in popf mov inc cltd fs sub adc mov inc add adc in sub cltd gs adc leave cmp and movsb lods loope pushf leave pusha loope and sbb lea inc inc or pop fnsave int3 int3 loope add pop fnsave or add leave sbb push pop pop pushf mov xor rcll mov or add lods rol or xor or test add int lods sbb pop movsl add inc pop dec add loope fldl2t xchg inc mov mov int xchg fsub dec push push lds push push lds push test in add fsub pop push and cmp fsub pop pop and popa add sbb add and and int sbb cltd leave fnstsw lea movsl sbb adc test test dec add test mov roll adc in roll add inc mov adc adc popa push popf push adc add aad (bad) inc adc add inc mov xor aad movsl dec mov pusha loope xor sub add or or sub or sbb popf cwtl loope add or add or add push inc loopne gs add shll sub cmp mov cltd dec cltd movsb loope xchg imul mov sbb adc pop mov mov inc inc or or or popf add leave add cltd push pop mov push adc xchg fadd pop xor and cmp jmp adc lds int xor cltd cltd adc push xor or fdivrs sub loopne or inc add rcr dec adc inc add mov jmp push or fsubrl add or or cltd mov imul lea dec inc movsl xor pop pusha shll jmp int mov add fldl fisttpll push cmp mov xor popf inc rcr or imul lds xor fldl fisttpll imul rol and movsb lds mov shll xchg popf lea popf inc int cmp or or lods leave push adc lea into push mov (bad) adc lcall nop push push lcall pop xchg dec cltd pop adc pop push pop pop dec adc adc push adc cwtl cltd rcll inc stos iret movsb xchg mov aam (bad) or int3 fwait aad dec pop fwait aam push inc out or in (bad) xchg movsl adc adc push inc sub adc push dec popf rclb pop dec dec (bad) mov rorl adc or aam (bad) xchg or push pop aam xchg xchg sbb mov movaps insb lea call into jmp imul dec cs call sub sub jmp inc sub mov dec or dec or or scas in sub int3 in out in (bad) or data16 push push jb xchg (bad) and mov bound adc ret mov dec add mov ret stos dec mov xor mov pop dec pushf mov xchg dec adc cmp cwtl mov daa sub test loop scas ror nop inc inc popa addr16 das insb dec push inc inc inc data16 xor xor cmp mov nop dec push cltd rclb rclb es adc mov pop jae inc sub out push test push lds adc (bad) jbe sbbl mov mov cltd adc inc data16 test xor sub add add pop sub outsl in xor cmp sbb test and popa popf imul nop mov rcrl or adc mov bound and or pop fstl mov ja push dec das xor inc push das push cmp bound pop inc and mov mov in jbe xor xor dec jae jae dec inc inc inc inc push imul nop lds mov dec into repnz aad rcrl sbb fst shlb jb inc and mov mov pop adc xchg adc xchg push int in xchg dec inc pop push jbe inc and stos sbb inc inc adc mov add adc mov jae gs loop jbe or jp mov adc cmp lcall sbb dec in loop inc xchg cmp inc inc xor and pop orb in lret jp inc das inc mov adc das push xor je inc ret dec jnp arpl stos cmp jg sbb sbb call sub mov or mov into gs in (bad) or inc inc fs insl inc adc add stos mov (bad) lret pop dec imul pushf pop mov arpl cmpsl bound enter jo shlw les inc adc sbb cmp pop cmp aam fs mov es jg scas cwtl outsb xchg mov ret popf adc pop scas and cmpsb jbe push dec inc xor adc mov adc or loope aad mov stos push add inc pop adc dec inc xor sub push in lock mov mov or inc movsl xor pop pusha shlb sbb dec mov xchg aam (bad) jae cmp mov inc cmpsb mov or les cmp sub or pusha leave xchg popf lea popf inc int3 dec push push fs movb aaa ja mov push adc sbb (bad) inc push push xor pop xor daa je lcall inc dec das dec push outsb loop adc mov jbe inc das dec je adc and adc dec xchg mov icebp cmp or mov mov xchg push aaa arpl lods and cmp test ret (bad) xor mov xor mov (bad) dec es mov xor popa mov dec xor jno inc (bad) test addr16 adc dec out xchg int3 xor and lcall les pushw xor in mov xor xor bound adc cwtl push xchg cltd pop adc scas (bad) icebp sbb jle pop bound cwtl fwait movsl dec outsb mov rclb je movsb scas test and sbb lds inc mov or insl lret push ret adc mov sub cltd jg xchg jg cmp xchg sbb mov and xchg sbb mov mov lret in xor adc test stc push mov pop cmp sub sahf xchg adc push dec xchg sub arpl lret push mov dec jbe pop insl push dec inc push mov sub xchg cmp (bad) or jb sbb repz and lahf in inc xor xchg pop mov arpl cmpsb mulb dec dec dec shlb lcall out and push adc cltd jg (bad) mov push push add and (bad) adc sahf mov push adc mov cmp adc mov dec mov aaa inc cld mov dec inc inc outsb inc inc inc inc inc inc inc imul inc inc xor xor inc inc outsl gs jb das xor fs dec je inc inc outsb inc inc inc inc inc inc inc bound insb inc inc xor inc inc inc push pop dec dec das push das jb outsl je inc push cmp dec dec dec das push sub fs inc dec dec dec push imul push jo inc addr16 inc inc inc inc jbe inc dec inc push inc inc inc dec push dec push pop jae dec addr16 sub das dec cmp push push imul inc inc inc inc inc pop xor inc inc dec push inc ss push popa inc inc inc push push push dec push push xor insb cmp pop das jbe das dec cmp pop gs das das cmp dec inc inc inc inc inc das inc pop push inc push push inc dec fs addr16 addr16 inc pop xor inc inc outsl xor outsb das das xor fs push cmp inc push cmp pop dec dec das push das jb pop je inc dec je inc push cmp xor cmp aaa data16 inc inc ja je inc dec inc sub xor xor inc inc outsl imul das jp inc imul imul inc inc inc inc cmp cmp inc inc inc push imul insb pop cmp insb jno xor cmp inc dec jo xor push inc outsl outsl data16 das ja ja bound ja inc popa addr16 push das js xor inc inc inc pop jae xor pop dec inc inc dec push push push inc inc cmp xor push push inc inc pop push bound xor push push inc inc pop dec insb das inc inc jno sub das push das das outsl xor inc inc inc push data16 das ja xor push push inc imul push cmp inc imul inc inc inc inc inc jns dec push imul pop jno cmp push das das push dec push inc dec jae jb insl jbe inc inc dec pop jbe inc outsl push inc inc inc js inc push das js cmp inc inc ss jno gs das push das das imul push dec push outsl push sub ja dec das popa dec js jbe inc inc push dec push inc pop das inc popa jns push push inc das push inc push pop imul sub push je pop arpl inc inc fs dec push sub das das dec das sub outsb push inc dec jae jb insl popa dec inc inc pop addr16 imul outsl imul push jno dec push sub das das pop outsl jae push gs jno inc inc dec pop outsl imul cmp inc push inc dec dec xor jae inc data16 push inc push pop jbe addr16 inc addr16 inc push xor popa addr16 outsl inc inc dec inc inc dec xor push jbe das xor push push inc inc dec push inc inc xor imul push jae push inc inc popa inc inc push push das cmp cmp push das sub dec push inc xor cmp sub popa addr16 dec push das cmp inc jp das das sub dec insb inc das inc sub push inc inc inc dec jae insl dec inc inc inc dec cmp imul das das push dec cmp jp push dec push inc data16 fs jno push das xor push pop arpl jns push push inc push das js xor imul cmp push pop arpl das push push xor arpl inc inc dec ja inc das fs data16 das das aaa sub xor push das das push dec cmp jp push dec push inc data16 fs pop jne das das das cmp das push cmp dec inc inc inc dec cmp push inc inc push xor inc ja outsb das das xor push inc inc push push inc inc ja jae das dec inc inc inc dec push push dec cmp inc addr16 outsb imul pop pop inc sub das push push das push ss outsl push dec xor inc ja outsb das das xor xor outsl push inc inc push pop push das data16 das push push das push push pop dec sub das das push dec xor push xor das xor insl addr16 push inc inc push pop push das data16 das push push das push jbe jns push push inc pop push pop push das data16 das push push das push ss dec push inc inc inc push push pop push das data16 das push push das push push xor inc xor das das xor outsl xor push xor das xor push das cmp pop pop cmp dec bound das das sub dec push dec popa addr16 inc gs inc push push inc ja gs dec jae pop insb jbe ja push dec aaa dec dec jae inc dec inc inc inc pop pop dec das cmp xor inc insl ja inc inc inc insb cmp sub addr16 inc inc push cmp dec inc outsl das das sub inc sub ja inc inc inc insb cmp popa dec jbe push cmp das cmp dec outsl jae jb inc inc inc push cmp jne xor push xor das xor insl addr16 push inc inc push pop xor data16 das push push das push push jp cmp jp push pop xor data16 das push inc outsl inc dec das bound push jb das xor inc fs xor das das das sub sub das push dec xor push xor das xor outsl push inc inc push push cmp dec dec inc inc dec push inc inc dec xor push xor das xor js inc inc inc inc outsl dec jbe das das xor inc fs fs das js ja push inc inc pop jp inc pop jae inc inc inc inc push popa addr16 outsl cmp inc inc inc inc jp and mov xor cmpsb movsb mov sbb lods cwtl mov mov mov xor movsb mov data16 les xor and cmc add and testl lcall or push arpl mov and inc xchg mov cmp enter push mov or dec dec stos push push in ljmp or mov dec insl sub or xchg xor push adc xchg sub test sub stos daa sub daa mov pop mov movsl sub mov int sbb and mov inc inc and popf loopne nop int3 mov xchg adc int3 dec mov xchg sub push addr16 inc add xor xor adc jns jmp int3 shrl cmp push cmp inc inc inc push imul insb pop cmp insb jno xor cmp inc dec jo xor push dec outsl data16 das ja ja bound ja or mov add mov imul insb push push adc cmp stos mov or stos adc mov sub test and sub movsb aaa cltd stos sbb and loop pop mov scas rcll fcmovbe rcll into sub or test scas push enter lret push (bad) repnz mov popf push xchg sub addr16 aad dec into or push push fwait aam rcl sbb push push sbb or test add push test xchg xchg xchg push adc mov adc xor xchg xchg xchg mulb rorl mov adc sub inc ss test xchg sub dec or sub lods lods sub push jmp insb in scas or pop pop rclb push push push dec xchg sahf push add bound push sub or mov sbb fsub popa inc inc push sbb mov pop push mov icebp cmp fstps xchg les mov enter leave mov lret aad (bad) outsb hlt data16 enter loop aam pop fisubr dec and xor imul mov (bad) fsubs mov or push mov icebp sub adc dec ljmp dec push push dec cmp inc addr16 outsb imul lret pop xor (bad) mov in xor enter int mov les mov mov dec (bad) xor sub xchg or jg mov push rorl pop nop fst pop pop rcl nop cltd xchg sbb rorl xchg out loop ja mov es and loop inc repz push push dec rcrb cmp jne adc xchg sub je daa cmpsl inc xchg xor cmpsb jg jp dec sub cltd adc xor xchg nop mov inc js inc mov and jp inc clc mov es jp jne dec xchg mov push xor movsb cld dec call int push or in (bad) ror adc dec test push push jbe jns cld mov into out dec sub push dec mov mov xchg xchg mov push xchg fxch int fsts pop mov rclb push outsl icebp sub adc jp nop int3 adc rcl mov sbb cmp lcall cmp mov and mov mov cwtl pop or push mov lea pop or sub jbe jp dec inc bound das outsl dec push dec das movsb sub mov and lods adc lods dec inc xchg cltd inc mov bound push ficompl inc (bad) in imul mov mov adc or sub shll movsl and mov cmpsb loope movsl ret adc cltd nop xchg popf push adc in inc inc dec xor cmpsb daa mov inc inc enter test scas and fidivl dec rcl mov xchg dec push clc fwait dec cmp mov mov dec jno and mov fmuls icebp aaa mov aam push popa adc and stos push mov nop data16 es mov dec inc jne jo and or pushf aaa mov popf mov xchg stos pop xor movsl int3 ret xchg fmuls jmp int xchg push bound inc repz xchg scas les daa xor mov xchg nop dec stos int3 mov int3 mov push mov sub and (bad) and test adc inc mov xor hlt daa mov mov pop xor leave sbb and mov in lds and inc add adc mov lods leave push add add movsl push fldcw mov test sbb or add or mov inc inc or xor int mov add fdivrs mov push adc and int lods adc popa push popf push adc add sbb or pushf loope xor cmp lods xor cltd sub xchg pop fldl imul and xor cltd xchg or push (bad) aad sbb add add mov lods and sbb sbb lds sbb mov add add or sub test sbb or add inc mov loopne int lea cltd call or or xor test xchg cltd fisttpll or and test add in or popf gs jmp int add leave add adc inc lods add adc add test add int popf push adc lods push and adc test and fdivrl and fsub movsl push fldcw push popf dec cmp inc push push pop mov or lods add add add and mov lods sbb pop pushf int lods adc fsub shrl adc inc inc or inc mov lods adc in loope popf or mov loope add (bad) in popa mov xor (bad) inc roll inc lods push sbb popa adc push inc loope test popa add add int imul rcll add or popa xor add inc mov sub fucom in xor mov leave and mov add adc or fstl or and in test int push and (bad) mov mov push inc in jmp popf mov pop popf and popa add sbb add pop inc inc add loope popa int cmp mov (bad) fldl inc inc int3 mov jmp add popa int3 (bad) or xor movsl sub and xor (bad) jmp loope inc inc (bad) leave adc in aad cmp aad sbb mov (bad) fldl int adc inc add movsl mov xchg movsl sbb movsl mov xchg movsl adc xchg movsl int fxam mov push sarl dec movsl add push pop in gs dec mov mov lea aam frstor aad popa and pop xchg leave xchg add xchg or or aam and mov adc loopne mov dec adc cltd call xor fldcw cwtl loopne mov jmp add fabs movsl adc call xor cltd cltd call (bad) movsl dec sbb int xor dec lods movsl inc roll int adc popa movsb mov fldenv and rcr and lods adc movsb loope mov add cltd push popa pop aad pop movsl inc mov xor dec mov or sub and or or in push mov push xor push pop leave mov mov inc inc or cmp push adc adc or loope add imul inc add (bad) mov add inc imul sbb add mov cmp popf call popa xchg in popa xchg test add mov cmp mov loope fs (bad) leave cmp mov loope mov lds fstps or inc test sbb adc flds xchg add add adc add add adc add adc fstl shll inc add cmp xchg push mov frstor test cmp mov mov add (bad) gs and cmp xchg mov movsb cltd xor stos mov mov mov sub sub and sbb sub mov mov test cmp adc mov push movsl out sub or or in mov out or ljmp es imul adc lods mov lods call jae xchg aam aad repz movsb es jae adc test cmpsl jae je je pop xor xlat mov push aaa xor adc mov adc and and mov and mov dec call sub cwtl pop rcl cltd cltd inc mov cli inc jp jp cmp jmp call or mov xchg add xchg fs cmp adc int3 mov dec lods fstps pop push sbb xchg into sbb pop fisub aaa inc xor and adcl dec int es je data16 push mov adcl mov sub xchg xchg lcall pop fsub push fldcw push popf dec cmp inc push push pop mov dec jg shll adc adc cmp inc jbe inc sub mov or xchg call xchg adc lock nop test bound mov enter xchg xor xor push mov sub or popa add add or (bad) leave jmp test test adc xchg popf ficomp adc lret ficoml cltd or dec push test pop mov mov test cs adcl daa xor push xchg adc movsb testb jb hlt mov (bad) je data16 hlt ss and pushf stos test mov adc mov fisub adc or adc aad or adc pop push rclb push pop adc pop push dec pop mov mov sub cltd and push push mov sbb mov sub pop imul xchg movsl adc xchg movsl int fxam mov push sarl dec push or aad mov mov lea aam frstor adc in inc es adc rcrb pop or inc inc cmpl icebp sub inc lcallw sbb enter loop and ret xor inc sahf stos mov sbb movsl inc out pop imul pop fs inc inc xor xor sub pop sub daa or addr16 mov cmp xor sub sbb inc push bound mov push mov push movsl inc arpl lret cmp mov pop dec xchg inc pop lods pop and jp (bad) lret dec jmp je and mov adc mov xor sbb cwtl pop fimul int gs mov push pusha loop and xchg fs testl lock sahf and mov push and sbb call shl fsts fcomp dec daa pop and mov inc imul sbb dec (bad) mov insb (bad) mov fwait daa cmp ljmp fisub sarl mov fwait cld dec int3 cmp sbb inc jb daa cmpsb jg lcall push xor (bad) pop mov lret rcl or in mov and bound pop sahf jno mov cwtl enter or and inc outsl dec cltd test fwait loop imul and les mov mov xor mov int3 pop (bad) es mov sub push push inc push xor and cmpsb lods and mov sbb xor inc arpl out imul xchg lods mov dec addr16 adc push decl psubsw in ljmp sbb inc sbb push inc rcr repnz (bad) inc stc sbb movsb mov insb (bad) mov mov (bad) or in test xor mov cwtl pop loop push clc xchg fidivrl addr16 out movsb test xchg arpl dec mov inc enter (bad) loop pop xchg cmp sbb enter int xchg mov push xor adc sbb rcr mov call cmc sbb dec sub jne inc adc lcall and sbb movsb sub sub and inc int3 dec xchg cwtl shlb jo inc loop xor test lret xor cwtl test stos (bad) cld dec test and jbe adc inc adc movsb and movsl inc repnz xchg fs xrelease repnz push in xor cmpsb roll repnz adc movsb and test repz adc inc adc movsb and in repnz xchg fs mull add repz movsl push push mov fs testl and adc repz repnz inc adc xchg notb xchg inc adc fs push xchg xchg add repz add test ss fs xor je adc mov add ret lds repnz inc fs cmc je adc je push xor mov add ret cmpsl mov inc les xchg je inc aam xor xor inc adc adc adc es mov inc jbe je gs addr16 jbe movsl push addl div testl test xchg and adc test inc adc inc (bad) movsl push xchg xor inc arpl adc adc adc (bad) inc arpl inc hlt test je push pushw je adc jbe push movsl push xchg push jbe adc xor addr16 push push xchg add arpl and add arpl fs les xchg xor push adc in (bad) notb je xchg xchg ja push adc and movsb ja push adc divb cmpsb cmc cmpsb inc push test repz push fs and movsb les cmc xchg movsl and xor ss and je xchg xor adc hlt xchg xchg and addl inc and testl fs xor daa xchg push lds repz xor divl push test hlt movsb ja push adc push gs mov push (bad) (bad) adc pop xor and je push push (bad) movsl adc push hlt adc fs data16 push movsl cmpsb fs repz jb repz inc adc xchg xor jae addl movsb add and fs hlt fs inc test xchg xchg test roll mov adc adc adc adcl daa xchg xor push adc inc fs movsb adc adc inc inc addr16 mulb adc inc inc cmc xchg movsl and and push hlt xchg xchg and aad adc push and inc data16 adc xchg adc inc jbe mov add test (bad) xchg xchg adc add inc arpl xchg addr16 jbe inc je test cmc push hlt push inc add xchg mov inc inc inc xor hlt inc divb mov add push ret add repnz fs add push xchg add push xchg adc es cmpsb inc xchg (bad) aaa xchg xor xchg (bad) hlt addl xacquire hlt test hlt mulb push xchg pop ss jae movsb and xor inc and xchg les push adc fs inc repnz and xchg cmpsl jae es je fs push push (bad) jb test addr16 je cmc xchg movsl and and je xchg xor xchg lds inc jne inc jbe xor inc divl mov data16 jae xor adc repnz and push mulb xor roll movsb adc jbe push movsl push addl xor movsl push adc test and mov push inc arpl inc addr16 jbe xchg (bad) xor adc test adc addr16 mov inc divl ss adc cmc addr16 movsl and daa adc xchg les adc inc jbe mov add xor cmpsl addr16 inc aaa push jbe lds repnz adc xchg test ret je push mov xchg pop xor fs bound repnz repnz fs jne adc inc hlt push xor adc inc xchg movsl and and jbe jbe aad adc addr16 xchg roll (bad) adc and adc push add adc push test inc and adc jne xor xchg jae repnz mov out addr16 push jb je inc jne jne xor xor xor les xchg divb xchg xchg jae push ret test xchg jne push xchg add mov test je test and xor adc push xchg jae repz push xchg push jbe jecxz movsb adc push movsl xchg testb jne xor (bad) mov adc inc xchg push je push fs pop push fs adcl cmc (bad) mulb andl push adc xor (bad) mulb div inc xchg movsl and xor and xor xor adc cmpsl arpl addr16 (bad) divb cmpsb not push adc dec and sbb sbb fwait sub xor and aaa pushf xor pop xchg cwtl mov sub test xchg test mov push adc mov ret pop push dec xor es jl into xchg xor jno icebp cmp inc jb and icebp pop cltd rcrb sbb xchg (bad) into sbb fcmovbe adc push rcll push sub insl or sub push sub or pushw xchg mov jp nop fst pop pop aad inc cmpsl mov inc jns dec je dec push pop insl push dec inc push test stos xor mov mov mov mov push sbb mov push add and xchg test inc adc inc shrl sbb mov and test (bad) lcall inc hlt test cwtl pop enter mov mov inc xor adc push nop nop push add mov adc adc xchg xor push adc in (bad) notb je xchg xchg ja push sbb out arpl outsl pop pop push push dec xor push inc pop insb jbe outsl push imul imul dec jae push ja popa xor das outsl dec pop inc inc dec xor dec jae jb outsl je inc dec insb ss dec pop push xor arpl jns gs jo push insb push outsl aaa jns das das ja sub jmp insl dec test push addr16 push jae inc bound aaa inc jne insb jp lds nop mov mov arpl jb repz pushf rcr int3 xchg push adc xchg xchg xchg push dec xchg adc test test inc addr16 mov jno mov je adc cmovs data16 inc inc inc int3 test stos sub mov xor cmp and shlb or mov ret jns push adc mov data16 inc divb mov popa sbbl adc adc inc addr16 test fwait cmpsl sbb and movsb sbb in jp inc xchg inc sub vpaddsw cs out dec dec mov mov cltd sbb nop mov add cmpl mov or mov daa je dec dec cwtl pushf ror fdivs into scas mov int3 xchg inc outsb xor pop xor sbb fnop icebp cmp dec push mov mov push inc dec inc adc pop dec cmp cmp push jne imul es mov mov or insl stos mov lods bound bound mov mov test lcall scas cwtl outsb xchg mov out mov mov xor mov dec push xchg int3 xchg cmp inc xor les xchg movsl mov fwait and sub or inc mov push or outsb insb pop fs out addr16 test imul insl adc int imul aam (bad) (bad) nop (bad) outsb (bad) jo pushf lret repz outsl and inc shll inc sub cmp jno push or inc (bad) fs mov adc cmp xchg adc mov sub mov fldenv push xor adc xchg movsb aam data16 ljmp jle inc adc dec inc les dec sub xchg xchg ficompl data16 push jne xchg adc test enter pushf inc push jne push ljmp xchg lcall xchg mov inc xor mov inc mov sub bound dec jbe popa cmp push push pop adc insb inc imul sub xor lret ds add and xor sub push xor inc nop lods test or xor sbb cmp int3 out out push xor lods (bad) (bad) mov aam nop pop in mov inc adc xchg sbb fimull or and (bad) jo and xchg sbb sbb repnz mov (bad) mov inc add sbb inc adc mov ret xchg int3 aad mov inc xor xor pusha lcall enter cmp loop push movsl sbb mov cltd mov dec imul (bad) mov dec stos xor and cmpsl out jno push xor mov test arpl mov dec adc adc (bad) in es dec inc pop inc cmp inc dec inc mov push xchg js sbb dec call push adc pop test rorl inc dec imul push lds xchg int3 add nop daa jbe daa aaa jno mov in or ljmp loopne sbb sbb loope push dec mov (bad) enter scas daa arpl mov aad out or push push int aam sbb stos bound inc rclb xchg mov adc push push adc bound adc sbb outsl (bad) repnz nop outsb (bad) test bound movsb into fs (bad) mov out lret ror mov (bad) hlt rclb fsubrp mov out shrb mov pop pop pop jb mov mov sahf (bad) lock into stos mov pusha fiadd movsb int3 out push int3 lock fdivs scas jo xchg pop pop push cmpsb mov push into test rcl mov xchg mov mov outsb pop pop pop int3 mov movsb in scas int3 outsb (bad) insb out xchg repnz lcall outsb xchg pushf jb (bad) test mov push into pushaw mov stos mov jb xchg shrb into jo mov (bad) aam (bad) mov xchg lcall nop out (bad) xchg (bad) (bad) xchg pushf fcoms test pop int3 pop pop stos mov mov lock into stos mov int3 push test fisub insb mov xchg nop lods stos aam mov stos xchg bound les mov nop lods xchg mov (bad) pop int3 pop pop stos mov mov mov pop mov out in mov test pushf ror hlt jb pop jb pop jb pop enter ror hlt jb pop jb pop jb pushf movsb int3 shlb into (bad) mov aam mov pop int3 pop pop stos mov jo jb mov out xchg repnz mov out into out (bad) into hlt bound (bad) mov push cmpsb xchg lods mov test scas ret pop mov xchg fsubrs into data16 (bad) test into mov pop data16 xchg fsubrs mov into stos mov (bad) aam (bad) out into mov out lods ret int3 lock movsb (bad) test test jo push xchg mov mov push (bad) mov pop mov repnz fsubrs out bound test fmul cwtl push xchg mov pop rcrb (bad) int3 mov loop (bad) out pusha in int3 hlt ret (bad) shrb mov pop into mov lcall mov out rolb jo test aam push lock jo test aam push lock mov xchg lret xchg jo xchg into cwtl rol mov push loop ljmp test mov scas in int3 jb test mov (bad) sahf call mov lret test mov test lcall fsubp fs mov mov push lock ljmp mov lret xchg jb xchg (bad) in (bad) mov test movsb (bad) mov (bad) ljmp test lods in xchg out bound out (bad) fiadd (bad) (bad) xchg (bad) (bad) mov xchg movsb int3 xchg int3 movsb mov mov (bad) pop int3 pop pop lcall out shrb mov push pushf movsb (bad) movsb mov stos xchg fs mov xchg mov (bad) push int3 pop pop stos mov pop pop bound (bad) mov (bad) push mov insb out out mov loopne scas fsub mov bound mov push ljmp jo (bad) mov pop jo in shl out xchg push jo (bad) xchg (bad) push into lock stos xchg outsb (bad) fcompl pusha sahf pop call lods out mov in scas mov (bad) lcall (bad) aam out (bad) (bad) xchg in sahf into push mov repnz bound mov xchg shlb xchg mov mov pop jo pusha fidivl jo stos mov int3 mov mov scas mov lods out mov in repnz repnz xchg mov outsb xchg out sahf xchg mov sahf out xchg lcall in lods mov loop out mov mov mov mov shrb mov jb pop pop xchg pop xchg lret ret test push test stos lcall (bad) (bad) xchg enter (bad) xchg data16 lcall test pop data16 stos bound test lret movsb int3 lock movsb lock stos mov stos mov mov push repnz pushf lods rclb mov shrb mov out in pop pop stos push mov ljmp scas lods push xchg push (bad) (bad) aam mov (bad) (bad) mov (bad) mov (bad) into mov pushf int3 xchg xchg or dec rcrb rcll push adc xchg fimull pop (bad) ficompl xchg xchg sbb or fcmovnu adc or pop pop pop and stos jnp rcrl or xchg jns xchg jp jns cmpl xor rorl jb adc and jns ret sbb xchg inc mov cmp and mov mov dec mov jp cltd mov pop dec leave add (bad) and es aaa dec dec cmp xor dec xor pop pop arpl xor sub stos test cwtl mov enter (bad) dec leave push jae adc and movsb les and (bad) (bad) xchg pushf fcoms test bound mov or ret jge rol test push mov mov mov adc popf rclb or (bad) icebp sub clc mov sub sub sub mov adc push fcoms (bad) ror hlt jb xchg adc pop mov xchg pop int scas and dec adc data16 je arpl rorl or xchg jg sbb (bad) or imul or roll stos stos push (bad) cs or dec and les sub xchg inc loope add lret inc push push insb gs cmpsb nop dec fwait lret fimull cwtl cltd xchg fstps dec pop fimul mov push push or or push lea imul mov in imul inc enter out sub test enter data16 cmp dec ret cmp sbb push test jno hlt push (bad) adc or xchg sbb call (bad) and adc xchg mov and gs sub mov adc inc inc hlt aam xchg xor adc sahf imul xchg (bad) mov push sbb or push pushf movsb (bad) movsb mov aam mov int3 jl insb rcll test inc addr16 out dec sbb sub sbb xchg mov popf pop xchg pop or jo (bad) mov test xor cmp mov push addr16 push dec aaa xor adc fwait int3 xchg movsb das jns push inc sbb cmpsb mov mov mov int3 in sahf into push mov inc inc pop push imul and dec or dec mov cmp insl pop xor push push inc inc addr16 outsl inc push push jb push xor dec adc pop pop hlt in repnz repnz inc pop jo inc jbe dec ja dec inc addr16 jae inc je jno xor pushf mov test sbb inc mov mov and dec nop dec dec mov mov and and inc inc mov lods dec sub mov push and enter xchg addr16 xchg daa test mov in cmp lods (bad) stos or xor mov inc call push sbb (bad) lea adc dec dec mov je in daa xchg (bad) into mov ss inc inc les push cmp dec in jmp out (bad) push insl and sbb into into and sbb push push insb sub adc sub ficomp cltd cltd dec cmp dec stos loop imul xchg dec dec cmp fisub mov dec dec cs and sbb sub mov add dec push xor mov adc aaa cwtl popf pop stc mov or pushf pop icebp sbb sbb mov loop dec (bad) int3 cltd icebp sbb sahf mov es sub pop cltd adc sbb loop inc loop inc xchg dec sub xor clc (bad) ficom outsb call scas bound xchg sbb cltd icebp xor test arpl popa dec jns mov and dec daa mov fnstcw (bad) and xor mov out lcall mov stos mov dec jmp sub push inc dec push inc and mov mov add sub outsb push push mov dec jns adc mov into xor lret leave lret inc (bad) (bad) cwtl xchg sahf data16 sub xor jmp (bad) imul test fs ja loop data16 dec clc mov int3 mov stos (bad) push fs add les icebp sub test mov cmp mov sub stos mov and xchg cltd lods cmp mov mov sub mov cmp sub mov movsb sbb mov xor pop mov and xchg xchg pushf test mov mov mov mov test cmpsl xor mov test pushf mov cmpsl sub mov xor mov mov movsl stos and mov sub mov sub xchg xchg cwtl mov adc xchg pushf mov cmpsl sub xor mov xchg cmpsl sub mov mov sub mov sub xchg xchg cwtl mov adc xchg pushf mov mov mov xor mov mov and and cwtl lcall xor pop xchg xchg cwtl mov adc xchg pushf mov xor mov test sub cmp cmpsl test sub and xchg xchg pushf test sub cmp test stos mov cmpsl mov and movsb cmp mov sbb sub xchg xchg pushf test es xchg xchg xchg mov sub mov sub cmp mov sub mov mov and mov xchg mov sub sub aaa mov cmpsb mov movsl and mov mov test mov movsb sub xor mov and cmpsl mov lcall mov movsb cmpsl and cwtl cmp sub test stos cmpsl mov mov mov test mov test and lcall mov and mov mov lods mov pop xchg lcall mov xor sub mov mov sub test mov test mov sub test mov test mov and mov test movsb mov test aaa movsb cmp sub mov test mov and pop xchg mov cmp movsl and mov and cmp pushf sub and mov test mov and mov es movsl and cmp mov test stos movsb cwtl cwtl and sbb and mov mov cmpsl sub test stos movsb cwtl cwtl and sbb and es sbb sub sbb sbb and sub pop mov mov fwait pop mov xchg mov sub cmpsb mov sub mov mov mov mov xchg mov sub movsb sub and cmpsl mov and sub mov mov sbb xchg mov pop xchg xchg xchg mov and mov fwait xor mov mov and mov xor sub mov cmpsl sub mov sub movsb mov pop lcall mov and sbb cmp pushf cmp mov movsl xor mov cmpsb lods sub cmpsl mov mov cmpsl stos sub test cmp and pushf and sbb mov lcall lcall mov test movsl mov cwtl and cwtl xor mov sub sub adc sbb cmp cmpsb cmp mov test stos sub sub cltd mov stos sub mov and mov movsb mov pop movsb mov cwtl xor cmpsb fwait mov mov mov mov stos pop test xor cmpsl daa cwtl lods sbb and xor cmp xor xor cmp mov cmp sub mov cmp fwait and cmpsb sub xor xor mov xor mov movsl and mov and and sub and movsb test mov and sub cmpsl and cwtl mov sub and mov sub cmp cwtl and xchg xchg cwtl mov xor cmpsb mov mov mov mov test mov pop mov mov xchg xchg lcall mov cltd test mov xor cmp cmp mov and movsb mov mov and mov pop cltd test mov mov mov and mov stos mov sub cmp test mov cmp mov sub stos mov and xchg cltd mov dec xor dec aad and sbb and mov add cltd mov cmp in mov push adc into inc adc ss rcrb mov xchg adc adc dec shrb divb repz push inc xchg xor or mov and mov jg xor mov jno and jo mov sub (bad) lahf in inc jns clc cltd popf xchg xchg push or ficompl rcrl adc push sbb adc pop or aad or inc fs xchg adc xor int lods push roll imul and pop dec lahf test cwtl lods sub sub aaa mov cmpsb mov and mov mov enter nop inc adc fcoms shrb int3 mov (bad) xchg pushf mov pusha out (bad) enter movsb xchg outsb (bad) into mov test movsb out bound shlb mov adc cmp fs xor sbb sub xchg adc int xchg test repz rclb sbb inc dec inc mov test inc shlb dec inc push sbb mov adc add and cwtl mov and mov sbb push sub and pop mov test xor xor test mov adc xor lods mov in dec xor and cs scas test ja cld dec sub arpl mov mov nop pop mov dec and xchg loope imul test sub mov into fptan and mov fnstsw pop dec dec push sub dec out mov mov lods mov es add pushf movsl cmp xor mov cmpsl sub sub pushf and stos sbb and rcrl or mov addr16 and xchg xor push push sbb cmpsl mov mov stos sub nop loope (bad) mov (bad) or xor inc dec dec das push inc adc push repnz xchg lcall cmp dec int3 adc int3 jo mov daa bound cmp cwtl repnz xchg mov inc push cmpsl gs mov sub mov and mov mov pop movsb mov cwtl es mov mov mov push xchg fnstsw cmp dec mov scas ficomp mov pop and rcll add mov cwtl test rclb les sbb int mov mov pushf mov bound lods int3 test fiadd push mov sbb nop lods xor addr16 push and mov das outsl jns out jno push outsl inc (bad) in mov rclb nop fcmovnu adc push xchg add mov mov mov xchg adc dec sahf adc sbb enter xchg iret decl mov in xchg (bad) popf sub inc repz and in xor mov mov into mov cltd (bad) and mov sub pushf mov mov mov pop and mov sub cld into leave or dec imul in outsl dec jb push dec stc sbb sub add push xchg fs jbe mov mov adc xor sahf and mov test data16 (bad) (bad) and mov cltd sub bound loop adc rorb mov inc dec push loop xor mov adc and adc dec jo rcrb pop hlt mov repz in jecxz aaa cmpsl mov int3 lret sub or mov daa or sub sbb dec popf inc sbb mov insl dec push ja inc in dec arpl lcall insl cltd mov or cmp and inc daa adc shrl or mov pop cmp or inc inc das push cmp cmp mov sub mov nop mov xchg xchg push adc (bad) lret movsb mov enter cmc and push or dec call inc jne subl mov mov outsl xor mov ret dec lahf adc push xchg add dec xchg sub or pop mov sub inc dec xchg sbb mov out jg inc test rol aad lods cmp and int test or adc add test mov pusha rcr adc adc mov xchg in dec popf inc loope popa gs inc add fstpl xchg add leave or frstor push xchg call leave int shrb shll fdivrl mov adc popa add push xchg jmp mov (bad) rcl lods or adc cmp mov enter sbb and inc and or adc xor mov (bad) fstpl inc mov mov and or sbb push cltd call xor dec lods movsl inc roll (bad) aad in and cmp fsub add movsb lods in fisttpll dec sbb sbb popa xchg adc add popa mov mov sub or sbb movsl pusha int3 (bad) fstps lods cmp or pushf lds popa cltd mov mov (bad) and mov lea xor and popa sub inc lds mov pusha aad push popa fstl rcrl or (bad) mov loope imul dec cltd push adc (bad) pop fdivrl int xor lea dec xchg or pop add or inc lods or lea loope mov int3 mov xor add mov call sub lods xchg xchg sub sub sub loopne fmul inc mov mov or add add pop (bad) mov inc add loope xor push mov mov add and (bad) movsb mov add lods or inc add in push or inc sbb xchg sub lds cwtl mov rcl mov push popf adc mov (bad) mov inc add loope and mov pop adc inc inc adc inc inc adc add mov sub adc mov and pusha loope and fldcw sbb mov mov add inc adc adc inc loope frstor dec sub inc add cltd popa mov sub popf inc add loope add cmp inc sbb add lods in fisttpll or ror shll in cltd cltd push mov mov roll popf add and add lods lods dec add leave pusha loope and int add int add dec cltd mov mov test inc add gs inc sarb rcrl add pop loope dec add add add add popa add lods or loope (bad) xor and and cltd mov mov loope xor sarl lods add and sub add inc or add inc sbb or and movsb lds and movsl fnstsw or add mov xor add adc mov and mov xor and mov add mov mov mov cltd in dec cltd in fucom popf or mov add mov imul add cmp add and rcll popf int add pushf fstpl loope mov add in add add adc add lea lods or and adc rorl or mov jmp movsb ror add (bad) rcrl mov xor add and add test aad popf leave add adc dec sub add shll add add adc sbb or mov mov and mov xor and mov or mov mov mov cltd in dec cltd in fucom popf or mov add mov mov add lea xchg fld add test add xchg push inc sbb and xor movsb mov mov and test sub xor xchg stos ss sub cmp sbb and pop push aam aam adc push xchg adc xchg sbb dec nop xchg sbb mov sbb fcomps or (bad) pop push dec adc fsts int fstps aad or push push sbb push push push lea adc testl and fnstcw push inc and arpl jp mov fs (bad) jne mull xor gs cmc movsb ret xor repz inc inc and test and xchg adc mov adc inc rorl sub pop mov or mov pop lret adc and or xor or push sub enter or sub es (bad) adc dec ret or xor stos xchg inc jns or mov dec enter or lret jmp or push sub dec jmp lods dec stos push ljmp cmp xor add nop (bad) pop (bad) lods fldl int fwait dec pop push fs insl inc ja push push inc cmp jns mov or stos sbb ret xchg jns xor push dec aad xlat mov movsb push addl mov inc cmpsb les push mov and lds test xchg and adc test movsl arpl aad adc sub loop xor js mov or mov and lcall xchg jp cmp adc push test (bad) mov add or or sub inc pop dec push push inc dec jne dec jp and aad sbb mov sub mov loop xor lcall in xchg mov cwtl pop xchg shlb rolb push inc xchg test dec push mov sub imul out into es add sub push stos out repnz int3 int3 test hlt lahf dec push inc inc xor xor and lcall jns lret repnz adc lea pop cs and mov nop (bad) mov push adc loope dec add dec or dec adc cltd ficoml rclb inc inc test mov adc mov sbb push rcrb rclb pop aam lea push push sbb rorb cwtl mov mov jae cmpsb sub and and lahf dec fs push inc cmp mov fs or xor jnp sub mov cmp mov mov or test lock test inc jae xchg lea (bad) push test or ficomp fs sub push xor andl dec jo fsub push js cmp pop mov push xchg push inc xchg adc and push mov push xchg lahf xchg test xchg mov rorb xor inc dec outsl call stos dec inc inc push mov sbb pop fdivl xlat adc sub enter imul jmp js (bad) les hlt jno sub sub fwait cmp mov daa push jno sub mov into in inc dec cmp pop mov push test rolb mov fwait xchg xchg sub dec dec dec test sbb cmp es arpl sbb and adc cmp and jno cwtl mov aam imul out xchg stos stos shrb mov mov inc ret jnp xor adc mov js xchg dec jo shlb adc adc inc test adc int or int3 push cbtw int movsb fisttpll data16 shlb mov and and sbb sbb dec inc push jbe push rolb and sbb push adc inc jp mov or or cltd aas rcrb lcall dec les bound push pop gs inc inc push push push cmp arpl xchg outsb es lcall xor imul fs cmp pop mov mov cmpl (bad) cwtl fidiv xchg adc mov push movsl bound and mov lods fcomps call leave and adc test hlt fsubrl es cmp xor cmp or mov xchg popf xor sar cwtl sarl test mov adc fstl es and and test inc inc outsb bound mov rolb pushf shlb inc outsl jne push loop inc in xor inc repnz mov icebp es xor mov test cmp sub mov test mov mov mov and xor and lcall mov mov and test xor test mov mov mov mov mov lcall sbb fwait cmpsl mov cmp xchg xchg cmpsb pushf and cmpsl stos lods sub cmpsl cmp xchg xchg pushf cwtl cwtl cmpsl mov adc mov mov sub mov mov sbb lcall mov test cmpsb xor mov cmpsb sub sub mov mov sub and mov cmpsb and movsb cmpsb and mov mov mov sub and test xor mov test cmp sub mov test mov mov cmpsl mov mov xor and lcall mov mov cmp movsb xor and lcall pushf sbb test cwtl fwait cmpsl mov cmp pop xchg mov sbb movsb sub pop xchg xchg xchg mov sub mov mov sbb mov cwtl and pushf aaa and sub cmp movsb cmpsl sbb and and mov sub xor mov movsb mov stos cmp mov sub xchg xchg movsb mov cltd xchg xchg xchg pushf cmp xor xchg pushf sub aaa mov xor test mov pop xchg xchg mov test mov xor xchg xchg mov movsb pop mov test and xchg xchg xchg xchg test mov xor pop xchg xchg lcall xor cmp xchg xchg lcall mov sub mov mov sub test movsb stos cmp and ss lods and xor mov cmp sub pop xchg xchg xchg mov mov mov and sub mov xchg xchg xchg xchg mov sub mov xchg mov test mov movsb pop mov test and xchg xchg xchg xchg test mov xor pop xchg xchg lcall xor cmp xchg xchg lcall mov sub sub aaa stos cmp sbb xchg xchg xchg pushf sub cmp mov xchg lcall and and mov mov mov mov sub xchg mov cmp and xchg xchg cwtl pushf mov mov sub mov movsb cmpsl sbb and mov mov sub adc mov movsb mov aaa mov movsb test movsl and aaa mov cltd xchg xchg lcall sub test mov mov mov mov movsb movsb cmp movsb cmpsl fwait mov test stos stos sbb xor lods and mov test and mov mov and mov cmpsl mov cmp pop xchg mov mov stos mov stos cmpsb lods and mov mov mov pop lcall sbb mov sub and mov lods sub movsb cltd and test pop xchg cwtl mov movsl sub sub sub cmp mov cmp cmp xor test mov stos mov stos test cwtl xchg test sub movsb lods and xor mov cmp mov aaa and sub and movsl mov test xchg lods mov mov mov stos mov mov sbb mov mov cmp sbb and test xchg xchg pushf sub mov xor cmpsb daa xor mov xor xor test lods cltd sbb mov mov cmp lcall mov cmp sub cwtl mov and fwait mov mov mov sub cmp sbb xor lods and mov sub mov cltd sbb mov sub cmp daa lcall mov movsb mov sub sbb xchg pushf mov mov mov mov cmp cmpsb mov xor xchg xchg mov mov xchg cltd stos movsb mov cmpsl lcall mov mov xchg xchg cmpsb xor mov test cmp sub mov test mov mov mov xor xor and decl jge sbb aad xchg loopne or cmp push xor or mov xchg add mov arpl xchg (bad) mov cmp rcrb cwtl xchg rclb push or adc or ficoml dec push lea imul push pop push inc xchg inc adc push mov dec xchg cmp adc xchg test movsl mov xor and leave or sub aas and or mov mov cmp popa mov adcl mov ror pusha (bad) aad inc or sub xor movsb movsb cmp or sub sub call and sub xor xor or and int3 in nop int3 mov and gs jp sub aam adc sbb into sbb pop xchg push dec pop popf test dec push dec inc aaa popa push bound into lret nop xchg into (bad) xchg inc movsl cmp jp cwtl xchg test popf movsb aaa lods xor xor mov arpl test push and repnz into inc movsl xchg movsb mov fs data16 push cmpsl sbb popf xor and fs inc push inc das call mov mov (bad) (bad) decl push push xchg int in jo inc rcrl adc lea mov xchg ss add dec dec dec xchg dec popa and lret sub adc ret lret sbb adc sub push mov lret sub cmp dec mov adc dec call and xor test inc push lds cmp mov ja push dec aaa dec and int push mov and rol mov movsb and repz test ss int3 (bad) sahf aam lock daa data16 xchg enter mov sbb add rorb lret (bad) jmp jmp jmp push pop pop and imul xor je adc sub mov inc dec dec or dec stos add push cmp adc inc ret adc and xchg cltd mov fsubl jp adc pop sbb mov mov sub xor loop data16 mov dec call aad test or and xor jae lcall cmp xchg mov pop push test dec test pop mov fs jae addr16 push dec sub jns dec das xor popa addr16 pop dec pop pop dec les fs pop addl icebp movsb enter push inc mov xchg mov jne nop mov push cmp mov jbe cltd pop lds or sbb sbb dec out into insl rcrb pop int3 and push data16 das sub jne inc push inc inc outsl dec dec les xchg cmp lods inc stos add inc ja mov or cmpsb mov insl dec into mov addr16 outsl and (bad) or dec push mov inc movsb mov sub cmpsl mov ror adc insb test jb push mov xchg fmuls jae sub shr outsb stos and test xor movsb mov stos mov mov (bad) aam and cmp mov mov mov jmp push adc aad sbb pop xchg jle inc cmc je movsb das xor mov dec mov mov cmpsl or les adc inc das inc xor inc mov inc inc outsl push dec js xor (bad) mov mov adc sbb push dec xchg push sbb jae adc or inc and adc adc int3 push mov cmp js int and dec dec loop jo pop mov adc mov cmp adc mov test je mov push fs notb xchg das adc inc xchg test pop test popa dec inc push les and xchg fdivr and sub xchg fcmove xchg mov inc adc inc or lds inc adc inc dec push popf xchg mov or xchg mov push mov lods adc and jl sub inc enter cmp int3 mov xchg test add int lods and mov inc mov add in inc inc adc fldcw loopne loope mov sub add or add push adc test mov mov mov mov mov mov movsb mov test mov or or or add adc adc mov or leave int push adc lods inc add adc lods adc lods inc add adc popa inc lods sub mov inc test add adc and leave adc add in cmp add rcrl adc inc xchg or dec test add sbb add mov add add inc lds shrl leave adc add in mov add adc add in mov add (bad) add push inc add push sbb adc lds sbb or mov mov popf add adc mov sub lds mov or test push or mov dec add imul (bad) test or popf cmp mov mov lds sbb lds sbb sub mov mov fstpl mov popf cmp mov lods xor sbb int inc mov mov dec or mov mov lds sbb lds sbb or add popf or mov popf cmp mov lods xor sbb int inc mov mov dec or mov mov lds sbb lds sbb or add popf or mov popf cmp mov mov dec or mov mov inc or int inc mov roll pusha mov or mov dec add cmp leave mov xor pop or popf cmp mov lods sub roll add or and adc and sbb adc lods cmp popf add sub fdivrs sbb mov lods adc inc mov lods sbb inc mov leave sbb mov mov inc adc fsts mov pusha (bad) aad movsb lods pop xchg fadd pop xor and and cltd add cmp mov lea sbb or xor or and adc mov lods adc add add adc add inc test mov pushf mov inc mov test or lods test roll mov push add sbb sbb lods gs popa pop push xor adc rcr sbb inc add sbb add or shrl mov loope sbb loopne push mov dec cltd loope add adc mov cmp loope push lods movsl rcl inc mov lods add inc add lea sbb mov push mov sub push popa lods adc cmp add adc cmp add lods popa mov test and mov adc cmp mov or and cmp loope or cltd mov test fdivrs dec leave push mov movsl inc fdivrl gs mov push adc sub mov inc lods fsts push rol and shr dec and test mov nop lods adc ror cmp loope adc mov or lods xor loope movsl inc and inc inc or sub pop lds xor in inc mov mov push dec adc adc loope adc frstor mov stos cwtl sub movsb daa mov cmp pop xchg mov mov mov mov mov pop mov test fwait and sbb adc or add push adc test sub leave sub bound pop dec push bound push das xor movsl xor cltd in cmp mov add adc adc dec and or sub ljmp nop push mov (bad) mov xlat cld (bad) call dec push jp and rorb bound (bad) into mov inc xor sub cltd sub flds or dec dec in jns pushf push dec lcall xor or pop fstl clc xchg push repnz aaa mov jp pop inc ljmp popa sub sub cmp or xor sub inc push ja addr16 push dec xor inc js mov loop das jmp in or test fs int3 into sahf shl loopne inc adc ss dec rorb cmp xchg out inc popa dec imul adc jg mov dec push push add and or and adc movsl dec aam loopne decl mov movsl mov jg movsb (bad) es enter fcomi cmp mov mov sub pop (bad) shlb xchg xchg mov lock and sbb mov adc or adc adc xor jnp leave ret cmp cmp leave sbb mov and les cwtl (bad) mov push rclb enter cwtl nop call out orl dec das pop aaa js arpl inc jae xchg and or sub lds add scas call daa mov mov icebp cmp cmp mov test test lret inc outsb mov xor push and sbb gs mov in inc mov roll jo inc dec dec pop enter xchg mov pop pop out push data16 int3 lock stos shl (bad) mov mov jbe xchg dec push pop aad loop push mov sbb and push pop imul aaa mov dec dec cmp ja push push xchg aad inc or shlb mov fs lds sub mov sbb or xor cmp movsl repnz add push cmp pusha shr dec and cwtl jb enter push (bad) mov imul imul sub add inc inc ja gs and mov dec mov mov adc fimul dec gs pop inc inc dec inc xor adc inc stos rolb sbb sbb push sahf push mov daa mov shll mov hlt pushf lea (bad) sub and and cmp popf adc fmull repnz mov (bad) daa and (bad) lret clc sahf lea mov xchg daa sbb test stos test in and loop das clc pushf into js lcall adc inc adc adc inc test in dec push scas mov jo xor inc lcall aam int test push or push add xchg enter xchg xor adc cltd inc mov adc sbb xor out sub inc jbe enter stos imul cltd test mov mov sub mov dec insl out mov movb push arpl lret (bad) and es sbb xor mov and jns sbb dec pop dec jne (bad) aam (bad) in call xor dec push stc or push or and pop and sub lret dec enter aam mov inc mov xor sbb movsb sub lds les pop and jp xchg xchg or cmp push pop mov pushf bound (bad) lret pop lds pop gs pushf lods push roll sub push inc cltd popf xchg jmp cmpsb sub inc js rcrb fwait pop push mov mov adc jg jp xchg or inc pop les nop pop push and sub inc inc enter in test or pop mov xchg int test inc pop icebp xor inc sub das mov and adc xor outsl inc insl adc and nop mov mov enter xchg lods dec cs inc out pop mov daa add mov inc addr16 xchg mov dec arpl (bad) (bad) cmpsb and (bad) aam cld dec cmpsb pop dec inc cmp xchg cmp or cmp icebp and xchg xchg xchg cmpsl xor test mov xor mov pop cltd stos movsb mov cmp mov xchg xchg xchg mov test mov mov sub cltd aaa mov mov mov cwtl mov and mov test cmp xchg lcall mov cwtl cmpsl cmp mov and sub mov and sbb mov cmpsb sub es cmp sub test fwait and xchg xchg xchg pushf test mov test fwait and mov xchg pushf mov mov cmp sub cmp test sub mov mov mov mov xor test mov sub sub stos and and cwtl test test xor mov mov pop pushf mov sub mov mov cmpsl mov fwait xor xchg mov sub mov test mov sub xchg cwtl sub mov and aaa xchg xchg xchg mov mov pop cwtl lcall xor mov mov xchg xchg pushf mov and cwtl mov mov lcall test fwait mov mov mov movsb mov mov pop xchg xchg cltd stos movsb fwait and sbb xchg xchg mov xor xor xchg xchg xchg lcall mov cmp xor xchg xchg pushf stos xor mov cmpsb xor and mov mov cmp xor mov fwait es pop xchg xchg mov xor mov mov mov xor mov mov movsb mov pushf sbb mov mov mov sbb mov lcall fwait sbb xor mov and mov test mov cmpsl xor cmp cmp sub sub mov aaa cmp xchg mov lods and test mov mov cltd stos movsb mov mov sub mov sbb stos mov and test test cwtl mov mov mov mov xchg xchg cmpsl sub mov mov sub mov mov es xchg cwtl pushf mov mov cmpsl sub xor xchg cltd xor xor mov mov stos mov mov sub movsb sub cltd es xchg cwtl cmpsl sub and adc xor cmp mov and adc movsl and lods and sub mov pop xchg mov mov test mov stos mov fwait es xchg xchg xchg mov mov movsb cltd and mov pushf sub mov mov movsl cmpsl and movsb mov mov movsl and mov mov sub xchg fwait cmp and movsb mov and and mov cmp mov mov mov test mov das das sub inc push inc inc inc je mov pop jb mov nop stos mov aam out (bad) rolb push mov xor mov test jns mov and mov dec xchg ret mov movsb inc cmc add inc and (bad) adc cmp ret mov sub enter sbb cmp lods cmp insl popa dec push dec push dec push pop mov mov pop mov push shll sub in mov mov dec adc xchg adc bound and subl push rcll fdivp jl cwtl movsb into test insb (bad) xchg mov xchg (bad) bound xchg fadd xchg (bad) lock lcall xor push mov into (bad) insb int mov inc xchg push repz call push push or fimull lret int3 ret pop bound (bad) rol adc test pushf xchg mov cmp sub dec lea xor and jp pop mov fcoml movsb mov inc and mov je mov test repz mov mov stos xor mov and mov cmp xor xor xchg pop adc adc mov rorl arpl cmpsl ja pop dec scas cld (bad) addr16 leave call push je push je jno movsb inc mov adc shlb sbb push push xor aaa cmp xor pop mov mov jb sbb stos mov mov push inc dec fs das inc enter lret mov inc leave mov jns mov sub xchg mov nop cltd adc cmpsb xchg xchg mov inc mov dec out daa sub sub adcl rcrl nop cwtl shlb inc adc push inc out mov adc xchg push fimull (bad) out mov int3 xorl mov xchg inc movsb movsl adc jno mov dec xor or pop and jb popf or ljmp lods test into ljmp dec (bad) mov adcl pop enter jecxz mov jp dec rclb pop cld dec int es sbb dec or shlb sub mov stos sub mov popf push and dec and xchg in dec jmp outsl push inc pop push (bad) hlt fs in mov subl push outsl inc enter stos inc in inc pop mov lea dec inc mov xchg lds dec (bad) lret jp xor mov sub lea (bad) jmp insl gs sub mov xchg rcll mov inc inc adc int3 leave out inc mov sbb int3 or loop inc push enter rcr (bad) in and dec in sub inc inc clc xchg adc aaa enter xchg xor mov xor dec call adc lahf icebp sbb enter pop xchg adc mov adc xchg dec and mov jmp lcall nop dec and loop push loop push mov ljmp push push add mov xchg add js aam cld dec lods jg cmp pop adc das les mov pop icebp and xor cmpsb pop mov sub push sbb sbb mov push loop inc stc nop rorl aam (bad) mov and push inc push (bad) push out mov and lahf in cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl je mov (bad) enter push loop inc enter test popa sub decl cmpsb jmp rorb ret push ffreep mov (bad) and cltd mov mov mov cltd or mov (bad) stc push or xchg cld mov out insl add clc mov mov xor daa pushf xor sbb cmp or aam enter or cmpsl or sub fistl mov and mov orl inc loop push icebp cmp adc rorb pushf pusha es icebp sub bound icebp cmp loop dec les nop mov inc adc and push xchg loop dec loop ja movsb leave sbb and xchg fstpl aaa and cwtl nop bound adc dec dec push test call test stos dec inc in mov test sub dec sub mov or sub sub lret jmp imul leave mov in imul int3 mov dec inc in sub sub xchg push es in imul or dec push stos or lods mov in out mov in out or dec out sub test out sub sub sub into in imul sub leave dec enter in mov leavew outsl dec in in sub into call mov in in mov push leave dec int3 in in lea imul dec push or in push imul add in insl or sub or or sub sub sub push mov sub xchg mov sub lret in sub push lea scas vpminsw call dec dec sub or or enter enter push push sub sub call sub push push gs stos and out stos sub sub test cs jmp (bad) sub int3 inc call dec sub jmp jmp call and into (bad) or mov enter enter push in mov mov dec into push or sub sub in in stos pop es or or test sub sub dec imul out sub leave es and or inc or sub mov sub sub inc push int3 (bad) es or or dec sub test int3 inc call dec sub call dec sub dec into mov or sub xchg sub in sub inc dec sub dec insl ljmp sub insl mov sub sub sub push sub lret xchg or (bad) out in out dec or sub imul sub sub in imul push sub imul in or sub test dec sub or sub imul sub test into lods or in sub sub in out sub int3 inc gs dec pop push or lret or es in sub dec sub sub test in out int3 vpaddsb push dec in out push jmp out es or int3 in out sub enter in sub dec sub sub test in call jmp or sub jmp and test sub enter push sub lea sub test and test sub enter push sub lea sub test and sub sub enter push sub mov sbbb and mov mov movsl and pop xchg lcall movsl daa mov sub sub test sub mov sub movsb xchg mov insb cwtl cmpsb lods pop pop push cwtl int3 xchg xchg inc inc cmp mov mov sbb mov and adc inc and popa loope lea push or lods mov in out mov ljmp out sub test out sub enter into in imul sub leave dec enter xor cmpsb jl imul jo data16 mov jp arpl xor outsl ja adc xchg push fimull push (bad) sub and ret push push and lods pop xchg fadd pop xor xor leave lret xchg mov out xchg push lea scas les dec push push inc outsl push dec push inc inc push cmp dec dec inc inc inc jbe imul enter test mov mov dec movsl cmp cmpsl xchg cmpsl sbb pop pushf cwtl cmpsl xor mov and cmp popf add push jbe mov fs inc inc push data16 push pop xor push adc movb pushf mov enter int3 int3 cmpsb pushf ror hlt in inc xchg push xchg or sbb mov ret mov mov mov and push gs dec xor push xor and enter or mov ljmp les mov inc repz test shrb mov int3 mov fs push test ret ror (bad) cwtl push inc mov in sub xor movsb sub sbb push adc int3 adc dec xchg push into dec jb aam adc push mov in out xor dec pop adc inc enter dec lcall sbb dec test in icebp xor (bad) and jg jb mov adc loop push cwtl mov push and inc sbb mov add out xor dec sbb push sbb mov int es xor test mov lds mov push das adc and xor lea push push or sbb push lcall xchg or je adc xchg dec enter imul sub or mov inc inc adc and cltd pushf fstps push nop test clc mov loop pop adc int or or mov inc dec adc xchg pop and mov cltd fcmovb into jno lods pop clc mov and mov inc repz hlt out xor ret dec dec xchg mov mov loop rol jb (bad) movsb insb mov sub or scas lods call xchg mov sbb sbb or sub (bad) movsb out xor mov test arpl sbb xchg and lcall icebp xor pop fcmovnbe cltd pop push dec dec loop jp les dec test push outsl int3 shlb and adc sub jp imul mov jg mov inc les (bad) cld dec mov inc dec adc mov movsb pop push and es adc dec movsb dec inc dec inc and lcall es push rorb data16 mov (bad) popa pop xchg mov les (bad) cld mov mov push mov lcall test repz mov test shrb dec shll cmpsb cld dec test push ja mov adc sub sbb movsb mov in es loop movsl sub cmp mov mov xor (bad) pop pop enter in inc (bad) repnz adc das int3 int3 mov inc adc push dec inc jp (bad) dec and (bad) fs divb movlps clc xchg dec push xor xor add leave and cmp mov add or es dec inc push inc push push push inc dec push inc and loope les addl or xchg xchg es cwtl xchg push mov fcompl inc repz mov sbb bound dec cli inc mov xchg stos mov dec les jae inc imul out int or call scas cs sub xchg movsl xor mov mov xor (bad) jo adc fwait and out rcrb xchg fimull inc inc push xchg cltd mov mov decl mov sahf (bad) and call rorb loop jbe dec scas les sbb inc push and adc test adc mov rorl add int lods adc inc lods or add or mov pop lods test mov adc or cmp inc rcll fnstcw cmp push mov lea sub inc loopne sub push mov rol adc fstps mov mov sub lds mov push adc lods pop sbb mov mov cwtl in sub shrl call int lods movsl test mov sbb (bad) sub jmp mov fsub cwtl mov sub cwtl mov adc or shrl pop xor and cmp rcr rcr add lods adc int add adc movsb in mov mov rcll mov sub test mov add sbb mov mov mov push pushf mov inc xor cmp sub mov inc loope lea lds lods sbb mov inc inc or pop loope lods adc sbb mov int3 roll adc in mov push adc aam mov int fnstcw dec sarb xchg loopne mov push lds test fstps or and fldl push add xchg dec or or mov add in pop loope adc cmp push fcom xchg pop movsb lods in aad movsb rcr or or mov popa test sbb mov inc inc or pop loope lods adc sbb mov (bad) and mov inc lods dec and or mov mov add loope lea mov inc inc or or or (bad) add mov sub jmp push lods popf add popf loopne inc lods xor adc add in xor inc lea or inc lods xor xor adc in sub loope pushf int lods xor mov xchg lea dec or or mov sub aad dec or adc loopne inc lods sub add or mov inc inc add dec popf xchg and add pushf loope lods inc mov adc add adc inc lds lods lea loopne rol adc mov push adc lods dec sbb push push inc loope cltd and int3 (bad) in or add and inc mov test mov sub dec fstl mov lods lea shrl popf adc pop ret mov test stos movsb cwtl mov mov mov aaa mov lcall mov mov pop mov mov add test mov pop lods test mov adc or push xor mov mov mov mov jp push sbb jb sbb test add mov data16 test mov fwait cmp xchg rorl nop in push xchg mov sbb lret int3 rcrb and jp bound jns mov jnp lret xor and jns cmp and jo push movsl sub mov insb (bad) ljmp cmp adc and xor andw pop xchg adc xchg sbb mov inc adc hlt popa sbb leave sarb xchg xor test cwtl int3 (bad) mov mov push fcmovbe sbb rorl int3 int3 int push adc dec add scas and fmuls jo fs out and or adc test push adc jb movsb mov dec mov cmpsb test push and xor sub inc arpl xchg mov inc push push xchg inc je sbb xchg pop mov xchg aaa call mov dec add mov es push dec push inc das insb adc cmp pushf xchg or fs push bound enter lret enter les adc mov and inc dec dec addr16 and dec push inc adc pushf mov or mov pushf cwtl fiadd xchg push cmp in cmp push (bad) enter dec inc push out pushf inc and in inc inc inc les dec sub lret test adc and add push stos and sbb or pushf dec push test cltd xor xchg xchg and xchg xchg bound popa xor cld inc ljmp and mov mov sub inc dec pop inc mov mov icebp and and add mov or imul das or dec sub repz mov xchg adc sub xchg lods and adc mov jae mov mov ljmp bound fxch rorb les lret pop or mov lcall sar mov bound push and cmp adc jae mov push int dec inc xor and ret sbbb cltd dec fsts inc test push cmp dec dec jno stos xchg and mov inc imul fs daa xchg dec xor sub inc mov push pop cmp (bad) movsl and test pushf mov sbb dec push sub nop nop inc shrb or adc push test je lds (bad) negb icebp sub enter xchg xor stos mov adcl imul xchg mov ss inc mov xchg mov jecxz aad mov sbb dec into pop into xchg enter pusha mov test push xor xchg nop mov dec enter (bad) cld dec enter hlt addl xchg xchg jg adc push xor loop inc decl or cmp (bad) (bad) (bad) (bad) (bad) inc mov bound ret push into int or sub push (bad) out mov inc xor sub nop mov in adc lea (bad) addr16 dec push loop push data16 push push dec dec dec je inc push cmp movsb loopne mov inc adc cmp movsl sbb xor aaa int3 data16 shrb int cltd (bad) inc stos push mov jb inc push jb xor xor adc iret mov xchg push inc data16 (bad) hlt jne addr16 mov and or cmp or inc and popa sub mov rolb ja outsb inc mov int lret jae inc jp and or xor inc aaa mov mov pop and test xchg sbb push adc lret sbb ret adc aaa test mov push adc push xor fstpl cmp jne test and sub sub sbb jg movsb mov je dec sub inc push inc inc nop lods and sbb or dec xchg dec das dec xor mov xchg shlb arpl pop xor inc xor adc lcall test test adc add cmpsb movsb sub arpl mov stos mov mov pop cmp mov and mov pop mov ficoml or inc push dec jo inc dec arpl dec jo inc inc xor inc dec inc pop inc jno push inc inc dec imul ja inc imul push inc inc dec arpl dec jo inc dec inc xor inc push dec jo inc dec arpl dec jo inc dec pop das push push inc dec inc pop push jno push inc inc dec imul ja pop imul inc push inc inc dec arpl dec jo inc dec cmp push push inc inc ss jbe das das das outsl gs cmp dec dec cmp push inc outsl ss push inc inc xor addr16 inc ja inc xor dec inc jp js push outsl je dec inc addr16 ja push pop imul je dec inc inc jp jbe js cmp push inc push dec cmp inc dec xor je imul push push imul je dec inc jp ss bound gs xor dec fs xor xor ja xor inc dec jbe imul insw inc cmp inc push push dec inc inc xor dec dec dec xor inc dec pop inc push push push imul dec push inc inc push dec aaa inc inc push imul inc dec imul fs inc inc inc inc dec jae pop dec dec inc inc inc inc inc imul xor xor cmp push cmp sub jns dec dec inc inc push imul inc push imul dec push push xor dec push inc inc inc inc inc dec fs push pushw dec push inc inc popa addr16 das fs jp fs fs push jo xor das xor inc inc dec je inc dec push addr16 pop je inc dec insb inc inc inc push dec push push inc inc inc inc inc dec pop data16 dec xor dec push inc inc inc inc inc pop insb jbe ja addr16 push pop jbe sub push xor das dec insb inc das inc push inc push inc inc push das xor das xor das xor das xor das xor ss outsl popa inc inc inc inc js inc dec push pushw insb jne push imul push jbe dec fs push dec imul aaa outsl xor das xor push jbe xor cmp inc inc outsl inc das xor dec push cmp inc push cmp dec inc push outsl xor inc inc dec push inc dec inc aaa inc push pop jbe sub push xor cmp dec inc inc inc inc xor addr16 xor imul inc jp inc inc jo inc inc inc inc dec dec insb xor dec push fs dec xor outsl popa inc jno push inc dec push fs pop insb inc xor je inc dec insb inc xor dec insb inc ss je dec dec insb inc aaa dec je dec dec insb inc cmp insb cmp inc pop addr16 xor inc dec insb insb cmp je inc push push inc dec insb inc xor inc xor push inc inc inc inc dec fs jns inc inc inc inc inc dec push push imul push inc dec push fs outsl cmp sub xor inc addr16 inc inc inc dec insb inc xor inc jp inc dec push push push dec push cmp inc insb pop xor inc dec dec cmp inc inc xor push dec dec push inc inc inc inc inc dec inc xor xor inc pop dec imul inc inc dec jae imul dec inc inc inc inc inc imul outsb inc push pop jbe push push push cmp push dec imul xor dec addr16 das sub imul pop xor je inc dec fs dec inc inc inc inc inc inc jp inc inc jb dec je popa addr16 dec push push jp arpl dec push push jp arpl dec push push jp arpl jno push cmp dec and gs jo inc dec arpl dec pop (bad) (bad) into data16 mov loop adc loope pop adc lods test dec push xor xchg add insl dec dec clc lcall and shlb sub adc inc push sub mov lret lret fcmovnu push dec adc sbb and sbb and mov sub dec js push outsl je dec inc addr16 ja push pop imul mov data16 cmp push inc push dec cmp inc dec xor je imul stos shlb (bad) mov enter lret fs in xchg enter jo in out jb inc je fs xchg addr16 inc cmpsl inc push or imul sub sub gs cmp inc inc push dec aaa inc inc push and xchg push addl push cmp shlb test or lea dec push (bad) or and leave lret dec imul pushw dec push push ret pop enter mov or mov mov mov dec sub insb inc inc inc adc ret xor push jns lcall or rclb pop pushf fxch fst push dec push xchg or pop adc push nop xchg dec int3 loop push adc jnp adc push adc push push stos mov and sbb sarl jns jp icebp and cmp dec inc push outsl xor inc xor es sbb or adc imul ror and leave adc push sbb inc sbb and sarl adc outsb xchg mov and sub pop adc xchg push arpl dec arpl push fs bound xchg sbb pop xor sbb push sub stos movups es stos or dec cmp inc adc xchg xchg add rcll fs add or mov enter repnz cmp (bad) sub adc pop adc dec dec out mov push js inc push cmp xchg adc fisub xchg push je xchg pop icebp xor flds sub icebp and (bad) aam gs jbe movsb adc push mov test add adc out arpl cltd inc dec dec add sbb fwait xchg xchg popa mov mov (bad) (bad) mov adc push je sub in dec das xor mov cs divb jae xchg xor inc cmpsb inc jno test cmp mov and (bad) aad dec jmp mov sub les inc pop aad mov xchg mov ss sbb out je mov imul adc or and xchg aad mov and mov inc jb ja nop (bad) mov lret or sub inc inc int3 mov insb test lahf loop gs xchg icebp sbb (bad) (bad) repz ljmp outsl ja enter mov mov or or shlb mov push in inc bound adc je jmp or rorb rcrb push and test repnz nop pop mov popa loope fmul test (bad) xor sbb dec lods test inc xchg daa je push jp dec cmp and pop sbb ficompl push pop push push push xchg rorl fsubl and xchg mov cmp test sub mov and movsb xlat push (bad) lock xchg mov in cli cmpsb test test ret add push xor inc mov arpl sub inc imul stos jg mov mov (bad) or sub xchg inc xchg test sub rorl nop cltd pop aam mov aam xor fwait and and and xor dec ja (bad) incb jbe repz xor lcall mov fwait and lcall int3 jle cmpsb dec xchg aad mov inc outsb testb inc gs dec push dec out cmpsb sub cs mov inc or jnp rcrb es out dec ss inc inc adc test sbb push and dec cwtl rolb test mov outsb cmp inc arpl cmp push adc mov xor pop test les es lahf (bad) and lods mov xchg cmc mov (bad) and outsb int3 test and inc push xor adc pop push test sub mov lcall and mov xor xor movsb sub test pushf mov mov xchg mov mov mov xor pushf and aaa test and mov lods pop mov mov mov and sub mov and lcall cmpsl cmpsl sub mov lcall cmpsb mov sbb cwtl sub xor sub lods sbb sub mov and mov lods sbb cwtl sub cltd cwtl es sub cmpsl sbb sub pop cltd mov aaa cltd mov sub xor sbb test xchg stos cwtl cmpsl sub cwtl cmpsl movsl cmpsl mov and pushf sub xor cmp and mov cmpsb xor sub mov xchg mov mov and stos and stos cmp and xor sub stos and cwtl mov mov cmp and aaa xchg mov test mov and lods pop cltd stos mov sub mov xor cmp mov mov and cwtl xchg cltd xchg xchg lcall pop mov sbb xchg xchg xchg movsl cmp mov xchg cltd stos lods xchg cltd stos stos xchg cltd stos test cltd stos cmpsb xchg cltd stos movsb fwait and pop xchg xchg xchg mov cmp test movsl and mov sub cmp mov sub mov mov lcall sub sub cmpsb xor mov mov pop xchg pushf mov sub mov sub xor mov xchg xchg mov mov mov mov mov sub test sbb pushf xor and ss movsb xor mov sub daa stos stos test xor mov cltd aaa mov sbb cmpsb xor mov and and mov and mov stos mov mov aaa mov mov mov cmp mov sub mov mov cmp mov mov mov sub adc xchg xchg mov sub and and and mov mov fwait sub mov cmpsl mov lods mov mov cltd cwtl sub mov stos and and and mov mov mov mov mov movsb adc sbb and movsb mov mov cmpsl mov mov sub mov mov stos and cwtl cwtl sub xor and stos and and cmpsb sub test mov sbb xor and sub mov es pushf movsb cmpsb cmp mov mov mov sbb pop xchg mov pushf and mov cmpsl mov cmp cmpsl mov mov test and and and mov and cmp sbb mov xor mov mov and movsb xor pushf and mov mov sub sub mov adc cmp mov sub test sub xor and xchg xchg stos xor mov xor mov mov mov sub mov and test xor mov adc mov mov mov sbb test sub mov sub mov xor mov sub test sub xor and xchg xchg stos xor mov xor mov mov mov sub mov lods cwtl mov mov ss stos mov mov mov cmp and stos mov mov xchg stos sbb mov lods fwait cmp movsb fwait cmp mov mov and mov sub cmpsb mov mov and and and and lcall mov mov ss xor aaa mov mov pushf test xchg cmpsb pushf mov mov and cwtl mov sbb cmpsb mov test mov xor mov cmp sub pushf test cltd xor fwait mov and mov test mov cwtl mov cwtl mov and movsb cmpb mov mov sub mov movsb cwtl cmpsl mov xor cmpsb test movsb sub movsb xor and xchg mov mov mov xor pushf and sub and mov lods pop mov mov mov and sub mov and inc test sbb xchg popf push roll mov popf and loope and cltd pusha rcrl inc add in cmp lods in fisttpll rorl adc movsl push pusha loope push and movsb int3 (bad) xor pop mov sbb dec mov jmp lea or lret in xchg jmp add dec dec dec dec dec push dec push fstpl dec sbb push sbb rorl aam rcrl adc mov push adc (bad) push dec sbb cltd adc adc adc push sbb aam xchg dec adc rclb dec push int3 adc adc add lea in and daa dec fs push dec dec sub adc mov xchg movl or cs call bound dec imul dec ja push dec aaa inc outsl inc adc stos mov nop fwait mov push mov test leave xor aaa dec xor xor das ja inc adc inc jns adcl xchg rcrl adc int dec aad lea pop push fwait or push adc nop push pop repz movsl xor sub and mov adc xor in dec dec push movsb sub mov mov mov aaa mov sbb cmpsb push adc pop adc xchg pop xchg pop fstps pop pop mov adc fimul adc xor icebp and and mov mov (bad) fadds mov jle rol test mov jb inc je jb and lret (bad) sbb mov mov lods mov mov cwtl sub mov and and and mov mov and les mov and movsb mov mov (bad) into and sbb sub sub (bad) shlb lret mov push fisttpll into insb inc inc mov and mov frstor mov ja inc xor enter bound arpl call inc adc rcrl inc test and sub pop push mov xor xchg jbe xchg xor inc add movsb xor xor cmp jae cmpsb mov adc push data16 lds push movsl imul cmpsb test mov adc pop sbb push sbb pushf call add int add lret xor sarl inc push dec dec push inc data16 inc inc dec (bad) stc or xchg or mov inc and aam sbb rorb push mov int3 lcall sub xor and cmp sbb sub (bad) int3 rorl jno inc bound imul (bad) and cltd adc cmp push aad rclb push daa sub cmp mov jae adc mov dec cmp pushf mov movsb in int3 mov jb data16 test xor dec pop and lcall mov xchg jae inc sbb mov and sbb mov daa sbb or lret push clc xchg dec les xorl bound movsl mov bound adc xchg dec loop,pn dec enter int mov hlt ret push xchg out xor addr16 cmpsb in gs addr16 jne mov sbb push xor addr16 mov and pop xchg xchg aas icebp pop lods mov xchg enter adc pop xchg popf jmp and rcll js push int3 (bad) call and lret mov push dec insb mov and jg test xchg inc fs es les push mov adc mov repnz xor stos cmp xor aam xchg int (bad) call rol (bad) stos dec test cltd (bad) imul shrl mov mov xor jb and sub and xchg dec or and stos jns mov mov mov jp mov test jnp adc jns cmp mov mov and and leave mov or ror lret mov (bad) andl xchg mov dec mov xor bound bound mov sbb xor mov or and or sbb ret mov dec adc xor leave mov dec mov mov jb jns stos mov jnp rolb (bad) sub dec mov sub mov mov mov push mov dec sbbl pop sub imul lret mov mov mov mov popa lret test mov xor sbb mov stos sub stos and adc adc jns mov test jp dec jns pop and adc mov dec addl xor sub sarl sbb and pop jb and mov or xchg lret xor xchg xchg xchg mov cmp sub or cmp mov adc sub and cmp stos rclb cmp ret xor cmpl and mov subl mov xor jns stos sbb ret cmp and leave mov jnp pop jnp jns cmp mov and adc and leave mov or dec leave jns jnp ret dec sbbl jnp sbb jns ret jb mov mov dec (bad) stos stos cmp arpl xor pop sub mov jns stos cmp stos leave jns stos mov stos imul adc jns and adc mov cmp adc adc and sarl xchg push jnp xchg and mov jnp mov stos xor mov jns stos sbb stos leave jns stos mov stos imul inc test xor mov leave mov leave mov or mov or rcrl jnp ret ret sbb dec pop ret mov or mov or mov or mov jnp sub jns cmp mov ret sbb or or or or or adcl cmp mov sbb (bad) and sarb jns pop and adc popa mov jno xor inc adc jno and jno xor inc adc jno and jae mov jae jno jae mov pop jae jns xor xchg ret mov mov jb imul inc sbb ret cmp or adc stos sub or dec xor or or or mov jns jnp mov sub mov shll jnp lret jp inc adc mov jnp rcrl jp sub cmp and and jnp lret ret mov arpl arpl sbb sub adc sbb mov inc xchg adc mov dec mov adc adc xchg stos stos inc jp xor inc sbb sarb ret push xor cmp jb xor cmp dec and mov or mov lret cmp adc jp jp jb xor cmp sbb jae sarl lcall dec mov mov (bad) cmpl adc lret jae mov pop xor mov and or or or mov (bad) adc jnp arpl jns pop or or or pop and dec stos xor or or jp and mov xor mov rcrl mov mov jp dec or or adc cmp sbb mov mov xor or or jp dec jae jp or ror sbbl fwait sbb xor ret jp mov jns mov mov add bound popa mov or or or and mov push sbb sub or jp mov or sub or and xor jnp sub jp mov jns mov dec xchg ret jnp xchg rol dec mov and dec mov mov (bad) rol mov jns pop cmp or or jns stos stos and ret jns mov jns mov inc mov mov dec mov shrl mov or or imul or or add or mov fwait cmp mov or and lcall ret popa (bad) sub stos dec mov dec cmp pop dec adc push and mov jp pop mov push mov push and dec or dec mov mov xchg jp or inc mov mov jns mov push and mov jp jae adc adc inc dec ret adc xor xchg rol xor jnp xchg push jns jns jns ret and jp mov jnp sub sarl or mov sub stos mov pop jns mov bound mov arpl sbb and mov bound mov jb pop bound or adc lcall mov lcall jnp jnp xchg xor jns jae pop or and xor or bound mov mov or mov lret inc and pop imul bound lret jb or cmp or lret jnp mov jns mov ret mov sub mov sub pop sarl lret dec mov inc xor sub ret jb or cltd mov or lret or mov ret push jnp pop and or or or jnp xor jns jae dec and stos cwtl lods sub cltd cwtl es sub cmpsl sbb sub pop cltd mov aaa mov and mov pushf sub mov mov push and mov push cmp push outsl je inc inc jbe fs inc sub xor jbe ss jp pop dec cmp inc xor dec inc jb pop adc dec or xchg rcll sbb push fwait adc cltd adc adc sbb push push sahf adc push pop push mov xchg cltd test xchg push push mov (bad) xchg or adc pop adc (bad) les fsubl cwtl outsb xchg mov into insb (bad) mov int3 repnz movsb mov inc fs insb cmp push xor pop dec xor das arpl das mov test dec es push inc enter cmp lcall mov add (bad) mov mov mov dec push xchg sub sarl (bad) mov mov add and cmp es inc testb adc push push dec xor gs push fs dec dec push pop addr16 jp addr16 push inc xor push push cmp jb fs jno inc xor ja pop xor adc pop icebp cmp movsl sub fwait and push mov fmuls adc pushf xchg les mov push fsubrp xchg pop pop jo mov push xor xor adc push mov stos inc push addr16 sub push (bad) out push push xchg inc ds stos xor outsb (bad) cld xchg sub mov pop mov inc push adc adcb jno xchg sbb xchg lcall clc lcall (bad) inc pop je icebp and aad mov sbb fwait or iret call jp nop push mov adc daa adcl daa or rcll outsl xor xor sub inc push ss push push inc enter fs push push pop mov xor inc loope adc popa add into es push ja insl bound nop insb mov jb test fstpl mov mov xchg (bad) into test jae inc xchg lods bound adc data16 bound dec or xchg pop int3 call test shlb int adc mov sub inc sbb popf lea dec or cs xor jmp int dec call jl imul cltd cmpsl cmp and mov hlt lods xchg push or cmp push nop test sahf rclb adc movsb mov adc mov mov cmp cmp ss mov mov push inc inc repz and mov lret adc dec dec stos and xor les xchg push dec xchg pop shll data16 dec jb fs dec jbe jns lcall icebp sbb ljmp icebp sbb (bad) fdiv inc test setno out sub and jp lcall xchg fwait cmp mov and xchg lods loope ret mov mov shlb dec outsl pop sub (bad) push sbb adc mov xchg mov pop cwtl mov enter sahf scas pushf hlt (bad) lret testl cmpsb (bad) icebp xor cmp int3 lcall mov je sbb (bad) cltd mov dec push dec inc cwtl rcll in inc or lret or xor das jo les inc pop je jno and popf adc lods mov cmp rolb insb inc cmp sbb (bad) call xchg bound cmp xchg clc pushf adc mov mov (bad) mov adc sub and rol sbb cltd mov fimull sbb insb mov mov adc xchg popf fnop mov les lcall popa push enter push daa gs es push dec and or push jbe mov movsl push popa fs dec sub addr16 adc push xchg sbb xchg rorl (bad) ljmp push les push repz xor mov js push jno sbb fnstsw mov mov pushf flds inc sub adc xor int3 movsb into lock mov cwtl rcrb push rorb or movsl adc push jno adc outsl adc cld lea das mov ror xchg fcoms jbe cmpsb mov jl or adc xor push aam cmpsb es and push adc adc fs push je movsb aad inc adc xchg adc adc add xchg adc xchg jecxz movsb adc adc hlt jecxz push adc add add jae repnz jne test inc pop (bad) testb jae aaa mov movsl jbe out inc jbe ja push push adc repnz mov push xchg inc fs xchg inc xchg and fs inc and adc fs xchg inc inc and push xchg push je xrelease adc push xor adc adc je mov add push adc xchg xor xchg xor and adc addr16 and add xor notb adc je mov xchg adc in fs aam adc movsl jne test inc inc test adc xchg push xor lds xor jne test cmc add cmc jne aam daa push in adc adc xchg xor xchg repz xchg test xchg add inc adc adc je mov push je adc fs fs aam adc movsl jne test inc xor adc ss xchg repz xchg addr16 ja pop arpl jae adc jae test mov jbe adc adc xor xchg push fs add xor addr16 lds ss adc and push inc je inc addr16 jbe inc adc adc je and push jae xor arpl fs testb jne lds push arpl jae adc cmpsb out ja xor adc lds mov in fs xchg les and push inc daa mov repz xor adc aam je adc push push je xchg inc push test push divl fs (bad) mull test addr16 repnz jae cmpsl je inc inc xchg and mov cmpsl je xchg adc jb jae hlt xchg adc inc xchg adc mulb repz inc fs push xor adc adc je adc xchg adc addr16 lds xchg lds xchg in and (bad) jae addl movsl adc xor add bound repnz adc gs push push push je in jbe adc ss jb repz movsl jne inc testb inc fs adc repnz xchg adc xor inc testb divb push lds je push cmc inc mull xacquire add repnz push bound je inc inc xchg and add arpl inc gs inc and testb inc arpl testb jae adc je add inc addr16 xor repz aaa adc repnz loop xchg adc add notl loop repz inc test je adc xor xchg adc xchg les xchg adc xchg inc les testb repnz (bad) repz add mov test inc push inc jne notb cmc xchg and inc push xchg and adc adc adc adc andl mull inc push xchg adc adc adc inc inc div xor jb repz and adc adc notb hlt cmc push inc add inc push mov push xchg inc inc test mov repz push xchg repz push adc xor ja addr16 push xchg adc adc (bad) gs inc addr16 push inc adc and test xor test arpl data16 push (bad) repz arpl add adc inc xor inc inc mull inc xor adcl add push adc addr16 test je mov adc push push movsl cmpsw jae je push inc xor testb movb testb adc add adc add adc notb notb test xor add addl add inc and jae je je pop xor xchg inc in fs lds jne xchg je adc adc movsl xchg addl divl xchg push mov jb loop xchg push xor adc je fs and bound xchg xor inc inc inc mov inc inc test push je push jae inc adc ja je movsb aad inc inc push add adc push xchg add jecxz push mov aad inc pop xor adc adc loop test and adc test xor xchg adc adc adc push test xchg xor adc divb xor xchg adc adc xchg ret adc testb xchg inc xor adc adc push je jbe push push adc mov sub cmpsl cmp test cmpsl adc test mov xor and stos and mov movsl and sbb and add in sbb mov popa add dec or call pop lea lds sbb sub in (bad) cmovbe cs test mov push sub dec inc mov cwtl shlb xchg sahf jo bound cmp pop sub lcall sbb mov push lret xor mov mov mov cltd sbb adc fimull test in fs fist mov shlb cmpsb mov mov aam pop mov stos jb and repz xchg test xchg add iret nop fstps mov lea pop aad enter pushf loope xor or inc cltd and cltd leave mov and imul dec push push enter imul xor sub xor mov stos adc cmp and aaa cwtl mov xchg jbe push push je xchg inc push lds les divl fs adcl sub cmp data16 out dec call dec or repz cmpsb cmp mov aaa xchg cwtl lods mov inc cmp xor (bad) push mov or mov lret adc imul rol or xchg xchg xchg jae and adc movsb sub jmp aas cltd adc dec dec es jb dec xor imul mov xchg sbb adc mov into sbb mov mov xor lcall nop jb rclb mov movsl jmp sub or or add mov jae adc sbb nop mov pop inc inc test and pop adc xchg data16 inc adc xchg xchg adc mov mov test xchg sbb push fs adc pushf cltd dec push mov xchg mov in xor add inc inc cmp rcll shll inc test lods js push inc stos stos and cmpsb into shrl mov (bad) mov sbb push sbb adc mov loope sub xor sub xor xor cmp sbb ljmp test or mov push jmp or out inc fs dec das adc icebp xor cld inc out stos xor fwait movsl cmp test cmpsb and daa adc cs (bad) or jo mov xchg (bad) into pop cwtl shrb mov mov and cmpsb and cmpsl cmp and add adc jl scas sbb mov pusha rcll dec ljmp movsb insb xor and dec push inc test xchg cmp repnz cltd mov movsb rorl inc lret mov ljmp dec xchg lcall mov or shll xor lret bound (bad) es les movsb xor mov enter int xchg pop xchg insb les dec push ja push inc dec inc popa dec push jbe inc and sbb das xchg mov test movsl pop or mov (bad) daa sub or inc mov cwtl int3 mov rcl or and dec (bad) (bad) incb and inc mov icebp daa xchg inc sahf mov arpl xor push das loop dec repnz mov and ss add nop dec dec enter adc and or push push lea test lret jae and or xchg lcall pop and pop adc push inc xchg int3 mov call fiaddl lods lea in insl xchg and jno mov pop or or or js aam xchg andl mov icebp xor int adc adc lcall repz mov popa jbe push in dec dec xor cmp pop loop aaa and xchg push jg jmp push mov out enter movsl jl inc cmp cmp sbb mov dec lock mov ljmp xchg xchg pop pushf aad bound xchg aad fisttpll loop xor ja pushf dec imul insl sub sub sub lods out push daa sub out imul call outsb call dec dec dec jmp or mov mov sub sub push sub push cs mov in mov dec out scas lret out or out jmp insl das or leave sub ljmp insb in push ljmp test sub sub or insl sub sub or dec in push in push push pop es pop sub leave add test out lods in push gs lods push pop es pop sub leave or in mov test sub sub out push scas dec scas dec scas dec scas dec scas dec scas or and sub stos cs mov or mov mov push dec imul or in sub out dec lret or cs test jmp test sub into stos sub sub sub enter in sub ljmp das dec scas dec scas dec lret call sub dec jmp jmp test daa sub jmp daa push es cmpsb mov sub sub (bad) out jmp imul test cmpsl or dec dec iret or push dec imul enter xchg (bad) push sub mov stos or test enter out sub sub sub or dec es dec sub or dec dec scas call test (bad) sub or or out dec in in call int3 in call mov mov test push sub int sub or daa sub lret or call sub mov mov or mov or in dec or in out sub lret outsl sub jmp mov int stos pop or sub stos sub dec cmpsb insb leavew push dec add dec (bad) sub sub mov xchg (bad) dec enter enter sub dec dec scas sub dec enter in out sub sub or push in call mov mov test push sub sub push mov (bad) insl in mov mov mov or inc lret (bad) call lret dec (bad) call dec or leave or or out dec in mov sub push es dec dec into int sub out enter into insl es or mov inc dec dec iret dec (bad) mov cmpsb leave mov sub xchg dec test lret sub xchg or gs push (bad) push lods test sub sub ljmp mov dec es mov lods int3 ljmp cmpsl or ljmp in lret gs in sub sub push dec or cs dec stos sub sub dec dec mov insl mov into jmp test imul cs enter sub or push jmp call call or push stos or cmpsb iret or int3 int3 call insl and test mov leave mov (bad) dec call es push cs mov dec lea or push or test call out or sub enter push xchg lret dec int3 call sub or sub mov out push sub push sub iret sub or sub insl imul sub sub in sub call out mov sub sub xchg (bad) lods daa push dec inc lret inc mov imul imul call sub mov sub lods daa sub push dec push out lret or in sub push sub imul cs stos dec in mov push sub xchg sub imul or dec dec iret sub es int mov or test sub test in ljmp dec sub call push push or (bad) push or int or in dec scas call or xchg test sub out (bad) sub sub dec enter dec or dec and xor cmp mov mov test pushf lods fwait cwtl sbb mov mov sub sbb daa sbb and popa or add mov dec push mov aad cmpb lds push dec movsl loope test mov pop push sbb in imul ljmp test sub sub or push sub or dec in push jmp pop es add xor xor cmpl (bad) mov and pushf xchg mov lret data16 fwait cmc pop test mov inc je and fs cltd sbb mov dec xchg inc and xor inc dec call mov mov sarl adc shll xlat xor or fwait cltd jns lret and ds movsb fs je push (bad) gs ja je add les and je mov pop mov inc xchg and inc and mull (bad) hlt cmpsl jae mov mov jbe mov push xchg xor mov cltd mov cmp sub adc lds int add push push lds popa test pop or (bad) jmp movsl adc pop inc ret xchg xchg sub rclb imul or or out dec in in call int3 in call or push or xor push and jnp jns sbb push push sbb dec sub (bad) insl in mov sub rcll sbb adc lods push aaa inc imul inc push inc imul lcall pusha lcall mull in inc test xchg inc dec xchg lea mov fs nop (bad) mov and xchg xor inc xor adc pop std and inc sar nop ret in mov mov inc das dec pop mov mov push xchg and repz inc gs xor sub sbb sbb sub in sbb push inc push (bad) push lods test daa stos daa xor sbb sub and mov xchg fst int rcrb outsb fmulp mov (bad) scas mov xchg rcrb in mov test into mov xchg mov int3 shl xchg mov in and sbb cmpsl cmp mov pop fwait sub sbb lea dec pop add adc nop xchg pop rcrl int adc mov (bad) push lcall insb lock pushf fs sbb mov dec call inc inc sub push addr16 push imul dec jo inc push inc addr16 mov and mov sbb rorl loop insb adc adcl dec aaa xor push dec loop jns (bad) sahf out inc xor cmp dec push push jns push inc push dec inc dec je loop push mov (bad) or add xor push dec sbb dec or and int and adc int3 dec push out cmp js loop push xchg xchg cmp popl pop outsl insb dec clc xchg push incb lds xor dec adc xchg sbb adc daa or (bad) push or int or in dec scas icebp sub mov mov push pop adc inc fs insb lret jmp push push xchg pusha (bad) mov daa ja dec int3 aad add arpl xchg movsb and sub adc inc inc int dec ljmp mov and inc jne gs cmp or sbb push js dec les and adc (bad) nop repnz xor xchg icebp and mov and xor sbb jb inc test mov in in test int and test aas adc or cmpsb es in int3 and inc xor lret jl test loop dec adc push mov and xchg and loop cmp mov adc dec mov mov nop shlb outsb push es jno sub shrb in sub mov adc dec in sbb lea inc imul push or imul mov daa orl lret push enter dec call push or mov jmp mov xchg or call inc sahf and scas and test sbb nop outsb (bad) (bad) and push mov dec dec or inc xor adc je (bad) into cwtl int3 lret loop fiadd and and xor mov push mov (bad) mov inc movsb lret in int3 call push xchg stos adc inc xor outsl dec inc pop dec cmp xor mov dec cmp push push adc and scas mov xchg repnz cmp cmp pop movsb gs push dec and rclb mov js pop push dec stos xchg and out inc jns push jb bound lret mov dec insb in addr16 jp cmp inc inc inc inc inc inc dec imul inc dec push data16 xor dec inc dec je sub dec das cmp dec push gs push push inc addr16 addr16 push xor xor dec pop addr16 cmp ja dec jb xor dec inc dec push inc push ss push arpl inc imul push aaa xor dec dec cmp gs jb ss inc push dec inc inc inc jbe inc xor push inc addr16 inc dec xor push pop push imul inc insb insl pop push imul jbe ja addr16 addr16 inc inc inc inc jo imul push dec xor dec inc pop push inc xor inc dec push push das xor dec xor dec push data16 inc inc inc inc dec push pop cmp cmp pop push imul jp dec jp push push imul push aaa outsl je das inc je cmp jp xor xor bound push push imul pop xor dec dec cmp inc ja pop inc push xor imul inc dec jae imul inc xor xor inc dec sub push xor xor inc inc inc inc ss push addr16 dec ja insl inc xor cmp dec xor pop jbe addr16 inc inc inc inc imul dec cmp push insl outsl push push jbe dec cmp xor dec dec pop dec pop imul push push inc inc inc jns das push xor push push dec jae xor xor inc xor inc inc sub cmp sub cmp popa push inc inc ja dec xor pop dec insl dec ja inc addr16 imul push dec xor popa inc pop push addr16 dec cmp jp dec push xor xor gs dec dec pop xor inc push sub push aaa sub dec js push dec inc push inc inc inc dec imul js inc jns push gs jns xor jae push dec inc dec das cmp cmp inc addr16 xor arpl jp xor dec pop jbe push dec outsb imul push xor inc push cmp inc sub cmp inc push pop xor push inc push inc cmp jne inc push js push inc inc inc imul dec inc cmp xor xor pop dec imul imul push dec xor dec inc pop push inc xor inc dec push push das xor dec xor dec push data16 inc inc inc inc dec push pop cmp cmp pop push imul jp dec jp push push imul push aaa outsl je das inc je cmp jp xor xor bound push push imul pop xor dec dec cmp inc ja pop inc push xor imul inc dec jae imul inc xor xor inc dec sub push xor dec cmp push outsl inc inc inc inc aaa dec push inc ja inc inc dec inc push js push inc inc push push xor inc inc jp dec xor xor jne jno inc dec xor inc inc inc dec inc dec ja insl inc xor cmp jbe ja addr16 addr16 inc inc inc inc gs push dec cmp push outsl dec insb cmp inc pop push addr16 cmp das imul fs das inc inc inc inc inc inc jo data16 xor fs dec xor gs dec dec xor dec dec cmp dec push inc dec jns push jne xor cmp pop xor dec dec fs push xor dec dec cmp dec dec fs cmp xor ja addr16 inc xor gs aaa xor dec imul addr16 inc pop dec pop addr16 inc jno ss push inc xor outsb outsl push inc ja inc inc dec inc push push ja inc inc dec dec inc inc jp inc inc jo ja inc inc dec inc imul inc addr16 pop addr16 das das das data16 pop imul dec inc cmp xor xor pop dec imul imul push dec xor dec inc pop push inc xor inc dec push dec das xor dec xor bound data16 inc inc inc inc dec push pop cmp cmp push push imul cmp outsl insb dec cmp dec xor sub addr16 data16 dec dec xor xor ja xor cmp sub push push imul xor dec inc dec cmp inc ja pop inc push xor imul inc dec jae imul inc xor xor inc dec sub push jp inc pop insl outsl push push jae dec dec inc inc inc dec push push xor jae cmp jns dec push addr16 jbe imul inc inc xor addr16 insb inc fs xor jns push gs dec push push push dec inc gs addr16 imul push dec push push jns inc push cmp arpl imul jns push push addr16 je addr16 push xor pop addr16 inc addr16 inc inc imul inc imul inc inc aaa arpl gs das data16 inc addr16 push ja inc ja inc push addr16 ja das das push xor dec xor dec push outsb dec cmp ja insb arpl inc xor inc sub cmp inc push inc cmpl mov adc push push xchg pop dec push push pop push xchg rcll push pop adc rclb into push sbb push pop push adc xchg nop pop lret (bad) sbb push cltd xchg push sbb into sbb popf aam fcompl push adc xchg dec xchg push pop rcll dec sbb xchg adc sbb dec push or cmpsl or int3 test dec es into or mov sub call jbe test nop fistpl push push sbb aam fcoml pop xchg popf fstps pop xchg or or or test xor movsb test pop lcall or sahf fs addl xchg adc push lcall and rol in lods jmp cmc and push push or xchg xchg inc or call insl dec cmpsb insl ljmp cmp int lcall imul dec cmp dec inc inc inc inc ss push addr16 cmp sbb cmp decb cmp push insl outsl push push and push sbb rcll es and enter (bad) mov lret lret sahf push mov inc dec cmp sub xor and mov mov or popa inc pop push addr16 push and cmp aaa cwtl cmpsb mov mov sbb xor test xchg mov movsb cmp or xchg add mov pop xor ret xchg xchg and repz xchg fs mov sarl sub xchg adc sbb adc dec sbb movsb jecxz inc jbe inc jne adc (bad) or mov pusha sahf sbb jne nop dec adc or loop imul (bad) (bad) (bad) (bad) (bad) and popf push dec xchg fwait shlb and mov dec dec dec adc pop pushf dec adc pushl mov popa lret jns inc cmpsl add inc mov sahf mov dec sbb adc adc shlb cltd ret lcall xchg rclb mov in sub mov in gs (bad) inc mov dec mov ja inc pop dec xchg lds flds (bad) insl int pop adc popf call cmpsl je inc push xlat jb movsl mov xchg cltd fldl (bad) (bad) call adc popa dec push push imul test cwtl int3 int3 cmpsb xchg clc cltd mov inc popw (bad) push sbb xor test or int3 int dec sub or pop int3 sbb inc xor leave xor push push and sub scas cwtl mov inc push cmp arpl imul into mov stos imul rcl or pop xchg fdivrs xor adcl test cmp les xchg sub xchg rcr push nop nop jae mov cltd cltd xchg dec mov test xchg and (bad) cld mov sub jg sbb cmp icebp sub pop fs xor cmc gs and js adc gs fs js adc sub mov dec xchg push popf push xchg loop inc icebp sub cmp xor rclb in push inc cmp imul or repnz and adc (bad) stc cltd adc sbb icebp cmp cld inc subps lea or mov sub sub cmp (bad) push xor pop mov mov sbb movsb cwtl mov xor daa movsb pushf adc cmpsb cmp sub mov sbb stos daa cmpsb xor and sbb cmpsl sbb mov sub sbb cmp mov cmpsl sub mov movsl pushf sbb cwtl and movsb mov and fwait cmp xor sub mov mov test stos aaa cwtl cmpsl mov lods test movsb cmp mov sbb and xor sbb mov sbb and xor cwtl mov xor mov mov mov and pushf pushf movsl mov fwait cmp xor movsb test and xor movsb sbb and mov mov mov stos daa mov sbb and mov xor sub xor xchg lcall mov mov and cmpsb sub mov and sub xor sbb sub xor mov cmp mov mov and xor movsb mov sbb sub and sbb mov sbb movsb test and cmpsl sub sbb mov cmp daa and and lods mov cmp xor and stos and test cmpsl ss mov mov mov cmp sbb mov sub cmp xor movsb cwtl mov xor daa movsb pushf adc cmpsb cmp sub mov sbb stos daa cmpsb xor and sbb cmpsl sbb mov sub sbb cmp mov cmpsl sub mov movsl pushf sbb cwtl and movsb mov and fwait cmp xor sub mov mov mov sub cmp mov and and sub and fwait cmp mov movsb mov xor cmp and xor and sub and movsb cmpsl and xchg cmpsb cmp sub cmp sub and mov sub test sub cwtl cwtl and sub sbb mov cmp and and sub cmp es xchg cwtl sub lcall xor mov mov and mov mov mov lods mov xor xor test and sub movsb and mov and and stos sub test mov and cmp test xor xchg mov lods mov cmp xor and stos and test cmpsl ss mov mov mov cmp sbb mov mov cwtl mov daa and cmpsb cmp stos cltd mov sbb mov sbb xor cmpsb sub cmp mov mov xor sbb and cmp mov cmpsl sub mov movsl pushf sbb cwtl and movsb mov and fwait cmp xor sub mov pushf and mov sbb and mov cmpsl cmpsb sub mov and mov pushf mov and xor test xor sbb and sub movsb mov and mov mov and lods sub mov cmpsb sbb mov xor sub sub mov es mov movsl sub cmpsb sub mov lcall stos test sub mov stos sbb mov sub stos sbb mov sbb mov sbb mov sbb mov sbb mov pop mov mov adc sub mov mov xchg xchg xchg mov cmp mov test stos sub and sub and test and mov cmp movsl mov xor pushf and and mov mov mov fwait sub mov mov stos mov daa and lcall mov mov and sub cmp mov sbb mov mov cltd and and mov cmp mov sub mov cmpsl mov cmpsb mov mov lods xor mov fwait sub mov xor mov cmp movsl xor ss and mov and cmp sub mov es mov mov cmp and sbb test mov mov sbb cmp and mov mov mov cmpsb sbb pop xchg xchg xchg movsl mov lods mov mov xchg lcall xor ss and mov and pop xchg xchg mov sub xchg xchg xchg xchg mov stos mov and mov and cmp xor sub sub sub cmpsl mov mov movsl xor ss and mov and pop xchg xchg mov mov es mov xchg xchg xchg mov mov sub mov mov and sbb cmp and sub cmp mov stos mov xor sub sub pushf cmpsl cmp and xor and and test sbb xchg xchg xchg pushf mov xchg mov mov cmp and mov sub adc cmp mov sbb mov mov and xor cmp xchg xchg pushf mov xchg mov sbb cltd aaa movsb sub pop xchg mov mov xor fwait xchg xchg lcall xor movsl and test mov cmp mov mov mov add int3 (bad) rcl xchg or xchg or cmp push cltd popa in inc aad ror or pusha shll adc fsub sbb (bad) sub jmp push mov in sub mov jmp or addr16 xchg or jmp dec mov out ljmp scas sub or scas in push out call stos sub outsb in int3 call inc lea or sub imul test insb sub out inc or loop movsb and mov enter jb xchg xchg mov fs dec leave sub or mov outsl dec inc (bad) dec sub push sub sbb push pop test in out in ljmp xor mov xor mov stos lret mov sbb cmp mov aam nop push insb pushf test cwtl (bad) lock hlt in repz xor jb jp mov lret and lret mov mov cmp out xchg roll in test and sbb adc mov ss test mov add dec sub and das xor aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or call insb mov and xchg mov sub insb out es scas dec ljmp and mov mov push out add add lds push xchg addr16 inc cmp sbb daa sbb mov out cwtl and adc xor sbb mov mov and mov mov mov lods mov xor xor sbb xchg push adc cltd pop pop cmp push and mov add adc (bad) inc outsb pop adc je and ror (bad) jnp test mov daa sub imul out enter sub jmp push or into in sub mov jmp or addr16 xchg or jmp dec mov out ljmp sub push leave cmpsl or pop sub out or stos sub add scas inc dec dec leave dec in test sub sub addr16 push ljmp push sub cs test sub sub dec cs mov leave dec out jmp insb leave push test cmpsl or dec dec iret sub cmpsl cs movsl in sub sub dec das or cmpsl or dec or dec push insb in sub dec lods sub jmp sub inc or sub dec insl sub dec in sub dec insl sub dec in sub dec lods mov in sub add mov call sub enter in push dec jmp call stos sub sub daa or or stos or jmp or scas into dec outsl dec imul cs (bad) or sub sub or es and dec lods call inc imul leave dec imul sub sub sub test sub lret inc (bad) or push into push xchg or dec xchg sub dec sub imul push or test sub sub out lods sub dec jmp push scas stos dec cs sub lret and mov mov dec imul sub sub sub test sub mov mov dec mov mov sub push stos (bad) mov sub sub stos lds (bad) or call or stos or sub dec sub test insl lods jmp in in outsl sub mov stos sub ljmp mov dec imul sub sub sub in out dec dec mov in in es lretw dec sub imul out iret push sub out inc ljmp jmp test or in sub dec imul out mov dec imul sub sub sub in out dec out dec mov push in in mov dec sub sub in insb mov dec (bad) sub imul dec dec call sub mov dec sub (bad) dec cs jmp into imul mov cs mov sub sub in sub lods movsl out vpaddsw inc insl sub sub lret and inc dec jmp gs or into push xchg sub push or in sub test out vpaddsb push dec and in lods mov sub into or out in lea lea dec imul outsb out or sub dec dec imul outsl or or data16 in cmpsl sub data16 sub dec or insb out dec dec scas inc in sub dec sub outsl sub int3 sub sub sub or sub dec sub int3 out dec dec inc dec test ljmp es imul dec sub xchg es sub mov imul vcvttpd2dq out dec mov das dec sub imul test sub leave dec insb in or lods mov push sub imul mov stos push dec dec dec mov sub sub into out addr16 and in out call mov leave push or out into mov sub push call sub or test mov lret dec es cs dec out dec sub or test sub mov stos mov inc sub jmp mov or test data16 sub sub sub daa cs imul push data16 jmp dec cs sub mov lret cs sub dec sub dec das sub mov sub sub push stos mov ljmp sub dec das dec dec int3 cs lods in sub mov or sub dec dec call out lret sub cmpsb call or sub cs dec dec push inc mov in test push inc int push or sub dec sub out mov dec dec or sub or daa or out or sub or sub sub sub push movsl out imul test or sub in into inc in into in xchg call sub out call sub sub dec jmp es sub or sub dec lods or xchg push or push outsl inc in out in mov mov insb call mov push sub sub imul sub das dec sub es or mov in out es dec mov ljmp iret dec sub mov or lods test sub sub cmpsb dec sub push or call sub mov test sub dec or imul sub out in sub sub or imul (bad) sub mov test dec sub sub sub or out movaps lret dec outsb in leave or call sub dec sub sub sub out in push call dec sub out test ljmp sub sub (bad) sub inc in dec jmp sub sub sub out xchg or sub sub or sub or or daa sub xchg iret or in lods in enter (bad) sub out sub in sub out xchg dec sub jmp in movb dec add sub or daa sub sub test out lret dec (bad) sub (bad) or cs imul mov dec enter test push dec addr16 mov add leave push in mov sub or or in mov int out push sub sub sub or dec es push in test test in int sub sub mov mov mov mov sub data16 and out or sub sub in out test (bad) insb call imul outsb scas imul dec mov in vpaddsb mov imul (bad) sub push mov sub imul out dec in lods inc dec dec enter or sub sub sub dec sub out push sub out dec push dec (bad) gs mov push push mov dec inc enter xchg int sub sub sub dec stos pop and enter sub mov dec push or test call push push or test sub sub mov dec cmpsl or inc or dec test or stos dec in push dec in mov insl out mov mov mov dec out mov call push sub leave or jmp mov sub or xchg stos sub mov or xchg dec sub push push or dec sub mov sub mov push or dec sub jmp insb mov out push jmp lea es int test int3 int3 enter in sub lea push mov sub sub push sub test sub dec jmp dec sub dec out or stos dec (bad) or dec ljmp or sub or dec stos dec (bad) daa cmovs dec lea or stos dec (bad) dec into enter gs push or test sub sub sub sub or scas push imul out xchg sub xchg or scas lods or inc sub add test out ljmp push enter sub jmp test or stos dec mov das dec call in push inc outsb (bad) and test sub cs sub sub es in dec or call push pop daa or sub sub mov dec sub mov jmp dec mov inc in call inc sub add in test out imul test outsl or dec sub sub test out in out sub jmp mov int dec out add mov test stos dec mov jmp dec insl lods sub test test dec test dec es out lds or out inc sub es int dec ljmp in out sub dec dec or lret or sub push xchg sub test or sub enter jmp dec sub daa or dec sub sub test cmpsl and mov xor xor sub cmp mov mov shll or popf sub test rcr shll and xchg sub (bad) pop adc addl mov or sub adc cmp leave dec fldcw popf xchg adc or mov adc fisttpll add adc sarl adc mov or xor sub (bad) mov bound xchg mov into insb xlat push push dec push data16 push push push push dec das popa dec push pop push dec adc cmp xchg ret dec stos mov cmp xchg imul enter fisub es xor ljmp in sub add mov push cmpsl sbb mov mov cmp sub sub daa or or stos or insb mov daa or scas into dec outsl dec imul cs (bad) or test dec es cs sub lret sub call inc imul movsl xor ss push sbb int push adc lea out xor push ss dec push push jmp sub rcrl and sub lods sub dec or in call pop nop rclb mov adc xchg mov cmp (bad) mov lcall and inc (bad) sub push lea stos or enter scas test insl lods jmp jmp sub movsb sub jbe jns cld test lret jp inc adc mov nop rclb popf int sahf push sbb fmull pop int rclb (bad) or adc adc insb mov sub dec in jmp insb dec dec dec (bad) sub imul adcb in pop les stos int3 dec test mov adc sub sbb out test es mov sbb jno mov and int3 or dec int3 fwait rolb adcl ret push hlt decl push inc mov and je mov jne mov inc pop xor mov xchg jae push je test inc jae push jb ja es shrl movsb sub popf add dec add adc jae add and adc push arpl mov or jmp sub mov imul mov ror sub jp cmp ret push and adc or jp adcl cmovs dec push sub das stc adc dec push (bad) mov adc test and and sbb push adc sbb fwait push or into dec pop rorl (bad) push ret adc dec or dec xor push push (bad) aam and lret lcall xchg (bad) and repz test adc inc and xor mov adc inc xchg inc jbe sub sub mov inc (bad) inc test ja adc lods dec or sbb adc test out (bad) nop lock mov fimul inc jns dec jbe xor bound mov lcall and push inc outsl adc push adc test push push xchg sbb dec adc lret int3 into adc adc mov (bad) stos orl outsl push je mov xor mov fisub adc sbb mov mov and popa adc xchg lea movsb and xor test in xor sub cmpsb (bad) aam push xor xor inc lret mov sbb adc sub sub dec mov je inc outsl adc dec daa test call push inc mov (bad) push inc and push or xchg inc mov daa ja adc xchg sbb xor cmp mov sub mov dec dec or movaps lret inc dec icebp sbb mov mov or movsb push hlt out hlt adc cmc inc mov fst xor or daa xor inc inc or shll lcall (bad) lock xor mulb mov xchg push sbb or sahf or xor adc flds push xchg xchg mov mov or pop sbb xchg into xchg or push test inc and cmc and and dec bound adc dec push mov and and or xchg push xchg pushf fsts mov add es cmpsb fcomps lcall cwtl inc je mov cmp int3 outsb in fcmovb data16 sbb sbb or mov int3 call adc sbb sbb xchg popa (bad) cltd and and outsl mov push xchg data16 mov ss sbb test (bad) sub xor dec nop mov sub sub or test sub mov mov or les pop xor xor mov inc ja mov cltd adc inc inc dec cmp push data16 imul gs fs imul push popa insb imul jno inc dec inc inc inc inc push dec addr16 das data16 inc pop outsl pop dec imul push jp pop inc xor inc push fs dec js pop push jp pop inc xor inc push fs dec js pop push jp pop inc xor jp push fs js pop pop jp pop inc xor inc push fs js push dec inc push inc inc inc dec insb dec insb dec push inc js dec inc dec gs js dec inc dec inc popa inc xor xor dec je cmp jne pop xor pop das fs pop insl dec push je dec cmp insb arpl inc push dec inc inc inc dec push ja inc push ja inc js dec inc dec dec pop inc inc push inc jp inc inc jo ja inc inc inc popa inc sub das inc xor gs inc inc inc jne inc inc inc dec inc aaa cmp dec inc ja inc fs push inc das xor cmp pop inc inc inc inc inc fs outsl outsl dec push push pop outsl pop dec fs dec inc das addr16 inc inc dec inc xor pop das fs je insl dec push dec dec das inc xor pop das fs js imul dec xor outsl push push dec push das cmp dec das popa inc ja push dec push insb pop push push insb bound das jbe das xor inc inc dec pop inc inc ja jb insl imul push dec inc popa push dec das jbe inc js ja cmp inc fs xor insb pop push push jne aaa sub aaa das cmp js dec inc inc push inc ss xor inc inc inc push je jno xor dec inc inc xor dec dec jb dec jbe ja addr16 push push inc popa cmp push push dec inc dec xor aaa dec dec xor inc sub jns sub xor dec je push inc jne inc ja inc inc xor xor jo inc jbe pop outsl insb push outsl insb xor insl popa dec push gs dec push pop addr16 push inc inc cmp arpl inc cmp jne ss inc dec push pop addr16 xor inc insb ja inc inc dec dec inc insl inc push dec jns push push inc xor dec inc xor xor popa cmp inc xor pop pop outsl inc xor push pop js inc xor js pop xor popa push dec push arpl das xor inc imul push je imul pop jno cmp jp aaa das data16 inc dec cmp xor sub push xor push pop ja push pop xor pop xor gs inc addr16 inc inc pop push push push push pop inc aaa inc inc xor inc inc addr16 inc pop push sub ss push inc inc pop push cmp sub inc inc inc inc inc pop cmp cmp inc inc push inc imul imul addr16 inc inc inc inc jp insl pop aaa xor fs push fs ss das das das xor xor insb xor pop pop addr16 insb insl imul inc inc inc inc insl dec das xor push outsb inc inc xor push das das cmp fs arpl inc push jns push ss fs gs jo push inc inc inc dec xor cmp xor insb cmp fs ja push inc inc inc inc dec push popa push dec arpl xor xor push ja insb imul push push outsl imul dec dec imul outsl imul arpl inc aaa arpl xor cmp push xor inc dec xor inc jp xor push aaa cmp dec js push push inc push inc inc inc dec dec cmp inc dec bound fs js inc xor inc xor inc jno dec inc bound inc das xor ja xor ja dec sub xor push popa push das push arpl data16 imul inc inc jae inc inc inc popa inc ja xor cmp pop xor inc inc inc addr16 push je xor imul pop xor push pop ja outsl inc das cmp je sub jne ja push inc cmp das das cmp inc popa inc ja insb cmp dec insb push sub dec pop outsl pop inc xor das das cmp inc popa inc ja xor cmp sub xor push jbe push inc cmp ja pop push inc das xor imul xor imul xor gs data16 dec sub push cmp insl dec cmp inc cmp push bound data16 dec push inc xor dec cmp inc xor popa inc push inc inc pop outsl inc cmp inc inc inc fs dec push inc inc xor das das inc push inc inc sub inc inc push inc xor dec cmp jbe xor dec insb cmp inc data16 fs jne pop pop inc pop outsl inc cmp jbe das fs insb insl js pop ss dec inc inc ss insl das xor ss das push bound das cmp insl pop cmp xor jp inc popa dec push dec insl imul xor pop imul inc dec push gs insl imul insl cmp imul dec insb xor push inc inc inc dec inc inc ja inc inc das xor inc pop gs inc imul push push das cmp dec je ss dec jo inc popa inc sub das jne cmp inc inc inc push dec and sub cmp xor cwtl xor sub cmp mov sub xor cmp mov mov pop mov test aaa lods and mov lods and jmp xor or lcall push adc aam dec into enter out push or test xor daa ss mov xchg int call pusha fsubrp bound call ljmp mov enter xchg test ficompl (bad) mov xchg xchg mov aam in push aam movsb inc and push inc pop xchg adc jbe and inc jbe popf push imul or call (bad) sub daa or and dec outsl outsl dec push push cltd xchg or sub fs je insl dec xchg int cmp dec test cmpsb push or adc ficoml fxch adc push dec (bad) out xchg adc mov jnp pop jns (bad) sub insl and sub adc dec stos or or enter out lds or out inc sub es sub mov xchg xchg les test mov nop pushf (bad) mov fs fcoml xchg ret mov mov jae lret and sarl ficom fs inc inc pop push push daa jne adc xor inc pop add inc lds test push test inc (bad) adc es xor inc mov test sbb xor mov stos test pushf pushf mov cltd int nop dec rcrl rclb adc push dec adc adc and xor xor pop imul loope pusha int roll mov ror movsl push pop mov ss sub xchg or mov lods dec out pop ja roll popf xchg int3 mov cmp or addr16 addl leave lcall imul cmp in fs mov (bad) lret in xor adc insb insl imul nop fwait push or adc into aam dec fs arpl inc push jns mov and dec push xchg shlb out add cmp xchg fldl adc xor mov in int push inc mov adc xchg fsub imul push inc out xchg ljmp xor jbe xor inc xchg cmp lods add int3 dec sub inc xor inc xor jno dec inc bound inc and or mov xchg or and push data16 fs ds inc jae or jmp int3 and push movsb aaa mov xchg pushf es movsb cmp lods mov pop movsl enter (bad) in dec imul and adc inc data16 xor push adc push push push sbb push (bad) les adc mov mov enter inc xor inc insb inc insb clc xchg dec add in and ret aas mov clc xchg or insl icebp xor adc sbb mov xchg movsb test shll inc cmp push gs fiaddl daa xchg xchg sbb mov push fwait jnp and enter sbb sbb push int3 push int3 jo ljmp inc inc and es sub loopne and sbb aaa mov cmp or mov (bad) xor adc jle (bad) incb mul dec dec lret dec out xor dec push mov (bad) and jns pushf or jns push push mov mov push imul xchg jmp push out es sub and mov rclb push xchg mov lret mov sbb mov add adc adcl out mov cmp sbb inc das imul repz xor xchg and and xor lcall add and push xchg fmul mov and (bad) (bad) adcw mov xchg mov mov (bad) repz dec daa mov adc push clc cwtl aam inc jbe hlt sbb call sub cltd (bad) mov pusha int3 fadds pop xor sub xchg and dec push cmp inc icebp sbb mov sbb cmp mov xchg mov jnp push inc aaa adc enter test clc lea sbb mov mov in sbb sbb dec leave adc mov int3 mov je movsb xor test clc fwait pop xor sub popf cmp mov in pop dec or mov inc call repz nop (bad) aad adc mov cmp je xchg xchg xchg lds push inc and cmc and and xchg xorl xchg push xchg xchg xchg lds xor in jne movsl xchg movsl es push adc adc lds xor es xor inc push xor xor push adc xor push inc and data16 mov inc adc (bad) xchg testl jbe inc adc movsl inc adc jbe jbe movsl pop jne xchg adc xchg xchg lds push adc xchg inc add jne jb in xchg movsl push xchg and xchg xchg ja in data16 je aaa je mov push mull inc adc es add pop je xchg adc data16 xchg je and add jbe mulb mov xchg repz inc xchg inc pop fs (bad) xchg adc push jbe xchg and adc xchg out xchg jecxz inc adc cmpsb inc push inc jne push xor inc inc xchg ret repnz xor inc aaa cmpsl jae adc xor and cmc test je jne cmpsl inc inc je pop xchg repz xchg add and cmpsl arpl and inc and jb mov inc test adc je xchg add test mulw loop repz inc je aaa jbe adc (bad) mov xchg add push (bad) ja adc cmpsb hlt arpl xchg addr16 je je xchg out aam jbe fs xchg xchg add test ja and jbe add inc add and test jae je xchg xor ss adc inc xchg and daa ja arpl inc add xchg push fs adc adc adc adc jae je xchg xchg adc aam adc add and push je push inc xor and adc add cmpsl testb xchg in inc inc adc aam adc and adc xor adc addr16 in adc fs jbe push adc adc push inc pop xchg and adc adc ja jae je (bad) ja fs adc adc adc push add adc push adc pop ja add xchg xor push inc adc adc adc fs arpl adc je push inc adc (bad) jb and and adc inc adc push adc inc daa jbe mov adc adc adc adc adc adc adc xchg adc test adc movl adc cmpsl cmpsb in repz inc pop xor in inc inc adc je adc and adc addr16 in xor adc (bad) mov adc adc xchg hlt adc adc and data16 andl adc in mov xchg arpl jae push je adc jae add adc aam adc adc adc hlt inc je and xchg xchg ret test adc daa ja arpl es adc and adc jae hlt xchg xchg xor xchg inc adc inc xchg jne daa ja and inc add pop data16 xchg test jae hlt and push adc xchg je adc adc pop inc xchg and xchg xchg adc aam adc inc adc je push inc xor xchg adc adc adc adc xchg adc and inc xchg inc ret push push xor xor test xor jae cmpsb in divb hlt adc adc adc adc xchg je adc je rcll test jbe hlt adc adc push mov xchg inc aam xor gs test and test inc inc aaa adc adc push xchg xchg cmpsb hlt inc arpl divl aaa je les inc cmpsb and adc test adc daa ja arpl es adc and adc jae hlt xchg xchg xor xchg inc adc inc xchg jne daa ja and inc add pop data16 xchg test jae hlt and push adc xchg je adc adc pop inc xchg xor adc test xchg adc and inc xchg xchg ret push push xor jbe hlt adc je adc adc xchg je and adc cmpsl movsl test adc je push inc adc je adc adc and hlt test jbe aaa ja adc daa xchg je adc adc (bad) jbe lds xchg inc push data16 adc inc xor adc push xchg fs jbe inc xchg repz pop es jbe je inc push movsb es xchg cmc inc push push adc adc arpl adc adc inc cmpsb jbe xlat adc adc inc cmpsb jne xlat adc adc inc cmpsb je xlat adc adc inc cmpsb je xlat adc push adc cmpsb je adc adc (bad) xchg ret add xchg adc adc adcl mov adcl adc mov sbb cmp xchg mov sub mov test sub lods sbb sbb mov scas sub sub mov mov movsl sub mov test cmp mov sub enter lret (bad) cmpsb fsub ret mov inc push inc sub mov pop jb or arpl jnp mov dec mov mov lret mov xchg adc xchg cltd fstps dec push adc int3 xchg sbb sbb mov sbb mov fwait xchg mov lods mov lods mov mov xchg mov xor movsl mov and and sub mov sub cmp mov (bad) pusha lcallw xchg inc ret adc pop fs (bad) xchg adc push jbe xchg and adc xchg out xchg jecxz inc sbb push or xlat adc sbb adc popf int3 pop xchg dec xchg adc xchg push dec rcl adc pop rcrb push push int3 dec (bad) je and cmpsl arpl and test jb mov inc test test mov push shr jmp cltd mov adc inc pop xor popl dec lret push xor sub and mov mov movsb cmpsl sbb cmovs inc dec outsb jo das dec dec cmp js xor pop ja push dec inc push bound push inc cmp cmp inc and lret (bad) adc xor adc je cmp inc sub add cmp or fs cmpsl xor in inc inc adc faddl xor cmp addr16 inc cld enter out enter push sbb jp inc adc adc nop push sbb aad cld dec in sub sbb push mov lock movsb cmp pushf sbb jg loop inc xchg popa in dec dec call inc add hlt subl xchg push enter out mov ror sub mov mov rol imul lcall or inc xor push jbe outsl dec adc (bad) sub xchg ret mov xor push inc xchg xchg cld mov mov cmp rcrl or pop rcl into pop pushf nop fwait rclb icebp sub or fmull enter jo push test xchg shlb (bad) xchg xchg call xchg pop sahf cltd out dec push inc push arpl fwait lea in mov mov and inc push push (bad) (bad) (bad) (bad) push sub inc out mov (bad) enter jg dec dec pop call loop inc and push adc lcall data16 xor lcall movsb mov sbb stos and mov icebp xor clc xchg fwait jl dec mov jns adc or or push mov icebp and call mov xchg adc int3 out adc pushl pop popa mov jno xchg or sbb (bad) outsb (bad) fsubrl pop jns fimull test inc mov aas icebp cmp push and sahf push loop inc dec bound ffreep out and sub (bad) (bad) call (bad) and push outsb in pop or inc adc movsb scas xchg xchg testl loopne stos sub and and mov xor xlat cltd adc and dec push outsb loop insb and adc pusha mov xor scas dec insb cmp dec jbe xor adc faddl or cmpsb (bad) (bad) repnz arpl pop push cltd stos ret sub push jp mov in gs lods add mov push xor inc dec loop data16 sub adc xchg ficompl test xchg adc daa adc cmp adc lds rorb inc in sbb (bad) xchg inc je xchg bound sbb adc enter inc jae aaa xor mov inc daa xchg in jb xor adc sbb add mov xor dec repnz mov sub mov call enter test sub and aad mov popa mov mov adc fstpl les inc inc push xchg xchg push je xchg add test data16 repz inc push jbe not (bad) test notb hlt roll mov adc add xor and fs push adc and xchg push addl aaa push xchg add xor adc add adc inc push inc push repz test pop je adc roll pop jae inc ret fs (bad) les push adc xor movsl push xchg hlt inc arpl xor inc (bad) cmc add repnz xchg out xor test lds xchg jb (bad) hlt inc xchg add adc mull inc and push and mul pop addr16 add data16 mull inc aam push and mul xchg addr16 xchg mov adc pop cmpsl and repz ja mov adc xor hlt ret xchg and not addr16 xor adc ret jb repz mull push adc adc push add adc push jb adc inc cmc push adc jae jne je push adc bound add adc push jb adc (bad) cmc push adc jae test je push adc adc inc push inc push aaa pop mov aaa je push adc xor inc aaa cmpsl add repz xchg je push adc mov repnz inc inc inc add repz push je push adc xor test mov add repz ja push push adc push mov repnz inc push cmpsl add push mov adc xchg add push divb notl and inc and repz inc adc divb xchg xor xchg adc mov mull inc je fs mul xchg repnz mulb divl adc xchg mul cmpsb (bad) repz movsl test and bound and mul out (bad) jae push notb divl adc and (bad) not repz push (bad) movsb and and repnz adc inc not inc (bad) repz movsl test and bound and not xchg repnz (bad) xchg jbe repnz and xor mov inc (bad) repz cmpsb and xacquire inc hlt aam and test data16 xchg jb adc inc inc adc adc adc jae xchg mull adc testb inc adc xor (bad) out repz push ja xor add repnz adc xchg (bad) repnz adc and mov (bad) repz push mov xor movsb ret xor repz adc adc mov (bad) repz push xlat movsb xor push and bnd mov add adc xchg xchg repnz inc movsb inc repnz mulb xlat arpl cmpsb and repnz push adc bound repnz repz divl push adc mov repnz cmc add adc push jb adc jb push adc jae xchg push jae push adc adc es test fs jb repnz inc movsl test adc bound and not push gs mulb cmpsl push adc bound and not xlat gs mulb repnz push testb jae adc add inc divb test inc mov and adc (bad) daa gs mulb repnz push testb jae and add adc cmc inc xchg and repz inc test and adc les movsl xchg ja mov repnz push divb xchg divl and add adc hlt mov and repz inc mov and adc mov gs mulb divb xchg divl adc add inc hlt xor repnz inc test and adc mov gs mulb add repz mull out and (bad) repnz adc (bad) repnz inc movsl xchg test cmc add cmc push mulb divl je test inc adc repnz inc and xchg repnz repz and movsl add repnz notl (bad) repnz out fs xchg repnz adc (bad) repnz inc push inc movsb gs ja repnz and jne loop repnz aam (bad) push jb (bad) rep jne mull out test repnz adc push mull inc movsl xchg data16 (bad) je out jb jae and repnz jbe arpl push xchg movsb gs daa (bad) repz and mov xor repnz test (bad) push mov repnz out push inc jb repz adc inc mull inc movsl xchg push add notb divl movsb xlat test gs jb repnz movsb aad and divb mulb ret stos mov mov sbb sub aaa mov test xchg pushf aaa and mov aaa mov mov and fwait xchg cmpsb pushf and test cmp sub daa and adc (bad) push push sbb pop rcl adc adc adc push adc out nop mov movsb and jae inc ret fs (bad) int3 enter sub mov pop test pop xchg xchg mov daa sbb cmp sub mov and test lds dec xchg jbe insb int3 xchg leave adc dec lret xor push xchg xchg mov adc pop cmpsl and repz ja mov adc xor test insl and imul push ror mov mov push out outsb into stos out mov xchg bound mov xor les pop jae sub fcompl mov shl adc cmpsl add fs dec sub adc xchg test jb sub inc in push nop (bad) lods and shrl test mov test add inc push inc mov lret mov xor inc je and cmp xor cmpsl mov imul int movsl jmp es mov popf mov xor ljmp cltd jl mov scas cwtl xchg adc scas lds jp dec stos adc in xor mov test movsl and mov movsb xor sub leave mov jnp ja lcall dec jno sbb ss addr16 xor mov adc mov mov jae sbb mov enter fbld or mov dec dec repnz sbb mov mov sbb xor jb icebp and les cmp mov jg lret or sub jbe cltd popa pushf fldcw xchg xchg fisttp mov (bad) xor sub mov (bad) lret loop popa rorb mov test icebp ss call pop into es lcall sbb and and mov (bad) stc sbb inc js mov cltd push lea loop push enter pop inc hlt out outsl enter lea cmpl push ja mov inc test cltd jno xor aaa cmp push xchg mov mov movsb push test fcoml pop and test in dec imul mov xchg sub mov push gs xchg dec imul cmp das dec je cmp outsl jo mov and es sbb xor in pop insl push and sub sbb mov scas ret enter pop adc dec lods repnz test movsl sbb fwait mov (bad) and mov into daa push sub dec dec mov movsl mov or xor jp rorl test push shlb sbb xchg (bad) mov aaa cmpsb mov and dec in mov sub sub xchg sub insl push movsb fs adc arpl mov imul enter xchg pop inc mov adc or ss xchg (bad) mov mov mov es mov roll push mov leave dec or sub or and cwtl inc scas (bad) and mov pushf dec jmp test and cmp fwait enter xchg xor rolb sub cwtl pushf rorb adc adc sub sub cmp test popf xchg movsb inc outsb inc push adc aas loop inc mov mov mov cmp and mov adc aas adc int3 mov adc adc and sub sub adc dec outsl mov xor sbb sub push pop or lods fcmove xchg fcmovbe in ja inc mov sub popa cltd adc fstps sbb and push sub enter xchg xchg movsb leave cwtl mov push adc mov and lahf jmp pop das adc pop nop xchg jg or push mov push mov pop clc xchg xchg inc sahf stos and mov outsb icebp xor jmp adc loop inc loop insb in outsl insl xor mov insb pop cltd fcomi sub xor rcll and sbb icebp aaa and loop and sub dec dec mov dec cltd add xor test dec push enter stos loop inc les das loop dec loop inc mov les ret sub and and (bad) xor xor popa mov adc add mov leave cltd push adc mov fadd test cmp fdivrl inc inc adc mov leave movsl lods mov cmp fs int3 lds add cwtl fdivrl mov cmp fdivrl inc inc adc mov sub dec add test mov push adc mov (bad) mov mov cltd xchg push mov xor and mov and adc pop loope lods inc add lea aad add add in dec add loope mov cmp mov aam sub adc mov fdivrl mov frstor mov mov lea mov add adc or popf dec add add xor add inc mov mov mov enter lods inc add sub mov add inc fdivrl aad movsl mov pop imul sbb xor sbb inc inc adc or mov sbb fstl mov add movsl pop imul mov mov and adc mov lods adc pushf mov leave mov add sub in and cmp fdivrl lea movsl dec mov fdivrl inc inc adc mov pop movsl movsl dec add inc lods mov sub lea pop sub xchg sub or movsl dec add dec fucom fstpl mov add sbb add push mov fldcw xchg (bad) mov add or imul in fldcw mov add inc mov loopne (bad) xor leave sub rcll mov gs inc add cmp lods xor dec lods movsl inc roll lea sub loope mov inc inc or nop int or mov cmp test adc mov add roll lea mov add fcomp mov shrl adc adc mov popa inc mov and mov xchg dec add mov sub adc mov fdivrl mov sub pop mov call inc add fsts shrl push or mov mov sub movsl sub leave mov add and pop mov and mov mov add add add add add add add add add mov xor mov adc xor mov mov mov mov cwtl and mov sub xchg mov mov xor mov mov xor cmp lds lea dec in leave or imul movsb push insl push mov and sbb fldenv push adc xchg dec adc fwait mov dec insb int3 lret xchg jbe (bad) xchg push and xor nop mov mov mov sbb mov adc adc cwtl ficomp (bad) test push cwtl jo aam lods mov push mov fwait dec es insl push outsb xor cmc movsb adc rcll movsl dec mov mov inc and xor lcall add xchg in push mov enter lods xchg dec ljmp fisub test rcrl lods mov jmp jbe adc mov inc fs adc jno ss dec inc push fld cwtl lods mov in int ss xor rolb les mov adc sub in inc js xchg adc push xchg cltd or push or push dec dec inc in inc gs xchg or cmpsb inc push movsl daa jno xor push push cwtl xchg icebp and faddl (bad) cmp inc dec and push es pop fwait adc hlt mov xor push adc dec int3 pop hlt mov fisubrl cmp pusha adcl push jo push push das cmp dec push jns xor mov sbb push push xchg push nop pop mov mov sbb xchg mov adc and and pop inc test scas es pop inc lret mov xchg adc insl xor lcall dec push les test adc scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb xchg and movsl test jno mov inc push push jno mov pop dec push xor cmpsb call jno mov adc ss test cmp sub jno cmpsl or xchg popf cmp mov push movsb xor pushf and movsl sub or mov dec mov cmpsb and stos adc dec dec and mov mov and cmp adc cmp jmp and and dec jno mov xor bound xor test and inc mov je mov jno daa inc mov mov sub adc movsb inc push inc adc popf (bad) repnz les adc jl leave mov sub add sahf xchg enter into inc push xor daa mov push daa push fcomps adc inc jmp test mov into dec cld dec push jl sub and les or int3 adc fwait pushf clc nop shl gs inc pop mov movsb loope mov pushf cwtl mov aaa popa adc lods mov popa adc dec dec outsb lahf mov daa adc mov sahf xchg mov or inc inc jno mov inc test clc xchg push mov dec cmp sub nop shlb inc clc cltd rolb aas stc sbb in inc rcll ss inc les adc mov je adc mov pop cmpsl inc in and js push mov arpl dec scas pushf dec data16 (bad) lock inc xor and lcall push mov inc mov mov (bad) xor adc and (bad) hlt lret es and sbb call xor adc dec mov lock orl cmp cld inc mov dec xor dec and cltd adc (bad) in movsb mov clc popf push inc jb adc and aad int aad sbb pop fstl mov cmpsb cs jmp dec leave dec into lret dec ljmp push jns dec rcrl lods mov dec les lods test ret pusha mov dec inc inc bound inc arpl insb dec pop jae xor fs pop push fs xchg scas es lods sub loop jp adc fwait adc test pop dec xor sbb mov xchg dec mov xor cmp cmp sbb mov dec dec lret push dec sbb fwait jnp bound subl push imul sarl or xchg aam add (bad) cwtl test push stos mov es xchg xchg and andl xchg aam mov jne out jbe push adc push lret mov and xchg push inc stos sub ret xor test sbb xor dec movsb loopne scas adc xchg pop stc adc lcall push cwtl fcos xchg push rol dec push rcrl mov and add xor lods sbb and sbb sbb test and in shll dec mov sbb sbb xchg sbb inc popf xchg sbb popf mov roll or xchg pop aam test and mov lods popf test mov sub imul aad mov int pop sbb imul shll shll or test mov mov cmp lea or lea pop mov mov and in dec or mov lds mov add add adc shll sbb inc popf xchg sbb popf xchg popa cmp dec push fstpl imul shll popa xor jmp mov lods popf imul aad and sbb or and popa dec shll rcll in or popa xor lods test mov and mov mov and popa and fisttpll popa dec rorl mov and sbb (bad) mov imul mov imul popf mov gs fs sbb mov or push (bad) mov xor (bad) sbb popf fldenv in dec or xchg sbb or dec sbb xchg adc nop fnop push push pop xchg pop rcrl push nop fcmovbe popf push push rcrl push dec xchg mov push into pop push dec or mov ljmp call xchg cmp inc cmp inc inc xor push addr16 jns jns push xor adc (bad) into and xor cmp mov lods aad mov int mov mov test les and dec sbb (bad) ror hlt and adc cmp push xor adc rorl lds or dec xchg push xchg adc fstl push jg and jae mov out into and inc or imul ret mov pop dec push jns stos jo pop add gs jne xchg test les mov dec lods loop outsb cld dec dec loop push push ss into es and decl jno cmp mov cmpsb or into int3 dec adc xor adc in dec jmp pop insb mov roll ljmp into pop les xchg popf fs inc inc jp xor in dec or dec call cmp shrl and or inc mov mov sbb jg lret dec cwtl (bad) gs cmp arpl clc nop push movsb push xor and loopne mov enter adcl mov add popa mov fwait call (bad) cld inc es icebp daa xor test loop outsl adc icebp xor dec or dec es and imul dec jg mov pop (bad) clc nop cltd mov lret ret das xchg sub imul xchg imul cltd push adc (bad) clc sahf or adc (bad) and xor mov lods dec dec add (bad) call loop outsb mov decl lahf (bad) (bad) (bad) (bad) (bad) decl mov mov sub add inc pop (bad) and cwtl xchg fwait test repz pop movlps sbb sbb dec or dec mov fs mov stos inc inc and aad dec dec mov dec bound mov adc inc adc mov dec mov insb dec aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec inc inc pushl cmp pop or jg (bad) incb adc and inc and mov inc mov (bad) clc nop sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and (bad) (bad) (bad) fs adc (bad) decl push test (bad) (bad) call sub push and sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpsl mov xor mov mov cmp xor lods and stos mov mov ss sbb xor xchg fistpl pop pop fcompl pop pushf xchg int3 popf pop (bad) rcr sbb xchg int3 sbb push sbb dec fimul pushf mov pop fcom adc adc fimul sbb pop cwtl int or xchg adc push push adc dec cltd sbb mov mov dec lret or ss outsb jno sub aaa jne ja dec jp push pop xor das push sub cmp data16 das rorb sub dec in imul mov or popl inc push mov sbb or imul imul pop je sbb (bad) and pop push lcall inc loop,pn jp cltd or or (bad) adc (bad) daa pop and movsb xor jae push and xchg in push inc test push aaa adcl xchg mov test xchg cmpsb xchg notl xchg gs mov jne mov xor xchg aad push es es jecxz ss adc mov push push out mov pop adc inc daa adc cmpsl inc lds inc jbe push push daa push xchg (bad) divl aaa jae inc xchg xchg aaa and movsb (bad) xor mov inc add andl adc xchg cmpsb inc aaa inc divb push (bad) mov push mov add xor ja test xchg (bad) cmc inc adc and add mov inc xor jbe hlt push test aam xchg inc xchg out repnz mov mov les xchg cmpsb xlat pop push ss data16 mov xchg xrelease pop pop daa and daa push jl lock sahf pusha call cwtl fisubrl bnd in (bad) out (bad) cwtl mov lcall repnz lcall nop cmpsb pusha jb lods (bad) call in pushfw lretw sbb pop pop fwait lea ficomp into sbb or dec fimull or (bad) lret rclb push rcrb push nop cltd fcom push aam rcll adc push adc adc xchg xchg push adc lcall sbb sbb push rcrb nop aad push sahf pop fcoml ficompl adc sbb push pop xchg dec push lcall aam or aam adc push xchg push xchg adc pop adc int3 push adc push xchg xchg adc mov xchg fistpl pop xchg push push nop aam adc xchg lcall adc or xchg xchg pop adc adc dec fimul pop fwait mov pop (bad) push rcrl adc fimull fstl xchg dec xchg sbb xchg aam int aad sbb push pop push pushf pop fwait xchg mov sbb push fcmovu sbb pushf push fistpl sahf pop sbb dec fstp fcoms int3 popf or popf dec sbb rcll (bad) adc xchg pop pop fcoml fimul adc dec pop sbb dec mov or or int push sbb dec ficompl (bad) mov push dec or or pop cltd lea fstps lret int3 sbb push fisttpl fistl push push push aam (bad) xchg aam rclb push xchg adc aam rclb or push adc aam cltd push sbb push push push push push push dec adc push xchg nop push push xchg push xchg rcrl sbb rclb push push xchg fmuls fwait sbb rclb push push xchg push dec aam xchg pop push sahf push push xchg fwait sbb adc sbb rclb push push mov aad cltd adc push fistl push push push push xchg fsts push push push push push popf fcomp pop sbb push push push push adc cltd rclb push xchg (bad) xchg rcrb pop push push push push push push xchg (bad) push int push push adc push pop rclb push or mov push xchg fwait sbb push nop cltd adc xchg pushf rclb or cltd rclb push push adc sbb rclb push fistl push push xchg lcall rorl push push push sahf pop push aam sbb push xchg fimull fistl rclb push push push mov sahf xchg xchg rorl push xchg adc lcall lea push sbb push push xchg mov push lcall xchg mov push push sahf pop push push xchg pop push adc lcall push xchg cwtl mov popf push push rclb fcoms rclb dec aam aad into pop xchg push adc cwtl ficompl push push push pop aam sahf sbb int3 rcrl rcr sbb fistl push dec lcall int3 xchg sahf pop push adc push push push push push rclb adc pushf (bad) push adc pop fistl push popf rclb push push lcall sahf sbb int3 rcrl xchg aad xchg dec rcrb ficoml sbb rcrb push rclb adc fwait sbb xchg sahf pop push adc push push push push push ficomp rclb mov push adc push pop push mov push adc (bad) mov lcall rcrb push mov fwait push dec aam cwtl ficoml cwtl mov lea rcrl sbb xchg lcall fisttpl xchg adc push popf rclb push push fwait push dec aam cwtl ficoml xchg pop push sahf xchg xchg rcrb push push rcrl sbb xchg lcall fisttpl xchg adc push popf rclb push push cltd fstps push lcall rcrl (bad) dec mov int3 aam pop adc rcrb push adc sbb push mov mov pop nop push push cltd (bad) xchg sbb push pop push lcall adc (bad) xchg aad cltd adc mov aam cwtl ficoml pop mov pop rcrb push cltd (bad) xchg sbb push pop push pushf sbb rcrl ficoml pop mov pop rcrb aad rclb fwait push dec aam cwtl ficoml xchg pop push sahf xchg xchg rcrb push push rcrl sbb xchg lcall fisttpl xchg adc push popf rcrb fstps push lcall rcrl (bad) dec mov int3 aam pop adc rcrb push adc sbb push mov mov pop nop push push push push push int3 pop sbb aam fstps push lcall aam sbb aam pop adc rcrb push adc sbb push mov mov pop nop push push push push push rcrb push mov fwait push dec aam cwtl ficoml cwtl mov mov aam cwtl ficoml sbb aad push push adc cwtl ficompl push push push cltd fcom ficomp push dec xchg popf push xchg int adc fwait sbb popf sbb push rcrl fistl nop push push push push push rcrb xchg xchg int3 pop sbb aad (bad) xchg adc adc pushf fmuls pop nop push push cltd fmuls lcall fwait sbb push aam sbb popf sbb push push push push push int sbb cltd fcoms fstp fstps push mov push rcrb mov mov aam cwtl ficoml cwtl xchg into pop cltd push adc fcoms fstp fstps push mov push rcrb push xchg xchg push xchg pop rclb push cltd aam pop rclb adc sahf push xchg adc pop fisttpl sbb rcrb push push rcrl sbb xchg lcall rcrl fistl nop push push cltd (bad) xchg (bad) fstps push lcall push lcall rcrl sbb xchg lcall fisttpl xchg adc push popf rclb push aad rclb fwait push dec aam cwtl ficoml (bad) xchg adc adc pop push push fisttpl xchg adc push popf rcrb fstps push lcall rcrl sbb xchg lcall fisttpl xchg adc push popf rclb push push cltd fstps pop push pop adc lcall rcrl sbb rcrl push push push fwait push dec aam cwtl ficoml xchg pop push sahf xchg xchg rcrb cltd adc mov aam cwtl ficoml sbb aad push push adc cwtl ficompl push push push fwait push dec aam cwtl ficoml (bad) xchg adc adc pop push push fisttpl xchg adc push popf rclb push push cltd fstps push lcall rcrl sbb xchg lcall fisttpl xchg adc push popf rclb push rcrb (bad) push adc xchg aad (bad) xchg adc sbb aad cltd adc mov aam cwtl ficompl push push push push push push aam push fwait push mov adc (bad) dec mov int3 aam pop adc rcrb dec sahf sbb push xchg fcom push push push cltd fstps push lcall aam sbb int xchg push aam sbb aam pop adc rcrb push push push push push rorb xchg rcrb sbb xchg lcall rclb push adc sahf pop rclb push push push push ficomp rclb mov push adc push pop push fwait cltd adc fcom push push push push push push adc pop rcl popf xchg lcall push push push lcall rcrb push push rcrb push push cltd fstps push mov push rcrb push push cltd push adc push pop xchg or push push (bad) dec push push push dec adc or push sbb dec push push push pop xchg adc push push adc fmul push push push pop push adc push pop xchg sbb pop push push push mov push push push push sbb push push push or pop rcl push push push adc push push or dec rclb push push adc push push sbb pop adc push push sbb int3 or fnop pop push push push push push fst push push push int3 adc push pop adc push push ficomp push fcmovnbe push push push pop adc rclb mov fwait sbb push mov mov push push push push push push int3 dec adc rorl push push dec push adc push push push push push push push sbb dec aam rclb push aam sbb push pop fcomps push push push push mov adc fistpl cwtl fwait push lcall push sahf cltd adc pushf push dec aam push push mov rclb push lcall cwtl xchg adc rclb push push or pop push push adc nop push push push or dec sbb push xchg dec xchg pushf fcoms dec pop cltd adc lcall push push push or pop (bad) push adc push push push push push or pop xchg xchg aad cwtl nop push cltd xchg or lcall push push push push push push push push push push push push pushf adc push push pop fistpl push push push pushf adc push push or dec rcrb (bad) xchg push push push pop push push push pop xchg fwait adc push push push pop adc xchg nop nop push rcl push push push adc push push pop adc xchg push push into sbb push push push push nop nop push sbb push push int3 sbb push pop rcrb push xchg push push fcmovnu push push push pop adc push xchg push push aad push push push pop rcrb push xchg push push rcrb push push pop adc (bad) xchg push push mov push push push pop push fwait adc push push popf fistl push pop xchg fwait adc push push lcall fwait adc push push xchg pop push push push push xchg fwait adc push push xchg pop push push push push rcrb (bad) xchg push push nop pop push push push push adc push xchg push push dec sbb push push push fwait adc push push pop fistl push push xchg fwait adc push push pop fistl push push push fwait adc push push push sbb push dec adc push push push push adc push push pop push lcall push push lea push push push push rcrb push push push push push pop push push push dec push cltd adc push push int3 sbb push pop adc push adc push xchg pop or push push push cltd adc push push dec sbb push push xchg cltd adc push push or dec rclb push aam push adc rcll rclb push aam push xchg pop sbb push push rclb push xchg push push sbb adc xchg nop nop push lcall adc xchg nop nop push aam xchg push push xchg ficoml xchg mov dec xchg sahf cwtl int3 pop sbb fwait push popf cltd or mov push adc sbb mov fcmove pop pop pop push lcall dec pop pop xchg rorl push push push push push pop sbb adc sbb aam xchg dec aam sbb push xchg pop mov mov push push push mov mov push push fwait adc xchg into dec rclb pop sbb rcrl fmuls xchg adc xchg pop xchg pop dec push push adc push push fimull pop pop aam push dec aad push adc adc lcall xchg pushf adc push push push push fistl push fwait push lcall adc push fistl pushf aam adc popf aad xchg mov xchg aad nop push push push push push rcrb sbb xchg mov push into pop push push push push push dec aad sbb push xchg push push push rcll xchg sbb xchg push rclb push push push push adc push push push push push push push pushf xchg push adc push push push push push push push push push push push push push push push nop xchg pop rcll adc pop adc int3 push adc push xchg xchg adc mov xchg fistl push dec xchg fwait push fwait pop sbb push fcompl xchg int3 pop pop mov sahf sbb xchg mov push push mov push sbb push pop xchg dec push lcall nop push push push push push push push push push push or lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret sarb mov lret mov push or xchg dec dec lods mov stos lret or int sub outsl pop sub lds jmp push in push lea dec sub es dec ljmp or sub leave inc dec lods (bad) enter sub outsb or sub cs mov outsb out insb dec outsl dec mov es scas dec cmpsl push int3 inc (bad) test mov push insb leave das sub dec (bad) cmpsb imul push mov cmpsb sub dec push dec int es das dec xchg in out test or push into scas into data16 cmpsb out (bad) or (bad) add xor jp cltd pop jns adc fisubl sahf fcompl je imul rcrl mov xor dec fisttpll push inc xor inc inc dec inc adc sbb out dec bound pop insb hlt xor inc fs fldenv pop in sbb and lods sbb dec mov fs inc jae int3 enter lods mov pop sbb fs popf add dec loop jns adc mov imul mov dec (bad) adc mov or cltd rclb jns mov xchg adc daa xor and mov imul test and repz sub xchg adc xor sbb push xor mov lods sub test adc push xchg push lcall adc les adc adc pop mov sub es or ljmp jae cmp lods and or and aas mov fisub subl les or addr16 mov out push ret enter repz sub inc mov push lcall out es into pop inc fsubs sub jno sbb sbb (bad) dec test enter mov in dec dec cmp and xchg lea inc cmp cmp xchg fwait (bad) (bad) (bad) cld dec in (bad) (bad) (bad) clc xchg fwait mov sbb icebp sub or ret xchg imul mov fmull inc xor xchg lods sub (bad) dec xchg adc xchg out nop in xchg arpl int3 mov xchg stos lods mov pop aas (bad) (bad) cld dec dec aas (bad) jmp inc imul (bad) (bad) cld dec (bad) xor and pushf out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc jp (bad) clc xchg fwait inc les stos ja nop push push push rorb xchg rcrb sbb xchg lcall rclb push adc sahf pop rclb push push push push ficomp rclb mov push adc push pop push fwait cltd adc fcom push push push push push push adc pop rcl popf xchg lcall push push push lcall rcrb push push rcrb push push cltd fstps push mov push rcrb push push cltd push adc push pop xchg or push push (bad) dec push push push dec adc or push sbb dec push push push pop xchg adc push push adc fmul push push push pop push adc push pop xchg sbb pop push push push mov push push push push sbb push push push or pop rcl push push push adc push push or dec rclb push push adc push push sbb pop adc push push sbb int3 or fnop pop push push push push push fst push push push int3 adc push pop adc push push ficomp push fcmovnbe push push push pop adc rclb mov fwait sbb push mov mov push push push push push push int3 dec adc rorl push push dec push adc push push push push push push push sbb dec aam rclb push aam sbb push pop fcomps push push push push mov adc fistpl cwtl fwait push lcall push sahf cltd adc pushf push dec aam push push mov rclb push lcall cwtl xchg adc rclb push push or pop push push adc nop push push push or dec sbb push xchg dec xchg pushf fcoms dec pop cltd adc lcall push push push or pop (bad) push adc push push push push push or pop xchg xchg aad cwtl nop push cltd xchg or lcall push push push push push push push push push push push push pushf adc push push pop fistpl push push push pushf adc push push or dec rcrb (bad) xchg push push push pop push push push pop xchg fwait adc push push push pop adc xchg nop nop push rcl push push push adc push push pop adc xchg push push into sbb push push push push nop nop push sbb push push int3 sbb push pop rcrb push xchg push push fcmovnu push push push pop adc push xchg push push aad push push push pop rcrb push xchg push push rcrb push push pop adc (bad) xchg push push mov push push push pop push fwait adc push push popf fistl push pop xchg fwait adc push push lcall fwait adc push push xchg pop push push push push xchg fwait adc push push xchg pop push push push push rcrb (bad) xchg push push nop pop push push push push adc push xchg push push dec sbb push push push fwait adc push push pop fistl push push xchg fwait adc push push pop fistl push push push fwait adc push push push sbb push dec adc push push push push adc push push pop push lcall push push lea push push push push rcrb push push push push push pop push push push dec push cltd adc push push int3 sbb push pop adc push adc push xchg pop or push push push cltd adc push push dec sbb push push xchg cltd adc push push or dec rclb push aam push adc rcll rclb push aam push xchg pop sbb push push rclb push xchg push push sbb adc xchg nop nop push lcall adc xchg nop nop push aam xchg push push xchg ficoml xchg mov dec xchg sahf cwtl int3 pop sbb fwait push popf cltd or mov push adc sbb mov fcmove pop pop pop push lcall dec pop pop xchg rorl push push push push push pop sbb adc sbb aam xchg dec aam sbb push xchg pop mov mov push push push mov mov push push fwait adc xchg into dec rclb pop sbb rcrl fmuls xchg adc xchg pop xchg pop dec push push adc push push fimull pop pop aam push dec aad push adc adc lcall xchg pushf adc push push push push fistl push fwait push lcall adc push fistl pushf aam adc popf aad xchg mov xchg aad nop push push push push push rcrb sbb xchg mov push into pop push push push push push dec aad sbb push xchg push push push rcll xchg sbb xchg push rclb push push push push adc push push push push push push push pushf xchg push adc push push push push push push push push push push push push push push push nop xchg pop rcll adc pop adc int3 push adc push xchg xchg adc mov xchg fistl push dec xchg fwait push fwait pop sbb push fcompl xchg int3 pop pop mov sahf sbb xchg mov push push mov push sbb push pop xchg dec push lcall nop push push push push push push push push push push or lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret aam mov lret fimul dec rcl sbb xchg ficomp lret lret lret lret lret lret fst push nop pop rcll xchg push push adc pop rcl fstp rcll push xchg push adc sbb mov lret lret lret fimul fcom adc sbb pop push pop adc fcmovnu xchg adc sbb adc or lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret lret aad rclb push fst xchg rclb adc rclb push push push cwtl rclb push push adc nop push sbb pop fst mov push aad pop xchg push pop nop push adc adc nop push int3 adc push pop push push aad pop push push fwait adc push push pop rcrb push sbb fwait adc rclb push push push push adc push push mov nop push popf adc rcrb rcrb pop fnop mov pop rcrb push xchg push lea push aad push push push sahf nop push rcll cltd rcrb pop fnop mov pop rcrb push xchg push lea push aad push push push push inc jge scas and mov xor xor pushf mov lods movsb and mov cmp xchg push ficomp rclb xchg push adc push pop push fwait cltd adc cli inc xchg stos sbb mov rorl rcll mov fstps push mov out pop xor and test movsb xor sbb mov add inc adc push cmp or mov je dec inc adc xchg add sub inc adc and and and jns or fnop pop bound in je push and lcall and lcall adcl mov and mov mov les (bad) into (bad) fisubrl xor and jmp fs push data16 daa xchg out test test adc or es in (bad) pop and mov mov nop test mov xchg rol fs pop and (bad) adc or pop sub sub and xor push dec aaa dec insb inc inc dec push pop adc int3 dec dec push and mov xchg dec dec inc inc push and or pushf adc and pop or adc movsl adc insl cld dec sub mov and push dec imul dec dec icebp xor and cwtl xchg xchg mov dec adc sub dec xor and les fimull test inc fcomps and loop pop (bad) enter mov adc rclb mov xchg nop test scas (bad) ficom pop push adc test dec sub inc jae sub push dec inc inc push dec dec jbe mov xchg rorb mov ss xchg push (bad) xor mov dec dec in push cmp enter xchg ds icebp sub mov lret xor mov cmp dec push push push push dec jp imul dec lods push xor push push and enter dec ret rclb push popf push fwait push lcall xor bound and sbb xchg xchg (bad) and (bad) loop das dec jbe bound pop push jns inc dec dec jbe dec inc push push inc (bad) and adc mov sub sub cltd add mov mov mov mov inc sarb inc icebp cmp or aam dec adc ss xchg fs push xchg xlat movsl adc xor jns or lret (bad) (bad) push movsl pop arpl add inc test inc mov mull je and mov rcl fstp rcll xchg push adc sbb mov sbb mov dec dec lret push dec sbb fwait jnp bound subl push cmpl (bad) (bad) (bad) (bad) push sub out test adc or dec inc imul inc xor stos or dec mov (bad) jmp sub inc xchg je dec xchg sbb addr16 enter mov xor jg (bad) stc push push pop push jg nop pushf mov daa inc test (bad) cld dec dec mov icebp xor loop addr16 jmp inc jo clc xchg pop push xor (bad) (bad) push and inc enter (bad) (bad) jmp test mov dec adc mov pop add in (bad) (bad) inc inc movsl xchg push and aas jmp dec ja jns loop insl (bad) and (bad) ss mov imul and inc decl icebp and (bad) and pop (bad) inc (bad) imul jg and loop push clc xchg popf (bad) call or (bad) jmp push ja (bad) (bad) cld dec enter (bad) inc test or (bad) call adc inc enter push mov mov (bad) clc xchg aam (bad) (bad) clc nop xchg ds jl mov dec mov (bad) push and (bad) cld dec enter fisttpll pop loop push enter out decl (bad) (bad) and aas (bad) (bad) (bad) decl mov mov (bad) call mov dec xchg insb clc lea jge cs dec jbe insl xor pop inc inc fs mov mov push ret fsubrs fsubl sbb mov pop dec pop int3 fsubr enter arpl sub cmc or cmpsb or dec stos xchg xchg sbb pop sbb mov sub mov xrelease inc imul pusha sahf (bad) test lcall or out (bad) insl and adc popf sarb test mov je test or enter (bad) popa mov call nop pop jl sub (bad) (bad) lcall or test sbb add (bad) and call (bad) incb adc mov (bad) and inc test data16 xor and sub stos cmp cltd cmp or and or cmpsb and pop clc cltd sbb nop pop movsb dec addr16 imul dec (bad) xor addr16 sbb sbb adc paddd pop (bad) and inc inc clc xchg adc xor aad cld dec dec cmp cs and adc ljmp adc aaa (bad) int3 mov mov inc (bad) and cmp dec decl in inc inc outsl decl (bad) (bad) (bad) (bad) push sub mov dec das pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and (bad) and or dec adc mov icebp and inc enter test (bad) and (bad) (bad) (bad) cld dec mov dec (bad) (bad) (bad) (bad) call sarl loop inc (bad) (bad) (bad) and cmp dec jno cmp icebp and (bad) cld dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc xchg adc mov jmp popa ja (bad) jmp inc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ret mov (bad) and outsl (bad) (bad) cld dec sub xor (bad) (bad) jmp gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lods iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub outsl inc dec addr16 arpl and mov and and adc xor dec lods into test and cmp push add ds lds add dec out stc cltd push push popf rclb and aas (bad) decl xor mov dec sub and cmp xchg xchg push jns pop rcrb andl inc (bad) je inc cmp adc es jmp fs jmp inc jp jmp ret mov ret jmp nop fwait jg pop push inc jns cld dec dec fist and and jle es les lea and jb xchg mov mov gs cld dec lods (bad) cld dec sub icebp sub loop addr16 (bad) jmp inc dec mov decl xlat (bad) (bad) inc movsb out cld dec dec mov icebp and cld dec push (bad) (bad) inc test (bad) (bad) pushl dec jo xor js jo pop xor outsb xor jmp push inc (bad) (bad) (bad) cld dec dec mov adc xchg aam and dec cwtl mov mov and outsl mov (bad) (bad) (bad) decl inc jl cs test (bad) (bad) (bad) (bad) push and jg sahf mov add and mov pop rclb inc clc xchg nop js dec mov (bad) jmp inc jns (bad) decl and (bad) and (bad) and inc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc nop lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and enter pop (bad) enter xchg les enter push cmp fisub scas out inc addr16 push aam pop xchg cwtl xor sub pop pop dec jp xor pop push inc xor insb push dec and xchg mov test aad push adc adc pop push inc lock adc and sub xor dec ret jmp lcall lahf and bound push movsl xor lret (bad) (bad) (bad) cld inc int xor dec xchg les and repnz (bad) add pop xchg (bad) inc push clc sahf dec jg push aas (bad) (bad) clc xchg sbb insb dec (bad) cld dec or mov sub lock adc iret and push mov xchg dec loop jp arpl mov dec insl adc cltd les shlb insb xor or lret pop xor jb and jae adcb in mov es adc cmpsb inc in les lret mov xor and jo adc les shll jg and mov test mov push mov mov sub mov and lahf push and leave inc (bad) es lcall clc mov loop je adc scas cld mov mov aas (bad) stc adc adc (bad) clc mov les jge sub aaa das das das cmp inc and inc mov (bad) and popa pop mov mov and cwtl mov and in dec push xor and jb clc lcall inc and inc aam cli xchg add test push and incb add and (bad) jmp inc inc push imul loop push call and dec aas jmp insb push or leave xchg popf aam loop insb call and das xor cmp push and jg xchg push dec (bad) mov jb mov mov add insb dec stos mov mov sub or mov cmpsb sbb test mov rorb add (bad) xor leave sub ljmp push pop mov imul mov nop lods aad pop jmp adc pop les (bad) (bad) (bad) jmp jbe xor pop ret pop sbb dec lahf (bad) (bad) (bad) (bad) and mov and jg xchg cwtl jb (bad) (bad) push xor jg popf mov clc sahf dec (bad) (bad) (bad) call fwait pop call ret je (bad) jmp cmp (bad) daa je (bad) (bad) and scas (bad) aam (bad) dec loop pushf test (bad) (bad) and (bad) dec pop jo cmc clc sahf nop jg clc lea aas adc jns mov jmp sub jg repnz bound adc clc nop mov xchg fstpt adc (bad) decl mov and loop ja xor jl sub dec pop (bad) cld dec sub and push and js adc (bad) clc popf or cld dec in jg clc mov cld inc (bad) jg lods xor adc (bad) (bad) (bad) (bad) decl mov aaa (bad) out popa push sbb xor icebp sub repnz (bad) (bad) jmp das xor xor adc xchg aas (bad) clc xchg mov nop sahf aas adc cmpsl (bad) jmp jns jno (bad) (bad) call (bad) (bad) adc dec in pop js (bad) dec pop outsb mov (bad) out addr16 xchg adc clc mov jl xchg (bad) (bad) cld inc in fisub inc mov call xchg sub imul inc outsl (bad) push cmp jno aaa jno xor test cld test outsb push pop dec or in dec xor loop outsb loop inc mov (bad) decl adc les jmp ss (bad) (bad) decl cmp loop xor dec dec (bad) (bad) cld mov xor (bad) call sbb (bad) decl mov (bad) (bad) decl mov (bad) decl (bad) and pop les push adc bound inc push jo push push inc inc inc inc cli test adc adc icebp pop mov adc (bad) and sbb (bad) test adc adc mov and mov and or dec mov inc sub push das enter pop les adc cmp or lcall push pop adc test adc sub inc dec push and pop mov fs daa gs loop dec xchg dec push loope cld dec inc jmp jns adc adc sbb enter test xor add imul mov push push test xchg repnz (bad) inc inc xlat je xchg xchg cmp in xor xchg dec adc adc push rcll pop fld mov stc xchg popf sbb nop push jmp inc xor jp cld dec dec and leave aaa icebp sbb adc lea adc mov and call mov xchg shll je inc adc outsl je or mov je or and dec mov pop dec sub sbb sub mov and mov pop dec push xor and jp adc lods test lret dec dec in jae inc adc xor xor or and cwtl and dec dec xor cmp (bad) ficomp adc je adc jno cmpsl inc les es dec dec dec xor mov and cwtl lea fs test sub inc cwtl cmpsl (bad) (bad) popf adc lahf adc dec mov cmp jno cmpsl inc aam inc inc and jb cmpsl cmp sarl mov and pop xchg shll push adc or jmp dec and imul mov push dec adc movsb dec sub ds test adc dec outsb jno daa repnz cwtl and mov cmpsl or cwtl xchg test adc jmp sub nop popf adc and mov aas adc adc movsb dec mov outsb xchg cmp clc lcall mov adc cmp outsb pushf dec inc xchg sub les adc jmp inc inc decl shlb and dec cwtl xchg inc xchg inc je fstl xor inc cwtl test and and outsb (bad) and jle pop lahf adc adc aas scas xor bound xor dec push mov xor push xor inc cmp arpl push jo lods aam mov lret sbb and jg inc enter and ret lret bound out xor and ret mov bound push xor push inc popa push js push insl adc mov or rcll adc mov imul push test dec sbb inc lods (bad) push push pop insl jo xchg popa fnstsw push adc push xor and pop push push jae push mov dec dec mov cmp and xor es jns dec iret and les lods xchg and sub inc js imul fs clc cltd sbb imul scas stos (bad) out les out clc xchg fwait enter (bad) inc gs fsts mov mov inc loop,pn jo push outsb cld dec outsb (bad) es daa je es mov cmp cmp dec (bad) push and andl mov inc adc xchg inc ss inc sub jns xchg cltd push clc lea cltd adc enter push mov sbb lods mov (bad) xor (bad) es dec xchg fwait jle adc leave into mov mov enter loope enter ljmp and icebp daa and jp adc enter mov pop xchg xchg les xor inc (bad) iret icebp sbb mov dec scas cmp push push (bad) push (bad) jmp inc (bad) (bad) push aaa mov adc aaa cld dec (bad) jg adc lcall fs stc sbb and imul sub loope mov inc call loopne dec leave inc pop jbe mov sbb dec xor mov mov call (bad) and mov les xchg sarb dec inc push push xor fwait or inc push les or les xchg cmp mov push insb enter (bad) push and jg inc jno arpl jo stos xor mov icebp xor xor and sub mov pushf mov stos mov cmp mov es daa xor and mov xor stos daa lods stos cwtl mov and cmp mov mov xor cmpsl cmp sub es lcall mov cmp and mov sbb sub mov mov and mov xor pushf mov mov mov stos sub and xor lods cmp and mov cmpsl lcall ss mov sub mov cmp mov cmp and cmp sub mov and sub sub sub cmp xor sub cmp and xor sub cmp sub and mov stos sub and sub stos cwtl mov mov lods cmp ss sbb ss mov sub pushf cwtl mov sub mov cmp test and sub and sub cmp sub cmp sub sbb and mov ss mov sub pushf cwtl mov sub mov cmp sbb mov lods and sbb ss mov sub pushf cwtl mov sub mov cmp cmpsb movsb mov sbbb dec ja dec arpl dec push pop push push push fs dec inc inc inc addr16 push inc cmp lock mov in mov (bad) (bad) mov xchg lcall mov mov stos (bad) test pop mov inc sub inc push pop jl movsb (bad) stos enter pushf in les movsb lcall (bad) mov mov out inc hlt xor test push out bound adc cmpsb arpl and mov pop push inc fs (bad) inc dec xor push lods pusha lods fidivl enter mov shrl imul or (bad) xor push stos mov (bad) fsubl xchg adc test and cwtl cltd adc or sbb mov stos mov mov ret inc xchg mov (bad) push xor sbb xchg popa sub inc and (bad) cltd sbb inc inc adc xor int sub pop inc adc ja test dec dec inc push insl push jae xor mov push mov dec mov inc push xor lret push and pop test movsb stos out hlt lcall (bad) popf icebp sub sbb adc dec (bad) mov push pop inc push xor adc push adc (bad) (bad) test and repnz xchg sub mov mov dec jl es push add adc nop pop xor xor mov mov mov dec insl jno xor lea enter mov xchg rcll dec adc mov in (bad) sbb xchg and sbb mov adc xchg dec shrl xor inc push xor mov push xchg into dec enter arpl lods fadd popa icebp and enter pushf lea or rcrb and cltd adc xchg xchg xchg sub test mov sub cwtl sahf or dec inc inc inc adc adc cltd xor inc and cwtl int3 inc ret or lcall cmp mov inc push pop mov loop addr16 popf (bad) incb xor add mov and push sbb or adc les xchg dec pop aad dec lea insb adc inc mov dec lea inc adc popf adc jg or or mov (bad) mov adc mov sub and clc mov fdivs dec call nop fstpl push and setno (bad) and xor adc xchg cld dec int fwait adc clc xchg sbb cld inc ljmp scas adc enter movsl adc mov dec push xor adc and xlat movsb xchg push cmp mov (bad) (bad) decl jne dec mov leave stos mov push inc mov push mov adc mov and cwtl push inc les and sub adc aas (bad) (bad) and xchg aas mov and adc andl sbb enter push mov sub inc data16 mov stc push pop pop pop jg (bad) aad call mov adc cld dec dec js pop mov lods inc cmpsb stos and rclb mov push inc les les dec test test adc xchg int3 test outsl ja dec push icebp xor icebp sub mov adc dec dec sbb loop inc call jb clc xchg pushf icebp sub les cld dec sub daa push iret in ja das call xor test cmp add mov mov push inc int3 mov test lahf mov and dec sbb mov aad pop pop aad sbb rorl xor sbb dec pop aam test (bad) mov sub mov or push xchg mov adc mov mov aad imul test mov lea push leave pop rorl aad sbb in mov or pop rorl int pop dec aad sbb sub dec sbb sub xchg inc or rorl loope lea xor mov mov sub gs aad imul shrl add imul in pop aam push and fldenv jmp add leave pop rcll xchg sbb mov imul int pop dec rorl cmp popa sub xchg pop sbb inc pop loope mov xor adc pop in pop mov gs dec mov and fldenv jmp mov mov int pop dec sbb and mov aad test shrl add dec popa cmp push mov in popa cmp push popf sub push sbb sbb xchg push adc or pop pop aam test add leave pop rcll test pop and add dec leave pop rcll test pop and add dec leave pop rcll test dec pop aad mov adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sub mov and aaa sub mov mov daa sbb cmpsb mov cmpsl sub sub lcall ss mov dec push xchg and (bad) xor popa add adc in enter pop aam push int in pop aad mov lea push leave pop rorl aad sbb in and add leave inc dec mov int pop dec aad sbb sub into ljmp mov xor mov lcall xchg fwait pop mov popf adc popf cltd adc ja dec adc push subl xor imul mov in mov loope cmp or out scas lock or mov pop pop push insb jmp sub jmp adc int imul ret mov xchg mov mov cmp sub lods push sbb in push adc or out fs mov or mov inc les xor xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb cmpsl test xchg xor test push pusha lret fdivs xchg adc sbb and add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) inc xchg xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg aam data16 xor xor fisubl xor xor xor or mov xchg stos rolb sub cltd add mov mov mov pop push xchg fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) and pushf dec (bad) out jb inc xor adc and inc popa mov mov mov fwait pop mov (bad) stos xor lcall push aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov inc inc imul push stos cmp rcl pop and inc (bad) mov push mov or dec insl repz (bad) call inc pop and xor (bad) (bad) clc xchg pop mov ss imul xor insb jae (bad) jmp mov jnp mov dec and fs cltd pusha in (bad) leave stos jmp mov test xor adc test (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec dec lahf in outsl xor jp pop (bad) (bad) (bad) (bad) call mov enter mov mov lcall es clc xchg push inc insl bound add push js push inc (bad) mov push inc adc int3 dec dec xor and sbb adc or call adc es adc movsb inc xchg adc movlps aas loop ja inc push mov inc mov dec test inc push mov les xchg push js xchg cmp mov mov push (bad) and inc test (bad) clc nop sahf jl sub loop inc mov es and pop les adc inc adc pop dec sub cltd les adc cld mov jp (bad) push inc and xchg mov jl imul dec test and adc adc out adc inc dec in jae xor inc mov test xchg pop sbb xchg iret adc nop lea dec push inc adc adc pop adc mov inc dec adc jg xchg adc adc loop push cld dec dec decl xor jg (bad) out clc nop pop jmp das das adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lods xchg outsb fs (bad) call and lcall xchg test bound mov dec pop nop aad imul push dec imul movsb scas les jp dec push dec mov jno movsl jle fs enter test and pusha daa movsb test aad xchg xchg push dec sub sub icebp cmp (bad) xchg adc lods dec stos mov cmp les (bad) call (bad) clc xchg push cmp (bad) (bad) (bad) dec test (bad) (bad) cld dec (bad) (bad) (bad) (bad) cld inc out adc fwait les adc inc jp mov and jle and les adc mov mov cmp and xchg mov es (bad) jmp mov and adc push xchg in inc inc push xchg dec inc or adc shl inc jae leave adc test jb sbb mov lcall mov dec mov xor xor addr16 xchg cmp xchg popf icebp sbb or dec push xor stos or arpl mov sub test mov push les into test sub mov cmp cmp bound (bad) jb dec lds push push pop xchg (bad) inc ja xchg inc xor xlat test daa fs shll je xor xor xor xchg rclb and cmp cmp push inc in inc inc dec and imul test loop push enter mov inc test les dec ljmp or xor and adc je xchg pop push inc jne dec cmpsb ss lds jne je leave adc nop inc mov sub mov (bad) dec call test sub test nop pop jle mov xchg pushf fmuls mov sbb repnz pop and (bad) cmc (bad) lea inc or lret or mov xchg jae cwtl mov nop loopne aaa dec enter outsb out inc jbe push cmp adc cmpsb sbb (bad) fist or xor sub mov jns stos mov adc sbb rclb adc cmp sub sbb nop xchg fimull (bad) call fs test mov adc dec mov out in ljmp insl inc inc push ss xor imul adc pop xchg add mov inc sbb sub adc adc stos sahf shlb or adc jbe inc inc inc jno push cmp dec loop push and sub sbb dec lods fs jp dec adc xchg sbb es cwtl lods sub xor push and push arpl jbe push mov nop pop mov or rclb dec rorb adc xchg popa sub int3 hlt pop enter and out push or or test pop loop dec xor mov dec adc mov or imul dec stos cmp arpl mov or adc lret (bad) push or adc adc push jb mov push jb cmp push dec adc dec adc shrb sbb leave ret or jb cmp push cmp xchg or cmp cmp bound mov sub ret cmp inc mov xor mov sarb or adc adc sub pop mov mov stos mov ret sub or popa lret sub mov jp imul or (bad) adc lcall and ret mov xchg jp add jp pop and popa mov or sbb or xchg or or ret sub xor sub or mov or or or push or sub adc adc or or cmp (bad) or adc sbb adc or sbb sub push sub adc sub ret sbb xor xchg or xchg stos or mov sub or dec or mov or mov shrl or stos lret stos or mov imul xchg adc or xchg or cmpl or arpl or sub or or or stos cmp mov mov stos or inc dec or xor or jb or and cmp mov mov adcl or shrb or and or adc sub dec or ret bound mov stos and and mov stos sub sub mov mov sub add and and lds push dec bound dec popa jno inc addr16 dec inc adc xchg nop inc lods (bad) mov into test stos (bad) (bad) nop ljmp (bad) mov shlb scas rcl nop mov lods (bad) les test stos lods les test mov mov jo nop mov mov jb scas jo mov les mov test cmpsb mov (bad) mov fs (bad) mov xchg xchg mov pop and movsb sub mov mov or sbb push inc adc cmp cltd rclb push into adc rorb cmp dec push or sub stos sub lods dec call or fs adc push inc adc pop je pop pop je hlt and cmpsl push and mov sub inc js and fst pop rcrl (bad) lret test adc push push roll es mov movsb and and sbb add push inc je adc sbb sbb movsb loopne gs bound lcall lcall rcrl inc push (bad) mov lret adc xchg popf enter out mov out lret push dec adc les aam stos enter (bad) fsubl lds push test movsb xchg push movsb ja cmp rclb loop push cltd mov gs loopne dec stos jge popa lods sbb pop dec mov jmp ja mov cltd xchg inc rol lcall pop xchg xchg push enter dec dec test push int3 ljmp cmp inc dec imul cld dec push nop xchg jp sbb cmp sbb mov out test nop out test adc test and enter xchg test jne lret jno pop push rcl xchg adc xchg xchg push popf pop adc xchg dec xchg xchg rcrb push mov push fcomps fsts adc fmuls or cmpsb dec iret sub int lea cmp enter test xchg (bad) (bad) sahf (bad) (bad) xchg scas adc push jp dec mov cmpl aas adc xor dec and or dec test daa movsb inc xchg aad movsb aam inc test inc movsb aad aaa xchg movsb arpl pop sarb shrb and lds adc cmp inc bound adc pop adc push adc cltd rcrl pop push xchg add int dec xchg (bad) call mov cmp adc sub mov mov cwtl and fwait adc int3 imul bound sbb mov lea hlt movsl and inc and sbb jp jb and adc pop mov mov addr16 inc dec je in jno dec adc fwait shlb dec pop xchg test mov xchg fs inc inc inc dec inc jbe imul inc inc push enter into and (bad) and cld enter ljmp das mov and or jmp jp jb mov mov mov mov in pop cltd add or gs sbb mov mov adc mov les and add or and cmp or pop push mov arpl aad sbb inc adc and (bad) mov call adc jne and inc mov insb inc dec adc cmp and lret sub and jbe xor dec mov and dec (bad) cmp xchg push adc xchg pop pushf fstl stos sahf aam dec das cmp cmp das inc jbe inc (bad) aam adc inc repz movsb es movsl ss cmp test shll inc popa push sbbl xor or mov dec or or into mov dec out push dec adc adc test xchg into jno aaa les push ljmp or (bad) xor dec cmp push or adc scas sahf out test xor int or (bad) adc mov push or fwait push adc push xor and xor mov cmp dec and in insb sub test pop lods and and and adc lea mov xchg xor leave pushf dec test sub rcrb pop les xor adc sbb inc dec ret xor jns ficomp mov insb inc pop dec jo dec jge lds inc sbb sub lods mov mov push rclb pop rcl jb sub mov cmpsb mov xchg into pushf loop rcrb pushf xchg cwtl insb lea mov push dec enter adc dec cwtl in fisubr nop (bad) lock scas inc aad repz and push xor out inc jbe inc ja sbbl rcll xchg adc cltd pop fcoml insb xchg xchg jae aaa cmp or lret dec je mov xchg xor cmpsb and cmp xor cmp in jae push movsl sbb cltd and dec dec and adc out ret adc xor nop dec push mov dec (bad) mov in mov nop xchg enter xchg es mov (bad) jo mov lret pushf mov test sub inc into fwait mov dec or push inc mov adc rcll sbb (bad) bound in data16 enter int mov adc xchg nop call xchg scas adc data16 sbb shrl dec call push dec lea push loop fs jp dec enter cwtl and outsb inc jne inc cmp pop fwait or inc rol mov jae lods sbb test mov dec mov cmp test ror into (bad) movb (bad) shrb xchg test (bad) pusha xchg pusha mov nop stos mov aam stos xchg shlb xchg (bad) mov fnop fsubrl xchg mov mov nop stos mov loopne mov xchg ror out xchg (bad) cmpsb mov mov stos movsb (bad) out lcall out test mov repnz pusha lcall push jo test ror into (bad) mov mov stos loopne (bad) outsb xchg ficomp mov (bad) out (bad) (bad) xchg movsb fiadd mov push ret pushf mov test mov mov cwtl out mov pusha out mov jb test (bad) test into (bad) xchg pushf (bad) loop faddp mov mov (bad) mov int3 (bad) xchg movsb mov (bad) (bad) rol test mov xchg movsb xchg int3 aam loop test pop lock xchg mov lods mov mov push mov ljmp les cwtl out mov mov xchg into (bad) mov fimull push lods test xchg (bad) mov stos ret mov xchg call (bad) lcall cmpsb nop mov movsb mov mov out int3 pop out mov mov mov out in (bad) push xchg lcall insb (bad) mov mov data16 cmpsb lock mov repnz mov shlb xchg data16 aam pop mov stos mov ficom xchg out jb xchg lods test out out mov enter pusha mov into xchg out mov out loopne xchg (bad) cwtl in test cwtl into sahf shlb pop push fs test xchg lock rolb test mov loopne ret mov push into fisubl fiadd mov out xchg loop into fisub xchg loopne lock mov mov mov fimul xchg sahf (bad) xchg sahf into aam fs push xchg (bad) xchg into xchg repnz lock (bad) jo nop push (bad) (bad) jb ret mov stos (bad) (bad) (bad) enter nop into movsb (bad) (bad) fcompl lret mov mov xchg mov nop (bad) cmpsb mov (bad) shrb mov xchg ljmp bound (bad) xchg mov test cwtl cmpsb (bad) hlt pop pusha stos rclb fs test xchg mov mov (bad) fimul (bad) (bad) test test pusha cmpsb mov mov lods xchg mov xchg mov mov xchg pushf fmul (bad) (bad) test xchg loop mov shlb call fiadd lods mov (bad) lcall mov (bad) jo out pusha lods (bad) mov into (bad) xchg pusha test dec and mov mov xor and mov and sbb and movsb sub movsl mov stos movsl mov and movsb mov mov movsb mov aaa sbb test cmp mov sbb sub xor mov cmp test mov mov lods sbb cmp mov and pushf and es mov movsl pushf imul sub mov or add test sub call call dec sub xchg call mov inc push inc pop inc dec imul dec jp push inc cmp push data16 xor cmp jns push dec xor jb mov nop (bad) mov int3 inc and inc sbb (bad) adc pop lcall nop fisubrl lea sub dec gs or push inc inc push imul mov daa cmp and sbb cmpsb cmp push inc push inc jo and jnp xor mov mov or adc rcrb push pushf aam push dec pop xchg pusha (bad) lcall test xchg xchg or cwtl mov popf fmull xchg gs and je push sbb push lcall mov mov mov shlb out data16 aam pop mov xchg pushf into xchg mov ficom ss xor aaa rclb push push sbb fsts les xchg out mov out inc mov (bad) sub cmp (bad) or cmp cmp dec ret xchg mov sub sub stos or mov into fisubl fiadd mov xchg mov inc movsb dec stos sub call sub loop inc movsl xor lcall mov sub imul dec sub mov inc cmp lea mov leave or push and movsb es mov and mov sub mov dec dec sub jp xor dec test cltd xor cmpsl cmp and mov mov imul mov dec movb xor (bad) jb sbb push inc lods mov push xor sbb lds xor cmp mov shlb xor ret jno or lret adc adc push dec mov loop cmp adc test sub scas int3 push fs ss adc and adc cmp cmpsb mov cltd add aam outsb in jae outsl mov inc mov or mov adc in adc adc xchg lcall fcmove (bad) mov retw add les mov aaa push sbb push adc fcomp push rcll or push sarl test and mov mov dec test sub dec test dec push popa inc and and mov shll push mov mov mov ret test jbe je adc es sub test cwtl mov sub push and (bad) adc jl int das push imul adc lret and enter test inc mov inc test fcmovnb xchg and sub or nop mov fimul dec sub cmp lds sbb ss cwtl push loop push adc leave adc into lcall psubw adc push cmp popf fstp xchg ficomp rcrb mov xchg xchg push mov sbb push daa or dec call mov les push movsl aaa mov sub test mov and pop push adc and mov pop push sbb movsb movsb cltd and cmpsl pushf and adc push dec test pop sub or int movsb dec addr16 cmp pop adc push push push enter mov and sbb xchg or xchg add xorl xor mov add out rclb push push adc adc dec xor sub jne les adc adc (bad) jno xchg fwait cmp mov mov les dec jno inc dec push inc inc inc imul dec ja jns ret rclb adcb mov cwtl push rorb push sbb sbb pop lcall inc dec outsl inc adc aam inc pop push mov or xchg aam adc pop rclb (bad) sbb sbb aad xchg push fcmovnbe cmp dec or movsb push push dec je inc push je inc add test xor push push xor xor or inc dec inc push bound cwtl (bad) inc nop shlb je and pushf loopne stos adc sbb les and rclb xlat mov dec sub xchg adc das dec adc sbb push mov sub repz movsl and sbb mov enter mov xchg push mov ret adc push mov push sub test and and push adc sub mov pop sub and sbb mov stos mov push ret mov mov sbb out and dec imul xor sub mov inc inc test sbb fnstsw inc push sub and mov cmp test mov cmp cwtl cmpsb test mov mov cwtl sbb stos mov daa xor test lods xor mov mov mov sbb mov test mov xor mov sub test test sub stos xor mov mov mov mov cwtl and sub mov and xor and mov lcall sub mov sub mov xor sub cmp mov adc mov and test mov mov and mov and mov and pop mov mov movsl sub mov pop fwait sub xor and xor mov cmpsb and sub cwtl and mov mov mov xor cmp mov mov test and mov and mov xor xchg mov mov sub and cmpsl fwait and cmp and mov sbb mov mov cmp xchg cltd and and movsb cwtl sub xor movsb sbb and cltd sub test cmpsl xor mov mov and pushf xor mov mov test mov pushf and fwait sbb lcall and stos sbb mov xor test mov cmp and and mov and mov stos and and mov mov sub sub mov and xor sbb mov sbb cmp lods aaa test mov xor mov sbb movsb sbb movsb sbb and pushf stos sbb mov movsl stos xor movsb mov cmpsl cmpsb sub xor mov mov xor mov mov mov sub sub mov sub sub mov stos and sbb and and and cmpsb sub lods mov xor mov cltd and mov cmp sub and mov mov movsb mov mov and aaa mov stos xor lods movsb mov mov mov and mov and xor movsl mov test mov mov aaa sbb sub and pushf and stos xor movsl and cwtl sub mov adc mov lods mov and sub mov aaa mov cltd mov mov and movsb sbb mov cmp mov mov stos mov mov pushf cmpsb mov and and mov sub mov movsb test movsb lods test xor sbb fwait test mov mov and movsl and movsl sub sbb lods and cwtl sub mov mov mov cwtl and sbb xor sub mov mov mov cmpsb mov sub cmp cmp movsl test mov mov adc xchg mov mov stos mov and mov sbb mov movsl cmp mov sub and and mov mov and mov mov test mov stos mov sub mov mov test cmp mov sub cmpsl mov mov mov mov and mov and mov test mov and mov mov mov and mov mov cmp mov mov movsb mov mov mov test test pushf mov mov mov mov mov mov adc xchg dec adc aam fcmove popf rcl pop mov sub outsb ljmp push data16 push ljmp dec vmovaps sub scas (bad) in call sub int sub test in out sub sub test in scas lret sub int or or sub ljmp add and adc aam push xchg add and adc arpl inc xchg xor add xor ss xchg mov push jne push push lret mov sbb dec push sbb or mov push mov data16 sub inc and push adc and dec dec inc dec dec adc push (bad) cmpsb lock lods mov or and nop push rclb xchg sbb test out dec test or sub sub sub lods call int sub into sub sub test or pop or test sub insl mov or dec jmp and movsl pop mull xchg ja xor je movsl push inc push (bad) xor adc stos push sub and mov dec cmp xor or mov mov stos xchg jp or sub test sub cmpsb movsb adc adc jne pop xor sbb mov mov lret xor add add scas adcl adc and dec lret arpl leave mov cltd (bad) lds jo mov and mov lret imul push fadd sub or or lods adc fisubr mov jne subl jmp xchg jo test (bad) mov and jno lods or xchg and sub test adc jecxz xchg inc popa and mov sub scas out inc or loope add mov xchg mov inc aaa cmp dec xchg or add dec sub inc inc and xchg (bad) aam jle movsb sbb inc add xor sub mov and rclb xchg xchg (bad) sub inc sub xor dec sub mov push mov ret jnp dec inc mov jl sub int xchg fs xchg xchg push cmp sub (bad) sub push xor out xor push addr16 sub sub jbe cmp aaa sbb sub push pop rorl or mov movsb push push xor je add and aaa xor sub mov (bad) dec (bad) pop adc lods mov mov push adc mov inc dec jno xor adc cltd push aad fimul ljmp mov adc test iret adc enter sub sub dec mov aam mov jne adc cmp (bad) fild and cmpsb movsl sub or adc out (bad) imul inc lds mov ret mov adc sub sbb ficom pushf push xchg loopne pop push mov push popa inc push dec inc and ret xchg or pop mov dec inc dec jns addr16 push and and cmp mov mov xor test mov push ja mov ret es cmp xchg adc xchg dec lds pop les and bound icebp daa cmp jno ja mov aaa mov (bad) adc cmp adc mov repnz mov mov sbb jb mov rorl insb mov lods out sub dec bound sub adc mov cltd (bad) in shl pusha mov mov fcomp pusha call xor xchg aad ficomp pop or inc dec mov xor popf xchg push sbb fcoml cmpsb xor test cmpsb daa je arpl test and dec rcll xchg sub xchg xchg xchg cmc xchg and xor dec mov xor jae sbb pop fistl push cwtl int3 int3 into (bad) fdivs es lods lret push lods enter xchg xor cmpsb xchg or ljmp jae mov lods xchg insl imul imul inc push adc lds shll gs fisttpll shrl dec xchg dec movsl (bad) and sub sbb movsb push mov jne divb inc adc push in (bad) mulb (bad) (bad) pop fsub int3 stos mov inc pop je ja dec cmp loop outsl mov adc mov inc inc and icebp aaa mov call bound adc xor inc mov mov sahf insb lods lock mov cmp outsb fs xor lcall cmpsb mov cmp dec dec data16 call mov xchg cwtl inc test xor shll lcall cwtl int in pushf inc cs jne push das inc and (bad) lret sbb adc push loop dec and xchg pop adc xchg rcl sub or mov lret scas xchg ret pop jbe dec arpl xor mov mov mov and mov adc pop push dec push int3 mov fcompl repz stos fwait xor lret mov push (bad) mov adc mov sub or jp inc inc cmp sub add out call push push add xchg adc push push xchg (bad) arpl pushf fwait push lea test mov inc and mov inc dec pop mov (bad) adc inc xchg je je adc mov push sbb mov rol mov in dec aam (bad) lds sub fldl xchg in into mov insl push inc xor and add cmp les fucom xor lcall test ja mov pop mov mov lret push fstps movsl xor xor push cmpsl inc and sub xchg or mov (bad) xchg mov lcall (bad) test les ss insl mov lcall scas push inc (bad) or (bad) push push rolb pop inc nop fmuls adc dec rolb mul into inc notb inc jno sub nop cltd push rcl pop dec rorl xchg or adc cmp fisub adc lods movsb fwait mov adc push xor sbb mov adc xchg fisub lcall push inc insl data16 sub mov insl bound and sarb mov dec xor push and mov sbb jae mov in dec push cmp orl fnsetpm(287 dec push inc inc cmp mov xor and fmull cltd and xor mov (bad) lcall es dec sbb in es adc fwait or xchg cwtl pop pop fistpl dec lcall ficom or push push push lcall fsts rclb or pushf sbb aad fwait xchg pop rcrl push push pop sbb rcr xchg adc fcompl (bad) lcall aam sbb mov push push lcall pop pop adc xchg pop pop fnop push pop pop sbb (bad) ficomp sbb xchg push rclb pop rcl push lcall aam push push push adc push xchg dec rcll rclb fwait push push push adc rclb push push sbb rcrl rclb rclb push xchg sbb dec push push push xchg push xchg push push push rcl push pop push sbb push push rclb rclb adc xchg push push push xchg or dec adc dec adc push nop push xchg push adc rclb push pop push fst push dec rclb pop pop adc push nop pop push push push adc adc ficoml push pop pop fnop push pop rclb push nop rclb push fcompl push push push push push push push cltd rclb sbb push pop pop rclb xchg fnop pop xchg xchg push push xchg or pop rclb fcom push push rcl push push popf rclb push rcll adc push rclb pop push xchg push push xchg adc push xchg push push push xchg pop rclb aam nop push push int3 adc adc push adc aad push push push nop push push push fnop dec adc rclb fistl push push xchg xchg push push nop aam push rclb push push push push or push pop fwait rclb sbb xchg push push dec adc pop fnop push pop nop push push pop xchg xchg push push xchg pop rclb sbb push push aam pop nop push push push pop xchg xchg push pop adc push rcll push push nop pushf adc push push pop rclb push push adc rclb push push pop rclb rclb xchg push push ficomp sbb popf cltd adc push push push push xchg push push push adc sbb adc pop xchg push fwait adc sahf nop push xchg push push push xchg popf cwtl xchg push mov aad push push dec adc push push pop adc lcall sbb xchg sbb xchg xchg adc pop fcoms adc adc pop push rorb push rclb fwait xchg fwait push xchg pop rcrb rcrb push push push push rcrb xchg xchg push adc rclb sahf push xchg adc push push push xchg pop mov push push rcr rclb or pop xchg adc adc lcall mov push xchg aad push dec lcall push push push pop xchg into pop xchg xchg pop sbb fwait push push pop xchg aad push xchg push xchg sbb pop aam adc xchg fcoms push adc pushf aam adc cltd rorb sbb push push adc lcall fst pop rclb xchg rclb xchg xchg rcll pop pop sbb push sbb push pop push xchg pushf adc int3 pop adc adc fstps fistl aam sbb rcll push xchg sbb fwait sbb adc adc sbb xchg rcll adc pop sbb popf cwtl push int push lea push push push pop rclb fwait adc pop adc xchg rcrl dec adc xchg push adc cwtl xchg ficomp push push aad nop nop xchg xchg (bad) xchg rcrb push pop rcll push dec fwait or push adc pop fcomps aam push push push push push aam rcrb sbb sbb dec rclb lcall or push push push lcall fsts rclb or pushf sbb aad fwait xchg pop rcrl push push pop sbb rcr xchg adc fcompl (bad) lcall aam sbb mov in je xlat adc in xchg jbe adc push jecxz xchg xor adc and xor je je adc test push aam and push je and inc adc or jae mov adc adc sbb nop out into mov push and sbb rclb rclb test lds cmp sbb sub out loop inc adc push inc xchg ss sub inc inc push adc mov push push inc pushf into and mov cmp leave enter inc adc mov xor mov dec sub dec loop inc xchg or dec xchg adc and or mov dec data16 mov xchg inc pushf (bad) fs inc xchg mov inc inc enter lods cltd push roll jg xchg or inc dec push popa jb sub mov mov or imul xchg jae mov xchg add into int3 mov lods bound xchg gs pop rcrl fmul mov les mov mov inc inc pop jbe dec inc xor mov inc sbb enter rol nop lcall and inc xor and leave lret mov dec mov popa push dec jns push test push call gs add mov cmp sub cmp push push xchg pop mov inc or xchg (bad) xor push mov xchg shrl mov into test fstl xchg mov (bad) mov adc mov inc jno sahf sbb insb inc dec mov xor sahf xchg enter mov xchg dec inc (bad) stos sub sub mov lret stos sub bound pop inc dec in ja pop adc inc xchg push loop insl adc and push cltd (bad) (bad) movsb daa inc cs and mov adc pop adc adc imul in fnsave out movsb (bad) stos fsubrs jb nop test ret mov roll sub fstl in mov dec int inc movsl adc jecxz cmpsl mov and lods loop jns cmpl xchg sbb (bad) fsubl test pusha mov into push xchg scas mov mov mov push popf pop aad aad push push incb push inc adc push jp xchg jno jae inc mov mov jae movsb jmp push mov dec or addr16 inc dec inc mov sbb ret and mov adc xchg push inc ret fwait xchg jno pushf fs dec push push adc (bad) and add mov xor inc outsl and push sub imul sub and mov bound inc inc aaa arpl mov xor xor mov cmpsl rorb dec (bad) test push or out dec add adc xchg mov and popa and loope dec inc xchg arpl adc push nop mov scas mov and xchg inc adc xchg pop sbb lahf xor orl sub and cmp mov out loop jo or ja call fisub daa add mov and rclb or xchg test xchg adc int3 dec dec shrl stos mov and sbb mov shlb adc adc cltd rorl lods dec cmpsb or sub inc addr16 or xchg adc xchg and or dec lods repnz pushf sbb xchg and (bad) movsb out rolb jo fnsave cmp sub (bad) data16 push repz and movsb fcmovb adc sub xlat mov fisttp pop xchg mov dec enter dec dec lea sarl aaa or mov shrl and pushf data16 mov xor sbb fnsave enter mov sub or inc mov and popf adc fcmove in ljmp xor and cmp loope push sarb push push and adc stos mov rcrl arpl xchg je pushf dec sub insb jno mov mov rorl lods mov or xchg add jb daa je arpl stos stos xor sbbl aad loope xor lods fisttpll bound data16 jb jns dec xor cmp sbb sbb les out jbe push push pop push mov bound fiadd and xor mov sub fwait jb popf (bad) dec or inc xor xor aaa sbb fisttpll dec (bad) cwtl cltd pop popf pop pushf push jbe push xchg cmp dec into (bad) xor adc cwtl pushf roll mov xchg cwtl xchg aam sbb mov adc dec fs inc jae adc mov or jnp fwait jb or inc xchg (bad) xor dec lods cwtl xchg nop dec mov lock and cmp push mov nop enter cmpsb fs mov push xor jbe push inc dec mov push dec jns xchg dec rcl sbb (bad) in les adc imul or stos sub dec dec scas inc call mov jae repz cmp jecxz ret push sbb dec cmpsb imul dec push xor mov sub mov lea in sub inc cmp sub mov cmp xchg push mov mov lea push xor das ja push inc inc ja dec inc aaa mov mov enter test outsb fs mull xor cmp nop mov or sub inc add fs cmp int3 (bad) mov fsubrl push shrb mov enter in inc pop sbb or shll stos movsl mov sbb mov test fstl push test loopne scas fsubr mov jno outsb dec xor ja xor sbb mov mov aam aam shrl daa je xor push push pop sbb pop fstl jae mov mov xlat inc sbb mov mov inc or lods inc mov lds cmp fstl and or popf and push adc dec gs add or xchg and imul add popf add add add popf or push adc cmp push popf sbb add pop ror sbb inc mov add popf mov xchg and or popf lods sub or sarl lds add add enter int fstpl add loope add add and mov aad or inc mov mov roll loope fnstcw imul lea mov lea popa add aad or fldenv rcl mov xchg movsl gs inc cmp or xor lods roll mov or lods lods cltd or xchg and and add inc sbb mov adc mov add dec mov jmp pop pop mov add dec mov popa add dec and rorl fsts lods dec cmp xchg inc aad mov lds movsl xchg xchg or and loope aad and inc add mov leave add rcrl and movsl rcrl xor (bad) fstpl sub add cmp push gs enter mov fldcw leave or cmp xor imul rcrl mov test fs in mov fnsave int3 lods mov roll leave cltd dec mov gs lea shl frstor adc shrl and popf adc pop pop mov push fnstcw imul add push push flds lds popa add (bad) xor sbb and or test xchg imul mov sub or leave mov leave pop sub cltd mov fstl dec cmp int sbb fnstcw mov rcl add loope sub movsl cmp inc call loope gs loope pop sbb cltd xor adc sub rcrl gs add mov inc roll cmp or dec sub cltd fnstenv adc test mov cmp mov add movsl add loope (bad) movsl xchg add in mov add sub mov add jmp mov aad popa mov loope adc lods dec lods leave sub add or movsl sbb xor and push int3 lret dec mov fistl aam pop rcll push push push push push push xchg push fstp rcll pop rclb push fwait aad pop adc xchg xchg push adc rcrb xchg sub call sub mov mov imul or dec sub dec mov sub lods call (bad) in sub push dec dec out sub cmpsl cs push push dec in jmp test mov imul imul xor mov mov xor push or cltd or dec fsts inc js and mov mov movsb sbb cmp mov xchg mov sbb cmp cmp mov sub mov mov sbb and adc push inc gs cmp ret push inc cmp mov xchg mov test mov jmp adc inc test mov sub xchg inc xor or and xchg jb or stos rorb imul xor shll mov popa adc loopne cmpsb nop ljmp inc jbe outsb sub push gs dec fs jne outsl xor dec imul push outsl cmp gs jae inc xor inc jo sbb pop push cltd pusha leave add rcrl and inc insl aaa inc dec outsl dec and mov and xor daa sub pushf fwait cwtl aam mov xchg mov push or dec push cmpsb divb test cmpsb xor fs movsl movsb adc and adcl dec dec (bad) pop xor popa push push dec or lret fmul adc pop pushf cltd xchg cwtl (bad) (bad) push popf cwtl rorl dec xchg in outsb mov inc mov mull mov mov inc add cmp mov sub xchg push inc rorl jnp cmp mov inc dec lds inc or (bad) push xor xor mov cltd push pop int push adc mov dec das sub sub or and dec inc fs and adc mov mov sub and mov mov sub sbb aaa sbb and lcall aaa cwtl sbb lods lcall sbb or mov test cmp mov adc ljmp jno push pop popa pop push inc and cmpsb es test and rcrl adc adc push or popf fwait pop les push xor inc bound nop push xchg pop push pop push inc lods inc iret or lret sub gs jns mov fwait mov adc xor leave pop adc cwtl hlt test pusha mov daa or and and (bad) sub mov mov jae dec arpl ss jno mov sbb imul sbb sbb inc insl mov es outsb es cmpsb xchg mov inc ret inc xchg hlt pop add cmp sbb shll adc or dec sub bound or sub es aaa ja dec je sbb sub mov adc movsl adc push adc adc (bad) fst xchg sbb flds mov push inc inc imul mov call je andl or lret lret adc fwait lret mov ss fs jne xchg call jmp xor (bad) jne andl pop sbb xchg sbb and (bad) and sub lcall call sub (bad) jp or mov movb enter sbb daa sbb sbb cmp lret sub and inc movb mov test adc out xchg mov push addr16 inc pop inc xor xor mov sbb xchg dec (bad) xor imul mov dec adc mov xchg xlat adc rcl cltd mov sub in (bad) jp xor stos inc sub xchg pop xchg dec into dec scas lods into ljmpw ss inc xor cmp xchg mov adc test fs inc addr16 adc mov test fnsave pop mov push pushf int int3 xchg iret inc bound pop sbbl rorl enter scas or cmpsb loop inc xchg popa xor ret ljmp inc xchg aaa inc adc leave test in repnz sbb adc push rcrl nop rcr sbb push dec mov mov cmpsb adc pop xor jae and jno lcall loopne scas sbb lret call mov ss sbb or pushf push fs and pop adc (bad) mov fcmovb bound es sbb daa lods mov xor popf fcoml pushf lea jbe and xchg or add aam adc xchg ss cltd aad repnz push enter scas inc and sub mov or lea and mov add inc inc and xor in test push mov int les gs xor xor or leave out sub arpl inc popf or out popf pop mov and test mov stos mov pop or push or call sub inc mov fdivrs fstl or push xor imul addl lods roll pushf (bad) ficomp mov dec insb xor inc addr16 inc xor fwait and dec push into sub test jbe and mov xchg enter push int3 inc mov in lcall aaa and test push ret dec adc ret sub cltd stos adc mov lods (bad) or sub inc ss roll cmp test int3 mov out cmpsl and add inc lods dec mov outsb inc xchg push sarl inc jo bound (bad) lret xchg inc inc fwait (bad) arpl dec int inc jno sub adc mov (bad) push or int insl or popa xor adc dec (bad) enter xchg nop int pushf sahf push sbb cltd les mov inc ja inc inc sub jb xor adc cmp das adc sbb xchg adc push pop addr16 dec adc xchg adc mov dec call into mov out leave call jne aaa inc arpl xor or adc or sbb dec xor adc xor jp or rorl adc and xor sub sub insl out inc dec arpl dec dec sub mov cmp mov xchg loope sub (bad) ljmp adc test dec dec and arpl mov lods fcompl fsubl fs sbb lea bound inc das jae cmp mov int sub leave push push cmpsb sub outsb dec les xor inc addr16 les add test mov adc fimul cmpsb xor mov xchg divb sbb and dec inc mov mov dec xor mov lea lcall movsb data16 xor sbb movsb cmpsb adc mov nop push push mov mov popa dec xor data16 inc js outsb cwtl mov and outsb call push movsb cmc ss int rcrl ficomp adc sbb pop adc push dec ficompl dec xchg or push pop pop pop int fcomps dec xchg dec adc push adc xchg aad lcall xchg adc sahf pushf fcoml mov cwtl int or xchg push pop sbb ficompl rorl fmull rcll rclb pop ficom cltd sbb adc lcall fcmovbe pop pop pop popf pop xchg pushf push lcall sahf mov fwait push or rcrb sbb into sbb adc adc pop sbb rclb mov mov sahf or mov push xchg sbb sbb fcoms adc pop pop nop (bad) ficoml push sbb popf or push pop or xchg push pop dec pop pop dec rclb adc pop xchg int3 sbb lea rcrb fcomps ficompl xchg pop xchg dec pop ficomp fcomp push pop xchg xchg nop into push push pop aad push aam sbb adc pop rclb into pop cltd xchg sahf xchg rcl aad push xchg dec sbb lret dec dec fnop push xchg into push adc int3 adc fcom fstp pop nop ror adc popf lea mov rorb mov lret rorb aad push adc adc or adc mov pop xchg mov dec nop mov push or xchg adc pushf pop push push pop pop rclb xchg (bad) push pop aad pop popf pop push or pop sbb popf pop or popf rorl adc mov adc xchg adc aam adc xchg xchg push push int3 push dec push xchg or aad pop rclb sbb sbb adc fwait cwtl fistpl fisttpll push fwait push pop lret sbb adc fwait int3 xchg push push sbb ficom push pop pop cltd popf dec adc push push (bad) push or dec rcrl mov push pop push pop nop xchg push popf lcall rcll fimull adc push push lcall mov rclb adc rcll rcrl dec sahf adc int rcrl int3 push adc int push adc rclb xchg fstpl xchg popf xchg pop adc push pop fstl xchg adc aam rcl push adc adc pop dec into dec fxch adc mov push fistpl aam int3 push adc or nop nop push sbb int3 fistl rclb push fsts rcl push push rcrl adc xchg popf cltd fsts cwtl pop rcl push sahf push fmul fisttpll adc push pop adc cltd push push ficompl rclb nop push dec sbb cwtl pop cwtl int3 sbb lret (bad) or fistl sbb adc sbb int push sbb adc push push pop or push xchg xchg fcomp cltd push push adc pushf fcoms sbb popf sbb sbb dec lcall push rcrb or rclb fcomps push adc sbb push push sbb push nop aam dec lret int3 nop push xchg fstps pop fcmovnu sbb rclb push sbb push or push mov adc rcll adc push pop aam adc push push fwait or xchg ficompl sahf push aad rclb into pop lea sbb xchg lret (bad) fcoml adc push pop sbb nop pop sbbb sbb mov mov cmp and mov cltd mov sbb xor mov xor cmpsb movsb mov stos cmpsl xor mov sub cltd cmp cmp sbb xor mov sbb and aaa mov cwtl mov sub sub and mov mov cmp ss sbb xor sbb and xor cmp mov movsl cmp test sbb cltd cmp mov movsl cmp cmp sub and sbb and stos mov mov and sub mov mov xor mov mov cmp and mov cmpsb mov test mov sbb xchg mov dec data16 jp inc inc dec inc push xor sub xor cmp dec push jbe dec inc outsl arpl jno movsl pop stos cmp sbb pop mov sbb mov test sub mov fwait adc movsl xor pop mov movsb sbb cltd sbb sbb mov sub mov xor mov sbb mov cmp mov cmp pop mov adc xchg adc rcll adc xchg xchg push push int3 push dec push xchg add bound cwtl ret mov mov mov stos (bad) push outsb test push fs xorl xchg or stos push sub or sub dec int cmpsb (bad) sub leave or push in pop or sub dec sub lods sub or dec lret add sub dec dec cmpsb iret or out imul callw (bad) push or lret scas dec leave dec leave lods mov int mov cs ljmp es or lret or es vmovaps (bad) ljmp mov insb xor push outsl ja insl inc dec inc push cmp cmp push sub inc inc push inc dec push sub xor mov xchg mov into stos mov and movsb sbb mov mov sbb mov cmp mov sbb pushf mov aam movsb loopne push push jmp dec mov (bad) or mov xchg leave dec in insb int3 test mov insb inc jb outsb xor and mov xchg add xor mov inc and sub inc and mov movsl gs mov iret pop or iret inc and dec das je imul dec je arpl push insb arpl int3 rcr repnz cmp inc ss lds rcll and dec mov dec insb ljmp or inc ljmp inc xor dec lret bound imul push sub xor mov adc sbb dec into push pop push nop fs pop push and inc stos stos push jp mov adc and (bad) push mov pop sub xchg mov fwait dec pop sbb lcall mov or lret ret shll cltd fisttpll repnz dec aaa xor push insb jp dec arpl mov outsl dec xor inc push dec sub adc in les dec jb mov or loop xor data16 jo cmp sbb sbb sbb fcompl push (bad) xchg push xchg dec fcompl push adc xchg into sbb test jmp inc lcall rclb faddl inc push movsb xlat pushf mov mov in js push adc adc leave lret sub out push stos insb outsb mov test mov pop mov adc jmp cltd xchg push nop (bad) roll test add leave ljmp jb mov jp or mov dec jne dec jp inc aaa jp inc inc popaw dec ja imul (bad) xor dec cmpsb call cmpsb push mov dec call push sub or or stos dec in xchg adcl fs data16 push cmpsl ja aam pop daa xchg ja hlt movsl cmpsl aaa push out (bad) push out je push (bad) out xchg jbe aam adc adc mov sbb or dec flds mov fs movsb sub sub movsb sub mov cltd inc pusha mov push je movsb ja push (bad) mov and xor mov gs stos inc out and sbb fstps fcompl lock push sub xor and xor sbb dec xchg adc fs stos xchg xchg xor xchg insl inc push bound dec insb xor push dec cltd test inc mov sub jmp mov aam push hlt mov xchg mov inc ss test int3 fisubr in arpl inc jbe mov aad int dec dec or dec inc sub enter xchg push movsw pop and es lods (bad) in insb stos mov inc movsb test inc adc adc mov dec xor enter adc xchg pushf xchg adc imul sub mov dec xor inc push out xor adc es data16 insl push outsl cwtl fstpl inc sub xor adc mov cmp sbb adc daa xchg dec push mov pop rol dec push jp fwait sbb dec adc rcrb inc test sbb mov in es push js das dec adc push mov xchg pop ret mov aad enter mov loopne mov lcall (bad) sub sbb and mov cmp mov test dec out jno push outsb inc jne ja push xor xchg mov xchg fcoml mov inc pop jae mov mov mov imul push mov and and and loopne sub dec jns jo jno mov ret jae jb adc xchg dec add fcompl sahf mov and mov in add ljmp mov xchg nop ficomp fisttpl repnz movsl cmpsb dec bound loopne fisubl mov adc adc sbb gs push and inc or cmp cmpsb and lods sbb movsl mov mov mov sub test stos cmpsl fwait sub sub cwtl sbb out lock push and and push sbb xchg adc mov adc aam adc adc rclb dec cwtl push push lcall popf push inc test (bad) icebp xor mov inc and mov mov and adc sahf pushf lea sahf dec pop push (bad) sbb jb pop lret and adc adc xchg adc sbb push xchg push sbb add lds or pop xchg sub pop mov mov pop and nop pop dec lret pushf les sbb (bad) (bad) daa push xor test bound inc jns adc rcl test dec lods call insb insl test dec insb call xchg or and push out fcmove inc push test test inc daa addr16 inc xor inc pop inc test and xor inc xchg inc movsb pop add inc hlt testb jbe adc in es in inc inc add data16 test xchg les adc test cmc xchg movsl adc and inc rcll in adc je push push data16 adc (bad) push jecxz push jne push inc xor push testb adc je and fs xorl bound inc je aaa addr16 arpl xchg push mov inc jne push aad mov je test push mov aaa cmpsb and test daa pop adc and pop movsb push xchg xor fs pop je les jae bound fs adc addr16 xor push pop je mov push and pop daa je arpl pop push inc adc in test push xchg xchg notb push and daa push inc xchg jae adc lds jbe push mov xchg addl (bad) notl mov xchg jne mul test je push add xchg xchg out arpl and out je fs push fs and xchg and out xchg xor inc inc adc xchg ss adc push (bad) adc push es adc mull xchg xlat movsl inc hlt push je fs push xchg je add movsb adc adc ss data16 add gs je xchg je aaa xlat xchg xchg (bad) xchg je add push mov push je and aad mov data16 adc test testb les in mov xchg je test je ja push mov push je push mov daa xor adc cmc test daa push test mov inc adcl not xchg push push aaa je push in inc fs mov gs inc add inc ret and cmpsl test xchg je inc push adc and (bad) xchg in je addr16 ss daa movsb jae adc inc jbe addr16 movsl inc xlat pop fs je xlat gs inc adc push ss fs test push je push xchg xor adc movsb inc inc test in inc in adc gs data16 adc push ret inc inc xor es push test xchg adc je repz xchg data16 inc xchg fs je mov inc and xchg adcl out in push push cmpsb inc push and daa and les push xor movsl xchg add repz adc pop add gs inc push je mov inc inc addr16 push (bad) je push ss push fs aaa adc je xchg (bad) cmc inc push xor adc xchg inc adc daa xchg je xor test aam adc and testb xor push cmpsb mov adc pop inc jbe push adc jae push divb mov addl cmpsb je adc gs aam jne push es push push jne (bad) mull inc xchg xchg je divb jb in adc adc add and ss adc inc (bad) aaa and xor cmpsb fs xchg jecxz xor xor mov xor push jecxz test fs aaa xchg xor lds xor (bad) push adc xchg inc xchg xor roll bound xchg push and adc xor ja daa pop inc jne adc je xlat inc inc xor adc cmpsl xchg and push (bad) xchg adc movsb xchg adc addr16 add xchg les xchg xor inc test xor adc inc mov inc push movsb adc mov xchg rcrb xchg push adc mov rorl lea aam pop adc pop pop (bad) push nop push xchg rcrl fstpl push lea sahf mov rcrb sbb adc rclb (bad) dec pop push fimull or dec inc dec or sub dec sub inc prefetchw es dec scas cs es cmpsb leave sub jmp out lds sub sub out es dec cmpsb or jmp dec sub dec call scas cs outsb inc xor or mov gs shl adc push lods mov call imul pop xor addr16 push jns push das outsb inc xor cmp cwtl pop (bad) fimul cltd fst push xchg push pop xchg popf push mov push rorl dec sub inc imul push dec sub mov cmpsb xor sbb mov xchg adc mov xchg push push pop xchg adc pop ror enter call lods mov sbb sbb xor fwait mov lret dec cmp addl add test xor test mov mov (bad) cwtl xchg stos hlt jb xchg pop shr (bad) mov xchg add sbbl cltd leave jp xor mov or pop mov jae imul adc dec pop lret mov mov popa nop sahf adc dec mov outsb dec dec (bad) sub iret cs lea sub mov dec lea xlat gs inc adc push ss fs test push je push xchg xor adc movsb inc inc test in inc in adc gs push cmp rcl (bad) faddl pop jno and xor mov mov sbb and mov xor mov mov mov jmp mov mov push (bad) (bad) loopne stos bound ljmp mov ret fsubr test int3 cwtl data16 out (bad) jo les stos cmpsb insb mov aaa dec jo xor popa xor addr16 arpl bound jns dec inc inc jb outsl fs push push push xor inc push xor insl inc dec inc je xor pop sbb xor dec rorl out push mov dec jmp push adc out mov test mov das addr16 inc push sub ss xor inc dec push push dec jo inc aaa xor sbb mov xchg adc enter enter dec xor dec jae jae push xor dec inc xor pushf sub pushf and aad adc sbb push pop (bad) dec sbb fwait dec adc sub stos dec loop xor mov xchg pop sbb push sub dec (bad) lods (bad) and dec popa xor mov xchg dec jns sbb cltd fcomp add gs shl cmp shrb and mov rorl stos scas lods lret push int movsb out cmpsb ss test cmpsl je lret sub sbb (bad) cmpsb fs jb xor inc sub xor insl or cs int3 sub push and fwait or hlt fdiv mov inc notl sbb sbb xchg aad sbb adc into sub test push jnp stos jp pop xchg test or cwtl enter mov gs cmp pop dec jns xor sub lcall (bad) push fmuls insb outsb lret movsl pop and xor stos stos xchg pop cmp (bad) or sub mov ret adc cltd or xchg xchg pop js outsb dec das jae dec arpl inc popa jb js fs and sbb mov adc aam xchg sbb push adc xchg jno sub push arpl push inc js imul aaa inc mov lret inc addr16 push insb inc xor xor dec cmp mov mov mov sbb cmp test fisttpll enter enter fs inc je inc fs imul or lock mov test mov and sbb xchg pop mov mov or ljmp cmpsb in dec dec int sub add push testb adc ret and rcll mov cmp mov lcall add loope leave mov imul mov mov xchg mov ficoml dec fcom push mov addr16 adc sbb sarl pop mov popf sbb out pusha enter (bad) lret fs xor dec addr16 push jo insb mov dec xchg adc push push mov lret sub call sub inc or and ror push pop mov ljmp jb dec cmp sub addr16 je mov xchg xchg dec mov inc bound insl dec insl push insb pop jne aaa sub sub mov xor lods mov out cmpsb test jne push xor push stos dec pop imul stos adc sarb lret sub sub jae test adc rorl cs (bad) sub push jp jns sub sbb mov sbb pusha mov hlt repnz xor lcall (bad) cs out or dec jns cmp les inc inc dec addr16 push js sub push mov rorl in jmp push adc push int3 in test scas mov xor int3 lea hlt shll movsb adc movsb rcll je push cmp fwait mov dec xchg jmp ss pop mov pop mov cwtl inc mov ror adc xor scas mov push xchg push les and movsb push sbb mov jae mov data16 dec sub sbb xchg cltd mov dec inc call jecxz inc push popf adc cmpsb xchg xchg fmull xor sub cmpsb stos mov pushf sbb xchg aad ficom int3 mov adc mov stos popl xor sub into or adc xchg dec push push or dec or movsl add xchg inc push cmpsl add test sbb dec xchg bound push insb cmp push dec push mov xor es and mov mov xchg dec test call out test ja mov lock int3 rolb adc lcall dec sub adc xor xchg into in sub mov inc movsb mov movsb push arpl fwait mov imul inc and jno mov cmpsb fsubp mov mov movsb push jp push mov push mov jmp aam pop enter inc xor mov sub lcall or adc cwtl mov rcrb push and sbb ror outsb push lods out sub add cmc add mov (bad) xor imul fcmovu test ja imul js inc cmp cmpsb cmp cmp xor lods cwtl lds and xor adc inc (bad) or dec outsl inc pop jns sbb cmpsl lods xchg xchg mov push dec test in mov in push push (bad) push adc mov rorl test dec mov or js insb dec arpl arpl frstor sub in loopne inc sub icebp aaa cltd or xchg inc and arpl dec mov mov sbb xchg adc rorl enter es movsl sub xchg imul cmpsb (bad) loopne jb inc xor dec arpl ss xor inc ss push xor xchg lret stos loopne movsb (bad) inc daa inc inc xorl lods mov imul adc (bad) ljmp xchg mov jb xor push fisttpll cmp mov popa inc adc out call jne inc sub mov fwait mov enter int cmp mov rcl imul add push in or inc aad roll add adc roll mov call lea and popf adc mov mov lods mov or loopne fstps cltd xchg add and lods aad adc push imul int loopne jmp fstl pop lds sub rcrl mov leave or add lds mov or or dec mov imul pop mov frstor nop lods jmp gs rcr sub pop add pop frstor shl xor gs xchg add int cltd pusha in popf add cmp xchg mov or cmp add fisttpll imul fsts sub (bad) lds push popf or pop dec int aad mov mov lea lds inc add inc lods imul push inc add cmp or int popf adc in popf and xchg inc adc mov or dec sarl mov or nop aad sub mov rcrl lds dec dec in push (bad) in add cwtl loope sbb add int inc test flds xor inc popf fisttpll xor adc inc lods inc add push mov fisttpll cwtl aad sbb imul (bad) mov fstl inc sbb pop sarl inc lea or jmp popf or ror sub or (bad) int3 in shll dec add inc or xor leave fisttpll imul or cltd mov mov inc or movsb in lods imul mov inc lods inc lds (bad) xchg add in aam shl cltd add inc int dec cmp adc lea or push sbb or shl dec or fisttpll xchg loope shll pop fstl aad aad loope test int add fsub cmp add xor cmp inc lods and sub int adc dec inc or xor inc adc jmp mov fldl push mov rcrl dec lds dec inc push flds mov loope add fsub or rcll int inc add add mov sbb inc (bad) add loope popa sbb aad add loope jmp add xchg leave enter mov lds adc adc add loopne mov (bad) add add inc (bad) xor and mov test mov dec push lds leave cmp mov in add or mov xor int3 cltd sbb xchg lea mov xchg pop xchg popf rcrb push nop (bad) mov sbb push push xchg xchg pop push or push fstpl rcrl pop popf dec adc xchg sahf sbb adc xchg pop mov push fcompl aad or test lods call inc in jmp mov push pop push enter sub mov movsl in mov data16 call or mov pushw data16 popl das dec int3 lret call or dec push sub sub (bad) cs cmpsb add cmp dec cmp mov mov mov mov and mov test pop push pushf pop fwait adc fwait sbb (bad) sbb or cwtl nop push fwait push pop push sbb fistpl call mov push jns dec pop insb imul stos mov sbb mov mov sbb cmp cmpsl aaa sub cmp int push popf rcrb adc int3 jmp out sub in test sub xor push mul xchg or mov arpl mov and shl push inc add cmp or int mov ret enter out fsubrs cwtl cmpsb pusha fisub (bad) (bad) xor sbb pop pop pushf fstl sub dec sub outsl daa or (bad) or mov or jmp and push ret aaa push push pop arpl xorl aam xchg aam push xchg inc inc adc mov push sub push jae fwait xor mov cwtl aad sbb imul (bad) mov (bad) mov fsubl mov xchg dec je dec dec cmp and sub test and int3 sbb rcr push pop sbb xchg adc dec ficomp int3 int int3 dec test daa lea jmp andl inc add xor movsl xchg jbe out push adc adc subl adc lret or or adc inc sub stos mov xchg int3 nop mov jo mov cmp push mov loope test int add fsub cmp add dec leave add inc and xor adc pop xchg pop or dec out dec (bad) push out call add adc add addl ja daa adc or mov adc mov fs mov xor and add mov xor push jbe inc cmp outsl pop inc dec jb inc xor stos mov cmp lea (bad) sbb push inc pop xchg (bad) je stos jnp push rol lret mov or mov sbb add adc adc les cmpsb stos bound jo popa insb inc cmp sub jns fisttpll lods stos sub jmp dec mov jns lcall lcall es mov enter ret inc xchg xchg xchg push (bad) cli dec aad sbb int sbb test or test lds test xor pop mov pop (bad) fsts stos xchg in out mov fmuls jne insl ss inc cmp sbb rorl or jmp pushw or (bad) push imul dec mov fsubrs bound dec mov aam arpl mov daa je sub lcall xchg aam test inc and mov push dec dec sub push stc fwait xchg push sbb (bad) movsb jb push mov push mov inc adc adcl (bad) in insl and xchg rol xchg int (bad) mov mov aaa test push mov jns sub inc jno dec imul aaa mov cltd dec loop scas scas adc mov movsl loopne out ss sub pop bound inc xor movsb xchg fwait cwtl mov ja inc push nop int or xor and lret jmp push sub enter mov add inc addl rclb mov pop inc xor sbb test and mov fcmovne push sahf cwtl xchg les mov mov movsb xor mov pop mov cmpsl sbb mov fcmovu push push (bad) rclb mov gs cmp aaa and pop and sbb dec dec push scas dec or adc data16 mov add mov mov or movsl movsb les mov push mov xor mov popa pop sub leave pop xor adc outsb pop test test xchg into pop adc push rorl cs in lods dec or test daa inc jne test xchg and sub cltd inc or outsb push dec outsl dec pop xor xchg push sbb sbb xchg inc out or dec (bad) or dec cmpsb xor data16 push loope pop cltd sbb popf cmp mov dec icebp and mov mov dec lods mov jp lcall push fimull inc rolw push cmp inc out and sub xchg inc shll fmuls (bad) mov mov mov xchg pushf mov jne dec outsl xor sub pushf movsl xor sub cmpsl cmpsl mov xchg pop ror aam rorl int int imul xor mov cwtl fsubrs xor sbb data16 sub jno adc xchg push test and cmp dec mov mov xchg pop bound cmp faddl cmpsb movsb xchg cmp out mov cwtl xchg mov jbe xor push mov fsts sub repz add sub and push arpl push pop inc and sbb popf rcrl push or jb lret mov inc mov xchg sbb push inc popa push adc mov push xchg les inc arpl add gs les leavew int3 insl xchg movsl daa je data16 xor and sbb xor sbb sub dec jo dec push xor mov sbb sbb (bad) movsb pusha movsb mov aaa test movsl or addr16 dec xor inc outsb mov pop sbb pushf xchg dec mov scas add inc xor inc outsb dec roll add in cmpsb insb sub testl lods sub and push ja cmp sbb fmull adc sahf push dec push repnz sub imul sbb jae push jo fidivl sub fadd sub sub mov lcall sysenter push xchg lcall cmp int test mov push (bad) into mov inc cmpsl push arpl jns rorl sub or xor and inc inc dec adc mov fs xor xor push ret mov sbb push out sub in out repz mov add test inc rorl insb out push vcvttsd2si xchg and mov sbb mov cmp int mov xchg mov and adc mov (bad) inc adc xchg dec out dec js inc jb pop aam sub and cltd dec outsb mov lret dec dec lret inc dec pop mov pop adc lcall in xor mov mov gs imul rclb or iret and fisttpl es jns or pop dec shl fsubp adc push mov js push inc xor dec jp dec je push imul dec xor inc inc dec dec xor dec xor dec ja push xor inc dec inc dec arpl imul push inc dec fs dec jae aaa dec jp inc inc popa insb dec push inc gs dec push push inc dec pop push inc popa ss dec aaa addr16 push arpl ja xor push cmp inc jne inc outsl inc dec inc inc push ss data16 ja inc push das jbe cmp xor push inc jbe addr16 cmp das bound addr16 pop xor dec insb pop dec xor addr16 xor dec push cmp xor jo jns addr16 arpl inc inc dec jbe addr16 push inc push push cmp dec dec xor push xor jbe je inc inc dec dec push dec aaa push popa aaa jne inc dec inc push push inc inc push xor js dec inc outsl jo jno push je pop inc outsb outsl inc inc dec jbe insl jo pop aaa inc push insb outsb push inc inc push dec inc ss dec inc inc arpl dec push push xor inc jae inc addr16 inc ss xor inc inc pop ja push pop dec pop inc ja inc imul arpl insb xor bound pop push pop outsl jbe pop imul jae gs dec arpl xor insl cmp push jo pop inc push inc pop jbe outsb push push popa dec jno inc inc jae jbe ss xor push inc pop insb js push outsb imul inc pop inc push push jp js bound xor inc ja dec dec inc push imul inc inc bound jp imul push jno ja inc dec dec inc js inc dec gs imul addr16 push jp dec inc push inc inc arpl dec outsl xor je push inc jno push xor das das jbe dec arpl jbe aaa push inc inc inc inc push dec popa xor pop inc aaa gs ss jp push addr16 inc jo pop inc push imul dec dec gs cmp dec inc inc push jno jb inc inc inc push push imul ss imul push inc bound jno dec inc inc push xor addr16 popa jae dec dec inc dec xor dec push jb push push inc inc jne xor outsb push outsb inc xor push arpl data16 gs inc imul insl push pop push xor xor aaa jno das insl xor sub dec push xor inc jae inc push inc inc push inc push imul inc inc xor xor inc je xor cmp pop imul push xor inc xor dec popa push push inc push ja sub ja popa jno cmp inc inc push inc je xor ja aaa jno push outsb pop imul addr16 inc js push dec push js jbe addr16 xor push dec dec push inc jbe addr16 push xor insb inc dec imul jae pop xor dec xor inc jo jne xor jb jne inc push das jbe dec aaa das cmp arpl dec cmp push arpl jbe ss push push inc inc push inc jno cmp sub dec inc push inc popa addr16 outsb push ss jbe push inc ss das das jno pop push arpl inc jo das push inc dec js addr16 cmp xor jae push inc jno dec outsb inc jns inc push dec push inc xor push xor cmp data16 inc inc popa jb outsl js push das jbe inc push jp inc cmp xor inc inc dec jb jne jae aaa fs inc jno dec jne inc dec jp pop ret xor aad mov adc pop nop push fstl lcall rclb xchg mov adc xchg adc pop aam xchg dec sbb fcomp xchg sbb xchg xchg adc push pushf lret int xchg sahf xchg ror sub test ljmp or or je es pop adc test dec or cltd mov xor inc or add mov mov sub mov jno cmp rcrl rorb mov and lcall rorl sbb test cmp dec mov cmp mov bound sub shl pop enter rcrl sub nop cmpsb xchg outsb mov (bad) cwtl mov fs mov movsb inc outsl jo jno push je pop inc outsb outsl inc inc dec jbe insl jo pop aaa inc push insb outsb push inc inc push dec inc ss dec inc xor sbb and cltd xchg int or nop push pop xchg sbb push adc rcrb sahf push cwtl fisttpll mov jmp stos dec out int dec push push aam ss add rcll and cmpsl arpl adc les mov sub shll and gs loope mov inc rorb imul inc xor mov sub dec out and test sub lea in sub iret dec test xchg or xchg adc stos andl mov lcall mov cmp outsb lret insb into pushf hlt ljmp sub cltd and push mov push rcll pop push lret outsb dec enter dec imul mov push adc cmp nop into lods ret lcall push jb push push inc cmp mov mov or lods aam pop jp adc or xor loopne (bad) mov mov shrl inc sub xchg fimul mov mov shlb nop inc xor xor inc je xor cmp pop inc and cwtl sbb cltd cmpsl xchg cwtl push fsts mov dec popf fstpl pop into push nop push nop aad pop adc pop or rorl insl lret or jmp cmc aaa xchg fs adc (bad) xchg adc movsl inc pop gs je jae push les xchg ret sbb ret lcall addl xchg cmp (bad) in es mov dec imul mov cmp fcomp pop test inc adc (bad) in fsubrs test into xchg fsubl mov pop loop push arpl inc jo das push inc dec js addr16 and cltd sub mov pop adc push push dec xchg pop xchg int add mov cs js push das jbe inc cmp xor movsb mov sbb int fstl xchg ljmp mov dec xor insb addr16 outsb inc push popa arpl jbe popa inc dec sbb test mov mov sbb aaa xor mov movsb and aam push mov xchg adc dec in int3 call dec mov mov xchg sbb sub xchg pop or pop rcl mov stos xor aam ficomp int adc xchg push sbb xchg xchg xchg push dec fstpl push pop adc sbb fstl lods insl mov insl and inc push test xchg (bad) lcall dec pop push ret stos mov xchg xchg dec dec sub xchg lea cmp push dec iret dec iret sub mov push outsb inc inc push xchg mov in iret sub cmp mov mov push mov (bad) lret es sub fs jb sbb mov sbb xchg push outsb xor sub ja adc fstpl xchg leave push sub cmpsb or sub dec or and xchg aam repz mov push cmp adc xchg cmp aad mov adc in push leave pop mov dec repnz mov xchg sbb sbb les xor push andl sub cmpsb mov (bad) mov xchg stos bound sbb and push pop push fcmovnbe sbb xor adc push pop pushf rorl movsb repnz inc xor push and push addl inc xchg xor and gs mov sbb inc les inc inc dec inc inc inc dec dec push dec jae imul outsb (bad) cmpsb test xor dec dec cltd mov fistl mov inc jb jns xor dec rcrb lods aam stos mov outsl inc data16 push dec aaa dec xor mov sbb sub mov test xor and sub imul ss mov or movsl xor test or dec dec mov jae xor sbb add lods fs xchg adc into cmpsb loop ficom pop imul test push sbb inc cmp xchg mov aaa lcall movsb (bad) xor cmp jae stos cmpsb and mov xchg fcmovb mov xor sub addr16 outsl dec inc xor mov mov mov repnz push sub movsb and adc xchg push loop jo test dec jne arpl xor jp jp xchg fildl mov lcall adc adcl dec data16 sub xor push outsb inc adc jmp fldenv adc xchg mov loopne mov lods fisubl daa inc and cltd adc mov in enter push aaa adc push sub ret push hlt (bad) xor je xor inc insl mov sub aaa cmp mov xchg mov popf rcrb aad dec push bound and mov xor adc and stos es repnz in xchg push repnz mov inc dec inc inc inc push insb push or fstl (bad) xchg (bad) mov xchg ret cltd adc (bad) sarl cmp shll pushf loop data16 inc daa cmpsl xor fwait pushf sbb mov in and dec sub push popa adc or lea push insb pop inc outsb xchg and sub and or fmul or inc mov loop push mov int sbb ror test xchg adc rcl adc aam xor imul xor mov cmp adc fcoml int3 out mov dec push dec xor in lods in sub xchg data16 movsl adc xchg push xchg rclb or dec scas das or dec dec ljmp push dec stos or imul sbb adc pop adc push dec push or cvtpi2ps scas sub cmp or push les dec jns ja ja inc jne fs leave jle push inc fs popa ja imul adc xchg lret pop sub and xor cltd xor mov mov and test outsb pusha inc jecxz inc (bad) xor adc rol nop nop lret (bad) lock mov int3 int add sub cmpsl push inc ja movsb xchg jo mov test adc dec insl add int3 mov mov sub mov sbb push rcrl or mov loopne mov xchg sahf inc inc inc push sub push rol lods dec out out outsb js fs adc and or aad pop test add gs cltd (bad) xor add xor lea aad and dec push lods add inc push roll push add pop lods add lods test adc movsb mov add in in dec adc add mov add and imul cmp sub sbb or int inc or xchg popf inc cmp adc mov xchg popf popf sbb push cwtl shll flds add xor and aad pop sbb dec xchg add lods mov add or gs call xchg xor mov cltd enter adc in fmul rorl sbb inc cmp xor loope fisttpll and sbb mov leave test popa lods pop and lea pushf fmul pop fisttpll mov aad or mov dec push inc add or lea nop leave test aad popf mov or xchg popa loopne adc or xchg gs in inc rcrl fldcw sub or imul sarl nop in mov lods mov add inc push fstl mov dec lods lods rcrl imul kmovb push inc add xor mov add mov jmp imul adc sbb cltd test add int or gs adc or cmp xchg lods cltd mov add push imul or rcr popf and enter xchg mov in adc (bad) inc adc inc adc push inc imul xor shrl loopne leave add jmp jmp enter (bad) sbb lds in loope sub in jmp add and fisttpll add cwtl fstl mov mov or sub call adc mov xchg lods cltd mov or popf xor sub loopne xchg (bad) or sbb inc sub push (bad) shll aam loope and lods leave aam dec and jmp inc lods xor loope inc shrl lds popa push add sbb lea and adc inc int lds fst sub push sbb popa dec int fstps loope sbb sbb loope sub int cmp cwtl int add or nop roll mov pop xor loopne mov sarl add lods adc loope add lods test loope cmp cmp nop int popa cmp inc add in rcr dec pop xor loope xor mov leave sarl (bad) aad inc in test add popa and sbb xor fwait push popf pop push ficoml pop mov pop popf adc int3 push or xchg push fstpl rclb sahf xchg dec push rorb aad rclb pop lcall aad push xchg xchg int3 aad rorb fcomps pop or xchg dec pop dec rclb pop xchg leave enter cs sub dec mov sub outsb sub or les xchg xchg movsl adc les (bad) jecxz je fs xor xor add jbe jne hlt adc mov push movl push adc dec (bad) imul jae push lds ss adc add inc mov lds gs addr16 adc push xor xor ss mov push (bad) mov mull inc mov and adc adc and inc inc adc gs (bad) jae popa mov mov pop xorl xchg or ret pop mov inc cmpl push jnp push pop fisttpll mov aad or mov dec push in inc inc js outsl js data16 inc xor xor outsl dec xor inc cmp js inc addr16 aaa arpl xor jns push je outsb ja push ss dec push insb push xor inc inc imul dec jo push inc js jo cmp imul inc je imul push ja push mov cwtl xor mov adc rcll int3 pop cltd sbb adc dec push or dec (bad) leave cmpsb jmp mov jecxz adc movsl push push inc hlt cmpsb xchg push je je inc mov push push adc adc arpl xor daa movsl xchg adc je xchg out push mov in or lcall or rcr popf and enter xchg mov in adc (bad) inc adc inc mov push pop outsb js inc xor arpl pop pop adc bnd mov ss dec je dec jp and mov push sbb sahf dec ficomp rclb pop loop js mov push out dec sub in mov cmpsb xchg mulb sbb call adc mov mov inc push inc inc dec bound sub cmp mov xor sub mov cltd rclb rclb dec sbb lea (bad) mov push add push mov pop mov adcl add ja fs sbb or pop imul xchg ja mov je xchg inc data16 xor xchg test and int loopne test sub dec jne rcrl xchg (bad) test enter mov das ss ja push dec addr16 mov fwait sahf mov mov lcall test pop or fwait ret inc jae shrb leave cmp nop int popa cmp adc jb loopne repnz lods cwtl repnz inc xor jo and and xchg dec push xor data16 stos mov movsb adc push pop push xchg nop fisttpl adc dec ljmp or xchg data16 test sahf cmpsb hlt hlt and xor movsb xchg mov xchg and lcall movsl test and imul dec loope sub cmpsb inc and es xor mov xchg push sbb aad mov cmpsb or dec inc push dec dec imul and stos cmpsb xor xchg ficoml xchg pushf sbb cmpsl sub je mov lret jnp sub cltd sbb shll jp addr16 inc aaa das inc and mov lds lret sub xor xor jp stos cmp mov cmp mov xchg jb outsb (bad) arpl movsb ja xorl xchg jmp hlt mov jecxz xor pop and dec stos xchg inc stos lcall inc jno mov mov lds mov test test inc daa test adc and xchg adc int3 push fstl or or push mov divb lcall jb lods fisttpll xchg frstor leave sub outsb add push xchg push adc lcall pop test fisubl dec movsl xchg mov outsl add jae adc pop ficomp dec inc or dec dec in mov push push adc movsb pop push push push or xchg int3 add cmpsl mov adc bound and adc outsb mov inc aam xchg fwait lret fwait mov mov lret leave ret and sub xor inc call sbb xor dec push xchg lods and mov pusha xchg cmpsl adc mov test cmp inc sub loopne fsts cmpsb push mov mov xor out loop inc xor mov xchg ficompl mov sbb push mov lea adc pop sahf push or adc sbb aam or push push adc mov int3 jae mov mov cmpsl or push out mov (bad) cmc fs jbe xchg (bad) xchg adc inc movsl xchg aam xor and mov lcall mov pop push inc xor inc dec xor xor cmpsl test out push and and mov xor lods and xchg in in mov popf and sbb push movsb xchg inc mov inc and (bad) mov inc inc ret cmp mov xor push inc cmp mov mov xchg rorl nop loop push adc push xchg in data16 jne xchg in and sbb dec xchg dec rcll sub ljmp test add inc adc divl adc inc xchg push ret sbb lcall sub sbb test es sub rorl push push sub xchg ret xchg mov push or xchg xchg cmc inc xor test and movaps or push or push ss jne cmp push enter inc inc sub mov or xchg or rclb fcomps enter xchg gs mov and sarl sub call je hlt aaa cmp loop mov out mov stos (bad) xchg out test mov adc adc fnop fsubrs mov push push inc outsb cmp inc dec inc dec xor sbb inc inc data16 mulb xor aam adc jns pop adc mov sub sbb fs adc xchg loop xchg (bad) lahf adc iret adc nop ror push daa xchg mov xor and and stos sbb inc xor mov push int3 ret push pop mov add loopne adc xor push xor and aad shl test test jns lcall in inc mov push inc sub pop mov push adc loopne sub daa and push data16 xchg sarl dec push xor dec int3 test xchg aam in and sub mov cmp pop push cltd or and (bad) (bad) scas and mov sub mov push mov sub shll stos or leave in dec ret inc es sub xor loope and (bad) (bad) fsubl movsb out (bad) movsb mov fcmove nop push jo inc jo cmp sub push push jns and test xchg cmp or dec dec dec lods call sub push stos int les xlat movsl push (bad) aam push mov jp pop lods and bound push sbb das cs iret push xchg daa or imul enter in dec out push jmp or dec inc or jmp sub or push imul leave test lods insb dec or test or sub lods lret (bad) ljmp es push dec sub in dec stos jmp enter sub mov or sub push cmpsl add or lret or push sub dec or dec sub scas or or or or cmpsb call dec ljmp sub mov int3 mov gs sub sub in cmpsb or test sub xchg into or mov sub push test push push inc dec lea xchg xchg push lods es call sub dec data16 or sub test sub test test es scas sub mov (bad) dec xchg or outsb scas push sub (bad) sub iret or sub in (bad) leave dec sub sub in lods jmp sub or sub sub sub outsb or enter dec call in or lret dec lret mov sub stos or ljmp sub insb dec in lea sub dec or push or push dec or outsb or es sub or dec mov cmpsl or mov sub scas cmpsb das or jmp test outsb mov mov sub or mov push ljmp cmpsb cmpsb mov or sub in push into call lods or push sub mov enter out or or imul xchg push movsl push movsw imul sub sub test clts sub jmp sub outsb dec sub scas mov mov stos cs cmpsb scas out mov dec or inc scas leave mov insb call lods das push scas das cs mov dec int cs sub push in sub sub call insb mov dec dec call into dec es dec test call out jmp (bad) sub call call sub sub insb out in (bad) mov call or out sub test push outsb or lea lret sub inc prefetch dec sub sub inc daa sub ljmp imul call leave lret (bad) push insb call or callw or or push dec mov or push dec imul call scas out in inc mov sub dec in mov mov outsb call sub dec stos outsb into call test int sub test sub sub ljmp addr16 imul es outsl es mov sub push in (bad) sub or dec dec or add sub adc or adc push (bad) pop cltd xchg ficomp adc xchg fnop pop pop (bad) (bad) mov push nop xchg dec jmp sub or and adc and push mov test push jecxz add push in mov cmc and mov jae mov inc rorl mov jb imul in pop add adc mov add out (bad) mov (bad) sahf mov les nop (bad) mov pusha mov nop push mov inc addr16 jno inc inc push push sbb fwait xor sub cmpsb cmpsb cmpsb stos lods mov mov mov sbb and mov mov push push push pushf pop rcrb sbb xchg dec inc xchg push lods es out xlat xor cmpsb xor xchg xor adc adc inc aam addr16 adc leave mov lret pop ret xchg sbb pop or fisubrl sbb cmp and and mov cmpsb movsb and int3 pop sbb dec outsb sub outsb or lret es in cmpsb jbe test test add inc test push add mov (bad) inc push inc pop adc and xchg test xchg fsubp mov xor xor mov sbb sbb aad fwait rclb push xchg rcr adc mov sub or mov push jne js xor cmp pop dec stos (bad) (bad) call push push jns insl dec push mov mov or int3 int cmpsb mov or sub in push into call test and cmp adc fsubr lcall nop (bad) call push push xor inc jae sub xor addr16 gs dec push xor mov movsb adc sub lcall mov mov xor sbb mov xor or push adc xchg push int3 xchg fwait dec pop dec insl out push in sub sub call insb mov dec dec call into dec es dec test call out jmp (bad) sub call call sub sub insb out in (bad) mov call or out sub test inc mov gs hlt adc test xchg push movsl adc ret lret xchg mov or adc lcall cmp xchg loope popf adc mov mov fidiv mov test into cwtl push push imul push dec inc push inc dec dec inc outsl je dec push push xor pop push ss sub mov mov sub sub mov mov xchg adc fwait nop push adc int3 fstp bound xor cltd test rorl les (bad) nop imul dec pop adc push rorl (bad) sub or dec dec or push dec int cmpsb dec push leave push push inc push dec outsl inc inc xor sub int3 lds jmp inc arpl dec insb dec inc cmp sub mov xchg fs inc invd movsl push ja push xchg arpl push xor and sbb adc lret fsub mov imul inc pop lcall test mov sub movsb daa adcl in ja test xchg jae or inc ret xchg dec dec sub loope test inc xchg aam mov lods movsb test out mov (bad) ljmp mov jb ljmp adc and mov cmpsl cmp cwtl movsl sub mov sbb rcll xchg pushf aam fs sub cmp xor fs inc gs addr16 adc push inc divb mov or (bad) and (bad) je push jno test sahf pop cltd mov adc rcrl fstps lret aam hlt lret cmp addr16 bound mov lcall jmp mov das aaa dec jp inc ja push inc insl adc gs (bad) mov in (bad) gs adc inc jbe sbb and jbe inc data16 mov cmp and cmp data16 movsb xchg push lods adc test pushf fcomps mov xor gs inc cmp sub cmpsb xor mov push cs leave sub in sub mov in adc add mov enter insb mov outsl jb jns jns inc inc sub cmp mov or and push mov pop cltd pop lcall data16 hlt push xor dec pop push xor xor push push inc push insb (bad) push enter mov inc outsl dec int3 stos jo scas mov and adc pop mov and xchg cwtl xchg rorb or dec in sub mov scas inc pop push inc mov mov sahf dec sbb mov mov fisubr pop mov sbb dec rorl push mov sub sbb mov xchg rcrl dec or fs dec jo fwait push mov cmpsb mov jp cmpl inc mov js aam mov inc in push ret adc fsts adc rorl stos (bad) sub dec or aam ret dec xor (bad) stos mov movsl call xor call xor pushf cmp push adc lods dec out mov rcrb sbb inc or sbb push or inc mov xor sub cmp sub out cmpsb out cmpsb inc data16 fs ja (bad) xorl fisttpll fldenv arpl cmp in movsl (bad) mov push outsb addr16 inc sub sub dec sub xchg xor cmp test fs mov and adc xchg mov cmpsl xor mov sarl (bad) lds lods adc les fs bound mov fwait xor cltd fistpl dec fsts push sahf int3 test adc mov les aam and xor test mov xor push fs mov push push rorl pushf nop push bound mov cwtl (bad) fsubl sub and dec outsb bound jmp xor mov daa and or insl in sub dec add adc js int3 or les jno stos sbb jmp test jo movsb mov repz cmpl fldl pusha dec dec es cmp adc cwtl xchg (bad) and enter ret inc cmp cmp pop add call in js arpl rcll inc or pusha (bad) rol in lret inc test push ret movsb sbb sbb pushf int3 pop rcl xchg sbb mov or cmpsb daa sub sub ss inc cmp xor and movsl or (bad) in imul mov and and shlb jmp cmp pop push mov sbb lods dec shll int3 (bad) movsb pop dec push xor movsb sub (bad) fsubs aad mov dec inc ja insb jns ror mov lea dec ficoml add rolb inc test fisttpll shl jbe and ret mov xor les mov aam adc jp in dec or lods xchg scas dec sbb dec cs xchg cmp shlb cwtl hlt test inc xchg repz (bad) sub inc xor inc icebp xor mov cmpsb jb ja jbe adc sbb and xchg lods xor mov xchg stos xor cmp mov mov mov mov and mov cmpsl and sbb cmp mov mov xor mov and and pushf mov mov xor pushf sub and sub and xor cmp test mov and sub sub cmpsb stos sub test mov cmpsb sub mov mov mov mov movsb xor lcall xor mov fwait mov sbb test stos and mov mov sbb mov cmp mov xor and mov cmp xor xor mov mov sbb cmp xor sbb stos mov sub mov cmp stos mov and mov pushf and mov cmpsb and mov fwait cmp fwait cmp and mov sbb xchg movsb mov xchg mov mov cmp test stos sbb cmpsb mov mov mov and sbb test stos sbb sbb movsb mov cmpsb and cltd mov and lods and and sbb cmpsb cwtl test mov aaa mov cmpsb mov stos xor movsb mov cmpsl daa and mov sbb cmpsl mov test mov mov mov cmpsl test mov sbb sbb and movsb mov mov cmp cmpsl lods mov and cmp test sub cmp lods mov mov xor and mov adc mov xor sbb cmpsb cmp cmpsb mov sbb sub sub lods xor mov cmp mov sbb sub xor and es sub and mov sub mov mov cmpsb lods mov sbb sbb sbb mov mov mov and cmpsl mov mov daa sbb cmpsb mov cmp mov mov mov mov cmp mov pop mov cmpsl mov sub and xor sub test lcall mov ss mov lods stos mov and mov mov xor stos sub mov mov cmp adc mov mov and cmp and pushf and sub mov cltd cmp mov stos mov sbb movsl mov sbb and sbb xor mov xor sbb sub and mov mov (bad) lret (bad) cwtl fistpl pop push sbb dec dec dec aad fcoml push pop push cltd push lcall rcrb push or fcmovu mov pop int push cltd fcmovnbe push nop rorb or popf int pop (bad) or lcall je cmp lcall in sub mov scas xchg test loop inc bound arpl js push sub mov mov sub sub cmpsb stos sub test mov cmpsb sub mov mov mov mov movsb xor lcall xor mov fwait mov sbb test stos and mov mov sbb mov dec lods add or dec sub sub push push lods test imul or push push inc movsb xor out es and xchg mov inc addr16 daa xchg cmpsb ss push xor je adc adc test inc xor mov and pushf sbb pushf cltd adc scas or or mov arpl ss mov xchg mov mov arpl mov mov sub jnp leave mov aam push (bad) les xchg dec push xor cmp dec dec pop dec dec jne addr16 dec inc sbb mov cltd mov and sbb push adc fisub popa xor push mov outsb fdivp (bad) mov imul jne dec and lods cmp mov sbb cmpsl mov mov fcmovbe sbb or (bad) sahf movsb (bad) nop daa add inc add inc or sahf xchg mov mov mov push dec inc jne inc jbe sbb mov cltd lods mov fistpl push nop push int fisttpl pop mov int nop roll or jmp aaa push inc and sub sub lods lds pusha lock cmpsb loop inc jo dec push push fs xor push dec jns xor mov adc dec fcmovne dec adc mov in in imul adc fstl xchg adc into or sub dec jmp dec mov jmp sub dec insb int out xchg add movsl push push xchg xchg addr16 push cmp jp arpl sub lods adc xchg popa adc nop pushf repnz (bad) loopne (bad) imul sub (bad) mov fs pop push inc outsb xor cmp stos stos mov ucomiss mov push ret xor leave stos stos test xchg aad int push inc mov inc in test mov sub mov and ss addl jno mov adc adc pop rorl inc out inc xchg lret dec add inc xor mov jnp lea outsb jo sahf jb cmpsb mov push (bad) mov jnp sub xor sub leave sbb jmp inc outsl dec imul mov push or or cmp in and ljmp rclb xchg bnd sbb mov mov mov mov cmp mov mov mov popf or fisubl fcmovbe mov (bad) lods fmul mov inc jno xor gs and xchg cltd adc andl or xor fwait push shrb gs pop inc add lds movsl mov inc push lods sbb rol push rcr or cmpsb nop aaa ja xor push xor push push inc inc inc and cmpsl and mov popf leave inc lret scas repnz (bad) mov (bad) les mov enter mov mov mov mov dec imul ljmp out dec push call imul (bad) insl lea call lret or mov insb dec xchg call lods mov das dec call cs out imul je and and daa daa ja and push inc es adc pop arpl or rcr test mov fnstsw push lret loopne shlb mov mov into fcoml fidivl push mov das dec xor cmp adc cmpsb cli push pop sbb fsub inc leave popf or nop int gs cmpsb sub sub ret xor pop xchg xor mov scas inc sbb mov sub and pop rcll ficomp or push sbb sbb push fisttpl mov imul xchg jae test adc je push lret inc push pop inc xchg sbb and or inc xchg fcompl sbb mov ficompl out fs test xor sbbl or mov rorb or jmp xor push in sub daa sub es test jp and loope push popa adc push repz lcall aad loopne dec inc sub aaa xor les or mov adc xchg fadd fisubl adc sbb or into scas loop xchg xchg adc and mov data16 lods fs inc push imul push inc cmp addr16 stos inc ret sbb sub mov stos into test dec xor xor xor jno lods jb add and adc dec or inc js inc push inc xor push nop push fwait pop push fwait enter (bad) mov push inc bound cwtl (bad) enter and adc inc inc addr16 jns mov out insb lods stos push push and cmp lods sarl lods (bad) cltd xchg mov and lds inc inc mov cltd sub inc dec and loope shll test mov jmp js mov rorb jo pop pop dec insb pop push xor fsts jno mov fmull test xchg divb notl mov xchg mov aam rcrl pop mov in push (bad) inc xor cltd sbb xor sbb popa sbb dec mov test xor mov pop pop adc sbb or out dec xor adc (bad) and sub lods sbb int lds test xor lods mov push xchg sbb ret adc (bad) xor lds inc test mov dec push jbe adc mov test mov ss fs aam adc mov adc push push int rorl mov pop arpl ss xor sbb sbb (bad) xchg loopne mov cmpsl dec sbb cltd mov mov sbb cmp inc inc cmp gs test aam cwtl inc adc test jp push cmpl cmp leave and dec fs adc (bad) xor xor or aad mov cmpsb ret and or mov cmpsl sbb pop dec inc dec mov cmp mov mov xchg cmp data16 sbb push sub or pop cltd test xchg adc test xchg les push popf (bad) dec mov mov (bad) test jns pop xor (bad) loop inc les xor xor mov dec inc data16 push push out aaa mov aam pushf fsubp xor jp jb and adc test cmp adc in xor rcr sbb mov xchg test mov xor adc int or mov add rcrl add gs loope inc rcrl fisttpll in and leave lods inc loope lods popf xor add lea aad leave inc add (bad) mov mov pop inc add sub sbb add push loope loope fnstcw and popa lea xor push inc add sbb lea lea cmp push inc add fst adc leave int fstpl add add enter mov loope and lea imul cmp movsl add sub popa add adc test inc pop fsub cltd and cltd inc add pusha aad adc fsubrs cltd push aad inc add mov pop nop leave cmp add in gs int popa test mov cmp aad mov dec loopne roll leave in (bad) aad mov lods int test gs shr nop rcrl and popa mov xchg mov push int leave test fldl (bad) pop flds leave lods shrb add xchg popa mov add xor mov inc int add pushf in or xchg mov xchg lea dec adc mov mov dec gs sbb adc dec popf add pop sbb add dec aad fstl fldl aad xor add pop loope cmp fldl push adc lds loope fucom lds ror add xor mov sbb lods and loope add mov dec inc add pop mov xor push and add dec inc mov mov popf lea cmp cltd inc add fsubrl add fsubrs inc add lds mov leave sub and roll rcr lds or fmul loope jmp lods cwtl (bad) inc add loope lods lods fstpl lods aad adc add ror loope cmp lds fxam xchg imul aad test lods fadd inc shrl test xchg mov imul aad push cmp int and adc popf or roll loope and add in loope mov add xor mov mov int popa loope fstl test popa push pop loope lds mov aad xor fldl adc loope shll enter loopne inc push fldl (bad) test add xor in add lods movsl inc mov dec inc add push ret xor push sbb xchg pop fisttpll nop pop adc xchg xchg fcomps rclb rclb pop popf push adc rclb pop fwait xchg sahf fwait fwait aad dec rclb push adc push pop mov outsb imul or or cs push dec push or dec sub sub (bad) or out test es or stos dec stos dec call movsb mov adc ror mov ret jp mov mov jp ret sbb lcall xchg push inc call inc add movsb adc inc mull mov mov and mov rorb jb lret (bad) roll fsub add adc lea push inc push cmp push xor imul dec jne inc xor test mov popf sbb push int sbb inc or test mov or lods test les je daa xchg adc jne movsl adc sbb lret or imul rol or xchg leave pop mov sub fcom enter sub xchg pop jb jp fs dec inc push dec xor jno insl xor sub cmp push dec leave sub cs out sub mov mov sub jmp mov jb jb les mov pop inc cmp inc cmp aaa and xor adc and fimull mov (bad) mov mov insb arpl data16 push inc mov inc pushf xchg xor imul xor js dec push push inc sub movsb and cmpsb mov popf fimul dec push or mov sub and push adc fidivrl sub mov mov push dec xor inc sbb xchg xchg mov int3 scas pushf into fsubrs popf lret pop (bad) nop pushf xchg test data16 aam mov and daa sbb movsb sbb and nop int mov inc gs (bad) das or cmpsl inc test xchg mov jbe daa cmpsb adc addr16 jae xor daa mov lea fstpl push inc lods mov test or or mov movsb push mov (bad) stos jae dec sub leave fstl mov and xchg fdivs nop and xor sbb ret lods mov data16 in pop insl jo ret rcrl push dec mov mov push xchg push test lea int3 mov mov and lods adc push aam repnz mov inc xor cmp mov test movsl sub push dec xor inc inc xor mov push and inc sbb stos sbb mov mov dec dec lret adc cwtl lret push cmpsl xchg and sub inc call xor aaa popa inc xor xchg mov adc and inc sbb lcall and pushf lea sub inc jno sbb lods and mov fwait cmpsl test mov mov sbb mov mov cmp mov xor cmp cmpsl movsb cmpsl and cmp test cmp cmp sub movsb mov mov lds xor jne es ss inc push or jb rcrl cmp out mov xchg (bad) lret xor fs pop xor push and or int movsl popa sub mov daa add je jne inc addl inc add and ret or ret pop bound or (bad) xor fs xchg fcoms loopne mov ja adc fs mov lcall fwait mov gs ljmp pop inc inc inc xor sbb and sbb or rcrl push sbb xchg int push mov movsb xchg xor adc vunpcklpd outsb cmpsb pusha lret hlt (bad) mov jbe xor inc rorl inc outsb mov sub xor jb and adc lods lds fisubl insb enter dec ja bound inc xor mov xchg lea push push fst push push or mov dec fs inc addr16 adc push push rorb aam or push cltd rcll adc dec pop adc lock inc inc xor sub rcrl lds push daa daa and adc lcall pop fs cmp inc xor es and and dec adc rcr push or xchg ljmp es sub jne les push aam lret stos or jp lods and add push call mov roll dec push test fwait int pop cltd push fs mov add test lret mov insb (bad) test jo pushf cmpsb fs inc and inc push movsb xchg fmul dec fisttpll push sbb rclb sbb sbb push xor loop mov inc dec dec outsb xor pusha mov in int sbb das sub adc push ss cmp out enter xor loope pop mov push dec pop insl pop insb adc mov sub je xor mov jmp fxch xor mov xchg inc cltd nop leave loope inc fiadd je mov mov xor mov sub xor movsl push movsl xchg pop popa sbb mov fwait xchg (bad) aam rorl jmp out lret mov jp mov push push push push xchg dec lods mov imul push aaa cmp pop fwait into push xchg fiaddl arpl adc (bad) out xchg mov (bad) daa adc and int mov sbb mov int bound and mov out mov (bad) hlt mov gs inc cmp lods sub sub cmp int3 out enter inc jp push xor mov aam dec (bad) fmul dec test inc cmp jb or dec mov push dec dec pushf (bad) xchg enter mov mov push scas enter mov data16 xlat add adc cmc test cwtl test sub das inc in push ljmp imul jmp sbb aam mov xchg in and xor mov rcr dec pop sbb int enter cltd adc popa and sub loope test frstor xor nop dec outsl inc ss push dec int3 in jae addr16 adc cmp mov fwait enter mov adc movsb xchg pop push pop dec push push fstpl push push sbb adc inc jae dec inc sub mov les cwtl stos pushf xor adc mov dec daa or enter inc inc cltd call popa and mov cmpsb ret into mov push outsb dec inc inc push xor sbb rorb cmpsb mov push mov loopne rol movsl mov inc or fs lods out xchg int3 scas ret xchg lret je loop xor push push pop adc xchg dec or xor es repz mov cmp lea lret mov in call or int3 in mov outsl jbe push cltd popf pop cmp or push xor fs dec xor jp mov and push cltd (bad) or xchg out xchg aam (bad) or sbb lods xor xor or push adc or popf or xchg push sbb mov sbb aam aad int ficom pop sbb dec rorl push adc pop nop fstp cwtl popf rcl push sbb pop mov pop pop pop xchg ficom into adc xchg aad pop adc pushf pop pop rclb fwait sbb pop xchg pop pop dec adc dec pop push dec xchg fwait sbb push push dec adc sbb pop or adc fstps cwtl rcrb sbb fstl pop (bad) push push nop pop rcl adc rcrb pop cltd or push pop push sbb rorb push int3 pop fistl xchg aad or sbb push xchg dec xchg dec xchg fstps nop ficoml push aad push rcll pop adc pop xchg push (bad) push lcall popf adc int or xchg rclb sbb pop mov push pop adc xchg mov nop push sbb adc adc cltd adc push mov adc pop adc pop pop nop push aad aad adc fst push pop lcall adc push push fisttpll int rorb xchg aam rcrb sbb fsts aam nop push nop pushf nop push push pushf adc rclb pushf sbb or fcompl cltd pop push rclb adc adc sbb sbb lcall rclb fcomps pop push or rclb xchg sahf dec int ror fwait adc xchg adc nop dec rcll xchg xchg pop adc mov sbb pop push push nop push popf fistpl fwait sbb push xchg xchg xchg push adc adc rorl pop push fst fcomps push fcomps sbb mov adc rcrl fistpl xchg push push aam popf rcl push fcmovnu push push push pop ficomp sbb push sbb fst push pop pop pop xchg push lea adc fst fstps xchg popf sbb rcll fcompl ficomp fcompl xchg cltd rclb dec adc rcrl fcmovu into or xchg xchg cwtl pop rorb pushf adc push adc (bad) xchg aam adc pop fwait xchg push cwtl pop push pop fstl adc fwait push dec sbb rcrl xchg push xchg (bad) (bad) popf rclb ficompl fwait fwait xchg push rorb rcrb push sbb push lcall popf push dec rclb sbb push mov int ficoml rcrb dec adc mov sbb push aam or xchg sbb sbb xchg adc sbb push mov pop sbb rclb push pop adc pop pop xchg adc push pop xchg ror rcrl sahf adc adc adc push push push ficomp cwtl fwait adc push fistl adc adc fmull rclb sbb pop pop adc rcr xchg rorl sbb rcr fistl fwait push pop push mov adc pop push mov pop sahf push rcll push sbb lcall push fsts push adc fisttpl push sbb xchg push pop (bad) mov push push pop adc fwait push mov lea mov sbb fcompl aad ficom sbb rcll ficomp sbb fcom push pop pop pop adc or orb (bad) fisttpll int push sbb mov sbb aam aad int ficom pop sbb dec rorl push adc pop nop fstp cwtl popf rcl push sbb pop mov pop pop pop xchg ficom into adc xchg aad pop adc pushf pop push dec call scas lret sub (bad) cmpsb lods sub dec dec (bad) in test sub mov push mov movl push mov out push push xchg xchg testl and je inc pop je (bad) push out and xchg adc movsb xchg adc ss test pop les xchg and sbb mov mov (bad) xchg loop xchg cmpsb into ficompl cwtl mov mov outsb nop bound (bad) in bound test insb dec jbe xor inc inc arpl dec ss dec jp inc push inc inc cmp inc dec jo dec imul pop push jp inc sub xor lods sbb sub popf (bad) ficoml int3 ror lret rorb ljmp call mov sub daa and adc add push cmc inc repz cmp mov mov push jo gs inc sbb sub xor rorl (bad) sub dec cmpsb mull notb xchg push inc (bad) hlt hlt push push ror mov bound xor sbb and sub mov mov lea call (bad) lea in (bad) sub and ss push data16 daa push adc daa inc and and movsb adc les mov cmpsb sbb aam popf rcl push fcmovnu push push push pop ficomp sbb push call call leave or or ss movsl daa inc arpl je testl push mov cmpsb je push adcl xchg je xor mov fs je adc addr16 pop mov inc push xchg push je adc cmpsb in popw adc mov les retw xchg inc hlt xor jbe adc and arpl cmpsl je fs out in je shll gs adc fldcw xor (bad) inc lods add cmp or shl shrl mov fstl call dec push test pop and inc arpl sub nop int or leave lds (bad) pushf les enter adc in (bad) dec iret or movsl xor xchg ja fs je lds adc (bad) lds inc add mov call ret sub sbb rcr int3 fidivl mov push rcll push adc scas call inc out call ss ss inc and xchg addl push push jne bound inc push (bad) xchg lret or mov sbb adc xchg mov lret outsb hlt xchg jbe dec dec jns ja sbb mov cmp mov pushf push push pop pop rorb mov in inc and daa je xchg pop shrl sub cwtl mov mov mov hlt cmpsb nop xchg rorb dec dec push aaa imul insl ss inc inc jo push inc and and mov mov mov dec dec sub push xchg xchg andl pushf rcll mov insb sub push insb dec inc and aaa sub xor adc (bad) out mov fs mov and adc mov sbb jmp adc jo in out mov cmp cmp popf pop adc push fstl push ficomp lea (bad) sub push out push out sub outsl insb adc or aad jmp push lods test pop adc cltd mov inc xor inc push addr16 inc and cmpsl sub fwait (bad) aam cwtl sub xor ja sub pop cmp ja ja pop inc inc jo adc push lods repnz outsb shr test mov inc inc pop popa push xor jp inc insl and inc add lds mov leave call xchg adc push rol sbbl push sbb int3 mov fidiv push sbb rcll or inc int3 mov in xor and or loopne test int3 les xor xchg (bad) sbb push push out xchg push adc jae jnp andl and xchg push xchg enter lret outsb gs popa imul jp and (bad) adc mov xchg or test and mov mov mov insl mov fistpl push dec dec lods dec data16 inc dec dec mov test aam xchg mov pop push add out inc jbe addl mov sbb sub adc mov or mov insb lods sub ja sub mov mov dec rorl dec enter dec out inc inc arpl stos and inc lods and push pop inc movsl xor xchg jns dec sub lcall mov test sbb and sbb mov popf adc fiaddl gs cmp inc js bound sub bound cmp popf rcr rclb fwait (bad) into push push or mov xor mov adc adc repnz rorb jne jbe call addr16 adc mov xchg dec les dec jno aad adc mov ret xchg pusha inc push adc xor mov push mov jbe cmp mov inc ret jae mov and mov inc push lea jb lcall fldl inc pop inc and stos mov push int es dec xchg or sub push ljmpw loop,pn push and xchg adc aaa cmpsb mov push test in jne xor inc and mov ss cmp ljmp sbb or xor movsb adc adc int3 sub imul push adc dec dec xchg insb je lcall lods cmpsb mov mov andl ss cmpl push xchg aam (bad) mov xor fwait sbb jae jb adc lea ret push stos lcall stos movsb mov and or adc pop adc dec or pop push and jnp jno aad pop sbb enter iret xor stos mov (bad) dec dec push ret mov insb call mov jne adc cmpsl mov dec xchg popa loope aad test mov insb (bad) ficom (bad) in lcall aam into mov sahf hlt test insb out test cmpsb mov movsb (bad) (bad) lock test (bad) test push nop test test into mov int3 test (bad) fcoms pusha repnz out (bad) aam fsubrs bnd ror stos out mov loop into test mov insb test into (bad) lcall movsb pop (bad) out test push mov fmul push xchg (bad) (bad) rclb outsb call aam in fisubr xchg mov push (bad) fsubl xchg loop mov les enter hlt mov into (bad) in out xchg ljmp mov aam cwtl stos out nop fsubr xchg in mov jo repnz xchg out stos lret insb (bad) pusha (bad) mov pusha (bad) insb fsubp (bad) (bad) ljmp in fsubrl repnz (bad) mov nop test mov push xchg outsb mov xchg fcoms test scas test pop mov xchg rolb mov push pushf fdivs (bad) (bad) mov scas into xchg mov (bad) fmull mov scas lods loopne lods mov (bad) movsb (bad) hlt loop aam mov mov ljmp test shlb call into test lcall jb test loop mov mov (bad) cwtl (bad) repnz xchg fsubrp test lcall cwtl (bad) (bad) in rcrb int3 xchg out test nop pop mov fdivs repnz xchg push mov stos hlt pop xchg fdiv in into (bad) (bad) enter stos int3 push (bad) test mov int3 loop mov xchg insb ljmp (bad) (bad) test nop mov pushf into mov cmpsb (bad) data16 scas fmulp test mov aam shlb mov jo xchg ljmp lretw pusha xchg test lcall mov fmul sahf jb mov push cmpsb fsubp jb lret (bad) lcall fcomp lcall nop ret shlb xchg data16 test fsubl push out test int3 stos insb int3 (bad) in shr mov xchg rol (bad) (bad) mov mov xchg fidivl fcmovb push loopne out xchg jb (bad) enter ljmp fidivl nop ret (bad) xchg call out call pop lret in cmpsb push xchg data16 lods loop into mov movsb loopne hlt scas mov fs nop lcall aam shl (bad) out loop nop out test in xchg mov cmpsb out mov pop scas scas insb mov xchg cmpsb stos aam insb test mov mov push scas int3 mov (bad) out xchg mov les int3 ret mov xchg push xchg fs cwtl nop aam mov cmpsb jo ljmp test loop out xchg aam nop (bad) out push mov (bad) mov call lret mov out mov mov nop ret xchg out test insb repnz (bad) enter test ljmp mov in test xchg lret bnd (bad) lock int3 pusha mov xchg nop fs (bad) (bad) mov jo ficoml test call fs out mov ljmp aam out xchg insb (bad) fisubr mov xchg jo push lock xchg (bad) mov (bad) in test (bad) data16 xchg xchg data16 cwtl test into test out xchg mov les fmul (bad) out movsb fsubp data16 enter into (bad) fidiv lock scas aam test in (bad) ret rorb cwtl into lods pop into (bad) out lret lret sahf lret fs ret outsb mov ret mov enter shlb mov mov ret mov stos lcall data16 mov bound mov stos push scas (bad) enter mov mov xchg xchg (bad) xchg (bad) test scas mov pusha in fcompl in int3 out xchg mov les (bad) into test repnz pushf sahf call int3 call push mov pusha cwtl loopne test sahf fisub out mov mov pusha rcr sahf loopne ret mov lret aam (bad) enter rcr lcall (bad) xchg mov nop fmulp out mov ror repnz push out (bad) nop repnz xchg mov cmp sbb push dec push xchg xchg push ficom xchg adc mov push rorl xchg nop push pop adc nop xchg push lea xchg xchg adc lea adc xchg adc rcrl adc pop push aad push pop pop fst pop xchg pop adc push pop pop rcrb push lea push cltd rorl or sub adc aaa jbe xchg push in divb je fs je xchg inc xchg xchg xchg mov arpl ja ss test ja aam xor cmpsb addr16 movsb mov xor mov adc lcall cmp or xchg cmp jp rcl sub mov fwait jb test cmp and fwait xchg inc arpl pop ret mov or xchg imul rol fnstcw dec inc adc cmp mov gs and popa fisttpll dec mov cmp roll leave and xor mov cltd add sub pop popf and in mov loope movsl fisttpll mov pop pop jmp dec vpextrw lds lcall mov stos shlb call into test lcall jb test loop mov mov (bad) cwtl (bad) mov outsl ja cmp das adc inc push lods rcrb int3 xchg out test nop pop mov fdivs repnz xchg push inc dec inc outsb push jp dec insb js addr16 inc fs aaa push data16 xor imul dec pop push inc lods xchg cltd pushf pop push push push or dec popf pop push dec rorb lea xchg xchg adc rorl fcmovne ficom push adc sub or repz push aam add stos cmp movsl sbb xchg aad push pop popf sbb pop fistpl dec addr16 and cs inc mov push mov arpl fcomps fnop lcall inc inc pop dec arpl imul inc push ja xor test sbb int3 dec imul out push jecxz lds test adc imul test cwtl insl jns inc insl jb ja outsb sub insl cmp popa dec ja dec je and add xchg mov (bad) inc dec ja arpl push push jno and test lods sub dec ret nop lcall cmp cmp popf pushf cltd push int3 xchg mov int3 xchg fst sbb xchg adc in xor fs in je inc inc cmpl lods rcll pop cltd gs sbb mov mov popa jo push outsb jns sbb repz sbb cwtl mov and or dec xchg adc pop rorb dec out es call pop jae fs sub sbb push push dec sbb cmpsb test push dec in xor sub and mov pushf and pop sbb push adc dec rorl enter enter test xor xchg jae cmpsb push adc xchg test xor lret dec outsl inc cmp dec das ja ss jae jp sub imul jne xor xchg push fwait mov dec pusha shlb jo dec cmp js dec inc inc push outsb popa aaa bound jb push ja xor dec xor adc sub xor mov or nop repnz movsb fsubp xchg dec pop insb addr16 outsl pop push dec inc js push push adc and dec (bad) add ret inc and mov sub fcoms dec (bad) mov (bad) sbb lcall sub pop jno pop pop rclb test (bad) insb mov xor lds popa pop arpl dec sub mov enter stos add and xorl in inc xor lcall repnz pushf sahf mov je push inc inc xor ja inc dec jb inc inc xor inc dec inc xor dec adc and shll sub xor mov push leave and xor pop sbb or (bad) nop mov xor inc bound ret push xchg adc popf roll stos sub imul sbb xchg das inc inc insb xor jns dec pop inc fs jp dec jbe dec dec aaa inc sbb mov ficomp fcoms pop movsb out lods inc mov je mov mov andl pop or mov mov push lods push sub into insb out into enter xor jbe ret push dec sbb push rclb sub mov leave xor sbb dec inc repnz ss and mov push lcall testl pop and in xor lods (bad) outsb scas aam stos (bad) pushf push movsb mov loop xchg jb and xorl fmuls pop aad dec into test lret outsb or jbe hlt out mov arpl cwtl mov (bad) dec out int3 lods imul inc or dec scas jmp or les inc dec and mov sbb in adc sbb dec pop push call mov arpl and and jb xchg aam jb and and cmp sbb push cwtl pop push push cltd adc mov push dec shrl mov adc test aad dec test fcmovb aam mov shrb arpl sub fwait mov adc rorl rorl inc out or movsb inc aaa inc xchg push dec mov mov sub push adc outsb mov aaa insb xor push sbb in xor pushf mov push add cmp adc mov or jno stos bound xor mov call jb xor mov mov sbb shrl jmp adc out orl cmp mov movsl xor loopne mov lods loopne mov dec arpl pop push cs outsb stos add je mov cmp fwait cltd mov sbb cltd test and mov lock les push jp jnp push sbb cmp or cwtl loope adc xor insl inc sbb sub and xchg mov mov jae sbbl pop and jae inc adc xchg and sub (bad) xchg sub mov mov es ret lcall cmpl sahf mov lock inc je push xor outsl pop xor and popa imul popf xchg or rcrl daa push in adc out scas xchg fadd lahf inc sub and mov mov arpl sbb cmp (bad) bound mov jb bound inc inc jo pop xor and sarb push mov les adc and ret les xchg pop cltd loope gs push and ror xchg xchg or (bad) (bad) enter movsl test and xchg cmp lcall into in jbe aaa gs imul sbb push fwait adc es sbb enter cmpsl adc fadds and and sbb mov stos inc adc dec adc jl test sub mov loop pop enter out mov jp xor rcr into sub pop push adc fidivl fisubl cmp cmp inc sub sbb popf push pop (bad) push sbb xchg xchg inc ret mov dec push xchg xchg test cmpsl push and je cmpsb mov inc inc test xchg and pop xor fs and adc je daa pop jne mov rcll mov pop xor (bad) daa adc xorl push jbe add divb notb and xchg cmpsb arpl xor fs es xchg movsl inc add xor xor xor es push inc adc adc inc and and ss inc gs xchg repz je add in arpl push inc and adc es inc test daa jae je xchg cmpsb and xchg inc fs je cmpsl test xchg movsb in fs jbe gs and inc notb arpl daa xchg add out addr16 aaa xchg ss push xchg adc jbe mov and jne inc push es aaa ja arpl inc je xchg ss movsl inc fs aaa xchg adc adc movsb inc adc push inc xor xchg inc adc cmc mov inc push div adc xchg adc xchg (bad) notl push push daa push pop inc and xor test xchg xchg out ss jbe cmc xchg adc inc and rcll xor adc push pop add xchg (bad) aaa cmpsb in ss out xchg addr16 xchg hlt inc add es daa push xchg and jbe inc xchg xor inc es repnz push adc adc xchg data16 mov add adc inc add push push je adc aaa add xchg and mov pop adc xor es je jbe movsb divl gs xchg aam repz roll inc jbe xchg in addl data16 es and xchg mull cmpsl je xchg inc addr16 push movsb addl bound je data16 movsb je push inc xchg (bad) (bad) xor notl xchg les pop inc test adc xlat push xchg xor xchg xchg je movsb (bad) cmpsb xor xchg xchg xchg adc xchg pop daa xchg push inc ss fs jbe mov and les je jbe inc test ja je pop adc ret data16 je xchg xor xchg push out adc lds push push (bad) les push and arpl xchg cmc movsl movsb adc mov inc repz jb inc xchg jne test inc jne inc push je and adc ret xor test xchg adc push jae xchg xchg adc les add aad adc push jne mov inc inc adc aaa xchg and and inc in movsb adc inc adc adc (bad) ss je fs push adc and je aaa cmpsl xor xchg mov pop add mov inc xor inc xor ja adc aam xchg ss adc arpl adc adc xchg xchg adc xor mov xchg inc gs and mov inc ja and xchg hlt inc data16 xchg test inc adc aaa push push je push push xor es push push and ss jbe inc adc test mull pop je repz push xchg je inc xchg mov jmp call mov dec sub data16 cs add jmp insl sub data16 test sub or in sub dec or push outsl dec test dec in das dec (bad) in mov sub sub leave dec int3 mov or sub dec push lods test sub dec int3 cmpsb mov dec mov sub or inc or insl iret cs (bad) and add in push mov sub dec in test or sub lret lcall sahf insb (bad) xchg callw ret cmp sbb sub pushf mov mov xor sub es dec mov in movsl outsb into inc imul int3 dec outsb out insb (bad) outsb mov outsl cs push dec sub dec mov sbb pop jae mov mov shlb mov mov sbb and sbb jnp push push and jnp or inc jnp jns dec insb pop ljmp pusha call out xchg mov mov fdiv enterw cltd and and movsl sbb mov mov mov mov cmp aaa xor mov and mov movsb cltd xor mov sub xchg fsts xor xchg mov addr16 push or ljmp out stos lods test call lret adc mov ret jns jae adc adc inc mov (bad) xchg or pop lret push jns imul jns inc dec cmp inc push cmp xor jb dec and mov in bound in hlt data16 xchg nop jo mov mov adc cmp lods cltd mov mov mov sub sub insl out sub mov lods lret scas cmpsl push leave (bad) dec dec xor xor in popa mov jns push arpl jbe inc inc push dec dec push dec fstps fcompl push adc fcmovnu rcr dec (bad) mov pop sbb popf push (bad) cltd push pop pop adc pop mov (bad) xchg nop push or dec or dec aad aad sbb call mov lcall dec lods dec sbb add loope pop sarl inc fs dec inc ss push inc inc gs lcall adc fstpl sbb push movsb adc inc adc ss ss je fs push and imul inc stos lret pop mov orl pushf enter scas test test mov mov mov mov (bad) test fs inc xchg and add and data16 outsl inc xchg push adc mov fcoms hlt inc data16 xchg mov mov fwait rorl mov fiaddl rolb hlt mov xchg lods cs or mov sbb cltd xchg or jo aam (bad) and inc and cmp or dec lret xor xor inc call xor and ljmp sub in outsb call scas or dec scas push xor and sub sub inc test insb gs jmp call bound adc fdivs mov es sub inc call sub adc add data16 and movsb sub out repz inc movsb xor sbb rcll aad jmp je xor aaa adc rcrl or push mov movsb sub and inc rcrl mov sahf aam (bad) lock push mov fs cmp add inc cwtl leave mov imul mov push das sub imul push arpl pop cmp pushf loop fiadd cmp push dec sub jp and mov or sahf out out cmpsb push repnz xchg pushf (bad) in dec xchg push xchg xchg adc fnop cwtl (bad) sbb sbb pop rcr fistpl sbb pop les es xlat jno lods les mov stos lods xor mov mov mov or leave xchg dec (bad) adc and inc in rcll adc or mov cmp xor test mov and test sub and dec mov mov iret sub scas call es sub mov out data16 ja addr16 inc adc jae dec jns insb imul mov mov (bad) xchg sahf (bad) aam into (bad) stos mov lcall into (bad) cwtl push ret push jns in xor int lds push inc or adc popf add cmp xchg js adc push and sub mov xchg sbb adc call pushf hlt mov xchg mov cmpsl mov mov xor daa or inc xchg or pop pop rclb cmp mov movsb mov adc adc add cmp push inc adc pop adc adc test xchg xor and mov push in insb das imul ret mov scas movsb nop jb int3 (bad) (bad) mov enter and mov cltd out bound push push mov dec mov cmp aad inc outsb into (bad) cmc xor or jp dec outsb jb ja mov mov push sbb push push adc fsubl dec sub int leave fstl cmp fs xor inc inc bound push dec aaa dec outsb jno adc adc sub fstps test int3 inc data16 and lahf rolb pop je bound mov and roll lret inc out sub call fwait adc mov adc xchg or jb stos xor dec adc pusha mov adc xchg mov push push aaa dec insb inc adc mov movsb cmpsb fisubl daa ss mov fldl mov (bad) aam mov mov cltd int push mov data16 xor pop xor or push mov adc test test cmp xor (bad) shrb xchg lcall add mov dec in inc push adc lea inc ret stos mov dec jo dec push inc popa outsl push adc sbb enter xchg xchg test or mov push cmpsb out test stos xor mov mov loop xor mov ljmp loopne lods in (bad) (bad) test mov movsb mov mov xor gs and mov imul dec ret pop shll imul xchg lcall jp or or sarl or cmp mov arpl jb and xchg or orl lret stos sub mov and or ret mov ret or sbb mov xor cmp dec mov pop sub rol and lcall stos jp pop mov or imul (bad) or lret stos xchg dec sub stos or and lret adc or push stos lcall mov arpl arpl or dec mov lcall dec ror cmp mov or jns push xor jae and cmp adc jnp mov xor lret pop xorl push jae mov stos or dec pop pop sbb jb mov or rcrb cmp sbb or lcall jp or and mov stos adc xor xor mov cltd lcall bound or or stos pop cltd ret mov arpl stos jp sbb jp pop mov cmp sub mov or xchg stos sbb bound sub sbb pop lret xchg mov adc mov push adc xor sarb (bad) jno ror mov mov inc inc stos or or lcall or ret xor mov or sub mov pop or rcrl cltd ret mov imul lret sub xchg push push mov ret stos or sub mov jp sbb inc stos fwait adc or rcrl sbb ret sub ret sbb push shlb or adc mov sub mov or and sbb stos or mov lcall ret popa stos sub xchg or or pop mov adc push sub dec ret leave jns lcall mov push (bad) xchg xor adc or inc cmp adc mov xor mov jae xchg lret mov ret cmp ret lret lret jnp lret xor cmp or cmp or xchg cmpl imul or or mov ret ret mov sub stos mov jp or sbb xchg sbbl inc mov mov or jb mov and adc and ret cmp cmp xor adc dec inc jns mov adc or lcall mov mov or or jae dec or lret mov subl mov jae sbb jns lret lcall stos jno mov sbb push bound mov xor mov mov pop jb pop xor or push andl fwait cmp or lret push jb xchg imul push sub leave mov adc adc mov mov inc mov lcall pop subl pop pop push xor orl cmp sub or cmp pop or jb adc mov cmp sub cmp push cmp jae ret rcrl cmp push jp cltd pop jns push test lret xchg adc sbb adc mov mov pop mov push adc xchg and mov xor mov ret and lret or dec mov lret push sbb mov mov sbb popa xchg pop mov dec stos stos cmp mov arpl sbb and sbb mov stos pop push mov stos sbb mov cmpl mov (bad) jae cmp lcall sbb ret xchg orl mov jns xchg cmp and mov or sub ret mov ret ret push mov fwait cmp lret (bad) or imul jae adc and xchg or push push stos cmp imul dec xor popa (bad) or ret imul dec leave jnp cmp mov cmp ret or mov mov mov mov xor pop xor mov (bad) xor mov imul jecxz,pn xchg adc push push push sbb ficomp rclb adc aad push push dec adc push adc adc xchg sbb cltd xchg (bad) fcoms dec out push insb in mov outsb lods call sub dec sub pop pop push mov adc adc and or ret mov ret or sbb mov xor sub xchg sub enter test fimul (bad) lcall (bad) sahf mov cwtl ljmp (bad) xchg (bad) jb (bad) (bad) mov push test fs fs (bad) cwtl in call out lcall test sahf ret nop xchg (bad) xchg push xchg mov mov cmpsb bound inc data16 inc dec jo push inc dec data16 inc bound mov and stos and and sbb ror lret fstl outsb inc sub test mov cmp mov push stos les flds sub cltd movsl mov push or cs int3 mov mov xchg add mov stos jp sbb jp pop mov cmp sub mov and adc sbb (bad) stos xchg cwtl fcoms inc push adc cmp sbb popf push push adc lea sahf push rorl es push lods imul xchg push xor cmpsb push jecxz je mov pop lret sbb dec push jp mov pop and (bad) int3 loope loope mov dec cmp inc cmp inc sub lods and lds call ss push xor adc xchg dec shrl jo mov hlt mov jo in (bad) out test pop lds push jbe push push push dec inc inc and lods sbb outsb into insb dec cs dec cmpsb lret (bad) int or and cs xchg sub dec (bad) or dec sub or sub data16 xor inc cmc xchg xchg jae xchg lret mov ret cmp ret lret lret js lcall out or sub add test ja mov dec int aad jmp in call mov pushf and and or scas sub ljmp (bad) aaa daa add xor data16 andl xor mov jb mov and adc and dec in lods popf sbb lods dec add ja cmp mov cmp pop xchg data16 jo ss sbb stos and test mov mov lods mov sub sbb adc adc fistl xchg pop rorb pop fsts xchg adc dec enter push or dec or mov mov insb out imul call sub dec scas call or es call sub mov xchg hlt and inc mov lea add or inc lds fstpl and test out mov (bad) movsb insl xor outsb push inc push aaa dec dec pop aaa xor inc gs inc inc jno jns imul outsb outsl cmp inc sub pop test xchg xchg xchg loop push dec xor xor xor mov movsl and mov mov mov fs push push push daa adc jae mov lods stos xor pop dec pop push pop push push (bad) dec or aam sbb rcr popf xchg or fisttpll ror fstl adc push mov push aad nop pop xchg sbb roll dec test mov push xor xor mov cmp jbe push sbb ret xchg sbb cltd rorl in dec in mov adc mov xchg mov lea adc loope cmp in movsb mov repnz xchg mov xor bound xor cwtl cwtl push roll insl dec inc test sub daa push daa and mov les ret imul dec leave jnp and popa sbb or call or adc out nop mov mov or push push (bad) xchg xchg int xchg pop int adc sub push sub sub out push outsb or or or cvtpi2ps xchg dec (bad) sub cmpsl or scas in push out push or sub test dec enter das sub sub dec data16 sub mov mov call mov dec jmp or sub dec test dec dec (bad) dec mov mov in leave or dec iret dec push cmpsl das sub test stos sub push sub test dec inc or or or dec (bad) scas push insb mov imul sub or call sub outsb inc call (bad) dec push dec test call test es insb call dec or test imul sub lods cs dec or sub sub es sub scas dec push test push call test call inc call call daa or xchg call pop or mov dec test sub imul (bad) or stos dec stos dec outsl pop or (bad) test lret dec enter add cmpsb out (bad) leave in into lds lods stos inc outsb pop or mov out sub sub or sub dec (bad) dec enter dec int3 call (bad) or cmpsb stos inc or sub ljmp push sub test push xchg out or imul lods dec out out imul in stos or sub dec jmp dec (bad) sub or sub stos sub imul or push dec dec sub lea or inc mov call sub insl lret inc in or sub (bad) cmpsb (bad) mov sub mov in leave in dec jmp push mov mov sub out sub jmp test mov es int3 sub int (bad) mov ljmp data16 xchg (bad) mov or dec insb and dec dec cs mov or mov xchg lods test inc sub (bad) (bad) mov jmp (bad) lds imul dec sub dec in lods dec enter enter int3 jmp push mov dec test cmovge sub test lea dec dec imul jmp or gs outsl inc outsl dec push outsb in stos sub mov sub dec call jmp or test call sub mov or lea call sub inc dec sub dec lods (bad) in sub push dec push call inc xchg outsb lret call or mov xchg or (bad) sub push mov sub jmp imul ljmp cmpsb sub lods dec jmp push or enter or sub sub out push cs sub inc cmpsb sub sub xchg out sub sub sub test dec addr16 in daa pop sub lods push inc insb outsl dec int out in push (bad) jmp in push push sub in dec mov dec or insl test mov call into lods lods call sub es into into in imul or push dec call dec enter dec dec in sub in in sub scas call dec (bad) enter dec or out pop sub sub dec ljmp lods call inc cs dec mov jmp mov or mov outsl inc in (bad) sub out sub stos out or push data16 enter dec push dec or ljmp das sub test sub cmpsb dec dec mov sub dec ljmp or out or dec es dec sub jmp in inc push enterw sub sub insb into ljmp sub imul es sub test or sub call out call lret out push lods mov sub sub jmp lods es scas imul out in dec out mov out jmp call call imul push or insl dec or dec ljmp scas (bad) int sub or lea data16 call xchg sub push inc es mov int in call imul lods call call or int sub mov scas or sub dec lret insl lea outsb mov call or insl sub sub leave (bad) (bad) or call jmp lea in or imul scas dec inc sub push call xchg lret lret or scas sub mov outsb lods or dec mov push int mov mov imul push dec inc in push xchg mov sub dec enter or dec call lods in ljmp stos dec push cmpsb imul (bad) or sub iret cs daa or dec mov dec or out sub into dec dec int lods dec inc push push dec dec mov movsl outsb into call sub cmpsb sub or dec insl (bad) or or inc in sub dec dec jmp dec push out imul sub sub lret or int3 sub sub out inc out xchg sub dec pop or imul leave mov or dec stos or or imul cs dec sub mov sub sub dec call dec xchg mov mov test sub sub or es movsl jmp lods jmpw addr16 ljmp dec iret sub das sub enter or sub or or int3 xchg insl push cs sub sub int stos mov out lret test push dec sub push sub sub enter test push call into push sub sub sub sub int3 in dec lods dec sub insb leave push sub mov dec push or or scas imul dec scas sub or outsb or insl dec sub in scas sub (bad) sub sub lods mov imul or cs mov push enter das cs sub in imul stos das or mov inc sub das or mov push call int3 sub sub enter movb or dec (bad) jmp stos dec scas dec sub dec test call outsb movl call jmp push mov stos ljmp stos cs imul mov dec imul stos insb outsb call in sub mov cs jmp stos sub sub out insl or or test dec out or xchg or sub mov call or (bad) dec outsl or mov lea scas call dec lods dec lret call in mov mov xchg in (bad) sub int3 stos vmovaps (bad) or dec dec int3 call imul call imul call dec lods data16 push dec jmp sub sub sub outsb lods mov int inc out call es scas xchg inc push insl xchg dec (bad) test call cmpsb dec rcrb cltd sbb pop xchg lea fcoml or pop sbb xchg mov dec dec sbb fimul dec sub dec enter xchg testl xor mov mov or pop push cmp mov push and sub sub and xchg pop mov test les mov outsb int3 nop lods fs movb repnz lret test push xchg dec gs bound push inc insl xor aaa bound inc sbb mov mov and push (bad) adc call sub outsb inc ljmp inc cmpsb push inc movsb push adc push xchg jae push push adc je inc xchg and test (bad) roll adc imul rol lret adcl push lret mov cmp or roll arpl enter pop xchg push das inc push aaa addr16 fs inc cmp aaa das inc push xor inc pop mov daa mov lcall sbb push inc stos dec stos dec outsl pop or (bad) mov xor xor lcall fstp fnstcw adc lret loopne mov ret jae jno dec push xor inc sub and daa and pop ror sub stos inc or and xchg jne xchg push xor xchg lret inc sub xchg push vpsraw (bad) fcmovb sahf out fs push mov dec imul jp gs inc xor sbb push adc push or sub or es les xchg mov cmp or dec xchg sbb mov lcall mov inc or jnp jnp cmp int3 sbb mov gs out sub xor mov pop fstl test cmp pop pop popa xor enter cwtl out rolb xchg (bad) xchg cmpsb ret out (bad) test loopne push ljmp jb mov cmpsb scas insb push shlb xchg inc pop inc dec inc inc inc inc push bound jno push inc dec aaa xor stos cmp xor movsl mov cmpsb and imul jmp or gs outsl inc outsl inc dec ja and mov sbb out mov (bad) ficoml pusha and pop xchg sbb add dec insb call sub inc dec sub xchg adc jbe stos lcall lret cmp mov jno sub sub (bad) inc sbb dec jp mov mov or sbb cmp sbb xchg jb jb or mov adc xchg sub in roll adc outsb insb loopne out call push xor inc popa and dec cli sub loope movsb loopne or cmp jmp in push push movsl push jbe (bad) aaa xchg fwait dec mov or or jp mov sub imul sub aad (bad) lods and fadd adc lock (bad) out nop mov and xor fwait mov mov and (bad) xchg loopne outsb jo jb int3 xchg mov jne push test jp jp jno mov mov xchg repnz call add mov pushf xchg pop loope int3 xchg jmp enter pop xchg lret lret lret push arpl sub leave or xor (bad) lock stos mov outsl xor dec push aaa push mov mov or in or add mov adc frstor les dec inc addr16 dec push js inc rorl mov outsb push insb pop pop cmp adc mov insb into loopne fmuls dec gs dec je stos or adc sub sbb adc adc repnz out lcall outsb aaa inc jns outsb dec dec dec inc and mov xor dec cltd fistpl lcall out lea inc jb inc (bad) cmc xchg xchg adcl or jae jnp sbb xchg leave or scas mov mov nop and fs push dec cmp jb test lods scas call inc and mov mov mov call out ss dec cmp inc ss mov and sub pop pop nop mov into adc xchg lret xchg movsl xor sbb shrl jmp or int mov push and mov sub or mov outsl push inc ja cmp jp xchg adc aam loop pop and lcall push (bad) es xor cltd es cltd xor cmp adc in in in (bad) ljmp xchg and mov popf rorl pop ficoml sub or dec insl (bad) or add popa (bad) (bad) (bad) arpl jae xor adc sbb jb xor mov xchg mov dec fcomps xor sub aaa and sbb and int rcrb or test mov lret or fwait or fcoms push adc mov push movsl jmp aaa mov push aad (bad) push push pushf mov sbb adc adc xchg push xchg adc es xor xor adcl xchg int3 jb insb ror test jbe aaa je addr16 dec jb inc and xchg mov pop int3 push ljmp mov mov movsl mov jbe and fsts dec push or or scas imul jno mov push and popf xchg lds lea outsl dec cmpsb inc test addr16 ja jae push in cmp test fstl pushf pop xchg repnz lret into inc mov mov jns jae or mov fstps lods int3 loope sbb pushf shr ljmp inc xchg nop xchg in jo pushf xchg int3 (bad) test out in out pushf and mov xor lcall in xor mov lcall xchg xchg rcl inc push ss jae cltd cmp enter jmp dec cmp sub sub mov popa lods mov enter call inc insb jp adc xchg sbb pop rclb (bad) iret dec dec test push xorl and (bad) adc adc mov xchg pop es xchg ret sbb jnp sbbl jnp push and sub fs and mov sbb movsl sbb sbb inc and popa pop cltd and xchg pop or rorl inc push insl xchg dec (bad) push and xchg stos mov (bad) xor sbbb cwtl push (bad) call outsb jns xor inc xor sub stos mov aaa imul ss dec les xor xor test inc push roll fcom or dec push ss bound jo dec fwait xchg insb dec and sbb cmpsb dec lret test jo ja and idiv mov lcall cmp mov xchg pop adc pop fsts mov lea leave mov jp mov in les sbb test xchg xchg pushf push popf inc sbb stos ss (bad) test mov jae fwait pop dec jb mov xchg xchg push ja adc sub repnz in (bad) and adc cmpsb ss push push inc xor inc push pop inc cmp mov cmp xchg int jmp and xchg lea push adc sbb mov or xchg sbb into cmpsb mov mov nop lcall int add sub push or xchg aad sbb push call or aad in cmp add sub xor add add adc and add adc and dec mov xor add push lds gs cmp mov test add vpunpckhbw test test (bad) leave imul movsb int leave nop mov xor xor lds xor sbb or add cmp add gs pop add and sbb sub rcl lds test sub dec fldl adc sarl int loope push int3 mov and or int imul loope dec add mov mov (bad) inc or or xchg mov gs or mov imul shrl add mov xchg vpsubusw mov fnstenv and fsts and add dec rol sub popa movsl pop add or xor mov xor add jmp mov aad pusha fstl add lds or adc lods push and add (bad) cltd adc sbb xor push xchg lea xor mov xchg add mov and adc dec lods inc and add mov push in sbb xchg xor add add inc add or popf add sub lea cmp shl mov mov mov movsl frstor sub imul in or lds cltd xor (bad) jmp inc or movsl xchg mov mov shll xor or pop pop push xor shl mov test mov ror xchg lods lods mov shrb loopne sarl adc lea and nop (bad) push adc or loope inc add mov leave xor dec fnstsw xchg pop loopne lods lods add mov rol adc mov fnstcw lods rol gs shll aad fnstenv leave cmp xor add xchg lods test add mov leave or inc mov imul rcl mov fldl xor xchg lds pop rcr adc mov leave int mov pop popa mov lea or cltd lods add sbb loope loope mov cmp mov mov cmp push movsl int mov fldl pop mov pop mov mov in mov fldenv add xor mov movsl and cmp mov and sub cmp mov lcall and mov cmp cmp cltd cmp and and cmpsb and and mov movsb stos xor cmpsb mov sub sub sbb mov daa aaa xor cmp sub xor xor cmp sbb mov pushf mov cmp movsb and sbb pop cmpsb cwtl sub cmp mov movsl mov and cmpsb mov and mov cmp movsl aaa mov lods mov stos mov sub mov and fwait xor mov cmpsl mov and sbb mov mov mov xchg mov stos mov sbb daa lods and cmpsl and cmpsb sbb sbb mov sub test sub adc sub sbb (bad) cwtl (bad) test mov loop in bound add fs xchg jae test xor aaa push fs movsl push movsb xchg adc pop add movsb xchg in (bad) mov aam movsb testb xor xchg movsb xor cmpsl push xchg arpl xorl mov sub sub cmp pop lds push and sub test (bad) cltd adc jmp xchg push xchg lea dec dec aaa fs push dec dec dec movsl sub test cltd lods sbb cmp xor mov mov mov into inc aad xchg add and xor movsl cmpsb in mov cmpsb mov movsb cmpsl push ss push mov test and out jbe repz mov xchg add aam xchg adc xchg aam and les pop movsb daa movsb push xchg inc jne and xchg inc test inc xor in sub sub sub sbb mov cmp xor xor mov mov sbb cmp cmpsl test sbb sbb cwtl stos cmp mov fistpl xchg push rcll fst int push fimul dec fcmovbe pop push sbb fcmovnbe pop adc push pop push adc lea push pop push ficomp pop dec xchg lcall push adc sub or lods push in mov push out dec pop or lods mov sub cmovbe es imul sub daa ss int mov or outsb dec das jns sub inc xor push xor sub cmp outsl inc xor jns push inc push push dec push insl dec push outsb inc push imul mov and and dec vpsrlw and sub dec outsb inc push xor push push pop adc ret mov and lcall cmp pop push insl inc push xor xor push xor push jbe inc dec pop inc inc dec push ss and mov sbb (bad) ficomp test push (bad) mov dec mov es or sub jmp sub ja dec xor dec dec dec inc xor push popa push push jno jns jne mov ds lods rcrb hlt ljmp popf into inc push gs and add and (bad) xor movsl movsl push popa and push xchg sbb sbb sbb (bad) lcall cmpsl cmp imul sbb push jae xor adc lcall (bad) ret rol or fnstsw or lds mov popf or dec dec cmp push jmp movsl sbb sahf cwtl cwtl push shr cwtl into (bad) loopne (bad) repnz and xchg movsl and and and mov or test mov loopne in bound scas cltd leave mov inc test cmp sub fstl mov fnstsw push jp shrl lret stos mov aad pushf in fsubrp hlt mov pusha sahf test data16 pop xchg xchg je jne adc daa adc mov daa jae sub sub cmp fwait mov and cmp mov leave outsb dec sub sub and movsl movsb test or or mov pop push inc addr16 ss pop jo jp jne inc inc jno gs jb gs push ja xor mov lea leave cltd and lods pop add or lea movb addr16 dec push push pop push inc push inc jae bound sbb xchg inc mov jae jb stos sub lcall insl test sub cmovle insl ljmp dec (bad) dec or imul iret or dec (bad) leave test xchg sub or stos out (bad) lods lods cs dec sub sub mov in or push stos or (bad) call (bad) sub stos imul inc dec dec jb push inc xor data16 test jno sbb adc fstps and adc sbb xchg mov sahf fs imul int3 ror movsl cmp dec xchg xchg cmc adc xchg in xor adc adc or mov inc push ss cmp push shll sub dec xor mov lods and mov lods bound sbb and sbb fcmovbe push xchg sbb push ret inc push xchg jb pop inc push dec sub adc xlat inc sbb (bad) loopne movsb lcall jb into test test xchg push pusha rorl xchg push imul (bad) test mov adc sbb push mov mov pop inc lea aad fldcw enter and push lods lods fstp xchg fadds inc xor push nop in int cmp add xor and loop dec xor or fidiv test dec sub cmp cmp nop dec stos xchg sbb daa mov jns dec and xchg pop sbb stos jbe out inc je stc adc pop dec dec addr16 addr16 push outsb push ss inc je pop jno imul pop and jae push xchg sbb rcrb push pop push adc or test xor pop sarl test sub mov pusha mov fs push imul mov stos push stos push push stos mov fwait imul cltd lret popf sub mov dec fmull push js gs js xor lret ret xchg rcll test bound and pop fcompl fwait or and xor jno sbb sbb xor or cltd aam rcrb (bad) fwait pop pop rcll xchg push push dec fstl adc (bad) fidivl xchg mull xchg xchg push mov cmc movsl adc cmp cltd xchg aad in dec es xor outsl adc xchg mov dec adc rclb adc in xor ret dec leave lcall xor mov mov push enter in test ror test cmc movsb cmp mov xor (bad) mov popa xor sbb pop sbb nop push xchg (bad) push aad adc cwtl ror aam es push js fidivrl pop adc ljmp mov aaa xor out test and jne and and cmpsl and daa xor nop hlt fsubs xchg dec outsl push outsb dec gs movsb cmp sbb ss and aad test sub (bad) mov in call sub or push dec dec sub into dec sub sub or dec sub into or lret dec stos or sub daa es cmpsl push sub (bad) sub out stos lea lods mov dec mov cmpsl or sub or lea or or scas or or es mov lret sub int3 mov cmpsb gs call leave daa or sub outsb or stos es dec cmovs test dec (bad) int3 test stos push push call es or sub mov sub stos into mov sub in ljmp outsb lret dec dec mov int mov sub in dec cmpsl sub sub mov es es lea lret dec call mov imul das sub jmp das dec gs lds lea jmp in scas sub dec or mov out int jmp sub dec sub in call imul lret (bad) in imul dec cs jmp lods dec test out enter insl or in dec sub stos gs cs or sub ljmp out push dec sub in in movsl in enter jmp or leave enter sub inc scas xchg cs sub sub in insl imul add scas or lea es in lods enter sub insl in enter mov mov mov out test mov cmpsb ljmp or push push mov sub inc es daa pop lods stos push push call cmpsb insb int push dec push mov sub sub mov dec mov dec push or sub scas outsb stos mov dec lret or enter cmpsl push (bad) or call dec test in enter out into dec ljmp (bad) daa sub or sub jmp scas dec outsl sub ljmp iret cs dec or or sub lret dec scas or mov lret mov mov push mov scas dec sub ljmp sub push mov (bad) (bad) sub sub inc call and out enter int scas dec in or mov movaps outsb in stos dec in es sub (bad) ljmp lods push lods sub mov sub mov in in out sub or (bad) out mov lods callw test leave daa push test sub dec das dec insl scas sub dec lret jmp mov or sub mov sub int3 xchg insl push cs sub imul out insl test dec push xchg call mov out dec mov dec dec sub iret push lods lret lods enter sub ljmp sub mov push enter lods cmpsb test imul ret mov cmp mov mov mov xor mov sub cmpsl cmp mov mov test mov and fwait cmp and mov sub lods and mov mov mov sub xor and and and sbb stos xor and and daa cmp cmp cmp cmp and mov xor stos mov xchg cmpsl sbb cmpsb aaa test cmp and sub movsl sub xor jmp mov rcr inc xchg gs loope inc stos or mov sub stos into mov sub mov in ljmp outsb lret dec dec mov sub in dec cmpsl sub sub mov es es lea lret dec jmp mov imul sub jmp dec gs push es leave jmp scas sub dec or xorw xchg push ss jbe jbe les mov repnz and andl je inc ja hlt mov adcl ret add mov fs push test mov mulb pop addr16 test and daa xchg jne mov es movsb ss cmp mov mov cltd sbb lcall xchg lea pushf lea xchg push pop xchg popf into push sbb fcomp rcl sahf push push or sbb adc rcl sbb push dec cltd fstps push mov sbb popf mov fistl push pop sbb xchg int aam cltd int push push adc lret dec int3 in xchg jb daa pop jne jae (bad) ss adc je movsb mov xchg inc jne push mov dec pop mov lcall fwait stos mov inc mov jne loopne loope fcomp sarl xchg sub cmp mov inc cmp in cwtl rcrl sub sbb push sbb push bound movsl xor sub xor and and and mov and pusha mov cmpsl xchg mov and sbb rcrb fsts int adc shrl fstl sbb inc pop mov cmp inc sub lods (bad) (bad) rol sub leave pop mov popa sub inc aad mov into test leave daa push mov xor arpl dec push dec dec inc push jae dec push arpl adc adc push push adc aad bound xor dec lret push inc mov (bad) mov adc shlb dec rcl and mov adc lea jmp movsl sub and fwait and stos or fs dec sub test test adc mov in sub xchg outsb loop pushf mov ret data16 pushf movsb jb (bad) out (bad) int3 cwtl out test lods xchg out mov xchg push cwtl xchg pop pop loop xor jbe inc inc jne inc cmp jbe jae inc dec inc push inc js addr16 popaw pop inc cmp xor xor outsb push inc jne push addr16 push inc dec inc imul inc inc push dec jo inc js imul popa xor bound rcrb lret jp mov dec arpl or lret lcall mov xchg push adc push mov push fsubs mov nop fs inc inc xor cwtl cltd mov cmp and mov sub sbb lcall sbb mov xchg cmpsb mov and sbb lcall inc sub test rcrl shll dec or dec adc fldl int3 dec scas leave mov mov into leave outsb scas outsb dec in or dec int lods dec in push insb out xchg out and lret jmp imul scas sub dec or int3 dec mov mov test sub xchg mov mov sub rcrl sub or mov lea scas jmp or iret or xchg imul es jmp dec sub push cmp mov sbb call or into call or in imul lods or inc mov daa aaa jne je xchg xchg movsb aaa xchg push xor and rclb or mov adc ficompl data16 adcl mov in in xchg out test push rcr and xor mov lods push mov inc popa pop inc inc push pop imul inc dec xor inc pop dec jo dec adc adc aad push sub cs cmp or repz adc and sub sub (bad) enter lcall test out mov mov lcall les and xor push in xchg push outsb call ljmp fdivp dec jp ja js ss nop fnstenv jmp inc mov push ss dec xor rcl push push sahf xchg lret rclb or mov aaa mov cltd int lods lods xor dec xor xor jns mov or jno cmp lods push sbb dec lret xor sub cwtl mov mov mov jmp dec int test cmpsb mov add (bad) hlt xlat je ja push xchg mov je inc adc mov xchg push fld scas scas es xchg and xor sbb out jb imul lods mov jp inc pop sahf dec sub xchg adc pop mov mov and test xchg or sub push out sub mov test push dec jno push jbe adc and cmp jge loope nop fstl leave xchg mov stos or arpl inc xchg and jmp leave popa pop aad fs sub ret xchg sbb adc xchg movsl push and je mov mov adc pushf ror in mov test and and pushw dec das pop dec dec dec pop inc xor gs and mov sbb xchg dec (bad) xchg rcll (bad) fcomp sbb pop or or sahf bound jns lret push fwait xchg les push cmp or adc scas imul cs test test dec or into scas dec sub mov daa sub out jno dec das inc xor inc mov dec adc adc rcrl fs xchg popa mov (bad) lcall sbb fwait cmp fcoml addr16 pop add push sbb xor and mov cmp mov cmp add add xchg leave mov dec out xchg aam push fwait or mov fnop ficom xchg test xchg movsb (bad) xchg adcl es into daa and cltd mov dec scas in xchg push dec dec xor inc push push dec arpl enter and jno xor lds sahf es fist sub (bad) es cld dec mov arpl mov les inc fs insb jae push push pop ja jns inc pop je pop outsl outsl xor das outsw ss pop inc inc inc sub ja addr16 inc imul push gs das dec pop inc jno gs addr16 xor inc inc push inc push jno push dec pop inc push ja pop addr16 xor inc inc push inc das push imul xor inc popa push jno arpl xor push outsl dec data16 dec jo inc inc dec imul dec inc push inc push push jp inc dec fs ja push arpl push dec xor js je push push jo inc push inc js dec pop xor jbe insb push inc push jb bound jo xor inc push insb inc pop xor push jo inc push inc aaa jns pop xor jb inc xor push dec inc sub aaa push data16 insl inc xor pop pop xor xor outsb cmp jno dec ja inc push outsl xor push push inc dec dec dec inc dec outsl cmp bound xor outsl inc pop insl push insb xor inc inc arpl jb imul insb inc inc push imul insb dec inc popa xor dec gs cmp inc xor inc jbe jb pop push jb das inc jae je inc push xor xor addr16 fs addr16 outsl inc jne outsb outsl dec pop inc pop dec dec xor data16 inc xor inc cmp dec inc jo pop push inc jbe push inc ja dec push push inc xor push imul pop outsl pop push inc push push dec push inc push xor ss push inc push push inc push imul dec jns inc dec ss cmp inc jne push addr16 dec jp ss xor js dec inc jae jns dec inc cmp dec outsl inc jns insb dec push inc pop inc dec xor xor inc xor inc dec outsb jne push push push push inc push push push dec jbe xor inc inc jo cmp addr16 push push js xor push jb jp dec xor cmp outsb js outsb push xor cmp inc dec inc inc push dec inc je pop gs inc dec imul jns push push inc inc inc imul jns inc imul insb inc dec imul jb pop jns dec jb aaa insb inc inc xor imul jno inc inc outsl ss ss xor popa inc inc dec xor dec dec push ja push inc dec dec inc jns pop dec imul inc dec arpl jb jp push inc inc dec outsb fs inc pop je dec pop inc push ja xor jp push pop dec outsl inc inc jno xor outsl aaa insl jns inc push xor sub jne fs inc dec push insl arpl bound inc dec inc aaa aaa xor cmp xor dec ss addr16 dec das ja inc push ja inc push inc xor push inc popa inc dec xor pop dec dec inc addr16 push pop insl xor jno ja jb push push jns dec cmp push inc addr16 push push pop push jp js addr16 pop jbe imul push ja inc ja push push pop je dec xor push dec xor push cmp cmp fs inc xor jbe arpl inc push jo xor pop cmp xor inc xor pop dec jae outsb addr16 addr16 xor imul push gs inc js push inc push das jp sub das xor addr16 je dec xor jbe jbe imul sub imul inc pop dec dec xor push imul xor pop ret sub pop adc fcmovnu dec adc fstps push xchg xchg push dec ror fst pop fimull imul inc in or cs out enter sub or mov sub jbe inc fs jp dec mov lret or or mov xchg xchg mov mov adc sub leave add and and adc int3 scas hlt enter call insb inc push arpl push dec inc cmp cmp test mov sahf adc xchg dec xchg xchg sbb into inc mov cs cs call push xchg dec or mov add pop es mov lcall mov push mov mov sub and nop mov mov xchg (bad) sahf enter call bound fisubrl xchg mov scas (bad) loopne (bad) fadds out fcomps cwtl xchg sahf lret ljmp jne jne push jb das inc jae je inc push xor mov popf add mov imul jb sbb mov mov xchg xchg rcr (bad) aam rclb dec insl insb mov dec jmp movsl xchg push gs push jno mov test mov lea pushf jo loop ljmp ss xor js dec inc jae jns dec inc cmp dec outsl inc jns insb dec push inc pop inc dec inc sub xor and adc cmp lcall cmp mov fcomps ficoml push sbb adc fimul dec push push pop sahf or pusha pop jo scas mov push dec inc je pop gs push xor cmpsl xor mov cmp mov movsl ss and mov adc xchg push pop adc fistl inc dec mov or mov mov inc aad adc popa fwait cltd mov dec or movsb notb push and xor xor aaa xor imul into in xchg dec (bad) dec outsl inc cmp fwait mov mov or dec lret pop dec in insl arpl sub data16 insb lods out enter sub ret and sbb ror pusha mov mov push dec pop dec dec inc addr16 sub mov sbb mov movsl movsl sbb xor test and and mov cmp push lret mov sbb sub es mov mov mov daa and lea xchg xchg adc fistpl roll mov dec inc movsl imul in xchg adc and cmpsb (bad) mov (bad) repz push cltd and (bad) fnstenv adc lods lods movsl sub lret mov lcall andl (bad) pop sbb ror pop cmp or shl mov inc dec dec cmp jb push push push inc sub je movsl nop xchg sbb sahf pop fwait xchg aam rcl push or (bad) xchg mov imul es sub out dec or or insb test gs and rcll push hlt xchg push and rcll hlt inc mov mull xor sbb mov gs inc movsl imul xor lds pop (bad) push pop sbb test mov and adc xchg mov into and push push leave mov or rcrl fmul out aam pop repnz inc xor daa movsb es mov mov adc (bad) xorl (bad) movsl inc inc adc push in xchg daa xchg and xor xor xor xchg and (bad) mov mov or mov mov add inc xor sub pop xchg popf popf popa or dec lret and jb mov sbb shrl int sbb out xchg mov (bad) in inc cmp mov mov xchg sbb fcmovne fstl rcrl cwtl fcoms popl scas stos das or lret sub (bad) in lret dec insl lret mov sub mov sub out xor ss and push xchg enter test addr16 inc push dec sub push lret inc outsb adc pushf aam xchg xchg aaa imul push bound cmp addr16 push push inc push dec adc cmp mov sbb (bad) push adc shrl cmpsl cmpsl inc aaa addr16 stos jnp xchg jns mov mov mov stos lock adc mov out xchg jo outsl inc jne push jno inc inc pop dec xor inc dec jb xor inc lret mov push push pushf add fmull inc inc inc xor movsl and sbb sub xchg loop inc mov lcall push sub push xchg push push push (bad) mov gs push jbe inc xchg (bad) aam push es scas outsb dec stos in test dec dec inc mov es push add scas in mov push in insl sub dec xor inc xor imul and arpl adc xchg stos lods lcall push and mov fstps outsb repz xchg adc or push sbb adc ror out out loop dec sub test cmpsl sbb sub mov mov cmpsb lods lods call in push and push adc insb nop das push imul jb xor dec and mov daa mov movsb and mov in xor inc mov inc bound and stos sbb popa int leave ljmp cmp and nop xchg or inc ss push inc notb and mov mov addr16 das inc inc dec cmp xor xor sbb sbb mov ret test push adc jno sbb ftst push xor shll orl cs outsl dec cmpsb adc daa les cmp int (bad) or leave sub cmpsb dec (bad) call lret lea int3 test inc mov je xlat xchg (bad) aad and mov pusha mov adc mov or sub aad push mov xchg xchg movsb push add aaa daa rorl sub lret insl insl test gs and dec sahf addr16 rcrl cmpsl mov mov iret dec test xor jne inc daa mov sub arpl jb adc es sbb mov lds fwait pushf and fcomps adc (bad) adc adc test int3 out movsb mov push aaa jbe imulb cs jne inc xchg rcl xchg cmp cmpsb mov xor jbe inc xor inc inc xchg divb mov test data16 out out push sub xor lcall movsb mov aam fsubrl adcl xor xchg and and mov nop int3 mov rcrb jae es fwait cmpsl mov cwtl dec or arpl mov rcrb fs inc inc jne leave jns push dec pop enter mov bound pop lods and lret lret xchg inc loop fs aaa xor mov dec ret pushf and xor pop xchg mov xchg xor fucomp int3 in dec sarl cmp rcrb scas mov dec js xor xchg loope loopne sub insl ret xor mov push notl outsb push push inc push mov add imul dec adc pop jnp dec sub sbb push aad push xchg sbb int3 movsb lret out xchg cltd xchg or into adc inc addl cmp push dec pop push sbb sbb push (bad) aad dec push aad pop sbb push (bad) sbb pop pop push push pop nop push dec fistpl pop dec adc push fcomps dec fstpl sbb mov rclb cltd pushf dec sbb fmuls dec ror int or push pop xchg ficoml sahf adc pop rcll xchg push push lcall fistl pop push push push cwtl fcomp adc rclb push adc xchg int3 ficom xchg popf int push or sbb sbb cltd push pushf int3 rclb cltd push push sbb pop aad or push adc sbb nop xchg pop fnop nop push xchg adc aam pushf rclb xchg adc push xchg or cwtl pop rclb dec aad adc fcoml ficompl rcrb fwait xchg sahf pop nop push int adc pop pop sbb (bad) fistl int3 (bad) mov push lcall aam or pop or push or into pop adc push push push xchg fwait push sbb pop adc push push push pop cwtl cltd or fsts push xchg (bad) xchg rcrl push pop sbb push dec aad push xchg lret aam sbb adc pushf push push dec rcrb pop or fnop push fstpl fisttpl push pop pop (bad) cwtl xchg ficom rcll int3 sbb adc push mov push push xchg push (bad) push push or aam push push dec (bad) int3 xchg mov adc rcl xchg cwtl pop mov pop xchg adc or xchg or dec pop push cwtl int fstps sbb fnop pop pop pop (bad) (bad) push dec fstps adc pop rcrb fwait nop fcom sbb pop nop push pop fcmove adc or sbb push push xchg (bad) push push mov fwait (bad) popf rclb adc mov pop pop cwtl fcompl push push push aam pop fsts sbb rclb fistl pop fcom push push adc adc fcmovbe push xchg sbb push pop fwait xchg nop fcmovbe push push popf mov cwtl (bad) push sbb adc (bad) adc push aad xchg sbb lret push fcoml sbb dec rcll adc lcall or pop pop lcall aam push nop cltd rcrb fistl dec adc sbb sbb pop cltd push push adc rcl dec rcrb xchg aad push mov pop lcall adc nop fwait push mov rcr cltd pop nop push (bad) adc dec fstp cwtl pop pop nop push cltd sbb sbb xchg sbb into or push pop rclb dec push xchg adc adc xchg push fistpl push pop (bad) xchg adc push push lcall rclb rcll or popf rclb pop push push xchg fisttpll adc ficomp sbb fstps rcll sbb push ficompl push push sbb pushf sahf lcall push push push (bad) aam xchg adc push pop rcrl sbb fcmovbe lret fstl lcall rclb adc adc adc push fcoml fimull pop fcmovnbe fcom or push fstpl int3 sbb rcll push push push or (bad) dec lret pop push push adc popf xchg push into push push mov sbb xchg push int3 sbb push fcoml push rcll rcr aam fcmovbe aad sbb mov cltd push ficoml push (bad) sbb dec pop pushf xchg xchg xchg lea push xchg mov sbb rcrb xchg sbb sbb push (bad) aad dec push aad pop sbb push (bad) sbb pop pop push push pop nop push dec fistpl pop dec adc push fcomps dec fstpl sbb mov rclb cltd pushf dec sbb fmuls dec ror int or push pop xchg ficoml sahf adc pop rcll xchg push push lcall fistl pop push push push cwtl fcomp adc mov enter dec dec out or out sub es (bad) dec pushw push xchg inc jae xor cltd andl adc popa cmp dec fxch adc nop mov test movsb ret popa sub inc arpl dec outsb inc dec dec push outsb pop jns inc dec ss dec jno insb jo aaa outsb inc and xor sub (bad) pop or inc and sub test es xor test ss push adc and sub cmp lret and arpl or pop jp ret addl or jp mov cmp jnp sub mov jnp mov cmp sbb or mov inc adc push call xchg movsb xchg stos (bad) enterw mov mov mov inc dec dec inc popa bound xor sub mov mov sbb lcall ss mov cltd pop pop (bad) (bad) lds out sub (bad) push dec enter sub scas enter test inc jbe daa test xchg pop lret (bad) sarl sub and pop push rcll fadd in insb (bad) lret dec push jno gs push push cltd aaa mov and cmpsl sbb mov cmpsb cmpsb and mov cmp and mov daa and pop sahf cwtl (bad) push sbb into dec es sub leave gs push jne movl ret es mov and aad dec sub inc add cmc xor push divb in movsl push xchg inc push ret mov cmp jae pop or and add mov adc fdivs in jae dec jno ja popa jno inc xor cwtl xor mov into push mov pop rorl leave in int3 jb es leave xor mov (bad) ret lods fisubrl enter dec sub xchg in cmpsb dec cmpsl xchg xchg and xor xor mov pushf int3 add ljmp inc das push dec inc and adc push push dec jmp insl push push inc push lcall mov push dec lds (bad) out (bad) ficom inc repz xchg es es mov lret pop push test sub rorb and sub adc int3 frstor sbb push inc imul bound leave nop xchg dec inc mov mov dec xor pop xor and lods xor lcall cmpsl test lret arpl or out es mov cltd aad fwait push xchg push mov mov loope mov sub popf or jo outsl dec jne push cmp mov xchg int3 push sbb fstps jb hlt pop jbe movsb xchg and test dec push xor adc rcrl rorl or dec dec out push aaa mov stos les bound jbe cmp aaa adc fstps test and lcall adc mov stos (bad) mov flds stos and and mov fstpl push push fcmovnbe dec scas mov or sub jns shlb mov enter in inc pop test and mov cmpsb or sbb dec mov test cmpsl test add push hlt cmpsb xor mov test pop inc (bad) mov dec dec push addr16 pop jb mov into sbb sahf dec jo int3 in inc es mov movsl mov cmp mov out xchg and mov or push (bad) mov xor test jns arpl aaa pop outsl and mov and cmp inc xorl mov sub cmp push test jns ja mov jo inc sub sub cmpsb sub pop and test enter xchg mov ss cmp lea mov sarl leave lea int3 bound enter in mov jne dec dec push inc outsl adc push mov xor shll mov mov lods pushf dec or aaa lcall and in out xchg xor mov inc sbb data16 inc or js adc popf sbb pop shrl enter push push prefetch dec into int sub ja xchg out mov cmp jb les inc cmp cwtl and aad dec or sbb mov or fs mov into push sbb xchg fisub push push jbe jb ret pop or sub stos xor mov xchg es bound insb xor popa cmp pop xor sub cwtl in vpmulhw mov outsb xchg shl push sahf xchg mov and pop inc lret xor mov sub add test (bad) imul adc mov insl dec addr16 insb data16 adc lcall xor cmp cmpsb stos mov xchg dec push lcall hlt out scas es pop sub adc mov (bad) lock test adc fwait sbb out imul mov mov xchg stos dec and xor lret sbb roll inc or dec dec int or inc aam pop add pushf leave jmp inc push popa xor and pop mov xor test outsb push inc insl pop ss push lret dec cwtl dec je mov push mov test pushf push push dec or or lret rcll mov push in push mov inc and int adc cmpsb mov xor inc push dec xor cmp sub int3 aad test data16 jb (bad) repnz mov inc xchg xor arpl adc dec inc lcall jns push inc push sub push outsb xor insb jbe pop inc ja adc push pushf pop sbb fnop fcmovnu xchg xchg dec dec sub insb jmp jns nop push pop test inc push test test and mov lea inc inc aad inc xorl cmp xor mov mov adc test adc (bad) repz movsb xchg inc test adc mov sbb ret sbb adc lcall push mov les test inc jae push jmp or cmp lds in dec mov ret xchg mov inc cmp mov into into push dec mov xchg and addl mov dec sub push push and push sub aam loopne ror fmul mov inc and and mov sbb int dec dec mov jle push jae movsb and pushf aaa and pop dec int3 jno fwait or xor inc cmp cmp lcall xor push sbb sbb or sub (bad) xor cmpsb es sbb popf push add les adc addr16 sub or mov xor mov cmp xor mov fs and mov bound dec cltd push leave mov enter loopne int3 xchg loop push adc adc xchg enter rorb xor push dec arpl sub sbb pop fsubrl cmpsl add arpl negl fs xchg push adc add adc fs add movsb testb push fs ja mov daa xchg aaa xor movsb push adc adcl adc (bad) je (bad) inc push inc out test aaa inc push adc fs adc push jae and jbe divb adc gs ss mov cmc adc adc xor xchg xor xor test xor add arpl and pop xchg aad adc and adc inc not pop jbe (bad) lds es jne arpl mov adc xchg xor cmpsl adc movsb adc xchg loop xchg testb mov mov ss xchg (bad) jae je inc arpl mull add inc xor je and pop xchg aam test push les adc hlt je pop xchg test xchg les adc in inc arpl adc cmpsb mov xchg in je ss add data16 (bad) hlt adc cmpsl push je je xchg je adc push add push jae in xchg in push in and jne mov and jne movsl jne add movsb mov es aam ja adc mov les data16 adc addr16 xor ja aaa adc adc mov es je test adc adcl les pop xor xchg xchg push je aam mov xor inc add addl adc test pop inc ss data16 lds push adc inc divb xchg aam (bad) mov aaa push add adc jb add xor mov daa jne out mov xchg xchg repz jne je adc adc daa xchg testl adc jne aad mov xchg adc push es pop push xchg aaa push es data16 xor pop push cmpsl xor mov xchg hlt (bad) je aaa xchg xor adc xchg pop push inc xchg inc adc jae xrelease jae les test aaa je push xor xor data16 gs and addr16 and xchg adc push xor in jbe adc addr16 xor inc notb cmc inc es jae jbe mulb xchg push add jne xorl and ss pop mov xor inc aaa push hlt and fs xchg inc xor fs xor inc adc adc aad ret xor mov adc inc roll fs and mov shll xor les push mov adc xor ss adc mov cmpsl adc and adc movsb in cmpsl and fs lds inc ss cmc fs adc and and xchg mov push ss xchg adc daa aaa fs adc add xor adc cmc push inc je xchg adc jb add test xchg xchg je and and xchg gs push push daa and hlt cmc inc cmpsb out inc adc addr16 bound adc inc ret push jecxz out adc inc ja xchg inc mov xor push aaa xchg xchg daa cmpsb push ss daa inc push movsb xchg inc data16 adc mov pop add jne in test inc xor push notl xchg and cs or dec int3 adc dec adc or dec pushf ficoml pop xchg xchg adc or or pop fnop pop xchg pop push push or push dec fwait sbb pop pop or sbb lret dec ljmp call inc out in in ljmp mov mov cmc adc adc xor xchg xor xor test xor add arpl and mov adc imul adc adc mov inc fwait pop mov adc jmp lods in mov add or in add mov in sub mov movsb lods mov jo (bad) (bad) mov mov repnz pop push jne inc popa inc and cwtl daa sub adc dec nop fistpl dec cltd adc inc hlt (bad) data16 mov test push adc sbb jns pushf sbb bound inc cmp aaa sub cmpsl and xchg aam int mov push mov ficom mov gs lods test mov les data16 sbb xor lds mov or loopne loope adc ror loope adc xor fldl adc adc pop or xchg pop pushf lret sub je jne aam (bad) mov aaa push add adc jb add xor mov daa jne out mov xchg xchg repz jne jp or popf inc adc dec xor test sub outsl or or adc pop push xchg aaa push es data16 orl dec jp cmp cwtl rorb call cmp cmp sbb stos cmp mov sbb or leave gs test enter enter stos (bad) cmpsb fmuls fimul outsl popa push jo inc sub xor mov and fcompl iret inc dec data16 imul mov call ja jns arpl mov and cltd xchg fstl push mov push insb sub push outsb insl inc cmp mov fwait and fmul ljmp push push jp pop test test faddl mov dec jp inc inc push dec dec fs jb rclb xor mov leave inc enter sub movsb rcl in sahf mov inc daa aaa fs sbb xchg inc pop inc push sub sub and stos movsb mov lcall fsts popf cwtl add int3 call enter (bad) out sub xchg sub out in es popl ljmp das sub dec cmpsb insb into call dec sub dec jp jo and ret int3 aad push mov popf or dec mov inc or inc and mov mov mov mov fmuls or adc mov adc data16 (bad) push jbe es xchg push in add je lods lret dec sub enter inc xchg jne xor leave shrl or leave (bad) aad inc add out cmpsl sub inc (bad) repz push (bad) push push xor je je stos push pop (bad) dec mov fwait push cmpsb push dec insl jp inc inc insb dec dec js push push xor inc xor popa push dec inc insb push pop outsl inc inc dec fs xor outsb mov pop push xchg into push xchg retw jae xchg fs sub inc fwait and mov dec (bad) fisub jb xchg inc xchg mov test rorl mov movsb les push push in sub aam sub jmp dec insl xor dec jp ss pop mov mov xchg lret fstpl push dec push or adc jp and bound xchg xchg test xchg sbb sbb pop fwait imul flds int frstor adc out mov rorb jb adc lods sbb sub in stos insb les xchg ror cwtl mov push dec pop imul push push inc data16 xor push mov xchg cmp rcl or popa and mov cmpsb stos call ja je outsb push insl push inc inc das push ja pop je pop ss inc dec jno addr16 xor and cmp test fwait rorl pushf push adc adc lcall pop xchg pop or (bad) rcrb pop push push je repz je out inc jbe and mov fdivrs out mov mov insb mov inc ja push imul sub sub ja ss xchg inc jae rol cmp and lcall pop rclb sbb sbb pop cltd xchg rorl mov dec out and mov add dec hlt mov stos bound sub lret or pushf push inc xchg mov sbb pop xchg ror movsw in push lods int imul insb dec clc xchg push dec (bad) mov arpl jno mov and test arpl and and cmp mov mov stos xchg aad sbb rorl insb out outsb dec pop push in and adc pop push pop test inc and ss mov data16 xchg inc ss push push xchg test push pop xor mov (bad) mov and jnp lcall out hlt push adc pop and nop sahf sbb insb cwtl test inc aaa cmp sub dec pop aam lea sbb lea lea xchg and inc dec les xchg ss adc in mov push je jnp mov andl adc push or pusha jo fisub jns pop je xor sub sub or cmp imul adc out adc mov fwait xor out cmp sub xchg xchg mov rcrl mov lret xor xor mov loopne xchg adc cmp cmp add mov and cmpsb int3 fidiv push push adc fld call je inc adc cmp and inc push push xchg sbb scas xchg arpl add mov es inc imul push push sbb jb ljmp xor jns xor aad or mov sbb lcall or inc xor sub dec cwtl test mov mov inc andl dec pop or inc subl jmp and inc inc push imul sub imul mov cmc and shll loope (bad) xchg mov je jno mov mov push cmpsb mov mov or xchg and jae popa cltd or mov jp frstor mov mov pop inc push inc cmp aaa test jmp (bad) enter mov xchg jns (bad) xchg mov les es push mov mov ret fwait lods dec mov cmp nop dec adc pop ficoml stos and sbb stos jns sbb push push or es dec dec lea sub cmp dec dec or outsb pusha nop xchg repnz out addr16 (bad) (bad) xor int3 insb mov lock xchg dec cmpsb test fs je push out push add jmp out inc add dec enter (bad) jmp push push mov dec inc push jae sub lcall cmp mov fsts aam adc sbb cmp int3 dec out repnz cmp lods popf or adc fmulp in push loopne inc jae inc lea test mov repnz mov adc imul shll adc (bad) mov lds roll aam add mov inc dec gs leave fisttpll aad in shll rol fstpl mov jmp fnstenv mov sub fsts loopne int int3 lds pop mov loope shl add imul leave cmp mov fldcw fsubrs test loopne sbb add in cwtl leave movsl mov add adc dec mov gs mov mov sbb test flds rcr roll jmp xor xchg gs in jmp leave or lods (bad) and add inc add push pusha in dec aad or popa sbb cmp xchg int test push xchg lea shll rcl or in or and inc adc loope shrb popf popf or xor popf add sbb mov or xchg and lds sbb dec mov in popf rcrl leave rcll or pop shr loope popf add aad shl leave add fnstcw xor dec inc or sbb fstpl mov in inc or sbb in push gs xor aam and adc (bad) cmp add fcomp or pop shrb (bad) in add rcl test inc adc int rcll popf or add lods add push dec lds add lods leave sbb or (bad) xor or imul xchg sub cmp xor cmp mov pop dec adc aad pop popf add inc pusha in adc fnstcw xchg adc mov push imul push in aad movsl or mov and add xchg and add lds or add test mov lea sbb aad add jmp or sub cltd mov inc adc or mov fsts or sub shrl or aam fmul fcomp xchg xor sub cmp popa lea adc rcll loope or rcrl pushf in dec lods fstl cmp rcrl pop inc adc shrb in flds fnsave xchg popf or aam mov or int3 lods mov xor add dec or inc or int pushf loope adc lds sub aad add lds inc add and jmp fldcw imul (bad) xor add and stos dec call sub or insb call or out sub cs lret dec push cs sub dec jmp or scas dec call and cs call or out dec iret dec dec sub outsb leave lods call imul enter insb inc sub sub lods prefetch or sub int dec dec insl into xchg sub jmp es or mov mov pop lcall mov pop mov sub ljmp rol jo nop sahf cmpsb pusha mov and xor and lret in sub and pop xchg lcall dec ror sbb adc push push xchg adc pop pop sahf xchg xchg push cwtl dec nop rcl push push dec fstp rclb rcll pop xchg dec rclb pop sahf sbb push push fstl adc lea xchg xchg adc fcomps pushf int3 or sbb ficompl push push fmull fstps enter mov sbb and adc xor fwait cmpsb xor add sbb pop insb addr16 pop dec cmp dec dec jno inc push inc bound bound outsb addr16 inc outsl cmp jo inc outsl push jbe inc jb inc js jo jbe jne inc xor bound cmp jb jns ja jbe dec insl xor pop dec push push inc inc xor inc js dec inc inc adc cltd push push dec push aam aad rcr xchg int3 dec pop xchg mov xchg push push push and movsb (bad) es xchg out inc les data16 push and cmp add fcomp or pop rorb jae (bad) sbb xor or adc stos push sub mov xchg push loopne stos mov xchg cmp and stos test jmp enter dec in push or dec xchg shrb inc aaa jbe gs dec push addr16 jp pop jp cmp das addr16 push push inc push jne xor dec push and ret rorl in pushf lret data16 or push imul xor pop cmp popa imul push sahf push shll push xchg pop push xchg xorl movsl push and cmp test mov adc pop inc inc push xor xor pop arpl inc adc xchg nop push xchg pop pop fwait rcr sbb push push adc inc xchg and push hlt es and dec pushf mov dec addr16 lcall mov popa inc xchg (bad) pop adc xchg xchg pop adc push lcall xchg mov inc add push mov mov movsb pop adc imul call in inc js sub push das ss push inc inc dec imul mov or inc push inc sbb pop rclb push xchg adc or dec popa xor dec dec outsl insb jp inc dec push imul das mov mov test sub mov jp mov adc mov mov test mov sub and mov adc mov inc xchg push ret stos jnp jnp or int3 int3 fcmovu loop mov push xchg cmp cltd mov or or inc outsb bound adc adc jne push inc add adc xchg xchg test and sub cmpsb scas in stos push push out call jp jb mov les ficoml (bad) lock out xchg mov cmp xchg cmpsb sbb mov cmp mov lods mov mov mov roll push pop jb int3 faddp mov test adc loope inc add inc call or xchg xchg jae xchg xor imul rorb les and and mov inc and call push lods sub lea cs cmpsb out das pop sub sub gs leave outsb lret or imul adc dec sbb test out and test mov xchg mov stos sub mov out dec and push xor lret dec (bad) lea rcrb dec rol out inc inc xchg push data16 testl rorl push fldl sub ljmp xchg mov popa stos adc shl mov test xor pushf cmp mov sbb cmp mov mov cmpsb (bad) and inc cmp or fnstsw fmul jmp loop inc inc adc ficom or call inc es jns lcall mov and fsts in xor push inc jae xchg xchg pop movsb lods pop add rcll popa add sub cwtl leave imul jnp or inc imul insb xor push or dec data16 and test or dec mov call scas in inc sub popf or lods mov fisttpll lods or xor push cmp mov into call xor xchg int3 in lds in aad inc in and mov and mov data16 sub mov push mov or dec out sub and aad fisttpll push popa push insl bound cmp and sub adc inc xor test cmp and inc (bad) rcr fldl imul movsb inc cmp inc or cltd sbb adc dec rcll mov adc inc adc dec test cmp dec insb stc sbb les cmc pop ja xchg and enter into test cmp and push dec dec dec mov stos bound jne dec push inc push insl dec adc sub pop mov stc mov popf int3 aam cmp (bad) scas mov xchg xchg out out xor mov sub mov loopne lods dec or sub mov (bad) dec bound push xchg push pop pushf dec adc push in enter push cmp sbb inc jb test daa mov mov cwtl mov sub call insb mov in xchg cmp insl xor or xchg mov fisub in hlt jae adc mov insb mov xor mov xor adc das pop sub and push test arpl push xchg popa adc call add aam xor or hlt xchg int3 dec sub cmp jb insb jae inc adc mov inc data16 and dec (bad) inc adc sarl jmp leave mov (bad) dec outsb es sub insb mov (bad) es dec jmp sub imul sub sub or insl cmpsb or cmpsb sub and push scas push dec dec scas cmpsb or sub dec dec imul (bad) and stos sub sub outsb addr16 sub sub (bad) int sub cs or dec imul lea or xchg call or into outsb (bad) leave outsb call sub out or or lret mov insb push sub mov lret call sub sub mov es dec data16 call scas dec lods out (bad) or dec sub dec scas sub push ljmp or lea push call into or scas imul lret (bad) movsl outsb out call sub ljmp or sub and mov push sub insb data16 lret cmova sub int or push scas call dec out imul dec xchg es outsb call call cs call imul or cs mov call es cmpsb in cmpsb mov mov outsb insb imul test cs dec (bad) or enter in in ljmp cmpsb out test push mov sub dec sub dec das es lods call xchg into call ljmp call test or sub push push mov sub sub mov dec int3 in out ljmp sub lret dec sub stos cmpsl sub cmova cs jmp push push dec leave dec cmpsb test sub enter outsb push sub sub data16 sub (bad) push lret lods call mov test sub inc imul dec (bad) sub or pop cs call push inc imul call call lds daa push leave (bad) or jmp or inc movsl insb dec cmpsb stos dec sub sub data16 cs sub int outsb int3 imul push mov outsl dec jmpw sub mov dec scas out call sub or (bad) dec mov (bad) sub outsb into or es sub lea insl es call mov int3 lods int3 sub sub int imul das push or enter sub or sub out push dec mov (bad) sub sub xchg in call or out push out stos jmp sub dec sub lods int lret or call imul dec or ljmp dec imul enter or sub sub dec in (bad) sub dec enter sub or jmp sub call into enter sub sub or or lret or dec sub push ljmp ljmp sub or mov sub or sub dec sub daa sub jmp (bad) out or mov lods in dec mov sub lods stos or cmpsb or outsb out (bad) lret push cs insb out ljmp dec sub mov cmpsb jmp or sub in cmpsb enter lods push sub vmovaps into out sub dec das sub sub dec mov push dec sub push out scas or insb es dec push sub in dec data16 in dec enter call inc push lret sub call mov sub push dec sub jmp inc mov ljmp ljmp sub dec jmp dec dec sub out lret dec movapd mov lods lods dec dec xchg enter or call sub insl ljmp mov outsb call sub imul (bad) dec dec cs push sub imul dec push or sub dec iret or dec or call push push push inc or dec push insb cs out or xchg mov outsb jmp test push sub data16 xchg sub test gs scas cs enter mov dec lods dec imul mov cmovle or push call enter mov (bad) dec outsb es sub insb mov (bad) es dec jmp sub imul sub sub or insl cmpsb or cmpsb sub and push scas push dec dec scas cmpsb or sub dec dec imul (bad) and stos sub sub outsb addr16 sub sub (bad) int sub cs or dec imul lea or xchg call or into outsb (bad) leave outsb call sub out or mov lcall mov (bad) mov dec push movsb test fsubp xchg mov cmpsb bound push xchg aam hlt lcall ret lcall mov sub mov mov cmp ss stos mov mov das dec stos jmp test in imul inc adc inc mov or and mov and xor mov cmp shlb (bad) mov outsb lret fisubl mov mov into (bad) out test xor cltd and mov (bad) call stos mov lcall or hlt les addr16 mov adc push jbe inc aaa je (bad) mull xor adc inc int3 shrb pop int or mov in ljmp mov cmp mov shrl sbb popa xchg jno stos cmp pop fwait mov stos jp sbb xor jp sub subl inc pop leave lds dec xor insl imul inc insb jno xor inc lods cltd popf push add or rorb lcall ret sbb mov sub (bad) repnz (bad) lock insb mov lcall cmp lcall cwtl sub (bad) aad inc push popa push dec jns dec cmp fwait aam sbb pop or scas ret jb push jae adc shl popf adc cltd loopne sub loope dec rorl mov push jno push ret mov ret inc push cltd int3 (bad) iret or inc movsl xor dec imul int jb inc dec imul dec push xor imul xor aaa dec jne outsl inc sub push push bound inc adc int push push sbb xchg push xchg mov push daa addr16 (bad) fld popa shrl into mov ss popa adc lea nop xchg mov cmp mov xchg rclb test mov mov int3 ret push cwtl es hlt sub sbb lea rorl xor arpl test test (bad) push inc inc xchg dec sahf adc or and inc movsl xor lds inc mov test or (bad) sub push push mov imul dec addr16 push dec fwait popf xchg xchg xchg cwtl push rclb xchg adc xchg sbb lea push pop adc pushf (bad) or aam out push pop aaa dec pop adc inc nop push push rcrl adc (bad) mulb fs jb scas xchg push in nop in outsb loopne out inc and mov sub push lods stos or mov movsl cwtl rcl pusha vunpcklpd jno jno jae inc push dec push inc inc cmp xor xchg adc push push or pop fstl nop push sbb pop sbb sbb push push mov push sahf xchg popf fcoml repnz test sbb test pop sbb outsb inc inc inc popa inc xchg rcrl push (bad) fimull xchg mov mov mov sub cltd pusha dec push xchg or push xchg rorb adc xchg popf fmuls aad or test andl fmul fldcw shl inc je inc gs inc xor adc rclb into test movsb hlt xor lds inc push xor dec pop push push jb push inc outsl sub ja dec push dec imul or sub dec iret or dec or and cmp sbb ret pop mov and sbb shl shrl push xor inc leave lods aad fiaddl mov xor imul (bad) mov repz fs xor push hlt out pop cmpsb xchg ss add push inc adc (bad) test inc cmpsl es pop xor mov xor es and gs xchg push adc add test aad push jne push fs mov push push mov add out and xchg in adc xchg inc addl lds inc xchg xchg xor inc in inc je and addr16 push xor mov mov adc in lds mov addr16 xor xchg and daa ss xchg (bad) out adc cmc adc cmpsl push xor push xor daa push movb add inc movsl xchg adc adc pop test inc addr16 (bad) movsb push pop test movsl xor pop add add ss ss xchg push gs xor and ss adc test push and adc fs add adc xor movsb and xchg test out adc je push test jbe push adc aam jae add xchg out adc cmc adc notb aad push xchg push cmpsl xchg xchg and ja xor xor mov xchg jae and push xlat push xchg aad daa je add adc arpl jae adc push fs arpl push adc xor notl push xchg adc in adc mov adc hlt es shll je and movsl xor jne addr16 adc (bad) push adc inc xor xor xchg addr16 cmpsb data16 xchg push je ss add push inc adc out inc xor push adc adc adc and mov je test cmpsb test je xchg xchg data16 push daa push es aad data16 adc inc adc and cmc push add adc adc xor ss cmpsb hlt adc push test adc addl aaa push (bad) xchg push adc and xchg xchg xchg xchg and testb cmpsl jbe jne ja adc out inc inc xchg xchg cmpsb xor adc inc in xorl test fs push inc (bad) cmc inc xchg xchg inc lds xchg out push je xchg inc test je je inc xchg mov daa adc adc jne es mov daa xor in xor xchg push inc aam push andl add hlt out inc xor hlt ss addl push (bad) daa je pop movsl xchg jbe pop push es cmpsb adc aam movsb mov jecxz xchg xchg mov pop xor pop push push and add mov ss jbe fs daa push test xchg hlt xor mov mov es adc xchg xchg mov push xchg notl adc adc es hlt and xchg and xchg xchg xchg xchg and adc jbe movsl test push xor es out roll and adc xor push inc xchg xchg aam xorl inc adc xchg xchg gs in push add divl push les mov inc push movsl push fs adc add xor out adc xlat movsb push jne je xor xchg pop and xchg mov jbe xor adc ret jae ss and xor es adc mov adc push inc xchg adc test aad bound adc and push xchg mov addl aaa xchg divb addl in movl movsb les push mov mov push cmpsb aam inc xchg movl jecxz daa add jne add inc push ja data16 xchg je ss adc aaa pop xchg xor pop addr16 pop adc test je mov inc je es addr16 xor xor mov es xchg adc jne aaa es push jecxz xchg cmpsb pop push hlt adc arpl movl adc mov lds xchg adc xchg and divb push and add pop je gs adc xchg xchg lds push hlt push mov xchg push aam add push xchg adc mov lds adc hlt and and je and xchg cmpsb fs je xchg mov add adc adc adc test and test les and push test add xchg aaa and inc movsl add in jecxz xchg movsb adc jecxz daa pop ss push cmpsl inc adc adc inc push ret push adc xchg adc jbe xchg xchg daa jbe adc push inc pop inc daa adc inc mov adc arpl data16 movsl and adc add hlt out (bad) xor inc mov daa add adc addl jae ss adc xchg xchg mov xchg adc push jecxz gs add xchg adc ja inc es inc xorl (bad) jae je cmpsl jne pop push jne push repz and and pop daa adc mov cmpsb test test aaa daa xchg cmpsb notb adc in push adc xchg push xchg cmpsb push les inc xlat add push mov push xchg (bad) xchg xchg je xor push xor xchg hlt push push arpl inc movsb movb xchg ja inc test xchg daa jbe adc and test mov in movsl xchg je adc push xchg inc arpl xchg adc and je adc test inc daa and add les test adc inc xchg mull xor adc ret inc test inc push xchg inc push adc add inc push jne in xor xor xor inc push jbe inc add xchg adc xor mov adc mov push push inc and add push xchg cmpsb mov xor es hlt mov xchg mov mulb test mov bound adc in xchg addr16 test les mov xlat xor xor inc xchg xchg pop add test out pop mov inc inc inc inc addr16 inc and push mov jbe pop push aam push ss daa es pop xor xchg xchg xor pop pop push aam test lds adc and mov jne xchg adc aad les hlt hlt adc fs add xchg xchg xchg test and mov mov jbe xchg fs ret xchg hlt xor inc and test les jae inc and arpl movsb cmpsl test and inc je adc mov adc je (bad) (bad) arpl daa add movsb inc inc push je push inc arpl xlat xchg test and adc xor xchg je je aad les shll movsl fs adc pop arpl aaa arpl ss cmpsl push (bad) push xchg jecxz inc adc adcl adc adc cmpsl movsl je aam and and and jne ss in jbe xor and data16 movsb push je and inc jbe xchg inc mov push jecxz xchg aaa xchg adc out push ja xor inc adc xchg xchg movsb jne test hlt adc and div arpl mov ss push and mov ja pop cmpsb aaa xor xchg test je mov inc test es push hlt and and pop test mov es data16 data16 hlt xor gs push je adc xchg mov out ss in divl push aad (bad) je add cmc xor push push adc jbe xchg push mov fs xchg test and out adc and push es xchg in adc test xchg arpl es jne data16 inc xchg push inc inc push ret pop xchg inc test xor jae push in and xchg mov les daa push je push xorl adc push xor push mov movsb gs inc add xchg adc mov inc xlat je adc inc xor mov (bad) adc jbe and adc adc test xchg adc movsb addr16 je je push cmpsb out rcrb cmp lods sbb mov mov xor mov mov movsb mov sub mov mov sbb mov mov stos mov mov mov sub mov mov xor mov mov sbb aaa cltd es aaa adc sub cmp sub mov cmp xor cltd cltd mov sub daa sub sub mov daa sub sub cmp cmp xor xor rclb xchg popf push sbb sbb push xchg adc xchg fwait push push xchg push dec adc ficoml xchg push or xlat xchg (bad) movsb cmpsl test movsl xor pop add add inc ss xchg push gs xor and ss adc test push and xchg inc cmpsl xchg test add adc xor and xchg test out fs push test jbe push adc aam jae add xchg out in adc notb aad push xchg push cmpsl xchg xchg and ja xor xor mov xchg jae es push xchg aad daa je add adc arpl jae adc push fs arpl push mov (bad) notl push xchg movsb in adc mov movsb hlt es shll je and movsl xor jne addr16 adc push adc inc xor xor xchg addr16 cmpsb data16 xchg push je ss add push inc adc and push push adc adc jbe cmc mov je test cmpsb test je xchg xchg hlt push daa push es aad data16 bound lret pop mov or sahf aad ret mov pop pop fstl dec pop push aad rclb pop push pop push lea rclb sbb lcall adc sbb cwtl rcl lea xchg pop or fsts rcll mov adc adc adc adc adc sbb push push sbb push pushf push or sbb sbb pushf pushf aam dec mov push int push dec pop or rolb out inc aaa mov or in lods inc xor pop jae dec jne outsb dec jp push xor push pop (bad) jno dec fcompl dec xchg fwait adc test (bad) cwtl xchg fsubrl (bad) ljmp pop xor leave pop stos sub dec jnp push inc or pop dec mov sub bound push ja pop pop push xor xor addr16 dec jne insl xor pop cltd or movsl sub fldl xchg lds mov pop dec push outsb dec inc jo push ja dec jae and or mov mov inc push jmp aad fldl dec rcl xor fisttpll lea movsb ror mov push push sbb add outsb loop xor sbb dec mov lcall movsb inc and push xchg mov addl mov loopne sub rcr lods lds fs xor dec jns js jp xor sbb cmp sbb and mov fwait mov in adc lds sub rcr or movsb (bad) dec dec rcr inc or leave mov in rcr (bad) leave sahf inc xchg cmpsb pop adc push lds jbe add mov sbb lea ljmp ret push (bad) adc cmp adc mov rclb push pop icebp xor cwtl sub sbb cmp mov mov cmpsl mov and repnz int pop mov sbb dec push loope in inc or push outsb dec ljmp test and movsb cmpsb jecxz daa pop ss push cmpsl inc in xchg ss cmpsl aaa inc push ret push adc xchg sbb dec popf ficoml push adc pushf dec rcll (bad) and jbe push xchg inc mov out (bad) xor cmpsl mov or test mov movsl loope test and aam pop (bad) mov sahf outsb bnd out out mov xchg cwtl into data16 loopne movsb fisub mov (bad) in insb call mov xchg ret movsb data16 aam ret mov test xchg les inc xlat or (bad) mov (bad) outsb call out fcomp xchg int3 pushw fcom outsb lret xchg ja bound cmp cmp xor sbb lods movsb sub aaa sub sbb adc push mov fcmovnu (bad) nop push adc push adc inc push xor mov cmp out cwtl push mov mov dec lods hlt test test mov loop inc xchg lea enter or imul push nop ret push pop int3 repnz enter mov adc sub test mov inc or aaa and test or or jbe adc jns push adc adc pop out dec dec inc jae ljmp cs mov push xchg fwait push stos mov push mov bound pop pop mov mov adc test nop inc and mov xor loopne imul mov push sub dec lret dec dec or dec sub mov xor int3 cmpsb mov mov mov arpl mov test fs mov pop dec xor addr16 ja dec pop dec cltd cmp xchg (bad) in push bound ss cmpsl push mov xchg sbb imul or inc inc aaa pop inc mov mov out fsubrl jecxz xchg aaa xchg adc addr16 ja xor cmpsl dec mov and div imul sahf pushf fs push adc and int rorl mov movsb sub mov dec fs insb and popa cmp push enter in ljmp add imul test push adc pop sbb lods lret inc adc and aaa or daa adc adc int sub mov (bad) insb xor ret test pop (bad) push mov push mov dec mov int insb cmpsb daa or push adc stos and mov shlb lcall fcomp xchg ficoml adc xchg fcomps pop push cltd sbb xchg lock ret mov out (bad) scas nop cwtl ljmp adc int3 outsb jmp fwait or jb js adc sbb in outsb lret imul inc or outsb int lods movsb jb inc inc push push inc popa ss cmp push xor xor push xchg repz xor shrl movsb rcl loope inc (bad) (bad) inc jae mov push jns orl movsb int dec mov cmpsb addr16 outsb jne pop mov or or shl imul push cltd push push push push cmp mov fs push jp ss insl xor outsl push and inc lret push dec stos scas mov lret xchg sub lods lods enter enter adc loopne and cltd adc inc fstps cmp out sub movsb cwtl dec mov imul dec jp imul fstp push pop cmpsb xor xor adc cltd mov mov mov and divb cltd push sub sub fcomp (bad) mov sub mov aad rorb les jbe xor cwtl mov (bad) in and sahf pushf mov lret sub xchg lcall mov inc cltd mov and adc push lcall sbb cmp cltd mov mov jp jno or mov (bad) cmp jnp sbb lcall cmp sarb xchg pop mov test ret sub adc sbb adc adc inc mov mov jp xchg mov and or ret stos imul mov pop or adc lret inc mov mov sbb or dec lcall pop mov sub cmp sub sbb or jnp lret mov xchg xor jp test sbb jns stos jnp or mov imul or inc sub ret or jnp or sub or roll mov pop mov imul (bad) dec (bad) mov jp mov and jnp jae jns xchg mov xchg leave mov and sbb ret lcall jb or jp or pop mov rol mov jns mov mov imul xchg sub fwait mov mov or push adc mov cmp or xchg cmp or sbb cmp fwait stos mov jnp or subl mov jnp dec mov or mov sbb mov xchg dec xor stos sbb or adc lret mov push cmp mov sub lcall stos push jnp pop xchg lcall (bad) cltd mov lret (bad) jb mov arpl dec (bad) lcall (bad) mov (bad) or arpl sbb adc cmp dec mov dec ret ret stos sub inc sub adc lcall inc ret test adc jb bound mov or adc addl mov or and xchg pop jnp and jp sub lret mov cltd lret cmp and push rol xor adc and sub mov stos push mov xor lcall mov pop jb adc ret adc xor addl xor pop rcrb sub xchg inc mov pop pop stos pop mov jnp or (bad) mov mov lret xchg inc push stos shrl sbbl sbb dec jnp cltd jnp sbb dec jnp push xchg and stos lcall mov mov stos inc and stos or mov mov arpl orl cmp (bad) xor stos lret lcall arpl mov or mov inc stos cmp ret mov xchg sub xor fwait (bad) cltd cmpl jnp sbb lcall xchg arpl mov jp cmp mov arpl xchg mov ret cmp mov dec ret imul pop push or pusha pop ret mov dec dec sub push data16 push sub lods lods enter or in dec data16 call jmp (bad) insb sub out dec call out dec out or push imul test call call inc outsb call cmpsl cs sub xchg dec or out sub call lret dec push sub sub lret imul mov sub mov int3 imul outsb test int dec int3 sub sub sub cmpsl sub mov lret push imul sub sub mov call insl lret dec sub sub sub dec enter cmpsb cs dec inc sarl jnp or mov imul sbb rorb (bad) jo (bad) (bad) hlt pop addr16 push and in mov shll add fnstenv shll inc mov mov adc fnstcw mov movsb rorl (bad) jmp int loope sbb cmp adc mov cltd xor cltd pop fwait test cwtl lods ss cmp cmp mov xor mov test movsl xor mov mov push lea (bad) push dec call inc cmp fwait stos mov jnp or subl mov jnp dec mov or mov sbb mov pop xchg push es cmc push aaa push test and xchg jbe (bad) mov movsb jbe adc adc xchg xchg ficoml push fdivp (bad) cmpsb mov sub lods mov stos xor xor or pusha fmul rorb push adc rclb or adc addl mov test xchg rclb jb test (bad) (bad) fcompl sbb test xor sub inc push inc adc push sbb lret fst push dec rclb xchg data16 xchg je inc cmpsl push cmpsl mov sbb in loop mov out push mov and cwtl int or mov xchg test int sub push adc xor test out or test adc test mov nop out xchg loop test daa sbb test enter xchg ret and push sbbl sbb dec jnp popf and jno push inc push inc gs inc jne dec dec inc addr16 xor xor xor dec inc push popf rcr xchg arpl orl cmp (bad) xor stos lret lcall arpl mov inc push arpl push sbb push xchg push cmpl into (bad) (bad) out les and lcall insb in jmp mov dec dec push je push adc cmp lock aam adc cmp mov xchg movsb mov gs inc gs add push test cmpsb xchg movsb cmpsb push out and lds or gs inc jb jne jae push inc pop xor aaa dec pop cmp mov int3 lret sub sub lcall lret mov mov hlt out mov in xchg in repnz in bound cmp sbb sbb mov mov mov mov cmpsl mov test sub mov push movb push inc les imul mov or out sub insb mov jo jo push inc adc mov lcall mov call cmpsb xchg out fstl adc push adc test xor loope (bad) xor rorl push imul dec xor outsl push or test lret or test push lcall and or dec push sub sub and leave ret inc adc xchg xchg mov inc inc push push pop xchg sbb lret daa cmpsl cmp bound adc into push dec ret mov ret hlt pushf mov adc ret mov cltd rclb xlat and arpl test test inc rcl sub das push inc (bad) jmp push or mov jp lret lret mov in xchg push enter sbb lods cmp test ljmp push inc mov push inc mov push mov (bad) int3 pushw inc hlt (bad) cmpsb ret sbb mov lods push js popa insb adc dec or dec jb xor pushf lea pushf pop test xchg mov lcall sbb cwtl lods mov fisttpll sub or jp inc ja js xor fwait xor pop stos mov sbb sbb mov addr16 inc sub xor (bad) xchg sub hlt test and inc aam int3 fsubrl inc cwtl lds push dec aaa push insl inc outsb arpl jae rcll fs inc xor and push mov mov push aam and rorl inc xchg push sub or and rcrl dec inc movsb mov mov inc cmpsb wbinvd push push xchg mov jne xor jb imul addr16 jmp push sbb rcr inc shr fs test and sub and cmp ret cmpsb and popa cmp sbb sub lea js jb imul das inc xchg xchg aad adc adc test inc cmpsl inc test mov inc push xor adc sbb mov mov mov and test cmp mov enter shlb addr16 sbb hlt and inc loopne cltd xor cmp sbb mov pop xchg mov out push (bad) movsb xor and and xor cmp jns and pop mov (bad) int pop mov dec sub inc jo fs push inc adc push sbb mov out mov mov and mov cltd test out xchg cmp test mov mov push or mov mov sbb push pushf push push (bad) cmp adc fwait push push rcrl int3 fsubl pushf mov sbb mov sbb mov inc jp inc mov arpl arpl mov pop gs inc push inc push jb ja stos lcall mov xchg xchg movsb pusha lods mov adc adc out push mov adc dec xchg nop jb cmp push sub inc mov xor adc dec mov mov pop shll das xor dec adc mov pop pop rorb xchg repz inc outsb push mov dec lret pushf (bad) es imul rorl mov push fs xor addr16 mov jns dec pop push fs xor aaa sbb imul adc mov cmp cmp mov sbb xor pop adc into pop (bad) in inc repz or mov xchg ficompl pop cwtl dec mov mov mov mov mov out (bad) ljmp out inc pop bound (bad) shrb xlat push and push push daa and aaa stos cmpsl cmp fmuls enter sbb fwait (bad) dec sbb lea add jb daa adc xor inc push es sub pop adc add mov fadd outsb insb int lods call leave ret mov jp (bad) mov lret insb repnz mov test adc jo jb push push mov sub sub test mov fwait and or in or leave dec push sub sub leave push jmp mov inc test ljmp in movb and sub inc data16 mov sub sub lods sub lds sub push sub dec int3 into call push mov out or call sub insl xchg dec in in insl sub dec sub mov dec lods dec cmpsb or stos or in sub int pop cs cs test or or lea mov int sub int3 sub or dec sub pop add sub sub sub mov dec (bad) inc mov or sub or or sub lods out scas out call dec insl sub sub or enter insl call dec in mov lods call mov (bad) or sub sub enter or test sub dec outsb imul inc insb int outsl sub stos dec sub mov enter mov sub dec in cmpsb dec push dec outsb or or ljmp sub insb scas jmp sub push jmp mov test test (bad) sub jmp enter imul inc or or cs cmpsb outsb mov call insb dec push push or sub cmpsb sub int mov push sub sub sub int3 outsl dec lea dec push sub insb call int dec sub lea sub mov sub inc ljmp daa mov dec sub dec dec imul mov out mov out push lods daa cs dec sub mov stos or or dec inc push dec sub cmpsl sub sub sub imul or or outsb scas dec inc sub mov gs (bad) out ljmp sub leave lret dec sub dec out pop push enter sub mov test push insb test sub cmpsl sub dec jmp lea (bad) call scas in imul sub jmp test or call or inc or push push inc cs sub inc or mov scas or or out into es mov imul mov or scas dec or mov sub stos and cmovle test or test outsb int call in push or or or mov lods enter outsb into dec or enter scas out lods into push sub sub xchg inc sub insb push push xchg (bad) mov ljmp insl lods mov lods movsl in test call or scas or stos or push xchg stos sub sub or or sub sub int3 push push push cmpsb dec int dec stos out sub lea push es sub jmp stos dec dec dec sub push mov jmp (bad) lds scas push or leave das dec dec test dec mov call lret out call sub dec addr16 test dec call insl lea sub sbbb adc sbb int push sbb pop push xchg sbb xchg in pushf push inc sub inc push data16 jns jo dec imul jb push ss mov xor stos adc cmp and cmp sbb cmp mov mov xor xor movsb test cmp sub lods sub mov and ss mov movsl sub xor xor sub ss stos xor sub cwtl sbb movsb test and sbb cltd dec push fstl lcall push adc pop ficomp adc adc pop pop xchg pop xchg pop into sbb pop rclb push pop xchg ficompl rcl xchg inc or enter insl call jbe inc mull xor sbb and (bad) sbb mov inc mov shll (bad) lret or add rcrb lcall pop xor lret rcrb roll roll add or lea mov xchg xchg rclb out cwtl call fsub mov pop je push jp inc and mov cmp xor and pop pop fisttpll sbb sbb adc dec das dec insb dec push push or sub cmpsb sub int mov push sub sub movsl je xor xor cmp xchg mov sub movsl movsb aad pop adc adc enter pop mov xchg xchg ss mov mov inc push dec dec jo xor dec xchg sahf push enter inc sub or or dec inc push dec sub cmpsl sub mov es arpl stos rcl lret mov xchg mov mov xor dec dec push jae inc xor mov mov push push pop pop fistl dec mov out dec insb test in xchg je jne inc xchg (bad) hlt adc push mov cmpsl mov lods cmp and adc sbb in gs cs outsb push cmp xchg popa adc loop enter xchg mov gs push fstpl push or and xor rcrl push cmp fldenv out movb mov push arpl je push xor xor ret xchg sbb adc xchg dec or out lods into push sub and inc push pop and inc pop sbb aad rcl fcom shl (bad) cmpsb (bad) ret int3 data16 (bad) mov pop pop lret rcr scas mov js addr16 and leave or xor xor mov cmp adc fsub movsb loopne mov (bad) (bad) mov outsl pop insl pop dec jb dec sub cmp mov or lea lea cmpsb test push divl test jae cmpl xor push shrl and in xor xchg aad add scas mov (bad) mov jbe das gs inc jno push arpl js sbb and adc adc add scas jb mov inc js inc dec dec popa cmp xor jbe dec insb pop dec pop cmpsl pop mov cmpsl lods and test aaa cmp daa and sahf (bad) lret pushf fcmovbe pop push push pop sbb pop pop into push dec into inc (bad) sub enter inc cmpsb adc pop inc lds and pop daa adc push aam int push mov loop shlb scas movsl inc ss xor mov push aam rorb xchg inc push in mov dec mov int movsb xchg mov je data16 push xchg dec mov fwait and mov xchg lcall mov (bad) mov jb mov insb xor insb dec jo push xor mov push rorl dec outsl inc (bad) dec out mov inc ret mov andl nop cwtl jb xchg dec js push xor stos mov dec stos (bad) nop test je inc xchg pop mov adc mov xchg movsb mov pusha xchg mov inc inc jae inc dec je adc mov test xor adc sub or sub mov jbe adc sbb lds outsb fs mov mov jo push xor dec inc sub cmp sbb dec data16 or in sub out inc in das and adc sbb fmul xchg pop leave test inc leave xchg int mov roll mov outsl xor and aad (bad) into jmp sub push pop dec mov sbb and mov dec in xor inc and stos mov aad popf or or xor inc mov sub ljmp (bad) mov xor aaa dec push push xor into mov je inc cmp imul stos cltd int mov lods lret sub enter adc in aam inc movl lods adc loop into int3 mov xchg repnz xor mov mov out lods inc jne push inc insl dec dec dec push xor push dec ja xor bound aaa dec cmp js inc xor xor imul push (bad) mov ljmp ja shrl mov inc or pusha leave test or lods mov xchg pop pop inc add mov (bad) xor sahf aam test jo repnz shlb bound (bad) (bad) fmuls push jbe outsl dec inc cltd test cmp lea int call popa inc adc sub or in je stos or test push adc cmp mov bound jo nop aad push mov imul xor dec inc and cmp mov mov mov repnz fwait aam inc sub sbb repz xor mov inc sub adc cmp pushf loope fiaddl fimul push push xor jmp mov inc js js and push adc pusha lds dec cwtl mov test outsb test jo push jo lret andl mov and popf adc nop enter insb jo mov inc dec imul ja sbb sbb rorl lea test stos sub jno imul inc sub mov xchg movsl xor push fisttpll cmp out adc test enter int3 mov push dec ja xor xor mov xchg or jmp push in imul mov call jecxz aad push sbb and fildl mov movsb xchg fwait mov adc xchg aam aam xchg int push push and dec inc dec inc and movsb mov aaa sbb pop or sbb adc cwtl rclb pop pop cwtl dec fimul push or fsub lcall and mov je adc pushf push adc push test in xor and stos lods mov fstl fildl aaa push inc inc outsb dec jns jo fs (bad) push xchg xchg push xchg test push (bad) cmc je jbe xchg mov enter into sub arpl cmp adc mov inc cmp mov (bad) les (bad) test xchg mov int dec call adc out mov test cmp pop push es mov push in or dec sub ja dec inc and pop les adc enter repnz jb mov pusha push and mov stos leave jnp xor add fldenv leave in (bad) int dec xor les mov call fs ljmp (bad) ljmp (bad) lock (bad) lock push fmull outsb ljmp (bad) call insb bound aam loop loop ret mov xchg into loop int3 fsub lcall outsb ljmp ficom push push xchg call out (bad) loopne xchg xchg les shrb (bad) lret outsb call mov repnz cwtl lcall (bad) movsb in loopne loop xchg (bad) mov fsubr mov test xchg ljmp loopne hlt jb scas out cmpsb les bound outsb (bad) push push insb (bad) (bad) out insb sahf enter sahf mov xchg sahf (bad) hlt jo xchg jo (bad) out (bad) outsb push test cmpsb lods xchg int3 mov xchg cmpsb shrb pusha mov jb xchg (bad) mov faddp mov out loop rclb mov fadd (bad) nop out ficom xchg pushf pusha lret push pop in pusha (bad) rclb aam xchg lret pop cwtl bnd ret mov insb mov enter (bad) repnz fcmovu aam enterw lcall loopne mov movsb outsb call mov (bad) lcall pushf hlt mov (bad) outsb in call (bad) repnz (bad) xchg cmpsb in test ljmp cwtl xchg lock in stos enter (bad) xchg loop in bound bound aam xchg xchg rcr fimul (bad) sahf rolb loop xchg push (bad) sahf (bad) les les jb stos ljmp xchg xchg test mov (bad) xchg mov loopne enter rcrb outsb fs les faddp mov loop fs (bad) (bad) repnz jb (bad) int3 mov (bad) xchg cmpsb bound (bad) xchg (bad) xchg fdiv mov (bad) mov in in nop (bad) repnz mov cmpsb mov fiadd (bad) (bad) fsubr movb xchg repnz pusha (bad) lcall xchg cmpsb mov mov test cmpsb nop pushf (bad) enter les lret (bad) xchg pusha movsb mov (bad) jo pushf cwtl bound stos mov call hlt mov xchg data16 jb test (bad) lcall fidivl loopne pushf fsubr mov mov lcall out aam in (bad) sahf pusha lods jb sahf (bad) jo mov (bad) pushf cwtl in lock insb call lcall lcall (bad) out rcrb (bad) lock lcall (bad) mov stos out fs xchg loopne fsubl xchg pusha jo pusha (bad) xchg sahf rcr sahf in out loopne les loopne mov mov fsubs mov fisub (bad) outsb xchg xchg mov push mov mov enter xchg mov test mov xchg fsubrl (bad) mov test mov scas hlt xchg rcrb scas out test scas scas mov loopne mov test xchg test out into mov rclb pushf mov mov mov xchg pop ret mov sub mov cmp and mov adc xchg mov cmp and movsl sub mov sbb lods sbb xor lods xor mov and mov cmpsb mov cwtl sbb cmp sbb mov mov xor cmp mov sbb mov xor mov and mov daa cmp sub es movsl xor xor xor cmp mov and and mov lods and sub sbb stos fwait and mov sub pushf movsl daa mov sbb and mov test sub mov xor mov movsb mov and mov xor sub mov test mov and mov mov test mov xor xor mov xchg test sbb pop cmpsb cmp sub mov test and mov lcall ss xor cmpsb stos mov mov cmpsl sub mov int leave sub inc mov sarl imul and aad dec nop shll int fsts (bad) add les test mov xor add sub lods and cmp and in push aam loope imul loop inc adc mov pop adc xchg push or xchg cltd rclb push fstps cltd dec rcrb push push push mov fsts xchg int3 push xchg aad fcoml push fistl pop push adc adc sahf pop popf xchg adc or adc xchg test rorb (bad) mov push (bad) (bad) fsubr movb xchg inc push and and sub and xor mov sub stos mov rorl or insl or sub (bad) or mov sub lea in iret dec leave inc or sub (bad) test dec enter jmp leave int call dec or mov in out in dec cs inc or cs addr16 mov xchg xchg mov mov shrb push sahf dec pop fcompl dec (bad) lock movsb call mov call loop in push inc cmp cmp int3 inc dec dec into or or dec call xchg ret je mov jae ret xor adc es xor cmpsl mov xor xchg inc dec lret mov dec sub push dec insl and dec sub jmp dec or int sub dec mov mov pop aaa dec push das dec inc push imul sub nop enter movb (bad) je (bad) ss je test xor sub frstor (bad) movsl cwtl loope push xchg cwtl shl repnz test data16 pushf cwtl xchg pushf (bad) (bad) xchg fiadd mov ficom xchg push mov lcall xchg push inc arpl xor dec imul push xor dec inc dec popa imul dec outsw ja dec outsb das dec dec outsl jae push jp jp movsl cmp cmpsl cmp stos and cmpsl push sbb popf fisttpll insl outsl push dec inc js cmp sub cmp movsl cmp mov lods cmp mov fwait mov adc pop xchg insl data16 imul xor push and mov test push cmp stos stos adc test xchg sbb xor add sbb sbb mov push int pop popf or dec rol and inc or inc adc arpl xchg je cmpsl cmpsb ja jne inc mov les sub cmpsb cltd xchg gs adc popf and mov (bad) xor fnsave dec inc pop xor insl inc pop inc inc inc dec inc dec cmp insb push dec cmp push and jp dec adc lcall popa movsb mov inc mov add jns pop adc cltd inc and sub inc call loope or adc leave sbb adc or and add pop sub sub loope (bad) leave int mov gs xchg test dec outsl dec jo push aaa push insb adc (bad) ficomp fisub xchg xor aam xchg push sbb cmp sub int3 lods pusha test shr xchg mov (bad) fcomps nop enter lods ret adc int3 pop sbb push les push les xchg test out cmpsl push lods mov dec mov mov imul scas enter dec or or lods out inc or pop insb cltd sbb fxch add push sub xor xor cmp push das je push inc dec jae dec push data16 dec cltd popf mov int xchg xchg test xchg call (bad) bound push mov sbb inc daa jbe mov pushf frstor cmp fstl adc in jae jp jno inc inc push inc outsl push cmpsb daa stos cmp mov and mov cmp mov sub and mov and xor xor lcall enter add mov leave sub int3 enter mov mov inc rcrl xor inc andl push cmp mov data16 jb inc dec dec jo popa push push push inc push arpl sbb mov sub daa and sub cmpsl and xor mov outsl sub ss scas (bad) nop lcall popf adc lcall xchg adc fcomps push push push rclb rcr pop rcrl add fs movsl xchg xchg je xor test push jbe inc xor push pop push push or aam repnz insb ror ficom (bad) movsb and xor adc fwait or adc xchg fistpl aam icebp sbb mov scas xchg and or cmp sub loope pop movsl mov xchg fimull xlat (bad) shlb dec leave sbb lods (bad) push fdivl loop nop (bad) mov popa add leave clts in dec push or sub push inc pop bound and xchg dec xchg mov test push inc push push and adc push sub les sbb sub fcmove rcrl fcoml push adc lret bound inc lcall sub sub adc les arpl fs xchg stos push xchg test cmp stos inc jae ret mov adc imul in xor test fsubs inc les jp and inc imul sahf sahf adc jb cmpsl cmp stos cwtl xor and cmpsb jo and and adcl into inc es push sbb repnz xchg mov sub imul cmp es and and pushf loopne (bad) aam mov test nop ljmp xchg xor xor mov pop cmp ret lret sbb xchg pop add nop and lea or sbb stos and cmpsl dec (bad) out (bad) outsl repz mov mov movl dec enter xchg fsubr hlt hlt jo mov fidivl in loop mov lcall enter loop fisubl in mov xchg lcall jb in lock int3 bnd xchg jb fiadd call cwtl jo in ficomp test outsb movb (bad) test enter xchg loop loop (bad) (bad) out test fmuls (bad) fsub data16 fs mov hlt fsubrl mov (bad) xchg pushf call pop stos mov xchg mov xchg cmpsb insb (bad) nop lock lret rcl ficom test ljmp mov fnop cmpsb ljmp bound (bad) mov les mov lods (bad) mov lcall lock shr call lret lods mov pusha loopne (bad) xchg insb sahf aam mov (bad) fcoms cwtl repnz test (bad) mov (bad) test repnz call mov les ficoml mov mov nop pop int3 push (bad) fcoml push pusha mov mov mov repnz into test into xchg cmpsb (bad) lret xchg xchg pop int3 mov outsb push int3 (bad) sahf int3 loop ljmp (bad) xchg outsb fisubr nop into push xchg ljmp les xchg scas insb lock (bad) stos jo into in (bad) cwtl xchg (bad) mov (bad) mov push outsb ret xchg fmuls ficompl loop loop pusha les scas repnz ljmp mov test (bad) loopne (bad) mov xchg repnz (bad) rclb enter push push xchg push enter enter mov (bad) (bad) (bad) mov nop pushfw loop fcmovbe (bad) nop (bad) data16 scas movsb aam nop mov (bad) pusha into mov (bad) xchg xchg insb xchg xchg mov fimul rclb scas outsb mov out movsb (bad) mov mov sahf mov mov mov aam in (bad) xchg lods ljmp (bad) mov rclb xchg (bad) les mov mov movsb mov (bad) out mov int3 xchg sahf fmul out out into mov mov (bad) fs cmpsb enter bound lcall mov call into pop mov fcoms sahf mov (bad) (bad) xchg data16 call ret call shrb nop hlt sahf jo pusha out int3 push hlt (bad) nop hlt mov out fsubrp stos loop (bad) xchg xchg cmpsb mov hlt mov shl stos mov out insb pop (bad) mov mov fs ret (bad) xchg fcomp ret (bad) sahf hlt ljmp mov (bad) sahf cmpsb ret sahf cmpsb push loop (bad) xchg push pushf aam scas int3 enter (bad) loopne nop (bad) xchg push shlb xchg mov test lret push (bad) (bad) (bad) xchg les test into (bad) xchg mov lods mov mov jb call out test scas fcomp fisubl out xchg pop ret sub adc sbb (bad) fstps pop xchg push aam nop push push push or push adc pop dec adc dec or iret or sub iret daa push dec inc cs call push xchg or mov hlt mull mov xor inc and and movsl je imul mov mov or xor aam add loope leave imul sbb jmp cltd lds sbb sub or and fstl mov mov int enter sbb loope lds mov dec aad movsb aam loopne sahf xchg test scas mov push imul push dec sub test sub mov cmp sub mov xchg adc mov or adc push fmul xchg ficompl adc rcr ficom push dec adc xchg sbb xchg lcall dec pop adc push enter rolb aam test lcall xor loope inc lods roll stos mov mov repnz into test into xchg cmpsb (bad) lret mov mov (bad) xchg dec stos dec mov xchg xor xorl or xchg xchg scas insb lock (bad) stos jo into in mov jns inc inc jbe inc jno ret bound popa test add mov leave popa popf sub mov int fs ja addr16 push sbb dec gs stos insl outsb or movsb les push in je xchg xchg addr16 add repnz inc push jne xchg mov shll and cmp rol sub int lds outsb or movsl test ss jb sbb mov xchg lea push nop xchg adc dec call insl or movsl mov es divl push (bad) sbbl lret inc and sbb stos mov jno push addr16 xchg push sbb mov pop test xchg stos sub sbb adc sbb (bad) sub sub popf adc into (bad) fs cmpsb enter cmp dec jp popa push and mov sbb dec mov enter mov mov jb inc in adc push xchg inc inc aaa cmpsb xchg xchg je sarb mov pop shrb jmp mov adc out mov hlt mov jno arpl jae ss inc xor sub xchg ficoml rcrl fcoms xchg dec dec stos in test (bad) or push lds adc mov call and lods or movsb es ss inc xor mov fisttpll pop popa push inc inc js ss push inc push sbb cmp mov mov ss mov pop push push dec push xchg adc adc push xchg xchg mov pop adc rcrb pop dec adc xchg adc dec rcr push nop rclb push adc xchg ljmp dec insl xchg dec insb insl mov push inc xor dec sbb and mov sub sbb inc sub add and (bad) (bad) adc stos dec mov and xchg adc mov int3 nop out and dec and lods mov out out loop data16 out mov fs lcall aaa push jp ss jns outsb dec sub xor xor sub xchg mov popa xor leave int aad add lea jno aaa cmp mov sub loopne les mov lcall ret push cmp sbbl cwtl popf sbb xchg test test and xchg adc inc jb inc sbb sbb mov (bad) (bad) mov inc aaa xchg jbe sub stos cltd and sbb fcoms cmpsb stos shrb pop je jb mov sbb inc jecxz sbb and xchg push adc rcr jae xor and xchg mov xor ja jno jno push nop loope inc loopne imul or jmp fisub test cmp cmpsb fcmovbe int3 in push outsb xor inc xor jnp fwait mov pushf aam xchg in and and sarl aam sahf loop cwtl out out jbe cmp or loopne out cmpsb dec movsl fs xchg adc aaa popa xor stos shl ret fcompl xor jns insl jno inc inc xor cmpsl mov test lods fnsave inc sub test xchg and (bad) fs push push cmc add cmp bound arpl mov mov pop sbb jbe push xor cmp stos sub cmp xor mov test es imul mov sub jbe cmp inc inc sub cmp pop dec pop pop shll xor es lock es movsb push sbb shrl es xor add daa cmp (bad) aam leave inc cmp aaa and or das jne das inc dec adc pop sbb test cmp and pop fcmovnbe fcmovnbe rorl imul fs es mov sbb dec mov adc xor sub mov pop push popf xchg popf cwtl enter xchg rorl dec lods cs (bad) mov ja inc jecxz push imul addr16 addl mov into into movsb mov shrb gs xor dec jbe inc xor xchg (bad) push adc sbb and adc xchg mov mov inc jae mov cltd in cmp mov pop pop loop push jnp sbb fisttpll inc push and mov sbb push ficom and movsb mov mov icebp and rcll push pop push fldenv (bad) xor mov lods mov adc sub jb push cmp daa mov sbb pop lcall inc push lds int adc cwtl repnz and cmp mov das es data16 scas dec lea cmp fwait (bad) xor xchg xor mov push xchg or fcompl xchg push cmpsl inc and fwait pushf (bad) ficom push rcr xchg pop push fisttpll imul sub aad orl mov and fstps push ljmp insl xor stos popa mov fstl pop ficom add xchg adc dec dec in jp push xchg adc mov mov xchg xchg jmp cmp cmpsl xor or stos imul dec imul cwtl mov ret mov rcll or sub jecxz xchg jns lea scas lcall sbb push (bad) data16 push hlt cmc jl in mov mov aam jp jp adcl inc test adc mov gs movsl push les les aaa add je jbe test cmp test and adc sbb or popf adc in (bad) in fisubrl mov iret xor inc test dec dec jmp dec ret enter arpl mov cmp mov mov lcall jmp push lds es (bad) repnz push mov adc sub xchg xchg int3 sbb aad ror rcrl pop xchg pop rclb dec (bad) cmpsb test into fimull jae xor cmp sub or in mov sub inc ss insb cmp sub adc shlb mov adc mov subl push bound mov cmp or dec push inc (bad) and sarl and and jb jno and xor mov and or xchg lcall xorl or mov and or mov mov mov or test cmp mov stos ret mov rorl mov and cmp cmp mov mov or bound shrl adc pop stos arpl cmp fwait push mov push lret mov (bad) sub sbb sbb mov xchg stos bound or lcall xor xchg jb sub xchg pop jb sbb mov or xchg jb push sbb mov mov dec jns test cmp mov shlb push or inc xchg jae mov mov push (bad) sbb mov or xor and push or adc adc or dec ret mov bound or cmp xchg mov cmp sbb ret (bad) mov mov adc mov and mov xor sbb xor and jno rcl sub adc and pop xor jb adc and pop bound and sub pop sbb sbb mov sub xchg sub xchg arpl dec sarl sbb stos push lret and lret test or cmp fwait stos mov or leave fwait sbb xorl fwait dec stos mov stos push dec ret mov lret xor push xchg jp or pop mov mov jb dec pop sbb mov xor mov or inc mov lcall sbbl adc or or xor or xchg mov cmp xor push mov mov dec mov mov xchg mov roll stos ret dec lcall sbb push mov or jb mov mov or xchg cmp and mov xchg ret ret ret stos cmp cmp mov mov or pop ret sbb stos mov xchg sub ret mov sub sbb or cmp xchg popa lret cmp jnp dec mov ret mov lret ret mov rol cmp xorl cmp adc and mov sbb or or fwait stos mov test stos mov mov stos lret sbb cmp or adc cmp inc mov or mov mov shrl jp push mov xorl sbb jae mov jnp subl pop lret lret sbb or xchg dec jnp push mov inc cmp mov jp ret ror sub cmp or or jnp xchg push xchg push push xchg adc adc pop rcrb sbb dec int3 sbb rcrb lret fcoml pop rorl push rclb or push pop cltd rcrl adc mov sub inc dec inc push jno pop mov and cmp mov and daa mov fwait lcall and sbb lods cmp cmp fwait mov test sbb daa xor cmpsb cmp and xchg mov cmp dec pop pop pop fwait pop adc pushf (bad) rclb lcall (bad) lea dec ficomp aam push adc rcrl pop fcom push rcll push popf pop adc or dec push fcomps push ficoml push xchg mov xchg push fcoml rcl lcall dec push cs xchg xchg repz adc es pop adc (bad) movsl pop movsb inc aad adc test out inc movsl xchg ret ja adc push mov fs adc je push fs inc xchg test adc and inc xchg cmpsb xlat je in xchg test je adc dec and ret xchg mov cmp sbb ret (bad) mov mov jmp dec mov es out out stos sub dec les push adc inc jbe jae sub adc and pop xor jb adc and pop bound and sub pop sbb sbb mov sub xchg sub xchg arpl dec sarl sbb test push int lea mov enter push outsb stos mov call or movsb mov add mov mov ss push pop es adc jae aam xchg andl sbb dec fstl push (bad) push lds sub push int3 lret adc xorl xchg inc arpl jnp adc sbb mov bound add leave imul mov xchg bound cwtl shlb lods mov mov push test mov inc dec push inc arpl xor and daa and mov sub mov mov push js xor push imul ret popf cmp or and cmp mov xor enter call test insl sub push xchg out xchg adc ja adc fs repz je add inc adc push jae sbb mov imul (bad) call (bad) fsubrs mov ljmp push inc cmp adc adc mov repnz xchg dec xchg mov imul push push test cmpsl push mov xor shll fsub insb enter ljmp repnz xchg mov push movsl mov nop mov push lcall jno sub inc dec xor xor mov mov aaa mov movsl data16 xchg fs leave dec sbb or lock cwtl jo lcall push jno xor inc inc cmp cmpsb xor mov aad pop ficom xchg dec lea inc dec dec int dec enter push in xor inc dec xchg ret sub mov sahf pushf out shrb push jno mov inc inc pop adc mov mov push in data16 cmc xchg add and dec aam rorb xchg fsts lret fimull push dec mov out xchg movsb jno outsb dec adc movsl adc pop nop les int3 arpl movsl push xchg addr16 ss int3 rcrl dec push aaa xor xor cmp sub inc aam push cltd fldl or jbe in adc imul push stos pop push inc ret push or outsb inc lea adc jb inc xchg mov xor mov mov and xchg test inc inc xlat adc lret mov dec test popa pop inc or push into or cmpsb lret test mov cmpsb inc (bad) xlat cmp inc add adc and inc add sbb inc add inc leave push sub (bad) jmp addl adc jbe test xor mov cmp xor sbb and cmp mov leave lret loopne jmp mov mov test or orl mov mov lcall inc push mov sub ret mov or mov add cmp inc sub mov cwtl mov mov push movsb inc lcall gs lods xchg (bad) xchg push enter dec dec jb aaa pop insl push xchg mov aad mov pop or dec int call and inc xchg xchg xor mov fs test out stos mov int3 fimull sbb and arpl cmp push and ret ret pop push gs mov mov loope cmp cmp call stos sub sbb ljmp push push adc and inc lret cmp xchg pop mov push xor cmp xor sbb fstp push dec or push dec mov jo rorb rorl sub mov push xchg ret pop mov sbb mov inc jae (bad) in push and lods and and cmp jo xor pop lret sbb dec and mov jp xchg lods pusha fldcw xor jno cmp jb sbb push out aam jbe push inc xorl sub inc inc dec xor enter mov imull pop or adc (bad) xchg popf push add stos inc add xchg or rcll aam inc sbb aaa xor dec inc push (bad) jo push test fldl sbb (bad) ljmp mov inc inc inc and mov cmp xor jne out data16 dec enter fsts lcall xor pop stos push adc and mov cltd sbb and sbb mov rcrl inc lret and in inc js and mov fimul ficom fnop es test mov ret sub mov inc dec adc ret dec bound (bad) mov ret sub or pop adc xchg xchg or ret dec mov and sbb sub and imul pop xorl or inc inc mov xchg jno cmp imul mov jnp inc pop rorb push lcall push mov cmp mov dec mov adc cmp jae adc or lret cmp (bad) and cmp adc adc or xchg leave pop jnp or bound inc cmpl arpl arpl push jb or ret cmp inc jae or or xchg adc dec ret or lret adc jnp or sbb xchg lcall inc ret lcall mov xchg xchg ret inc or or or mov mov mov mov jae push jp mov dec (bad) mov xchg mov mov mov roll pop or stos push or mov mov inc jns pop sarl xchg or cmp cmp or sarl leave fwait mov or imul cmp adc adc mov xchg adc adc adc ret adc lret and arpl mov adc ret lret ret sbb inc xchg ret xchg mov stos or imul jns or jnp leave ret ret mov imul mov mov push shrl (bad) push sbb adc shll and mov xor sarl ror lcall inc popa sbbl lret or or jb xchg or imul or jp shrl rcrb sub xchg sub bound mov or inc fwait mov inc and pop xchg mov jae mov sbb cmp jb imul cltd pop or sbbl bound or orl jb fwait mov mov sbb jns mov fwait adc pop (bad) pop (bad) stos or mov mov jno or jnp sub leave mov (bad) or xor mov cltd mov cmp ret mov xchg or push or mov mov inc or sarl sub imul adc bound push mov pop lret ret or cmp subl jb or xor and and and xor popa xchg push push addl jb cmp and or dec ret mov xchg sbb mov lcall ret mov adc xor or pop mov fwait adc cmp or jnp lret jae and stos and or inc xchg mov mov adcl or push or mov sub cmpl xchg mov and mov xchg xorl and or mov mov dec test mov or push mov ret and push and adc sbbl stos adcl inc (bad) mov sbb push push or sbb fwait cmp addl lret or fwait mov jae stos mov push sbb inc jnp jnp cmp push push sub xchg xchg xchg mov or lcall jno or mov xchg lret mov inc mov sbb fwait ret or cmp ret or cmp or mov stos inc rorl stos mov fwait mov mov mov ret stos leave lcall lret jp or fwait xor fwait lcall mov jae ret cmp adc mov imul push jae mov sub or mov xchg xor dec or sbb or lret xchg mov xor (bad) or mov test sbb or mov dec dec ret or jno leave ret cmp mov rcrl sub stos mov adc lcall sub xor sbb xchg adc mov ret adc mov inc cmp jb arpl sbb arpl push sbb mov adc shrb andl sbb arpl orl bound jp or jno sbb cmp mov push sub and or sarb imul subl or mov mov sub cmp mov xor and mov movsl mov ss stos and xor mov xor stos xor cmp aaa stos ss lcall movsl xor cmp xor sub sbb mov mov stos sub mov and stos test sub and mov cmpsb mov test mov lods and stos and adc lret or sub dec test sub mov inc and inc test push or mov mov dec mov das or dec leave in or call dec dec mov or mov sub (bad) enter ljmp dec (bad) dec imul push (bad) sub outsb into inc inc or (bad) xchg into jmpw imul cmp dec dec dec jno imul insl pop insb dec push xor xor dec js inc inc jne popa gs imul dec dec xor das jbe jb popa inc push push xor adc jp leave fwait mov or imul cmp bound pop adc xchg adc adc adc ret adc lret and arpl mov adc ret leave push adc push les (bad) stos (bad) mov lcall in mov lock stos call jo hlt les mov mov push loopne xchg lock mov (bad) mov movsl bound xor jns inc inc outsl dec dec push pop inc dec inc inc inc ja inc push inc dec push xor dec outsb fs xor push push dec push push pop insl xor jbe inc dec data16 dec dec dec dec ss xor and dec adc sbb xchg push pop cltd adc pop xchg pop lret pusha push in add push and inc jae cltd mov (bad) cwtl xchg addr16 adc lds and mov mov push cmpsl push jbe add fs cmpsb push notb xchg repz arpl push repz jbe sub adc bound aad pop and sub adc roll cs imul dec in inc inc stos mov dec add (bad) jns dec push push dec jns dec pop inc movsl xor cmp sub adc ss lods and and stos and movsl sub cmp and sbb and fwait mov xor pop or or or add lea and sub mov mov sahf addr16 test aas xor mov lea dec (bad) int3 ficoml lret pusha pop mov push (bad) fisubrl in inc xor mov mov xor cmpsl cmp sbb adc mov or bound adc and adc fstl rcrl (bad) push adc nop int sbb rcr adc pop popf push dec push fistl fcompl push push fistpl or or repnz pop lods sbb mov test mov aaa and sub xor xor sub cmpsl cmp mov mov mov and mov lods and aaa test mov movsb test shlb cltd cmp shrl mov int add pop push adc (bad) enter daa or aad out data16 mov xchg xor adc fimul (bad) rolb gs imul inc push ja dec inc data16 ret mov inc xchg test ja xor cmp mov xchg sbb or leave mov mov in push inc data16 jp inc insl push push dec jns addr16 jb bound dec push inc je jno jbe mov or pop rcl dec jmp sub push vunpckhpd and in sub (bad) enter push movsl xor xor xor movsb cmp and cwtl dec (bad) push push xor sbb mov mov sahf nop sahf test lock test and mov adc fcompl mov push cwtl jmp push in lea sub or pop (bad) mov dec (bad) push adc pop add mov jo test repnz out xchg adc daa and mov mov and mov in cmpsb test stos dec dec sub (bad) outsb lea dec and test mov in and sub bound xchg sbb push (bad) ror aam push sahf pushf sbb lret fnop pop adc out mov ss inc add xor xor aad ror nop fisubr out xchg out in insb test inc movsb movsl inc cmp sub aad aam add pusha fs adc es inc je mov mov mov int3 loopne in mov xchg (bad) into insb mov mov xor mov and sub dec dec jp popf xchg dec loopne mov inc push in xchg movsb xor addr16 test daa mov mov sub sub inc aaa dec outsb gs inc push dec outsl popa dec push dec insb push outsb xor inc insb js adc sub (bad) sub imul sub and int jmp in aam or fs insb dec dec adc and mov mov dec in sahf into fs and nop dec dec test cmpsl rorl int3 push into push pop sbb shll ja outsl push push aaa jne je inc adc fwait or leavew and sahf bound hlt in fisubrl adc fwait rol fs es xorl es aaa inc jl push es dec enter dec dec sub inc push or (bad) sub sub dec and xor mov jnp adc fcompl xchg sbb xchg adc dec ror (bad) mov nop ljmp mov fs cmp inc or xchg and xor les ja inc sub adc lret pop lret push ret adc adc rclb lcall adc pop inc and imul lcall lret jnp pop xchg lret mov and and mov and (bad) fmull and xor adc push cmpsl or daa pop mov cltd (bad) lds push sub arpl jne sub fwait dec ja jb xor dec adc (bad) fstpl fs nop push enter xchg fsubl imul cmp data16 push (bad) in movsb scas addr16 andl aam pop xchg pop push out dec dec xor dec mov inc push xor cmp ret pushf flds and xor pop push push inc push and aam xor xor jne mov and cmp pop aas mov dec outsb sub or cltd test mov jb jbe insl adc pop sub scas das dec (bad) (bad) ljmp push push les rorl mov sbb pop fstps sbb loop pop adc adc nop xchg mov (bad) pushf mov pop enter (bad) mov (bad) bnd ss inc adc push xor notl (bad) mov fsubp (bad) inc aam dec push jp adc inc push fwait push dec mov lret (bad) ret in push rclb mov outsb xchg insb mov push xchg lret push into test fsubrs les test (bad) fcomps mov mov loopne mov data16 (bad) xchg cmpsb push scas (bad) fdivs in xchg mov stos in pop int3 mov ficompl (bad) lods mov mov mov into lcall out (bad) lock in into mov nop jb xchg stos pusha push rclb ljmp mov fmul (bad) (bad) lret jo jo mov xchg (bad) xchg xchg stos mov in (bad) insb rclb fs scas (bad) xchg in fiadd bound mov mov (bad) xchg data16 in lret mov xchg lods lods bound into (bad) ljmp xchg jb stos (bad) xchg test out out fadds push pop out sahf in (bad) call stos xchg mov nop out (bad) (bad) in cwtl insb ljmp fsub loopne lods pop mov loop (bad) fsubrl shl push pusha fisub out (bad) outsb mov stos fcoms (bad) aam insb pushf stos mov (bad) ficom (bad) out into in (bad) mov mov (bad) fnop mov xchg push test faddl mov ljmp mov mov fisubrl lret mov test lods (bad) (bad) fisubl loopne fsubs (bad) mov mov movsb in push mov jo mov (bad) hlt nop test fiadd pushf (bad) pusha out lcall lcall movsb test rolb mov lock movsb mov out mov xchg pushf xchg (bad) xchg pushf lock bnd in xchg mov lock push pop in pusha into (bad) mov aam into fmulp in into mov jo cmpsb enter out out (bad) ficompl fisubrl stos mov xchg ret enter out xchg out in scas (bad) call mov pusha pushf mov repnz mov repnz test out out (bad) push ljmp xchg (bad) mov in rclb (bad) mov fisubr fcomp mov out (bad) mov cmpsb call xchg in mov outsb out (bad) into pusha loop (bad) mov fcmovbe (bad) out (bad) into hlt ljmp (bad) out mov pop lret scas pushf out in mov jb ret xchg jo (bad) mov repnz repnz jb lret into movsb test faddl lcall mov (bad) loopne lods into (bad) scas mov xchg xchg enterw mov test lock mov pusha mov movsb mov lret stos (bad) sahf shr pop mov enter (bad) loopne mov (bad) repnz mov repnz (bad) xchg test pushaw enter (bad) out (bad) lock mov pusha (bad) scas aam mov movsb mov (bad) push in mov out cwtl out mov test rolb hlt (bad) xchg (bad) aam ret lcall mov test jo pop ret lea cwtl fstps rcrb pop popf mov adc lcall xchg cltd int lret fistl rcl (bad) or pop pushf or fisttpl rorb cwtl fwait adc push pop rcll push pushf push sbb push push aam push push int3 pop push pop push push dec enter ljmp push es mulb data16 movsl adc inc mov inc pop add xchg les mov adc adc ja mov mov jb and xchg pop cmp and lcall mov stos lcall or cmp and add jae or sub mov jns mov or inc xor or adc mov pop (bad) lcall cmp sbb pop (bad) mov sbb mov mov and pop and rorl adc or pop pop lds add aam dec cmp in push add int mov fisttpll fisubr in je popa dec jb dec inc insl dec ja insl je dec dec ss jno pop inc jae jo imul dec jno aaa sbb aaa cltd mov xchg pop adc rcrb int mov outsl dec gs push jb inc pop pop pop dec xor inc bound xor and mov mov mov mov mov sub push fisttpl or dec into or sub mov push push sub or add movsb mov stos bound xchg sub jns ret push mov inc mov mov cmp int3 (bad) xor shll dec je push inc inc pop cmp inc and mov push aam push push pop rcrb sbb xchg dec sub or daa or call in out (bad) or push popl in in into inc or (bad) daa or insb xchg es xchg push push push pop movsl adc lcall sbb fstps push mov pushf mov repnz mov repnz test out out (bad) push ljmp xchg and xchg inc xchg ret dec pop jae ret mov in mov push loopne out cmpsb call xchg in mov outsb out mov jno inc pop xor bound cmp xor lods and (bad) push rcrl xchg lret into push cwtl push nop push imul test ja jae es mov xchg sarl lcall mov and xor pop push fwait and jb mov push dec or dec push or lods dec movsb testb movb (bad) sbb ret sbb imul test gs inc xor push imul pop fs (bad) scas aam mov movsb mov mov cmpsb pushf mov mov test rolb movsl xor mov mov nop mov pop or mov push mov sub sbb cltd cmpsb cmp pop mov adc or sub sbb xor imul jb fisttpll test push rcll outsb ret scas aam ljmp mov xchg dec (bad) int3 sub dec insb sub hlt mov notb xlat push mov ja and and lcall or sub jns pop sbb xor and push mov mov mov mov and test jb mov xchg xchg fcoml adc sub in cmpsl push call push push mov adc push xchg add adc xorl ret push lds and adc xchg mov (bad) mov addr16 push cmp pop jo inc dec dec push push jo sub movsb mov and mov lea or xchg push les mov dec ja dec inc push pop push movsl adc adc or aam rorl lret mov lret stos stos test mov xchg les in jne push test xor sbb stos sbb mov push pop adc cltd rorl test out les test mull xor pushf mov adc sbb push pop push push popf push mov pop sbb fwait pop aad ficoml arpl cmp sub mov and popf pushf mov dec and mov ror or sub add and inc mov adc shl call and mov imul enter lods inc ja push adc sub and push rorb movsl xor les and mov adc jmp inc push xchg mov xor cltd sbb jmp in pop mov push lea inc daa xchg addr16 es rorl push mov lret (bad) mov arpl xor sbb and sbb fstpl xor xchg mov mov adc mov fwait ret jns sub shrl push lds mov cs inc aaa dec jne int3 lock aam mov mov pop inc dec jp jbe push inc int3 mov loopne fs sub sub test pushf int3 xchg sub int3 ret xchg push inc and sbb mov or ljmp cmpsb push ss in xlat xorl (bad) sub stos cmpsb nop (bad) lds movsb data16 mov mov inc cmp push pop pop mov sub sbb or and cltd sbb xchg dec (bad) or nop rorl imul imul mov dec jns pop pop push adc add sub dec and cmp xor jo (bad) mov and mov das push inc inc aaa pushw cmp sub mov dec push adc je mov imul insb mov int push pop adc lcall mov push adcl stos fwait xor mov repnz in scas out push cmp jno inc inc insb insl inc xor xor xchg jns mov mov mov test orb jbe inc jp mov gs adc lret ljmp or dec and andl push or push sub mov les jae and aad popa xor dec mov dec inc wbinvd lret cmovp popa mov ret lea lea pop sbb inc insb jne ja bound mov sub xchg sub shr outsl ja dec dec push jbe cmp cmp or loop xor rcll ja mov xchg mov adc sbb sub addr16 loop mov mov or pop pop cwtl popf adc pop ficom movsb jne xor sbb enter mov mov xchg (bad) mov call test es lcall pusha shl call push xchg inc int call cwtl shrb repnz enter mov lods or fwait or push mov adc push fstps adc enter or es ss movsb in lds in shr enter sub add and ret or jp pop dec push les push inc cmp dec and rclb in inc notb add mov mov mov inc cmp mov mov jo nop into inc xor xchg test ficompl push (bad) out mov pop xchg adc mov rolb daa xchg cmp out addr16 hlt in sahf les ret popf pop in inc push jo or fadd imul sub insl insl out call lods lods into push insl out imul out test sub dec mov push or push (bad) dec (bad) in stos dec cs in int imul cmpsb sub dec push mov test sub (bad) sub dec outsb sub sub dec insl push or call das sub cs ljmp int3 dec mov jmp lods dec into int sub lds int dec or sub mov or dec sub inc mov inc call sub imul sub ljmp cs call jmp dec in into stos sub inc imul mov dec push cmpsb jmp dec sub leave or push sub inc in sub enter insl push call (bad) cmovle test scas dec out into push leave int dec or sub stos data16 jmp into call dec dec dec lret push scas push call lea dec cmpsb mov call dec dec leave xchg or mov or leave scas dec call sub or in dec es sub mov xchg es mov push push int3 sub lods or int cs out scas inc insl inc lods call lods in (bad) lods call ljmp push sub xchg jmp call sub scas lods dec int cmpsl sub push mov imul pushw dec dec cs sub pop or sub into in push enter lret push sub dec sub in or cmpsb stos lret sub sub dec dec test lods mov dec dec movsl push test dec lea mov mov sub test insl dec scas push in mov sub dec sub mov sub (bad) sub stos inc out or enter imul es mov outsb or cs das dec mov or ljmp in (bad) lea sub sub scas out jmp call insb outsb int popl test das or or insl lret push in stos lea es mov in push xchg ljmp inc ljmp out imul scas leave dec sub scas in dec cs sub movsl outsb into inc dec outsb or or xchg out dec sub enter es insb cmpsb outsb cs dec es or or push dec in int sub sub push mov dec sub jmp push sub dec sub push or push int3 mov pop or or sub test or cmpsb sub imul lods mov sub in or call sub dec dec sub scas stos dec dec dec jmp push sub stos out cs call dec mov push stos out call leave in lea leave lret or mov stos das cs int3 call test cs dec call out sub enter imul in in sub dec enter sub out cs sub mov sub in test sub add mov sub mov sub insl insl out call lods lods into push insl out imul out test sub dec mov push or push (bad) dec (bad) in stos dec cs in int imul cmpsb sub dec push mov test sub (bad) sub dec outsb sub sub dec insl push or call das sub cs ljmp int3 xor cmp xchg mov mov ret cmp ret push shll or or xchg mov stos ret or and lret push mov jp mov lret mov mov jp push cmp lret pop jb push sub sub mov and arpl or fwait mov and ret sub sbb jo cwtl lock in mov hlt sahf in loopne pushf fsubl (bad) mov cwtl pushf (bad) fsubr mov xchg mov pop mov ljmp mov stos and mov or leave scas dec call sub or in dec es sub ret mov mov stos pop inc lods fidiv fsubrp in aam fiadd into fcompl push (bad) (bad) (bad) push mov lret sub sub lods sub lods cmp pushf mov lods xor xor and imul pushw dec dec cs sub add dec xchg popf fimull xchg sbb dec xchg xchg popf push nop push cltd ficoml dec push xchg dec push pop adc adc or pop push nop cltd push push pop adc xchg dec aam bound xor jno push push rcr xchg inc enter xor leave add add cmp pop dec out push leave fwait bound pop (bad) mov xchg lret shlb xor test test int3 push jb test test fadd cwtl test and mov xor mov outsb int popl test ret and inc sbb and adc lods out lret push xor sbb stos and sub push mov jae imul cmpsb lcall pushf ljmp inc in sub shrl imul jno dec es or or inc push push jnp arpl lret mov (bad) loopne movsb test cmpsl cmp pop cltd stos sub lods and daa or push and rol (bad) xchg mov stos mov xchg mov mov lods mov mov and or push bound pop dec inc adc pop xchg or xchg aad int dec (bad) push (bad) lea stos mov stos mov sbb mov sub daa sub ss cltd cmp dec test push xchg cmp inc or mov and imul push dec dec ja popa inc inc jbe js popa inc push jns inc push inc jo push inc xor inc pop xor xor dec inc inc pop popa dec xor mov sub inc mov push cmp jae rcrl xor cmp fimull cwtl (bad) into test test pushf mov mov push sub (bad) cmpsl push lea aaa dec dec and mov pushf cwtl jb loop inc nop pop or cltd sbb adc popf sbb rcrl and xor cmp lds adc push data16 fs push adc data16 and es test add xor push mov xor test pop pop lea or lods mov leave rcr push sbb inc dec cmp je pop ja inc xor xchg nop rclb fistpl ror and xchg and xchg pop inc inc insl enter mov pop mov adc fmuls xchg fsts jns dec or xor xchg xchg dec push rcl sbb push nop dec adc xchg push xchg push xchg dec mov mov mov daa xchg es test gs sbb xor lods push mov push mov (bad) and adc lea addr16 jne ret push xor and jmp lret push inc mov popf or test xchg add inc jbe adc push pop or lret rcl pop push push int3 rorb scas hlt xchg insl ljmp bound sbb jno xchg jno rcll dec out fmul inc mov inc xchg add sbb test or cmp or gs jbe dec je xor sbb sbb sbb nop movsl ja xor xor push xchg and sub adc jmp sbb mov mov stos dec mov addr16 dec (bad) dec outsb bound adc adc ficomp stos call mulb and xor fs xchg movsl push xor repz out adc xchg test test and dec dec fs push push in sub sbb inc push ffree xor jns jns push dec adc mov ja mov insb int int3 call ror sbb inc mov or pop mov lret repnz test and cmp mov fldcw sub inc aam jmp xor loope adc xor inc xor push inc push (bad) xor mov scas dec sub push arpl je dec imul ja outsb dec je xor sub adc rcl push and adc ret mov aad mov push adc adc loop lret inc push adc adc rcrl and xchg and cwtl fimull jo test stos mov sub mov fs or sbb and xchg adc mov pop les les push test adc sbb add push lods outsb lret dec sbb stos push xchg sbb push dec xchg or fsub adc pop movsb and mov sub lods add or jnp xchg or xchg adc jbe jb jns cwtl rcr int mov xorl sub arpl mov cwtl mov cltd sub sbb dec pusha enter insl xor push and rcrb xchg je out adc mov movsl mov in add out call mov sbb push test test ss mov mov dec sub sub mov mov xor (bad) mov sbb (bad) xchg jp lods (bad) bound mov test movsl mov xchg mov mov sub or sub push pop cwtl fisttpll fldl insl inc outsl push dec push mov cwtl dec dec mov or inc rcrl rorl push pop push arpl adc dec lret adc stos and or xor outsl push inc xchg push cmpsb stc sbb out mov and inc push lds and es jns cmp inc and stos lret xor cwtl ljmp stos and arpl fnstcw sbb xor push in xchg and ror sbb mov mov popf push nop xchg data16 adc xchg fsub push cmpsb repnz and rol push adc xchg adc sub mov or lcall movsb push gs push cwtl shl adc in or inc dec adc lea dec inc or pop rorb mov test lcall mov mov lcall (bad) mov inc mov pop (bad) lcall mov out sub adc dec inc or inc jb gs outsb pop dec mov or dec or mov pop popa sbb mov test insl dec imul lret imul movl or insl scas or dec dec insb sub call in sub ljmp xchg call push outsb (bad) insl sub or addr16 stos dec sub dec (bad) enter or or or (bad) lods push test insb lea in (bad) dec or imul sub in sub dec or sub mov test dec sub push jmp dec sub dec popl push lods sub lea xchg or dec imul or sub sub lods mov dec dec or lret sub call pop or in dec push leave outsb out dec test jmp out mov push in or call push sub or in in ljmp test push call movsl data16 cmpsb jmp or out int3 out lods dec (bad) lods stos push sub or call mov sub insl cs or or jmp sub in into enter insb into lret dec scas dec inc push mov test or out dec movl push sub or mov jmp lods sub enter sub test or out push sub test sub add sub imul into add scas es push test das dec enterw dec mov jmp push sub imul inc inc outsb xchg test dec ljmp inc dec test es mov sub sub push into lret test out insb mov lods call mov lds leave xchg sub sub pop sub mov push or push daa add lret sub ljmp sub cmpsl add dec dec call lds dec stos dec test test movsl outsl inc mov jmp sub enter sub mov and or push mov push out out or mov lods push test or imul mov dec out es in or or mov dec cmpsb mov sub xchg mov es cs inc imul test gs outsb dec outsl femms mov sub daa es dec push jmp dec dec mov insb in lds enter push in cs lret test imul mov sub lods push sub (bad) movsl imul lret out es sub sub or imul sub insb enter or out push push test mov dec push sub mov lods stos dec out push enter call sub call sub lods int3 out and int3 lods out or call dec mov call push test stos sub leave push mov call lods leave or sub mov call mov mov int scas call movl or insl scas or dec dec insb sub call in sub ljmp xchg call push outsb (bad) insl sub or addr16 stos dec sub dec (bad) enter or or or (bad) lods push test insb lea in (bad) dec or imul sub in sub dec or adc jp adc push or cmpl or mov (bad) stos dec adc nop cwtl jo xchg hlt (bad) pushf (bad) xchg mov (bad) bnd mov sub and movsl cmp mov stos stos and cmpsl lods xchg cltd mov xchg lods and mov mov sub mov xchg fwait xchg xchg test test push call movsl data16 cmpsb jmp or (bad) mov stos push jno sub imul xchg nop pop pop fst adc les xchg push test add test push in in fnstsw int fldcw jmp push add pop loopne out jno fs adc dec aaa pop insl popa gs inc inc sbb push int sahf dec adc xchg xchg ficompl push sbb push adc out cmp cmpsl and pop mov int push test rcrb mov mov shlb mov (bad) (bad) xchg jb sub mov and dec dec ljmp inc dec push mov mov mov into push lods lods in test mov mov cmp mov adc or sub adc lods test adc xor das push push dec jbe dec inc lcall sbb push test fisubl cmc movsb cmpsb je fmul sbb adc jp push outsb xor ljmp cs and or push mov fsub cmp inc outsb xor dec ss je xor dec dec addr16 xor jns mov popa inc sub dec push push xor xchg dec adc fsts adc push xlat data16 xchg lds mov and xchg jne and les dec int3 lods (bad) leave sub imul bound dec or xchg popf sbb loop cmpsl fs repz fsub popf test or rcll rol add lods aad push and arpl mov xchg movsl xchg xchg xor adc enter lds or int and or sbb aad xor adc mov cmp mov dec test sbb stos mov mov into repnz mov inc sbb xchg fnop dec xchg fsts push adc adc movsl ja xchg adc sub adc lea or movsl adc sub inc adc xor add fisttpll mov iret or gs inc insb inc adc fst rclb popf rolb xchg aaa mov aam ljmp mov insb sahf mov mov cmp daa mov sbb mov dec int or loop cltd subl or imul xchg lcall cltd int3 mov imul jae mov xchg lcall test movsl mov mov es push lret push daa adc es xor xchg dec lods rorb push jns das jbe fwait dec sbb push adc nop push (bad) lock push pop popf adc jmp add sub push lret jae push lret xchg adc (bad) adc pop or test sbb lods mov lods xchg mov test imul cltd fcompl (bad) les sbb adc or dec dec ret xor dec adc pop stos repnz nop pop mov and cmp mov mov mov push mov leave int push inc or addl ficomp sbb jmp aam cmp inc dec dec sub je pop inc sbb int push ret imul adc lret mov cwtl daa pop mov es (bad) hlt aaa adc pushf sbb fldcw imul xor ss push es xor aaa sub int rorb repnz mov test je ss pop adc cmpsb fistl stos popa xchg mov push sahf adc mov rorl dec mov jb jno loope or push xor push pop push je xchg xchg push xchg push dec xchg dec sbb enter mov jae cmp and jmp inc or cmpsl and push push adc lea insl dec pop adc mov and sbb xor cmp mov cwtl inc out and lods inc (bad) push xor int lods int lods push push dec and sarl sbb mov in in lods leave sub lods dec push insl (bad) cmovle mov sbb ret jbe inc inc dec inc dec inc pop inc xor xchg cmp nop ficom (bad) out inc push push fs hlt sub xor pop mov sbb mov int insb lret fmull popf rclb sbb nop cmpsl inc push and and in cmp adc lods cmp mov mov mov xor sub cs add insb adc lea adc inc xor adc stos ficompl test lods test xchg mov xchg xor xchg push ret sbb stos and scas mov mov dec cs dec in bound adc jb pop ja mov adc xor inc pop cmp xor xor pop sub sub mov pop pushf enter dec xor aaa inc xchg or adc xchg xchg adc fs add je mov xor inc popf dec fstpl push adc push pop test fs adc push xchg push leave sarl cltd sbb mov jbe push inc data16 je (bad) sub or fwait xor mov aad xchg mov mov int3 fiadd mov adc mov push adc mov test pusha fisubrl (bad) push movsb xchg inc bound test sub pop sub or mov or xor jp dec push cmp dec rcrl (bad) xor mov and add and (bad) hlt sub mov lods mov xor pop cmp imul push rcll inc sub ficomp shlb xchg test jne sub (bad) mov fcomp lds pop dec push push fs gs imul test inc es in leave test shlb mov mov and adc insb ljmp test and mov into mov enter test add int cmp jae inc data16 push dec push xchg push fwait mov sahf or out enter and hlt sub cmp int mov test fs push inc push inc xchg adc adc sbb nop cwtl push jg int imul data16 push and mov fisttpll ss inc xor xor xchg adc rcrb inc movsb jecxz sub fisubl les dec push mov lret test adc mov sarl mov and cltd (bad) aam adc gs lcall (bad) cmpsb xchg jae addr16 movsl xchg push les pop or or lret dec lret imul mov pop mov in (bad) jmp adc lds or test cmp mov lret or out test jbe mov ss xor push inc xchg push rcrb or dec mov fisubl cmp call call push in (bad) jl add adc xchg inc lcall push sbb ret xchg sub or adc adc mov out (bad) data16 enter xchg and mov or loope inc or and dec leave mov sub jno cltd or jno addr16 jbe call int3 and dec adc test and push xchg cltd int3 or stos mov push rcrl sub stos cmp cmp xor cmp shlb movsb cmpsb divl xor sub mov inc xchg xchg inc inc and dec inc xor sub mov lods lods cwtl mov and outsb test mov sub xor loope lea sbb pop jae push pop ret sub adc cwtl dec or pushf int3 faddl xor add adc add in cmp add movsl mov xor mov leave movsl inc add aad dec sbb adc dec movsl cmp popf add inc mov add dec dec pushf leave loopne xor fnsave dec and aad enter cmp shll pop mov lea test and mov lods adc mov pushf mov fcom xor sub sub loope enter inc add fstpl loope popf mov test mov xor or and mov and jmp dec add mov aad xor dec adc xor enter xchg test shrl add (bad) imul dec inc and add leave or add dec in cltd pusha in add sub gs dec loope popf xor movsb rorl fisttpll lds in and mov test add and mov sbb cmp lods add push loope lods dec test or lods sbb gs inc add mov mov add mov push xor mov enter leave lea aad fstp fmul int xor dec lods imul popf cmp add push pop lods inc pop ret cmp and sbb cmpsb cmp sbb cmpsl ss cmpsb mov mov xor mov aaa test xchg mov xor mov sbb stos and test sbb xor sub cmp xor mov cmp cmpsb movsl xor cmp sub cmp sbb cmpsl stos xor mov daa sub movsb xor xor mov sbb test daa cmp cmpsb mov and sbb and sbb mov sub mov cmp pushf and xchg lods cmpsb mov sub test movsb and and cltd and cmp mov cmp int into out dec (bad) stos dec scas sub dec scas dec push jmp mov cmp push pop inc jp dec jo dec gs push dec dec pop jae imul xor imul gs dec push push cmp pop cmp pop dec jo insl jp jo dec xor js addr16 dec imul push aaa inc xor jns dec insb jbe das arpl pop js xor dec xor inc bound inc dec js inc dec insl inc inc push dec imul insl xor inc dec movsb adc sub xor sub cmp xor xor xor stos ss mov and sub or dec dec or out scas cs out out leave cmpsb dec insl imul das dec data16 lret cs bound xor mov mov sbb sbb cmp sbb shrl sub imul dec dec dec ja jno das das je jo and ret or adc lcall and sub cmp jp push fwait (bad) push xor test push lret xor dec push jns mov imul push or lret push in xchg jb mov (bad) in movsb in enter cmp and mov mov xor pop (bad) mov push push mov imul push (bad) pop mov adc jns xor and mov cltd mov sub mov mov inc inc insb js and jnp xor dec mov sub insl out sub leave dec es int scas and dec inc jns sbbl test adc push (bad) jnp inc cmpl fcmovbe rcrb addr16 aam mov out addr16 in gs fwait stos cmp sub pop sub popf adc mov rcrl or sub inc push sub xor cmp in nop mov mov int3 rcl push nop xchg test cmpsb mov stos xor inc imul orb daa xchg xchg cmpsl adc je fs xchg inc inc (bad) mov aam xchg repz mov mull movsb mov and adc mov inc (bad) (bad) addr16 in jae xor and jbe (bad) adc movsl adc inc cmpsb lds test mov mov and int (bad) dec push dec push bound push addr16 xor push mov int3 mov movl imul dec dec dec jmp mov test dec xchg sub sub (bad) sub and inc push dec and push or outsb mov mov sahf test aad and cmp or sub cmp inc pop frstor sbb xchg int3 leave mov and subl or fmul xchg sub stos gs and int in push mov dec test sub jmp xor and cwtl enter mov xor outsl jno dec xor bound jno xor je aad enter inc jne xor jp adcl aam bound dec inc push push bound gs bound xor inc dec cltd mov pop pop adc mov mov test sub ljmp insb jp mov or mov inc mov jp push leave mov lcall dec inc cmp ja jne xor dec insl pop imul push xor xor xor sbb push xchg fmull aad lea pushf (bad) pop or adc or ficompl insb lcall mov lea sub cmp lods in sub dec add imul mov rclb xchg or mov sbb lret int (bad) push cwtl mov pop or das jbe cmp jae pop (bad) push lret mov sub mov (bad) int gs sbb mov arpl xchg push aaa dec inc mov dec mov adc gs rol popa adc push adc daa data16 push daa inc adc push ss data16 cmpsl adc cmpsl xchg add lods movsl push in cltd add lds rcrl movsl add loope add lea push or pop adc mov (bad) pop push dec cmpsb mov sahf mov cmp shrl push xchg imul cs mov jb outsb (bad) fiadd mov out je arpl adc fstl add mov inc je and test dec pop xor jae xor sbbl dec (bad) push lret adc nop (bad) mov mov or sub test test dec xor (bad) mulb notb je hlt movsb out and push arpl sub pushf xor int add mov fldcw nop nop retw repnz repnz xchg sub aad test push test or jmp cmp mov adc insb dec es ja jno adc fwait or repnz scas aam into repnz enter xchg xchg pusha mov outsb mov stos gs xchg and popa mov inc push and xor (bad) adc int3 push or ficompl adc cmp dec vshufps outsb pop xor pop dec pop jns mov pop sahf adc lods test in inc push push add out inc inc es popa cmp dec mov sub fnstsw push lods ror dec lea ret adc mov dec dec push inc addr16 aaa inc fs int3 data16 mov push and pop mov mov int and fsts imul xchg insb int daa sub and adc mov sbb pop pop or (bad) dec popf push sbb into pusha call je inc mov xchg addr16 divl cmp sbb aam fmul adc rclb sbb adc pop int in daa fs push inc xchg daa add and mov sbb mov lods ss jecxz popa pop push sbb dec dec dec inc pop adc adc adc adc or stos ret mov and push and pop stc xchg cltd pushf fistl dec push int cltd fisubrl or into dec stos xchg mov lret pop or (bad) xchg ror scas xchg nop cmpsb stos test pusha es push dec fstl inc mov and mov bound ja loopne lods fsubrl xor adcl adc mov movsb loop cmp insb ja gs push push dec ja push dec pop pop dec push dec dec ja jo imul push inc dec jbe and and mov xor mov orl bound into test loop lret cmp ret cmp or rorl mov jb or lcall and rcrl or sub mov mov and pop or ret mov dec test leave mov xor jae or xchg arpl inc mov mov inc (bad) lcall or pop mov inc arpl mov jno mov arpl fwait stos and or stos sbb ret xchg mov sbb and or sarl mov or adc xchg jae xchg push fwait mov and mov or pop push mov imul or mov mov adc push or xor pop xor jae xor add popa jnp mov adc and mov mov adc cmp pop and mov or pop lret pop rorb xorl ret lcall or pop ret test sub dec push cltd pop and sub mov shrl or jb mov adc push jnp or cmp mov shll mov mov sub jp arpl adc sbb arpl dec mov mov inc mov cmp dec dec mov or xor stos mov or dec dec sub cmp lcall sbb and jae or and adc cltd xchg or xchg fwait stos fwait sbb xor xchg or and jnp inc stos mov pop pop stos adc mov pop mov and lret sbb sub xchg sub dec mov mov mov mov cltd mov inc mov cmp xor stos pop mov mov dec test jp push bound mov pop pop mov mov ret push xor or dec or jnp cltd mov inc (bad) lcall lret jp inc mov sbbl inc lcall cmpl (bad) and or jb mov mov mov dec adc sub mov lret jp push pop lcall xor or mov imul sbb lret lcall mov rorb or mov mov mov jp lret xor push jnp ret mov imul and dec or xchg pop (bad) push bound xor mov jb mov sbb stos sub mov lret popa xchg fwait mov dec mov mov xchg lcall ret and pop (bad) stos or sub xor ret sbb xchg (bad) adc imul mov sbb pop stos mov or cmp cmp pop mov mov cmp jae mov imul inc cmp or ret xchg stos or or pop ret movsb sub and test ss and mov mov mov adc lods sub sub test lods sub sbb sbb xor lcall and and mov cltd sub movsb sub mov sub cmp and cmpsl sbb sub sbb adc cmpsl mov sbb sub cwtl cmpsl and mov and test and daa sub mov xor cmp sbb and sub and sbb add sub cltd enter mov cltd cwtl shl lds add aam dec sbb pop pop add xchg cltd lods rcr and or lds imul imul test sub sbb int fldl shrb lods loope rcrl adc mov or sub stos leave push or dec sub lret or or dec inc sub sub dec dec inc dec dec mov outsb sub into mov stos push sub dec push dec push (bad) in or call enter dec jmp sub jmp lret inc gs and lret or mov or lret push sbb and jae adc ret mov (bad) fcmove mov mov mov mov xchg jae and jne xchg je inc xor xchg xchg push divb je aaa movsb mov push and xor xchg sub sub cltd mov inc mov xor mov stos pop mov mov dec test jp push bound mov pop pop mov or fcoml or repnz nop xchg hlt out xchg inc mov inc cmp popa stos lret jp inc mov sbbl inc cltd pushf adc int or add lds inc jae xchg aam inc movsb ja xchg and fwait cmp mov and and cmp sub xchg or imul (bad) out sub push cmpsb xchg adc cmpsl inc inc jne inc xor and addl aam mulb sub leave movsb rclb xchg insb int3 nop pushf (bad) loopne lods lods fsubl (bad) stos loop (bad) bound call in rclb push xchg insb jb inc push arpl cmp dec jp (bad) lods and fsub and or inc in aaa add xor pop adc rcrl push adc fcmovu push ficom pusha mov aaa xor data16 dec inc cmp inc js pop push jne sahf lcall lock xchg lcall xchg jne test sbb movsl sub sub and stos fwait test fwait sub stos sub cltd xor mov test mov and cmp sbb cmp fstl and je test xchg adc cmpsb and inc arpl add ret push xchg add cmc xchg cmpsb xchg data16 mov add inc test push (bad) gs xchg cmpsl je movl je xchg cmpsb test cmpsb ss push push mov mov jb mov and xchg (bad) lret mov cwtl ljmp jae push popa jb jno inc push xor bound xchg cmpsl and loope dec dec cmpsb outsb jae arpl adc dec push push sbb (bad) (bad) xor test adc xor or je cmc push xchg test cmp leave call inc inc addr16 adc sbb mov ror push nop out xchg pop ljmp mov mov faddp nop mov cmpsb es and mov sbb rcll cwtl sar lcall mov inc inc in movsb inc les movsb hlt adc and mov cmp mov mov cmp test mov fwait cltd lods sbb and mov cmp or dec or mov dec call popa rcrl popa mov adc sbb cmovge dec mov push inc daa push ret adc adc inc inc addr16 adc jbe ja push addl lret dec mov jge movsl mov (bad) outsb enter inc jp push inc ja xchg push in push mov pushf movsl sub mov sbb xor dec adc mov mov or sbb fiaddl lock int3 in nop pusha int3 data16 das push dec dec jae dec dec jbe dec cmp inc ss cmp movsl sbb cmpsl sub push push fcoml sbb inc addr16 je and xchg add sbb cwtl pop test xor dec push and push dec or nop mov inc inc movsl jbe sbb mov test xchg pushf in mov push fisub xchg rep ss cmp movsb and lcall mov mov xor and mov inc and aad or dec xor pop sbb mov or mov sbb mov nop repnz fnop push lods sub xlat add xchg stos and mov sbb movsb and mov mov nop aad cmp test push sub pop mov test (bad) into repnz cmp dec rcll adc mov xchg int3 sbb adc (bad) loop and roll in cs int3 push mov test lcall mov jnp xchg fisubl jns adc bnd mov or dec mov imul out or inc sub mov push push inc insb dec adc fwait and sarl lcall adc mov lock jbe adc ss and stos movsl lods cmp hlt hlt cmpsb cmc adc mov sbb fcmovbe (bad) adc adc xchg fs xor xchg sbb and pop sub xchg xor popf xchg nop movsb sahf test (bad) xchg mov push mov ljmp xchg lods pop fsub and mov fwait mov mov sub mov or push xchg bound cltd xchg dec adc fistpl ret or adc sub mov and inc and les push popf sub push sub call mov int xchg inc inc inc push push xor mov sbb roll loope lods sub push dec jo cmp sarl mov xor fmull aaa jb bound cmovge test aaa dec push push push xor push data16 cmp xchg popf rcrb push push or adc pop sbb mov cwtl lea dec mov xchg rolb adc ss inc xor popf adc or inc imul rol push adc mov pop int dec push push mov adc and mov notb sbb dec fisub ret enter out cmp adc lock movsb and and movsl xchg cmp sub sub inc scas or lret sub mov imul scas push in mov push es imul mov call lods outsb lods xchg test call clts in in scas call movsl insl lret insb out sub or or call sub addr16 sub push ljmp insl (bad) in into scas outsb dec stos sub (bad) out or mov push or push enter enter test (bad) dec dec lret das push stos sub test int3 sub sub or cs stos int push test sub call stos sub sub lods or in lods dec or sub dec popl call sub add imul stos sub lds cmpsb in mov sub sub dec ljmp sub int3 lret push mov outsb sub mov stos sub test sub or sub sub push test enter mov das dec enter es insb insl dec es or (bad) mov int3 sub in sub sub sub sub or dec sub ljmp dec inc call push lea sub dec lods in (bad) enter sub iret dec cmpsb outsb push test sub dec lea or sub enter dec int sub dec stos int push es sub cmpsl sub mov mov scas dec sub sub mov movsl ljmp or sub insb stos dec cs sub test dec cs call in or sub sub dec jmp sub mov or lds push xchg call or dec sub sub or ljmp lods scas cmpsb mov dec out sub outsl daa sub test outsl dec jmp mov sub sub inc test or sub call dec sub es (bad) or insl or ljmp xchg das es (bad) dec lea cs xchg ljmp stos inc out push mov or test mov cs cmpsl or mov push das sub dec outsb into lods mov push into scas cs mov leave sub dec stos cmpsb sub push enter enter leave out out mov (bad) call inc lods mov or pop push insb into into out or push lods sub inc in sub and dec sub push test sub sub stos dec sub push sub mov dec or or imul sub lods (bad) or int call dec lret or push into xchg inc mov or iret (bad) push dec dec dec leave lret sub mov dec sub call test lods lods call (bad) mov sub sub es dec stos das or sub lret in out out sub sub mov jmp and cmp pop sbb xchg lea push or xchg lcall pop push fistl push push dec sbb rcr xchg pop mov fwait rclb or cltd fcmovnbe push dec rorb xchg push or pop sbb xchg sahf cwtl fxch adc push ficompl adc pop or into pop xchg pop push dec xchg sub stos in lea call scas outsb dec stos sub (bad) out or mov movsl xor push add xor mov mov mov lcall or mov dec shrl pop pop test lret stos and inc cmp xor and push fcomps pop adc push int3 in lods dec or sbb adc dec or or xchg dec rcl sbbl xor (bad) xor push pop ljmp mov mov fdiv lcall xor jno xor inc xor dec push bound push push cmp jo js pop inc je jns inc dec xor dec xor dec inc dec outsl xor jb xor jp dec sub cmp mov stos fwait adc jb mov jo fimull fisub mov gs dec adc arpl or sub cmp mov flds mov rcl movsb xchg aam shlb les popa dec data16 pop push fs inc dec outsl pop insl push imul or in rorl push enter and xchg je jecxz add adc daa ss and imul fldl mov push adc add int or mov xchg mov xchg push mov rorb or sub xor (bad) fstpl or scas mov (bad) or inc sbb fwait leave lret sbb cltd ror xchg push xor xor call dec sub addr16 in xchg mov push test jae rcrl enter xchg xor and mov lods sbb rcrb nop popf sbb roll out cmp in aad or mov ljmp mov aad adc test and adc add xchg arpl xchg push push add mov xchg xchg and adc mov (bad) adc shr mov jb cmpsb fidivl cmp rorl or or imul notl test mov adc inc xor test call loop dec js cmp push dec dec push inc sub cmp test mov and in pop mov rcll inc push aad push mov ret xor test push rcr mov dec inc mov inc and inc and inc xor lret in iret and pop insl outsl xor nop xchg push test gs inc movl stos ret jno sub in xor int ljmp hlt in inc je add cwtl xchg dec mov outsl mov int3 (bad) fstpl push mov cmp or hlt ljmp mov stos lods lods cmp lcall or (bad) mov mov xchg adc aaa sbb and fsub jb in (bad) rorb popa push addr16 imul imul fimull out (bad) and fs arpl xchg (bad) mov sbb lock movsb in ss xor xor sub pushf mov enter lcall mov xchg ret xchg into or sahf fwait les and mov hlt call enter pop xor pop pushf adc xchg test dec push inc sarl fwait cmp sbb push push mov (bad) insb ljmp aam mov inc in and xor sbb mov cmp sub push aad nop dec into dec cmpsb adc and gs sub int xor adc mov mov (bad) push sahf ret gs mov adc pop stc fwait pop pop into sbb dec in test ljmp mov jns mov test xchg or or arpl xor cltd mov dec (bad) and stos stos mov lcall into inc lret in mov jnp dec leave fwait xchg ret sbb pushf repnz mov sbb mov adc push xchg loop and adc repnz lods mov outsl popa push inc fs xor cmpsb mov out dec inc xor adc and rcll call jmp push pop xor imul test push xchg enter lret or mov mov cmp adc jo jbe mov adc jae movsb fst lods push inc dec sub aaa xor aaa pop es cmpsb popa sbb adc dec (bad) fiaddl adc adc push mov jns xor stos sub mov mov mov inc int3 into xchg (bad) mov push outsl cmp cmp adc or sub mov and test lret sub sub lcall rcr les mov xor or and addr16 sub xor lea mov dec mov xor mov inc and dec scas push and mov loop push adc in push (bad) jno mov inc pop or sub call mov push inc or insb mov sub sub or mov sub aaa xchg xchg aaa pop es movsl mov in sbb and mov sub xor mov mov mov outsb push sub sbb rcll imul outsb xor sbbl cwtl mov or sub push mov dec dec arpl xor and xchg lret jne fcompl int3 jae bound dec mov cmpsl adc aaa push movsb (bad) hlt cmp movsb xlat stc xchg pop xchg dec xchg xchg inc lock and mov push arpl outsb cmp ja bound mov insb stos test inc testl popa jb outsb inc and mov mov lea cmp push gs mov push push push les fisttpl inc cmpsb xor sub jmp inc pushf dec outsb inc arpl xor lret dec sbbb gs and cmp or imul je pop adc sub int3 in frstor dec test data16 rclb fmull sahf daa xor cld dec dec stc mov fcmovnu ficompl insb fsubrs push je lret and rcrb and xchg loopne dec mov jmp pop mov data16 aam xchg (bad) adc or and in ja sub cmp dec jp push stc push mov mov into (bad) mov arpl push jo and sbb adc sub ss adc mov add fsubl test adc and lods in and sub xor int3 into mov rorb push aaa fs push xor inc push inc cmp xor insb dec pop inc inc gs xor pop xor xor inc xor push pop inc inc jae cmp pop dec inc imul dec pop outsb jp xor arpl dec bound push xor jns xor inc insl push je push push push push inc push xor xor dec pop je cmp je xor bound xor jb das inc jno dec cmp pop push inc pop jae pop popa inc jb jp xor imul push js inc xor dec arpl jp ja dec arpl push gs jp jns inc jne push imul sub inc inc jbe popa cmp xor xor jbe dec jo jne pop push ja aaa imul imul inc jns jbe js pop gs xor fs pop addr16 xor dec imul dec popa popa xor inc dec js arpl outsb xor xor jae push inc dec jo addr16 dec outsb xor fs xor inc inc push inc dec push outsl xor dec inc push inc dec inc dec jno dec outsl pop dec push outsl jne inc dec push inc dec jae push inc dec xor jno gs insb dec dec inc dec pop push push das js push jne push push jno jo jno imul insl push jne inc push sub inc dec xor outsl sub dec push inc jne ss inc dec xor inc gs jae ja dec push inc inc xor pop popa jb inc inc jns dec jbe dec aaa xor ja das addr16 jbe dec jae dec xor outsb cmp dec push inc fs xor pop ss xor bound push insb popa jp push xor inc ja outsl jp dec xor inc push inc pop inc push outsl bound push inc inc outsl xor push jb xor popa pop pop xor dec insl ss imul inc push cmp inc cmp xor inc inc xor gs das cmp inc inc inc outsl push push push xor addr16 jne inc inc inc jns inc dec jne jo js inc push inc js push xor pop inc push inc cmp outsl bound sub inc inc dec outsb push jo imul dec push js xor inc dec xor aaa pushw cmp xor arpl dec xor ja inc push inc push js push inc dec dec dec imul xor inc dec push inc xor xor xor dec inc dec outsl xor push outsb push addr16 insl popa inc imul inc inc aaa push inc jne dec imul push xor inc outsb cmp dec das arpl addr16 xor jb bound dec addr16 xor inc dec dec pop ja arpl inc inc inc jb insl xor push inc jns push jo inc ja arpl inc dec dec cmp pop sub jo addr16 jno jo ss inc jne aaa inc inc jae jno je push xor addr16 je xor sub xor pop push js pop inc aaa inc imul jbe jp push bound jae insb dec aaa xor push push imul push jo jbe xor xor jb pop je ss sub jb jno pop ss jns inc inc inc je push jp dec ss xor fs inc push inc jne inc data16 push jp push xor inc inc jae inc push ss push arpl pop inc dec inc push inc inc pop pop inc xor inc dec inc push ja gs inc inc imul sub mov mov lods and mov sbb sub xor xor mov xor movsb and sub cmp sbb aaa movsl test sbb mov sub test mov cmp sbb mov mov mov mov pushf and sbb mov mov mov aaa xor cltd cmpsb cmp cmp ss sub movsb mov mov sbb dec and adc addl testl add jbe test xchg push inc push addl xor addl jne ja jecxz adc xchg push adc xchg xlat push jecxz inc hlt adc adc adc add je xchg out inc roll push inc and out inc repz adc aam xlat push in cmc movsb in notl xchg je xchg push test mov movsb addr16 cmpsb push xchg aam xchg or adc push fcoml sbb pop sbb pop pop rclb push xchg or dec dec pushw (bad) repnz (bad) nop shl jo mov nop push (bad) into mov (bad) out rclb (bad) test repnz lcall outsb (bad) divb inc popaw xor xor xor lcall es xchg pop sbb adc adc pop fcompl fimul rcrb aam fcoms int adc push fcoml jmp dec lods test or dec inc es push pop sub inc enter sub in sub outsl push push xor addr16 jne inc inc inc jns inc dec jne lcall pop int adc push push xchg fcmovnu mov fstl lcall adc pop push dec pop int3 add aam sahf outsb int3 aam jo mov jecxz push mov ret mov mov jae mov xchg push stos cmp stos cmpl or jns push pop mov imul (bad) aam fstpl lcall adc mov xchg lret fcomp fcmovu rorl aam sbb rorb add (bad) fs ss and test xchg test je je inc xor repz cmc xchg mov ja cmpsl push pop pop xor ja and pop pop xchg inc lds (bad) in inc mov and movsl inc test test popa xor test mov xor mov push rorl sub imul cmpsb int in dec dec cs enter loop dec cmp jp xor in inc data16 jp push xor and xchg sbb mov popf push adc nop rcrb push rcr xchg push pushf xchg fcoml sbb sbb push dec fisttpl adc cwtl into inc out mov lret (bad) mov (bad) mov cmpsb mov cwtl nop mov addr16 inc jne movsb inc push adc arpl adcl xor and sub mov mov mov leave inc (bad) xchg dec (bad) int test jmp push xor cmp push adc push lret fwait xor lret cltd fwait xor mov int mov in mov cmp int pop dec push sub sub inc or xor dec push arpl aaa dec dec push jns dec dec jo xor insb imul dec jns dec arpl push data16 push dec insl imul pop dec movsl cmp and mov loopne fnstenv push xor (bad) push cltd lret mov mov jns adc adc sbb stos sub pop push push rclb push sbb adc outsl ss sub sbb cltd mov loope jmp addr16 push jp xor mov cltd rcrb (bad) call xchg bound cmp cwtl sub ss jmp sub dec sub push cmp mov push icebp xor push fwait popf rorl push xchg dec scas xchg jo inc test xor cmpsl je xor loop aad add ss cmc fs add xor push inc (bad) jb and rcrl and sub push pop push inc inc jb adc daa pop movsl cmp movsl xor pop ficomp xchg push nop (bad) push pop or rcll push test repnz (bad) jbe xor xor lds adcl les je mov xchg add xor pop movsl cmp mov pusha in xchg imul mov or dec push aaa push popa xor push mov in in out inc or inc push out xchg or ror loope int inc cs mov ja dec push dec xor inc push xchg sub push dec mov jecxz or xchg pop pop (bad) xchg adc ror sbb pop lcall xor pop push dec bound ja inc dec jbe push adc jno rcr pop bound adc lcall xchg xchg aad cwtl push push push push sbb dec insb int3 ficom adc sub mov shrl int fsts mov sub popf mov aam fmul and jmp in adc sbb fwait or push push push push imul dec xor jmp in lods jmp insl repnz movsb cmp xchg popf fcompl mov cltd rorb adc into pop fsts cwtl icebp and dec nop xchg (bad) out mov mov and pop push push sbb or stos mov bound xchg stos fs out nop out int3 test jo test pushf cmp dec push (bad) sub scas add and mov sub gs pop mov push mov test aaa cmpsl movsb cmpsb aaa sub sbb xor push push or pop int mov xchg mov int3 int3 jmp repz mov sahf and and adc adc jb aaa and jne push lds hlt xor inc add mov pop mov mov and lcall xor es mov movsl and pushf mov mov movsl sbb and mov movsb cltd fldcw mov xchg sub dec test cs (bad) or dec push jmp dec in into (bad) add and adcl inc in pushf loope adc push and xor arpl je mov mov xchg add aad mov dec push inc ja inc xor xchg inc inc in dec jmp xchg or adc pop adc push push sbb test adc mov adc cmp test test mov xchg adc jne xchg mov pop xor xchg ss sub push sbb fstpl add push imul scas dec xor push jp xor or mov scas sub xchg popa push xor add xor leave in shll adc sub mov test dec mov lea arpl and adc mov fistp mov or dec addr16 mov push push push dec jns xor popa stos jp mov adc adc das jbe pop mov mov sub and inc xor jb je popa dec inc jb push xchg rcll leave push sub push test cmpsl add hlt xor or lds nop outsb push loopne xchg (bad) mov jb sub ror jno or dec sub push mov mov lret lret jns or sub adc jnp mov mov or ret imul ret push mov or cltd mov xor jnp dec or xor sub or sub ret pop xchg mov mov mov or cmp mov sub arpl bound sbb xchg mov mov mov push lret sub mov pop sbb mov xchg jp ret sub (bad) or fwait mov pop inc stos sbb adc lret sbb or sarl lcall or mov xor or stos sub inc lret push pop sarl dec mov adc stos cltd ret mov adc bound ret pop sub imul cltd lret ret sbb xor lret bound and mov dec ret dec mov mov sub or or fwait and mov mov or cmp and inc mov dec or rorb sbb lret jnp push and dec mov and adc sub xchg or push fwait sub ret sub or jp (bad) cmp or adc lcall or xchg shlb imul popa xchg lret push mov pop rclb bound mov inc adc jae or jp (bad) ret sbb and cmp mov dec mov mov push rorb jae adc mov xchg push stos jp imul ret inc or test mov pop sbb xor xor inc push pop or pop shlb or adc (bad) bound or sbb jno xor jb mov ret mov adc and (bad) mov leave mov lret arpl and jb or or xor rcl xor mov mov pop or xchg mov push stos sub mov sub inc xchg mov arpl inc or rorb adc jnp mov push lret stos sarb sbb mov cmp pop push mov xchg pop mov sbb mov cmp fwait pop xor fwait dec mov mov dec imul sbbl mov dec stos mov and mov fwait mov push andl mov mov adc push push xor dec (bad) mov stos sub andl stos or cmp sbb push jns stos adc leave lret xchg arpl jae or pop and imul xor adc cmp pop mov mov push fwait or mov mov pop jb fwait pop lret sub or test shrl or jp adc stos sub or rorl sub jnp jnp dec jb inc mov dec pop and (bad) arpl and push push push pop fwait mov pop rclb xchg sbb adc int das sub dec call fs notb mov or sub xchg add gs cmpsb cmpsb insb lods mov xchg stos mov mov mov (bad) in (bad) out lcall sahf stos out (bad) aam mov mov hlt (bad) (bad) cwtl hlt fcoms fs mov in in in nop aam (bad) test nop shrb hlt fsubrs movb lock lret scas mov out nop ljmp arpl das outsb push inc push push jae arpl inc inc inc insb popa xor data16 xor mov sbb lods inc mov mulb push je xchg aaa push xor arpl push les push sub imul cltd lret lea mov adc mov int3 rorb push jns dec dec inc dec daa mov sbb cltd mov stos mov movsl cmp xor test or insl push adc inc jne xchg adc xchg jbe and inc adc and jbe xchg push out and je xor cmp sbb aad adc aad push xchg nop push cwtl xchg rorl mov lods cs dec lea sub in mov xchg stos inc in lret mov dec mov sub daa push jecxz xchg add (bad) ret sbb sahf ljmp push in (bad) aam (bad) pushf in call push in push lods fcmovb xchg mov xchg jae sub dec aaa jne ss dec arpl bound dec xor mov adc lcall sbb adc cwtl mov inc ja jp inc dec aaa data16 cmp dec pop push push addr16 pop cmp push bound bound pop jp pop xor pop insb outsb push inc jae dec xor jns xchg push xchg cltd popf push sbb xchg fst xchg rcl xchg dec rcr rcrb rclb push xchg fs pop inc gs mov xor mov xor mov mov and mov movsl mov sbb cmp sub mov sbb mov movsb sbb push sbb rcrb dec adc lret scas or ljmp popa dec cmp xor cmp mov xor movsl xor sub inc es xor dec jns stos adc in xor lea cmp mov dec inc push xor cmpl inc mov jmp outsl xor or mov sub mov in adc ljmp mov xor sbb pop fcoms cltd shr xchg data16 notl (bad) mov dec pop and (bad) arpl mov stos out test mov ret push xchg inc inc outsb dec xor xor inc bound push inc je js and cmpsb sub xor cltd or mov mov dec sub mov xor xor and push and je cmpsb mov cmc xor daa test out lret into test xchg movsb ret dec imul push inc and adc sub sarl fsts adc outsb out enter movsb insb mov jne jb je je inc sub xchg test mov xchg push dec sahf push adc data16 dec sub xchg (bad) push sbb aad dec mov fnstcw nop insb fs loop xchg xor jp pop cltd lea loop data16 inc daa ja (bad) and push imul dec test xor mov mov mov adc xchg int3 pop dec push push dec inc sub mov or dec mov push insb into lret adc movsl and lods popf sbb pop xor sub cmpsb push test push lds int (bad) adc mov call (bad) cwtl mov pop xor dec inc pop adc sbb (bad) rorl out sub repz cmp dec insl push mov mov adc xchg enter test and mov sub rclb mov lret and xchg mov jb dec jp cmp jno mov sbb dec xchg or sub lret sub xchg out jae xor sbb sub int (bad) dec dec push xor sub fwait mov cmp pop aam sbb sbb out out pop pop mov addr16 dec inc push dec mov jmp mov cmp mov mov dec outsb movsb imul xor into ljmp dec adc movsl adc data16 mov xchg inc cmp sbb inc push cmp dec mov xchg pushf nop xchg xchg push mov enter leave rcll mov lods and or (bad) into test outsb repnz pushf out mov mov scas insb xchg imul data16 js jp dec dec addr16 jp pop sub cmp dec push dec push ja sub mov mov mov movsl stos xor mov mov mov mov rorl out int3 sub mov imul push sub or mov stos or add and rol fwait ret mov push dec in leave (bad) mov loopne xor jmp lcall mov popf mov mov imul push adc lcall inc xor inc mov adc popf pop rcll adc lret hlt adc cmp lods sub data16 xor jb inc and mov lds es dec les push xor test lret imul stos xchg xchg jo push arpl push inc inc popa inc inc cmp insb dec cmp inc inc jns mov xor fisubr ljmp inc jne arpl and inc xor loope aam in imul into aam insb mov xchg test inc add es int3 xchg push or sub ljmp inc imul mov mov mov cmp lods dec mov (bad) mov inc cmp jo jbe data16 pop push ret mov mov or fnstenv mov insl inc inc insb push xor xor mov or mov leave mov aad sbb call mov in cmp push jno push jp aaa jae xor xchg and push dec mov gs push fnstsw sub fcmove mov iret mov xor cmp mov lcall and xor cmp or ret cmp push pop sbb sahf aam out inc xor push or fwait pop mov pushf cwtl rorl push cmpsb sub call es test lcall dec (bad) lods vpsubsw push stos and jp lret dec stos push nop dec int3 aam mov (bad) icebp adc test adc ss push xor inc movsb adc ret mov lcall xchg adc stos mov dec cmpsb add loop push xchg or or ss fs push mov dec dec aad sub nop leave rcr popl mov sbb mov stos cltd cmp dec outsb or outsb or das push mov push inc arpl adc sbb rcll xchg push sbb and sbb or loopne mov inc adc sbb les xor pop mov push movsb inc cmp jb mov push adc inc xor sub (bad) aam adc fwait cmp jne dec jo and mov mov xchg movsb xor xor mov mov and push addl xchg adc pop mov jbe add mov addr16 inc xor xchg out addr16 jecxz mov inc xor inc mov inc addr16 xor (bad) aaa je add mov pop xchg jae mov fs xchg pop jbe and xchg es adc movsl adc out (bad) (bad) je xchg ret xchg xchg data16 daa lds daa and and xor je jbe jne xor aam gs je je add jbe inc adc mov notb andl and adc add adc mov adc aaa and test addr16 addl mov adc adc xchg mov xor test push adc daa inc adc aad movsb ja inc jne mov inc cmpsb inc ss adc push push xchg push je mov je and push inc adc adc fs addr16 hlt (bad) roll je in xor movsl es and test add daa xor inc inc inc inc push mov push cmpsb repz aam divl xchg push push adc xchg roll push fs mov daa inc push push fs adc ja hlt push jne xchg adc (bad) aam inc and hlt push xchg mov data16 push in xor push je xchg adc daa xor xor inc out inc pop adc xor movl adc lds testl hlt xlat aaa mov gs movsl daa addr16 pop jne mov cmpsl aaa je adcl xchg ss pop xchg push push xchg xchg aaa push inc xchg adc xchg inc test push repz jbe aaa inc xchg daa and hlt adc mov arpl repz pop addr16 pop pop and addr16 fs adc movsb xor data16 adc cmpsl movsb xlat cmpsb xor jne test data16 jae movsb push je in mov inc test je es inc notb adc mov xor out xchg je jbe inc jbe and je pop inc push movsb mov push je push adc ja xchg data16 mov je mull and xchg mov and add xor mov push je and mov and rcll pop inc jbe inc adc push adc and xor and shll adc ja xchg adc adc inc pop adc adc mov in xor test es push je gs xchg push push push mov arpl adc data16 notl and add (bad) in xor xchg aad push pop inc inc xchg push mov jae adc ss add cmpsb xor es adc daa add andl test out fs inc movsl xor mov push add adc mov jne and xchg ja adc mov push (bad) cmpsb mov retw push push mov push addr16 gs push in repz pop inc inc pop push xchg adc xchg adc in xchg addl push push adc xchg push inc push cmc movsl xchg ret inc cmc xor push xor xchg (bad) aam arpl push dec out or sub sub inc inc or call sub jmp inc mov mov lret jae xor and mov or mov sub lcall and fwait push mov leave mov sub mov lret ret imul mov mov arpl adc popa leave lret xor xchg fwait bound xchg ret dec sbb sbb cmp cmp mov push xor sbb and and jnp and repnz fwait sbb sub cwtl fwait movsb cmp mov and sbb sub and stos mov mov mov mov xor sub outsb dec stos dec dec out call inc mov insb mov es stos push xchg or dec dec test cmpsb je or fxch and fisttpll push arpl xor push push insb dec das insb push jo aaa ja push jae fs fs dec inc sbb sbb pop push arpl xchg roll push fs mov daa inc push push cmp push rcr cmp add cmpsb mov mov mov mov xor movsl lret push stos call sub scas sub int xchg sub sub push enter sub or mov jmp push stos xchg mov sarl adc mov pop (bad) out stos test sbb lret xchg aaa push inc sub in pop popa imul outsl cmp xor jb adc lea fwait int shlb and addr16 fs int3 lods fdivrl lcall es cmp xor mov aaa and sbb and mov mov xor mov movsb aad push aam fs xchg je cltd push sbb rcll shrl aad or sbb add dec jb push push addr16 push jp inc jns inc push dec xor jne inc push imul inc inc pop insb xor xor outsb inc inc arpl jno je addr16 inc inc inc push cltd push dec fcoms push push xchg test and in in rcrl add add in add and and lret in or out scas call cmpsb lods sub call inc insl sub lret sbb stos lret adc pop cltd mov sbbl test sub cltd mov and mov lods dec push push jo push insb adc insb mov xchg test mov enter mov add rcrl dec into and outsb dec das mov lods sub insl sub ret dec roll gs inc dec pop push push or (bad) xchg xchg adc mov arpl sub push push lds xor xor push push jp mov sbb mov cmpsl inc inc inc xchg jae and mov rclb test test aaa sub popf xchg adc push mov stos fwait jb jnp sbb sub sahf pusha repnz xchg fmulp push stos (bad) xchg xchg cwtl out mov repz xchg cltd sbb mov popf into adc cwtl xchg shlb test out and inc es xchg daa xchg add push xchg and and cmc aaa adc gs add push push je xor shl cltd (bad) (bad) add leave fsubrl inc aad int sub int3 lret pop (bad) addl mov xchg xchg les inc ja je mov push movsb mov add push addr16 aaa subl push dec cs pop bound inc sbb int fsts sbb mov pop jp inc jne movsl arpl movsb mov push loop sbb sbb cmp cltd popa pop push rcrl call fwait sub or imul stos and (bad) test mov cwtl in sahf into xchg mov fs lods fs xchg test call jae ret and xor push xchg push xor dec xor dec push inc inc push and mov jno jnp adc ret lret lret pop sbb inc sbb cltd adc ficoml fcom sbb xchg aam mov lods sbb insb cmpsb into jae mov mov es dec add inc adc adc pop into push dec lods fs and cmp and jmp mov ss mov int3 dec lret dec and (bad) or iret inc out pop (bad) fisttpll cmp in adc lods cltd leave mov cmp jne imul dec dec add xor xor rcll sub inc ss lcall adc xlat inc ss cmpsb loopne lods out (bad) icebp aaa sbb shrl addl (bad) hlt stos mov mov out addr16 jno sub lret (bad) into inc jno xor (bad) adc in repnz loop test and mov and and scas xor cmp rorb and sub xchg and dec pop inc bound xor inc cwtl pop pushf adc fistl aad test pop stos adc (bad) hlt jecxz cltd dec push mov adc xchg push push nop test inc inc jae inc stc xchg fsts pop push inc (bad) xchg test cmp and cltd sbb cwtl dec cmpsb or cmp fwait pop pop mov jno aaa dec data16 cmp xor and inc mov and mov sbb xchg cltd aaa mov insb ljmp dec dec xor bound stos mov mov scas enter lret mov lods xchg dec gs mov test cmp mov xchg gs fucom or inc dec ss imul call push mov xor push or mov lret movsb loopne (bad) into mov addr16 jbe int3 lret sub out jmp adc dec inc inc cmp mov dec mov sbb jns lret enterw lret pushf aam test test sub sbb cmp mov lock addr16 adc in loope aad mov aad or into ljmpw and aaa sbb in or inc xor dec bound loope cmp dec sub inc push cltd pop test xor inc or push das addr16 inc imul jne das jbe mov xor bound ret mov pop pop push mov (bad) out ror mov mov mov mov xor cmpsb test sub dec stos call in imul inc lret outsb stos scas inc push push inc xor xor pop lret cmp xchg test inc lds addl test lods jb push adc lods sub int3 call or jbe sub push imul gs aad movsl push repz sub xor mov out outsb push fmul xor out jns sbb sbb jae ret xchg mov ficom or push push test xchg aaa daa sbb push adc push (bad) stos adc movsb outsb mov lods sahf daa inc sub push adc jbe xor ret adc data16 xchg cltd int3 cltd aam inc (bad) icebp adc mov pushf lcall outsl xor cmpsl xor xchg xor mov inc gs adc inc push cmpl pop pop cmp mov int xor jno imul arpl pop adc cmp je pop aad or or and xchg aad leave dec dec ljmp (bad) xchg inc and sbb xor adc mov test ja loop xchg pop jb es ss aaa adcl and push adc adc xchg xchg aam xchg adc ss jne inc inc mov adc and cmpsl xchg fs mov hlt mov xchg mov xlat inc adc xor jne xorl aam notb xchg jae adc mov je push les arpl add xchg push adc and les xchg aaa movsl jne xchg cmpsb mov adc ja inc out push je push xchg adc cmpsb xlat adc xchg ret push adc (bad) adc arpl mov jne xchg inc test adc xchg xchg data16 adc xchg add xor xchg adc cmc je xchg inc pop test adc xor pop data16 bound test xchg push cmc push xchg and je mull mov cmpsl je repnz divb inc jbe mov and loop pop and xchg adc inc mulb push je adc adc push and ss add xchg inc aaa xchg push and adc gs adc inc inc movsl xchg xchg jae cmpsb xor loop xchg push ja inc jbe push adc cmpsb aam push add xchg adc inc cmpsl je movsb xchg pop addl jbe test push mov cmpsl inc les mov push and jbe test repz inc xor xlat (bad) testb jne adc add aaa and inc push xchg mull jbe push adc xchg xchg mov les inc xor xchg xlat data16 aaa mov mov add mov (bad) aaa test lds fs adc and mov inc add push mov test push xor ret adc inc gs pop inc push xchg xlat inc cmpsl add hlt adc fs add out pop inc movsb xlat pop pop arpl push divb addr16 and jne xchg mov data16 cmc and test inc push hlt adc es and mov adc mov mov xor data16 lds adc roll (bad) adc jbe push push es ss mov es pop push je xchg arpl adc adc jbe adc ss data16 aam daa fs inc push xchg pop je adc xchg es adc push inc jne testb inc test xor and mov xchg ja mov inc xchg xor ret and xchg (bad) out mov out test roll mov fs adc add je inc test adc in jae push xchg xchg xchg hlt push xchg jbe xchg aaa push mov adc xchg adc inc push je in push (bad) test fs xor push xchg aaa jne xchg cmpsl inc cmc xor adc jbe mov xor mull push addr16 test pop push inc xchg movsl xor push inc aad (bad) ja inc inc test push xchg fs test adc xchg push xlat inc add test divb jbe pop push xchg mov es inc data16 jbe test xchg adc inc data16 data16 pop push ja lds push xchg and aam adc push aad pop xchg sbb xchg mov sbb push pop pop lret sbb dec fimul push push or xchg sbb adc in sub mov sub insb dec dec ljmp dec inc sub dec or leave fs hlt mov xchg mov xlat inc adc xor jne xorl aad or and jb imul xor and lret lret (bad) addl pop bound stos cmp int pop and adc ljmp lret dec arpl dec imul bound inc jne xor push imul inc inc dec cmp jb push cmp push dec shll shl and or loope sbb in (bad) insb push in loop pop push dec dec dec insl xor push push cmp inc outsl jb imul inc outsl sub addr16 push ja ss das push jbe push push dec push inc xor bound ja popa cmp inc push push push dec outsl push addr16 xor je js imul push push push push inc push inc inc inc pop inc xor pop insb cmp push inc outsb sub sub add and inc fldcw sbb pop dec mov addl jbe test push mov cmpsl inc les mov push and and mov push mov mov pop test add enter sbb rcrb xchg into into ljmp jo ja pop xor dec insb inc je dec imul sbb int3 dec adc sub mov push lea fcmovbe fstl dec test sub ret adc inc gs mov imul mov adc call loopne lretw sub cmp ja dec inc sub mov sub and fwait aam xchg aad inc data16 inc int3 lods sub push data16 mov lds adc roll (bad) adc jbe xor mov xor test cmpsl and push jae inc es mov lods mov cmpsl cmp mov mov inc and xchg cmp pop in popa adc xchg adc lock xchg xchg xchg arpl jecxz xchg sbb fwait or sbb (bad) pop sbb or cmpsb mov outsb faddl popa dec dec inc ja rorl in lret sub lods insb inc sub add inc push je in push (bad) test mov fst sbb sbb enter fiaddl xchg inc push push jnp xor xor aad popa fldl dec pop inc mov mov push push mov mov adc fld1 cmpsl push xchg mov sub ret or in dec popa in adc pusha ljmp imul dec mov push sbb fcoms cmpsl sub push wbinvd dec sub xchg mull and and or movsb mov movsb arpl push lret rorl sbb pop shll and int lds inc pop (bad) shl pushf lret or scas bound adc xchg adc nop xchg test (bad) mov scas (bad) pop in mov aaa push dec addr16 fmul rcrb mov xchg addr16 popaw sub sbb xchg inc cmp adc push hlt pushf into ret cmp ja arpl dec inc and cltd mov dec pop popf pop aam sbb rorl sub insl out sub leave mov dec rorw inc add mov aaa xchg add xor movsl and sub inc mov imul push inc xor cmp stos and daa cltd xor lea lcall xchg enter mov xchg aad les xchg xchg mov test sub loopne fsubrs inc jno jno pop adc mov mov push xor push inc jbe je and pushf test xor xor aad mov xchg push (bad) repnz cmpsb xchg push test xchg push data16 ja insb les jbe inc inc push xor inc dec xor dec sub xor sbb and mov xor mov mov or sub (bad) dec mov (bad) mov push adc pop sub and test push lret shll mov push adc leave sbb shll adc data16 fidivl mov out sub sub into outsb xchg inc fwait or dec test data16 cmp popa mov mov dec or and and push push pop xchg push push lds and xor mov xor sbb popf pop rorl daa inc cli sub in test lods mov (bad) in rclb mov jno push ja insb aaa xor and mov stos mov adc fistl adc pusha lret xchg cmpsb inc xor stos push popa mov inc fwait push sbbl (bad) xchg push test sbb (bad) int3 in xchg push pop inc push xor inc xor stos stos and sub stos test mov inc adc inc xchg pushf push dec sub lret cs dec gs call iret xor xor and pop stos mov sub lods mov or fs je out repnz xor bound nop rcrl push inc mov and sahf xchg xchg xchg push fwait push mov into in call xor loope ljmp repnz adc xor sbb push or pop sub or push push push cltd lds cmp test scas xchg pop push out xchg mov push pushf push movsb push out mov outsb test xchg dec fldenv dec mov push pop xchg aam loop movsb movsb mov inc pop bound pop bound pop and jne xor jno dec pop sub int push lods lods imul in fsub pop sahf data16 dec xor push imul push mov adc push nop pop and nop lds inc mov xor arpl or push sbb add and mov leave push push adc mov xchg inc inc es arpl xchg mov aaa mov xchg add cmp mov sbb adc xor cmp sub mov mov popf rdmsr bound lret sbb mov or outsb dec push adc mov xchg aam or loopne in push sub and test mov and and lods add jbe dec cmpl nop xchg aaa sub mov mov pop (bad) adc (bad) mov enter or data16 insb stos dec in adc lods and adc xchg xor sub xchg dec adc rcll sbb sub push inc push in mov rol cmpl adc arpl and movsl mov sbb fmuls jb sub xchg and pushf int repnz hlt mov popf inc xor mov and and push dec fidivl xchg aam rorb das push inc insb mov sbb int xorl adc add movsb push ret andl jae sbb jns int3 xchg mov insl inc xor push bound push fwait push xchg pushf sbb adc dec sub stos sub sub sub rol fwait dec pushf mov push inc ret in imul adc xchg push rclb aad cmpsl push aam sbb cmpsb push inc mov xchg pop arpl mov es and mov cltd into xor xor loope sbb and xor popf dec add out mov aaa pop inc jno inc addr16 jbe inc je push xor fs push dec push outsb jb addr16 inc aaa push jbe jns imul push outsb inc inc sub inc inc inc data16 push dec jns das push inc dec js xor pop imul push inc push dec imul dec pop inc xor push gs inc dec fs dec jo popa insl xor dec push inc jb jno cmp push popa js dec imul push inc dec imul xor xor aaa push dec popa xor push imul push xor inc ja cmp dec xor arpl ja push xor pop push push dec inc inc xor gs das popa xor cmp dec cmp gs jb push push inc cmp bound insl dec jbe xor inc bound jne outsb imul push aaa jae cmp cmp jp inc das dec xor imul inc insb pop xor inc inc insb jae dec xor inc inc xor jo pop inc jb xor inc dec dec push inc xor insb dec dec fs push imul push push inc push imul ja push inc xor push dec dec inc jo aaa js push insl jp je inc xor ja ja jno jb inc push imul push inc dec push insb ja js dec jbe ja jns inc inc inc pop push inc arpl dec outsb push push insb ja pop push push outsl push inc jo outsl push inc aaa imul sub push inc pop inc dec inc push dec jb xor dec fs jo cmp xor js jne dec push outsl push inc inc dec arpl push inc gs bound dec arpl dec outsl pop xor cmp das xor jae push inc fs inc push insb jno outsb jb inc aaa jp dec sub cmp ss push outsb inc dec data16 sub arpl push push inc dec gs bound inc dec xor inc dec cmp jo push dec jb push jo outsb push jae gs inc gs dec insb insl xor dec inc dec dec xor insl fs push inc inc fs cmp dec push jns inc inc inc aaa jae inc inc insl xor dec insw cmp xor xor inc dec cmp das jb fs pop inc dec arpl xor dec inc dec ss inc dec arpl push jno jp jns inc inc outsl pop insl dec dec jp push imul push push xor dec push imul push inc push inc inc dec push outsl dec inc push fs arpl inc dec outsl xor aaa jne jbe inc xor arpl outsb cmp aaa push imul inc jno arpl inc inc cmp imul dec inc inc cmp pop dec popa inc popa dec fs inc jo xor jbe aaa fs dec push insb popa gs inc dec xor inc inc das push inc bound insl jp inc inc jo sub cmp inc inc dec arpl inc xor dec inc inc dec inc das pop dec dec xor dec inc dec push ja jae inc push jp inc inc bound pop insl push push cmp inc dec gs insl pop jb outsb inc bound arpl dec outsl outsl aaa jae dec inc dec das xor inc dec sub cmp jno xor jb xor jo inc inc push cmp dec xor jb dec fs addr16 inc inc inc inc bound push xor inc jbe addr16 push xor sub insb jp push addr16 push cmp xor addr16 inc inc jns sub jp push inc addr16 push pop dec outsb insb bound jae push inc dec jecxz,pn cltd cltd rcr lea popf sbb sbb xchg push adc aam dec ficoml sbb (bad) push push adc pop or rcl push pop cltd mov pop aam pop push or push push sahf or rorb in push insl cs push cmpsb dec or xchg inc xchg push xchg push rcll ret xor sbb or or mov inc jnp sub movsl fnsave ror in push xchg aaa push dec popa xor push imul push xor inc ja inc xor mov xor (bad) rcll adc (bad) sub test sub push (bad) es adc push mov mov adc cmp or or mov inc mov movsl and rcll or xor add dec cwtl rcll enter xchg xchg mov dec dec fs push imul xchg ficom test mov push outsl dec sub sub or out or insl scas dec dec mov xchg jne push ja push mov ret mov pusha sahf adc cmpsb repnz cwtl cmpsb mov stos mov or mov int aaa imul xchg test lods and or push sbb mov or push pop adc fcmovnbe rcl push pop fcom rclb push pop cwtl xchg mov dec jmp outsb test sub (bad) scas gs int3 mov sub dec lea xor adc mov inc xchg jae adc cmpsl mov movsb mov fmul aad rclb dec sbb rorl enter lcall xchg or fwait jae sub xchg int aad inc int3 sahf fs enter mov mov cwtl aam repnz (bad) (bad) mov ljmp pop mov cmp xor xor inc sbb fwait xchg mov lods and adc adc adc push sub dec out sub inc push pop rorb inc stos mov inc leave inc dec dec pop roll frstor sub ficom (bad) loop mov jne jbe inc xor arpl outsb cmp aaa push imul inc jno arpl inc sbb mov sub sbb pop sahf push xchg sbb je cmpl mov mov mov xchg int adc pop aam (bad) (bad) fsubp (bad) fsubs add mov movsl or imul (bad) xchg push dec push dec adc pop fsts mov xchg rclb xchg xchg push sbb dec push xchg rorl stos dec dec or arpl dec outsl outsl adc mov add push and mov addl push and rcll mov popf xor or and push cltd lcall or fwait arpl mov lret lret jns sub or mov call int dec dec out or imul in iret cs ljmp outsb mov dec mov mov enter daa daa or jae ret xor xchg xor jp pop cmp (bad) sub xchg dec xor in fchs in inc or fsub xchg and xchg sbb (bad) shr nop mov mov out and and mov lret xchg mov lcall mov mov test mov adc rorl shrl inc adc mov imul xchg mov lret xchg lock push jae and xchg (bad) sub leave xor xchg dec mov out mov mull pop jno fwait cltd ffree test mov loopne mov (bad) fadds into fsubp lcall loop loopne insb data16 adc and mov mov mov mov dec pop (bad) int3 lods lret in jo xchg roll fcompl call inc xor dec arpl insb adc sbb xor lods adc insb data16 push in inc xchg push dec xchg xchg leave dec sub inc stos sub jns adc add lock js dec inc pop je push mov sbb push dec cs sub sub imul jbe arpl jne xchg je mov or inc adc sbb test add jmp inc lods or cmp mov lea loope dec rorl pop add cmp loope add pop and add jmp inc pop add and in add in or popf adc int popf xor add lods mov loope (bad) add and int add movsl shrl cwtl lods in lods pop add add (bad) popf dec lods lods rcrl push mov add lea or xchg push mov add cltd sub fstps aad movsl rcr pop sub add rcr enter mov loope int3 mov popf adc xchg test pusha lods popf adc lods fnop int inc push aad inc in int inc and fnstsw adc sub rcrl rorl sbb cmp imul sub test fldcw aam test cmp lods aam int pop mov int rol sarl or sub rcrl (bad) popf add mov dec pop or adc mov sbb aam in cmp add pop and add jmp popa pop add inc xor movsl inc dec loope sbb rol lods sub and mov add add xchg dec lods mov cmp mov fnstcw jmp push sub rcrl and xor int rcr dec lds xor add popa lods sub add lods or add leave test inc lds add cmp lds lds lods add inc rorl aad test inc fadd mov adc fsubrl mov xor sub add inc lods sub add cltd pop imul lods push lods rcll add fnstenv add test mov add or aad add lea xchg test in (bad) rcll in sbb add sbb mov add cmp xchg add pop (bad) mov push add in (bad) (bad) pop mov xchg add roll imul lods add jmp fsubrs popf add mov xor int or in xchg add imul cltd adc mov mov leave dec add int rcl in add lods dec movsl and or leave fsubrl xor loopne cwtl shl leave inc leave add shll loope adc in adc rcrl mov sbb add xchg sbb fstl lods add fsts test mov mov mov fnstcw xchg sub enter sub leave add mov in add and adc mov inc test sub pop gs mov add in xchg lds sbb sub and mov xor adc mov or add loope sub add adc lea sub shll or cwtl rcr movsb rorl pop add cmp in add sbb frstor add popa mov lods add jmp (bad) fldl in sub pop fnstsw xchg ffree cmp add imul xor push xor dec (bad) aad and or in or dec in sub test shrl in mov test push xchg xchg fst fstp leave add frstor or xor dec sbb pop aad test popa roll or xchg pop add int or xchg push mov sbb movsb rcrl leave roll sub lods add leave mov in and and and cmp sub sbb mov or pop add imul cmp or mov in adc mov add sbb flds (bad) fnstenv (bad) (bad) lds loope add cmp dec shr add fisttpll sub add mov test movsl xchg add cmp inc dec add pop and adc or lods lods in fsubrs inc rcr and add rorl add mov inc sbb sbb fsubrs add push int adc xor int loope xchg popa or gs aad adc mov cmp adc cmp adc mov mov int push cmp loope lds in lods cmp lea adc mov shll sbb popf adc mov xchg lds or leave push fisttpll leave or fcomp (bad) or lods inc popf add fnop loope leave fmul movsb shrl or add dec add push add mov pop xor lods aam and sub dec gs or rcrl add fisttpll adc (bad) int dec int xor dec shrl add pop or gs or push rcll push add leave adc cmp (bad) add pop mov sbb mov int3 rcll pop popf nop int (bad) int int or mov adc fnsave inc lds popf dec dec lods roll or mov (bad) fmul int popa add dec lods lds sub leave mov inc xor aad jmp adc mov push popf test mov in inc add popa inc shrb movsl sub jmp or sbb shl or mov inc or mov push push cmp or inc leave adc enter add add mov (bad) sub add inc push roll lds sbb adc xchg cmp roll adc push and pop (bad) shrl test aad and push rcr aam movsl aam cltd adc shrl inc or push or int mov jmp xchg adc fisttpll mov cltd fisttpll lea int mov adc mov imul inc or int test fld add int loope fnstsw pushf lds lods push push add xchg mov push add test lods and add inc aad add lods xchg sbb mov xchg nop aad mov sub sbb lea lods popa gs fldl fisttpll leave (bad) jmp cmp mov or fsub dec cmp add sub sbb xchg and pop sub xchg popa push sub adc adc nop mov aam rcl rclb push popf sbb push push xchg sbb push push pop mov push adc adc push rclb ficom into sbb push int rclb push lcall xchg lea push adc fsts lea aam push push pop rcll into push push (bad) das or mov insb in jmp in sub dec pop or lret sub lods mov outsb call insl or mov sub daa es insl insl data16 mov je inc pop and xchg mov daa sub sub sub sbb and sub xor cmp mov cmp sbb mov adc (bad) lcall or call xchg or test inc test das sub push sub movsb xor daa je test push push adc test add adc je cmpsb xor xchg xor mov mov lret stos mov mov mov or push mov mov jp sbb lcall pop lcall mov mov cmp mov or mov jmp movsb daa je ret push inc adc inc push addr16 xchg hlt es pop add xor sbb sub mov fmul push lds or movsb and push add ss add orl dec or subl push xor or jp dec sub sub fdivrl fnstcw in int3 fsubrl xor pop dec imul inc xor mov add xchg xor cwtl mov call push jb inc dec push insb push dec and or pop test out xchg out adc aaa mov ja (bad) mov add adc pushf rcll push pop mov push mov inc mov insb lods (bad) dec int push inc dec bound mov leave pop adc das dec inc adc lods sub cmp fcoml push adc push push rorl push es imul imul insb sub das add lods xchg dec jp push xor cltd adc and fmuls mov mov je les xor jp mov fstl pop (bad) mov push dec sub inc ja inc sub xor mov and or rorl or dec imul adcl pop and (bad) xor int or in xchg adc mov (bad) mov pop into lret inc cmp insb inc jb inc xor sbb push inc xchg arpl ret sub cmp rolb adc sub ljmp into add mov push outsb push sub sbb xor mov cwtl dec xchg sbb push ficomp fsubs and jae mov inc lret (bad) sub enter dec in ljmp xchg rorb dec or test or xchg gs cmpsl push out xchg push fwait dec cltd leave mov mov or in mov es push push xor or xor (bad) mov test xchg jae add test pop push ret sbb xchg dec bound addr16 arpl jbe xchg sub or out cmpsb xchg xor (bad) push adc je sbb mov les pop (bad) out inc xchg push xor and adc pop fsts mov ja jbe xor or dec dec mov and sbb int mov cmp outsb ret xchg repnz shrb push push cmp int3 aam ficompl sbb repnz lret push mov dec ret movsl adc xchg enter fsubs xchg inc je xchg cmp and or enter fs jbe mov sbb pop jnp dec xor rol ret aam roll mov dec inc xor and sub push push dec ficompl mov test scas pop andps mov mov mov push nop les mov dec ja push arpl jp xor jns mov (bad) hlt data16 adc xor movsb daa cmpsl xor and scas inc mov movsb jmp les push xor inc mov mov aam enter jb push out movsb push sbb shrb push lea enter rorb inc push adc and dec push inc dec cmpsb int cmpsb push test ja push adc xchg add ss bound adc (bad) lret jb xor adc mov xchg lds fsubrs in push fs xchg outsb call mov outsb out aam (bad) (bad) mov cmp sbb mov xchg rclb call int int imul dec addr16 mov (bad) pop fcoml dec dec inc out mov push dec invd mov aaa cmpsb movsb test xchg mov lcall pop inc dec shrl and mov leave lods push mov andl jecxz addr16 xor sbb mov xchg lea xor mov mov adcl hlt pop popf fisttpl push adc jne and cmp xchg xchg pop sbb fisttpll push push sub pop cmp inc leave mov inc xor aad jmp xor mov mov xor cs sub add cmpsb xchg mov mov xchg xor push lret roll mov stos pushf push mov in (bad) inc xchg in add jnp pop push mov out mov stos mov and xchg sbb lret sub sub dec mov or shrl test aad and sbb cltd xchg sbb adc jae rorb stos mov mov insl ljmp out inc cmpsb xor les movsb and out outsb dec es into sub jno and and adc push inc push loope cmp xor mov inc jns inc addr16 subl mov lret adc mov or rclb divb aaa xor popa and lcall xchg or jmp push es (bad) jo mov movsb xor and sub movsb mov xchg sbb push mov adc movb lods xchg aaa adc xor es jp fmul xchg pushf aad test in lock call push jns dec xor or int push pop pop push jne jbe push xchg and mov mov push data16 push lds sahf xchg lea jb inc movl cmp push or or insl test cmc adc xchg (bad) aad jl outsl inc js cltd mov and cmp adc xchg test mov inc push inc subl inc lods xchg (bad) or rcr roll push dec or dec imul or sub fildl rorl or or (bad) mull xor popw je and mov call pop and mov push inc pop add adc pusha mov int3 xchg mov xor fs push mov mov imul fwait xor jbe jp push xor cltd adc pop addr16 inc mov test xor les (bad) mov shll bound pop sub int3 jae mov lcall aam xchg adc mov leave dec xchg hlt pop ret and (bad) sbb push pop mov or adc or or bound (bad) in insb and xor and push dec (bad) cwtl push test popa cmpl sbb mov and rcr lea imul aaa adc cmpsb test loop arpl xor mov mov int3 lock jo popa xchg loope leave cpuid xchg xchg dec push pop sbb sbb push xor sbb mulb stos fwait subl inc test dec xor out dec sub test inc dec mov lcall mov and sbb adc push dec (bad) es push dec ljmp mov mov lods adc (bad) (bad) jo loopne call movsl (bad) cmp mov dec dec mov sbb xchg inc or dec (bad) sub or sub cmpsb data16 addr16 dec int3 in (bad) cs or inc imul lods dec sub inc dec ss inc sbb and jno mov or inc or loope int cmp rcr mov add dec fsts lods and sub dec and or test lea flds fsubrs cmp add push int3 mov add leave or jmp sub cmp leave add fadd xchg add mov lods add cmp in rcrl lods fisttpll pop mov xchg leave mov sbb mov aad cmp flds add and inc shrb sub rcl lods loope or in test add inc fstl add mov shll and int sub pop aad in test inc dec fst rcrl aad mov lds enter leave and leave (bad) jmp and sbb gs sub pushf loope inc loope nop fnsave shll add rcll xchg pusha leave add mov sbb cltd movsl inc leave xor (bad) aad dec loope mov or and loope inc fldenv popf fsts leave or sub fldcw movsl mov shll mov test aad cltd add and push add in int movsl test add test mov inc int xor gs jmp flds fxch mov inc add and ror add ret and adc fcmovnbe nop push pop push push pop sbb dec sub mov stos dec enter jmp int dec or dec dec dec sub or sub enter test and sub adc cmpsl xchg xor je push add jns xchg adc lcall or subl ret pop lcall jnp cmp lret and mov and mov test rcl dec dec stos mov into dec xchg lret push adc add fs sbb mov adc or in test add in lods dec jmp adc push mov cmp mov aam pushf rclb aad pop pop inc ljmp jo outsl xor jb xor cmp pushf cwtl mov dec cwtl ficomp dec lret iret or leave dec in jmp inc jbe lds push shll adc push inc cmc jb xor fwait adc xchg push fcmovnu lcall aad dec pop push sahf sbb xchg or dec inc gs or xchg gs xchg and push adc je mov cmc adc xchg push ss mov lret mov adc out rcl bound imul dec insb inc sbb cmp int sahf popf nop dec pop xchg dec sub es insl or mov sub lds inc inc xor ss xor push addl add adcl hlt roll les (bad) lret rcrb xchg pop mov fldl2t or shll or cmp push imul xchg cltd cmpsl mov mov cmp fst dec int xchg or mov rcr adc xchg (bad) lcall test xchg outsb bound pop xor ja addr16 aaa pop xor jno arpl cmp and cmpsl mov sbb cmp cwtl fsts xchg rclb adc push xchg fsts push rcrb cltd adc push sbb rolb dec pop sub outsb call sub or push je test divb testl add les leave mov jnp or xor pop and adc xchg xor sub mov push int out dec into call in ljmp insb insl mov les adc push repz xlat push mov popa xchg cmp pop xchg or mov shll xchg lea or test scas call je cmpsl and xchg movsb aam push test fs je fs jnp arpl cmp and ret rol adc mov cltd lods fstl sarl enter enter inc movsb xchg test and xchg sbb xor sbb adc inc jae sub xchg fmull mov enter bound outsb pop inc dec jae push xor bound subl rorl dec cmpsb or mov or (bad) jae inc sub mov mov mov movsb push imul push roll mov or jbe inc adc sub dec aad aad cmp nop in into ror int3 stos pushf xchg nop mov jb dec dec bound jns inc and mov cltd mov xor dec imul fwait pop adc (bad) aad popa jmp cltd adc xchg shrb ret xor cmp push dec xor outsl push int int adc call xchg pusha fadd xchg push arpl dec push arpl pop inc push push das dec push outsl push dec mov dec pop push adc sahf adc or insb xchg cmp es xor mov cmp mov fstp sbb push adc sub int push push push sub ret cmp xchg dec push (bad) mov ljmp or dec in push xchg sub or or ret jp jae xor test loope shl adc pop pusha loop mov (bad) call outsl dec dec cmp push inc jae and movsb and test sbb mov sbb mov xchg xchg push pop sbb int3 push dec cmpsb enter dec dec mov movsb xchg push data16 divb cmc cmpsl push push sbb mov and mov pop adc adc inc inc push movsb xchg aam xchg inc xchg mov je mov or stos ret ret imul rclb push jo pop out cmpsb in inc xchg mov xchg sub and fimul inc in dec scas add in push xor sub mov movsl stos sub xchg test dec (bad) push dec xor jno cmp mov stos movsl movsb sub cmp xchg dec sbb or rcrb pop mov push in leave adc mov push xor push and insl or xchg test inc push push mov ret dec dec push xor into dec rcrl fcmovnu adc in ljmp push (bad) and jb fwait pushf and xchg test xchg cmc push mov (bad) mov adc xchg and in and sbb aad nop dec into mov xchg test jecxz lea cs inc js sbb roll adc pop adc test enter pushfw fs mov mov and movsl xchg dec sub xchg in xchg mov addr16 mov xchg (bad) rcll into insb lods mov bound les inc xor xor leave mov xor ret cmp fdivs sahf hlt bound jbe push popa xor rorl (bad) stos or leave mov dec stos mov dec cwtl (bad) push (bad) fimul shrl or dec dec out dec lret scas iret sub push pop xchg push cwtl rorl iret dec or sub shrl mov or fcoms xchg lcall popf sbb insb insb fs aaa xor jb and sub adc xor sbb bound adc inc push jp inc cmp cwtl mov mov out insb inc imul or fimull int xchg inc xor xor popa push or inc or xor mov or inc insb call leave mov or push and lds inc jp mov stos mov dec ror fsubrs inc inc divl jno xor int pop adc push test jne inc jbe push je ja gs test and es inc jb movsb inc xor arpl sub sub je push data16 push inc inc inc push pop dec inc outsb push inc jp and and sbb gs sbb dec inc fs cmp jbe xchg or push dec (bad) out test movsb hlt movb (bad) adc cmpsb mov cmpsb cmpl lret or xor lods dec sub daa mov (bad) inc xchg jbe js push and jp push mov ret or pop (bad) cld (bad) cs or sub dec dec or insb int stc xchg sbb xchg lret cwtl jmp (bad) mov rcl dec test pop sub pop or xor mov lods or inc inc xor inc xor lcall push or insb lret push outsb push cmp ret adc lcall mov adc push loopne jb call rcr xor inc sub dec xchg xchg int3 xchg and sub dec mov addl mov shr and jae cmp ljmp mov fs jbe inc dec aaa dec inc cmp cmp movsl mov int in dec push and pop stos or sub and push or stos outsb sub call lea into (bad) ljmp into add test int insb int push call dec out dec int3 mov or dec call dec or mov sub sub int3 stos dec scas mov insl sub push insl mov sub push imul push dec outsb out push lods mov test ljmp es out or sub sub insb leave das es dec push dec gs leave stos insl outsl add dec dec sub test sub dec push scas dec cmpsl sub call dec (bad) out lods lods dec sub add cs or es cs sub sub or outsb (bad) or or stos dec mov sub sub or in sub sub jmp push sub sub lods call sub insb int3 call dec out test scas push mov dec leave push in xchg push mov mov mov sub sub jmp daa or sub mov mov dec dec into sub xchg push es leave jmp addr16 call out dec cmpsb outsl or test call inc push imul mov mov lret call sub lods in cs cmpsl prefetch or (bad) int imul ljmp mov in mov sub cmpsb scas dec in sub imul sub daa sub sub dec scas sub es dec cmpsl sub dec lods lret int scas dec iret dec call sub vphaddwd push dec int sub call in lods sub sub mov out push (bad) lods call xchg or inc outsb outsb call iret and call or in call imul call stos push lret test in iret push in mov sub insl dec mov sub leave imul imul mov sub call push mov dec out sub lea ljmp dec call dec mov call sub push sub cs int stos scas mov dec call push dec dec or or out lret out push mov sub insl mov sub scas dec sub dec test sub lods dec lea call push (bad) dec sub sub call mov dec out push lods call dec test jmp or dec cs outsb das and dec stos sub lret call sub mov push in dec scas add sub dec cs sub cs or dec or insl xchg mov outsb lods mov sub xchg dec int dec pop sub cs or stos dec dec sub outsl dec mov mov call jmp or sub lret sub out add xor push into or fstl push rcrl push xchg sbb sbb int push aad or adc lcall mov push fmul dec rclb aad cltd ficom aam call dec or mov sub sub int3 stos dec scas mov insl sub push movl mov xor pop pop mov or jnp fwait push mov imul mov mov and adc fwait xor mov and rcll (bad) lock (bad) fs gs inc insb popa xor insl dec xor mov and lcall mov aam insl iret cs or es cs sub sub or outsb (bad) or sub or push adc push push push popf rcrb pop (bad) push push pop rcr loop je xor mov daa mov sub daa lods sbb cwtl and and mov mov mov cmp stos xchg rcrl adc xchg adc adc or nop rcl (bad) fst dec fsts fmul sbb int3 lcall imul js outsl inc xor and sub xor xor cmp cmpsb stos movsl and cwtl mov sbb lea lcall fcmovnbe fnop pop lret int push fistl xchg push push test dec in sub imul sub daa sub sub dec scas sub es dec cmpsl sub dec lods lret leave xchg add adc arpl je xor out xlat inc sbb fstps push adc mov out push (bad) lods call xchg or inc outsb outsb jmp xchg mov mov xor xchg add mov add popa sub adc mov or xchg test lods sub and mov inc or in jmp dec int3 (bad) pusha push bound cmpsb mov into mov loop loopne (bad) out xchg xchg xchg and ja ret jb pop stos stos mov and mov inc xchg push (bad) mov pop fstp push xchg sbb or (bad) data16 bound hlt repnz jo ficompl mov mov pop scas mov into adc inc lret sahf les xchg mov fimull into mov aam in loop pop fsubl adc jecxz and or and pushf test enter (bad) jo les mov mov mov fsubr (bad) in (bad) lock bound mov dec jbe jne push cmp movsb sbb xchg push push xchg ficompl push sbb adc push hlt mov adc and sub adcl cmp inc mov loopne popf adc movsl adc or rcll adc loope fld sbb jmp in inc or movsl and inc dec in fs push cmp lcall pop popf dec adc int3 sbb xchg dec dec cs lods call sub xchg xor xor or push sub test pop inc jae je je andl xor inc xchg loope aaa adc aad scas inc inc aam push and or imul and mov test faddl (bad) lret inc and sbb mov aam lret aam push rcl mov imul test lret fwait cmp xor dec sbb adc jb stos loop mov xor sub ss mov mov push repnz mov push push inc dec das inc dec pop jp push push mov sbb ficoml jmp and stos mov mov sbb test mov xor imul repnz fstl lods out (bad) mov rcr mov xor cmp xor mov mov mov ret mov popf add (bad) or movsl or dec mov movsb push cmp mov lods push repz cmp mov mov inc cmpsl jbe in into dec test pop mov cmpsb sbb mov push and lods shll fs xchg mov stos (bad) loop mov push scas inc cmp xor aam adc ret push mov xor sub rcrl pusha pushf mov mov sbb daa sbb sub test ret jp xchg test or pusha (bad) inc test push sbb mov popf push xchg lcall int into sub es lret or es mov inc cmpsb mov out mov nop mov inc lcall pop xchg adc stos ficom loop and adc xor in in (bad) xor mov int lock cmpsb retw pusha (bad) fmuls push push dec jp ja add ljmp movsl adc inc xor lods int test inc call arpl cwtl cltd lcall adc cmp bound or jp mov and mov sbb out data16 add test sbb sbb mov imul bound jnp sub aad inc pop cmp outsb loop les mov gs xor dec dec mov pop push adc sub dec push xor jnp arpl imul sub and cltd in aad pop mov ss cmp mov rorl mov mov movsb scas (bad) or ror (bad) cwtl aam pusha gs popf adc sub int in mov xor arpl jp bound mov leave sub int fstps loop popa fs insb pop jae rorl es add push xor sub lea push sbb enter xchg int3 nop xchg les mov xor mov sbb push pop xchg xchg les and pop mov sbb mov iret or push adc (bad) or out test imul mov dec mov jno xchg ffree (bad) xor sbb mov sub cmpsl test sbb jae arpl mov into lcall and mov xor cmp dec dec int3 enter ss (bad) data16 divb mov mov loope movsb mov cmp adc xchg movsb loope or ss sub lods popf adc ret mov jmpw call lods cmpsb lea in pop or push lods call sbb or loop inc sub lods or or mov inc cs and nop int pop ss sub and sbb fwait pop popf push xchg cltd pop sbb push dec mov into mov out or inc push cmp cwtl mov lea push enter mov and sub aam or sbb push fnop cltd pop push and inc and lcall mov xchg sub popl xor jp adc cwtl pop and and stos mov xchg adc inc xor test xchg xchg mov cmpsb mov push lretw popf or pop inc push data16 notl sbb mov sub push push enter pop xchg int add in stos pop or inc pop mov xor and mov dec sub push jne mov and mov or inc jmp outsb call dec dec dec in call push sub addr16 dec lea scas sub sub call lea dec ljmp sub dec sub scas inc lods insl leave test mov mov leave cmpsl or cs imul jmp insl dec jmp push dec outsl or sub dec or int push ljmp lods cmpsb push mov call or or imul leave jmp dec mov xchg dec mov dec push out daa sub xchg test sub mov dec sub dec xchg dec test cs out ljmp (bad) dec imul and dec lea dec dec test dec push mov into ljmp or or sub (bad) or mov enter sub inc call call lret or push sub sub int dec push into call sub cmpsb lods es push call int3 test push insl dec dec lret inc out or push outsb lret es insb call lods lret sub sub imul scas call or lods call insb (bad) outsb call sub int3 mov or call mov push sub sub sub sub jmp out sub call outsb sub sub mov mov sub xchg inc sub dec gs sub inc push dec (bad) mov dec insb lods insl lret inc int3 leave outsb call test imul dec daa or outsl sub mov leave leave mov in push mov insb call scas or or into outsl inc call or test or lret jmp mov imul mov sub dec sub in call cmpsb lea test or push inc out sub sub ljmp int3 (bad) or dec mov in out push sub sub jmpw sub in stos push sub mov test push es push leave mov out sub lods int3 test dec push cs sub sub inc scas in dec (bad) push test mov test xchg cs in insb dec call cs leave sub xchg lret or sub test lret out out push data16 cs insb lods cmpsb dec lods insb int sub out push dec xchg or test or (bad) enter sub sub lods or push mov sub sub test scas in ljmp push mov dec cmpsl sub (bad) enter or leave mov mov mov sub or in sub lea dec lret sub sub leave addr16 push insb xchg imul sub ljmp push dec int sub or stos jmp dec mov pusha insl arpl adc or pushf popf fnop push sbb fcmove sbb sbb push rclb fst push dec ficompl sbb rcl dec dec ljmp sub dec sub scas inc lods insl leave test mov mov leave cmpsl or sub xchg movsb xor (bad) (bad) xchg xor push jne cmpsl je aad aam pop test es test and jne or dec push xchg arpl popa ret mov push ret lcall mov jp and dec pusha (bad) cmp test (bad) and in xor push adc push inc sub loope sub loope adc pop aad dec pop shrl and or popf add cmp jmp es add mov add test test xchg arpl sub jae pop pop in and dec fstpl cltd popa cmp inc or imul bound dec popa inc xor inc addr16 and movsl mov mov sbb mov cltd cltd cwtl xchg cwtl test and push sbb fcmovbe fstl fisttpll aad mov sub lods call insb (bad) outsb call sub int3 mov or call mov push xchg je adc xchg hlt push xchg daa je hlt xchg xchg hlt adc gs test dec shll mov push int3 test repnz (bad) aam pop mov inc inc xor inc xor xor arpl ss sub mov movsl sub cmp mov adc mov pop adc xchg xchg sbb enter fwait inc xor fwait cmp mov rcll fisttpll adc lea dec push out scas jmp imul xor (bad) push repnz jne insl jne cmp sbb (bad) or ficom test mulb add mov and repz stos and popf xchg pusha lds adc bound adc sub xor mov sub cmp ljmp aam mov ja push xor dec inc xor inc dec jb inc insb inc cmp lods pop mov and push xchg adc adcl push in sbb sbb pop ror in fsubr (bad) (bad) lret jmp and sbb sbb sub mov cltd sbb sahf mov mov lret inc xchg inc dec sub lods adc adc adc rcl enter xchg mov mov dec arpl dec xor movsl adc sbb sbb dec popf xchg lret push sbb fisubrl fs pop adc test lods mov inc aad pushf (bad) xchg mov xchg mov inc xor jp lret mov fwait push or scas bound mov inc dec imul xor cmpsb cmpsb xor int push adc push iret or (bad) stos or mov mov imul mov push push jno xor inc cmp mov lds lods sub xchg in adc rcl fsts in adc out xchg lods (bad) pusha xchg fwait inc pop test and mov fwait cwtl rclb into insl leave mov jecxz andl inc push push ret push sbb mov movsb inc outsl inc push jbe dec jnp fwait sub sub dec flds push int int3 mov data16 pushf inc xchg cmpsb inc pop xchg xchg xchg enter call test dec mov dec or test cmpsb push xchg cmpsl add xor push jns sub adc sub dec nop rcr lds adc ljmp repnz dec fs imul and cmpsb lods cmpsl cmpsl mov adc fstpl xchg and xor and xor and movsl and mov outsb in jo mov jbe dec dec sub leave fmul xchg imul push inc dec sub gs adc sub mov xor add mov inc mov mov pop ja push jae mov aaa cltd mov mov gs test and imul mov rorl mov dec dec js jne xor sub and sub outsb pop sub lret out ja (bad) push push cltd sbb pop and inc xor sub sbb sub aam (bad) sub and imul daa or addr16 inc sbb lods stos mov mov fcompl je arpl ss sbb inc es cmp xor inc es lcall lcall sub (bad) dec jne rcrl mov xor mov sub cmpsb push test xchg adc inc jp gs push xor adc in mov repnz test mov xor push cltd push cwtl cltd dec adc rclb add or or sub push gs out xor xchg mov xchg dec lret jb pop cwtl mov mov hlt hlt mov dec das dec popa dec xor pop cmp mov push and ret mov js and lods inc push insl xor rorl les bound push push adc cltd or push pop aam push cmp inc das mov adc ficom enter lcall mov (bad) dec sbb inc fwait dec or mov xor jo popa outsb insl ss and sbb int3 pop pop ficompl pop dec adc gs inc adc push inc push adc shll or mov xchg mov push inc xor sub fs xor cmc inc sarl data16 int3 call repnz and mov (bad) cmovs sub dec movsb push push testw mov xor js jmp and adc out xor mov sub mov sub mov sub sbb push fcompl xchg xchg mov xchg je pop dec pop bound push jne dec push je jo push ja pop adc jp mov leave sub lds test adc add cmp mov xchg or inc jp cmp sub dec pop inc sbb adc aaa inc xor mov aaa mov xchg fisttpll dec xchg aam lea xor xor and bound sbb adcl stos iret and xchg inc and fstl jmp adc scas test xchg xor jns inc pop insb inc xor fs fxch rorl int call mov push je sbb xchg pop aam cmp sbb adcl dec mov sbb adcl pop or aam int rcr insb into (bad) movsl and add call mov or leave test xor cltd adc dec aam sbb (bad) adc fwait lret (bad) aam xchg lods pop fldenv adc into (bad) enter sahf call stos and int3 ljmp jb enter mov pop push fcompl cwtl rorb movsb out test mov rorl in stos dec gs je xor adc jo push or fsubr mov mov mov ss nop fnsave inc sub xor (bad) fst leave popf cmp aam push repnz adcl inc jae sub (bad) xor pushf mov pushf pop adc testw jl imul fimul arpl xor outsb xchg in lods push test xchg cmpsb cmp fsubrl shll adc dec fcmovne fsub insb push inc push jecxz out adc cmpsb pop xchg adc bound loopne push and adc mul jbe and imul lods int push pop data16 sbb sub sbb rcl outsb cltd adc mov mov and leave dec inc mov xchg add sub xchg jae inc stos lret inc adc fidiv inc and mov xor or pop int test push xor je jae adc pushf movsb lcall out test pushf adc mov inc sub ljmp cmp sbb and into adc pop and jae scas daa xchg sbb cwtl aad mov out dec mov ss xorl ljmp int3 rcll mov push jns sbb test bound push and sub int leave test nop outsb mov movsb test pop loop js movsl pushf dec dec dec cmpsb push movsl mov adc arpl jae es ss je aam mov xor jbe xor jae mul loop es xor inc inc push ret jae aam (bad) je adc xchg xchg xchg (bad) je jb xchg xchg je adc (bad) xchg aaa push je adc pop inc xchg pop push adc aaa cmpsb test je xlat inc lds add je aaa inc inc xchg aam daa jbe and add aaa push xchg in mov inc gs adc es (bad) je and inc xor xchg inc and (bad) daa inc movsb xchg je notl fs adc je (bad) test (bad) ss inc cmc push ret xchg ss mov adc xchg push adc xchg aaa ja adc movsl push mov xchg adc push addr16 ret test es ja adc pop xchg test aam cmpsb cmpsb xchg xchg arpl inc pop daa inc (bad) hlt (bad) movsb roll cmpsb hlt push test hlt notl xchg adc push test lds movsb adc jne test xchg pop test movb adc es and daa xor repnz xlat push mov (bad) aad adc add andl divb in add in adc daa inc push push push xor arpl movsb cmpsb gs xor daa push je adc inc pop movsl push xor and jbe and data16 xor xchg and ja xchg test lds xchg push adc addr16 mov arpl xorl je adc (bad) arpl ret sub fwait push nop fstps rcrl push adc mov mov dec sbb ror fwait adc mov sahf enter mov sub dec or or sub in int or sub sub dec call sub call push xchg sub dec int imul dec scas mov enter dec outsb mov mov call outsb test push mov sub lods dec dec push and inc xor xchg inc and (bad) daa inc movsb xchg je notl fs adc je (bad) test pop sbb adc fwait cmp pop pop or lret stos mov sbb stos push mov xor (bad) sbb popa ret push mov cmp cmp add adc cwtl dec dec dec out xchg pop inc xchg (bad) hlt (bad) movsb jb push jp jnp and lret test mov push mov add or inc and add xor test mov mov test insl jne inc insl insl inc sub sbb (bad) fcoml rcr fistl xor movsl xchg mov pop (bad) xchg cltd xchg pop rcrb sbb pop dec aam pop xchg push into leave dec sub insl imul in test sub sub int and xor fwait dec xchg inc ret (bad) mov movsb aam cmp push pusha jo enter jne inc dec xor inc inc inc jbe and loope call (bad) fnstenv enter or xor (bad) lcall inc xor xor inc loope popf test ljmp jb addl jae shll ret fxam sub inc pop fs xor sbb fistl push mov inc push fs inc dec imul jb push dec jp aaa pushf and movsl mov and dec int3 mov pop dec rclb xchg adc or (bad) or lods movsb mov lcall xor pop jp ret sub sbb lods dec inc or fs xchg and inc ss xor adc adc push push push xchg push cmpsl je push testl push jns push popa orl test add loope sbb (bad) rol call cmpsb (bad) test mov push not xchg xlat add sbb lret sub xor push arpl mov aad mov sbb pop jo push stos xchg mov xchg movsl inc add mov xchg (bad) bound xchg fcom mov push and sub cmp adc mov enter pushf xchg in adc adc inc mov in (bad) xor cmc mov sbbl mov sbb rclb mov nop addr16 push je adc and mov xchg or (bad) int3 xchg dec push aaa dec xor dec das outsl ss inc push push sub and mov jno xchg rcrl inc cs imul sub test or (bad) bound adc out mov pop push dec inc pop dec xor sub fwait and sbb sbb pop push mov fstpl mov test mov push inc test push stos mov imul adc je push xchg xor xor xchg xchg data16 adc mov sub sbb xor shrl mov lods dec mov lods aam leave sub adc lds lods roll adc push mov rol fst int movsb inc sub xor dec imul pop sub inc push push inc jbe arpl push xor push xor or mov dec ficom fwait sbb xchg les dec sub jo pop addr16 and sub cmp mov mov sbb cltd sahf xchg adc (bad) outsb jmp call inc or cmpsl je add sub dec popa and dec inc inc pushf pop test xchg dec push dec insl dec push inc cmp outsl xor outsb arpl inc and cmpsl sbb sbb adc push int xchg xchg pop nop fcompl enter xchg xchg cmp inc insb push outsb js js jno push push inc inc nop shll mov mov (bad) lret and adc mov bound push jnp mov enter mov cmp fs and es mov sbb push pop xor xchg mov cmp test or push jmp mov mov and (bad) rcl pop les adc rcl rorb push cmp sbb or sub int3 (bad) dec cltd movsb loope mov mov stos ficomp mov (bad) data16 fadd bound mov mov pop pop movsb jno push das adc mov push int3 in enter jb outsb loop test mov cmp lods lods mov sbb xor mov push push popf adc out in lods inc or push es cmp pop inc adc sub (bad) gs mov jp cmp cmp cmp mov sbb push into mov sub prefetch or dec call push xor lea dec (bad) mov lods and mov sahf pop mov pushf push xor sbbl (bad) pusha push (bad) inc and xchg js sbb inc imul ret inc sbb mov mov mov pop pushf xchg xchg sbb (bad) dec mov (bad) int adc sub leave movsl in ror shll adc (bad) push push mov data16 cltd inc sub mov xchg sbb adc fwait push add test xchg mov shll and push pop dec push lcall push in jb xchg mov rorl scas dec test gs call xchg rclb fdivp mov addr16 addr16 inc pop adc sub leave push lods inc mov lret jb xchg shlb push xor insl inc dec dec inc cmp daa sub ret arpl sub cltd sbb dec cltd sbb sub out jae int3 (bad) lods in aam insl xor and sub loopne fsubs mov xchg gs mov adc fdivl (bad) sahf daa inc and es int daa jae adc daa data16 push inc je test and lcall in xchg les mov aaa test sbb rcll adc daa and push jp fsts les or xchg adc sbb push xchg ror mov push dec lods es add insb xchg insl dec add and popa (bad) jno fisttpl adc jmp inc jmp mov cmpsb mov inc mov mov cmp mov adc jp mov push adc mov cwtl fisubrl adc daa and je je inc sbb sub sbb push dec int push sub bound or pop push out inc push push fs sbb sbb sub int3 leave movsl adc ror in sahf xchg push (bad) fisubl inc adc xchg pop mov out data16 repz lcall or xchg push dec test push gs mov jbe and daa cwtl or inc dec or cmp sbb mov fwait movsb xchg dec pop pop sahf dec pop push push or pop lcall movsb aaa xchg cmpsb mov adc (bad) jmp lods and cmpsl cmp sub in sub xor movsl mov cwtl lea rcrb (bad) (bad) bound xor addr16 inc adc rcrl push mov xorl mov adc test lea and push push cmpsl inc data16 je test push pop in inc jne adc adc sub out dec je cmp adc xchg dec rcrl lcall out mov mov nop mov fsubs mov xchg les data16 ret mov mov aam pop call lret push sahf fsubrp (bad) jo push mov fcmovu ljmp enter scas nop mov pusha (bad) int3 mov jb mov pushf (bad) mov lret jo rclb movsb xchg mov mov loopne hlt hlt stos pusha lcall lods push test xchg (bad) lcall (bad) mov nop ljmp into (bad) out mov sahf lcall (bad) rorb pushfw fcmovbe mov pop mov fs (bad) call cwtl movsb lods push xchg (bad) push (bad) insb hlt insb mov in stos loop sahf fsubr mov (bad) lret aam outsb into xchg xchg pusha (bad) mov mov enter jb nop xchg lcall int3 fimull push test movsb stos scas fdiv xchg (bad) (bad) (bad) pop in fdivl int3 fcomp stos (bad) (bad) fcomp pushf xchg mov ret scas pusha in cwtl hlt (bad) (bad) ljmp bound (bad) (bad) out pop mov out cwtl jo repnz jb movsb out (bad) repnz stos (bad) (bad) cmpsb (bad) mov mov xchg (bad) mov xchg int3 ficoml (bad) fdivs mov fmul fimull loop mov push push nop call push mov nop test fcmove (bad) jo push mov cmpsb repnz (bad) into xchg xchg xchg repnz mov movb pusha ficoml les scas fsubrs (bad) (bad) loopne mov mov mov xchg enter insb (bad) (bad) loop in fiadd lcall mov fiadd in cwtl fs in repnz repnz sahf mov (bad) (bad) lock mov ret int3 mov xchg (bad) ljmp mov (bad) mov cwtl xchg shlb insb lcall shr in ret call hlt nop ljmp xchg into bound loop data16 test test ljmp push lcall xchg shrb (bad) test scas into into scas loopne loop (bad) mov fimull ficompl (bad) fs xchg mov push pushf lcall mov lcall fsubrs lret (bad) mov (bad) lcall insb (bad) test lock int3 stos mov mov mov in nop insb (bad) les enter enter xchg pushf movsb push test out mov out ljmp mov ljmp nop scas insb ljmp data16 xchg nop jb push mov (bad) xchg fsubrp out fsubl enter push scas push lret mov test mov scas xchg mov fisubr push pusha hlt retw (bad) mov test int3 nop bound data16 into test nop lods outsb aam movsb mov mov mov nop into test shl test lret lret mov enter rcl pushf into les out test lods ret xchg out (bad) mov xchg outsb mov fnop push arpl nop cwtl pop xchg push pop sbb sbb cwtl push push fwait pop or push pop rcr cwtl mov fcmovu push fsts push fwait pop pop xchg lret fstpl mov adc push or push fcmovnu rorb mov push pop pop sbb push (bad) or mov adc push dec pop (bad) push adc insb test xchg dec sub leave cmpsb inc and xchg and push adc add add push mov xchg mov stos mov mov pop push jnp imul aad adc fstl gs lods sub mov fcmove pushfw fcmovbe mov pop mov fs (bad) call push push xor jno inc and fld1 fstps roll adc adc in aam outsb into xchg xchg mov inc das das outsb pop das fs inc sbb movsb and sbb popa or outsb enter add jbe test pop jnp jno ret xor sub test test flds ret scas pusha in cwtl hlt (bad) (bad) ljmp bound (bad) (bad) out pop mov out cwtl mov cmp imul mov mov adc fwait pop push repz push xchg push jae push jnp or test shll rcrl nop nop test fildl es cmp mov push pop push adc sbb mov or push rcrb or dec dec ljmp push jns adc or sub xchg mov loop in fiadd lcall push dec pop inc outsl inc data16 inc jbe xor jbe jae jns adc movsl loope adc int pop test and mov add leave movsb (bad) rcr xor ja repz or stos rolb (bad) adc xchg or mov mov or xor and inc add cmp outsb inc push inc js dec push pop xor mov dec test inc scas mov xchg and arpl (bad) xchg cmpsb xchg lds movsb inc inc push xor mov int lock int3 stos mov xor dec jb dec xor cmp lods xor lods and cltd lea das dec test insl outsb test jmp addr16 push ret je inc adc jae push jne pop inc xchg jae push inc lret pop mov shll xchg push inc push enter ja xor sub inc inc dec push bound gs push push inc popa push dec inc imul inc dec xor popa inc inc push dec xor xor gs aaa fs push xor push sub mov test cwtl adc daa mov and xor stos and stos sub sbb movsb sbb cltd fcoms sbb pop popf or fcoml aaa pop dec outsb insb xor inc pop dec sbb mov cmp xor sbb rclb rclb rcll pop fwait rorl adc insb movsb adc adc int3 pop aam xchg fcoml mov xchg xchg je je mul aam inc xchg add mov je movsb shlb (bad) adc adc mov or sbb mov les pusha scas lcall pop inc insb js inc and stos cwtl mov cwtl test mov or pop pop sbb dec ficoml adc rcll xchg lea aam dec cwtl rcrb xchg push fistl in mov inc (bad) out je jbe cmpsb aam xorl inc cmp or imul jb and inc adc in mov leave pop lods inc or int3 (bad) or cs jne data16 mov je test testl adc (bad) xor adc xor in adc test mov iret inc cmp sbb es cmpsb mov or int3 push fwait pop call adc push adc mov mov pop mov xor cwtl ror sbb sbb inc sub test out push push xor and mov adc test test inc and enter fs inc aam xchg push jno cmp dec pop push xchg xchg mov xchg pop les es sub (bad) sub sub xchg jbe fs lcall and xchg fwait push adc mov pop pop pop je jo adc (bad) adc xchg loop enter inc push (bad) stos popa jns or or in aad mov imul and cmp (bad) fstps dec cmpsb xchg and push and andl fs xor inc pop xor cmp cmp lds inc mov les pushf loop mov push xor push dec xor or sbb inc scas fiadd hlt std adc mov cmpsl sbb mov insl cmpsb imul and jno mov leave jmp in test das push imul pop xor push xor mov out (bad) dec dec dec inc cmpsb enter xchg adc les dec lds push jp inc js roll test dec bound jns jp dec xor and test test xchg adc xchg jae adc and sub pop dec mov push bound jns jne inc inc sbb sbb sub test movsl movsl movsl xor cltd cwtl rorl out test push mov movsb test movsl mov push xor cmp cmp sub loope lds dec lods es imul adc mov ljmp mov and adc pop and popf enter scas xor cwtl popf int3 inc (bad) cmpsb movsb gs jecxz leave dec lret sub bound sub fnstsw push das xor jne adc adc nop test pushf and sub les (bad) inc (bad) aam inc sbb cmp int cwtl dec dec dec cmpsb hlt (bad) hlt movl inc and aad call mov test aad cmpsb out mov lret push inc mov movsl xor mov mov xor xchg mov pop xchg aam cltd lret rorl leave dec das sub sbb enter xchg inc inc addr16 dec sahf pop push or in dec out dec mov and mov leave mov cmc inc mov cmp or inc xor shrl dec rcrb or pushf mov inc or add push push mov sbb mov mov jb ja addr16 xchg in sbb sub loope pushf scas inc mov inc aaa xor pop sahf dec push push pop nop dec enter push popa xor adc xchg loope mov inc inc cmp data16 push adc push adc cwtl mov pop and mov pop xchg dec pop fwait bound xor test (bad) in ljmp jns gs ja jno push push int imul xchg push pop and jnp mov (bad) xchg repnz test and arpl cmpsl mov xchg xchg adc and mov sbb pushf xchg mov pushf (bad) lock imul ja imul xor inc loopne inc fs mov dec sub (bad) insl mov dec adc (bad) mov je out ret and or or push js inc sub fwait and data16 adc dec jae jnp xor cmp fiaddl inc es mov and rcll dec lret les push aam adc test inc fwait adc cwtl lea mov mov inc mull outsl xor and mov xor xchg mov mov sahf mov jo push das dec dec fs inc cmp and mov push rcll aad call test out xor stos mov xor xor (bad) fcmovbe cltd enter mov mov int rorb push dec ljmp sbb push adc gs ret daa add jno mov mov xor or or mov sub mov mov xchg nop ficomp sbb test jae ss hlt in xchg or mov ret aad fmul stos mov data16 and xor dec insl popa push xor jp mov (bad) mov sub inc pop inc dec adc insb dec pop xor and sbb stos sub sub mov lods lret (bad) dec dec loop jbe loop movsb lods and adc dec pop push adc das mov inc je adc sub imul ficomp push push push push adc fnop pop push pop pop ficoml cltd pop push pop rcrb push sbb pop sbb lea push mov fistl xchg (bad) xchg lcall push sahf or or nop aam push rorb pop pop push pop or dec cltd sbb push push pop push pop pop pop adc (bad) fcomps push dec rcll xchg xchg aad adc pop rclb int or pop rclb pop push cltd or cltd ficoml push sbb push or adc or int3 push lcall pushf lea rcrb adc (bad) push sbb or push int3 adc pop rcrb push sbb sbb dec mov int or adc rclb adc pop xchg int xchg push push push fwait adc rcrb push pop rcl xchg adc aam push push pop pop sbb aad rcrl pop rcrb rclb rcl or xchg adc push or cwtl fcomp rcll sbb dec xchg adc mov rclb sbb pop adc nop push pop fimull int cwtl pop adc pop into pop fstps push push xchg pop rorb int3 push adc popf rcrb pop push cwtl dec push fstl sbb (bad) cwtl xchg or adc adc pop rcrb aam fst dec push rcl cltd xchg int3 pop push pop aad pop pop xchg (bad) adc dec sbb rclb mov adc push mov adc (bad) aad sahf adc push lea fcomp push push pop aam mov cwtl rclb lcall sbb fwait push adc fisttpll ficoml rcrl sbb push inc insl bound mov lods sub cmp sub mov mov mov mov mov mov movsb xor sbb mov and lods sub daa mov cmp sbb mov mov cmp cltd xor mov mov mov mov lods sbb and mov stos sbb daa pushf cmpsb mov mov xor mov mov sbb movsb sbb mov xor mov cmpsb cltd cwtl cmpsl stos xor and sbb sbb movsb xor pushf mov xor sbb movsl test mov mov aaa lcall lods lcall sub lods sub xor mov test ss cmp aaa adc mov and sbb xor movsl sbb mov cmp pushf and mov sub and fwait mov mov test lods mov mov and lods sub aaa movsb mov mov (bad) cwtl xchg or adc adc adc aam rorb xchg int3 pop push pop int3 ret mov lods xchg adc xchg and test xchg mov jne daa (bad) sbb sbb dec mov xor leave movsl gs mov mov and fcomp sub int and dec lea rorl in sub adc sub xor imul test fnstsw cmp cltd pop rol popf sub (bad) int sub mov in popf sub ror jmp enter push sub push sub push lods inc popf xchg pusha rcll sub rcll vmovapd shrl fmul push bound dec dec popa inc jne dec jp mov dec scas or data16 dec jmp mov ljmp push adcl inc inc lcall push xor lret jb lcall sub (bad) leave leave pop or or jp jp cmp sub es cmp pushf cmp and cmp sub and xor movsb and mov lods push cwtl cwtl pop push adc push lcall adc (bad) lcall daa and es push xor pop push mov ret ret mov or jae push xchg stos cmp jp mov sahf and mov nop int xchg push imul out cs out dec dec dec sub or jno xor cltd adc push mov je je xor test adc daa sbb sub inc int sbb inc and or test inc rorl iret dec dec lods into sub dec push jp jp sbbl sub xor push lea aad ret push in lods inc push inc mov sub fwait aam nop shl arpl dec shll sbb (bad) nop pushf inc mov jb je pop das dec outsl dec cmp dec jbe fs arpl ja dec inc ss je movsb and and mov rclb xchg dec adc push pop pop pushf pop adc xchg adc adc xchg xchg (bad) push fistl sbb xchg push into pop xchg mov lcall gs fs add jbe jae je jne inc mov adc xor sub cmpsb fwait xchg movsb sub mov lcall data16 adc movsb xchg adc arpl movsb push inc movsl and and je add xor mov mov or cmpsb inc push push fs jbe xor dec inc ss dec inc xor mov xchg push pop xchg dec pop mov adc pushf adc xchg xchg xchg aad pop (bad) adc fsts push sbb sahf push pop dec ficomp inc stos stos cmpsw xor movsb adc push jne in notl movsl ss push push and xchg and addr16 mov stos lcall sarl lods dec sub dec pop rclb adc sbb rcrb push mov sbb fstps xchg xchg or fistl or jmp dec sub dec xchg xchg push and cmpsb adc mov testl daa inc adc cmpsb push fs aaa ja movsb in inc es xchg cmpsb xor out xor xor je movsl adcl mov pop dec inc dec dec sub dec es or push in test call dec dec mov dec aam ja xor jne xchg je inc test je xchg inc push test in cmpsb pop sub mov lods ljmp mov or cltd mov leave (bad) aad or sbb push leave mov int loope int cmp inc mov jmp arpl cmp sub movsl sbb sbb sub cmp mov mov int3 pop ficompl (bad) lret pop push inc sub cmp lret sub xchg mov les aam xchg enter imul push gs adc rorl add scas data16 and mov cmpsb and and adc aaa mov imul push and jb jns cld dec sub aad fstpl mov (bad) mov hlt ficoml xchg inc out inc xchg push cmpsb jecxz adc push (bad) addr16 add (bad) mov (bad) cmpsl jbe cmp ficom fst adc adc push cwtl mov push (bad) xchg cwtl mov sbb (bad) dec into mov cwtl mov (bad) xchg lods lock outsl cmp push inc jne push push adc xchg mov dec xor pop dec and or pop adc cmpsl inc inc mov xchg test mov gs push pop adc xchg movsb movsb in arpl xor sub push xchg cwtl xchg xchg nop push lret ficompl inc dec dec dec dec xor inc xor sub push dec inc cmp or add dec xor data16 jns popa dec inc inc inc inc xor push adc mov or imul inc inc dec push pop xor dec push insb dec dec dec imul inc dec das push inc adc cltd sahf push rcrl xchg push xchg push dec rcrb fstl xchg xchg dec adc or push adc dec imul push popa js jae mov push int3 lcall ja xor mov push nop in sub sub push dec jb adc xor and mov imul pushf dec sub nop pop fcmovnbe or adc (bad) dec rcll or dec and pop mov sbbl xchg dec ljmp push push dec xor les and inc inc inc push les add push and movl les and sbb jns adc fs xor test nop fs inc push not inc movsl gs inc inc fs xchg and sbb cltd movsb shll cmpsb mov inc arpl inc jae xchg xor cmpsb mov cmp pop or dec adc dec sub mov test jecxz sub cmp popf cltd xchg dec rcr fiadd gs les adc (bad) roll and sbb pushf rcrl or adc pusha pushf fs data16 xor loop pop xchg in lods shlb es aaa cltd push sbb fstl xchg push cld dec (bad) xchg xchg push mulb in das sub inc or push or push pushf adc push fld loopne inc mull outsl dec dec das movsb sbb mov insl xchg shr in lea dec dec sub int imul dec xor cmp xchg pop xchg aad xor jo ret mov xchg mov push pop xchg fisttpl ljmp mov js xor xor xchg adc or bound xor xor adc mov add mov cwtl pusha les mov xor and mov sub push dec stos add nop (bad) jmp enter sbb imul lea or imul (bad) pusha mov imul cs ljmp xchg test cmpsb push xchg lret mov cmpl mov xchg jp inc enter xor inc dec dec jo jb cmp push ss xor jo repnz mov mov xor and xor pop imul imul inc dec sbb inc pop sub inc jnp ret sbb or push (bad) (bad) push bound inc or stos jae pop xchg jns xchg jp inc push sub xchg lret sbb mov lcall mov lcall inc push stos mov jb sub and xor cmp orl pop (bad) or orl popa mov cltd jns sbb xor pop mov and stos push or adc jns ret jnp or cltd mov lret adc mov or mov mov (bad) sub popa stos sub or adc dec sub or push imul mov jb lret xchg adc sub pop mov jb or stos dec shrb push or sbb cmp mov (bad) shrl pop stos jb (bad) or xor push mov mov mov ror xchg or cmp sub dec or jp pop mov or stos mov sbb xchg sub sub push mov bound dec (bad) inc xchg dec dec xor jb mov mov adc push pop xchg adc or and adc cltd stos or bound mov mov and stos mov popa lcall jns pop sbb lcall mov jae stos mov mov pop jae xor xchg xchg or (bad) inc and rcrb and and cwtl lods sub and daa mov cmp test cmpsl lods sub xchg test mov mov mov mov mov aaa mov and mov xchg mov and xor cmp sub and xor sbb mov cmp cmpsb sbb cmpsb and mov sub fwait mov cmp movsl sub aaa mov sbb fwait xor test sub sbb stos xor mov mov movsl cmp mov and sub xor lods mov movsl cmp mov sbb xor cmpsb and mov sub xor stos cmpsl and and xchg sub sub push fisttpll shr in and sbb cltd inc xchg int3 pop sahf xchg loop (bad) scas fdiv inc push jae inc and mov cltd movsl mov movsb and mov movsl and sub xor mov sub sub lcall and stos cmp cmp sbb aaa cltd mov mov int xchg dec adc popf aad fcoms nop dec adc pushf sbb push xchg dec adc sbb push popf pop dec mov xchg xchg lcall pop fst popf mov aad int xchg adc rcll adc adc rcl sbb adc fcoms xchg adc or int3 mov mov and aaa es mov addr16 movsb inc push mov rcll test hlt cmpsl adc mov out xor sub xchg push fisttpll xchg call mov test xchg xchg push adc fcoms xchg mov pop pushf fcompl push xchg pushf push popf sbb xchg push mov xchg rcl nop int3 sbb push pop aam dec jmp dec dec push or cmpsl or in imul and xchg push adc (bad) out and jbe lods and popa xchg fstps leave adc test sub inc lds mov shll dec sub fstl fstpl lds mov mov lods jno mov pop adc dec out push jbe and mov mov fnstenv sub mov ret pop js int3 rcrb mov push pop adc (bad) (bad) pop fstl xchg mov push xchg int pushf push dec out mov xchg (bad) and ss push or (bad) pop push sub mov xor xchg stos push dec leave lret mov mov xchg mov pop sbb jmp fnstsw xchg int3 xchg xchg pushf les movsb mov out xchg jb mov fcmove pusha data16 xchg rolb bound mov lods xor stos xor lcall cltd daa or dec test jo dec inc pop arpl inc outsl inc jb xor xor pushf adc xchg fsts adc nop rcrl push out in gs jb imul jp cltd cltd pop sub mov lds dec and cmp and sub stos sbb and es cmp mov mov mov mov sub sbb cmp pushf movsb sbb daa les push adc push daa xor adc inc push in xchg xchg jbe mul les sbb mov mov aaa sub cmp mov and sbb sub mov cmp cltd fisttpll xchg dec add cltd or adc or leave or gs rorl dec xchg xor cmpsb mov (bad) xchg loop ljmp xor jne and adc inc cmpsb les xchg adc xchg out adc xchg test data16 xor test cwtl rcr fstps pop rcrb adc and xor inc and push jno xor or sub and insl push inc push xor cmp inc dec ss inc inc push xor push ficom cwtl movsb mov fs cmpsl test push mov (bad) xchg inc jbe xor es repz push je xchg push adc ret push push andl and push (bad) divb add inc push adc data16 notb inc inc adc repz les (bad) mov mov movsb mov mov and adc retw pop and xchg and pop popf mov and adc cltd pop mov mov mov repnz mov pushf out ljmp push push xchg shrl cltd sub cltd mov int3 jo push mov (bad) fs aam enter cwtl sahf mov loop xchg fcompl callw xchg push jb mov in test addr16 push dec dec gs imul push inc pop outsb push outsb dec adc lods pop aad fxch adc sub inc mov add xchg dec push push je jp jbe inc sub aaa fs push jo imul js xor mov imul mov and shrl push xchg lods cmpsb enter test sub dec dec sub stos insl mov movsl call gs and mov test xor cmpsl stos xchg pushf or or adc and inc inc stos jnp mov push cwtl ror mov xchg fidiv fs (bad) fs out sub sbb mov adc in xchg test out enter lret and je arpl inc je inc test mov xchg adc xchg xchg fcompl inc jbe cmpsl jno cltd and and sbb mov push mov and xchg lret push inc mov test mov test pop mov or pop mov xchg push inc movb and and jb movsl mov mov sbb mov lcall pushf sbb xor enter mov je sub cmpsl sbb sub and xchg pushf pop push push push lea adc mov xchg xchg movsl xor sbb and lcall sbb enter movsb inc mov inc and lods repz and jo xor dec enter (bad) and rcrb jp pop mov insb dec iret dec or sub dec outsb in loop push xchg and leave rcr add fisttpll cltd popa dec and flds add inc rcll leave inc cwtl loope (bad) fcom add dec inc bound cltd or push dec jmp inc ja dec inc cmp imul dec cmp inc dec data16 xor xor lret mov dec jb outsl jns xor imul sahf pop popf sbb adc adc sbb pop or rcr xchg dec rcrb rcrl sbb fxch dec adc dec stos xchg fsubl cmp mov sub mov ss (bad) int3 mov sub and xchg xchg adc xchg push push xor and mov stos stc sbb rcrl push xchg rcr sbb stos ljmp jmp sub xchg subl and cmp lret push call adc xchg inc xor cmc add pop dec mov push ficomp xchg fcmovnbe push push rcrb dec fmul sbb pop (bad) xchg sbb adc mov push push sbb lcall push int3 or adc push pop push xchg adc cltd pop nop push or cwtl push ficompl xchg pop sbb push cltd xchg pop lcall nop push adc fmuls dec fistl sbb aam push sbb fstps int pop pop pop adc rcl push dec or push sbb push pop rcl sbb push lea rclb dec push sbb dec pop rcrl push sbb adc push xchg pop dec popf rcrb pop pop adc nop lret ficomp rcll sbb push ficompl pushf fwait cwtl aam xchg xchg push pop push push xchg or cltd xchg lcall push fwait pushf (bad) fimul push push rclb push adc sahf pop rcl xchg cltd fstp adc lcall push push pushf adc rclb rcrl dec sbb mov sahf cltd push nop push or push sbb push rcr lea push lcall rcl sbb pop adc push pop sbb push push xchg fwait push push pop lcall int3 sbb adc fcmovnbe push rcrl dec pop fcmovnu popf dec sbb push push sbb push (bad) adc adc nop push lea aad popf fstl aam push dec or lcall adc cltd aam push push sbb push fimul aad aam aad rclb adc xchg (bad) push xchg push xchg ficomp adc into pop rcrb adc or pop fwait aam pushf xchg pop lea dec int3 pop int sbb push pop ficoml push push (bad) rclb rcll pop mov into sbb push aam (bad) adc sbb aam rcl adc sbb fcmovu push xchg adc xchg fwait sbb dec fistl dec dec xchg push adc mov push xchg pop aad pop rcrl rcll pop fwait int push int push rcll cltd lea pop rcrl pop lret aad pop adc dec push adc push rcrb adc mov int push dec sbb adc push rorl sbb push fwait pop rclb adc push push aam pop push int3 push push aad fstpl push pop dec push sbb adc fcmovnbe rclb pop pop pop sbb pushf (bad) nop pop xchg popf xchg adc pop fnop sahf push dec sbb push push push push nop aam push adc dec aam adc rclb xchg or adc pop pushf push dec adc sbb aam cwtl push or aam push xchg aad push push or xchg popf pop push xchg cltd lcall push adc sbb pop dec popf pop popf dec sbb sbb xchg rclb push adc pop lret rcrb push adc fwait nop push (bad) sbb cwtl rclb or sbb int3 lea push nop push fwait pop push cltd xchg push fwait cwtl rclb sbb lret (bad) lcall or (bad) fmul dec push push int aam into push adc rcr pop dec rcrb push adc push rcrl (bad) push xchg push push fistpl sbb push push push push rorl rcrb adc xchg cwtl pop xchg dec popf pop rcrb pop rcrb xchg popf popf or sbb rclb nop push (bad) xchg rcrb dec xchg push dec rorb int3 adc push mov popf ficom or adc cltd lea aam push rcrb push xchg fcmovnbe push push rcrb dec fmul sbb pop (bad) xchg sbb adc mov push push sbb lcall out xchg inc imul test mov lods lret data16 xchg push inc push les fs cmpsb xchg adc push jbe xchg hlt xchg xchg push mov push mov daa pop pop jne jae mov imul mov ror inc movsl frstor xchg enter pusha mov lods (bad) into jb test (bad) (bad) shrb (bad) cwtl repnz push fisubl (bad) call xchg (bad) push enter xchg lcall pusha pushf mov (bad) movsb int3 movsb lcall hlt int3 mov mov inc push inc inc outsb jae sub js dec push inc push dec dec dec push inc fs jb ja pop pop addr16 inc pop jb dec addr16 cmp cmp movsl mov sub popf test mov hlt enter push jo sahf lcall rclb mov lret jo enter mov fdiv stos in (bad) enter test bound cwtl mov mov lcall ss and mov sbb stos and test or hlt fdivp stos les mov mov inc jns arpl inc push inc dec xor mov jmp popa cmp outsb fadds aam mov push sbb push or cwtl lds sub push sarl arpl imul push inc pop insb imul xor dec xor jns push pop outsl push popa addr16 and sub lcall fwait sub mov mov mov stos sbb sub rclb sbb lret push dec sbb adc ja push sbb ss and lcall cmpsl test mov cwtl cmp stos xchg mov mov test mov and pop pop sbb pushf (bad) nop push push lret or sub es les push jne inc aaa je adc jb add shl adc pop inc or push (bad) and mov xor or sub lds dec cmpsb inc jne je xor sub push adc add mov stos sub jae inc and sbb fwait cmpl xchg test mov dec cltd inc imul mov movsb push xorl shll xor cmp pop xor data16 (bad) fcompl inc ja dec inc addr16 inc pop dec aaa xor xor movsl mov mov mov hlt mov les addr16 je inc jbe sub jb adc mov imul fldl2t or cmp or data16 repnz test xchg aaa dec data16 push gs aaa xor jp dec inc ja adc cwtl push mov sub sysenter arpl sub ret or aad leave sbb push (bad) insb call in ss push dec sub test outsb and pop stos xchg mov pop and fsts lock cmpsb data16 dec dec das dec inc gs inc and and mov and or push cltd xchg or xchg xchg test xchg daa cmpl int adc nop dec js dec push jo xor imul pop imul cmp cltd mov fsts sbb fs fcoms lock stos xchg mov xor xor lcall test dec cmp stos (bad) lcall mov pushf mov push xor xor pop xchg test dec cmpsb xor jbe inc cmpsb xlat inc cmp mov fcoml nop lea enter test dec test rorb fiaddl inc data16 dec sub sub jb sbb jb mov es cvttps2pi cli and lods rol lret add dec xor cmp mov and cltd mov xchg pop rclb ficoml hlt ret test dec mov cwtl xchg dec or push dec dec push int lods dec cmpsb push lds push mov sub and jmp loopne fnop push ja jo pop dec xor mov imul (bad) pop add dec push mov or popa (bad) (bad) adc aam push push in push mov inc je aaa xor movsl sbb pop sbb push dec push dec push xchg pop sahf xchg xchg and dec push dec cmp mov mov stos mov xchg stos cwtl test sub in and mov mov stos xchg or into scas (bad) movb push dec js xchg mov mov vpmulhw mov outsb pop insb pop ja sub adc mov or int call or into dec cld dec sub sub mov lcall mov push daa jne dec cmpsl and je gs and and daa cmp sub mov call adc inc adc adc int3 sahf nop push int3 pop mov xor insb addr16 sbb stos sbb stos cmpsl mov in pusha enter pusha out xchg shlb adc ret mov lret int inc adc sub pushf mov outsb mov mov into and and ljmp inc dec imul addr16 cmp and sbb mov stos sbb inc test inc (bad) and xchg mov and mov test nop lods int aam inc sub iret or and inc in mov aam mov movsb xor (bad) mov daa xor adc mov push mov cmp jno jne push inc outsb bound data16 adc cmp and aam dec test test inc adc and pushf or dec xchg fisubrl lods inc jne xor lea and and or shll mov dec xchg fmul xchg and ror dec dec insb call push outsb or call (bad) jbe je cmc addr16 adc xor xchg imul mov cmp imul dec inc and cmp and push aad sbb adc mov dec mov sub dec js pop mov enter xor xor cmp xor ret xchg push xchg sbb adc dec rorl fwait xchg adc pop rorl outsb into jmp xchg xor xorl sbb xchg push adc ljmp fiaddl adc test push or in in lods sub sub and xchg push or or sbb je mov push push pop adc jb adc mov scas lea push jp pop adc mov lods rclb push mov call aaa xorl dec mov mov push xchg movsb and and inc jno xchg imul lcall mov les jne pop push or inc inc mov nop pushf or xchg jno add outsb imul lret (bad) mov ret dec push push aaa (bad) enter movsl cltd mov pop and stos cmpsb test xchg pushf rcll stos enter movl cwtl mov and adc insb int3 fnsave xor imul cwtl pop xchg dec mov data16 into insb out cmpsl add xor and jb inc sub dec cmp inc ja push popa push inc inc cmp imul aaa cmp gs push gs inc inc popa dec pop insl push jb inc ss ss gs inc inc push aaa push outsl inc pop dec dec das outsb sub bound push inc dec pop push ss outsl sub push ja dec push inc xor dec xor push gs imul inc imul push dec xor dec inc inc cmp inc xor dec inc pop xor inc dec insl inc push xor inc cmp outsb je push jne cmp push dec das outsl das xor inc push xor fs sub outsl inc xor aaa push push aaa jp inc push dec outsb push insb xor outsb arpl dec xor push dec push inc inc push js gs dec inc jo je inc xor js insb gs dec insb ja dec dec inc jb push jae sub pop pop dec dec xor push inc jo push addr16 dec xor je push jb dec outsb xor arpl das das cmp dec inc inc outsl ja push push inc popa addr16 inc inc pop xor inc push push xor js dec ss insl cmp push cmp push push ja inc arpl jbe xor arpl inc gs jbe xor pop jns inc pop fs outsb jp jbe je dec inc dec dec dec pop jbe js jbe inc push xor xor dec imul inc dec jae push xor push jne fs push insb arpl xor sub xor cmp jbe ss dec push addr16 addr16 insb xor js imul xor jp das xor addr16 push jb inc addr16 inc inc xor pop jne push inc insb outsl inc js outsb bound push dec outsl xor addr16 jne dec addr16 fs addr16 pop cmp addr16 pushw arpl cmp pop inc fs jb push jbe cmp push data16 dec insl addr16 push fs cmp push xor data16 inc pop jne dec inc push push xor push inc jne jb cmp jae popa dec xor inc push inc xor addr16 dec jae dec dec inc dec aaa dec dec outsb gs dec push inc jo dec dec inc das pushw inc push jns cmp jns push jo inc dec pop dec inc pop push cmp pop inc bound push cmp push xor push outsl push inc inc pop push aaa outsl fs dec inc dec addr16 pop sub push dec gs dec dec xor push push pop dec inc inc inc xor inc jbe dec push cmp arpl pushw sub jns aaa inc inc push xor xor push fs inc push push inc dec dec dec xor das dec addr16 cmp inc dec push insb inc pop push inc inc pop ss xor push js outsb inc inc xor inc push push ss imul inc push jp insb dec push push jp jne inc inc outsl xor imul dec push insl push jne inc aaa push inc inc dec push dec push pop xor cmp cmp insb cmp push cmp ss dec dec xor inc ja dec jbe push push dec jns pop jne xor xor push inc dec push inc pop pop push imul jae xor jbe inc outsl je push dec inc dec jno outsb sub jae jb inc dec sub pop insl xor das push push inc dec jne dec jbe pop push ja inc ja jno dec push inc inc dec xor inc dec arpl insl inc push push inc je inc push outsl pop jbe insl imul outsl inc push xor dec inc jae je push imul xor rclb push pop lcall fistpl push adc sbb fwait push sbb push int rorb push fsts rcl (bad) aam rclb rorl mov lea aad push xchg push or dec aam rclb rorl data16 push in sub outsl dec es and add aam inc lret or stos sbb xor push xor roll leave mov fcomp loope lods dec xor or and loope flds lods sub data16 outsb aam movsb outsb hlt mov cmpsb cmpsb xchg fsubrl push pop dec xor push dec push inc inc push js gs dec inc jo je sbb xor lods movsb mov xchg push rcrb pop adc dec mov sub cs dec cmpsl push push jbe push les mov pop jno xchg adc loopne mov or mov into mov push push xor js dec ss insl cmp push cmp push push ja sbb xchg mov fstpl push dec scas sub out sub xchg inc (bad) out aaa fs cltd imul adc xchg fs aam rclb push inc dec jae push and sub and dec push mov dec enter leave push out insl or adc xchg mov sbb fs adc push mov xor pop jne push inc insb addr16 cmp mov xor lcall xor xchg mov cltd lcall mov insb lea cs xor xchg pop imul or mov int3 outsb mov sbb and stos mov cmp xchg mov test sub mov cmpsb and daa aaa xor mov daa cmpsl mov and push mov fimul test push cmp pop inc bound inc sbb aaa test mov aam sarl pop mov xchg pop sub sub push pop dec inc push sbb and xor pushf cltd mov movsl mov and mov test test cwtl xor test xor push jo stos mov movsb (bad) mov push xor push js outsb inc adc cmp push jmp push jmp fisubr in shl loop xchg loopne scas fisubl mov xchg mov jo mov nop fsubrs mov ja ss dec dec xor inc mov ficom sbb jmp int3 stos call movsl push xchg xchg jne xor adc mov xor stos mov and sbb sahf push mov mov pusha jo stos mov jne dec jbe pop push ja cmp mov xchg pop rclb adc dec in jmp (bad) dec lods sub sub adc push mov cmp sub or lods flds pushf mov lcall dec jo push push jp popa inc and cmpsl mov sub es push cltd mov sub cwtl rorl cmpsb in les xor mov push aam sbb dec cs push test cmpsb enter xor mov adc inc push lret fwait cmp cltd rcll push mov mov sub test push xor stos sub fdivp sahf (bad) xchg mov xchg mov cmp xchg or push rorl and dec arpl sub sub sbb popa sbb push bound mov aaa movsb sbb cmp dec or test mov or in (bad) jb mov push das sub mov adc pushf dec aam inc pushf (bad) addr16 ss cmpsl xchg cmp mov mov fisubr pop imul dec and ficom enter xchg inc xchg je adc mov dec stos inc mov test and lds inc sbb xor cmp fmull adc cmpsb aam inc cmpsb out cmc inc adc pop dec adc cmp ret dec (bad) mov sub test sbb hlt push pop mov xchg pusha push aam xor sbb push mov jno inc ja dec and xchg adc adc daa push and dec dec or lret cmp mov mov push les xchg mov test adc mov in loope fsts add add inc sub push adc push xlat and push (bad) ss movsl adc and push aad movsb add fwait stos inc xchg adc jae or stos and xor pop fs enter inc sub and (bad) xchg pop aad aad adc push dec lret xchg inc push push push push mov pop mov stos mov mov mov adc fiaddl cmp mov test lret cmpsb movsl add add ja aad adc mov sub inc rorb dec (bad) dec shrl (bad) fldl movsl popa push ss adc and fnsave daa test cmp sbb lcall mov sub rorb int dec popf enter scas inc inc xor adc (bad) stos mov sub stos lret cmp sub enter fmul call pop inc inc jns xor dec inc pop jp dec push inc dec xor pop sub out out nop loop xchg xchg mov mov movsb loop sub cmp imul ret jb test xor mov mov sub int3 fdivl mov mov inc pop inc es jb mov imul movsb mov cmc arpl xchg jecxz aam stos push sub (bad) mov lret test mov adc xor fmul ret nop mov dec lds daa jae and jne sub adc loope jecxz xor sub mov jns inc sbb cmp stos xor movsl movsl mov adc pop xchg mov inc or or xchg inc jno mov mov mov loop cwtl cmpsb stos daa je cmp or push xor arpl cltd mov adc enter dec arpl xor and xor xchg dec mov xor dec in sub mov data16 lock retw mov sbb inc sub sub inc xchg mov movsb adc push sub out push aaa dec inc je ja jp adc sub push dec es or dec xchg sub rorl popf in popa push repnz bound adc push sbb pop dec outsb fs mov sub add dec test fs jb ss mov in jns sbb cwtl rcll xor (bad) nop int3 mov pop out mov dec dec bound inc cmp cmpsl cmp sbb adc mov mov sub inc adc mov xor in xchg in insb insl mov or data16 push adc mov dec shlb mov enter push adc adc sahf xchg test aad es jecxz xchg xor or mov nop push ficoml sbb push and adc cs jbe xchg js pop test ror mov (bad) ljmp xor fwait sub ret fwait push sbb sub inc push adc cmp mov lahf and insb into push out stos and addr16 fs and mov (bad) mov rclb adc fdivs cmp inc adc dec scas test dec call mov mov cs lret dec test es sub out sub or call mov dec call ljmp call imul imul movsl insb sub insb cs dec lods sub insb insb imul xchg out call inc int3 leave push dec call int or sub or int3 call sub dec sub mov imul int dec outsl or insb in in insl sub sub call out dec dec stos in mov dec out outsb test push insb mov data16 dec es lret dec call test scas dec sub cs sub dec sub sub int3 call dec dec leave lods imul imul scas call out sub into mov or es sub sub dec imul out imul dec in mov call imul call mov out call dec dec pop push int mov dec imul outsb inc lret out push dec insl scas dec call scas dec enter dec call out push sub sub insl push dec stos push mov jmp push call push lret mov xchg ljmp cmpsb sub dec jmp sub (bad) jmp sub mov mov mov sub in in push mov cs cs in dec in ljmp stos insl sub in scas test call into insb in enter call lret sub jmp dec lods lods scas push call mov data16 outsb dec sub xchg call test push call mov stos leave int sub mov lret call dec sub mov dec scas jmp dec or sub test mov or mov call stos sub mov cmpsb lods mov sub inc or in push movsl jmp mov cmpsl sub out inc or or enter sub into lods stos cmpsb push cmpsb lret cmovbe sub test sub sub dec pop sub test outsl dec sub lret sub lea test cs enter scas mov call scas call lea inc into scas dec cs mov leave sub (bad) sub sub test movsl data16 push lret imul test ljmp jmp lods lret stos push xchg test cmpsb leave test mov sub mov stos outsl sub ljmp lods mov push jmp inc jmp das or insl mov imul push insb es into imul leave ljmp or lods lret or test leave rcrb sbb rcrl sbb fwait or xchg adc cltd push push dec rcl sbb int3 push sbb ficom push adc (bad) adc push fstl adc cltd ror push fsts aam popf aad adc adc xchg lcall enter lods sub movsl insb sub jae mov movsb sbb rcrb lret fst or xchg xchg dec call or sub or int3 call sub dec sub mov imul int dec outsl or data16 xchg movsb ret xchg jbe notl adc jb les fwait stos dec mov and sbb mov cmp jp pop sub mov lods inc shl push inc mov pusha mov mov lods bound dec jb dec dec arpl inc inc imul outsl push dec inc xor outsl jno dec push je and jp pop mov outsb push int3 loop mov pop into out mov mov xchg hlt rcrb mov dec push pop dec ja pop dec cmp sbb mov ss and mov sbb xchg push sbb aad push dec mov push test lret sub sub insl push dec stos push mov jmp push call push lret mov xchg ljmp cmpsb sub dec ljmp hlt in xchg inc jae push mov push daa je (bad) mov arpl divb inc adc inc push fs sub or popf mov fstl fisubl lret and cmpsl cmp xor push push push dec sbb cltd or xchg pop pop pop sbb mov data16 outsb dec sub xchg call test push ljmp aad out adc aad testb in aaa je xor inc movsl adc inc movsl push je lret sbb test and xchg outsb cwtl cmpsb ljmp mov call xor dec pop xor imul inc gs dec xor inc dec ja inc cmp mov int popa cmp insb into data16 mov stos fwait sub mov and mov (bad) xchg mov jb pop mov movsb xchg mov popa sub (bad) sbb popf fcoms cs enter scas mov call mov fmuls push xor andl inc adc lret xor shl fsts int xchg mov dec les das push inc pop mov pop movsb test cltd cmp loopne cmpsb fisubl (bad) xor movsl mov (bad) ljmp imul insb push xor inc inc sub sbb sbb fistpl rcl inc out sub push insb es into imul cmc ss push les xor (bad) push mov push (bad) cmp lods adc xor (bad) xchg sbb daa mov sub cwtl int3 (bad) dec push pop xchg ror das sub enter sub dec sub or data16 sub pop call lds jb mov mov dec dec or push testb inc xor xor mov mov leave in outsb outsb or sub sbb out push push test push test aad fs lret sbb inc mov xchg enter lods enter and (bad) rcll cs stos dec or (bad) cmp cs push add push test jae lcall and xor pushf aam sub imul push or test mov dec jmp stos insl pop nop dec sbb fcompl outsl or inc outsl sub xchg xlat aaa push mov and adc test cmp adc in aad mov call (bad) ja xchg and adc test arpl movsb adc xchg daa xorl sbb cmp daa push test mov xor xchg push leave adc fimul mov inc and movsl push push jne push subl xor mov mov rcll ss cmpsb je arpl adc ror int scas dec scas call or retw inc sub mov or or fs aaa and add inc cmc xchg inc and push movsl push push xchg xchg stos inc sbb cmp int mov or adc inc and jo jo inc (bad) stos jae jo lret enter sahf es mov or adc sub inc les xchg push adc cmp xor dec add dec jno adc dec int3 pop rorl push or mov call mov fs jno dec xor test nop aad les lret test ror push ljmp sub push push cwtl mov xor xor stos cmp fwait ret dec adc sub mov lea pushf dec xchg pop pop push fistpl dec adc fstl xchg push enter les and jmp xor push push push ja dec ja xor sbb pop sbb rol mov movntps or sub insl dec push fs mov mov mulb xor je cmpsb xor xchg adc xchg jb mov mov mov sbb cmp mov dec push out out cmpsb mov je gs jne aam mov pop sub xchg xor sbb into adc adc movsb adc addr16 jbe movsb xchg and leave xor sub xor mov pushf test sbb nop fisttpll in inc or xchg pop dec fwait pop push fwait or cmp adc sub mov call jbe xchg fnsave cmp loope adc xchg data16 xor sbb out es mov cmp fldcw mov mov test test and adc sbb sub push xor aaa test xchg sbb fs and imul jb movsw push fs and pop push stos lret mov ret dec aad sub lods test sub enter xor push (bad) xchg inc push inc inc add adc movsb bound pop mov cmpsb mov jo push push push jno jbe and mov add int loopne dec dec xchg xor jp sub mov stc xchg aad xchg xchg sbb xchg fnsave push xchg lcall outsb test loop jb pop sub pushf test ljmp lea lods popa lods mov adc and pushf rorl aam push dec rolb (bad) push cmp fsub outsl jne adc test xchg adc push cwtl fst push adc jo in mov out and hlt push lcall or xchg adc es mov xchg mov mov int mov push inc inc xor mov daa out push aaa push dec mov mov dec fwait test inc daa ss (bad) push xor xor mov push aaa xor xor mov and lret fstpl push xchg dec stos sub dec jmp adc bound hlt les mov mov cmpl bound xor sbb mov and push pop push fwait int3 or mov aad test or xchg subl (bad) fisub push popa sbb mov sbb and leave out push sub insb dec lret dec sub dec lods in stos dec out sub sub mov (bad) cmovl call inc mov sub sub sub in outsl dec sub dec sub out dec sub sub sub mov dec insb mov in out enter call sub ljmp cmpsb insb dec dec push cmpsb push call cmpsb mov sub or sub push es enter lods (bad) or jmp xchg sub pop daa sub dec push or dec test sub jmp jmp sub lret dec sub sub stos in in vpmulhw mov sub in das sub dec sub data16 push dec sub or sub outsb mov int3 lods push mov stos mov dec dec imul sub cmpsb in mov mov in push prefetchw dec push (bad) scas dec insb sub out mov push mov out push in or lods inc test test out in dec push mov sub cmpsb sub in call push dec dec and sub xchg mov or insb dec data16 sub cmpsb data16 call mov mov (bad) cs outsb or sub mov in or lods ljmp sub mov (bad) or cs mov lret ljmp sub data16 call dec sub call push lret dec dec int sub dec or mov ljmp (bad) leave sub sub or push test mov inc sub mov push out push sub dec out test movsl mov dec dec sub int3 call insb enterw sub mov inc enter sub test mov or dec lret sub pop sub (bad) or mov sub int out sub insb lret jmp push out inc sub sub ljmp out insl call int or enter sub out into or call imul imul test dec or cmpsb add sub or sub sub push leave dec call mov ljmp sub sub imul lods sub dec outsl sub sub out push sub dec into enter leave or push ljmp sub push push or imul test or test push or sub test stos or dec sub dec sub insl or lret sub in dec cmpsb daa or sub sub ljmp test outsl or jmp call dec leave inc outsl es movsl in call mov dec sub lods enter dec push or outsb call push or in test sub push push lods dec enter cs (bad) mov sub and sub aam rcll push dec rclb xchg push pop nop push mov pop fsts xchg push push push popf fsts sbb aad rclb or leave inc mov sub out xchg (bad) mov aaa movsb adc adc push and and adc push daa and push movsl push xchg in testb inc xchg jbe push fs cmp pop xor dec mov mov pop mov push shrl sbb rcrl adc and add aad rcrl xor sub adc and in push int movsl pop leave sub into hlt lcall sahf pushf aam jb xchg rcr int3 (bad) cwtl xchg mov les jbe xor xchg xchg mov mov pop pop sbb pop pop xchg dec out data16 push dec movsb jbe push push adc push xchg xor ret fwait mov sbb or imul cmpsb mov mov mov jns das fs push inc xor sub mov cmp xchg int3 sbb adc fst (bad) out push in or lods inc test test out cmp es push push mov push pop pop fcmovnbe adc fnop xchg pop adc or xchg dec rcl adc mov push mov or insb dec data16 sub cmpsb data16 call mov mov (bad) cs outsb or sub mov in or lods ljmp sub mov (bad) or cs mov lret jmp xor les inc xchg xor je inc push xchg and ss inc addr16 jb (bad) mov or and ret lcall popa mov int add rcl or mov inc sub mov and test jnp imul test jno cltd sbb lea popf adc mov add loopne int3 mov mov test mov inc data16 cmp inc lods pushf lds mov (bad) int3 scas in pushf lret xor enter mov ljmp out insl call int or enter sub out into or call xchg inc push mov xchg push pop dec inc or mov sub mov push sub insb push push inc dec push inc sub stos xor stos and push fcmovu adc push mov ljmp dec or or push sub dec into shlb test mov mov sbb xor sahf xchg xchg fsts dec xchg dec or push or push inc and cwtl in int3 into xchg cmpsb mov popa dec outsl push xor addr16 sub pop stos and mov sahf adc rclb lcall lods dec leave inc outsl es movsl call xchg inc pop and stos mov and int dec mov push inc dec sbb cmp sub movsl mov test cmp cmp xchg mov mov rcrb int3 adc xchg xchg or dec cltd adc push and les cmp mov cltd fsts rcr fimull fsubs arpl bound push dec or xor stos stos sub mov or call in push dec push inc sbb xor movsb cmpsb xchg and gs dec movsl push mov push je loope mov lea adc rcr push fdivs xchg inc fs inc push xor push cmp pop pop js inc aaa dec arpl or call or mov push fisubrl inc roll mov dec inc shrl mov inc into ret inc cmp sub mov mov cmp mov push lcall (bad) in in (bad) in sub dec call jecxz xchg xchg data16 in inc push rolb jns cmp pop sub cltd sbb sub push mov inc outsb inc dec inc xor sbb sub cltd lods daa stos and sbb adc fs imul lcall test xchg push test push cmp jb int3 outsb test (bad) mov and and cmp pushf lret aam sbb adc out loop div gs fwait mov leave mov push fldl mov pop pop dec xor jb inc sub pushf mov pushf pop lods sbb mov sbb pop xchg cmp imul mov push sub or mov out or insl mov cltd xchg dec dec push aaa cmpsb xor push xor imul sub and dec lea sub bound pop push dec push test inc ja xchg jecxz pop inc and or in lea inc ja jbe inc fs and mov mov imul inc inc jae inc dec cmp pushf sub xor nop mov fistl sbb pop adc int3 fcmovu test xor sbb push rcll adc fcoml fimull sbb push dec sahf pop cwtl into push or sub (bad) push and sbbl jne and push xchg test shll push fs xor cltd mov or leave lret cmp rorl inc mov cmp popf mov xor dec pop inc addr16 dec pop push (bad) lds xor mov or pop lcall dec xor dec data16 push outsl jp jp push inc xor dec and test mov leave cmp movsl mov dec dec pop js inc sbb xor or data16 out mov mov outsl cltd lea dec cmpsb dec (bad) mov ret xchg add xchg push adc xchg and mov in push inc gs sbb mov push push inc inc push dec inc pop nop mov pop (bad) mov dec dec sub xor xchg push push adc xchg sbb xor dec data16 je push sub mov xchg adc test cltd adc adc fdivl adc xchg or rcrb push inc sub xor cmp fmull out cmp ss lret pop (bad) fisttpll or mov (bad) movsl xor sbb and and shl or aad mov inc inc inc sub arpl inc and int3 inc xchg int3 mov dec dec inc jbe ss dec cmpsb imul push nop leave add out (bad) fcomps bound lcall mov adc push xchg pop push push dec adc popf loop rorw lods lret sub xchg xchg sbb xchg xchg test sbb push rcrl fidiv data16 je ja je mov mov ret stos xor cmp jo mov int3 aam popf loop push mov or test mov jb sub pop jns inc ss and jp int3 xchg push cmp movsl and mov ret aaa data16 pushf nop pop adc movsb sub xor lret push mov push inc push inc jp ja xor mov and lods cmp add fldcw inc dec leave xchg xor sbb xor fstp mov loop jb push mov adc inc inc push je xor xor ret lret es push and arpl mov mov loope mov in popf or int3 lods (bad) imul jb lods sbb mov push lods adc rcl shl int3 stos out les hlt cmp lea pop js sarl int3 in test mov adc inc pushw and or in pushf in push sbb dec push jo adc pop cltd lret dec (bad) ljmp and es fwait mov lcall sub mov sbb mov lods lods stos aaa stos and stos mov mov and and sub mov es sub and cmpsl lcall mov cmp xor mov mov sub mov mov and stos aaa mov mov cltd mov xor cmp xor and mov xor xchg movsb mov cmp mov cmp xor and movsb mov mov mov pop movsl mov lcall mov sbb mov sub cwtl and xor mov sub and sbb movsb mov lcall mov mov cmp mov mov mov daa cmp mov and lcall mov movsl sbb stos mov mov sbb sbb stos mov cwtl sub test cwtl adc cmp sbb cltd cmp mov test and sbb mov mov and mov cmpsb cmp xchg mov stos mov ss mov lods sub mov mov xor xchg lcall mov cmpsl sub mov xor mov test mov fwait movsb and cmp daa cmp mov mov mov xor stos mov lods sub xor mov xor cmpsl mov cmpsl mov cmp cltd mov xor and sub xor cmpsl mov sub mov mov cltd mov xor fwait sub xor stos mov sbb mov mov mov movsl mov aaa cmp fwait mov sbb mov cmpsb and mov fwait mov mov and mov cmp mov mov mov cmpsb mov mov aaa mov mov and sbb and sub lods cmp lods mov cmpsl cwtl and xor mov xor xor mov cmp mov xchg mov xchg mov stos pushf xor cltd mov mov xor adc mov cmp and test cltd and test fwait aaa mov mov mov mov sbb sbb xor sbb mov mov mov stos mov mov mov mov mov aaa pushf cwtl ss mov mov mov sub cwtl mov test stos sbb test xor mov mov pushf mov cmp sub sbb es sub mov mov xor mov mov xor mov mov mov mov mov sbb es fwait mov lcall sub mov sbb mov lods lods stos aaa stos and stos aaa sbb test mov lods cmp fistpl fcomp xchg ror adc push pop sbb int adc dec adc lcall dec adc adc pop xchg push adc xchg pop ficoml ficomp popf aam xchg push sbb mov adc pushf xchg push xchg dec ficompl sbb push sbb xchg push pop popf pop ficompl aad int dec rcrb pop pop pop cwtl shrb mov into stos push cvttps2pi or sub inc mov sub imul add scas lods sub xchg dec out jmp stos dec sub out sub dec lret or dec xchg out cs jmp insb dec imul into movsl ljmp or leave in dec in stos into mov mov scas cmpsb insl outsb or sub dec or data16 inc dec xor pop xor mov stos mov mov mov cltd xchg and xchg inc lret (bad) mov xchg subl repnz xchg loopne jb out mov out xchg (bad) cmpsb out stos hlt in pop pop (bad) cwtl xchg pop mov jb test hlt jo mov add mov xchg je movsw push aam ss cli inc inc mov mov stos ret sbb inc sbb xchg arpl (bad) jb mov jb lcall ret xor stos push xchg ret and xor int3 pop push xchg push fcmovnbe push fistpl xchg aad xchg adc adc sbb fcoml aam xchg push or fsts pop xchg shrl call mov sub es test je mov test inc xor adc xchg hlt mov notb jbe adcl sub int sub leave xor lea xchg push adc mov shll js aaa inc jns adc xchg xchg fcompl leave or dec pop xchg gs lods cmp or add jp dec dec inc push push push bound push pop dec je data16 dec push ss dec sub das das data16 das ja dec imul jne xor jbe cmp inc sub xor pop rcll dec test inc test and mov push rcr ret pop xchg outsb mov pop and mov mov or lods leave dec mov sub stos in dec cs test inc lods adc ss add xchg inc test jae push movsl pop cmp push pop lret pop inc (bad) (bad) push push shll shll sbb inc jno cmp xor lcall rclb lcall push push insb pop popa pop insl dec insb inc insl jo arpl ss push inc push dec push insb jo outsl jno jno inc dec jns jb cmp push xor xor insl ss inc sub inc imul inc inc dec bound inc dec jp inc dec jp das push xor inc inc push xor push jb xor xor xor dec push bound sub ss jae mov jecxz sub or rclb pop rcll xchg push push rcrb fst xchg sbb adc mov xchg ja jbe xchg xchg xchg push les mov aaa mov mov (bad) xor mov dec mov dec mov sub push push dec inc push push push push outsb fs inc inc adc mov popf sbb pop sbb sbb lcall fstps xchg lcall adc xchg sahf nop push adc fstps (bad) enter addr16 jne inc dec dec inc pop xor dec push stos pop inc pop adcl stos or dec stos sbb arpl imul lods (bad) int3 mov je xchg outsl adc popf dec xchg or mov cmp lods es fldcw xchg dec or mov push movsl in mov int3 (bad) outsb dec int sub or (bad) scas adc addr16 jbe repz add pushf mov pushf cltd fcomp cltd cltd pusha mov inc xor adc jp lcall push ret push stos ret xor sub or xchg jnp inc insl sub mov sub lds aad lret hlt xchg pushfw out push and mov adc inc mov inc adc int3 push push (bad) fwait adc (bad) adc push cwtl xchg fnop push adc mov xchg push fstps pop push int3 pop cwtl pop rcrb mov fmul popa xchg popf or cltd and lods enter popf popf add sbb gs dec push and arpl int3 fsubrl aam mov notl cmp mov or inc (bad) into lret push insl sub dec xchg es insb cli push inc mov lret cmpl inc xor cmp mov sbb adc sahf out gs xchg fs js xchg jno mov sub into call mov test movb dec push and pop mov dec jmp xor mov ss and pusha stos out dec pop jns inc insb popa addr16 xor test inc mov mov mov cmp xor sub rcll dec cwtl dec test sbb inc cwtl outsb inc and inc stos push xor dec jp das jo outsb jae xor dec xor lret rorb sbb lret mov pop rcll jno xchg loop je xor outsb dec inc addr16 cmp jae push das sub jbe inc xor fs dec adc or sbb adc push mov sbb lret add dec insb jne ja outsb cmp cwtl ror call (bad) mov es insl dec insl gs movsl xor mov sbb mov and and mov and cmp xchg sbb push sbb les fs in inc adc (bad) outsb and mov and lcall or mov mov or insb inc cmp jnp cmp xor jno fwait stos jno xchg dec aam jb aam nop hlt mov push outsb push jb adc xchg or bound dec bound jae dec xor sbb dec cmp push xor push movsb xor mov cmp fwait cmp sbb xchg lods xchg mov stos ret xor mov and insb xor dec jae popa aaa inc push insb xor push and push sub imul inc sub pushf or add sahf pushf imul in mov dec imul dec sub xor mov ret inc adc adc stos or mov lret xchg xchg adc cmp lcall inc inc out xor sbb dec movsb cmpsb mov sbb or and sbb aaa and push icebp adc xor sbb push lcall fstps ror xor kmovb xor jbe sub rcr mov lcall mov in into or sbb xchg faddl sahf gs adc mov ds and movsb test push aam sub xchg mov push inc movl xchg jmp sub insl jno and or mov dec call mov dec stos int3 mov call mov mov cs mov sub insl sub lods test das pop or stos push call ljmp sub test test or sub dec cs mov es stos cmovnp call lret cs push dec in or call ljmp sub dec sub test push inc or out or into dec cmpsb mov sub mov out jmpw dec sub dec in test int sub or outsb call data16 stos in imul outsb cmpsb or jmp lods dec inc into stos test test test inc mov or insb int data16 sub es (bad) call dec mov imul cs lods enter outsb in data16 (bad) or movaps data16 sub sub sub imul lods imul in imul dec xchg cmpsl or sub push test push scas or push lret or into outsl sub dec sub stos push sub mov insl outsb mov sub leave sub cmpsb test enter imul int3 mov inc push sub int lret sub leave lret int3 sub data16 enter or sub in push dec lods inc dec dec int3 sub mov sub xchg dec out sub stos jmp push xchg push int stos dec es inc mov enter lods dec sub lods sub or sub mov cs call cvttps2pi imul ljmp mov leave or inc push insl or ljmp push es sub out mov sub or scas or in push out lods call lea sub sub sub out or sub sub cs test sub sub lea push mov or mov enter stos push dec ljmp dec out xchg in sub mov sub stos ljmp enter or ljmp in push insb push sub jmp stos imul or test sub or stos mov or cmpsb leave or scas inc push test mov or sub dec sub enter stos ljmp or sub mov xchg sub sub or push lods scas sub (bad) into outsb test inc or dec (bad) out dec out test lods imul mov sub mov leave in dec lods into call inc push lret dec dec gs iret or mov mov sub out dec inc cs dec cs out push dec sub mov dec (bad) cmpsb imul dec lods insl or call outsb into out dec cmpsb outsb call and mov sub into dec scas cs mov lea lods or popl or inc pop ret cmp pop sbb fsts push xchg push cltd adc xchg fwait adc adc rcrb ficompl adc pop push adc fcomps sbb ficompl push push pop aad aad int3 xchg adc push push xchg pop push push ficomp (bad) push push lcall push push xchg pop rclb push mov or sub dec in or call ljmp sub dec sub test push inc or out or roll ja pop inc adc aaa inc and ja je out adc push cmpsb not xchg xchg inc adc test pop add mov data16 adc rcrb mov mov sub mov stos or sub push mov mov mov in add xchg mov leave xor and add pusha aad add mov fsub inc and and mov lcall xchg ficompl push dec outsb inc dec inc imul dec inc imul outsl data16 push dec push inc push pop inc pop push jo dec sbb and sub mov cmpsb movsb or leave stos push and dec scas xchg push dec dec push xor outsb inc inc inc xor js fs push xor xor mov cmp adc int enter nop gs adc mov sub xchg (bad) jae cmp or and stos and adc lcall je pop imul inc pushw pop inc inc dec gs push inc dec push imul outsb ja push inc sbb mov mov sub int sbb xchg data16 in mov enterw xor inc outsb jno sub dec push jne jno je mov flds inc loope leave adc jbe adc sub mov rol into loopne mov mov scas (bad) mov and mov or mov fdivrs xchg leave adc pusha mov lcall xchg push add inc xchg mov xchg popa lret mov dec jmp dec or pop test push fs add push push cmp sbb ret adcl and test and stos sub int xchg adc pop mov movaps dec movsl fs test gs or int3 inc xchg cmpsb mov test xchg push shrl fwait stos jb fmul loope jmp lds aad imul cltd fld fnstcw into faddp xchg push mov (bad) hlt hlt out int3 lock mov push je push xor dec xor cmp mov cltd movsb push pop fcompl rcr sbb pop xchg push xchg dec rcl pop ror dec lods insl or call cmp xor sub dec dec cmpsb xlat pop and cmpsb je pop inc in pusha leave sub lods loope push arpl imul jns addr16 insl bound outsb pop xor and (bad) test mov movsb nop test inc sub test adc dec or adc es cmpsl add inc adc (bad) mov pop pop rclb rcr rclb pop push push xchg ror pop enter mov addr16 dec push push bound mov cmp lds and inc mov inc xor adc xchg add mov out push push xchg test sbbl lcall adc faddl mov je jae dec jp push dec adc and sub into imul inc pop mov mov mov mov lea popf pushf fsubrs fs mov xor xchg mulb mov xor jnp sub lea imul dec adc push sbb mov mov push jae inc sbb mov sub mov rcr ficoml adc nop xchg add xchg jne inc inc push stos lret mov pop sub loopne fsts in out pop jb push insb jne sbb cmpsl mov mov lds out je cltd mov xor sbbb push mov xorl je xor and jnp stos ret mov outsb (bad) xchg xchg push addr16 outsb xor push inc je das dec pop aaa cmp rorl dec or call sub popf adc adc mov xchg call ficoml ja pop insb bound outsl dec push jae addr16 imul push mov das dec jb jo xor or pop cmp and gs pushf (bad) in dec dec dec dec bound jp xor leave orb and jb mov (bad) scas cli and rorl mov call mov stos mov mov dec lea xchg loopne fcmovu in xchg mov (bad) in push push (bad) adc imul sub adc push adc loope loope fisub daa mov cmp rorl inc jmp inc jbe cmpsb or pop pop pop pop sbb rcl sbb pop push lcall pop data16 jns inc inc aaa jae inc jp roll dec push sub cltd popa test rcll dec xchg and mov pushw scas dec xchg jbe cmpsb test loope or fsubrs push or jmp mov out cwtl mov pop gs icebp xor cltd or inc and test and sub (bad) xchg mov scas (bad) mov inc push aam xor or jmp mull pop xor mov mov fiadd adc xchg outsb loop cmpsl mov sub gs xor mov int3 inc push jnp mov ficom or cmpsb dec int3 into fsts adc int3 mov adc adc lret dec push loop jb (bad) xchg cmpl popa adc mov xor pop adc mov cmp dec or bound ret xchg mov out inc add mov or xor loop mov push mov imul inc cmp sub cs pop mov cltd test ret lock (bad) stos data16 jno mov mov sahf fistl int les and or mov imul push mov ljmp xchg push xchg je xor mov daa jbe sub mov push mov push add adc pop faddl mov dec mov fs (bad) mov xor push jp push push and mov roll lods insb call scas fmull push jno mov pop adc insl out push sub in xor inc cmp mov mov adc cwtl (bad) in rorb pushf xor lea imul push sub push or or imul repz inc xor lret pop rolb mov mov scas les inc inc arpl push inc push adc cmp pop push inc cmp cmpsl mov sbb inc sub mov cltd mov test push inc xor pushf aad int rcl lea inc sub mov out movsb bound jae and imul lock movsb daa cmpsb data16 xchg xor hlt adc xchg push pop add arpl es mov aad xchg and cmpsl adc jbe movsb xor adc ret xchg cmc add mov push ja adc cmpsb mov push push data16 cmc xchg notl cmpsl push adc cmpsb mov adcl inc (bad) xchg ss push fs ja xchg inc pop jae movb notb adc xchg cmpsb mov adc roll pop inc xchg jne add mov push adc and cmpsb push xchg test inc movsl adc gs es repz xchg push and adc fs adc inc je xchg ss adc adc je and test add test inc push aad jae pop push xchg adc inc test hlt adc jbe adc xor je xor push test and adc ja push ss adc and je ja lds jae adc mov movsb ss and adcl data16 and es adc pop je xchg movsb xchg es xchg xor xchg hlt adc and push es xchg push je xchg push xchg mov arpl arpl es mov inc xchg xor mov inc inc pop xchg xor xchg add test xor ja es xchg adc movsb mov out hlt pop xor inc xchg push arpl cmc push xchg inc pop je inc adc xlat push daa push jae and rclw and (bad) notl xor mov add jbe xchg xchg push xlat push push movb push adc mov xchg pop jne adc and push cmpsl push hlt adc xchg gs (bad) repz je push adc jne xchg adc xchg push inc test fs out (bad) push mov xor adc adc gs inc push fs xchg push xchg es adcl test cmc push fs push inc push mov test test xor inc pop add movsb xchg movsb (bad) xor jae and adc xchg xor jbe movsb lds inc xchg divl adc adc xchg test add fs xchg inc push mulb arpl xchg add jecxz jae repz hlt adc push ret xchg notb jecxz xchg push ret push xchg cmpsb (bad) mov inc ss xor and xchg pop xchg gs ja inc and hlt mov and add hlt adc inc inc xchg xor add push inc adc xchg adc out adc mul gs addr16 push mov inc adc push push repz daa arpl hlt adc xor jbe push pop and xor ja cmpsl adc jne jne adc xchg xor adc data16 mov rcll mov gs xchg ss push xchg xor movsb data16 es notl adc adc and push ret push andl adcl aaa xor adcl xchg data16 push mov ja add jae aad add cmpsb and and push xor push xchg inc adc jbe push mov xchg je and adc data16 inc movsl and fs cmpsl and bound and aaa jae xchg xor inc and inc inc es inc mov aam bound xor and mov mov sbb aaa mov mov adc mov movsl cmp mov and inc mov add aad mov sub popf mov aad jmp adc in cwtl lds int and frstor add int mov add fnstcw lds roll sbb add sub lds dec and in jmp dec xchg cmp dec pop sub and loope add cltd or inc push fstl sbb pop or popf sub inc rcll inc aad loope mov int loope sub xchg lds dec rcrl and pop pop dec int xchg data16 into sub imul dec call call dec out sub imul push sub call dec push out dec wbinvd inc lods sub push ljmp daa cs movsl outsb into (bad) out mov cmp xor call rcll rorb or scas or xchg es xchg adc xchg mov mov out cmp loope sub pop xchg and test fist imul fistpl sbb fstp push push fwait pop pop push sbb fistl adc push push sbb lcall pop or lcall push xchg cwtl pop pop into push sbb adc push adc push push rorb push adc nop push xchg push fwait lcall adc xchg pop adc push push pop push cwtl rcrl adc xchg ficompl aad xchg push adc adc dec xchg adc push rclb sbb pushf into push inc xchg xchg xor inc movsb lds inc xchg idivl push inc xchg or nop xchg dec call mulb loope sarl mov flds in xchg (bad) xchg fsubrs mov (bad) mov xchg nop les mov out (bad) hlt mov and add hlt adc inc inc sbb test roll mov mov aad movsl rclb in pop xchg data16 enter stos loopne xchg bound xchg loop into mov cmpsl dec push jae dec movsb aaa xor mov sub test movsl and mov mov mov cmp mov xor and lods sbb cltd mov cltd daa lods sbb adc sub inc add rorl dec inc push movsb cwtl ljmp scas aam (bad) pushf xchg scas mov mov xchg in data16 push push out into lods out bound hlt call fs insb lcall adc mov inc mov cmp sub push adc pop pop cltd pop xchg or (bad) shrb ljmp xchg mov test lds test into dec inc ret and xor int3 leave scas jmp sub out loop dec dec jp xor pop jp jb xor mov sbb loop out cwtl outsb ret fisubr fsubr xchg repz push and es xor sub fwait cmp cmp stos lods and or mov (bad) into mov cmpsb out in cwtl into (bad) (bad) lods mov ficom (bad) out fs enter enter xchg out data16 out (bad) movb mov add arpl data16 push push je inc sbb adc gs dec mov or or scas leave lods lea push jbe inc dec inc cltd xor test xchg popa mov dec insb les jo movsb sub and adc adc fmul (bad) (bad) mov fs pop cmpsb negb or mov cmp mov mov and ss mov in imul mov or lea push outsb dec data16 (bad) xor xchg pusha push call in and shrb mov (bad) lret cwtl fadd (bad) into ficomp mov sbb mov xor cmp sub push dec inc dec xchg xor rorb or int3 push push jae ss pushf cmp cmp daa sub sbb and fwait adc jmp and sub dec pop or sub insb cmp (bad) inc cmp or adc add or iret sub jb lret pusha xchg test test (bad) (bad) bound inc xor sbb or inc gs pushf pop fistpl lea rcl adc push push pop rcrl fldl mov push pop push lock les inc adc inc or lea enter imul cmp fxch inc dec data16 das inc ja xor mov sbb mov scas and jno sbb sbb loop loopne insb test jae inc cltd adc in xchg cltd popf rcr mov dec outsb adc mov leave int dec inc adc es test and mov mov push les add es xchg test adc out adc es xchg and dec and mov sbb dec scas in (bad) inc xor cmpsb mov cmp arpl movsb les enter lods and test xor push movsl adc mov les xor sahf pop sbb push das adc add xor rorb aam sbb or lret rorb dec push in outsb imul movsb out test xchg push mulb pop and xchg or inc test cmpsb jb sbb and sub push adc mov mov push (bad) mov daa add cmp out gs insl pop xchg mov pop mov aaa sub mov ficom mov mov dec push push inc bound push inc dec push inc push inc jo inc inc loop imul stos push dec push dec xchg mov rclb sbb mov mov ficom lcall sahf pop aam sbb adc and in call out sub inc scas call in add sub lea push fwait pop mov outsb movsl adc dec repz mov sbb stos bound jp mov xchg sbb push into dec loop fsubrs les mov movsl xor xchg mov mov movsb xor sbb fcomp mov popf sub cmc xchg inc push push loope sub enter dec and bound mov shrl sub lret push aaa mov movsl lods mov test mov xor dec es dec inc jp sbb and mov int leave sub cmp dec dec xor test and or add test cmpsl cmp mov xchg sahf into (bad) les call xor inc ss nop int es sub mov mov and enter call mov (bad) fcmovu xchg fmulp nop repnz popf and fistl xchg fstps rcll call xchg jb pushf lcall test jb lcall (bad) enter sahf fidivl mov (bad) bound mov call int3 cmpsb (bad) (bad) mov insb mov into xchg mov mov mov test test push loop lock (bad) movb lret (bad) enter enter (bad) xchg (bad) test lock in (bad) fs outsb int3 fcmove enter mov mov into rolb lcall rclb (bad) lret jb mov test jo lret xchg call mov mov xchg loopne cwtl mov in hlt (bad) sahf int3 ljmp test (bad) xchg loop in fs enter mov jb cwtl loop in cwtl fs mov mov mov ljmp xchg rolb fsub cwtl insb ror xchg enterw mov mov insb lret (bad) xchg fisubr fsubrl push fisubl mov (bad) xchg (bad) cwtl repnz loop cmpsb mov rclb test (bad) lcall pushfw test (bad) pushf hlt mov lcall (bad) mov push xchg test mov (bad) (bad) lcall movsb mov ret loop mov out xchg hlt into ficoml mov sahf repnz call scas fsubr (bad) mov insb xchg mov nop pop mov (bad) test ret enter enter outsb mov push scas mov ret test mov lcall call test lock ret xchg sahf shr mov insb push cwtl ljmp test in ljmp push sahf xchg mov (bad) (bad) mov mov mov (bad) rclb ret xchg sahf cmpsb outsb lret outsb push outsb loopne sahf in loop lret out lcall loopne pusha ret xchg aam scas mov aam xchg push mov fsubr xchg fcoml sahf rol lret xchg repnz mov test enter enter mov test lods (bad) push int3 scas xchg into mov test mov mov pushf fsubrs mov in ret (bad) mov (bad) stos mov mov (bad) mov test loopne (bad) test enter nop out ficomp xchg out xchg loopne (bad) mov fisubr mov (bad) fsubl stos insb cmpsb push insb nop mov mov fcoms mov movsb (bad) mov mov mov lret jb loop lock test into jb fs (bad) xchg ficoml sahf pushaw cwtl (bad) lcall jb mov (bad) lcall jo hlt mov pop pop mov nop (bad) pushf outsb mov push pop mov pushf data16 mov enter mov mov lcall out xchg (bad) (bad) mov insb ljmp cmpsb call (bad) xchg push mov outsb mov mov outsb loop fdiv out xchg (bad) enter and sub sub lods insl lods push or sub dec (bad) and leave lret sub lret in cmpsl das dec or dec sub data16 mov lret or stos int3 lret sub dec dec out or call scas dec iret or dec test sub dec sub sub sub sub in push cmpsb fs push xor fmul rclb adc xchg fwait push pushf xchg inc arpl (bad) inc xchg test push test ja push popa cmp test in sbb inc or loope xchg mov dec je dec data16 imul push outsl jb push jbe inc dec data16 das push outsb xor dec jno jb xor addr16 insl inc inc fs dec das push das aaa das xor inc dec jno jbe xor pop outsb inc push inc dec arpl xor inc imul inc jp arpl jo imul arpl fs push push inc xor inc das je gs inc inc je aaa imul push inc insl push ja jbe das pop inc sbb sbb rcr fcoml aam push sahf push pop adc pop push adc inc and in sub jmp xor inc ja dec inc inc jae inc push push inc inc ja inc and inc mov and adc inc adc mov cmpsb jbe xchg je mov inc inc test xchg cmpsl inc push je inc jbe inc xor add push (bad) cmc adc addr16 adc daa push pop es mov push inc addr16 jne adc je inc adc or lds popa push xor mov fst push sbb (bad) mov flds loope fnop aad xor (bad) inc dec aad or add mov popa inc addr16 dec inc outsb pop mov es push dec imul ffree fnstcw dec ja jbe inc push and xchg aam scas mov aam xchg push mov fsubr xchg fcoml sahf rol lret xchg in or xchg mov mov imul aam cltd pop sub and and sub or sub inc push ret out test loop test enter jbe rcrl xor mov and adc or mov mov outsb mov lcall ret enter xchg fcoms sub mov xor or addr16 test int dec lods pushf in leave and pop test dec inc dec dec cmp gs imul loope mov xchg adc push adc mov pop lods cltd cmpsl sbb lcall lods call push xchg pop pop lcall push mov mov dec sbb roll push adc ss push (bad) push push cmc xchg adc imul inc push mov inc movsl cmpsl pop je adc int leave leave popa sub inc adc ret push cmp mov dec xchg cmp mov push mov lcall adc loopne in ret loopne enter sub mov xor push xor inc mov xchg lcall nop cmpsb xor inc jae sub movsl je or and test inc addr16 inc xchg push aad lcall mov enter sub cltd xor popf test jno adc pusha push pushaw insb in test test xchg cwtl xchg mov dec sub outsb pop fs fcoms lea xchg push lcall sbb stos mov pop dec fs cmp jbe js xchg nop nop aad xchg and mov cmp cltd sub in ret sub daa sub mov bound sbb mov push push sbb sbb inc adc or xchg xchg mov pop dec (bad) into mov sub mov sbb mov repnz cmp in test js arpl xor dec addr16 cmp and xchg sub xchg xchg sbb mov xor daa and pop jbe and jbe nop dec test jmp gs fs jne xor dec adc cltd sbb fadds xchg aad inc add loop daa xor sub or sub adc enter mov jo xor mov mov and loop dec xor xor cwtl jb cwtl shl mov sub xor mov and out imul xor shll ret dec and lods fmul in scas (bad) mov sbb sub dec dec or add shl movsl ss push xor add cmp (bad) fcoms out inc pushf sbb cltd rorb inc cmp jno leave or stos ljmp in xchg xchg adc dec cmpsl sub mov and imul int3 out arpl push and sbbl inc or pop adc mov (bad) push pop sbb shlb je inc push xchg push ljmp xor sbb sbb mulb mov sub outsb jo nop mov sahf outsb lcall xchg mov sbb xchg pusha fldl inc xor (bad) addr16 (bad) mov ss fwait cmp or push in sub test mov outsb mov outsl adc mov push xchg fs (bad) mov int3 mov fnop fwait (bad) push int3 int3 mov mov cwtl mov mov gs mov sbb movsb mov les imul mov sub or push push inc bound imul int sub inc or das fs inc pushf aam pop rorb ficompl fcoml les push fs add lods xchg xchg gs inc jp dec push xor outsb jne xchg es outsb dec call call or push mov inc dec lcall test xchg fs (bad) mov sbb repnz call aam out xchg jo inc movb cltd xchg mov push or inc ror inc imul test or mov adc in xchg imul lds div xchg hlt cmc push xchg cmpsb je adc xchg enter loopw xor cmp sub jae outsb je gs inc inc pop dec inc push insb inc inc push ja xor int inc or gs or push rcrl adc add inc aad loopne fsts sbb sub add loope movsl adc cmp add cmp xor inc popa mov loope dec loope or fisttpll sbb cmp inc add fisttpll inc adc cmp push cltd or les mov popf or or lods inc adc mov popf movsl cltd mov lea jmp shrl inc loope fldl xchg int roll add cltd lds imul cwtl aad popa and loope test pop lea mov pop mov mov (bad) fmul cmp xor imul rcr in movsl and in lods aam inc fld test test in mov or or cmp movsb shrl and lea sub add dec fisttpll add lods in gs xchg add lods or pop pop sub cmp lds xor xchg dec or adc rcrl rol inc test sbb and mov aad mov (bad) jmp sub fldl add add shrl ror mov fstl and and add cmp sbb cltd adc add mov movsb fsts mov and sbb mov aad cmp adc loope push push adc shll mov inc adc fisttpll jmp pop in (bad) rorl vpextrw lds in mov in mov test flds lea test mov mov aam mov add fstps aad sbb mov pop sbb popf sub mov and lds gs shl int3 loope pop and lds and adc pop rcrl adc xchg imul int3 loope push aad cmp push in adc test xor lea or add pop imul sub (bad) jmp add push imul or cmp or add test in adc shll popa dec lods pop fst popa roll lea lods add xchg enter pusha int inc int aad sub lds or lea sub sub fld inc leave lds test add add xor add xor leave fnsave xchg ror gs test lods leave test aad lods vunpckhpd int ffree sarl add test pop lea mov gs lods xchg mov roll aad adc test cwtl fld lea xchg mov test mov lods xor mov lods sbb test xchg leave mov add add flds xchg add lods xchg adc add dec pop dec dec adc sarl sub mov and or lods mov cmp adc xchg or aad add enter sarl xor pop inc rcr dec int popa add lods test gs sbb movsl lds test rorl mov push xor inc or movsl mov sub mov vpmulhw add xor lds xor fnstenv enter push or xor test cmp rcl push lds pop shl push add cmp and roll int (bad) adc add inc pusha enter leave add mov push sub or popf adc or add dec adc dec gs sbb popf adc popf and or push or dec ror and test inc sarl test roll inc and sub loope push adc cmp pop frstor or popa pop aad gs xor fistl push push push cwtl aad rcrb (bad) adc push sbb dec push sbb cltd pop or rclb sahf pop fistl lea rcrb fisttpl adc dec adc push dec push push sbb adc dec mov sub call lret imul push sub dec push xor adc xchg jae xchg or mov mov arpl lcall mov inc mov jns jns mov xor sbb or and sbb lret mov jb ret or int roll add cltd lds imul cwtl aad popa and loope test pop lea mov pop mov fmulp out loop fs (bad) test cwtl ret xchg fs mov mov push xchg loopne mov (bad) rclb push mov cmp xor sbb fsubrl enter mov inc dec popa cmp jbe imul mov stos movsl aaa sub ss mov (bad) rcr fcomps in insl sub (bad) sub sub mov sub leave dec call lret sub sub mov mov in xlat add xchg jae push mov (bad) stos xor lcall mov (bad) jmp cmpsb fsubrp lcall inc or inc ss push and and and sbb and push aam fisttpll int3 inc addr16 in es cmpsb outsb enter in dec es imul push ja mov aad in mov jo test mov int3 lods bound push inc cmp dec dec ss pop xor push jns jbe jo dec jns inc inc jno jno dec jns outsb dec inc addr16 cmp inc sub mov mov in lds dec movsl insl or inc inc imul mov ret inc or aad xchg or and pop into xchg sahf mov les out xchg in xchg ror ret aam mov mov (bad) mov jo data16 scas nop lock rolb push mov mov mov cltd pop xchg imul jo test mov mov push push popa popa sub xor inc inc sbb xchg pop test inc insb popa inc inc pop jp jp jp inc inc dec xor pop mov rolb adc xchg push mov mov sub rorl lods adc data16 in push int3 mov and fadds and adc stos loopne (bad) in loop fs sub popa ss jae inc jns xchg sbbl add jmp mov jmp adc xor mov pop je xor xchg sbb jb or bound sbb pop pop in inc jbe dec xor mov mov pushf and mov cmp cltd mov sub add mov mov inc push push pop fs lcall out inc adc ja mov push inc push pop inc push mov sub ret pop lret cmp dec adc out jno imul dec adc call aaa jae cmc dec and xchg or xor xchg mov pushf lcall loopne inc sub mov stos and popf gs xor xchg xchg xor sbb fcoms inc push inc outsw dec and fwait popa sbb push (bad) mov lcall xchg sbb data16 leave xchg lret pop xchg push rorl scas dec sub inc push mov cmpsb sub dec inc dec xchg push sbb movsb xor mov rcl test jmp xchg push mov lea pushf xchg dec dec inc gs pop push inc ja inc xor adc jp sbb test stos mov jbe push inc sbb movsb test pop adc lcall loope test inc sarl out xchg and and sahf cmpsb (bad) and rorl imul stos jmp call lea jmp mov in push sub ljmp mov inc dec cmpsb insl push lods lods lret inc or dec inc insb insl call test dec call dec cs call test dec call gs ljmp sub sub mov dec es cmpsb sub mov mov leave out mov mov sub sub insb sub out dec (bad) jmp call gs push dec in dec or push dec add scas call dec enter out in call or or dec sub or inc or das or dec sub leave or lods out sub or imul sub or insl out or mov test mov enter sub dec or dec dec sub sub or or stos leave out enter leave sub (bad) sub or or into push or lret ljmp dec dec out lods mov or or ljmp sub lods mov es lret or or lds sub sub mov dec sub sub sub call sub dec mov ljmp sub test sub dec or stos or sub mov out test sub inc dec insb dec das or mov leave mov push sub push dec sub or in mov (bad) sub push sub dec dec sub dec xchg or sub mov sub push test lods dec or out dec mov sub sub sub sub stos lret sub test stos sub es sub sub push sub dec lret test sub test dec sub sub lret sub push dec sub dec sub dec dec sub xchg mov sub sub dec sub dec sub call enter push sub dec sub sub sub test sub test lods mov dec sub sub lret dec enter sub sub sub push sub sub lret das sub test mov test in call test sub call dec sub dec sub enter dec sub dec sub sub sub lret cs test sub test insb call test sub sub sub dec sub in data16 mov call test lods mov dec sub call enter push dec es int test sub dec sub dec sub or sub lods in call test sub call imul cmpsb mov mov jmp enter sub dec stos mov sub or sub lret sub int3 dec push in sub mov call dec insb dec in sub cs dec or sub imul push lods push clts or dec push push sub or sub jmp sub test push jmp dec sub sub dec sub sub insl sub outsb outsb or sub imul push test outsl sub addr16 lea es push (bad) es into stos mov sub scas or sub scas dec lret dec sub sub inc or mov outsb sub sub ljmp mov mov jmp lods dec add mov xchg sub sub add push sub test push sub cs dec call dec sub into dec sub sub enter or sub imul sub sub mov sub sub or dec dec push sub sub inc or sub es test mov mov enter sub sub stos dec out call dec sub dec imul ljmp inc or int3 call sub or test outsl or push sub dec sub sub dec inc or test or test mov outsb or sub mov test push sub dec sub addr16 mov or in push call dec sub sub sub mov sub dec push dec mov cmpsb dec sub dec sub push leave jmp mov or dec sub into data16 call xchg mov pop or xchg in inc outsb scas movl sub call jmp test call sub lods dec push lods call in test jmp sub dec sub imul out test insb call es lods or or in in daa pop or call dec ljmp dec jmp insl insb call sub sub dec enter cs sub dec out stos dec ljmp sub movsl call insl into xchg or sub daa or push scas dec sub push lods jmp sub test mov dec push outsb or sub sub insl scas push dec insl test push dec insl jmp insl outsb cs sub push outsb dec es imul push test test scas out callw lods dec sub lods dec scas cs dec scas sub mov or dec test int dec (bad) dec dec (bad) jmp data16 or in outsb lds call sub movl push leave xchg sub dec sub imul sub sub dec ljmp call push or sub push int stos test outsb outsb sub or dec sub mov insb jmp sub push mov (bad) out sub outsb jmp sub test push inc or sub sub push es dec call lret (bad) sub test lret out insb inc inc cs dec push or jmp lret dec ljmp sub movsl in leave push es cmpsb insl push test or mov iret sub push lret es insl lea dec sub or out push int inc dec sub sub mov insl data16 dec sub into dec outsl cs cs lods scas or insl dec out sub call int3 dec es scas dec cmpsb mov mov dec outsb dec out call dec outsl dec (bad) cs leave sub lods enter mov sub in cmpsb insb (bad) dec inc dec (bad) lret sub int3 lret mov sub in cmpsb in stos or sub push inc lds test enter movsw imul sub out (bad) jmp lods int sub lea push in mov sub push int imul insb out test out dec sub sub dec jmp test ljmp sub mov imul call mov mov sub call sub sub call sub or or test mov lret mov dec push scas or sub in lods call push lods lods into xchg sub xchg or leave into insb dec sub inc dec push or scas lea sub inc dec dec or sub lods sub push stos lods mov push xchg jmp in inc lea inc pop ret sub xchg (bad) popf sbb aad pop push push adc push nop push push dec sbb mov pop xchg mov cwtl xchg mov fcmovnbe push pop fst dec dec call dec cs loop ja adc sbb inc out movsb daa movsb adc jb pop lcall sub dec stos test jnp mov jnp mov adc cmp mov fs sub in int3 leave cmp test pop mov (bad) xchg (bad) (bad) xchg in test into test push dec imul inc inc dec push inc inc xor js push dec aaa mov and mov mov movsl xor cmp mov fcoml adc pop pop xchg adc dec dec or xchg inc sub add push mov push and adc xchg test adc add (bad) shlb mov rorb xor mov mov sub shll xchg fstpl rcll mov (bad) fcmovu scas rcl mov bound jne pop inc xor and cltd cmp cmp pushf adc xchg adc rclb adc xchg pop push xchg dec sub sub call movsb les inc cmpsb xchg and mov push mov (bad) sub imul test in scas ljmp xor xor imul sub and cltd mov and aad adc nop push xchg rorl movsb mov xor gs gs jo and mov mov xor leave mov dec add mov inc sub push push adc mov adc nop nop xchg mov mov stos test mov aaa mov dec dec test hlt inc push fs aaa ss mov xchg cmp mov es jno mov aad clc xchg xchg test and xchg jno xor lahf (bad) loopne mov in insb mov pushf dec sub xor mov data16 mov xor aas mov or mov out bound xor mov data16 not jae sbb rorl dec sub push xchg xchg inc test sub ror enter or and mov dec or sub mov and xor and addl movsl xor xchg adc xor xchg xor hlt xchg xchg push cmpsl adc push jp fwait sbb lret or sub push mov add dec int lods in mov sub dec loope add dec loope movsl in int or (bad) xor rcr push or add push xor fldl jmp dec leave add push lea hlt mov (bad) mov ficomp shrb rorb (bad) hlt loopne andl pop mov adc xchg inc push loopne mov insb in mov and adc test mov ja mov fstl xchg pop rcrl movsb aaa and adc pop rcrb mov and jge mov test xor sbb enter inc outsl adc lods dec dec adc cmp inc jmp inc push cmp pop ret push aam inc loopne (bad) out test jb inc push les mov popf adc xorl aam xchg jbe and in outsl xor mov inc dec in jae adc sbb rorl outsb scas movl mov popf cmp test push xor mov xor dec xor mov lret cvttps2pi test insb call es lods or or mov xchg addl sub mov aam (bad) or mov inc aam les or rcll mov das inc and xor sub (bad) daa or push scas dec movsb xor jbe mov je push and dec imul imul and outsb or lea sub sub (bad) fsubp fs ficom jae jno jae dec sub cwtl cmp xor pop lea push dec mov jmp dec jns adc insl adc stos pusha call les je arpl dec aaa dec inc and sbb int3 fsubrl sbb adc popl push fmul imul ja adc xchg push hlt push jnp cmp cmp inc inc sbbl xor popa sbb sub or sub movsb test into push sbb int dec es dec outsb jmp js push imul pop adc inc adc (bad) mov push scas lea mov mov rclb cs inc inc cs dec push add and mov cmp cltd mov (bad) dec insl lea inc popa dec xor adc fisubrl or adc ss lret nop fwait pop int3 lret ret cwtl lods lods (bad) xchg je push jp cmp cwtl es xor mov and dec inc outsb pop xor mov xchg adc pop ljmp adc sbb pop imul dec mov jp ss outsl xchg sbb or stos and mov mov lret es xor and es jno ja rcr xchg mov pop test or cmpsb js push addr16 push inc xor stos sub sub mov inc and xchg stos xchg mov cld dec xchg cmp and lods imul divb in aaa sbb ljmp and cmp pop lcall adc mov and fwait mov ror adc outsb xchg call in inc adc ret cmp mov or push sbb dec (bad) sub mov test cmp and inc dec js and or sbb test push xor arpl ret push mov movsb faddp lcall pop into out dec lods dec cmpsb bound and sub mov adc push pop xchg sbb rcr push xchg lret lods mov sub inc and rclb sahf or sbb gs (bad) or ja hlt push sub mov pop sub sbb xchg xchg int3 inc imul dec cltd push icebp adc adc adcb mov sbb or mov sub xor fldl mov test inc lods mov cmp (bad) leave (bad) sub ror loop dec adc dec mov inc push les repnz rorl lods lds or popa add adc loope sarl dec dec inc inc adc cmp dec adc int adc push add mov rorl mov add sbb dec lds inc mov sbb sbb mov test add shl cmp or popa add push adc test rcr or leave test (bad) leave sbb loope inc adc (bad) add mov adc add cwtl shl (bad) leave xor int3 lods fadd xchg sub roll (bad) xor (bad) xor rcr or or popf or sub inc or adc lods add lea add cwtl roll xchg mov xor mov int mov push lds xchg inc pop roll xor lds leave mov push dec int3 in dec push lea pop popa xchg fldenv roll fldl add dec sbb mov lods xor push gs inc test int adc in mov or dec and add inc movsl mov add adc lods test adc lea sbb fucom adc aad or inc inc add lods popa int3 aad lods xor int mov (bad) aam xor les roll xchg leave popf roll xor lea gs roll enter rorl test aad or add vpsrlw leave push add shrl loopne roll aam push lds test int roll test sub aad popa test shrl add fcomp (bad) in leave in inc mov aad rol add leave pop leave xchg push aad add popf adc adc popf and sub lea sbb push inc or dec lods cmp xchg movsl push test cwtl leave dec lds test add xor mov fnstcw leave fstp leave and test shrl loope cmp jmp roll sbb add sbb push dec pop push int dec mov lea sbb loopne lea sbb sub sbb test mov sarl mov add rol sub add fdivrs add shll pusha in cltd sub (bad) mov leave sub aad sub xchg pushf aad sbb add push mov roll ror push leave and lods mov call in xchg test test rcr inc xchg test arpl xchg rcr fcoml pop fstl nop int adc xchg xchg adc dec adc sbb nop push xchg xchg adc push push push pop rcll xchg rcrl push fcmovnu rcll adc push push push xchg xchg adc xchg xchg fwait xchg xchg push aad dec test or or repz or mov loopne data16 push push movsb mov lcall lret test push and push ret mov fsts ret loopne scas fnop insb mov inc ss ss jb and mov fwait mov cmp lods mov mov mov cmp mov daa cmp xor (bad) adc popf adc fstl push in sub push data16 sub jmp sub push xor adc jecxz mulb xchg cmp jae jb arpl xchg push mov fwait inc jnp inc (bad) or mov mov or sbb leave mov push dec int cmpsb stos movb mov in mov mov push je ja dec push insl dec xor sub xor cmp cmpsb movsb and and push push nop fcomp xchg sbb dec cmp inc outsb inc sub and sub sbb rcll int push sbb push rcrb sahf sbb pop fcom sahf adc push ljmp or xor add sbb lods cmp adc mov test push mov jbe sub push sub cmp mov or push xchg dec cwtl rcll push arpl je pop inc sub test aad or fs call inc xor sub and sbb adc or outsb outsb inc into out imul push adc jno gs jo outsl inc xor inc das jbe xor jbe jns aaa sbb cmpsl and cmp sbb sbb sub adc adc scas cwtl into xchg push inc pop dec arpl sub inc arpl inc push push push dec sub stos mov test sub mov inc xchg fs cmpsb mov push hlt push mov jno mov lret lea dec mov ss pop movsl push jp cmp mov xchg pop mov movb inc sub mov add sysret sub test inc inc xchg gs rol movsb push outsb shrb fs push in (bad) mov adc xchg or and jnp mov xor push cmp (bad) mov leave sub aad sub xchg pushf aad sbb cwtl pusha xchg mov push xor pop push arpl je push jb inc dec cmp fwait mov mov pushf lcall adc call fmul hlt loop dec imul je gs dec bound fs imul inc cmp ss daa sub cmpsl pop xchg xchg push addr16 cmp sarl sub fstpl les mov dec imul mov pushf cmp push fcompl hlt sahf (bad) (bad) pop sahf shl jo test gs inc push imul pop pop push inc inc pop xor inc mov xchg xchg and xor jb inc lret push jb rolb mov or push or sarl adc lret mov mov stos xor dec xor stos xor cmpsb and xchg arpl mov mov and mov dec les jo inc xor and cmp and les or and lret (bad) test lret (bad) nop mov push mov leave cltd adc mov or adc int3 mov push jo jae cmpl nop stos rol ret inc out jecxz aaa aaa mov sbb (bad) rorb mov mov fimull fdivl pusha mov push push push fs sbb mov and mov or jbe xchg cmp data16 xor adc test and test cwtl in dec push loop dec adc mov es and aad lret pushf mov repnz das inc cmp insl insb adc mov fstl add int mov add cltd lcall jae fwait adc pop pop dec add mov inc testb xor aad adc lock mov dec dec xor je push push and dec ficoml jbe jbe xchg jl das and adc sbb sbb rol mov loope sahf xchg fmull fidiv adc and xchg int xchg xchg jae lcall sbb sbb adc call (bad) movsb arpl inc adc and xchg stos imul sbb mov mov sbb sbb push push int3 push push sbb pop xchg mov test and mov push adc mov sub imul arpl cmp (bad) int3 stos adc cmp xchg xchg inc clts sub or insl test addl jecxz mov fwait mov inc imul rorl dec ljmp and adc xor jae adc pop sub xchg or inc (bad) test pushf jb pushf outsb insb xchg mov dec dec pop je popa inc das inc sub xor aaa rorl dec (bad) scas cs test mov sub dec mov dec outsb scas in enter sarl sub es (bad) int out pop mov int3 dec sub pop jbe sub pop inc mov xor pop push jp inc cmp cltd mov mov mov jne and dec dec fsts lods stos mov dec xchg xor sub lret mov popf dec imul jns jp arpl xor mov xor dec scas or cmpsb mov mov loop out inc inc fs loope mov int3 mov dec inc loop dec adc mov into pop inc xchg insb mov dec push inc pop xor xor adc and adc dec ficoml dec dec scas lea push call imul lcall pop enter mov or aaa dec mov sbb or sub pop and mov mov pop arpl push or xchg pop rol mov and jae nop int3 mov repnz out rcll cmp xor mov ret and inc test xchg adc in adc in jmp dec push xchg fisttpll insl ljmp lcall sbb or sub sbb mov or insb fs in push dec sub jne fs inc jno aaa cmp mov sub aam adc inc mov xchg xchg rorl addr16 lds or out xor outsl enter hlt inc data16 ljmp xor push mov mov sbb scas scas (bad) fiaddl stos lcall and mov xchg (bad) xor das bound and pop jnp sbb xchg push adc xor pusha mov mov sub in arpl mov inc dec addr16 roll push out pushw or xchg xchg push push cmpsl inc and lods xor lods inc mov mov int inc test cmp lret cmp mov sub and pop fxch fnstsw push or test int sub cmp fsts pop loop xchg aam fcmove lea mov sub sub pop loope dec jmp stos pop xchg (bad) or enter mov and in dec sub adcl mov mov dec arpl xor rorl data16 or cs dec cmpsl xchg add xchg mov xchg ljmp cmp xchg sbb pop je xlat movsl push and test imul inc jne sub es mov aam insl dec movsb and xor and sbb pop es and sbb or push leave dec xchg mov xchg and jae sub inc and sbb adc repnz outsl cwtl loope xor loope and fdiv (bad) lret iret and mov xchg test or stos pop xchg xchg lock ror inc and push les adc push test gs push mov mov sub sbb cmp cmp and daa test mov mov and mov mov sub sub test sub mov sub mov sub mov mov sbb test mov mov xor mov sub and lcall cmpsl pushf mov sub pop test and and fwait mov and mov mov mov mov and cwtl and cmpsl cmp mov cmp xor and mov sbb mov mov sub daa sbb mov and sub adc mov aaa mov lcall lcall and mov xor and and mov test movsb mov mov pop pushf sub xor mov sub cltd mov sbb xor cmpsb mov mov and mov mov mov cmp and movsl and sbb and xor stos and mov cltd xor xor xor xor sub and xor sub cmpsb mov es xor mov movsb sbb and test cltd and mov xor cmp movsl subb adc pop or aad adc popf pop push push pop (bad) push sbb adc pop int3 xchg adc aam push sbb pop adc adc pushf xchg pop push xchg aad fwait pop push inc or or or stos or movsb push testl je adc pop inc in push daa push cmpsb aam ss test xor push adc and xor adc inc xchg jae cmpsl xchg adc xchg addr16 cmpsl arpl xchg adc (bad) cmc add jbe adc daa jne jbe and push push adc pop and daa ss push push fwait jae cmp fwait pop imul inc mov jne bound outsb inc push xor cmp mov mov sub daa sbb mov sbb pushf or xchg inc in push dec in dec es push sub arpl addr16 lret sbb arpl (bad) movsb leave or push inc int mov pusha jb xchg das cmp push movsb sub cltd mov sbb aad ficomp sub mov movsl outsb (bad) enter daa ss xchg and adc mov push push xchg push xchg mov dec bound xor inc xor xor pop sbb or int dec mov mov in or ss cmpsb xchg and add mov pop sbb ret and mov aam dec sbb mov movsb mov aam and and test mov xchg push rcrl xor xor hlt (bad) mov adc jnp mov sbb dec mov cmp and bound (bad) jae mov movsl dec call fstl call cmpsb mov inc inc (bad) shll push lea int dec gs jmp sub cmpsl adc mov movsb in and hlt push cmp addl int3 loope loope inc mov scas test push dec inc sub movsb mov test or push (bad) mov push hlt xchg xchg inc in pop cmp sbb mov in sbb fimull push pop outsl push insl push mov fimull mov mov lea (bad) dec mov cmpsb inc inc xchg inc (bad) jne inc add push stos mov or int inc xchg xor enter sub add inc sbb mov sub mov sbb int movsb xchg push cmc jae adc movsb cmc push push mov adc mov fwait pop push sbb mov push inc jo jb outsb push mov fstpl push jae push cmp lds mov movsb out out rorb gs xor xor (bad) pop xchg dec pop push adc inc cs dec inc call and test mov push adc mov lcall insb lods retw jbe imul push stos and aaa and pop xchg pushf nop cltd xchg xchg rorl call stos jmp pop inc ja je hlt mov sub bound mov inc pop mov mov jmp adc (bad) scas mov pop mov push jne pop fs aaa inc and mov mov dec sbb adc adc daa or into in (bad) lret test aad cmp xchg sbb adc sub mov lret lods stos (bad) in (bad) mov arpl bound xor and aaa mov lods mov or xchg push dec sub sub leave stos inc das insl pop dec mov adc call pusha cwtl push test data16 dec insb xor pop popf sbb dec dec and or inc or mull sub cmp int fisubl rcr mov scas mov push cmpsl xchg loope mov xchg ficom fwait nop pop lcall gs je (bad) mov mov mov xor loop repnz fs fidivl gs daa xor lret divb out sub or xchg dec imul mov and dec push xchg sbb enter fs push push push xor xor mov mov inc xor cmp adc cmp stos scas (bad) dec sub inc dec inc jo adc cmp popf sub mov cmp lods movb imul cmp mov arpl inc and xchg xchg sbb sahf cltd loop push inc sbb cwtl mov adc sbb push push xchg xchg aam test (bad) push push in dec and popa dec inc cwtl loope lea pop outsb dec inc sub cmp mov int mov out sub ss xchg ss aaa mov shll adc fadd fdivp push mov inc inc outsl dec dec imul dec adc lret int3 add (bad) fs test mov push push imul sbb push data16 inc xor mov jp jo push inc das das inc pop inc and mov movsb daa and insl dec in or aam push lcall xchg or int3 (bad) popf enter push bound movsb cltd mov xor fnop lea push fs bound sub sub xchg adc adc test lcall lcall dec xchg (bad) fmull push mov pop addl mov in xor leave int shll dec dec or bound and pop ret lea xchg inc sub sub test sbb les xor cmpsb stos adc inc add sbb shr adc loopne test in mov dec jb aaa pop sub inc and cwtl cmpsb cltd adc mov pop inc xor push cmpl and test dec lea mov (bad) adc push je xor stos mov xchg cmp xor mov mov (bad) ficompl sub pop inc cmp xor sbb loop inc adc xchg rcll fstpl mov inc dec dec dec outsb inc xor dec or jno nop cltd sbb mov cmp sub rol int fsub and dec push int (bad) sub gs push and xchg mov subl inc jae dec xor out mov daa xor xor and xchg xchg test test sub push push jp sbb inc jp sub ror mov insb enter xor cmp push lcall inc xchg mov dec and xchg mov adc pusha (bad) in rcrb test xor push (bad) repnz pop and ret sbb nop (bad) xor push aaa mov sub sbb movsl rorl movsl outsl or xor cltd sub and mov and xor inc sub inc daa sub pushf mov sbb xchg (bad) adc adc rcrl push pop pop fs sbb mov xor loop inc adc js push adc jmp sub insb outsb dec pop cltd or xlat xor imul int cmp loopne fmuls insl adc (bad) roll and test movb notl enter jb inc js sbb push fstps mov cmpsb xor repz pop push push sub notl fs sub adc pushf adc (bad) aaa daa add jne cmp sbb rcll sub sub fmuls lcall pushf xchg mov and movsl adc dec test xchg xor xchg aam adc out fmul pop (bad) fcomps or popf fcoml mov dec aam test xor fwait mov and sbb mov das popa imul bound xchg aaa xchg inc xchg xchg out lcall mov jne xchg cmpsb inc cld xchg (bad) mov push jno inc arpl push bound and sub mov loopne in mov dec int xor popa mov dec movsb arpl inc inc sbb cmpsb sub pop mov movsl xchg inc mov inc sbb xchg and test outsb and fwait sbb push xor mov adc aam arpl xor xchg push push push push cmp mov ret mov nop pop enter test xor bound gs ret lea les test es inc dec inc arpl push mov fcmovu or (bad) mov xor inc and xchg or dec (bad) lea xor loope test mov fs adc sub cmp (bad) in dec ljmp adc cltd and in sub and or dec imul jmp (bad) aad flds or mov add lods sbb fnstenv xchg add frstor int xchg add sbb shl adc mov in adc mov fs leave pop add inc fst push fcom pop add in mov add frstor dec xor or inc gs movsb int add sub shrl call gs mov or aad fnstenv add call and lds int3 int and fnsave lods mov or leave add xchg sub shll aad jmp mov in loope add lods mov xchg xchg dec xchg add push imul or cmp add rcrl lea cmp shll inc dec or mov mov imul sub sbb mov in inc mov sbb fisttpll loope mov sbb fldl add movsl adc sub leave dec and adc mov mov push mov push sub pop shrl lods rcll pop dec add lds sub loope xchg sub inc add xchg inc lods adc adc adc and dec popf sub int in and mov xchg in roll xor inc xor dec push ja ss pop push dec xor mov push insb (bad) pushf aam jb mov lods test insb fnstenv imul and fs int xchg mov lret lret xchg mov sub ret fwait and arpl out mov in xor test ja inc arpl inc sub call sbb adc pop pop adc sub cwtl mov movsl stos dec push push dec inc push ss insb cwtl call cmpsb mov fadds (bad) insb fcomp mov int call and mov inc sbb xchg je mov and inc fs and mov xchg data16 inc lods outsl dec sub lea das daa push int mov stos dec lods stos dec mov push lea push lods xchg dec inc outsl pop das pop sahf insb (bad) sahf hlt ret mov (bad) (bad) test shll inc dec or fwait push rolb sbb sahf push popf or mov loope fisttpll loope mov and mov or mov sbb cmp dec pop cmpsb adc roll push ja dec leave gs lea push push adc aad adc aam cmp mov movsl (bad) xchg cwtl pushf and sub mov sub sub inc jp push inc dec insb je push cmpsb into xchg test fsubr ljmp pusha fs movsl andl aad lods dec sub inc test sahf push aad dec cltd aam sbb aad mov mov cmpsl and mov test sub xchg fnop pop push sub fwait mov mov inc xor inc push test into ror (bad) push shrb push jae push mov ss fs push inc cmp inc cltd sahf mov lcall push jne adc inc imul gs mov insb inc jo subl xor xor sbb sub mov inc mov push adc xor and push outsl or inc cs fcompl pushf xchg xor and cwtl cmp push daa mov pushf cmp inc insb imul inc dec dec inc dec xor dec push js dec dec push push (bad) in fisub test mov daa jp push movsb adc jne push movb scas jmp stos inc dec dec mov subl push cmc dec sub mov adc push push sbb dec fisubl insb dec adc cmpsb mov ja adcl movsl movsb push cmp mov stos or inc shlb xchg mov inc bound pushf cmpsb xchg nop (bad) fnstenv or cmp xor jno aaa sbb mov mov inc fs lock mov test adc lods popf xchg add out je adc cmp inc xlat js pushf dec fidiv test cmp aad inc xor dec xchg xor adc xchg aad aam pushf push cmp sub mov mov outsb or (bad) out lcall ficomp stos cmp sbb sbb xor cmpsb and push ss jp inc insb js xchg int3 sahf fsub lret jb test in xor mov dec lret lret xchg adc pop push es xchg fs dec lret cmpsb dec (bad) or stos xchg sbb fstpl adc pop push sbb ret and xchg movsb test jmp xchg sub push (bad) popf mov xchg dec sbb sbb pop fildl and mov enter (bad) fidivl push pushf pushf les lock xchg mov imul mov push push sub pop adc out and and mov aad and xor cmp in pop dec in sub ficoml aad popf xchg int bound jp mov rorl push add fisub mov aam lret adc xor mov and iret sub mov push push jnp imul test aam adc inc mulb push testl inc mov ucomisd test dec push xor xor imul inc (bad) cmc xor or sub test cltd nop lods mov pop push mov fwait sarl adc stos nop test (bad) mov xor mov cmp adc mov mov (bad) test xchg leave mov or ror push leave cmpl lea mov cmp adc enter ret xchg gs xchg inc test mov dec (bad) dec dec xor jns mov mov insb mov fsubs xchg mov mov xchg cmp or lods push dec ret xor stos test int3 movsb xor jbe push lret xchg popf adc mov aad fiadd and sbb popf inc fwait ret pop sarl mov lret push test and dec push outsl jo sub aam aaa cmpsl mov sbb mov dec xor arpl in inc dec fcmovne adc pop cltd push sbb mov fiadd inc push pop inc push cmp xchg pop cwtl dec fimull movsb in dec test jno outsl push pusha pushf in into push into (bad) lcall sbb inc mov out int (bad) and push fs les in movsb test mov int inc push dec adc fstps mov push lret scas mov xor dec dec xor mov inc scas add arpl and push dec xor push outsb fidiv test push sub cmp inc xchg mov jne cs push in push js and jbe repz sbb mov lods test sub aad or push shrl imul add es dec sbb test add in adc outsb sub bound push test dec push push and mov xchg pop dec fdivp in bound sub mov push test call lret fsts sbb push push push sbb push test and mov xor dec addr16 in out sub ljmp cmpsb out lods ljmp fwait xchg xchg push (bad) enter adc popf inc imul dec ret adc inc stos int adc xchg int3 sahf push lcall mov sub into out adc push push out (bad) div shll sbb lea (bad) into dec mov repnz mov out movsb outsb stos mov and or push test ja gs xor dec dec lret lea cmp and jnp cmpsb jecxz cmpsl cmpsb arpl adc test insb mov pop (bad) scas sub or sahf xchg pushf adc push and xchg test mov pop insw popa jne jb and pop xor iret dec out mov (bad) adc xchg xchg ficoml pop int lret fcoms pop aad cmp xor cmp sbb cmp jbe jno stos cmp bound xor aaa ja or xchg adc loop push (bad) ficoml vpsubsb push insl in outsb xchg or imul xor inc mov daa cmpsb in and insb lret add lods imul push dec sbb adc rorl push pushf lret ficomp adc push test ljmp data16 xchg xchg xor push add (bad) out dec xchg or mov dec or sub dec lret dec gs mov rcll mov inc pop lea xchg loop push and xor push push aad fcmovnbe push push inc (bad) (bad) jns sbb dec dec and pop jno push xchg insb fdivs mov push ljmp bound and into and enter int3 inc push jbe jne pop sub int3 lret cs pop push fcompl loopne adc nop nop pushf test enter pop or cmpsb cmpsb iret sub push sub insb dec xchg sahf sbb xchg adc int3 test ja aam and pop push inc rcrb jno inc ja pop and test in aam stos dec jae jb sub outsw xchg pop fsubrs lret out dec inc jno pop dec and xchg and adc lahf aam cmpsb mov pushf mov cmp stos mov mov and dec iret test insb jb jb addr16 adc jae lret xor fwait mov jp jae mov ret inc or sbb mov mov cmp jae lret xchg or inc jnp stos stos stos dec ret xchg sub and dec rol adc imul lcall lret sarl inc or push mov pop or or jnp bound jns pop jp mov inc or dec cltd lret andl pop inc adc or pop stos or inc adc (bad) jb jae leave mov ret or ret jp stos pop xchg xchg (bad) or (bad) cmp xchg mov lret mov xchg arpl and push fwait mov imul cmp imul dec xchg xor sub inc mov mov or push stos or sub andl mov and xchg sbb imul sbb pop xor xor or cmp mov mov or lret cmp test or or cmp sub xchg push bound push push sub push jb mov or adc popa (bad) mov mov push arpl mov mov fwait or stos jp sbb sbbl mov adc dec sbb push mov jns mov xorl imul pop mov xchg push mov roll lret or bound push mov bound dec mov xchg ret inc dec or (bad) sub mov mov and adc or mov jp push rol xor bound fwait sub aaa stos cmpsl cmp mov xor cmpsl and daa sbb cmpsl mov xor and stos mov movsl cmp mov mov sub mov mov mov xor and xchg mov and stos movsb mov daa and and pushf mov movsb and pushf mov xor fwait cltd cmpsl daa xor mov lods lcall cmpsl sbb mov mov cmp cwtl mov adc sub mov mov cmp xor mov mov xor cmp cmp fwait mov test and cwtl mov test movsb stos and cltd xor xor mov mov mov mov cmp and cwtl sbb cwtl push cltd fcoml adc push pop push rclb (bad) mov push xchg cltd push adc xchg xchg xchg rcrb or push or fwait push pop pop popf mov fcoms push push push push pop rcr ficom scas push inc es xchg xor pop jae xchg sbb cmp pop mov push mov roll (bad) push lret sbb ret jnp mov (bad) sub dec mov xchg ret inc dec push (bad) sub mov imul mov lcall xchg push jp push rol xor jnp inc cmp adc pop bound fwait ret test lods mov movsl sub dec fs in fstps sub roll fsts movb inc push dec dec push push bound push xor dec bound push push addr16 xor cmp push insb xor dec sub inc aaa dec insb pop xor cmp addr16 dec dec arpl xor dec push imul imul push ja insb dec xor insl je push push ja dec inc addr16 fs inc arpl jno push dec inc xor dec insl dec push jae push jo insl push and sub sbb rcrb xchg or rorl pop xchg xchg fimul sahf pop pop push sbb or lret int3 rcr xor mov sub mov daa mov movsl xor sub lcall dec xchg mov jne xchg cmpsl inc ss sub cltd add mov lea sbb rcll mov frstor sub mov (bad) xor sbb dec loop mov nop mov insl jae ss push jns inc push jo push and and mov aam sbb pop pop pop sahf push xchg lcall into sbb (bad) shlb push inc xor je adc xor repz mov push mulb movsb cmpsl mov arpl mov cmpsb out inc movsb data16 push cmc dec inc mov fwait sarl xor arpl dec mov pop jb xchg bound stos lret mov jae rcll push cmp mov rcll fcompl (bad) ret xchg pop lcall into imul xor cwtl dec sbb int3 or push adc push fxch fcmovu push imul out into jmp call ljmp push stos shrb push ror or int3 (bad) lock xchg xchg sahf xchg (bad) mov enter xchg push push inc es xchg sbb and test inc lods mov stos out call inc jns xor mov arpl cmp pop jnp push arpl xchg lcall adc or lcall pop popf push cwtl test mov lds jbe xlat popa cmp mov xor jp push bound dec inc inc push inc sub sub cmpsb jmp sub inc cmp cltd lcall stos pop mov push lcall sahf jo xacquire xchg xchg ljmp mov test les jb xor mov cmp cmp lret jnp inc dec imul pusha lock (bad) lcall jae cmp ret lret xchg adcb push pop pop sbb scas gs mov movsb jne movsl push movsw and movsb je movl movsb xor cmpsl xchg and and in and ss adc fs inc mov cmp test and sub and cltd mov movsl es xor sbb into push aam dec cltd inc scas jmp jne push rcrl fcompl (bad) sub xor sbb sub and and in pop daa es addl pop xor and adc sbb mov fstps dec jmp and rcrl sub inc jno jne xor test mov dec cmp inc outsb addr16 ret daa ja inc jp mov adc pop ficomp (bad) in stos push stos lret inc jae je fwait or (bad) (bad) movsb and movsl sbb sbb popf adc fistpl pop push test fs es and xor daa add mov (bad) xchg jae (bad) stos push mov stos or mov pop and push inc jb pop dec dec jb xor push cmp cmp xchg and int mov or lds xor xchg mov xor mov xchg test push dec mov jp arpl xchg pop aam dec flds xchg scas int3 fcoml into repnz xchg les or inc lods mov push jns cmp adc nop push rcrb gs jo xor arpl inc dec xor cltd lret push cmp adc dec and orl mov call lock pop out add adc xchg (bad) out outsb inc andl push xchg xchg xchg testb xorl inc jbe adc test movsb shll mov or das jbe xor adc push test insl mov outsl dec mov push int or in hlt cmpsl test pop push in aad mov fisttpll and ret lret mov mov jb cmp mov ret adc push jp rcll lcall bound push fsubrs les sbb sbb sub data16 push push ss rcrb rclb push pop enter push or rcr rorl (bad) xor test inc (bad) jmp dec xor insb push insl mov rorb cmpsl inc add arpl lret in mov es aaa cmp adc xor imul jp mov and sub mov mov les mov mov lods dec cmpsb insl into int je and push in adc loop xor sub cmp sub or or sub sub push xchg or cltd fstl cmpsb test xor xchg lcall cmp pop xchg xchg adc and and jnp insl sub mov sub ror lea inc push inc xor xor in push cmp daa and movsb cmpsl xor aaa xchg inc hlt cmpsl cmpsb xchg push xorl xchg ret xchg push xchg testl inc outsb bound mov mov das es dec push mov out or dec adc and gs dec dec sub push test mov roll loope rol fldl fs lods mov sub xor jbe outsb ss pop inc insb sub addr16 push push adc dec fstpl mov and pushf mov inc and popa int movsb xchg in test loopne data16 les jae xor xor cmpsl and lcall aad adc sahf outsb out mov jo cwtl hlt jb lods fs and movsb xchg mov popf xchg and in or cwtl jo mov fsubr lock and cmp and mov cltd xor adc (bad) cmpsb insl sub xor or mov inc dec cmp dec js insb arpl xor mov push inc imul inc js jae mov xchg rorl pop and or test jb mov jnp mov shrl jp lret mov xor mov jnp push rorl mov imul dec je and xchg arpl cwtl mov fnop mov loopne out iret and xorl inc data16 inc push in and je inc xchg test push es and inc repz je push gs jbe push es test inc jbe xchg mov out inc and xchg xor xchg push in adc (bad) hlt xchg xorl cmpsb je test (bad) hlt test xor cmc xchg push push push mov cmpsb inc inc test and aad es ja and inc fs push aaa es je es push push push push push addr16 push jbe cmpsb aaa aaa je and and push push adc xor mov ss mov movsb lds push and adc xchg xchg arpl inc push mov in (bad) out xor es mulb aaa xor gs push data16 fs lds je adc pop push and test movsb xchg and inc and push aad hlt cmpsl xchg ss fs add and movsb je xor cmpsb repz xor add mov add inc push divb jne push movsb xlat mulb inc test pop xchg push xchg xor aaa ss xchg repnz adc es xlat gs and add xchg bound inc inc pop je mov xchg movsl xor mov adc xchg inc test push xchg je adc push xchg out out adc inc adc fs hlt pop jbe gs jae adc jbe xchg and test cmpsb push mov adc inc mov push out pop cmpsb push mov mov xor cmpsb in ss test adc inc push xchg inc pop inc inc movsb cmc inc inc data16 test fs inc and hlt adc xor xchg int3 inc push push scas leave call dec lods lret dec lods dec lret sub in lea in into call data16 lret cs add or insw dec call scas out lods jmp xchg and ljmp lretw dec mov scas lods or inc dec dec sub call push cmpsb outsb dec in in call sub scas lods into push sub cmovl call xchg stos test stos sub pop dec push bound ret jp rcrb xchg pop leave lret mov leave xchg ret arpl bound sbb sub sahf aam fadd repnz (bad) lods mov int3 xchg cwtl cmpsb daa adc cmp fnsave fldcw and imul insl pop das dec jns inc popf xchg or dec xchg cwtl xchg ficomp push movsb jecxz cmpsb repz xor sub aad lods inc adc jp jbe bound cwtl pop push pop xchg sbb sbb ss xchg repnz adc es xlat gs and sub mov push adc sub sub push inc xchg ficom sahf adc movsb push push xchg out out adc inc sbb xchg mov fstl pop ss jbe outsl imul das jbe jp inc xchg sbb adc adc pushf pop pop test xchg push mov mov hlt faddl mov lcall push pop adc mov inc lea xchg (bad) lcall je gs test jae xor mov push inc push ss addr16 inc sbb mov pop inc jb and cmp enter xchg fs sbb mov mov and mov inc push push mov int3 dec push pop (bad) jno and adc mov call sahf hlt and and movsb mov fwait or fadd push in insl push test or pop sbbl push (bad) push ficoml adc inc aam test and pop add adc adc insl mov lcall adc mov jne cmpsb mov inc jno mov fnstcw or (bad) test fldl adc popa jo dec inc dec jns inc xchg cltd xchg sbb push xchg or xchg sbb mov imul inc lcall or leave lcall and dec inc push jp stos cmp bound (bad) lock test xchg xchg repnz and xor fcom inc out addl xor xor test dec xchg xchg mov xchg pop rcll fcmovnu xchg pop push sbb inc xchg notb xor xor add insb jns ja ja (bad) jbe xlat add and sbb or push dec imul dec xor push inc es (bad) and adc lds mov fs adc and movb sub mov pop outsb dec arpl push ljmp push and and inc xor dec dec cmpsb mov stos cmp lcall cmpsb lds inc ja mov adc shll imul xor inc cltd (bad) xchg sbb fcoms mov mov and int3 imul ss xor mov sbb aam or je (bad) push adc in mov xor dec jne mov leave mov dec movsb cmp outsl dec and test dec enter test adc push jb cmp ror cmpsb dec (bad) cmpsb leave xchg js dec bound ret or sub add xchg adc xor fwait cmp movsb mov dec dec arpl test push imul mov into or addr16 inc outsl inc mov adc fsts xchg push adc xchg inc aad jae in push popa sbb cltd pop leave rcl fs jae jne cmp dec mov fmull sub mov xor push cmp dec dec dec inc adc cltd or push pop leave pop cmpl scas fcmove xchg shrb mov and cmp cmpsb shlb repnz inc sub test pop and imul push inc jns addr16 cltd xchg sbb fisttpll push dec dec adc daa and testb jmp or jb jb jae pop push mov or mov push jb dec sub inc imul pop int3 pushf cltd sub pop or ret mov inc jno push jo lea lea test insb inc (bad) (bad) in sbb add xchg and and daa and or sub or insl out inc ss adc or mov or ja dec insl xor imul xchg ficompl dec pop sbb call xchg pop adc pushf push into xchg pushf push mov test sbb mov mov rolb ss (bad) fsubs dec mov pushf mov dec dec call mov shlb hlt fcomps mov in add xor cmpsb inc xchg call dec xor inc addl inc fs inc sbb cwtl and fs dec sub out xchg arpl and inc jo inc push inc movl in jno push xor ja cltd push xchg push mov pop inc adc pop adc cmpsl xor mov pushf test xchg jb nop push and stos pop xchg sbb mov adc inc test in aad jmp lods and mov mov mov lea dec adc sbbb jne xchg inc mov sub mov push dec call ret jnp lcall ret movsb mov sbb cmp sub push push jbe inc mov cmp mov in jno and imul inc rolb mov mov pop adc imul imul addr16 dec dec out push jbe das dec inc fwait push push (bad) rcll lea push mov add cmp imul xor mov adc cwtl (bad) dec int3 pushf shrb sub push (bad) jae push xchg sub in test jae dec push dec dec inc adc sbb movsl xchg and adcl inc xor pushf mov aaa mov dec sub fstl jmp imul or ss bound push xchg sub cltd pop test cmp (bad) sbb xchg mov pop push inc call inc jne arpl test xor pop pop fmuls dec and xchg inc mov pop xchg cltd dec fsubrl leave adc (bad) xchg mov lret nop pop mov lret stos ret je adc pop fs or and clc pushf dec inc push adc dec mov popf (bad) xor scas aam leave xchg mov xor xchg mov daa ss lea mov adc je pop js push or ss adc cltd fmuls inc adcl inc cmp mov and fdivs je ret adc xchg fiaddl jbe cmp (bad) adc mov inc enter push enter or in ljmp out or cmpsb mov test test sub push or inc sub or mov sub (bad) or lea or lods dec ljmp dec push mov (bad) daa or push mov stos dec sub dec jmp into sub leave dec push scas push call test insl lods test out imul ljmp dec sub lods stos sub push mov insb jmp push into in dec or sub push stos or or out imul cmovns or (bad) or test das or lods push sub sub mov push dec stos mov enter outsl sub imul sub or mov imul stos lret push sub test es mov cs jmp push in and mov sub dec es sub es sub leave data16 mov dec sub dec mov or or or or sub mov gs dec or dec push push sub lods inc in cmpsb lret or scas inc lods insb jmp sub sub dec dec es stos or lret sub (bad) sub (bad) out lods inc into dec and sub dec lea cs int or mov ljmp test dec test int3 dec inc or or or dec mov or sub dec dec out iret dec dec sub sub dec imul scas ljmp imul mov int lea sub inc test push in jmp mov push dec sub dec dec xchg out jmp mov dec pop sub dec mov out lods sub jmp jmp inc sub dec test dec mov sub outsb call sub mov scas or mov push int3 inc das dec sub sub cmpsb ljmp ljmp lea sub dec mov cmpsb push or sub outsb data16 call int3 out dec mov leave dec dec sub es sub int or out lods or test inc sub sub es call call dec dec das or insb int sub xchg test stos leave out or insl cs dec enter cmpsb insl dec sub (bad) lods out enter sub or dec test push xchg leave (bad) dec test int push sub out xchg dec lods int sub (bad) lods sub mov sub lret in leave push test iret sub sub mov lods in in xchg sub dec mov in dec enter sub dec cs push or sub sub mov or sub or mov dec mov in jmp enter es call sub insl arpl sbb xchg or adc fcmovnbe nop push xchg fcoms fmul sbb aad adc rclb sbb pop fnop push fisttpll adc cltd push xchg mov sbb dec lret adc adc sbb xchg xchg sbb push pop xchg aam (bad) pushf sbb adc mov (bad) daa or push mov stos dec and je push xchg aad push xchg adc data16 adcl addr16 adc jae (bad) push inc repz in push lcall mov or xchg inc sub push mov mov in out aam mov (bad) sahf xchg stos lret fcmovu mov rorb jp jo inc xor mov xor mov and push ficompl push leave push stos mov enter outsl sub imul movsb xchg lds xor movsl xor push lcall imul push cmp movsb lods roll ffree int xor sub jo dec inc sub and sbb xchg push dec pop dec dec fstl popf adc or dec mov or push lds push inc or pop mov inc mov mov popa push dec push insl ss adc test dec push roll dec es stos or xchg xlat andl inc xchg aam mov mov mov xor jmp xchg mov int add inc loope test test hlt (bad) nop in lret lret push xor pop push push dec push inc cmp lcall cmp cltd or cltd int3 sbb push dec lret mov imul push dec and sbb gs adc inc pop mov lods mov shrb xchg mov inc pop outsb inc jno push inc inc xor fwait cltd aaa movsl cmp xchg adc push nop xchg push bound dec and sub xchg xchg int3 test test stos mov inc bound jae push inc and cmp lods cmp push or inc das dec movsl adc inc pop push jne push daa adc mov mov pop adc xor and add gs adc in mov into in mov inc xchg cmpsl and sbb fwait pop adc dec int dec or push dec lret push xor adc jns xchg pop xchg mov adc cmp pop pushf xchg nop xchg rcll ficoml out enter sub xchg es les leave xchg popa xchg lcall rorl test jb pop push pushw or push cltd sbb mov leave push cmc xchg in addr16 mov push movsb push mov and and adc mov adc out out nop mov xor gs push push jbe dec xor mov mov in jmp les outsl and or sub adc mov (bad) xchg (bad) rolb je add mov movsl and aaa xor inc pop sbb rolb (bad) hlt enter xchg addr16 xor cmp cmp xchg push pop pop xchg push push adc fsubr mov pop dec inc xlat xchg daa je cmpl or push sub int3 frstor push inc push push mov pop int dec rorl push scas imul dec adc popf adc xchg jb rorb dec dec dec push cmp adc mov mov dec push sbb push and popa dec dec adc sub pop imul lods pop xchg add or inc inc aaa ja xor cmp test push (bad) push fs lcall mov addr16 dec jne sub lods mov push ss jns inc pop mov mov stos and adc popf pushf push xchg cltd movsb push js push sub mov mov mov out mov je push push js addr16 sub daa aaa xor adc ficomp lret pop xchg dec imul or scas mov arpl push adc adc rol sahf enter (bad) in bound bound bound sub mov mov mov into pop fwait pop xchg push or push mov inc div add test mov mov jne inc push xor pop mov aam (bad) (bad) pop mov xchg push add xchg test sbb loopne inc adc xchg cmpsb fcmovb movsb lcall push cmp je jae sub sub aaa jne popf adc data16 test push pop jb sbb inc jo fs adc mov loop inc insl pop sub pop bound sbb mov mov mov cmp inc insb arpl inc adc push fsts xor mov and adc cbtw repnz xchg ret and stos mov adc jmp or push inc cmp mov lods sub and leave cmp ret xor dec sub inc (bad) mov callw mov imul adc xchg sbb stos mov fs push das inc sbb cmp stos cmp xor fwait cmpsb and cwtl rcll dec dec test xchg adc push in push xor ret ret shlb mov repz fs cmp cmp inc push daa cmp sbb es cmp int rorl test (bad) aam pushf mov (bad) push mov xchg flds inc (bad) xor mov and lret (bad) adc call xchg fmull and or dec sub inc push adc ss rcll push sbb test data16 aam lret cmpsl push leave pushf lret or sub fidivrl push push push dec or push repnz add mov in and push mov mov pop mov push xchg lcall sub arpl (bad) (bad) loope fcom push sbb dec les xor pop lret into sbb pop pop push cmpsb adc stos mov (bad) fcomps xor sbb inc imul push dec mov or or das or mov inc add fs xchg es je dec jp stos adc dec das add push pop je pop sub sub les test xchg sbb and sub mov fisub mov (bad) xchg es sub ss xor xchg mov mov and imul dec leave (bad) push push gs adc or ljmp in dec cmpsb xor dec jne adc sbb push pop push popf bound inc and cmpsl mov mov or (bad) scas dec xchg jne fs adc outsb outsb outsl xor or mov (bad) xchg push stc xchg fcmove push sbb stos lret mov push or push xchg pop leave test inc sub ss adc or sub out jmp jae inc imul sbb into push push push dec cmp push jo and jnp sbbl lcall ja adc rcrl lock push add sbb lret and in or popa pop xor and and movsl stos adc aam push imul add leave rorl sub sub ja xor jp xchg dec test into daa inc mov cmp test jne adc cmp cltd loope push ret mov das jp outsl adc xchg push adc rolb sahf fs mov cmpsl push mov xchg mov fcoms movsb xor gs and fcom loop nop shlb adc nop repz sbb sbb daa sub mov enter xchg mov inc push insb cmp popa ss inc cmp test cmp mov push push xor daa or test or jno inc and mov mov lods int3 scas leave push je fwait mov leave dec or sub je pop ret lret or xchg test les push and lret push lret sub sub dec test mov sub push or mov adc rcrl sbb xchg xchg sbb bound (bad) mov inc xchg cmpsl adc dec stos inc dec jbe ljmp jae sbb push cltd xchg dec mov ljmp inc jns jb dec cmp push inc insb dec push push cmp imul inc xor cmp xor dec dec ss bound jns jo inc dec push xor inc xor push dec dec push js dec xor dec inc dec bound imul dec push pop insb xor outsl pop inc inc dec push inc push dec dec inc xor dec das xor addr16 pop inc dec cmp jae push inc js push inc inc arpl arpl push jo inc inc ja inc cmp push dec push inc inc push push inc push outsl bound ja dec push dec push inc push insb dec imul inc inc inc jbe inc inc jns jp xor inc xor imul jp cmp inc das push inc inc inc push xor push addr16 outsb push push je xor pop addr16 dec push inc inc push dec xor push addr16 pop push inc insb popa push xor pop addr16 xor dec imul addr16 dec popa insl je popa xor bound jbe dec inc jns pop pop xor jp pop push das addr16 das addr16 inc inc addr16 inc push xor dec aaa jns dec push inc imul imul pop insl dec insl popa jns jne outsb addr16 jb dec inc imul addr16 outsb jno insl jno ss jb inc jb aaa dec jns js xor jb dec jne jne jns jbe inc das ja dec inc jb jp js inc dec popa dec push sub aaa push jp inc push xor push xor push push xor jb dec jbe push xor addr16 jbe jne imul inc outsb ss outsb jno gs jbe addr16 aaa push inc jns das push xor addr16 xor push outsb sub jp pop ret xor int3 sbb aad pop push lcall aam xchg dec push sbb xchg fcomps sbb fmul rorl push adc mov dec outsl dec addr16 or or out lods jmp sub push mov les repz xor es test leave jnp sbb cmp and add or stos dec sub xchg and mov mov rclb cltd rcl pop adc fcmovnbe cwtl enter mov sub call leavew out dec out or and push or dec call mov (bad) or or dec mov sub int3 call mov out or movsb inc xor arpl and push xlat inc push adc xchg je gs xor jb rcrl xchg ret inc mov cltd test jnp dec cmp cmp and dec mov sub imul ficoml int3 fmul xchg (bad) xchg xchg push insb ret into (bad) jno insl jno ss jb inc jb aaa dec jns js xor jb dec jne jne jns jbe inc das ja dec inc jb jp js inc dec popa dec push sub aaa push jp inc push xor push xor push push xor popf cwtl pop mov fmul fnop fisttpll or sbb or sub stos mov in call (bad) daa add call bound je repz and rcr adc aam mov imul scas or out inc or out or or push push jmp dec push inc movsb xor jae mov and movsl and or xchg push xchg adc xchg xchg adc dec scas mov arpl push push test inc jbe pop inc and push lret sub (bad) xor sbb fstpl mov mov jne xor arpl inc xor sub sbb adc sbb push rclb pop push into dec push push sbb push push inc imul insl dec stos sub xchg es ret push pop sub pop cmp sub leave (bad) shrl aam scas hlt out ljmp les call sub pop inc ja xor xor test mov and cltd push adc xchg dec lret mov dec and push and bound jnp imul mov mov mov call adc fs outsb outsb push ficom fs pop inc inc jno cwtl rcr sbb int3 adc pop or das or mov rorl or mov xchg into (bad) int3 cwtl repnz mov into mov dec jns jp xor push jmp xchg sub jb and inc push movsl or dec aad and push and inc and sub and xor jecxz push aaa adc push je cmpsb ja xor mov and lcall ret adc fstps cmp add add adc enter mov (bad) and adc daa adc pop pop pop call cmpsl add mov and imul in outsb xchg mov ss sub ss push inc adc cmpsb mov sbb or sub movaps xchg lret mov dec adc popf push int3 mov mov bound dec bound inc inc and mov sbb (bad) mov xor or fistl push fcoms rcrb pop mov adc sub push aad dec or fs adc and ss movsb adc stos mov mov test ljmp ja push pop push inc push arpl or push movsb push xchg test sub jo and adcl pushf dec test push data16 and xchg sbb cltd cltd mov jne xor sub xor mov inc aaa push cmpsl cmp (bad) fisttp or xlat jae and push or stos mov xchg mov push dec mov push push inc daa mov cmp cltd cmp xchg cwtl inc push nop rcr adc test adc sbb sahf scas rcrb pop and mov rol mov push adc push data16 push sub and dec mov xor sahf (bad) loopne stos fcomps lods or adc pusha lods mov and and and mov xchg sbb mov dec lods add xor jp push imul add rolb xchg xchg and rorb int3 es cmp scas mov aaa insw dec inc pop jp adc mov push xor (bad) (bad) jae sub enter adc lods pop mov cs movsb xor inc inc inc and daa and cltd pop mov dec cmpsb ret adc int fadd loop xchg out repz or xchg fld scas rolb adc lcall or adc inc scas xchg xchg push sub sbb enter arpl movsb cmp cltd pushf mov int3 dec int sub or pop (bad) in adc xchg int3 nop push (bad) fnop mov jecxz cmp push or insb xchg nop lea test and or jns inc cmp and mov dec lods ljmp sub xchg and pop js or imul sub jmp movsb and pushf or sub inc out daa cmpsb loope sub mov inc es cmp lret or inc or mov add lcall cwtl movb push jb mov inc adc hlt xchg loop repnz inc jbe hlt ret and pop xchg adc fstpl (bad) and cmp rcrl cwtl push roll mov outsb and mov mov arpl es mov mov ror adc push (bad) xor test push mov inc mov inc sub push inc push sbb mov sbb cltd lcall push mov xchg cmp inc (bad) cmpsb jne sub loope adc push test mov inc push push mov sbb mov test movsb aam out jne xchg lea sub cwtl popf fiaddl mov daa mov fsub int fstps out xchg sub icebp sbb in arpl adc mov jns jb inc push inc and mov or add add adc dec sub dec int3 repnz fsubrl int3 push push test pop mov ficomp (bad) pop push lcall and or sbb popf add out movsb (bad) xor mov (bad) (bad) scas add and rcrb movsl fs ss and lds adc sbb fsts pop xchg adc aam fcoml jae mov mov and dec out test sahf lock mov out (bad) (bad) data16 je and mov nop push adc popf int3 test jmp mov and les adc pop xchg or pop (bad) (bad) aam push int sahf popf pop xchg dec push push adc push rcll int3 mov sbb sahf pop adc int or sbb rcrb nop push xchg sbb (bad) fstl pop xchg int3 pushf sbb push rclb int3 pop pushf push fcompl lret push push pop fwait push adc sbb push aam int3 nop fwait xchg pop push sbb dec lea rclb nop push xchg rcr xchg sahf push lea lret push push fistpl push sbb push sahf dec lret push push push push pop push xchg (bad) xchg xchg fwait nop xchg adc sbb xchg ficom int3 or nop push dec or pop rorl push adc fwait push xchg push push (bad) cltd push push push pop fcom push nop rclb push adc sbb popf push push push pop (bad) push xchg xchg rclb cwtl xchg mov cwtl rcrl push aam adc nop xchg pop rclb dec push push mov sahf lcall push xchg xchg (bad) xchg xchg push adc pop rcr pop lret rcr pop int push xchg dec xchg aam lcall push push push adc rcrl sbb push push sbb rclb push push adc push nop push adc adc aam push pop fmull pop aad nop push pop xchg ficompl popf (bad) rcrl nop push sbb or pop xchg adc int3 rorl sahf dec push fstl ficomp adc int push adc mov lret push push mov pop adc xchg nop push xchg adc pop fwait dec nop xchg push popf push push sbb pop xchg ficompl push ror pop push fimull int rcll adc pop adc ficoml push pop dec pushf xchg adc fcompl fst push cltd pop pushf xchg pop push fwait or fmuls ficomp push dec fsts xchg mov dec or int3 nop push fwait dec sbb lcall rcrl rcrb push push pushf nop rcrl sbb rclb fwait push xchg sbb cltd mov pop nop push adc rcr fcoms adc xchg xchg pop adc push push pop xchg rcll aad push sbb adc nop push push cwtl cwtl xchg cltd adc push or fcoml push fcomp xchg aad fstl push dec xchg adc push sbb adc int3 xchg adc dec rclb (bad) dec xchg lcall push push adc sbb rcll push fwait lret rcrb adc cltd fcom rclb pop fsts or adc aad pop push adc lret rclb lea pop lcall sbb dec sbb aam pushf adc rclb sahf cltd cltd sahf dec fstl or pop rcll nop push xchg adc push sbb push pop cltd sbb adc or fstps sahf cltd or fstl push pop cwtl pop int (bad) push adc xchg push push pop xchg into or adc dec dec aam xchg adc xchg push adc adc sbb adc (bad) or sbb push fcomps dec mov popf adc fisttpll or or push sbb lret fimul rclb push rcrb push nop push push push adc pop rcl fstp rcll push xchg push rcrl push nop push xchg push adc lcall push lea xchg push rcrl pop push pop adc pop xchg rcr fcoml int nop push xchg adc (bad) pop inc pop ret and sbb cmp sbb sub and daa cmp and xor cmpsl xor cmpsb ss sub sbb mov cltd cmp xor cmp lcall and sub mov ss xor and mov cmp sbb mov sub mov movsl and cmp xchg xchg mov sub aaa and and mov daa and cmpsl sbb movsb daa sbb and sub ss sub sub mov stos mov sub mov sub sub mov mov and mov xor sbb xor mov sbb and mov sbb and int3 int pop mov sub leave scas call in sub mov dec cmpsb enter sub es and into sahf nop (bad) mov sub push dec outsb push mov call cs (bad) jmp int push enter leave or xchg xchg ja cmpsl xchg xchg adc inc repz xor cwtl fisttpll mov inc inc dec movsl xor cmp sub push sbb dec fcmovne or nop push dec sbb fcomps adc or fs mov and je push daa and xchg es gs cmpsb adc hlt mov xlat add or in dec or sub inc mov xor inc je xor movsl cmpsl and push push lds es xchg movsb aad je ss les and inc add fs test xchg ret lret adc push adc mov jb bound push mov xchg push or fnstcw flds add lods loope pushf leave xor (bad) sub int leave sbb nop xchg lock mov mov pop (bad) shrb mov (bad) mov stos mov pusha test fisubr push push int3 into es mov lods xor leave (bad) rol mov or dec int3 iret and dec xchg or mov jmp mov pop or outsb out push mov out add dec or dec xchg xchg out mov cs xchg mov xchg add mov inc xor pop xchg pop sbb data16 mov leave in into and movsb sbb and pushf pop stos sbb mov aaa das adc sbb imul push inc inc inc push adc rcrb nop push rclb dec inc imul xor dec addr16 jns xor xchg xor pop or int3 call push leave or push mov mov sbb xchg or ret lock push dec xchg fwait or pop loop shrb inc mov addr16 inc test adc lods int out cmpsb mov xchg inc (bad) xchg inc mov xor movsl adc ret adc mov mov cmp int xor xor xor dec stos xor and ror sub (bad) mov sahf inc mov test lcall mov push dec fstl je outsl push outsb inc int3 mov mov lock push adc test dec (bad) popa push xor xor js adc rorb adc push xchg adc rclb lea xchg ficoml xchg cwtl popf mov adc aam cwtl sahf dec xchg sahf pushf rcrb pop or xchg push adc sahf pop fcmove xchg push sahf (bad) fcoml stos (bad) addr16 loop test push jnp mov lret sbb arpl push rcrb xchg push pop lret test dec mov mov mov mov fs mov aaa les notb inc jnp xor push mov mov and test (bad) (bad) in rolb inc loope call fucom int aam and xor aam addr16 and push aaa inc inc aaa xchg out push xor sbb lea fmul inc aad in push xchg les lock xor mov in cmpsl adc repnz cmp test sub sub movsl mov sbb cmpsb aaa sbb mov call cmp pop or dec mov add adc or push je xchg add xor sbb int3 test push sub add dec push dec dec jns push push xor cmp cmp aaa mov push xor mov push xor xchg pop sbb mov dec lret rcrl or xchg sahf popf xchg adc sbb push into es mov jns sbb xchg lret pusha call mov rcrb dec sbb fwait loop dec and mov pushf lea dec or outsl cltd leave sarl adc and push aad xor test inc push xchg and mov or inc dec inc inc push inc dec mov push or xor mov mov and inc test pop xchg test inc jno cltd repnz mov mov xchg xchg xor dec sbb adc int3 int3 mov enter ss pop mov xor repz daa and mov (bad) dec stos or test sub xchg mov or or sub cmp cmp xchg or lods scas dec je push cmp xor js stos lods dec cs inc push push adc mov rorb scas inc movsb xor adc stos (bad) fmull xchg mov pusha rolb addr16 dec cmp subl imul or sbbl inc cmp mov xchg aad mov mov or insb sub jo imul stos or push and push imul ret test fdivrl xchg lcall inc cmc movsb xchg jns ficompl cltd xor mov mov (bad) movsb xchg push mov mov sbb sbb inc mov pop dec dec and dec xor dec xor fs xor jae adc pushf sbb (bad) bound xchg sbb aaa mov or mov xchg insb enter out mov lea dec mov inc insb fs pop int3 shr int3 loopne (bad) nop xchg pushf xchg xchg popf dec or test sbb movsb mov xchg call pop pushf adc sbb push cltd or mov mov insb repnz in mov xor mov daa and mov jp mov xchg xchg dec dec shll and cmp fsts nop xchg (bad) mov mov mov xchg (bad) outsb insb sub push dec push dec and lods fmull es inc je cmp outsb nop rcr leave pushf aad push mov jmp leave movsb lods inc roll and and and or pop mov loope sbb sbb add shrl xor leave pop jmp int add adc inc and dec add fstl push or dec and pop add sbb xchg inc sbb mov and mov ror inc or lea popf lea gs or fstl sbb int sub test mov mov and and mov rcrl pop shll push push lds add cltd leave cltd add in push mov int3 mov (bad) in (bad) cltd cltd add in in sarb fadd sarl lds leave adc loope in add fucomp sbb aad gs lds pop (bad) in cmp in (bad) movsl or fabs popf lea movsl fstp cmp fsub inc or adc fnstenv add mov mov fldl inc push and mov push mov dec adc or push sbb xchg int or pop mov pop sbb lea sbb gs or test or mov inc lea sbb lods fisttpll rcll mov mov or cltd popa sbb cmp or int and or flds popf or xchg mov aad mov sub gs fabs int popf adc fxch loope popf add popa sbb in or push xor cmp add cmp mov int add aad mov cmp test push adc int add fnstenv call add cltd enter int3 lods or loope and or dec adc (bad) xor popf sbb adc add inc roll dec popf or test sub mov movsl imul inc or mov lds vpaddusw fstp xor lods and lea adc and fnstenv cmp xchg xor cmp inc add in and or xor add inc adc inc mov fldl inc cwtl enter jmp loope mov leave add cmp push test sarl mov mov cmp push add xor cmp add xor push adc xor add xor add sub aad test leave add sub dec test mov imul imul sub cmp and or push pushf rorb sbb pop inc or sub das dec dec sub sub imul or call ljmp or sub or push sub dec out dec test push adc fs push lret or pop adc xor and pop add sbb xchg inc sbb mov out mov ret in inc jbe pop inc arpl xor and xchg mov stos cltd int rcrl or push rcll rcrb pop sbb dec xchg push push pop dec ficoml sbb mov lea or mov cmpsb sub push sub cs into dec enter or xchg jmp sub enter es sub daa cs enter pop inc jecxz testl mov and test sub fucomp sbb aad gs lds pop (bad) in fadd jo hlt jb in movb mov push xor cmpsl and pushf sub xor mov daa es daa mov mov xor adc push xchg pop pop xchg rcrl pushf pop rclb xchg push xchg cltd sbb enter data16 ja arpl inc das inc and xor mov or les mov out test insl pop gs insb xor inc cmp inc addr16 inc dec pop ja inc push dec insl push outsl xor push ss ja push inc addr16 push inc dec imul ss dec push lock addr16 insl ss jns jbe cmp inc inc inc js pop inc push cmp jns inc dec push dec xor ja inc adc mov ror mov int sub int3 nop ljmp (bad) test fimul ljmpw jbe jp push pop xor sbb test xchg mov xor test push inc rcrl and sbb mov inc dec js mov sahf stos xchg xchg scas scas fsubrs mov mov xchg fisubr loopne lret mov xor adc mov xchg adc push push adc cwtl int adc rcr int push sbb das push inc jp ja cmp push inc adc and dec push sub (bad) dec inc xor jnp sarl fs test mov dec das jne gs inc cmp sbb mov lcall or fstps cwtl xchg dec dec inc dec int3 lret mov dec das dec adc bound leave sub xor push adc dec and je (bad) adc (bad) push daa inc and ret lcall xchg or sbbl mov mov mov xchg lret mov test dec push imul push mov int dec in int push js outsw inc js jp adc fmull lcall mov insb fcmove adc sbb sbb dec aam loop mov ss jb sub dec cmp mov sbb sub test pop or xchg dec in aam mov xchg inc addl adc xchg and ljmp cmp jo mov lock mov cmpsb int3 movsb movsb hlt mov and and mov xchg inc addr16 adc lods lds in and sbb aam into (bad) fs nop gs test mov dec popf adc xchg xchg xchg (bad) out fisubr inc pusha xchg cltd rorl outsb mov enter or xor sbb and adc push push pushf push aad fstps cltd call in es je sub (bad) mov ret ror cmp and push lret jp mov cmp jmp lds sub mov mov aaa xor and pop dec mov lea pop sarb xchg cmp adc mov sub cmp fstps xchg jo roll cmpsb cmp mov push xchg fcmovne push int pop ror dec xchg push cwtl pop sbb pop adc push push mull mov mov ffree mov nop jb test (bad) mov dec adc popf les mov dec sub xor movsl dec int3 lea or imul and popa jmp rorb push insb je dec inc inc mov daa and sahf pusha lock inc adc mov dec xchg insb ja xchg or push xor sub mov adc adc stos push dec insb enter adc push call mov notl test lods sub and enter (bad) inc and adc inc mov cltd mov sbb adc test mov aaa dec ja and dec push push push fmul fcompl xor pop arpl and fcmovu or push adc fs mov xor xchg (bad) les les jae mov add adcl gs push insl jae mov or or jbe test xchg push js sahf bound mov rorl scas dec es int xchg sub add mov popa adc lea bound mov fsubs xchg popa sub or sub out mov jne (bad) and sub popa adc fsubr mov into mov ja push dec push pop xor rorl test push test inc xchg xor xchg hlt mov jno rorb loop mov lcall xchg in mov dec inc push and mov mov sub dec outsb (bad) sub inc xor or in lret call jbe cmc xor inc inc inc ja int xor xchg sub test les rcrb nop aad push sahf outsw jb inc xor and cmpsl cmp jns push add stos loop arpl stos ss mov aaa dec ret out push outsl adc cltd lcall jo inc xor mov movsl sbb xor dec push outsb or lods mov push xchg lods insl lret lods (bad) enter sub sub cs mov or imul push into cmpsb out daa cs inc or sub mov sub mov or or call lret es mov (bad) or sub dec sub into es call out (bad) or (bad) push call inc gs mov in inc add sub test dec sub dec sub daa or mov cmpsb lret call sub imul data16 or lods push in sub sub scas test stos inc xchg push int lods test into enter sub in call enter mov sub mov out mov int push lea mov push cmpsb mov cmpsl sub test test test push daa or mov sub stos out sub scas dec sub outsb mov or mov sub insl mov int3 test lods in stos sub inc insb cmpsl sub or sub stos ljmp imul or dec insb in push push (bad) jmp inc data16 inc test insb (bad) mov xchg scas inc dec sub mov out leave lea jmp outsb enter push dec lods inc data16 or sub test xchg int3 push pop sub push sub test sub xchg sub into dec out dec sub dec pop push in or lea into int3 out mov imul or sub imul sub mov test enter dec dec or push test push push dec insl jmp call outsb or or push mov lds stos sub stos or test cs into into movb dec sub sub das or out or sub or ljmp mov mov outsb push sub sub xchg lea or sub movsl insb sub sub data16 outsb das dec push sub xchg mov insl in call lods iret sub in scas call jmp xchg mov push cmpsb stos sub sub or sub daa or push stos push cs int3 push and or call push mov lea leave out mov lret enter sub mov cs mov xchg out outsb dec lret dec dec mov mov mov or cs movsw outsl dec lret int3 insb call dec lret dec insl dec test iret inc ljmp mov sub or outsb dec data16 sub or push call iret pop or ljmp jmp into in out mov test sub jmp push sub test push call dec push lret int mov sub or imul sub iret dec lret push dec dec cs call ljmp sub mov push ljmp mov or in dec test or sub jmp inc outsb int sub sub dec or out scas sub sub inc mov sub mov stos lret int sub dec stos sub enter gs insl or sub sub sub sub dec and (bad) (bad) or dec inc outsb lods int test in test inc in push jmp mov leave out scas out scas dec or sub enter cmpsb outsb dec dec sub push lret mov dec sub push scas dec and call scas or es (bad) xchg mov insl out dec sub lret sub dec cs insl sub in push sub out mov daa or lods push cs or enter mov in imul int push mov lea or push push sub das lods lret (bad) sub in in (bad) sub int sub dec in enter dec sub into push mov data16 or sub stos int3 mov es push or call mov mov sub leave int3 inc or data16 mov lret dec dec dec cs push das or mov dec out dec push push test outsb or dec cs cs dec dec insl or mov or int3 sub push dec or dec lret mov or inc pop ret sub pop adc aad or sbb fstps nop ficompl fcoml nop push fcom pop push fistpl sahf pop sbb dec adc ficomp int3 pop sbb push test out daa cs inc or sub mov in xchg je xlat cmpsb xor add test pop je xor out xchg es and add mov adc out addr16 xor ja test xchg xchg xchg and mov inc pop mov mov sub mov adc or bound sub or sub jp dec mov leave sub mov gs xor dec rcl and leave imul mov into enter jne je data16 test mov ret ret andl sbb inc sbb sub xchg push xchg push pop sbb push sbb adc lea sbb sbb dec out sub dec add test cmc inc movsb adc mov adc push (bad) not xchg adc mov xchg cmpsl mov mov fcoms jo xor das push inc inc movsb sbb lods xor cltd lea fmull push pop mov leave lea jmp outsb leave cmpsl add push mov mov (bad) out push push push inc cmpsb out push mov cmp int xor adc add add mov mov xchg push inc inc push dec push je push push inc dec inc and sub cltd pop pop push push sbb sbb adc rclb push xchg popf rclb pushf lcall xchg push xchg push or push sbb popf rcll cwtl fcmovnbe adc dec sbb rclb adc adc pop sbb push int3 imul lds stos sub stos push dec push pop jp ja lret mov into test push inc imul push sub mov and mov stos cmp and mov mov pushf sub mov dec fmuls sbb pushf aam nop pop int3 push fstpl fcompl sbb rorl push adc xchg fcmovnu ror pop fstps sbb pop rclb push aad adc nop pop pop sbb pushf shr jecxz xchg xchg adc xchg mov xlat adc push jb inc jns stos orl loope in cltd fldl roll push add movsb fsubr xchg (bad) sahf enter out mov call in mov enter lcall lock jae xor dec inc arpl inc push jb ret rcrl push and xchg fild movsl mov mov pop push adc pop sbb adc in das inc xor mov sbb out sahf movsb mov outsl je inc dec dec inc push adc mov fstpl dec cmpsb outsb dec sub sub jmp jp leave lcall jbe insl adc imul iret dec lret push dec dec cs call ljmp pop mov bound lods add dec test movl lret pop xor fucomp int mov xchg movsl xor aad adc loop ret in cmpsb movsb mov dec xor insl popa inc cmp and mov int or les mov xchg xchg xchg inc cmpsb adc cmp mov push sahf mov (bad) enter fimull dec outsb xor dec jne sbbl xchg or lods xchg push mov pop mov mov xchg loopne aad in or es jne dec pop ss cmp sub mov adc mov cs jne imul fnstsw and rcll loop mov push inc js push inc pop pop push inc xor cwtl cmpsl aaa pushf sbb lcall sbb pop roll lods lret (bad) cmpsb inc jbe jecxz mov je lcall inc mov push stos loopne mov jns inc arpl push fs sbb stos test and push adc adc mov arpl mov xchg rorl and jmp sarb and cmp pop xchg sbb (bad) pop adc push dec imul or inc lret jne inc push xor mov xchg aam cmp lret inc push dec mov xchg push adc push inc inc xchg mov xchg dec inc or mov ret xor jb fnsave rcll cltd adc enter in mov popf or xchg loope popa and (bad) out (bad) ljmp mov mov or xchg sbb into cmpsl push movsl pop ja and stos mov dec inc inc push inc inc inc adc sbb in leave sub addl pop jne inc jns rcr popf aam mov adc xor data16 loopne jo popa xor bound lea mov cwtl xchg or sub or dec jno cmp hlt inc mov inc adc imul adc xor and fstps fcompl pop pop rclb and adc mov test mov dec stos lods jmp in sub mov jae sbb cmpl lcall out sub ljmp mov or mov and ja pop push xor pop fwait cmpsl cltd mov mov and mov mov and adc or nop xchg dec rorl inc sub in movaps leave dec dec lods insb dec cs enter outsb inc out negb int3 shlb mov jbe inc jns and jb cmp adc pop rorl (bad) movsl in mov in es dec fs xor sbb rorb inc mov dec or mov lds push pop add and push pop or fcoms add iret xor xchg pop xchg cmp jb and pop mov and cmp stos mov popf or and addr16 inc dec addr16 inc xor pop js pop (bad) aam inc push fs adc lret fwait or popa rclb push xchg jmp sbb cwtl cmpsl fwait mov mov fwait cmpl (bad) mov xchg sub push in add and sarl test or outsb out dec or or test fs movsb inc es sub or adc mov in xchg xchg push and jno mov shll mov stc adc adc and shrb sub inc add xor fs cmpsb push stc push dec fcomps js sub sbb and int aad xchg dec fistl or call push cmpsb inc push imul cmpsb test cmp es bound addr16 adc mov test xchg sbb repnz stos ret loop test jno addr16 push push insb addr16 fs sub mov mov mov ror mov dec inc imul outsb adc pusha xchg xchg mov data16 das inc inc imul das xor inc and cmp ror inc cmpsb (bad) dec into or mov sub sub gs fs imul dec sbb add lret adc xchg andl sub test test in pusha fs jmp popa mov and loopne xchg and inc xor inc lret sbb xchg or inc les push mov hlt nop in int shl out push sub and popa inc dec jno mov or or xchg rcll dec call call push inc xor or adc cs iret dec or xchg adc mov inc and cltd movsl fwait test and mov movsl sub mov mov test and mov lods cmp cmp movsb xchg lods xor mov xor pushf cmp mov xchg test xor mov sbb mov mov sbb mov lods cmpsl xor cltd mov and sbb mov sub cmpsb mov cmp mov sub mov cmp mov lcall mov aaa cwtl xor mov cmp mov movsb mov and xor mov lods mov and lods and and sub mov cmpsl sbb test mov sbb mov xor mov fwait and mov xor cmp and aaa mov sbb lods xor xor sub mov xor and movsb sub mov sub mov mov es stos movsb sub mov and and sbb cmpsb sub cmp mov mov cmp mov aaa mov mov cmp mov mov and mov lods daa and mov test xor sub mov and and sbb mov sbb test fwait xchg mov and daa mov mov cwtl xchg mov sbb mov cmp cmp sub mov xor cmp mov sbb sbb sbb and mov lcall sub cmpsl xor mov mov and sub xor and cmp mov es mov and cwtl mov mov xor xor mov sbb mov and mov movsb lcall and cwtl stos cmp lods sbb mov mov sbb ss mov mov cmp mov sub sub cmp and es test lcall mov fwait test sbb mov test cwtl mov mov mov mov mov mov daa fwait sbb sbb mov stos cmp mov mov mov mov sub lcall mov sbb test daa aaa sbb xor test and mov xor movsl fwait mov mov cmp xchg mov xor mov stos xor lcall stos fwait mov cmp sub test mov xor xchg mov test stos sbb test xor xor cltd sbb cmp cwtl aaa and cmpsl sub mov sub mov sbb mov mov and mov mov and and sbb sub sub mov xor sbb dec cltd int3 ror aam nop push or pop push fcmovnbe push xchg dec fistl push push pop fistpl pop adc xchg pop pop push (bad) pushf rcrb lcall push mov (bad) sbb push xchg aam push mov dec push or or aam sbb push fmull mov jmp call dec cmpsb test int3 out inc dec call dec cmpsb test call mov cs dec or int out call dec or int out call xchg or movsb out repz adc push movsb mov xor aaa fs fs adc push cmpsl xor mov daa es adc je jne inc fs test and add gs pop push je sbb sub push jae sbb mov cltd rcrb xchg adc cltd sbb or scas (bad) dec out dec dec dec call scas sub dec call dec dec sub sub ljmp or call dec mov cmpsb imul or dec push mov sub call cs cmpsb movb sub outsb insl dec cs inc push shll in push pop add fs add repz adc push xlat xchg adc lds es xchg and bound stos stos cmp mov jb and lret xchg jp dec mov jp adc jp jo push xchg inc in cmpsb and call push int enter and inc (bad) arpl jne lcall stos mov mov mov stos rcrl pop (bad) and rclb mov inc inc xor inc dec push inc and and cmp mov nop rclb sbb pop fcmovnbe xchg sbb push push adc sbb dec (bad) loopne hlt pusha enter and inc aad enter int sub adc xor xchg (bad) gs and cmp xchg subl or and (bad) mov and (bad) mov push mov (bad) xchg mov sub mov mov mov addl add sbb (bad) lock dec xor ss cmp inc push xor arpl pop xchg push dec (bad) test lods push out sub stos sub mov int3 mov sub push out outsb test out push gs aaa jbe lret cmp mov (bad) popa pushf mov or lods pop cwtl fldl fisttpll lods roll outsb (bad) test hlt fimul inc jne aaa push imul stos sbb test xor xor cltd and xchg push xchg fimul dec mov imul sub push dec test or push xchg adc les ja in pop and je push sbb push adc cmp adc inc inc xorl ret sub push adc jp xor addr16 addr16 bound xor xor jns inc and stos cltd stos cmp cmp lods hlt mov inc push popa push push push push ss inc pop inc xor xor cmp inc inc push outsl inc pop and xor int push leave lret inc ljmp mov es and gs daa push rclw jbe xchg inc adc cltd mov jp xchg sbb mov xor xor pop adc push push or data16 dec scas inc loop addr16 cmp sub and or fisttpl adc popf (bad) adc lea ficompl call push dec lea or bound aam inc sbb and push dec or or inc or mov scas dec (bad) (bad) je inc in push and and adc xchg in ret movsb push (bad) xor push dec mov scas scas scas or lods in dec inc push repnz dec inc inc out dec inc dec dec xor sbb int int rcll pop lret loopne out and aad fldl fmuls pop inc push insl pop xor int3 pop pop mov (bad) into mov xor xor inc sub mov inc aam xchg jns aam (bad) xchg aad or call stos push sbb rorb or stos sub sub cs cmp mov fisub xchg xchg sbb int3 lock xlat xlat cmpsb xor daa adc roll mov dec (bad) xor xor daa mov xor sbb leave add xchg sub pushf mov mov adc or dec jmp mov dec lods or call in push insb imul push test adc push lret cmp bound adc dec adc dec iret dec out in dec adc sbb inc lods cmp pusha rclb mov push push insb dec push push push dec sub mov sub test and push dec sbb lcall push lea shrl mov movsl dec bswap test xchg daa add cmp or inc inc inc outsl dec pop adc and adc xor xchg cltd push pop push pop pop rorl test mov cmp inc stos repz daa sub sub cltd sbb xchg adc adc dec adc xchg push inc movsb cmpsb inc jae in cmp ret inc inc dec xchg pop test fs je push and xor (bad) fldpi xor adcl fs hlt data16 pop fs cmp xchg push push popf int3 or pop cwtl rorb pushf pusha lcall add hlt inc fs addr16 es call mov cmp mov dec jmp sahf int3 inc (bad) cmpsb hlt adc and adc sub imul mov xchg mov in dec outsb test push pop push push pop mov sbb jo inc cmp sub and pop sahf or adc sub add jae push movsb push mov lcall test in cltd pushf in push roll ficomp xor push adc inc sub das inc xor das jne das repz mov aad nop xchg adc dec ja inc adc mov inc push enter scas adc push xchg mov out push int3 call push (bad) inc inc xor movsl adc loop repz push pop dec sahf mov jo mov inc dec cmp js adc (bad) (bad) (bad) (bad) (bad) call daa aaa fs (bad) mov dec imul cwtl push add xlat adc push sub popa inc cmp cmp lcall lret fmull mov push dec inc dec jne jp movsb nop fcoml xchg push nop pop pop xchg lcall adc jno movsb adc push pop aad dec xchg adc pop xchg pop nop push les clc pushf sarb mov cmpsl test xchg fdivrl xchg push inc test adc mov inc xor mov rorl dec lret inc imul and push rcll sahf pop adc xchg adcl xor adc popf shrb mov addr16 xor mov or lods add test imul aad int add rcrl add mov test or dec adc dec inc add adc lea inc sbb and or popf fstpl dec or adc or add add test sub inc aad add inc add add or xor xor and mov inc add or popa sbb lds add and aam imul dec mov sub inc adc sbb add mov add inc add in inc inc add adc cmp sub add fldl add popf popf add or in pop jmp add sbb sbb aad add inc add adc (bad) adc loope rcll jmp leave add add add push xor or flds mov inc inc sbb and cltd int loope xor add fldenv inc add cmp lods in cltd push add pop fsts add or add or add lds lds inc call mov pop fldl fstl test fstps adc rol sub add cmp add mov adc fstl shll cmp and adc inc add add sub shrl ror cmp and sbb cmp pop adc or imul fisttpll adc test add inc push inc loope adc fisttpll popf xchg fstl vminpd sbb mov test adc or add popf mov mov inc add in mov mov inc mov inc sbb sbb roll cltd jmp rorl shll loope add or push and test popf popf add sbb add mov pop adc int sbb or mov push inc lds add and adc or add loope add pop popf and or lods or add fs inc popf sbb cmp popf sbb or or mov add mov lea or adc mov add mov inc rcr adc int mov adc mov or adc scas and ss cltd mov lods xor mov cmpsl lcall mov and xor mov mov xor mov push push inc inc inc inc inc inc dec arpl push inc inc inc xor pop or adc mov popa sbb push nop stc adc push push adc ficoml mov mov adc gs add in adc and aam xor adc push je je push movsb (bad) in adc movsl adc push inc je xor je adc push jbe xchg es je xchg push add inc sbb fwait bound pop or mov mov push mov xchg inc mov sub sub inc cmp xor xchg lcall jb arpl push mov int3 out scas (bad) ficom push divl xchg movsl ja jbe sub rcll imul sub or mov or mov jmp leave leave xchg cs or test das dec or lods out push cmpl xor flds mov inc inc sbb and cltd int loope xor add sub int cs sub pop movsb lods in cltd push add enter rclb xchg xchg sbb pop push adc push xchg popf mov pop enter xchg aam into out lcall addr16 aaa mov mov mov pusha es and or vmovaps cmpsb into call into and jno inc adc adc mov cmpsl jae xor je test jbe and pop mov adc sub sbb hlt cmpsb push jbe hlt gs xor adc test sub mov fstps push pop pop adc outsl enter xchg mov enter in or sbb cmpsb test pop fwait or rclb pop xchg pop adc bound orl xor inc sbb shll roll test nop stos mov mov dec dec in dec push insb cltd push mov dec or stos cmp push adc and inc js adc fwait dec test shrb mov and inc popf sbb xchg test adc pusha nop push add xchg adc les add dec cmp jns jns jns rolb dec dec fmulp out mov mov (bad) adc inc gs inc and sbb xchg push inc mov xchg cltd rclb push (bad) push fs push inc pop dec dec and adc mov xor mov lcall inc test push xor movsb mov or pop dec int bound test pop jp cmp popf inc dec inc inc inc push and push xchg shl je arpl jp bound adc xchg xlat xchg fs xchg movsl adc movsb push xchg ss push and loop inc xor enter pushf cmc dec js dec jae dec dec xor jae sub mov xchg es int3 dec sub inc dec push push dec dec movsb es mov mov sbb mov pop cmp push xor jne cmc pop xorl les pusha movsb (bad) enter out inc xchg adc inc sub pop pop movsb xchg lods mov icebp and nop in xor jno inc jp dec cltd int shrl js jp jbe push nop loope pop adc adc mov push into lock mov lcall inc movsb jae (bad) cmp push xor xchg adc fmull ffreep mov mov enter cld mov dec loop inc icebp and bound xchg pop inc or gs js and mov inc dec mov and mov push and inc and adc dec insb push xor (bad) jmp sub pop cmp sbb dec xor mov and cld dec sub inc jb sbb nop fildl test push (bad) movsb out adc push pop bound xchg add lea sbbb xchg shll xor xchg test or xor jb push (bad) imul dec dec adc pop adc cmp pop or and adc mov sub or adc dec add adc movsb fs mov dec dec adc (bad) adc lcall test (bad) in xchg xchg movsl cmp cmpsb out and mov adc and lds push or push scas adc push es add mov call push stos sub cmp mov fisttpl push imul adc and inc inc xor (bad) jno push adc sbb push mov mov inc pop mov push daa movsl insb dec dec pop dec mov push lret push daa xchg and jne es cmpsl xchg pop cmp pop rcrb fimul fcmovnbe cltd les and leave mov test je inc repz lcall adc call mov test bound adc mov dec lcall push jns dec rclb movsb das push dec addr16 inc dec dec imul jge sbb and pop inc sahf mov mov fmuls ret mov dec bound adc cmpsb insl icebp cmp and sub adc int loop dec mov sub mov dec push pop loop dec xor mov pop jp xchg dec (bad) dec dec adc cmp xor and or dec or loop xor dec mov mov or imul xor xchg loope xor and fwait mov enter bound mov sub sahf mov push (bad) xchg mov (bad) push fs (bad) mov sahf in out test (bad) xchg outsb (bad) test movsb mov shrb test mov (bad) cwtl out xchg (bad) mov fcomp out (bad) mov scas mov pusha mov test enter push lcall mov test (bad) mov test (bad) mov (bad) out test (bad) (bad) test mov (bad) mov test (bad) (bad) (bad) in (bad) mov mov test (bad) (bad) (bad) ljmp test (bad) (bad) (bad) xchg (bad) xchg data16 data16 test (bad) xchg (bad) (bad) (bad) (bad) fiadd (bad) test (bad) cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lret test mov mov (bad) nop rol mov mov test mov mov (bad) nop rol mov mov test mov mov (bad) (bad) xchg mov (bad) (bad) (bad) insb xchg jb (bad) (bad) xchg (bad) (bad) (bad) mov test ror mov (bad) (bad) (bad) fcoml (bad) (bad) (bad) xchg mov xchg mov (bad) (bad) (bad) scas xchg jb (bad) xchg jo pusha mov (bad) xchg int3 mov (bad) (bad) (bad) mov (bad) (bad) (bad) mov (bad) mov (bad) sahf xchg mov mov push (bad) (bad) (bad) test (bad) mov (bad) xchg cmpsb lret (bad) (bad) test push (bad) (bad) (bad) mov (bad) mov (bad) (bad) (bad) xchg xchg (bad) xchg xchg xchg xchg mov lcall rclb (bad) fdivs scas pushf fidiv pushf call xchg (bad) xchg xchg lods aam mov mov jb lret in lret rclb movsb mov bound push data16 fadd test repnz test (bad) fcmovb ljmp (bad) rclb (bad) fdivs lcallw fcoms rolb mov mov ret fidiv pushf call xchg (bad) xchg xchg lods aam mov sahf (bad) into mov shrb xchg lods lock ret aam repnz les (bad) xchg xchg (bad) xchg xchg xchg xchg mov lcall rclb (bad) fdivs scas pushf fidiv pushf call xchg (bad) xchg xchg lods aam mov xchg shrb xchg lods lock les lods push lcall into cwtl scas push into xchg (bad) xchg xchg push fsubrs lods mov pushf loopne fs mov out mov (bad) (bad) xchg into ficom mov (bad) into mov pushf faddp repnz enter ret into cwtl mov into cwtl scas into into xchg test into mov shrb xchg lods lock ret aam repnz les (bad) xchg xchg (bad) xchg jge xor pop nop push push rcrb xchg push push sbb push xchg push dec int3 mov push sahf push fcoml push dec push push (bad) push xchg push push (bad) rclb aam nop pop rclb pop push fcompl push xchg sbb push push push sbb push dec push mov sub dec pop or sub (bad) or push mov sub sbb add dec out inc inc inc and mov jno cmp cmpsl je xchg and add push xor mov mov jg sub adc movsl lea or mov icebp aaa mov sbb add mov ret mov and (bad) iret adc dec sub mov sub and jp das and push stos push and movlps adc outsl xchg lods sub mov cmp test mov mov mov and sub cwtl push rcrl xchg sbb push nop rclb dec insb out push inc cmp lret mov shrb test mov push inc and mov mov xchg pop jg (bad) decb push push xor test sbb fwait sbb cmpsb and mov stc sahf push cwtl xchg adc dec imul lea jmp inc xor inc and sub stos daa sub ret adc ficom sbb adc fs pop dec and cmp (bad) (bad) jmp popa pop dec xor stos rcrl cltd adc lret (bad) call cli and sbb inc out iret (bad) (bad) (bad) (bad) stc xchg xchg adc bound adc (bad) (bad) cmovns jne pop jns dec (bad) into test xor outsb call loop addr16 dec push (bad) clc nop popf mov cmp xchg nop jg or icebp and (bad) (bad) (bad) cld mov jg or mov pop (bad) (bad) inc test xor (bad) (bad) (bad) call adc lcall clc cltd sbb mov mov test cld mov dec push xor inc js inc and or das ja popa xor jne jno jbe sbb ja inc pop dec lds iret xor and lea lods mov (bad) es xor mov push push adc mov pushf ret popa dec push pop dec xor imul arpl aaa jo gs dec xor dec xor inc bound cmp xor dec bound and shl int and and loopne push bound enter bound test ror sahf mov xchg ret insb push scas cwtl jb lcall (bad) movsb test cmpsb movsl xchg mov or and xchg or inc pop dec adc mov adc cltd push or int test push sub rcll ficompl fisubrl pusha mov xchg hlt aam pushf into repnz movsb (bad) jo (bad) call mov in mov inc inc push fs inc insl dec push jbe pop xor push dec dec push insl pop push ss sub imul cmp sarl flds loope int fnstenv loope xor and or lds int gs (bad) mov rol mov nop outsb scas fs pop imul jp dec push outsl jae dec gs push xor mov xor xor cwtl and sbb lods xchg mov sub mov mov mov xchg push fcoms xchg push xchg xor mov mov mov sbb dec fwait lret xor nop lds sbb loope push cmp pop sbb aad dec push or xor push jbe xor and xchg es arpl jae mov bound jp arpl mov jb and lret cs sub jmp or outsb and outsb inc inc mov adc fsubr scas (bad) mov push push pop jb xor dec inc jbe gs jo dec xor imul push inc xor xor cmp in rcr dec scas fs push dec daa xchg mov mov mov cmp sbb stos mov sbb pushf cltd cwtl cmp sub dec outsl adc jp jns lcall sbb mov imul dec imul inc cmp and test (bad) in gs jae xor xor sub stos sub mov into push or adc xchg sbb or outsb xchg movsl insb int enter addr16 jne notb pop lret ret lret adc lock in movsb mov lret add sbb adc and movsb xchg in dec (bad) repz xchg (bad) sub push mov cltd pop int or dec fcoms push pop int3 xchg adc fcmovnbe fwait je test fwait (bad) sbb or sbb pop inc push bound and xor mov pop nop rcrl aam push pop pop push mov mov lods dec imul xchg orl in int3 out dec or imul mov xchg inc inc adc and fisttpll push xchg addl inc cmp shll ss mov xchg ficomp dec pop push mov push aaa arpl jp dec inc and mov imul xchg push mov lret adcl shll shll adc outsb xchg out lcall pop dec and sub ss test mov mov mov inc aaa xor jb jns dec sbb cltd mov test mov cmp fwait stos mov mov mov push mov or xor inc xor and es push mov scas or dec mov xchg jae shll mov aad pop cltd dec adc les inc xchg (bad) test inc cmc adc inc (bad) (bad) outsb and jle data16 push mov out adc pop and (bad) xor push add mov insl inc adc scas (bad) cli and sub xor or add xor and jl sub add dec inc (bad) dec repnz lods xor mov and dec enter mov clc nop aad xor ret mov bound inc cmp and fmulp lcallw add adc popa add pushf push int3 rcrl adc pop lcall pop (bad) cwtl xchg sbb dec sbb lea dec fmuls nop xchg pop lret fcoml into push gs push es pop and aam xchg push push data16 test fs addr16 cmpsb inc jae xchg aaa data16 inc mov inc mov les push mov xchg mov mov jne movsb push mov adc push push cmc add test add arpl push (bad) mulb inc push add xor mov data16 daa adc mov inc jne test es arpl inc jb sub subl mov ret ljmp bound xchg mov out mov shlb fs scas fsubrp mov lods fs push enter loopne push fsubp ror data16 ljmp xchg inc arpl adc or imul shrb jp push xor inc je push inc xor ss xor xor dec cmp push push fs adc adc adc aad lea sbb sbb push push push adc xchg adc sbb pop popf push or fistpl pop sbb popf aad push lea pushf xchg push xchg dec pop xchg push lea mov mov shlb imul dec push sub js ss insb bound xor je push dec xor jo lea pop adc push cwtl dec sbb aad lret push test outsl or cs push dec lret push (bad) or sbb and rcll lret loopne int3 loop insb into loop daa xor inc ret jno mov push mov mov sub jns cmp (bad) rolb jnp popa mov lret imul lcall dec sbb (bad) adc in dec insb lods dec dec push sub mov or stos dec test xchg (bad) sub mulb mov xor push adc addr16 andl je pop adc adc push cmpsb divl test push add les add push xchg inc daa xor movsl xchg xchg movsb and inc adc xor xchg ret push cmp mov ret pop mov imul stos (bad) mov (bad) rorl xchg inc ror sarb int mov lahf cltd or add test dec sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and and or cmp sub xor jmp inc addr16 inc mov and test inc adc (bad) mov decl and jg int3 out mov or int3 call pushl stos (bad) xchg iret cld enter push call dec inc or inc xchg adc and adc mov lcall dec add loop loopw cmp jns decl cmp fs les aad sbb add inc pop push enter in adc mov sub icebp sub loop les (bad) or enter (bad) jle es mov mov (bad) jmp or mov loop inc mov pop mov adc mov adc or loop inc enter out icebp sub jmp dec addr16 jae xor or psrad cld dec dec cwtl nop xchg loop loopw dec les adc (bad) loop push mov (bad) (bad) call sarl les mov push adc pop (bad) cld dec dec lahf clc nop dec (bad) (bad) jmp popa addr16 dec mov (bad) (bad) (bad) (bad) (bad) (bad) call call adc dec aas (bad) cld dec sub and (bad) (bad) clc cltd rolb and or out loop das loop das (bad) and stos dec mov pop call adc lea sub mov out loop jbe bound das xor mov jb jb xchg test lret mov ja xor (bad) rclb aas adc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov ret cltd adc pushf fwait pop dec insl sub dec bound jl dec movsb inc inc je and jae enter mov jns test fisttpll popf or test mov (bad) es sub daa and es ret xchg pop jnp sbb mov fwait pop cwtl dec mov push pop xchg xchg jne sub test push out (bad) fsubl addr16 fcmovb mov mov test inc cwtl insl adc cltd pop bound ret mov sbb mov dec mov push mov mov cs push js and fwait inc test addl rcl fsubrl mov pop loop inc loop jb inc xor jbe pop jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec sub insl arpl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) mov lcall rcl loopne cmpsl call xchg es xor notl and shrb xchg cmpsb stos (bad) sub stos and mov es push rcll rcll mov dec inc addr16 inc push outsl cmp inc xor push push inc js inc push push pop dec inc xor dec push inc and and sub mov and xchg cmp outsl jne ja inc dec imul mov xchg fcmovbe dec mov ret in lods sub call cmp sbb cmpsb and mov mov inc mov xor push inc les push jp das inc jns push inc jp and mov cmp and dec or adc cwtl leave add mov sub (bad) (bad) (bad) call or adc push cmpsb inc inc inc inc inc outsl cld enter in call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld dec mov rclb lcall or push sbb xor adc in push sub shrb lds xchg adc leave adc mov mov pushf (bad) stos fs scas pushf fsubrl repnz outsb (bad) pushw ljmp rcl sahf mov push sahf pushf jo push mov pop sahf (bad) (bad) push mov mov mov mov push mov lcall (bad) mov xchg rcl in mov (bad) mov ficompl mov test loopne insb fmull inc cmpsb testb pop and mov and fldl aad cmp daa push lcall int loope jmp int3 loopne adc mov mov mov hlt push push mov insb out jb pop les lods stos and cmpsb movsb and movsl and mov and cwtl cmp sbb cmpsl xchg xchg xchg push dec push adc push rcrb lcall adc rorb dec imul mov leave dec cmpsb push sub cvtpi2ps das push dec adc mov or dec int lret sub dec call es addr16 popa xor mov mov dec xor inc push dec dec push pop das and shlb xchg pushf or hlt les pop push jae gs and xchg mov and mov xor out xor xor and ss xor cmpsl movsl lods lcall mov es bound inc fs mov xor xchg ficompl mov mov ljmp xor mov sub ficompl int loopne mov addr16 jno dec je sbb push int3 sbb (bad) sbb or adc out dec push inc arpl and rolb mov inc pop push or lods out mov cmpsl and push push push dec es pushf sbb mov xchg test sbb mov test lods lods xchg or inc jne das push push sub lcall aam mov inc fs mov sbb fldl2t xor dec das and cmp mov lret lods dec int3 jb mov and mov xor sbb sub cltd sub cmp cmpsl sbb cmp sbb xor xor daa cmpsb movsb lcall lcall test xor lcall cmp cmpsl mov cmp daa fwait lcall and daa test sbb stos cmp pushf mov sub sub cmp sub mov mov mov cmpsb sub cmpsl mov and mov and cmp xor cmpsb mov sub cmpsl and cwtl ss sub sbb sub daa mov mov sub stos daa xor sub xor cwtl cmpsb cmp lcall aaa aaa cltd mov xor lcall lcall lods lcall pushf sbb and cmpsl mov aaa mov movsb mov cmp cmpsl pushf cmp test stos pushf daa sub xor xor mov mov sbb test cwtl sbb stos sbb sub mov and mov xor sbb sub cmp sub aaa xchg mov sbb xchg mov adc and mov mov and cmpsl xor cmp mov mov sub cmp lods sbb xorl lods dec or scas dec push leave lret dec scas dec sub into push dec outsl dec insl jmp or dec mov sub jmp dec es jmp lea call dec insb mov imul outsl dec leavew ljmp dec in dec data16 call enter mov jmp or dec ljmp inc stos or cmpsl sub (bad) mov and jb xchg mov and sub push cltd rclb push aam push jae inc inc test divb hlt xlat push aaa xchg out in shll ja inc movsb hlt and inc ja inc movsl pop adc movsb adc movsl and in push push aad ss (bad) jae add hlt pop and push rol lea pop pop cmp popa push cmp outsl dec jno xor bound outsb outsl xor gs dec cmp xor inc xor roll jp fwait push adc cmpsl pop adc in xchg push shl aad fsts inc dec ja aaa dec jp jbe jp aaa push push xor aad rcl adc dec adc call sbbl mov push inc and push xor xchg cmc inc add mov mov inc mov inc addr16 push cmpsl jb pop mov mov or mov add cmc jne mov hlt adc and sub test mov in dec mov test mov or mov stos and (bad) push fwait ret cmp add mov int3 aam ret xchg es cmpsb cwtl or data16 inc lcall nop xchg dec push ficoml int3 pop ficom dec pop pop xchg push and inc pop jae mov push xor push pop dec dec mov mov pop mov jp andl and stos jp shrl mov bound jp sbb jp cltd push sbb rcl bound inc adc pop adc or hlt in mov sbb aaa sub mov or test adc xor xchg sub lods xor imul mov jb in dec sub pop mov pusha sahf aam test cmpsb push and int3 ret fs mov mov mov pushf lret gs fs add sub into jecxz adc sbb sbb sbb imul in test pop (bad) outsb (bad) aam stos and sub or mov lods popa call (bad) addl sbb ja pop adc push je hlt and xchg cmc add xchg cmp sbb das xor das (bad) movb shll aam pop jbe inc xor aam ja mov xor jno mov or xchg stos push das inc inc pop dec bound xchg push adc pop push pop xchg push xchg dec sbb mov or cmp push in adc bound (bad) mov xchg dec inc scas test arpl addr16 dec dec outsl cmp inc inc fs xor xor gs aaa mov push adc mov dec repz xchg push shrl xor cld mov sub mov stos push and adc lods inc push lods test xchg int lods rolb inc test pop mov popf or inc push dec inc pop ja inc adc dec imul jo sub and mov or dec push dec inc js adc sbb push sahf test imul jbe push dec les sub xor push lret or dec dec repz cmp adc (bad) and cmp jp outsl adc sahf sahf out push push sbb dec (bad) lcall fs sub es les dec jae leave pop cmp dec es cmp inc mov jmp jne dec xor test rcl adc xor push bound adc pop (bad) int sbb or int3 add pop adc mov dec (bad) test out and paddb inc lret mov xchg fucom inc push mov sub xchg enter cltd adc dec push adc mov movsb dec xor adc sbb lcall inc mov testb test add lds push fstpl lds xchg cmp fcomps cmpsl xchg sub int3 loop repnz xchg adc into or sahf push aam push dec dec data16 ss xchg nop in inc int3 mov test inc das adc sbbl or or and or or cmpl cmp mov push fwait rorl sbb mov imul rclb imul or jp andl lret mov pop and jp jns lcall mov push xchg mov cmp lret jb mov fwait inc (bad) cmp sub and pop fwait shrl jns mov sbb or or sbb or push sbb push or push mov push cmp and pop push lret ret arpl cmp imul ret ret push inc mov xchg imul and imul pop shlb imul pop push push jb mov pop jb mov jae leave mov sub and sub jae sub jno jns or sbbl adcl jno cltd lcall test xchg (bad) rol xor inc orl push stos adc mov leave pop or or pop mov or and push jnp ret sarb ret ret lret push stos imul dec rcl push sbbl and andl push jb imul cmp mov mov mov cmp jae rcll lcall jno pop cltd pop push sbb or xchg jp cltd mov jp mov pop jp test lret shrl or stos xchg (bad) jae jnp leave stos sub mov pop jnp cltd mov jns sarl sbb roll sub mov xchg or and or or or or mov push stos mov imul cmp dec (bad) jnp xchg and jns mov xchg sbb mov jb roll jno (bad) adc stos jp mov mov jb mov xchg jae dec mov and mov xor mov push lret lret cltd xchg lret jp (bad) sub jp cmp jp or jp cltd mov jp imul fwait shrl jp mov ret imul mov jnp jns cltd mov jns leave mov jns pop mov jnp imul (bad) dec test sbb and xchg (bad) or mov mov mov xchg lret or xorl sub mov adcl bound mov sarl pop stos add jnp sbbl lret or or or adc adc or sub mov or or push cmp push jnp stos mov sub push pop mov push fwait mov push cmpl jae mov push fwait mov push or adc mov stos ret sub fwait pop ret sub stos mov pop ret sub cmp adc shlb dec ret dec push push fwait lret push push jno lret push shlb imul sub adc mov stos rcrl ror mov xchg mov jp (bad) imul ret (bad) xor mov cmp jp shrl xor inc jnp jns (bad) and mov push mov and fwait bound dec mov (bad) and or mov sbb xchg and lret mov or lret mov lcall mov sbb shrl pop xor mov orl cmp mov mov or or or inc sbb push lret ret xor xor cmp adc lcall inc mov adc dec bound stos lret push (bad) imul stos and imul inc imul (bad) lcall andl imul cmp cmp imul bound adcl or sbb jno jns pop mov or jp test inc jp or jp mov jp mov stos mov inc add orl pop mov or or or or adc push cmp push fwait mov push pop mov push or push sub dec push popa ret mov mov roll bound lret mov jnp mov jnp sub jnp cltd mov jns test mov ret mov mov mov ret rcrl ror mov or leave lret xchg mov rcrl lret mov pop stos mov test mov rcl mov jp push sarl cltd jp rcrl subl leave jns push ret or mov mov mov sub stos push lret mov imul ret rcl inc dec imul ret dec (bad) imul stos push push xor imul and imul mov sub imul and imul mov mov xor cltd (bad) jae mov cmp mov mov adc leave mov mov mov (bad) mov jb or jb mov jb cltd mov mov mov and xchg mov adc jnp lret mov sbb adc sub jno leave lcall imul inc rcrl jp mov jnp pop stos mov sub jp jae jnp mov sub mov xor andl or or push push adc push push pop adc je movsb pop inc aam xchg movsb ss aam aaa adcl push inc (bad) mov xchg je cmpsb je (bad) mov xchg movsb movsb xchg shll inc movsl xchg push out adc cmpsl cmpsb aaa push hlt mov xchg je lds jp pop stos pop and or cmp test mov mov rcll mov xchg jmp shl adc lds push lods dec call inc mov inc fisttpll loop rorb xor sbb push or push mov cltd popf loope test gs jmp loope loope and dec xor in mov xor aam mov movsb push dec dec inc push xor push addr16 arpl xor dec gs inc inc pop fs jo xor bound je and mov mov xor daa sbb mov cwtl xor cltd sbb movsl int xor mov aam shlb test test xor sub and pop mov imul loope jmp loope cmp lds mov dec js xor push insb dec dec and fwait push sbb test (bad) pushf mov (bad) into mov inc push pop fs insb xor bound jbe xor fs xor addr16 push adc sbb adc pop or lea dec jmp lea jmp lea call dec (bad) push lods dec lea scas dec dec into jmp stos (bad) out jmp insl dec sub in stos mov call or adc (bad) adc lret xchg or sbb rorb dec dec mov lea jmp push addr16 inc dec xor xchg and imul mov leave inc push push insl dec mov movb dec dec push and rol mov mov and bound mov pushf int3 jo test mov pushf aam fs push lea or test aam jb xchg inc pop cmpsb je es (bad) hlt cmc adc and pushf daa mov lcall dec lea xchg or dec xchg out es push xor rcrl aam bound adc ret leave inc add rcr push xor push test xchg inc pop and in mov inc gs pop and mov inc jbe sub or or adc adc xchg or mov pop outsb aam jae or push mov mov push jae test rclb mov movsb xor aam aaa jbe mov jmp inc inc test repnz and or push js push imul rcll xchg push fs popa dec push mov dec pop dec dec js and cmpsb mov mov cmpsb mov cmp cmp les jae imul leave xor test cmpsb inc popa jp jae xor xor fwait xchg test inc testb sbb cltd mov push mov fcomps int3 loopne sub pop cmp jns rorl out test sub push xor and andl lret lea dec gs enter push sub ljmp push xor loop inc adc inc xchg push xor xchg (bad) xor adc adc inc xor mov rorb dec insb push jns push xchg xlat inc ja daa and rol dec and and xchg adc into aad in pusha fmul es mov push push rorl outsw dec int lds arpl inc test inc jp or cltd rclb out iret dec gs daa mov sbb call inc xor test push push sbb push and ret test adc sub call lds xor ja sub mov call xchg cmp inc mov inc sub daa pushf inc in push inc ja push inc mov into mov jns push push inc cmp (bad) push lcall jb hlt out rcll bound es rcrb mov mov add int mov loop ja test lcall rclb dec les xor scas push gs cmpsb out add dec push cwtl xchg pop inc out mov adc push xchg and bound mov dec data16 inc and cmpsl sub dec pop jae adc dec dec rcll mov xchg sbb xchg test cltd int3 les and bound mov adc pop int fsub and cmp push or (bad) stos or jmp sub or out sub cs out inc out or int push inc or sub sub sub mov sub sub sub mov or dec out out dec mov out mov stos enter mov jmp push sub or stos dec das or lods dec das push lea mov or lods scas out add lods or sub out or out inc dec mov int3 scas data16 mov sub or dec out dec cs mov inc push dec out dec dec mov (bad) dec cmpsb imul mov xchg in out call insl data16 sub data16 push stos cmpsb cmpsb iret dec mov in cmpsl push int mov mov dec cmpsb int3 test test mov in test lods test sub lods addr16 dec dec ljmp es push or lret push lretw gs inc out dec add sub sub sub sub sub call test cs dec dec inc sub mov test mov out mov out dec lea in outsb out mov in mov dec stos sub or lods jmp test outsb jmp push cmpsl push push lea imul xchg sub sub sub (bad) mov dec dec push test dec outsb or dec imul cmpsb mov sub insb imul dec or push sub sub sub sub test sub sub test dec lods imul dec test es call call scas jmp sub es mov out or in lods dec or test dec sub sub push call sub sub test mov sub mov test push push inc enter movsl in outsl dec dec mov or mov jmp lea sub sub sub out out lea mov mov dec insl dec lret es dec sub out dec or das dec enter cmpsb ljmp movsl cmovs sub or push push dec mov sub enter mov test dec mov mov mov mov imul dec into enter dec sub cs mov imul mov outsl dec lods mov int3 out scas dec leave dec lds out dec imul dec mov or addr16 mov lea mov enter dec or mov daa push (bad) ljmp mov cmpsb push xchg dec dec jmp dec inc sub sub test dec insb test lea mov test mov dec dec mov push stos leave jmp data16 or out dec (bad) lret mov cmpsb mov out insl dec jmp leave or dec es or or es out dec sub out or leave out sub or pushw (bad) or cmpsb lds call call out push push jmp out cmpsb ljmp es dec dec xchg push int3 data16 outsl dec cmpsl sub or int3 leave in out or out dec mov ljmp out dec or or enter dec push ljmp sub or or or dec or int push stos (bad) dec lret or or int or or sub call dec mov dec daa sub or cmpsl or addr16 or cs iret inc lea or sub sub sub sub call int cmpsb dec out dec push insb out dec enter cmpsb mov dec sub das dec mov out dec call int3 out dec dec mov jmp test out cmpsl or dec or out inc or out inc push push inc enter movsl call test enter push dec or cs mov enter sub mov sub out mov es or in test lret dec mov int3 push int3 out enter in ljmp out or int mov sub push out call sub into dec mov jmp test daa or push dec sub outsb out or out push stos es enter out enter mov out into out sub out mov es out sub jmp out cs test or dec out or es es out sub out dec mov in test xchg out es or out push lods out enter out es sub es mov out test out or insb call sub sub mov lods int3 out sub mov cs sub sub dec out or mov push jmp test dec jmp sub es ljmp sub into out dec lea lods push sub scas sub out test dec test mov es out out sub out sub out push lods out dec (bad) or or or sub out dec xchg sub sub sub or daa sub daa das sub daa es xchg lods out or and push dec in push or sub mov enterw or xchg sub or in test imul add test mov call sub sub dec sub sub test out ljmp out in mov cs call out out in mov sub mov mov and stos test sub sub xor xor pushf mov xor xchg mov sbb xor mov sub xchg push adc push dec sbb push push popf fstp xchg adc adc nop pop adc push (bad) pop sbb adc mov inc jbe (bad) es inc movsb test ja adc xchg ja mov push push (bad) xchg adc les notl cmpsb ja and aaa xchg out xor out xchg and mov mov xor cmpsl sbb cltd lods cmp lcall cmpsl mov and mov test ss mov stos lcall pushf sbb sub mov xor sub cmpsl fwait adc test loope jmp lods loopne es in insl inc push or lret push lretw gs inc out dec add mov rcll pop rcll adc fcomps out inc xor les aam divl sub or xchg sbb aad push xchg push sbb lret aad push xchg push pop ficom ficom xchg xchg out lcall fisub xorl movsl cmpsl cmpsl sbb add enter mov aaa add cmp in inc int rcrl cmp test inc adc jl sub aam pushf xchg push lods pop bound dec addr16 xor gs cmp popa inc push xor dec jo imul push dec ret ror (bad) or mov push adc cltd les sbb and aam cmpsl cmp xchg adc xchg adc xchg push adc dec push sbb and or inc fwait push jb imul mov in notb sub shr sub or dec leave data16 dec mov mov nop dec push adc int3 pop xchg adc dec dec push adc sbb sbb nop dec mov xchg push mov data16 (bad) data16 enter data16 push inc jecxz out cmpsb movsb loop xchg xor xor hlt and movsl inc ja hlt xor mov aaa daa mov xor daa movsb xchg mov int3 rcl push movsb mov dec dec dec int xchg dec inc sub sub test dec insb movsb push xor lods dec mov ret sbb jp cltd stos (bad) mov jns sbb fsub sahf int outsl dec dec push outsl outsl dec push ss inc jo dec dec ss inc jo dec outsb mov cmp jmp inc fsts leave and push leave popa cmp divl jns fimul int3 adc ficomp dec (bad) call mov push inc xchg ja cmpsl push xchg repz xor jns ret (bad) jns nop xchg sbb cwtl test add push adc xchg xchg lcall sbb push aam mov mov inc cmpsl gs add add mov repz sbb test xor inc and sbb push cltd pop popf lret lea inc pusha push adc or movsb inc out shrl xchg mov inc (bad) and lahf mov adc stos daa (bad) (bad) and and and and adc es mov gs inc add inc adc mov sub icebp cmp loop mov fist mov daa and mov out xchg cmp in jae jbe enter inc xor xor mov mov mov mov (bad) xor cltd push push sbb je dec xor dec inc push push repz popf pop repnz adc rcll mov mov lods shll les (bad) into iret cmpsl xor cmpsl movsb sub cmpsl test lcall mov int sub into out insb cmp fcmove xchg mov cmp dec addr16 iret in inc jbe adc rcrb jns push dec mov mov push cmc add sbb cmp mov or push sbb xor pushw mov cmp stos push adc movsb test inc outsb out and repz test xor (bad) (bad) cmc adc pop lcall je xchg push test in out in mov and lret dec leave mov mov dec push dec enterw repnz add mov xchg and dec jno xor lahf (bad) and jg dec sub sub and cmpsb lcall adc rcrl mov sahf mov sbbb lds ret sbb test cwtl or enter cwtl pop rcrl and bound lret cltd adc iret loop addr16 shlb movsl int xor and aas clc xchg cltd repnz cmpsl xor out aad rorb xchg dec mov stos jno mov imul inc xchg sbb popf (bad) in inc push mov daa adc dec sub cmp dec jbe ss inc jae dec ja aaa inc inc jae dec js aaa inc inc jae dec jns aaa dec inc jae dec jns aaa dec inc jae dec jp aaa push inc je dec xor push inc je dec xor push inc je dec xor pop inc je dec xor inc jne dec xor aaa imul insb inc jne dec xor je push inc ja inc inc xor push ja inc inc xor push cmp xor push push cmp xor push inc cmp xor push ja arpl push pop cmp xor pop push cmp xor pop inc cmp pop push pop ja outsl inc xor popa cmp xor inc push inc inc inc inc inc inc inc ja ja jbe dec ja inc inc inc inc inc inc inc ja inc inc inc imul js inc inc addr16 push push js inc push jae bound je push xor bound ja pop inc dec arpl jp pop push dec fs xor inc pop arpl inc xor inc pop ja xor pop dec dec push pop addr16 imul dec imul inc pop push dec insb xor pop outsl dec outsb inc xor inc outsl xor addr16 pop inc je push xor popa inc cmp xor das addr16 sub inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc jge mov mov cmp cmpsl mov cmp mov mov cmp mov sbb roll mov inc je cltd gs fnstsw int3 enter out imul and sarl mov and adc dec pushf in adc popf inc dec inc in adc lea add imul inc adc push push xor pop mov data16 inc es adc and add push adc adc adc cmp mov in mov data16 test aad pop test adc inc inc jae cmp xor sub and cmpsl xor cmp test and cmpsl xor cltd adc scas inc movsl adc leave push fwait rcrl popa stos cmp test sub test mov mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push and add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add test vmread gs int3 iret jmp push movsl push add pop add adc dec adc pop insb rorb nop jne cwtl mov icebp push or int xchg add mov mov imul or xor pop movsl sub push mov inc inc inc lcall sbb (bad) mov sbb das xchg mov inc test adc ja sub pop push into fisttp push dec sub sub (bad) inc scas dec push (bad) xchg movsl sub xchg movsl sub xchg mov test movsl sub in mov enter adc fnstsw fcoml xchg mov sub dec xor sub je stos mov dec push lds inc pop cmpsb sub mov sub cmc sub xor sub movsl sub mov dec (bad) mov sub xchg movsl sub sub (bad) push movsl sub xchg movsl sub adc dec push xchg movsl sub xchg movsl sub test sub sbb movsl sub xchg movsl sub movsb fcoms push fidivl movsl sub xchg mov addr16 pop mov dec push xchg cmpsb sub hlt xor popa push xchg movsl sub mov int dec adc sub mov push rcll cmpsb sbb xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub or addl movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg mov pop aam mov mov lods inc and xchg mov cwtl gs andb mov xchg movsl sbb sbb adc dec sub adc mov cltd dec lock or popf adc sub xlat pusha mov mov adc or push jl push rorl mov xchg adc andl add or sbb test or push or aam imul xor dec popf sub push scas arpl mov sbb pop insl cmpsb insl add jge int3 or jbe js inc mov inc out daa add cmpsb xchg push es movl sarl inc dec sub adc xor push scas add pop mov xchg xor xchg inc cmp xor les shrb popf pop pop or divb test lea insl in sub aad dec mov leave push mov test cmovae sub mov outsb adc stos xchg sub mov stos test (bad) adc pusha sbb adc jnp mov inc xor dec in inc xor jb aaa arpl adc xor jg jo inc xchg push popa dec arpl mov js xor xor movsl and xor xchg mov rclb mov xor (bad) jecxz insb inc daa mov inc inc js pop rol icebp dec inc lcall dec mov jmp pop ja (bad) pop and mov inc xchg lods mov xor cmp mov cmp jne push ret lds adc jne jle jns daa push adc xor sub and xor push mov popa repz test loopne gs dec sbb sbb add or xor sti jmp arpl aad aam mov push mov test out push lcall jecxz dec andl inc mov mov sbb dec add jp sbb xlat rolb test xchg inc or inc lcall xor pushf dec jae jne mov xchg jg iret iret iret iret leave push inc sahf test pop popa adc fwait loopne arpl mov and stos adc cmp adc fs adc adc (bad) dec add sbb cmp add sub cmp gs push add fwait jns sub cmp sub xchg adc cmp mov cs int3 dec (bad) in jl addr16 mov enter cmp mov and and jmp jmp fwait pushf cltd mov xchg andl lea xchg xor fucom cmpl xlat sub and cmpsl gs aaa xchg gs and push pop sub cmp mov dec push cltd iret sub sbb fdivrs sub sbb (bad) inc or jecxz pop xor adc int mov xor push gs xchg ds cmpsl gs cld mov js cld mov dec test jl cld mov jno mov (bad) gs scas jo lods pushf push dec jmp lods rcrl sbb je jmp mov das sbb add push xor or mov sbb lcall lods loope mov add push lret inc inc mov jae and fldenv (bad) xor xor sbb js das add lea cmp dec or add jl xchg sub xor xor add jge sub stos nop pop or loopne mov dec xchg dec add mov rcl push or es sub int3 xchg test push mov push inc mov xchg mov sbb xchg test and push dec lds add mov sbb sub dec lret test adc inc call int3 aas add inc ret adc add lock adcl movb push mov andl sbb dec scas leave and test inc and adc pusha or xor stos inc cld pop xchg addr16 cwtl jb xchg popa add repz inc mov inc sbb mov rorl jo xchg rorl and and sbb cmp mov pop push xor out add sub xor add and or add std leave pop data16 roll xor dec or pop xchg lds jb and and es js pop push repz mov and in cwtl inc add push mov mov addr16 or xchg fildl cli pusha mov and push inc or mov xor pop push dec adc sub xchg inc mov das fdivs adc and mov pop in or add sub sbb cmpsb (bad) inc fisubrl xchg jno mov add xchg inc cli add sub jae or sub mov paddsb (bad) mov leave dec mov dec and fisubrl dec xor add loop test sbb mov insb test jg mov jl push push test bound jg mov ja add popa insb and lret sbb inc movsb addr16 movsb xor adc inc jne jo xor mov xor pusha add and push lds rcrb jne or cmp xor rcrb jne or cmp inc jne popf sbb sbb adc cmpsl fs mov (bad) fs mov mov xor gs add xchg icebp popa das pop xlat fs fs cmp xor (bad) mov mov cmp push ret mov test lret jae jb bound adc fcmovnbe xor jne popf xor insb xchg xor cmp xor out bound (bad) icebp bound inc mov xchg sub popa insb xchg xor lahf jb pushf je and ja push mov xchg mov lods inc jne fnsave jb outsb cltd lret sbb mov lods inc jae sbb je mov fldt or cmp test xchg xchg idivl inc ret stc inc mov shl fnstenv leave fwait ss loop rolb and clc ret inc ret repnz mov push pop rol mov push dec (bad) mov fistp xchg or data16 pop xchg xchg fsubl ja (bad) xor mov test mov fs push lock adc sbb adc inc mov cmp push push push xlat adc mov xchg mov xor ret push out jne ret sbb inc cmp mov inc xor push push and mov mov bound pop out shll xchg imul repz pop sbb xor push push and imul mov or xor push and imul sub add mov roll ja push stc xor arpl xchg movl popf sbb (bad) sub lret ret push (bad) inc push push cli dec xor arpl pusha xchg xor daa push push cli sub mov mov les jno cltd pop pop gs jne inc push push cli dec xor arpl pusha xchg xor daa push push cli sub mov mov and and adc stc int3 add adc icebp pop pop sbb sub shlb mov imul xor (bad) lret adc mov mov jb sbb mov (bad) or in inc jl and arpl lret sbb jae popa imul (bad) test adc scas inc mov push inc mov pop mov pop es movsl movsl push mov daa sbb mov push daa jge mov add push xchg lock gs lea mov inc inc push mov sbb push andl push nop fs aad aam add pusha push push insl xchg mov test aad aaa inc mov mov mov sbb add test push test (bad) (bad) push adc inc xor push (bad) (bad) or icebp imul lds sub push rolb add sbbb xor cmc lock addl and push addl addl and (bad) sarb cli divl sti inc push in cmp call sub push push xor sbb inc and jns clc xchg dec pop fild adc stos and jecxz lods (bad) mov and cmp push icebp add mov fisttpl push push mov cmpsb push ljmp shl loopew test popa sbb pop les rcl inc fstpt sub icebp lods popf mov mov sub xor cmp shll inc add test sub (bad) outsb inc adc fiaddl xchg dec cmp fmull cmp pop insl inc mov mov xor jp pusha push (bad) mov popa (bad) pop mov insb xor cltd sbb adc jo add repnz xor add sbb mov mov push mov in mov and add jge cmpl test add or mov or mov scas insb push inc sub inc sarb sub mov mov out mov inc mov adc or out lds jno xor leave hlt or test add outsl sbb mov and out jo (bad) out jp mov jb mov (bad) or adc daa sbb xor mov push jb (bad) in cmp xchg sbb cltd fstpl cmp adc mov adc les jns mov std (bad) loop adc push test outsb inc xor add sub mov jecxz icebp cwtl push push push xchg test mov outsl xor mov inc mov inc rcl push cwtl mov roll insb pop sub (bad) les and int3 inc mov xlat (bad) or cmpsl data16 mov mov pop pop int pop push xor insl notb pop cmp les xor negb inc sldt mov jmp pop fdivp in inc inc sub xchg add (bad) (bad) xor jno push add adc cmp hlt inc fadd add fcompl adc bound les rcrl jne or mov sbb push sbb dec repz dec xchg movb xchg pop pop inc lock mov ret pushf pop dec push push sub mov add and (bad) cmp icebp push add sub xchg fstpt xor xor adc clc pop rclb mov out out sahf xor movl (bad) nop push cmpsl push xor push mov int pop inc pop sub adc mov push (bad) enter sub loope add sub add (bad) pop inc dec das (bad) jo andl imul (bad) (bad) sub mov dec mov pop sbb scas sti nopl inc jo loop adcl lcall jmp sbb jo push and mov and fsubrs repz push ss mov mov or pop out bound test push xor inc insb or push sub xchg dec pop (bad) movsb adc notb sub sarb mov pop mov insl mov lea and push (bad) or add mov data16 adc sbb cmp clc pop adc mov add and and lahf inc sbb repz and and dec aaa rorl fildl jns push insl mov xchg call xor sarb jecxz mov cli and sub xor fsts pop loopne pusha sub bound les push bound push lcall loop les icebp xchg mov pop fild sub sbb fist sbb ljmp sbb pusha push in icebp pop sbb sbb sbb and mov out test fcompl sbb mov (bad) adc stos inc data16 and jbe lods pop mov or dec lret xor mov mov lods imulb jno mov aad push fild ss fsts xchg pop mov push data16 outsl leave adc xor pusha xor dec imul test outsb mov stos movb je es stos dec add add int3 lret popa clc xchg stos jl adc and xor arpl int xor jne roll pop dec pusha insb xor add dec int3 outsl mov cmp in addr16 or popf int3 mov and mov and xchg (bad) jno cmc mov imul enter and mov sub mov sbb sbb sbb adc sub cltd push xchg scas pop or aas sbb repz fldz dec test add pusha mov lock mov mov mov ret and pop pushf pusha mov sbb xor shll sbb clc lods mov or fdivrl dec inc jnp loopne int3 inc mov cmpsb scas test lahf adc xchg test and cltd sub int3 fldpi loop adc arpl push insl test adc jl push ret xchg movntps in pop bound push and jbe dec out xchg es push xlat (bad) in mov orl pop into mov mov inc shl int3 add add mov or callw lahf outsl outsl outsl outsl outsl push jg push sub xor (bad) lea lret and andl (bad) repnz mov stos fidiv mov xor push jle and adc scas scas lahf or and xor jnp inc (bad) xlat dec xchg roll pusha popa in push pop loopne xchg jbe xchg xchg push fwait xchg push add adc push xchg dec or je fwait insl (bad) xchg jno in xchg mov je adc sub lds adc adc js pop mov or add sub lds jae push push iret push xchg jmp cli (bad) mov xor lods mov (bad) in loope je iret push xchg mov (bad) out ret jl pop cltd mov sub divl lcall xchg pushf xor push xchg xchg push jnp (bad) mov sub pusha adc cmp jne jb pop out dec hlt xchg jb (bad) scas outsb jbe int3 sbbl jnp pop cli insb add je clc les push xchg push xchg push (bad) add idivb (bad) in bnd push jb jle mov repnz mov jne je pop test jb pop bound cs push jecxz dec lea add inc sub pop movsl fadds popa pop inc sub and jns jmp jmp xor out push adc data16 push push push inc pop in jbe (bad) and dec pop sub pop mov shll jl push divb mov xchg inc sbb and loope and jb leave mov pop and pop add cmp adc stc adc test xchg (bad) insl cs (bad) je lea and and loopne int3 dec and fcmovnu adc bound jb (bad) rcrl jb je lods or sub xchg mov mov js push les cmp mov or int cli dec adcl jmp push adc inc fcoml sub or (bad) je lea push pop xchg orl jle push pop leave sbb divl jno pop mov jb mov push insb xor jle add add add sbb push mov icebp jle ss pop or xchg add xchg cmpsl pop imul xor adc ret push leave add data16 pushf (bad) fdivs jo adc xlat shll or dec jb and and popa (bad) rorb outsl adc dec add pop mov push (bad) push push cli add add adc mov ret lret loop in lds adc std adc lds add pop adcl pop push pop pop rcrl (bad) pop mov sbb fwait add adc hlt test arpl inc adc adc cmp xor mov mov fcoms xchg push xchg and jmp pop lock mov popf (bad) adc gs inc ja icebp popa popa fs xlat ret and adc lds mov (bad) mov in pop ret sub lock inc lods cli movsl jns jl test fwait cmp loope mov inc adc push mov inc pop xor jge and aam lret inc pop sbb cmpsl adc inc and int3 dec ja xlat les repnz jle les mov into inc sub push xor cmpsl les addr16 bound (bad) or inc add and or dec xchg add dec sub inc push les cmp mov cs mov mov jbe mulb sahf pop (bad) mov shrl sbb leave mov pushf xchg ret mov frndint lds xor shll enter sub out es xor daa ret cmc dec mov cmp les lret sahf jns call sub cmc inc aad rolb popa mov nop aad popf mov xlat inc lea sbb adc and pop shll data16 mov add rol je addr16 xchg shll jnp xchg (bad) into (bad) ret mov ret imul mov stos add add sub inc jo mov enter push pop and pop test or fdivs dec pop lea test sub stc inc dec fmull or jo pop mov in (bad) lods sbb roll (bad) sub dec mov inc adcb pop adc nop sbb (bad) xchg mov adc loopne inc (bad) mov test rolb push hlt movsl test js lea cmp icebp jle dec adc mov push mov loop mov jns fisubl push sarl (bad) xor inc inc xchg mov in adc rolb adc adc js roll int3 or call xchg mov pusha aas mov or adc je adc push dec cmp pop test cwtl cmp pop and inc pusha fisubl xor xor mov sbb aad outsb ficomp sub xor lret inc roll mov bound pop scas dec shrb nop cmp insb addr16 icebp or movsl (bad) xor mov outsl test ret mov push iret fimull sub jo gs lds into cmpsb out cltd jns push pop lock or lods loop xchg xchg stos inc ss aad stos sub addr16 push mov stos mov pop cmp pop mov adc jl jl,pt add int3 int3 fnstcw mov push stos push lods sbb mov inc mov adc push xchg imul jmp aad flds pop aam cmpl or insl adc outsl lock mov push dec push and mov push mov pushf or loopne fsubrs lea sbb js daa xor and sbb add enter ss push xor unpcklps push lea idivb imul faddl sub push sarb adc xorl fstl testl xor cmpl repz add add jae (bad) (bad) cmc jb clc loop (bad) das pop and aaa add and cmp xchg xchg cs repnz ret lret imul adc inc jae subl lret les pop cmp repnz cmp popf ret repz xchg hlt xchg popf adcb popf adc mov sub daa mov ja cmp enter and cmp push ret lret xchg repz hlt push aad sub popf mov xchg inc xchg jae lcall lret and xor int mov and cmpsb xor int outsl adc cli shl cli fcmove in ljmp mov enter jb sarb imul int daa jmp loop lahf inc (bad) hlt push sarl add adcb imul xor cld pop add enter fs fcoml push mov shl mov outsb mov sbb cmpsb mov clc loopne sub adc aaa inc push mov in loopne pop es sbb pushf xchg jle mov sub cmp and insb xchg xchg cmpsl adc jne push mov jno and mov test call aaa push clc in loopne repnz and xor test sbb sar add mov jle mov data16 ret cmpsb imull fldenv rcrb negl lret shr push push lret out (bad) (bad) repz shlb popf lea shr adc std jae push pushf xor mov cmp xchg repz jae test repnz add push xchg ljmp mov push sarl sbb xor repnz data16 sbb sahf (bad) (bad) repz hlt push rcr sbbl outsl inc fldl cli jmp jns inc popf (bad) and dec xchg cmp shlb daa sbb dec test pop clc ficoml xor push and xchg and adc add xchg inc cmp mov pop rorl sub les movl outsb sbb xchg loope pop aam lret lret lret lret lret lret lret lret sbb imul dec add cmovno xchg ret push pop add and or inc mov daa scas push push cs add flds and test xchg mov bound in rcl or mov lock inc jae mov pusha jo (bad) dec mov inc arpl jb sub ss rcrb push mov add pop jb je mov stos popf sbb inc pop inc push push and test adc scas fmull pop jns sbb (bad) sbb movl xchg sbb add test mov movsl push aad roll das push pop cld dec dec add scas sbb out and js xlat inc pop into or or push mov movsl lret pop arpl adc inc xchg sub xchg insl adc mov push add jp dec add jns scas sub data16 sub dec or stc sti cmp mov sub das cmp movb cmp leave andb push xor pop adc mov or mov mov rol (bad) pop (bad) aad xchg lret daa in addr16 adc adc xchg and movsb dec dec xchg mov and mov mov shlb and mov xchg sub loopne add mov mov and and xchg (bad) dec (bad) fcoms pop push (bad) jns mov push fcompl lods pop xchg inc mov enter add popa pushf shrb testl das adc pop mov data16 aad mov xchg push dec dec (bad) ret xchg xor inc push lds add mov (bad) mov jbe jb jnp bound bound test jb jb push jge je (bad) jp mov mov and xorl dec push sti imul test test jb xchg jae (bad) jno ja ja js stos in rorl xchg ja inc inc sbb push push or add repz xchg push inc jo inc inc dec add out push inc jno dec push inc jno inc jno xor inc inc dec addl inc dec dec addl mov addl inc dec addl inc dec pop mov jl inc dec dec pop addl inc inc jp inc cmp inc adc jb dec addl jno dec bound inc add int inc xchg jb roll je inc add inc cltd xchg jb inc inc push je mov adc repz jle dec pushf in and xchg lods and mov f2xm1 mov imul rclb lock inc pop imul imul imul lock push imul (bad) mov movsl xchg xchg xchg (bad) mov push cld inc inc push jle inc inc jae mov les mov adc addb add loop push lock mov adc add or jne roll ja dec mov jns lea cli (bad) fidiv xchg ljmp mov xorb push jle jle pop enter arpl fnsave cmp cltd lret xchg roll jae test jl movsl push jae cmp push mov mov inc jo (bad) push cld mov and mov stc jae (bad) sbb mulb adc call stc jae and push xor repz or push inc push sub stc mov inc jnp push fucomi (bad) lret addr16 inc lret out rcrl sub or lret out fcoml jb xchg loope cmp inc mov add or mov les int jo lods dec fisub add jecxz jnp stos add add fwait add mov in hlt xchg test pop (bad) in test (bad) rcl movsb and data16 inc test xchg test xchg push mov or xchg adc ljmp pop xchg ljmp fsubr xchg imul (bad) sub add and jecxz push in or (bad) jmp in aam out cmpsb ja xchg xchg cmp jmp in sbb fldl jo scas (bad) (bad) aam xor jl cmp subl pop xor jl repz aad jle stos out sti sti mov jae sub lret sub inc lret leave pop and push pop jo adc mov addr16 jae xor cli icebp jns push add jns jns ljmp loop ljmp mov adc cmpl ret clc mov mov pop hlt pop loope jb pop mov int (bad) (bad) lds or adc add insl jae mov adc pop inc icebp push gs adc add add add add sbb push push jecxz mov jge jge xchg jae jo and and jge imul lret cmp sub dec jecxz add sbb xor gs and stos adc pop jecxz or jne sti sub pop inc sub add inc push std inc es xchg xor and mov or sbb adc add add (bad) in mov loopne add jecxz (bad) jmp dec jecxz popa push sbb jmp add out (bad) inc je jne mov sbb dec cmpsb ja inc adc cmp negb adc push addr16 add add adc push in jecxz shrl insl mov sti stc or jecxz shrl insl mov pop mov icebp mov jecxz mov lret mov jmp sub addl add pop stos adc fwait push pop xor add ja fldenv jnp in xor jmp sarl add or rcl loope push mov mov mov mov mov dec mov (bad) jecxz jbe lret mov xchg (bad) jecxz ss jecxz mov es rcl xor cmp loop inc mov mov jbe pop mov inc inc mov stos test and rcll lock cmpsb mov xor mov jp rcr in (bad) inc rcr movsb data16 insb inc push sub roll and fimull popa fstpl rcl push (bad) inc movsb xor push adc test pop rcrb mov fs xchg and (bad) mov test push adc push adc test nop rcr cmpl jnp jno jl test arpl bound or stos (bad) sbb or xchg cmp insb xor sub lock sub int loop gs xchg push adc in in in in in in out jmp out sbb rclb popf in in (bad) bnd add mov xor xor or cmp mulb les push (bad) sbb loopne in in in in in in in mov jp add push add mov lock sti push divb lret test call icebp imul adc aam adc imul fldcw imull int in rcl fsub aaa insl lea roll add lret and stos ret push adc rcll ficompl and xlat cmp ret inc sarb cmp pop cmp mov test pushf dec pop sub ljmp out repnz inc pop mov and mov xor push jno rcl enter mov popa mov and test and adc adc lock decb hlt test and imul movswl xor iret mov mov data16 mov and pop xor add loope cmpsb pop xor mov jp es xlat jb (bad) mov mov xor xor xor adc adc xor push movsl jno mov xor xor fidivr push je inc xchg pop sar sti in mov out sti mov mov sub xor in aaa xor loope (bad) addr16 inc xor adc arpl push dec adc and adc in jns adc arpl pushf jns mov lods inc xor mov xor dec push xor mov xchg mov loopne inc test addr16 mov cmpsb dec sti pop jl mov pop (bad) mov inc mov sbb js mov test loope cmp loop mov mov add adcl xor mov adc repz inc test xor push aam xchg in pusha add dec push xor mov sbb push xor in adc and mov adc sbb sbbl xchg (bad) xor sti xchg fdivl xchg mov jns pop xchg mov lcall mov (bad) mov sbb test mov mov add jne add jp xlat add adc sbb cmp mov addr16 loopne mov pop jge data16 inc mov sbb cmpsl jmp rcll mov sti mov push xor fs adc mov mov mov std ja cmpsl fsub adc es or loopne xor gs out pop insl aad push (bad) adc orl xchg int3 push (bad) and inc inc int adcl ja mov mov inc int loop adc xchg push push sahf andl or xchg mov push gs inc pusha stos adc inc pusha stos adc aas inc pusha stos adc xor xor adc ja mov mov xor add inc mov adc lcall and in loope adc pop loope sarl cwtl (bad) sahf jbe pushf lcall es xor sub mov xchg mov mov mov adc (bad) out adc mov mov mov mov aam push mov mov movsb and pop pop sub sti mov xchg sbb test add mov repnz cmpsl aad (bad) mov add add sub inc adc push sub scas jl sub call and and ds pop stos jnp dec sub and xchg sub int xor dec xchg inc sub add inc mov mov xchg sub fcoms test xor int or mov adc mov jl add pop inc inc in lcall add dec mov mov orb and pop daa (bad) jmp xchg aam inc xchg dec and pop sarb cli gs leave sbb xchg xchg mov push loop push sbb mov and mov outsb loope and and jno adc add dec fnop and pop or push push sbbl dec popa sub dec in (bad) fisubrl fcoms sub sbb dec lods mov pushl enter test adc int3 sbb or in adc adc test xchg sahf push jmp jge sbb jns push push pusha insb faddl push jbe jo mov js mov iret push das push repz dec mov loope loope lret pop mov les adc cmpsl adc add test xor and xor add xor sub (bad) or xchg or aas add inc sbb (bad) loope mov les xchg mov pusha adc mov sub rorb imul push mov adc pusha mov sbb or ret add cmpsb mov inc dec les addr16 loop mov jno add sub int3 inc mov call ss sub shrl shl sbb aad adc pop orl mov pop sbb pop mov push mov mov mov cld mov mov adc adcl cmp adc inc (bad) cmp icebp ret adc mov push mov (bad) cmp cmp inc orl nop (bad) pop and mov cmp inc nop (bad) cmp and (bad) pop and ljmp nop (bad) cmp xchg mov mov mov mov cwtl xor loop cwtl xor pop push xor cwtl xor (bad) insl and mov mov pop and ja inc jnp xor adc mov jno mov xchg pop cwtl xor (bad) cmp and adc mov xor adc adc add mov sbb xchg inc mov loop je xchg leave addl xchg roll xchg test adc xchg leave addl roll dec out adcl inc jnp leave addl aam addl jno xchg roll xchg test adc xchg leave addl roll xchg test adc xchg leave addl mov mov xchg test adc xchg leave addl roll xchg test adc xchg leave addl or mov xchg pop xchg roll nop lea push popf and or cmp mov gs adc mov loope vmovq cltd add aad testb adc pop icebp inc jo push mov test dec jno jno aam push inc xchg shl and xor addl jno out or inc inc out cmpsl shl and xor dec jno jno push mov imul ljmp mov inc push and rorb mov ljmp nop mov inc push and inc inc xchg in ss mov push or inc jno xchg mov dec mov popf popf cli push inc inc jnp inc mov push xchg mov ljmp nop mov inc push and and xchg mov ljmp nop mov inc push and xchg mov mov jne adc add inc jno out ret (bad) mov mov pop loopne or push or inc jno pop push inc jp lret inc xlat je mov in xor loop mov mov stos je adc movsb mov sbb inc ljmp mov mov jbe test mov (bad) mov in icebp testb inc lret push movsb test mov (bad) mov push nop sbb fs mov mov nop bound xor jbe fs popf gs inc repnz (bad) ja push or (bad) ja and inc mov stc pop cmc push aam out fwait push lods aam fisttpl sub dec push test mov xchg adc test aad sbb in ret mov in jbe lds mov lea inc mov xchg loopne bound test mov les push dec (bad) and add push and or jno imul adc push xor mov mov xor cmp insb pusha and loope xchg bound enter inc aam cmp push test mov push les jge xor jo push sub jbe repnz into shrb addr16 cs mov mov aas cmp insl pop adc inc daa (bad) int3 mov add pop pusha dec shl xchg stos bswap dec xchg ss sub or push pop pushf xchg and scas lcall and stc int3 push or (bad) mov sub mov sbb cmp xchg and xor jb xchg mov push mov push jmp ret mov pusha outsb rclb inc cmc cs mov mov cltd ljmp dec adcl push int push push push jo fnstcw ljmp daa adc sub adc shll push sahf inc lahf dec push js pusha lret mov or fsubs xor push subl or test cwtl lds push iret in addr16 je repnz and and inc cld mov and inc dec mov mov dec mov sub mov inc mov sbb adc adc mov or out adc or jb jge,pn test gs push out aas fs cmp cs sub cmp fisubl test ja pop pushf cmp call push mov add mov sub test pusha gs pusha gs pusha sbb sub test xchg push push arpl ret shr or inc (bad) and cmp dec fldcw mov push dec mov jo pusha sbb add adc jle inc stc mov xchg xchg adc mov out mov mov push xchg push (bad) dec xchg inc mov addb jmp std push xor ss (bad) in push ds out mov mov out andl push sub push push push mov and fcomps mov cmp cmc outsb or (bad) adc mov sub mov mov xchg add adc cmpsb ljmp xchg push jecxz (bad) push fadds xchg into ljmp in data16 and out xchg adc ret push push pop mov adc jae data16 in push fiadd enter fsubs dec ret push or in aam inc lds movsb in inc insb inc daa add loope enter ret push fs cwtl adc aam dec jmp shl lods or sub andl jecxz cmp xchg insl enter xor pop jmp push imul push pop xchg mov movsb jno cwtl and jge std ret loope push pop jmp call mov push jl cli mov adcl fstpl jle pop mov jl subl cmp outsb movsb mov fwait in mov jmp cmp jbe jmp imul movsl cmp mov push inc push jae call pop test add fst jae mov arpl xchg fidivr lods lea cmpsl pop pop lods (bad) int les xchg movsl loope cs xor cmp jmp out loope xchg cmpsb nop add cs xor xchg xchg xchg fdivrl mov popa xchg fiadd hlt rcll mov dec cmp xchg fucom cmp dec cmp into lret jmp mov fildl inc adcl xchg xchg and push and xor out lret call and xchg inc pop enter adc or inc mov out inc fucomp cmp inc xchg insl div xchg pushf mov jp sub lods adc pop movsb mov xchg cmpsb push nop add cs xor xor fnstsw mov or hlt rcll mov cmp out lret call and rcr xchg and out leave mov dec jle fadd nop and push mov adc in cmp fisttpl xchg insl div xchg pushf mov jp sub insl adc xchg ja xchg inc pop movsb mov cmpsb push nop add cs xor adc fnstsw mov or hlt rcll imul mov inc mov adc in cmp fildl insl div xchg pushf mov jp sub call and movsl imul cmp pop xor add fnstsw mov or push hlt rcll cmp pop xor add dec inc mov adc in cmp fisttpl xchg insl div xchg pushf mov jp sub stc pop adc xchg push xchg inc inc in enter daa loope xchg xchg push mov mov push call mov rcll sub push nop add cs xor popf daa adc fnstsw mov or rcll fistpl dec dec js inc popf loop lret cs aam xor mov xchg movsl jnp mov pop sbb mov movsb les add mov or mov mov pop inc jno jno mov fwait jp mov je jno jno dec (bad) jae movb xchg je inc xor add push jnp push loope mov aaa inc arpl sbb add jp (bad) (bad) adc test pusha add lods inc sub mov dec repnz gs fadds mov dec enter jns push enter mov jnp sub and jno sbb inc adc rcrb test cmpsl add jnp push loope mov ss mov popa jnp enter xchg pop add mov cmpsl mov xor test aam adc test add xchg mov jo add sub ret adc add push xorl std arpl mov xchg or add add sbb inc push test inc test test shlb cmp jge js xchg movsb lret mov xchg jno jae test add mov xor xchg test pop pop xchg push add popa test jb or xchg mov loopne sbb xchg xchg mov leave mov cmp add or pop mov add add adc test xchg mov cmpsb mov inc add bound add mov sub xchg ja cld sub push lock push stos cmp lret push mov xchg xchg (bad) mov sti cmpsb mov push mov push lock jno xchg mov inc repz fstps or not or mov inc xchg sti mov xchg add (bad) mov (bad) lcall cltd mov or jmp not xchg pop repz jbe mov movsl mov xchg mov and mov movsl xchg jp xchg xchg or lcall or sbb es mov jbe xchg or (bad) mov adc ja mov inc push inc xchg std jbe lods rclb movsl xchg jp xchg xchg or or inc lret push ret xor insl xchg subb pop adc pushf add stc xchg xchg test xchg hlt jmp imul sub push (bad) (bad) mov push mov aad xorl insl dec icebp xchg xchg adc xchg pop pushf add bound and shll lods adc xor adc imul fisubl add xlat stos test push imul sbb inc addl mov cmpsl or popa push mov and and inc xchg movsl in jbe inc or leave and inc movsl in jne or leave and movsl in jne or leave and and std leave and aaa icebp movsl in jb fiaddl adc or fs inc imul je shl rolb aad mov xchg jo mov fs adcl inc (bad) mov (bad) mov push fisubl cmp adc bound xchg push arpl jbe push in arpl jge mov push addl and sbb adc adc jecxz addl xor arpl (bad) repnz cmpsl jns daa sbb inc (bad) jo adc mov inc ret jnp push add popa xchg dec addb out mov jecxz int adc popa cwtl into and rcrb xor mov and lods sbb call out pop in int3 adc jmp push mov repz jmp sbb mov call push lds inc sahf adc mov jnp jo call sub rcll cltd pop cmpsb inc xor mov push in mov mov mov add lret test test mov mov call test int3 ret (bad) mov or mov and inc mov pop mov subl push mov jne imul roll lods adc xor mov adc sbb jne addb push xor mov imul ja loope (bad) mov xor xchg add inc pop add and inc fwait ja and add leave xor push push pop leave xor dec jno stos jp and pop icebp (bad) clc or repnz adc add sbb mov (bad) mov xchg ss xchg xchg adc loope adc in push movsb es divl mov addb xor icebp pop notl sub xor mov lret jle add push bound test mov push adc adc mov repz push xchg mov hlt hlt xchg mov and (bad) mov xchg add icebp pop icebp lret add cld mov or xchg rclb enter cmp loop mov pop cmp push mov or pop pop push jl dec pop pop mov mov cmp insl pop add xor mov bound loop push pop popa and sbb in and lret mov jl js test mov jp mov xor test adc popa lcall repnz mov and or jl jb pop mov cmc bound jl and pop and fimul mov mov pop test (bad) xchg push lods (bad) push imul mull and push fildl aam push pop (bad) lret repnz push push ss mov out and and and rep shrb popf xor movsl (bad) jno sti mov shll popf out ss lcall adc push add ret aaa sbb push dec imulb mov mov xorb loope inc pop inc pop in lret and pop pop bound pop mov push mov pop pop push rcll pop mov push stos jne in pop insl inc ret ret ss dec nop bound repnz aam mov mov sub out jnp inc insl jne push add and xchg cmc sahf mov and add inc dec jle out daa loope repnz xchg inc push inc cmc sahf cmpsl sub jl dec mov inc sub clc jno inc inc bound inc cmpb or sbb adc push ljmp lret jmp inc mov add mov pop push in pop adc add xchg pop out roll inc fwait or (bad) in es push and mov add xchg nop mov xchg cwtl repnz inc sti cmc test gs out xchg xchg aam xchg or push in scas inc test (bad) and xchg jbe jl lea dec loopne daa loop pushf (bad) sub popa and push cmp (bad) mov pop loope inc or dec mov inc or out ret sub mov clc loopne fs pop adc imul insb insb insb insb pusha push roll data16 xchg jle or fcom sahf imul add push inc and jns mov pop adc mov enter inc xchg add adc sbb push ljmp push (bad) xchg or data16 pop leave dec cmpl leave dec cmpl (bad) mov pop and xchg js and daa stos dec (bad) xchg bound addl rcrl push aaa lods mov xchg xchg jns lcall cltd (bad) daa shrb lods mov xchg jno cmp adc shrb lods mov xchg jns lcall lret cltd (bad) daa shrb lods mov xchg jns lcall lret cltd (bad) daa shrb lods mov xchg jns lcall fnstsw rorl adc and stos out scas add xchg pushf pop ficompl xchg inc rcll xchg xchg xchg xchg cmp pushf sbb inc xchg cmpsb repnz addl mov call cwtl jo fs jno addl inc push in ret pushf leave call nop and inc rolb imul and mov mov out jecxz repnz mov test (bad) out push push testl mov popf dec push dec lock fisubrl cmpsl jns or icebp xlat mov push (bad) fidivl sub je insb (bad) (bad) and mov mov stc aam sub ja xor or or add fisubrl movsb ja mov jecxz shl jb in push in mov aad ja cmpl mov popa mov ja call mov aad push or call popa arpl add xor mov shll aad (bad) icebp push (bad) icebp gs daa je dec mov test bound add xor stos mov dec ret (bad) jmp loope imul or add dec mov mov fcom icebp push cmp xchg aaa mov jne aad fcom icebp push arpl push pusha loop sub jbe xor jns xor sub (bad) icebp pusha sub in movsl cmp (bad) icebp push jno xorl rolb adc push xorl xchg lea (bad) jmp push add jno orl xor mov imul or ret cmp pop sbb je dec mov mov fcom icebp push sbb mov daa imul ljmp mov add xor sub ret cmp ret or xchg in (bad) icebp push mov cmp and je int je mov cmpsl loop xchg cmp loope fdivs push add (bad) lret pop lret mov stc arpl push jne xor shll dec repnz cmp xchg popa push xor jne add inc mov mov ljmp ret int bound adc imul sub popa push cmp shll cwtl and mov popa adc adcl fadds xor shrl jno jb div cwtl and mov mov cmp pop push data16 sbb push insb cmp pop add mov aad push and stos loop or adc or lcall loopne sub and das add add mov cwtl inc cmp popa inc pop inc push ljmp cmp roll or jo and adc or ja stos pop lds insl sbb sahf pop and imul clc pop inc mov sbb cmp adc and xor push jo ss adc test nop or xchg stos inc or aaa or add int3 inc sbb inc ja xchg mov mov mov lcall bndldx sbb adc and cmpsl pop js sub xchg arpl mov inc pop sub adc les mov lcall inc (bad) cld mov ret int xchg mov cs sub add jb sub push xchg push cmp mov push das sub test sub aad sbb test fstp adc call pusha sub adc mov fisubr sub sbb jo sub dec adc or shr fimul pusha stos mov xor dec cmp cmpsl bound cld mov les fcmovb or lds mov test pop nop pop bound (bad) sub dec push scas out lds popa pusha mov gs bound lods jge add lods jecxz push sub push inc stc shrb fsubrl scas out fadd push or les fistpl sub out sbb (bad) mov dec pushf or (bad) loopne lods xchg inc int3 outsl stos mov and fcomp or repz mov lret aad mov and sub push or push out cmp pop int ss fildll orl data16 sbb inc jne cmp imul dec mov xchg add inc ret inc dec push xor test data16 je data16 xor icebp xor mov mov bound cmpsb mov adc dec xchg lds divb pop mov ret (bad) jbe mov aaa pop add xchg test mov inc dec push inc test mov mov ja mov mov shll gs shll mov xor stc (bad) mov dec mov adc (bad) ss je ffree jbe inc mov cmp repz xchg inc bound mov sub inc inc mov (bad) push cmpsb lret repz je sub push pop sti push adc mov push xchg push inc clc stos and push cltd leave sub (bad) inc sti ja cli ret imul mov stos jno data16 jecxz imul mov jnp lcall jo lret inc xor addl cmp adc inc or mov shlb dec (bad) loopne xlat or push (bad) or mov loopne imul adc mov int mov add je lret sbb jnp push fst (bad) xchg lea push lret mov mov int pop sub inc popa xor rorl xchg pop inc sbb mov mov inc xchg push fwait jno (bad) call int in fsubl mov mov push mov sbb stos or xor dec (bad) jp arpl nop adc loope ds movsb push cli mov fwait (bad) xor pop mov cmp (bad) xor add test sub xchg dec and (bad) or or inc inc bound sbb adc jmp ja je push movsb dec mov xor xor jmp ljmp mov orb aad sub mov cmp sub inc and lea jne (bad) lcall or push push cmp scas mov (bad) xor and xor add push and fstpl xor pop out xor xor jne cmpsl pop inc push pusha cli aas push xchg inc icebp repz add mov sub es addr16 popf pushw push sahf adc and push mov mov les inc popa adc dec xchg ret mov xchg mov gs pop and mov sbb rcll addr16 in or (bad) fimull loopne dec cmp push je adc clc andb cltd xchg mov push (bad) es mov xchg pop inc adc lds lret mov push ds adc add fidivr (bad) rolb sbb sbb pop add push or dec scas pusha testb test add inc (bad) test sub or pop ret shl sub loop add xchg sub sbb push or sub push pop inc xor rcll inc rol xchg push mov push popf mov xchg popf rcrw mov xchg xchg jp inc xchg xchg mov pop nop adc (bad) sub aam push add push repnz push push add mov inc ss pop dec pop push pop adc lcall (bad) pusha jbe jb cmp and cli (bad) push mov stos inc adc dec and adc dec sub push mov negl sti int3 dec negl jecxz sti mov cwtl cmp sub sbb sbb adc lret xchg iret (bad) mov xchg jb sbb cltd jle gs mov jmp add inc movb lea sarb lods jno adc cld outsl mov sarb adc dec sub (bad) pop scas js add iret jp popa add sbb mov sbb sbb mov movb js pop popa bt lds mov xchg add inc movsl xlat pop adc in (bad) sbb inc mov jecxz ja adc lods mov sbb addl rorl and inc dec adc in and inc aam ret mov dec int divb jae out add inc pop xlat or push or jae popa cmpsl mov inc addl xor ret ret test adc lock dec orl cmp rorl lea mov sbb fs push sub xchg push popa insl and sub lock arpl xor enter dec mov and cmpsb xchg push or int ss stc (bad) in adc rorb jae hlt lea imul dec xchg test xor loopne inc insl call cmp jmp xchg dec mov jae mov jae repz push jno add sub addr16 mov cmp movsl pop lds add shll popa xor cltd and sbb shlw jecxz inc inc add loope xchg lea push jge mov out pop adc ret dec inc mov adc test arpl addl out dec mov popa cltd adc sub cwtl repnz xchg mov cmp adc jecxz cltd pop cltd sub mulb inc push cwtl ret inc inc mov inc push test mov xor inc nop push mov jl js in shl jge stos popf test mov xor mov fdivs mov arpl xchg ret add aad test mov rol lock fwait push dec add test inc popa cltd adc inc push arpl mov xor cs add leave mov inc inc add cmpsb in xor fadds push xor inc inc pop adc xor aaa inc push out arpl and pop sub pushf aaa inc movsl push ja arpl inc aaa bound popa push out imul pusha adc mov aad not or aad not gs mov xor cmp insl out add bound mov mov loope aad call mov xchg sbb jno push in adc and fnsave stc clc fdivl (bad) xchg cld push aam and repnz mov mov movsl add outsb dec mov cmp fsubr ja adc cmpsl xor inc jne adc pop add inc mov imul push jnp fs mov ja xor arpl pop mov in inc cmpsl add fs divl lock cmp in adc xor jmp xchg inc daa mov daa jecxz inc cmp push xor add pop lret mov dec inc cmp inc inc orb or ja mov mov cld icebp imul rorl mov cld int3 and jbe jmp sarb aaa aad daa cmc push clc jb mov call and lods and adc mov push xchg rclb aaa xchg sub jmp inc mov mov popa insl loope mov inc mov mov push inc ss xchg int3 scas daa jecxz mov aad daa push daa jecxz popa inc mov jno sub inc ret mov ret (bad) mov xchg gs add mov cwtl rcll pushf inc cmp loope dec pop cmpsl jecxz mov mov cwtl adc loope pop mov inc and and mov shr aad cltd adc (bad) xor insl stos inc roll adc jecxz out fwait cmp cmp xchg push loope pushf adc fistl popa data16 mov ds (bad) lock sub mov imul (bad) jb jae jb jb jb icebp jp and (bad) aad and jnp icebp sarl xor jne and sbb inc jb mov xchg in fwait enter and xor push add sbb xchg loop or xlat sub ret mov notl ljmp cmpsl sbb and and aad and loop dec jb push clc ret sub inc dec pop insb std shrl std shrl bound (bad) arpl cld std shrl and mov sub mov xlat insb and (bad) xchg jbe jnp xchg hlt mov fwait enter andb and and add jl les add arpl mov push dec xchg or test jnp (bad) je sub add les add add and sub scas add inc ja andl adc xor lret (bad) push ret (bad) leave mov dec jnp push es idivb es (bad) push ret adc ret fcom dec jne int ret in xchg and stos cmc mov dec loope jecxz ret icebp pop loope out ljmp add jno popa inc ret and jno sub sti mov jno popa inc ret and jno es stc mov jnp lret jns leave adc cmp jmp sbb imul fcompl push sub jno adc jno cmp xor mov add xchg and sub lds xor jno mov cmp daa and xchg arpl jnp jb data16 incb (bad) or sbb loop divl out mov ret dec xchg ret add mov lret jmp mov pop imul pop sbb push fdivrs add cld add and mov mov cmpsl jle fdivrs xchg test xchg add imul js and xlat test jae fdivs jmp roll imul add repz push aaa add push jno adc mov jno adc loope data16 arpl mov andl adc cmp mov mov test push jno adc popa xlat add mov sbb icebp gs lret push jno adc repz js push pop pop xchg xchg jecxz addr16 adc push push xchg fs push sbbl mov xlat jne ja pop xor jns jae jl imul jae pop pop xor gs push xchg or repnz sub jbe stc vandnps les stc out mov rol add sbb notl xchg or push add scas mov sbb pusha push fwait or out cmp mov sub adc xchg push js stos mov fwait xchg out adc popf pop pop jbe in ja and rcll mov sbbl push pop repz imul adc pop cmc mov or cmc mov xor xor popa push popa popf xchg push popa daa xchg push push jbe add cmp xchg xchg les scas jno push rcrl pop aad jne pop xor sbb jno cwtl jmp popa arpl xor inc imul mov jmp dec mov dec mov cs call js stc xchg pop mov jnp mov shrl cs push pop inc int3 add inc leave push push pop dec (bad) sub mov jnp (bad) mov sbb sub enter push xor cli int push adc rorl popa xor call js mov mov pusha dec rorl sbb mov ret test insb cmc (bad) cmp xor push inc jbe lret shr into in in loope dec sub inc adc popa rclb data16 sbb arpl rcr push push rcll hlt test mov add cmp inc dec xor or cmp jo or jbe insb push loope mov shrl and iret sbb add dec push jae mov sbb or cmpl lods adc inc loope xchg ljmp push mov inc mov inc les add aad adc (bad) or and and jbe scas or lret push add ret insl cmp (bad) sahf add movsl arpl lods orb in stos adc xor ficoml pop aad lsl mov fiaddl add jo stos push lods nop ss mov movsb sbb inc gs sbb imul and cmp jo jno push and push push or stos mov adc ljmp rorb sbb sub or push lea pop icebp ror pop lods inc stos mov adc aad dec xor inc dec sbb push or (bad) pop inc addl push xor outsb push or fstpt adc push inc push bound lea in add rcll adc stos push or pop jecxz test add arpl sbb jbe dec xor mov stos sbb hlt lret (bad) scas adc mov jo das out inc test stos les ret stos mov pusha cmp loope sub inc and loope or add test push outsl mov mov stos adc sub pop adc push xor lds orl lret push out push dec mov dec test push aam int3 add clc sbb in sahf or test sbb mov mov aad rclb mov dec aad push mov xor sbb sub lret inc mov iret mull mov mov sbb and scas daa test stc pop inc push scas adc imul ljmp xchg jbe ss inc push inc mov lods (bad) cld jnp cmpsb and movsb mov sbb cld (bad) cld stos repz in (bad) cld stos cld loop add loope xor inc inc inc insb adc sub mov mulb mov mov sbb lea inc mov stos roll xchg inc je cltd mov inc repz inc inc aam mov stc icebp inc imul inc inc test mov cli gs mov roll imul inc jl test inc jl jmp xor and mov sbb addl (bad) idiv mov ret mulb ret mov and cmpsl mov add xorl hlt aaa not in mov xlat cmp xchg inc push and push divl dec adc jbe pop rolb adc movsb inc adc leave out push dec xor mov add mov mov and mov inc sarl sarl js stos movsb jno lea (bad) mov sub lcall stc lds aam out sbb inc js cmpsb inc cld lcall movsb push hlt adc inc and clc or xchg aaa xchg roll mov int inc and sbb mov notb (bad) icebp addr16 inc icebp notb xchg (bad) icebp notb xchg xchg js notb xchg xchg repnz fildl mov inc xor cmpsl pop push xchg xor xor xor lret cmp push popa loop xor leave or int repnz in push adc loope jno addr16 icebp inc addr16 icebp dec data16 lods fsubs repnz xor push xor testb addl pop xchg lret ja add adc mov shlb dec push icebp inc mov lods jo loop test divl int3 adc (bad) jno imul mov add je xchg jno jge (bad) fsubs fwait push clc dec add fadds aad cwtl inc jge inc fadds aad inc lock xchg xchg jecxz xchg fadds fiadd lock xchg xchg ljmp xchg jmp cmp stos cmc mulb mov xchg out inc lock out jno pop and add sbb arpl jecxz xchg js cmpsb loopne xchg jmp call fisub cwtl inc data16 sub sub fist inc out sbb fwait sarl inc data16 push sub cmp fist jecxz sbb ficom cwtl imul imul pop pop (bad) fadds pop inc in ficom repz sub js in ficom test adc jno inc adc and in rcll repz and xchg xchg xchg jns repz and xchg xor sub mov push and sbb stos jne xchg xchg fs and jo xchg push int jns stc adc lret in pop lock jnp jge jb add fidivl jbe mov xor adc fiaddl out or adcl std xchg jns es repnz pop lret xchg xor adc shll inc repnz jp (bad) mov and mov lcall (bad) cmpsb inc jmp std lcall jns sgdtl xor and jo jl cmp push xor inc cli dec dec mov jno call loop or rorb jae jmp xor add sub jo sbb push les add addb or jns mov (bad) jae inc and add iret pop mov xor sub push std lcall inc cli inc (bad) repnz test mov or xor push jno and jno loopne sbb cmp jbe test popa jno jp jecxz xchg rcll stos insb add xchg jae imul rcrb cmpsb pushl push cld or nop cmpsb out jb add or xchg and sbb (bad) imul or push xchg xorl or test jp daa js js in cmp (bad) jle or or sbb mov jb push xchg jl or shlb popf insl call jge inc lea and jnp cld test cmpsb out je jae pop and cltd xchg mov ljmp xchg and jge dec mov jo test xchg fild mov adc ljmp xchg xchg nop inc dec daa roll rcl inc popa sbb xor lea sbb add pusha (bad) mov and imul push and or and lea cmp rcl mov dec ds (bad) xor (bad) xor inc or orl mov xor cmpsb (bad) pusha inc hlt (bad) aad sub rorb mov cmp test nop and or (bad) mov (bad) cltd sbb lcall jecxz inc and mov jge mov loopne notb mov and or and inc sbb and mov sbb xor dec dec ss pop mov mov mov and inc push mov dec add add sbb pop (bad) dec jecxz mov and mov test sti fdiv push mov daa sbb rcll cwtl fcoms add out xor xor inc sbb cmp nop movsb addr16 push cmp mov inc cwtl jo sbb test sbb mov mov ds iret mov push mov jge or and jno dec push or decl cmp push sahf sub push (bad) mov pop mov test movups jge mov sbb jecxz xor mov or mov arpl mov add bound popf popf sub push mov push sbb or jne mov mov add mov inc pusha and xchg xor clc xchg scas sub xor adc cmp stos inc mov inc and add sbb jno rcl or jne xor inc pop mov inc cmpsb out or inc enter xor dec aam and push mov lret jmp push std inc lea jg push mov mov sbb mov outsl test mov in or nop mov mov inc and cmp (bad) and sbb movsb sub pop bound inc pop mov add cmp inc pop sbb xor flds popa cmp cltd sbb add mov (bad) popa cmp mov cld jb sbb fs int and insb xchg adc xor inc imul jmp mov inc inc scas ret dec mov inc enter and mov dec pop jo sbb dec addr16 and (bad) (bad) movups xor aam mov (bad) mov adc mov add and test mov hlt test mov in xchg add dec or sbb mov pop icebp mov add adc jae xchg jg mov jne cmc inc sbb add icebp or sbb inc insl movsb inc xchg das dec mov adc sbb sbb mov (bad) icebp add les mov lds test jp fbld adc les push (bad) decl rcll rorl outsb sahf movsl fildll test hlt add rol pop dec (bad) and add dec stos mov out sub xorl add mov js push sub or addb je test dec mov pop and push push das add mov mov inc jb inc cli inc ss pop test ret sub mov test fisttpll sbb loopne jg cmp scas inc and (bad) iret xchg xlat add pop das mov pop sbb in cmp sbb cmp lahf sub add adc (bad) sub mov push adc sbb xchg sub ret and mov lds test popa arpl rclb jp mov xlat mov fsin shr pop sub dec fsts test pop mov fnstenv add notl sub mov icebp dec mov mov mov fsts repz adc rclb push pop jns lds pop or push stos mov dec pop es jno mov ret mov out push enter mov pusha pop popf adc xchg push inc inc je,pt xchg mov test pop mov push andl pop cmp repz les push dec popf adc push adc into mov rorb mov pop je or es inc xchg mov imul mov inc push mull fwait sub es push (bad) or es pusha (bad) mov scas mov int3 push xor pop inc cld fcoml fdivp lcall cltd fs insl scas jnp outsb cs push ret add loope xchg mov add mov nop test add jmp in (bad) stos cltd cmp jg shll pop pop pushf dec (bad) (bad) test add jo push ret mov ficomp lods lret inc or adc dec mov test sub je or or fisttpll std outsb stos xchg sub add test xor test daa mov adc xchg stos loopne mov xchg rclb aas cmp ja loope aaa movsb es mov inc cmpsb jns push out or stos movsl stos mov jl sub aad aad jo,pt mov sbb imul xor je mov lahf push pop jb add stos xchg roll cmp sub adc (bad) scas jnp pop xor jae mov (bad) mov sti cmp xchg or ret gs fiaddl dec adc cmp test mov push sub aad sub mov xor (bad) jns stos sub push adc imul test rcrl fsts add and mov inc push dec adcl inc rcll nop mov and push jns and and test popa push add push add push push adc daa in aad push fdivl add rcrl and and push arpl sub in fisubrl fisub inc std push cltd inc mov push push sub call inc data16 sub push fstps inc sbb fisub stc pop or cwtl sub pop xchg gs js and sub jecxz subl and xor xchg xchg adc inc push mov cwtl fnstcw sub cwtl and cmpsl gs data16 test sub clc dec fsubs lods test gs xchg stos mov idivb inc xchg std imulb lock js (bad) in xlat in in loope mov inc mov loope idivb leave push mov xchg mov pop inc data16 pop mov inc mov pop cmp jmp cwtl sub popa push clc inc daa xchg add and push ficompl clc cltd mov cmpsb adc in mov and js data16 push stos js mov enter push xor inc loop lret fisub lock pop cmp xchg mov lcall inc out js and dec cwtl sub (bad) pop adc mov xor push or push adc in call dec inc mov and js jae push stos js sbb enter push xor inc loop lods imul or mov pop cmp jae and cmp jbe repz cwtl push js xchg and and and test add inc sbb xchg icebp push outsl or (bad) mov mov push mov std call inc pop inc mov and js push jae push stos js sbb enter push xor inc loop lods imul or mov pop cmp cwtl sbb lcall repnz mov adcl leave cmp or xchg cltd dec sub daa add pop mov and sub sub loop pop mov jmp loope pop je ret bound push adc sbb dec mov xor sbb rcll popa push push in mov jmp andl movsb push sub inc sub xor popa push add inc dec and inc xorl dec loopne daa in jbe adc fisubrl in fdivl pop int3 enter jae and pop xchg cmpsb movsl es in xor jecxz xchg adc cld sub push pop loopne xchg add xchg mov (bad) stc pushf xchg inc xchg aam (bad) mov stc pushf (bad) (bad) xchg loop mov pushf mov mov dec cmp repnz ljmp test push xor shll mov mov or loop cmp data16 call stos loope mov lods push xchg les or insb add loop mov hlt mov loope jb in add out shr inc jecxz xor sbb mov mov sbb mov fistl mov fimul fimul fiadd ret push mov addr16 dec jb dec ret dec pop push push push add cmp xchg in (bad) push or inc jl ljmp stos push rcr out call into ss shlb mov jb xchg std stos jecxz and mov mov sub (bad) mov imul sbb mov dec repnz dec loope mov out mov notb mov movsb adc bound mov mov jge mov cmp pop xlat fs jno inc test inc fidivrl xchg mov pusha cmp dec cmp push lock stos int3 test stos lret jle stos lret lods jecxz adc cltd aam (bad) pop push cmpl push xor sub jno loope xlat add repz rcrl out loope stos insb inc data16 inc test mov nop and mov ret cmp push pop dec nop fisubl add lock icebp mov cmp xor dec icebp dec pop sub dec data16 mov aam out int cmp mov inc jp (bad) in cltd shrl and sbb sbb sub sub add or xchg (bad) cwtl dec mov lea subb pop sbb push dec jp imul fs cmpsl inc mov xchg in loope imull and jne add popa popa popa orl repnz js and xchg inc inc sbb or mov push push push pop cmp push out xor push inc dec (bad) pusha (bad) ret hlt adc add pop and bound or jo cld cmpsb les and ret push fxch test jno push and and sti mov rcr cmp push stos xor jp cmpsb mov push dec and and mov fwait cmpsl ss in xchg ret mov loopne inc push inc push mov jns jnp ss mov lcall and fwait mov (bad) pop and fwait lcall or cmpsb fsubrl rcrb sbb push push (bad) movsb loop jbe fisubl mov pop mov sub mov test push (bad) adc in js mov add (bad) imul dec mov leave imul test jae mov cmp icebp inc andl (bad) cmc je icebp inc es xor stos pop mov xchg jno push cltd insb roll dec (bad) dec lock mov cmc mov or gs shrb add pop push push pushf nop js push mov inc dec cld nop jbe repz insl mov pusha pop push push add aaa lds or les dec adc aam dec jb movsl xor cmp mov mov popa popa sbb stos dec lret stos cmp mov mov mov popa pusha add mov cmpsb add inc movsb loop xchg popa push push xchg add adc andl ja mov loopne jecxz andb xchg and cmc sbb sbb in add insl add imul ljmp sub push inc inc xchg push ret mov (bad) xlat mov mov jp add adc add popa loope add and add push std pop xchg adc add loop and add push ljmp xor jl and or jecxz push fcmovne repz push insb jns pop movsl sub insb pushf xor xor popa push add mov xchg xchg insl insb hlt insb nop shlb add add add cmp xor insl jp daa cmpsb adc std push test pushf in stc dec pop cmp xor add popa stos and in adc sub pop (bad) cli ja mov jbe adc movsb push cli xchg js les mov int3 les xchg adc dec cmp add jns add adc xor or popa push xchg mov (bad) cmc popa push push imul inc pop arpl jno imul icebp fwait inc dec dec pusha stos mov faddl fs mov rcrl imul jnp jae pop lods jbe or mov mov jl mov shrl cmp ret pop xchg jl aam add aam or gs xchg in daa add lret cmp sbb mov ret ret add add xor call movsb fcoml popa bound fwait arpl add adc and pusha data16 sbb xor jl inc test sub mov iret xchg sub ror movsb inc push add mov in add inc xchg stos adc mov pop inc pop sub inc push add dec or sbbl mov inc data16 flds or xchg push mov (bad) xor xchg push or xor sub rcl pop loop pushf dec insl xor fldcw mov and sbb xor je adc rol mov mov lret test mov loopne xor jne subl or add (bad) hlt bound sub cmp sahf sbb pop xor sbb xchg imul stos or enter stc inc and repnz push inc sti push pop pop add inc adc or adc push and or in and pop and divb bound out mov push cltd mov sub inc test aaa push xchg cmp push shrb or lcall in dec xchg push sbb cmova fild ret mov inc mov adc pop andl dec loope jp sub mov in lds add xor sahf or add push scas xchg lds cmp xchg mov mov pop mov or or and mov outsl outsl (bad) jmp scas daa ja lea sbb and dec outsb or adc scas data16 lcall outsb js mov loopne cmp pusha mov cmpl bound pop or fsubrs sahf sbb rorl push fmull ror push mov (bad) pop nop adc call xor push lock dec mov outsl sub and test or (bad) test repz lret sbb add and enter push push push int imul cmp (bad) push inc inc rcrl add inc push inc loop popa iretw lahf lahf lahf lahf lahf xchg movsb jle push pop mov movsb mov cltd mov mov repz sbb in (bad) icebp rclb mov pop inc bnd imul adc pop mov jo xchg xlat hlt shlb add fistl jae inc jbe adc cmp jo sub or nop xchg dec jecxz lods into lret mov mov dec imul and and (bad) push outsb mov xor mov fwait rcrl inc imul les mov cmp cmpsb mov or mov inc mov mov mov sub scas mov mov bound scas stc mov add cmpsl (bad) int3 fldcw mov sub xlat mov in and in xchg inc adc xchg pop inc repz xchg cwtl int3 aam sub (bad) xor cmpsb fnstcw (bad) sbb aaa insb lret mov aaa sahf mov ss xor adc push jl sahf xor out (bad) xchg test sahf xor pop cmpsl addr16 push push mov cmc ret decb shrl lea insb in xchg icebp dec jmp lds call sub pop and cmc repnz in adc jno stc icebp and popa shlb stc dec fmul movsb inc loop loopne ficom add push add mov cmp in dec fcompl xchg bound stos cmp mov pop (bad) adc hlt or mov pop xor xor cmpsl inc xchg nop mov push mov out jg bound mov adc imul pop inc inc mov repnz inc jmp inc xor lds pop test and imul inc push sub mov in adc dec add bound imul xor mov movsl fstps adc dec ljmp mov cmp add (bad) lock sbb inc test mov dec repnz inc xor jmp call mov rcl fistl jecxz jmp xchg add imul inc and rolb inc jae stos inc pusha mov bound idivb mov pop xchg mov inc pop push imul ss push xor aam fwait mov and inc movsl mov and push or mov adc xor push xor mov cmp sti rolb (bad) lock inc push dec adc inc stc xor leave test pusha lret dec rcl fistl jecxz jmp xchg add imul mov xor inc dec mov mov jbe push sbb dec sbb jmp add mov xchg jmp or add mov roll and mov xchg mov push or loope mov fisubrl push xor daa xorl dec ss sub inc enter mov loope js sti push hlt adcl addr16 imul push ret adc inc imul test add xor jbe cltd and mov add pop js andl repz dec bound push nop pusha mov stos movsl lds inc pop mov jo jae sbb mov xchg mov movsb dec (bad) cmp mov test dec xchg mov xor (bad) fdivrl (bad) xlat xchg mov sbb test mov in mov mov lds pop jnp dec test (bad) fucom mov out inc push test iret cmpb cmc sbb lahf mov int mov mov jp and pop inc push dec pusha out mov mov iret push and jmp ja xor arpl jecxz outsb dec sub imul lret or fimul aaa push cmpsl lods pop pushf push dec nop or nop mov imul add and cld mov inc in pop pop mov sbb dec outsb (bad) xchg lods movsl push imul mov or mov mov insb insb gs int3 fs (bad) cs ret inc cltd loop imul popf cld sbb sarl les xor popf cld sbb roll xchg inc dec clc (bad) lret xchg sbb roll inc mov inc or jl insl test mov push (bad) in data16 int cmp inc dec pop pushf xor movsb inc sahf cmp inc xchg xchg dec push xchg dec nop loope int3 test lea sbb les inc inc inc push dec jbe xchg les data16 mov inc jge int mov inc (bad) insl (bad) je les inc ret xchg sbb xor into andl jne ret xlat add xor cmp ret push xchg into repz rcll scas data16 pushf pop pop push imul xor sbb les inc xchg inc leave ds cmp push les int dec sbb and xchg ret cmpsb icebp inc or insl sub sbb fisttp bnd push outsb ja xlat pop inc test data16 sub or sub ret push mov outsl pop call in jae ret bound add lret pop or call push inc add popa jge or les inc dec and xchg mov je inc mov loopne imul inc movsb jmp and cmp push bnd push ss or loope lock dec imul lods sub cli clc mov les hlt xor jl add (bad) ja jns std push jb shlb ret inc pop dec inc ret cs dec inc inc ret mov sub sub xor push mov popa dec aam test loop ss loop adc gs imul (bad) jle jle jle,pt jle jle,pt ja ret jbe push jb ret (bad) lret xchg enter cwtl dec stos mov mul out arpl jmp ret add in or test xchg clc xchg xchg leave sarb ret pushf or (bad) sbb sub sub loop fs xor lods les out sub and jbe mov repnz aam repnz pushf stos jb push jo dec sbb call repnz pop push pop popaw mov ret cmp lret jmp push pop xchg nop loop cld mov adcl flds cmpsl sti call push out push add cli ds pop arpl rcll xchg push push in sbb popf mov lcall jo push push mov mov imul mov int3 and and push std gs ret mov and jmp jmp leave into adc xor stos xchg dec loope cwtl fiaddl loop and jno mov mov cwtl scas sub pop push popf dec es (bad) jp test and lret mull ret and shl cmc mull inc pop and (bad) test or pop or outsb push inc nop loop and ret (bad) (bad) jnp push fnstenv mov sub mov aaa aam cld repnz (bad) negb adc jnp or ljmp sub inc pop sbb push subl xchg loop add (bad) cmp xchg pop push int3 sub addr16 mov movsl push ret cld int3 mov mov mov jmp jle jecxz aaa push pop pop push jne adc es xchg xor dec fdivrs mov inc mov cmpsb mov ljmp lods pusha popf test mov jae sbb adc sahf lock (bad) cmp repz or clc adc mov (bad) insl mov inc mov mov out add out ds mov loop jmp into mov push mov adc xchg pop mov adc popf inc movsb mov fadds test or or and mov inc sub push or pop js sbb push sbb test xchg sub inc adcl stos sbb mov push outsb je in data16 cltd push sub pop sub and pop xchg adc cmp out repnz mov stos repnz mov je (bad) call das int3 arpl loop nop hlt xor or mov je repz data16 arpl cs adc fstps das push push jae and mov mov scas inc dec push int push add mov hlt xor (bad) push je cli (bad) into lret adc cmc or mov in pushf xchg je (bad) into push cmp jnp sub xchg dec lret js andl xchg mov mov addr16 imul and pop in lea nop in xchg cmpsl pop movsl or inc mov cmpsl pop sbb sub ja push andl sub push test nop mov inc out cmp mov mov mov cmp jns adc stc mov shrb mov test (bad) and test in js aaa adc add and push adc pop xchg test cmp sub popf xchg jg jne icebp fwait jo das and jl movsb mov mov inc or test insl rolb lahf mov sbb adc inc cmp cmp add sub (bad) jb jg test pop push pop test enter pop push arpl jle add sub mov adc sbb push paddb shrb inc jmp sarb jo and fs jg sahf sbb push push and sahf and xor pop aad pop push ret rorb outsl pop ja dec (bad) std cmpsb (bad) adc pushf mov or imul push push les add add or rcrl pusha pop adc sbb divl adc in movsl test jo movsl lea movsl addb addb add (bad) and rorl or mov nop or inc push ljmp sbb scas adc bound push mov fiaddl or xchg or inc (bad) and inc add or inc in mov mov adc test popf pop mov adc bound arpl mov cmp pusha and and lds dec adc sbbb pusha pop adc jnp mov xchg lea adc test rorb xchg add push add jne push xchg adc push inc imul add movsb shll adc popa cwtl cmc shlb adc inc sub ret xor subb or test stos movsb sub push xchg inc add push or mov add jmp push scas or or add inc cmp mov jbe push ret shl mov adcl aad add mov pusha push lahf or add push test add add jmp (bad) jmp or add sbb sbb (bad) addr16 or jl cmp and add cmpsb mov xchg dec add adcb aad outsb mov push xorb push inc cmp push or add movq lea jae jb imul push jb pop out lea pop xor scas push test push stc ljmp cmp mov jo inc fistpll jbe pushf and sar xorb mov xchg js mov ret scas dec enter xchg mov faddl lret sbbl and mov jno add cmp out std sbb push in and and clc inc loopne jmp aad sub in xorb and adc push (bad) shrl ss call cmp pop and mov xor xchg xor cwtl in xchg (bad) lea pusha push pop sbb xchg das push rcll push add cmp adc testl scas sarl xor std sbb divb cmp adc imul mov xlat pop addr16 (bad) shll dec loope inc loope mov sub aad dec stos mov mov int3 jae mov or mov lds insl push adc lods xor mov mov ret jo ret inc adc pushf jle fdivrs sbb in (bad) in xchg iret add push rcrl push adc xor popa mov pusha dec mov pop movsb enter das pop push int3 xchg sbb xor js dec addr16 xchg mov sub loopne pusha dec loopne mov mov (bad) xchg test dec repnz and call or sub push add (bad) int3 xlat cmpl (bad) push fwait test (bad) add ja xchg and xchg mov push jl fnstenv pop or cmp pusha addb imul pop adcl cli adc pop push and jle (bad) insb mov jne mov sub pop and pop inc std icebp pusha push aam or les push xor ret inc inc pop push add and arpl pop lds sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub lret sub in inc scas push leave lldt or or outsl (bad) lock adc add pop cld mov cmp popf mov jne jnp sbb incl push in int3 sahf lock (bad) mov push push in out xchg mov outsb incl push xlat xor jno jae adc push xlat cmp jno aas push fnstenv jne xchg pop adc push int pop jl pop mov xor jmp mov jb rclb jne jl aaa push out lds mov fcompl iret iret push ret aaa push ret cld aaa push ret fistpl ret insl insb imul insl insb imul ret insl insb push or jl or xor repz mov test add int3 fwait mov jnp imul pop jl pop pop xor icebp sbb iret adc push in mov xor ss push dec sub jle adc (bad) in mov adc (bad) in mov mov insl out adc (bad) fstpl pop pop jns shl sub jmp cmc mov sub cmp adc mov les mov lret sub pop xor movsb mov sub ret mov insl lahf pop mov inc (bad) mov mov outsl pop mov mov into fucomp mov xor pop xor jnp sub (bad) repz sub int push aad adc sub lret xor sub lret sub lret sub lret sub pop pop jmp bnd mov and lret xor fldcw pushf and mov lods xchg daa or ja lret cmp (bad) adc pop dec orl int subb sub lret sub add mov lret sub mov into push in and mov xor fwait dec mov and fildl xor jmp inc xor test cs mov dec add bound xchg (bad) sub inc mov xor ret test (bad) imul lock xor je nop pop mov sarb loope mov sub sub dec dec data16 push pop pop add lret test adc inc xchg pusha push inc adc mov js and add push add pop es jmp and add sbb push xchg test ret xchg jl adc in mov xor cmp xor pushf popl cmpsb cmpsb push cmp je xor and mov jl add mov and xchg mov push sub xchg mov xchg sub and addb bound daa xchg js jl inc or hlt mov xchg push dec jb pop or sub enter xchg daa mov sub ja and js and or xor daa lcall adc icebp push pop xor mov push or lds ret add add cli cmp imul xlat loop popf add push or sub adc mov add pop or sbb mov inc xor (bad) or dec jae cmpsb sbb (bad) pop sub push or ja popa inc inc mov dec iret pusha mov xor lcall push add and repnz dec push pop rolb dec cmpsb adc pop test or jo push pop cmp push sub testb pop fmull add xchg out sbb adc sub scas or les mov imul xchg add push test fwait mov inc adc dec nop and xchg cmp adc sbbl cmpsb push adc add enter xchg jo outsb fdiv scas push add (bad) and test addb and add and rolb add (bad) int3 popf or popf add mov adc lds sub jmp add inc sbbl pop xchg add add xor outsl dec adc fnstcw xchg adcl shr test dec push mov adc inc push dec push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg mov fcmovb cmp mov and aam in test dec (bad) xor xor adc popa dec xor jne push jne push jo or push (bad) sbbl popf push sbbl inc into stos inc stos or mov jnp and aam in test fistl mov dec insl pop push jne and xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg cmpsl insl inc sahf fimull ss jge popf daa mov dec insl inc sahf fimull push not aad sbb push aad sbb push stos or stos or stos or popf push sbbl pop or sbbl xor or adcl or add jge ja pop or and xchg xchg rcr xchg mov and aam in test fistl mov dec insl inc sahf fimull push not dec in test rcrb (bad) xor xor push or mov push or mov xlat inc lods push mov shrb lods push mov shrb lods push mov shrb lods push mov or inc lods push mov shrb pop or and xchg xchg rcr xchg mov jp call dec pop or push test bound mov push pop pop imul dec adc mov mov pop fcmovnb imul dec mov push inc inc inc inc dec in adc clc in adc inc inc inc dec adc inc fimull and insb push jl nop jne prefetch pop sbb (bad) ja mov inc jg inc dec lods rolb jg aaa jg jns jg dec sbb fiadd jb mov add out mov clc nop inc inc addr16 mov xor jmp std dec cltd inc sahf aaa pop insl cltd nop insb lahf xor jle sub pushf lock inc inc aad jb in addr16 outsb add xlat pop cltd cwtl xchg mov loopne adc pop cltd sahf addr16 inc (bad) or xor mul or cmp loopne (bad) or dec add mov cmpsl outsb jb call negl cwtl xchg std adc scas mov sbb sub xchg mov xlat pop cltd pushf ds ret inc (bad) or xor mul or cmp stc loopne (bad) or inc sub add jns fcomps pop (bad) push stc loopne (bad) jns stos add jns fcomps popa mov cltd xchg push cltd xchg test lahf add inc aam js hlt int xchg leave mov fldenv outsb scas daa out int xchg leave lods loopne test imul (bad) js dec jo inc shrl push addr16 stc std pop pop cltd xchg push mov xchg iret (bad) dec stos jle or pop in imul and xor sub cmpsl fisubrl xlat jne (bad) or xor mul or cmp (bad) pop cltd xchg in mov loopne lret or cmp es loopne (bad) or xor mul or cmp sub in mov cmp push pop xlat pop cltd pushf ds ret stc std pop pop cltd xchg test lahf push pop xlat pop cltd pushf mov mov lret or cmp es loopne (bad) or xor mul or cmp daa je scas daa out pop push scas cmp pop pop cltd lahf add inc jl addr16 sub add test dec stos es loopne (bad) js clc fs jns stos add or addl xchg rolb add rorb xor sub rolb inc add test or loope add and ret sub adc jb test inc add sbb adc ror pop lcall xchg add mov and jmp dec test cmpsb int3 and popa or imul inc push mov or xor push hlt xor and or gs add adc inc push mov sub pop mov aad sbb lcall test mov push xchg xchg push pusha aam inc es pop mov and (bad) mov push xchg mov add sbb xor es pusha roll push in inc push pusha and int3 add xchg in add cmp sub sub push add and daa add xor adc push and inc int mov add or sbb insl add push adc xor sbb in pop pop sbb mov adc test js sbb push imul push mov add add test sbb (bad) push cmp xchg lret dec adc adc add adc inc addl inc addl xchg and prefetchwt1 or add adc inc addl inc addl inc addl inc addl inc addl inc addl inc addl inc addl inc addl inc addl inc addl rolb push test push in and dec test cld and jg adc sub lret add popf pop les add mov cld dec sub or fwait add and ret fisubl ljmp add and push rorl jg test mov sub adcl xchg push or test push lret test cmpb mov (bad) mov stos adc inc mov add dec or aam test push (bad) mov inc push and jg inc pop fs mov dec or xchg dec adcl add cwtl ljmp add cwtl ljmp inc insb add push or pop ret push lods (bad) (bad) or std cwtl ljmp test and stos test loope pop or mov dec adc push push and stos test loope enter pop mulb mov subb xchg inc xor jb pop inc add push enter gs or int sarb ret bound mov or (bad) testb push cmp push mov push xchg dec and ret push sbb push outsb adc add cmp loopne mov add or sahf add flds and stos inc ja pop inc mov jg enter and dec pusha pop or add xor push test add (bad) adc adc xor ret popf add inc adc shrl add push and or or push movsl cmp mov cmpb add xchg add rol sti add sbb xchg pop (bad) in lret add push js stos sub or mov push push push (bad) out es dec mov pusha cmp out adc fldcw push dec lea dec xorl mov adc xchg jbe push jbe add and adc cmp (bad) shlb xchg (bad) cli test lret (bad) pop inc jo or test and test push add mov xor js test mov add add xor (bad) jb lods mov cli movsl subb pusha pop jo test subb mov or dec inc in gs add xor xor ret and inc adc and ss or or imul cs pop pop aas and push jle mov lods cwtl inc adc mov xchg mov (bad) mov or or jecxz xchg sbb push adc add push adc lcall in and adc push and inc sarb pop add nop adc and inc lret rolb adc fsubrs push adcb mov and test or sub add add add mov push in pushf add fdivp imul mov or cwtl lret and push stos fdivrp push mov add jnp pop (bad) add sbb aas iret repz sub in lock or jg rorl lods xchg mov lock sub ret push fildll jl aaa mov pop mov ljmp outsl xchg pop jl mov movsb jg push test cwtl pop sahf pop divl inc pusha mov (bad) and loop out cwtl mov roll jnp or nop jno test sbb sbb scas jne sahf das cmp add mov cmpb sbb or inc lret fdivrp adc add inc mov inc dec add loop pop and movsl in push mov sahf adc pop inc leave popa jns mov xor pop jecxz,pt jle popa roll popa shr jmp and repz push shrl xlat and lahf cmp imul repz fimull jbe imul jnp cltd iret sbb inc das je out lahf cmp (bad) add ret cmpsl lret push jl outsb add jmp fildll mov outsb fstl pushf xchg scas jnp in jns out test inc cmp mov adc push mov lock (bad) out dec and and mov rcr dec cmp scas and mov cmpsl pop push jae jecxz push mov idivl jp mov cmpsb imul mov (bad) lods in mov das dec pushf int3 cmp pop sub sahf jno (bad) cmp and les fildll hlt jns addr16 imul cmp aad js enter inc mov jae shr jo adc out aam fcmovnu cld mov jae out mov imul adc mov mov cmpsl and daa inc mov stos (bad) rcrb and push (bad) mulb adc arpl mov cmpsb notl ljmp (bad) idivl mov add cmc jo scas scas sbbb mov xor out push mov mov addr16 jmp sbb sbb inc mov cmp add mov out dec enter push idivl dec cmp push pop mov mov mov xchg inc pop loop popf out jne dec push enter data16 outsl and dec scas push mov lock mov aam mov testb pop fsubp cmp or fcoml add sbb js enter jb mov pusha iret mov cmpsb xlat mov cmpl cmp mov in cmp leave jp mov out lahf xor jb add mov pushf or mov mov scas dec neg sbb push fmul jp fistpll push sbb test enter push es mov sbb out mov (bad) (bad) mov and sbb js iret jnp push sbb test jnp sbb or mov popf or xchg ja je mov pop dec in stc pusha sub xchg push sub cmp jp enter stc (bad) xchg js mov out into mov fadds cltd iret push fmull mov (bad) push call fadds cltd xchg ljmp mov sbb cmpsl cmp jno fadds push (bad) pop push push cli xchg dec mov aaa in (bad) cli xchg jno xlat push or sub inc add nop fs iret out lds inc scas fist jg xchg outsb xchg pop jl ret jbe jnp jns out xchg or bswap out jnp jns fldt dec mov cwtl out jnp jne nop fisttp jbe mov out je jle mov out in mov popa shr pop jmp ss fsts cvtdq2ps mov mov jge cmp add mov inc add mov mov jns jne outsb or into mov mov fptan jno mov adc push pushf adc push jmp mov cli jl jno jae lahf cmp jb in push outsl xor pop add jp insl jnp cwtl jno les mov popa aaa mov icebp jns pop xchg pushfw inc jae ljmp js ficomp cmp add stc int3 ret xchg jne loop cltd out pop dec and mov add stc nop out bound pop pop xchg mov mov (bad) dec sub jno mov xchg je loop test cmp sarb mov jge push in or lods fistpll mov mov adc jns cmpsl inc stos loope adc pushfw inc jae ljmp stc inc jecxz push mov loop (bad) jl adc jge loop cmpsl sbb mov mov cmc stos fdivp mov lds les push lds les mov add and jne xor xor scas mov mov or bound std inc adc lds les sub and pop rcrl push fcoml dec inc mov addr16 pop cmp inc ljmp or pop and mov in scas mov sbb or lret scas inc nop inc popa stc enter (bad) push das loop fildl pop jle in cld sub push fidivrl pop popf or pop and xchg icebp dec add out aas pop dec bound jl add sbb adc or mov adc add sub and (bad) loope and or sub loop test xchg mov repnz sub inc push ds gs push sbb test mov jne repz xchg inc adc jb in push clc jp (bad) outsb sub or xchg jp lret clc movsb sub sbb out (bad) roll outsl lds inc out int popf inc push in stos sub in andl ja into lahf xor mov sbb pop cmp inc mov (bad) mov ja lods mov into ds repnz in test pushf (bad) stc cmpsl add out mov xchg je nop mov jge ss mov xchg mov or lds pop mov jb mov fisttp daa cmp insl xor lret cmp das mov adc mov nop scas dec dec daa cmp insl xor adcb adc imul inc aam idivl imul cltd jle jge int3 dec iret xor sub mov js stc out outsl jnp sahf gs push ljmp daa out jle lock call jns jmp negl loop test subps and aam adc mov mov leave mov add out enter int3 repz scas daa sbb push pushf mov iret pop popf cmp or out mov add ljmp cmp test popf push jne in dec jbe add pop (bad) hlt mov xchg aam and repz inc adc mov push test jo lahf das pushf jno nop xrelease inc mov sub aad add fild mov cmp push add (bad) mov cmp das aam out cmp inc or lock (bad) fldt jno mov loope or inc xor sbb nop mov inc and fst inc popa stc or (bad) add inc popa stc or mov adc inc cmp fldl pop nop cmp in jle mov stc or mov (bad) sub enter jne pop jle ss nop mov repnz ret repnz adc les nop mov cld test xlat xor push mov das loop pop scas lea push adc ljmp cmp fldl xor sub jnp inc dec mov rclb das loop pop stos into test jg xchg jp cltd jg xchg cmp lock adc outsl adc inc outsb xor inc and push flds pop lds out pop into lock sub push fimull (bad) sub mov fdivp mov out es jnp push idivl popl or nop out jnp (bad) dec mov mov out and cmovb xor jl loop pop mov xchg idivl mov mov mov mov fdivp mov pop pop idivl cs outsl jae mov movsl out (bad) jnp hlt mov idivl cs jnp notl push fiaddl mov jnp notl and inc push testl jnp idivl mov xor or jbe cs jnp adc and jnp push or add addr16 or and sub jb mov xchg xchg mov dec (bad) hlt push or and jp scas and dec js test test cmpsl movsl aaa adc pop mov hlt pop or push and jnp and bnd add xchg jns rclb inc out inc mov jnp idivl (bad) adc adc inc inc push notl inc adc adc or sbb mov add hlt mov les (bad) mov push mov xchg mov test das jno and and and (bad) movsl out and adc and test das jno and jnp xor das jno and adc jl or faddl add and jnp notl and inc push notl mov jl or faddl fdivp adc inc pop loop inc pop mov and and adc xchg testl add mov add sub (bad) dec mov add add mov shrb fs (bad) dec mov je or jnp nop push mov out je or sub xor adc mov test dec fnstsw (bad) inc pop std add jnp rorb fldl mov das jnp jmp inc mov push frstor xchg testl add out addl je or dec mov mov out je or out jnp call fsubp pop out je or jnp idivl sbb inc out jnp out mov out add mull push dec and imul mov out jnp idivl mov add jnp idivl mov shrb and das jnp idivl mov jecxz subl mov inc mov idivl and adc push and fdivp mov jnp jecxz mov jl in sub outsl jnp idivl add inc pop idivl mov jnp scas movb in xchg xlat mov mov add sub mov fdivp mov jecxz jmp mov pop pop push ljmp mov mov aam and out jnp idivl mov xlat mov lcall test jnp idivl dec es movd out jnp idivl dec lock nop and mov mov (bad) inc popa sahf out int idivl mov dec es movd push fdivp mov mov inc inc sbb sbb idivl mov dec cmpsb sbb ja out push mov mov (bad) inc aaa inc mov inc or sbb sbb mov mov push and push sarl jge in out jnp idivl mov das jnp scas cmp insl xor mov mov and clc or into out out jnp idivl mov cmpb or sbb adc idivl mov lcall roll mov mov mov add mov pop or mov out jnp idivl mov das jnp mov jae scas jnp idivl mov add push mov dec loope (bad) in out jnp idivl mov aam and out jnp idivl jnp negl fisttpll addr16 jecxz movsb xchg idivl fdivrp add xlat mov pop or out shr out jnp idivl mov (bad) fdivp mov mov add mov sbb frstor out jnp idivl or sbb movsb push addb fdivp mov mov fdivp jo pop or fcmovnu idivl mov or into out fcmovbe mov mov adc or cmp sbb insb mov jnp idivl (bad) inc outsl jnp (bad) lods push sarl jge mov idivl mov (bad) add jnp jnp adc mov js outsl jnp idivl mov adc mov (bad) subl fdivrl fdivp mov mov pop mov xchg loop cli loopne outsl jbe sbb jnp mov fdivp mov mov pushf inc fcmovnu sbb add xlat mov xchg mov idivl mov das jne or out jnp add idivl call ja out les je div mov dec mov loopne sbb add idivl mov dec sub fsubr pop fnstsw out jnp idivl cwtl insl loope inc mov push fucom cmp idivl inc and enter popl das jnp idivl mov jg idivl xchg testl mov mov js shrb xchg out jnp idivl dec dec fstpl adc or xor dec mov dec dec fnstsw (bad) inc add arpl sahf add add sahf jns sahf jns sahf adc adc call push jns sahf jns sahf jns mov js or jns loope sahf push add add sahf add addb orl out add js add es push jns sahf js js adc jns sahf add add sahf jns test pop sahf sub pop out addb dec out jns mov aaa sahf jns test xchg out jns mov sahf js mov jns sahf adc (bad) out jns mov test ja jns sahf in cs test sahf jns test cwtl cwtl dec jns,pn sahf js mov out jns xor loope out jns loope data16 sahf jns in inc dec out jns sahf jns sahf jns popa dec add push sub or lret (bad) lds repnz dec jl mov adc mov (bad) test loop loopne dec cmp out adc les mov dec icebp adc jl push sbb and es addl adc mov dec adc sarb insl or add call or xlat cs bound jecxz orl adc adc mov dec xchg adc stc mov mov mov dec and jb add lret mov dec mov and adc and test icebp dec adc mov cs adc rorl lds push add add cwtl mov loop xchg adc loop cs clc mov mov lea adc lahf cs push add mov push push fisubl cs adc lahf jns,pn mov or mov mov aas jnp out ret test mov jnp mov jns popl xor mov sbb adc bound daa adc add dec or bound push loopne dec out lret addl std out lds loopne dec out dec test dec outsl add mov xchg rcr pop add sarb nop nop jnp mov sbb jp mov out test (bad) jmp ficom pushf scas mov sbb xchg xchg scas lods sbb push ds ljmp sbb mov pop pop test bnd push test insb pop fwait sub daa movsb jmp out mov mov sbb pop mov push sub ljmp lds push (bad) and sub mov sbb lock mov adc mov fidiv int3 push nop sbbb insb and cmpsl cmpsb cmp sbb and (bad) lea mov mov pushf insl les push (bad) cltd pop and es lcall stos int3 push in cmc test ds inc das int3 enter xchg outsb add mov sbb pop test inc jno mov jl pop or sub dec sub insb dec and pop jp sub sbb lods movsl sub mov push adc mov lods movsl lahf mov jb sub subl ret (bad) leave xchg scas jmp pop pop test xchg out pushf push sar int3 andl inc fnstenv fiaddl jno bnd out repz lods stos stc and or inc push or pop fwait lods or ret sub pop add add pop xchg push pop or cmpsl adc pop lret add enter inc or cmp bound arpl jl scas test push test sub fsubl lcall jo sbbl out dec repz out mov push addr16 ss push or mov js stos in jg jmp nop mov cmp fidivrl mov xchg add dec jns rorb out orb inc in mov dec cli sbbl clc cmp cld pusha xchg mov cmp in mov in cmp jp ficompl jmp mov cmp adcl mov or pop add mov stos data16 inc pop mov stos data16 cld xor sbb xchg out mov mov cld add and sub mov sbb xchg stos mov mov mov jp leave lret push test (bad) fstpt adc push (bad) ljmp dec sbb data16 cltd cld cmp adc test dec mov nop mov or push cmpsl leave add int3 jp pop lret nop push stos xchg pop sub dec sub int push mov inc out sbb jmp mov mov sub dec sbb sbbl jo pop mov dec dec or sbb mov lock test (bad) xlat cmp inc cmp sbb ljmp sbb sbb dec add mov mov nop xchg sub mov test dec add cli dec daa ljmp icebp fsts pop cmp or xor sub jmp ljmp fcmovnb dec sbb loopne adc inc sub (bad) (bad) (bad) rolb test aaa mov nop push mov add sbb loope cmp mov push mov mov jmp dec adc test mov leave add mov in stos xchg mov sbb gs xchg sub nop jge aaa mov jae dec sub int3 xor jmp cmp xchg sub mov adc mov jmp movsl xchg sbb dec imul xor je xchg add and mov cmp inc xchg mov jno fsts jb nop dec xchg pusha or jns imul and lcall pop xchg cmp insb out push inc imul cmp loopne cmp sbbl xchg mov call push dec mov jo mov in push lcall int3 inc sti pop jo dec pop leave mov adc loopne sub cltd add xchg push lcall fildl loope cmp sti call mov and push lcall imul adc push inc jp fs lcall push mov mov sbb aaa inc pop aaa push imul insb sbb push dec mov xor cmp lcall inc lcall sbbb xchg mov jns aad sbb cmp lcall or andl cli mov or or fisubl or sbb mov sarl rorl and pop lock mov jl sub nop test sahf jp and mov add call sub mov sbb adc pusha mov call mov cmp icebp fidivrl fdivrs ljmp jp inc sub adc (bad) jb call mov jns inc push (bad) dec addl or cmp pusha xchg jl sti pop jo adc xchg (bad) dec and adcb in mov mov inc or or rcl jmp mov orl adc adc adc shll cmp mov push mov arpl jecxz xchg push cld dec das adc sbb xor push xor dec adc mov adc test dec les cwtl les pushf xor sub sub sub cmpsl inc loop mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov adc out jnp idivl mov mov mov mov mov mov mov push stos cmc pop stos aad scas push ljmp mov imul idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xorl mov jnp idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov stos aad scas push ljmp clc repz imul scas xor cmc out jnp idivl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov adc popf adc das jnp int3 fcomps out jnp idivl mov mov mov mov mov mov mov mov mov inc notl mov mov mov mov mov flds mov fdivp mov mov into idivl mov (bad) idivl in fdivp mov mov out jnp idivl mov mov mov mov mov mov and out jnp notl mov mov mov idivl out jnp mov xchg mov inc dec fdivp mov sub aaa mov and fdivp mov mov mov mov or jnp push mov outsl jnp idivl dec loope out jnp push mov mov dec fsubrl add sbb mov maxps mov jnp sbb xor jnp out adc idivl pop idivl mov divps mov mov aaa mov jnp idivl adc mov mov sbb mov pop sub mov pusha (bad) call xchg mov pop bound clc sub loopne not lret shll sub fdivp imul frstor mov xlat mov idivl scas jnp in xor cmpsb mov out jnp (bad) xlat mov and out pop rcrl fdivp mov mov mov mov mov mov sub idivl mov out jnp loope out jnp movsl out jnp idivl sub idivl mov sti jnp idivl out jle idivl mov mov mov mov mov mov mov mov mov mov mov xor or (bad) pusha jl sbb pushf pop add clc xchg mov push push sub sbb or je adc fs test shll or test testb pop mov dec fsts push insb (bad) mov inc xchg fs les inc test pusha xchg mov adc cmp or or add sub in fmull roll movsb inc or subb push xor sub xchg mov mov inc add idivl mov out jnp adc adc mov mov mov mov mov dec out jnp idivl mov mov mov mov or add inc and mov mov and test inc mul add inc idivl leave mov adc in lret mov mov jmp data16 clc dec inc cwtl push data16 clc dec inc cwtl push pop test push loope lds push add or inc sub mov insl pop das test xchg in shll inc mov and inc mov int add repnz mov mov addl mov insb addr16 mov and mov cmpsb mov ret aad lods inc das mov mov mov ret or test adc loop inc pop push mov xchg jecxz cmpsl hlt fistl jo or cmp sub fmull sub and enter inc cmp mov and mov dec and sub inc inc popf pop je or fstl popf or pop inc mov adc pusha inc jbe xlat or or sbb or (bad) push fisubrl movsb shrl clc xchg lds push roll and fdivrs cld es mov cmpsb mov popa mov sbb inc pop push mov jno inc mov pop adc jne lds xchg pop imul lods rclb rcrl xchg out dec mov adc pop jle fildl (bad) jo movl (bad) push (bad) jbe pop data16 cli dec fisub data16 gs mov xchg xor and gs inc arpl shrl sbb in imulb scas cmp mov aaa pop jge add repz popa cld roll fdivrs ds jo (bad) mov pop pop push (bad) ja in out add sbb roll pop gs pop gs pop gs pop gs pop gs pop gs ss pop mov push in leave cli fimull pushf mov (bad) popa add lods adc adcl test jo cmpsb cmp xchg pop sub xor gs jo xchg and enter pop pop imul int cltd fs ficoml loopne cmpb mulb xchg cltd xchg jnp (bad) dec pop push sti inc mov or lock sub scas or sbb (bad) mov cwtl mov add sbb js dec fistl or sub pop inc or or xchg fdivr inc add lcall fbstp fs ret xchg adc test xchg jnp mov test mov inc push lea jne sbb fptan fmull dec pop dec rol or enter sub and xchg in sbb mov dec es mov xor (bad) jo mov or scas push fisubr ret jl int3 jecxz jno adcb and lock dec sbb add cmpsb jne and je repnz loope adc loope mov fs adc lahf cmp or or mov add dec nop rcrb adc adc jge and iret push and in sbb jns pop cmp mov rcrl stc mov sbb rcrl fsubp fwait adc in test sbb mov cmp sbb xchg adc xor fwait addb shlb cmpsb pusha cmpsb aad addr16 or out and cmp int xor lock sub std jle mov shrb or mov sbb ret (bad) jne cs int mov fwait pop add mov push and mov mov je jo js inc mov pop test push mov mov jge js adcb dec in adc adc or adc dec jo xor (bad) shrl push arpl aaa ja into sbb mov data16 xchg aam mov cmpsb mov scas xor cmc call repz outsb sbb inc test pop mov mov lods sub xor and sbb and add movsl popa pusha mov push push roll rcrl and cmp xchg mov jbe pop fwait cld add movsl (bad) mov arpl xchg pop scas adc imul pop outsb push xchg push ret dec in imul fiaddl sti mov lret js pushf xor fldl jae in rclb popf ret insb inc fnstcw cld ret test je lock jecxz push mov pop adc movsl dec rcll ljmp fcomi add xchg sarl mov mov fnop mov call fisubrl pushf roll mov push add xchg add push nop rclb inc arpl add add fsin (bad) jnp or andl cmp inc call frstor sub push sub push lock sahf push mov sub inc and rorb fisubl movsl test jle rcl jb and mov das and xor mov lods pop xor addl (bad) mov (bad) xor and pop jns fsubl sbb pop addb (bad) xor pop adc lret outsb mov adc (bad) (bad) xacquire xor rcr addr16 and jo rcr inc frndint shrb flds (bad) pop xor inc cmp rcr rcl andb enter xor push (bad) repnz xlat xor mov flds sar add inc loop add (bad) adc loop mov loopne rolb xchg xor add inc lock call je loop jmp and in out sub ror dec push jnp jb pop aam ljmp (bad) pop inc inc mov dec xor enter ljmp lock daa mov jo es pop mov rcl push push (bad) lret cs push sub aaa idivl xor nop push adc cmpsb mov and jmp fdivrl inc push pusha jmp fcompl mov out or (bad) lock insb les dec lock sub sarl mov (bad) mov mov dec and enter inc inc sub loop jno mov pusha rcl stos bnd adc fidivl and push js adc in adc dec mov popa mov sbb dec sbb push jb xchg (bad) pop pushf pushf add push push ja push jo xchg push faddl lret mov or gs pop and lahf jbe mov sbb test xchg popf cmpsb push adc pop adcl inc add mov movsb jmp loop sbb out mov mov aam inc rorb push movsl push inc inc dec dec sbb jns (bad) xchg aaa push fs repnz and pop pop fdivr pop inc dec xor ss inc mov fcomps sbb stos dec arpl sbb sub mov sbb xchg ret cmp into inc repnz lret adc pop or and push fstl stos jno and sub xor jecxz and lods in inc cmp rorl divps mov mov es imul in push adc pusha xchg and jg jne popf (bad) stc push cmp leave push stos push pop or jo andl cmc rolb mov pop scas jno data16 sub and sub sub pop sub les sbb push push iret adc sbb and xor lock xchg ror xor mov mov les jo loope sub xchg mov inc outsb sbb mov cli out or cmp sarb jmp mov clc jl mov adcl xchg mov jno lods jnp inc mov push push mov jl repnz cmp iret enter sbb and sbb or inc dec dec stos mov gs adc insb les popa adc addb (bad) xor sbb cmpsb cmp cmpsb push fldt ja jmp inc jae mov mov add push xor adcb mov data16 sbb dec inc lds (bad) enter add add cmc aad inc lods pop push mov lcall ror mov mov inc faddl pop cmpsb mov lods lods jnp stos add stos pop fnstcw jmp mov or or shlb and lods xchg sbb mov adc popa sub shrb adc es and les sbb mov dec inc and push stos inc jl jbe cmpsb pop movsl push mov xchg dec test mov xchg jecxz mov int test (bad) adc in or xor pop mov pop jp lods xorw adc js enter add mov mov cmp xacquire mov or lods inc xchg push test cmp out add ret ffree pop and and inc xchg in push pop lds (bad) mov xor jno inc jno xor pop inc rcrb mov mov jae sbb insb inc xchg push lahf test mov add rolb mov add adc add inc jno loope test test rcrl into or lea dec push jge movsb xor ret inc in adc sbb cmp andb iret insb int test clc (bad) enter leave and push inc das ss add stos cmpsl inc mov es sub ret hlt jmp and xor xchg jno or adc xchg popa adc add (bad) xor cmp lcall sbbl mov out sub lods icebp lods pop cltd lods mov pop movsl int add xchg repz jno pop ljmp data16 (bad) outsb xor inc pop es adc dec mov xchg jge mov (bad) fwait add arpl mov dec push pop (bad) xor repnz (bad) sbb enter and push mov add or push cmp test aaa ret and test xchg adc pop mov push fadds xor scas fdivs xchg loopne fist or pusha xlat or outsl daa jbe das pop outsb cvtps2pi cmp mov push mov (bad) mov movups cmp push add or add mov add push (bad) cmpsl les xchg stos and push inc xchg push xchg mov sbb insb and loopne gs (bad) inc ljmp xor pop lret pop add andl or popa shll add jae sbb and jp test bound dec jns lcall push nop dec adc leave loope js pop inc enter or sub xchg sbb push sub aaa lods addr16 popf sub sub es lods pop scas and pop and mov sbb and mov aad and inc loopne mov movsl adc inc fisub jne and or shr outsb sbb adcl sbb repz add inc xor andb push mov jecxz adc int3 sub sbb scas mov mov insb cmpsb aad mov xlat lcall xchg lahf adc mov jns aam mov or imul mov test loopne imul fldenv cmpl or xor add pop jecxz pop icebp add aas lret test test mov add lods sub and andb sbb sub xchg fnstenv sbb fsts inc mov in test fnop mov int3 lea xchg add and ficompl mov in mov jne sub lret aad sarl cmp ljmp push sbb pop adc enter xor or lea cmp pusha xchg mov xor push mov or pop add addb mov int3 mov cmp nop ficompl nop sub pop int3 je push les leave cltd insl cmp pop or out ret addl xor repz mull add jmp pop dec adc call (bad) mov jne add arpl mov aam inc inc mov mov mov jo or daa nop andl roll adc jae bound repnz xor bound xchg in out loopne (bad) jbe pop jbe (bad) leave fiaddl fcoms or rolb push loop popa pusha mov ficompl loop dec cli pop jne movsl mov and cltd cmc dec add sti ja (bad) mov xchg inc je jl fdivl push adc lret lds push aad jnp clc adc popf inc push imul or mov cmp dec pop fidivr sbb inc cmp mov mov daa sbb out push mov rcrb mov test pop jbe lret (bad) (bad) je mov rcr stos sbb mov lock xor std int3 xchg (bad) movzbl pop and xor movb cld sub mov xchg inc cmp sub push sub jbe ja insl pop lret ss inc jg cmpsb jb push lcall sahf pop xchg cmp add lcall pop add sbb xchg mov lret push jl outsl lret nop cmp cmpsb addl mov fdivl xchg test xor mov jb xchg aad lods pop outsb repnz push or push sub mov adc adc lods sti jle pushf fs adcl jne dec adc push pop dec js pop and dec sbb out stos lock push jnp loop add hlt cltd jnp inc fdivrs push pop adc xor push adc hlt bound mov loop test mov mov adc test arpl pusha out outsl adc mov add stos mov adc daa sub pushf jns or pop dec jnp pop pop sbb push add xlat daa pop mov xchg cmpsb sbb imul add add leave jb push pop add enter push pop movsb jo add fcmovnbe rol ret push ret xor mov inc mov inc mov dec xchg mov sti lock hlt push jmp mov loopne lock adc test push cmp inc imul sbb and icebp jo mov dec ss sub lret cmpsb mov inc mov xor and push mov lock mov fdiv mov cmp test xor xchg bound jb cltd cmp ret fsubrl shl xor rcll test jecxz aaa and repnz inc add jb bound je out inc sbb arpl repnz mov repnz inc xchg test inc js and mov mov inc out xchg dec addr16 inc adc dec or xchg adc int3 fcomi lods mov testl and cmpsl push lock nop mov (bad) mov pushf enter pop inc adc stc fsubrl xor ja xor daa (bad) cwtl inc xchg out out adc arpl and sub pop add mov xor loop or inc mov cld xor pop push jmp ja mov lcall pop adc test pusha in inc mov push pushf ret mov test stos push xchg (bad) out aad cltd ret mov push add xchg jo pushf sub imul fldenv or lds push cmp out sub xchg mov lds hlt loop xor sbb or adc fwait pop aaa ss xchg jo cmc mov ljmp cmp loope mov pop dec adc sub xchg lcall call adc pop cltd push pop in test loope lcall dec fwait aaa cmc mov sbbl jmp mul mov adc imul inc loope ss enter call (bad) mov xor inc lcall mov pop imul mov push js ss rolb push fldt bound mov arpl mov adc mov imull loope repnz push imul stos je jne adc inc mov push (bad) mov rolb bound fwait adc loopne (bad) or and adc lret jae xchg nop (bad) lock in xchg push xchg lods movsl add dec add xor ja xor pop (bad) and cmpsb dec in or mov pop mov xchg add pop xor loop and push jb inc add or or bound and loop add adc popa (bad) (bad) jge push mov leave mov sub or pop add sub (bad) aaa (bad) leave push ret add xchg frstor in icebp adc add sub ficompl (bad) push and lret aad pop push push in jbe xchg push lock loop fldt (bad) rep inc repz or pop cmpsb mov mov movsb jno cmp cmpsl pop pop jno or add (bad) je push xchg mov sbb xchg and fs jle cmp lods mov xchg sbb ret nop inc (bad) inc movsb cmp bound pushf or add jb add push out into jb pop sbb insl or mov or data16 jbe mov lcall imul cli ret and inc and cmp lock mov and sbb inc inc in mov jle or repz jbe add mov and sbb mov mov xchg (bad) insb and add cmpsb mov cmp and and cmpsl dec enter inc shll subl cmp jp repnz shrb add mov pop mov adc cmpsl mov das jl,pn pop iret and fildll scas sub pop es daa mov fdivs mov sbb mov mov jp mov mov faddl rclb mov and outsl es jp xchg pop outsl and flds fcoms cmp mov xchg sbb ficomp pop data16 fsub lds mov inc adc jecxz nop push xchg ja xlat jns (bad) arpl and jb negl xchg or lea xchg mov mov int aam rcll test rcl (bad) loop imul sbb cs and icebp and adc test push dec fdivl adc pop mov xorl arpl sub add inc repz adc fiaddl add push ljmp xor arpl inc cmp sbb test or jno movsl push (bad) fidivr ds push (bad) (bad) sub popa or int3 movsl add sbb fwait mov adc mov mov (bad) icebp in fiadd enter fs push lods in and sahf je mov or add ret mov ret mov xchg mov or loop pusha fidivrl xlat mov imulb inc pusha inc dec in stos icebp cmc mov jecxz xchg cmp pushf mov inc nop cld ljmp inc mov addl jne xor cmp imul xor dec xchg addb push jbe sbb imul sbb jne add xchg jne mov mov aaa xor xchg fwait cmc pop mov jecxz adc fnstenv push sbb mov dec movsb xlat xchg mov or inc jl or int inc cmp and clc add dec add sbb sbb cli push addr16 rcrb out es imul cmp jno mov xor in ljmp test and daa sbb sub rol cmp or rclb rcll loopne and mov js inc inc sbb pop aad divb mov xor sub dec test push repz mov adc ds dec dec aaa xchg add and inc and imul sbb and js sbb shlb rcr push lret arpl sbb cmp or popf push mov int3 int test xchg insl jmp adc fwait adcb cmpsl mov or jmp sbb jmp ret pop adc add movsl mov lock sub or es mov inc mov stos push mov mov shl dec js and push stos xor (bad) jp xchg sub hlt mov fmuls or xor mov std xchg cmc jp inc das mov mov fadds insb ds xor xor xor jecxz push dec orl fwait imul mov mov and mov sub imul in or call mov lds adc gs sbb fadds addr16 mulb inc mov hlt pop and xchg negb and mov pop movsb and mov pop pop lret fsubs jmp mov cmp cmp mull jecxz add mov orl clc mov addl stos fs ret xchg je pop inc sbb mov cmp fmull inc jp ja or adc mov add test mov loopne lds popa xchg movsl jnp cltd les roll notl and cld inc mov test or mov sub movsb ljmp mov ficoml sub inc es mov loopne xchg (bad) ja inc and repnz cli and push add fadds out xor (bad) aaa xor jmp data16 sbb mov mov push insb jae cmc jmp jmp sub rcl rcl aad (bad) (bad) shr rcl int sub cld jae imul aad cmpsl pop xlat dec pop xor cmp adcl mov je,pt mov mov fist (bad) out out xchg aas cmpsl mov jnp push out shlb daa sbb out das iret mov sbb out push je or lcall lds je mov add push sub mov ret pop popf xchg push dec mov jg movsl add add (bad) lods sbb sub adc push xchg (bad) shr push sbb shrb and sar cmpsb stos adc inc inc icebp adc dec add leave lods es or adc rcl jno push push sub jecxz pusha cld mov mov je xchg mov push jecxz mov inc fs mov sub push test int sahf daa dec daa and movsb pop cmp test loopne inc mov bound sub xor and mov addl aaa scas mov push xor sbb dec shl stc lock xor or out (bad) rcrl pop inc and jbe sub xchg push flds je dec jnp mov test xor adcb out jmp test push sub push xor xchg cltd cmpsl adc lock push int mov inc and sbb imul inc rclb ret push or xchg and mov push xor loopne adc or ret nop shlb mov xlat mov ret add pushw add push pushf or addr16 add xor push rcrb jb mov (bad) mov (bad) bound mov mov dec adc loopne push cmp push andl dec push add jo jp sbb or ret add mov imul ret add jae hlt and and je test imul add push out and pushw jmp pop imul ljmp pusha mov or divl out imul jno cmp and test shll jmp (bad) xchg ja dec loope mov jbe add push sub jbe mov je or or jp sub cli add in cmp inc nop cwtl xor mov mov int3 push adcl or and imul adc imul cltd in or jno xor sbb (bad) cmpsl push xchg cli fs push add push (bad) xor sbb mov or xor out jg add scas fisttp pop sub jno dec cmp lret jle jbe lret inc outsl jbe jne xchg das sub jo lods mov test aam mov pop cmp sbb pop add popa add pop push dec loopne adc js lcall xor mov push (bad) and scas adcb add adcb cmpl add jb xchg popf stos xchg shrb push add adc outsl fisttpl bound fsub dec inc pusha jl addr16 fadds sub or add rolb or mov add adc (bad) xor mov jo roll orl addr16 imul dec aad cli push nop data16 (bad) jae xchg pushf mov int jno mov cmc popf jmp sahf and leave inc push popa (bad) or xor dec lods addr16 mov mov (bad) hlt pop inc add xor and mov xchg dec and sub pop inc adc mov xchg push lahf fs push or pop and fisubl rol shll imul inc rorl fmuls inc xor xor ret xor cmp mov ret xor in xchg push imul sbbl xchg push mov cli inc call mov mov int3 es push (bad) mov mov mov sar pop mov inc jb loop stos jge pop rclb cmp mov jne cmc or xchg arpl inc push cmpsl in stos and or ja mov and pop adc je sbb pop lret imul and je lds and lock sti pop mov pop movsb jns xchg mov mov mov jae lods ss pop sbb int3 add add insb shr gs int3 test popa cmpsl orl mov cli pushf (bad) out adc push cmp test or and jns (bad) cmp stc (bad) xor data16 loopne or inc lods in push mov lock mov stc mov sbb pop cmc (bad) sbb adc or push std fisubrl jmp adc dec mov sub add std sub addr16 sbb sti icebp sbb jne sub (bad) and repnz pop (bad) and cltd xor sbb stc test pop mov dec adc or inc cmpsb xor dec addl sub out int pop and lea ljmp sarl push fisttpll dec add add sahf test mov aad lcall lcall mov mov pop or adc cltd lahf push and insl sub notb adc data16 aam fdivrs or add pusha inc dec jg fistpl and pop cmc inc loopne pop add (bad) testb inc and or sub test mov cmpsb (bad) cmpsl pop add dec xor add add (bad) mov pop lods dec popf dec (bad) add imul mov stc rcll mov jp cmc movsb test cmc sbb xor mov add orb or mov or test rclb push add popa addb imul fsubs inc adc daa add js sbb js inc sub lds adc adc or pop ret dec and test xchg xor and (bad) ss add mov loopne sub into addl rolb xchg add bound mov and in jecxz addl add adc jns or push arpl jb mov ficoml (bad) ljmp or add repz call (bad) jns imull icebp jne ret pusha add mov cs sub sub inc or addr16 mov repnz cmp jae test bound push dec xchg ret ja xchg xor adc mov jecxz jbe out pushf imul pop or imul loope enter inc popa cmpsb insb ss pop insl mov and lds (bad) sbb lret cmp add (bad) jmp js lret adc sbb out cmp cltd xchg sbb mov test sti into pop dec fcoml fs or and mov add add bound and in jge sub popa pop cltd mov or js rorb mov cmp mov aaa nop dec mov or in add sbbl aam cmp mov inc and mov jo scas dec or inc mov loopne push inc sub jne inc pusha sbb xchg add ja cmp push addr16 adc (bad) or gs xchg addr16 sbb cmc xchg ror and adc js aaa cmp dec xchg mov rcrl push xchg aad pop cwtl and sub (bad) jecxz (bad) mov pop adc inc lret add xor cli mov xchg pop cmp gs add xor xor jb test mov pusha and test hlt hlt and in push or lcall jp and inc mov inc repnz mov aam sbb and push mov les jbe loopne xchg mov daa xchg add icebp mov addr16 aam leave loopne xchg cmpsb test cmp shrb pop add mov push add out nop rcrb adc jno test (bad) push jp jmp bound fs test dec push dec lret out (bad) fidivr pop push sub mov pusha int test lods mov (bad) mov pop jnp scas xor enter js cmpsb into mov lahf lods push push add int3 cmc mov mov cmp leavew pop adc pop mov das and iret popf xchg lea int3 jae pop into push xor cld insb jl mov test int cld mov add jle les test add push mov pop in xchg inc xor cmp or jp loop int3 xor lret dec add or mov pop cmp fwait shrb stos pop sbb cmp (bad) or xor (bad) mov cmc inc mov sbb xor mov enter int jo pop orl mov xchg and xchg xchg js xor sahf cmp hlt dec lods pop repz stc inc in repz pop xchg (bad) push ret mov push dec pop push inc das push mov es rorl mov inc and shl push popa and pop mov inc loope adc jae loop out aad fsubrs icebp jb scas sbb sbb dec or push xchg sub and sub repz xchg test cwtl rclb xchg push outsb or in bound pop hlt (bad) out push nop sbb lcall sbb fidivrl sub sub fsubrl das mov add mov add or unpcklps adc ja jmp and xor xor aad adc or mov and popf sbb loop mov dec enter in jno test (bad) jbe xchg lock das pop sbb push ret je test jae sbb (bad) mov xor adc icebp cmp lcall sub dec pop inc (bad) ficom js inc add lret cmp cmp std push cli addl ljmp sub les mov bound pop mov push in in mov (bad) (bad) add arpl ret rcll sbbb or inc jg std out mov add loop lret mov loopne jecxz mov in scas lds mov es or sub or add and fchs adc xor daa rcl iret pushw stos sarb xor xchg std jno mov push scas outsb and dec mov sti push jmp pop sbbl gs rcrl js inc pop outsb dec jne inc pop adcl testb push dec frstor mov dec push or lea mov sbb pop mull sti sbb inc adc xor popa jmp sub mov pop imul stos and dec cmp push cwtl jl test push xchg test dec push sbb (bad) adcb bound loopne popa jp mov sub mov das ss add inc mov cmc pop pop mov ljmp lods mov sbb push pop cmp (bad) divb sub ss jo cmp nop out sub das xchg jns xchg jmp and xchg clc call mov (bad) sbb cmovge or fiadd dec shrb loop and adc cmp xor lds dec mov push dec add das add test inc push cltd pushw push mov and aas mov imul add cmp sbb stos movsl cs add jl pop xchg and roll cltd and pop adc dec adc fwait add dec inc cmp xchg test popa popw fwait bound mov or outsb dec mov xchg sub push fstps sub in insl xor or sbbb test sub arpl sti add adc or pop dec fisub xor in or dec in push mov pop add add test dec mov dec mov jnp inc xor mov and xorl ljmp loop pop leave sbb sub jae sbb mov pop sbb roll pop cmpsl roll mov data16 cmpsb pop jp sub cmc xor lods adc and insb xchg cmp mov sub add mov or mov pop push mov mov sbb adc push roll popa insl xchg (bad) lret cmc adc cmpl ror (bad) cld add outsb scas addr16 fadd bound jbe push mov les xchg sub mov inc addr16 rorb or nop push add sub xchg daa push sub out adc push mov or mov int3 sub loope js scas mov inc sub rcrb push movsl pop in (bad) popf imul out jecxz repnz pop aad or fsqrt mov js adc aad ror (bad) mov aaa dec lock cmp scas sbb and popaw push insl pop mov sub xor sub fisubr sub mov leave push stos cwtl inc int3 jl cwtl adc inc int3 mov mov subl (bad) jle ror shlb loope mov and or fcoml jne dec clc test inc adc fwait movb pop or pop fildll mov xchg and sub sub sub enter das ss add les cmpsb mov xchg xor (bad) or xchg jne pop sbb push test or mov add stos jns ficomp add pop ss push mov stos scas mov xchg add fsubs jo or imul and cli ss dec sub and push sbb dec and push xchg sbb sub sbb pop jl inc imul and sbb pop mov xor jmp mov dec push inc (bad) xor lods rcl pop (bad) (bad) les sub adc jmp xlat adc jecxz out pop jmp pop test cmpsb (bad) and aad push add mov rclb xchg das cmp xchg andb es cmp ret rcrl je in push sub lods xchg inc jns xchg pop fdivs sub int3 xor ljmp inc (bad) mov pop dec jge bound shlb and or sbb roll and test xor or add add xchg cmpb or hlt sti inc cs xchg lock inc xchg ljmp add push and test stos pusha or (bad) dec mov sub add adc jb hlt jmp jecxz fimull sbb and and bound fdivrs popa jbe fsts mov mov lret cmp mov imul xchg in movsl loop mov or rcll add mov jne in add xor jns jns test jns cmp enter sub mov xchg clc daa out cmpsb leave adc lret mov push adc fcoms hlt nop sarb clc xchg mov js lods xor lret dec push pop pop cmp push stos sti sarb call mov data16 push add arpl (bad) sub and mov xor lret jnp cmp rcl xchg inc test pop sbb (bad) mov adc jmp or lret push jb cmpsl jb pop xchg xchg and daa sbb ljmp sub jl repz in push mov adcl or fnstsw sbb xlat sub insl push xchg or jae (bad) sub dec cltd and mov push loop adc dec or enter push test xor cs adc sbb ret adc jno adc insb scas popf int lret bound cmp adc ret scas shll popa sbbl mov adc adc fwait sbb and gs les lret (bad) dec xlat or popf xchg push xchg add (bad) cmp inc lds pop test dec xchg lret xor xor dec dec mov or xchg sbb mov push inc xchg int ds enter xchg (bad) xor xorl int and xor rcll (bad) xchg mov pop loop lea mov aad mov jno outsb push icebp in xchg clc into cmp inc jge xchg cmp outsb jno test enter mov test rorb cwtl push cmp test push imul adc mov xchg or mov adc add test pop (bad) lds popa stos push and and push mov (bad) ss test ret rorl shrb jle fildll cmp loop jecxz mov mov rep xor call jle xchg add ja (bad) jp jge (bad) rorb orb adc sub rcll add cmpsb test pop cmpsl enter sub push sar pop xchg test mov jb enter pusha inc ret or jae lock cmp mov add loop xor jge fstl mov push bound xor or (bad) (bad) lret (bad) mov addr16 int3 cwtl inc mov shl loop pop jno push es or int3 push or sub int sub clc sbb adc pop or sub cmp (bad) ja xchg cmp cmp pop pop (bad) int3 roll test loop mov jb bound adc sub adc jne lret dec inc ja xchg sub (bad) leave or sbbl xor (bad) ss repnz mov mov cmp inc stos andl xchg pusha push xchg les popa or cmc shrl jae add push xchg sbb dec mov divl mov fcomi shlb inc shll ret mov popf pop mov and push jb fdivl (bad) in mov pusha gs mov rolb jne xor in add sbb cmp mov dec clc xchg fsts xchg jge rcrb daa pop imul xchg cmpsb pop movsl cmp xchg sbb mov push and adc test ss cmpsl or sbb or shrb stos and jno or (bad) adc inc test dec xchg or arpl das fmuls xchg xor fildll stos gs dec push sub insl adc mov loope xchg inc lock lds sbb popa add sub pop (bad) outsl inc test popa inc shl add pop xchg and inc xor std cmp test mov mov mov adc es push orl push je add push lds stos adc rcl or pop sub push iret push fisttpll sub sub adc addb push add xchg and pop pop or xchg sub pop sub xchg ds sbb faddl mov xchg cltd push jo pop add inc push fnstenv inc mov pop mov push or nop pop sbb dec fwait inc and adc mov in mov dec sbb jno xor dec in data16 sbb dec aad insb in xor or or cmp adc sbb movsb aam mov adc inc mov push js sub sbb add xlat les fldcw add fdivrs mov dec inc mov inc mov popf jb popa cltd insl subb mov mov test sub (bad) mov xchg lods lcall ficom clc movsb hlt scas push arpl (bad) adc mov cs test push push lods push xchg fiaddl add fsubl shlb or jp xchg test xchg pop sub fs fcomp push or pop mov insb aad lods pusha dec mov out int3 mov mov (bad) cmc push lods sbb mov push int call movsl dec jecxz push mov sub aas leave addl or lahf push sahf test sub int3 pusha pop mov sub stos call and rcll fwait xlat scas imul (bad) push stos push pop or push mov mov xchg mov xor push sbb sbb push adc inc or ret push addr16 jle out add xchg or add mov aam loopne mov xor pop mov aad mov or dec fdivr adc pop inc gs cmp dec adc (bad) shrb xchg std fidivrl xchg loope lea fldcw adc imul or or or xor fs pop pusha stos jmp pop bound mov loope loopne fnstcw ja stos fs gs addr16 jno lock or es (bad) (bad) cmp jbe xor push shll jne insb gs pop (bad) add push xlat gs push pusha test hlt jp xor gs push xchg stc ss add mov push add in and ljmp clc pop adc sub in or push clc inc jl fidivrl icebp mull xchg je sub test loopne xchg divl fnstcw clc pop dec xor enter pop sub pop mov inc (bad) mov mov (bad) mov rcl sub add add fdecstp loop rcr jo arpl jmp repnz jb dec add sti mov xor adc cmp jnp clc mov push xchg nop loop bound xor mov xor push push and (bad) inc adc leave add hlt fcoml loope adc fnop adc sub adc lret xchg jae in aaa mov mov mov add xchg call push popa xor mov dec inc adc add stc test les daa sbb dec dec inc adc adc adc add in lods pop inc lea imull pop test inc dec arpl or push adc push adc outsb add push insb push mov test hlt fsubr adc or insb sub sbb (bad) int3 adc add or (bad) lock movsl dec push test add dec mov cmpsb test jecxz test mov mov or mov enter in rorl movsb inc ja adcl outsl popf inc sar mov pusha testb sbb pop loop push test bound pop rcll sti inc cmc jecxz mov add shl xor jb adc popa insb mov fdivrl or dec popl cli mov test mov jae add mov in and popa insb insb mov sbb dec push aas adc lods pop lods and adc loopne sbb mov xchg push mov fwait xor (bad) adc adc and sbb mov xorl push xor roll repz xor sarb mov xor pop movb out inc aam or call (bad) cmp jb (bad) push popl (bad) sub (bad) adcl test jb jle or (bad) movsl sub ret pop popf xchg dec je bound loopne data16 sbb sbb mov mov imul (bad) mov and pop jo (bad) jle push adc test fdivrl loopne inc popf aam pop cmp les mov or add dec or in inc rorl rcrl into pop or out rdmsr cmp jge sbb or pop mov pop sbb and aam insl pop hlt lods push or insl flds loope pushf sbb mov int inc rorl sbb int adc lahf or cmp pop sub popf aas pop add mov jmp bswap lds mov addr16 mov ficom pop mov mov rclb popf insb icebp jecxz cli jns adc call sub xchg adc push fwait push mov gs push mov loop mov fwait xchg jno dec sub bound pop shrl sti push push clc push sbb les out lods inc iret movsb cmpsb test push addr16 roll lds rclb mov sub jecxz cmp rorb mov notb and repnz sub jg fmul xor adc push mov popa ret push push ss cmpsb dec ja cmp popa inc add dec fcompl fimull cmpsb arpl xor orl ret cmp adc push mov mov cmpsb sub leave sbb xor sub pop push andb sbb jp push fcompl adc in add add icebp sbb jecxz sub inc cmp sbb adc andb xchg or (bad) or cwtl loope xchg test ret cmp aaa lret pusha xor sub cmp test ret or adc sub xchg push xchg imul lcall dec mov (bad) stos dec scas pushf loope xchg add (bad) pop stos pop pop seta push lea fdivl sahf mov cmp xor pop test pop push adc pusha outsl sbb test push cltd xorb ficomp jle add sub push je dec inc in iret or mov movsl sub mov and outsl adc adc ret shrl dec mov adc xchg add jmp outsl sbb inc les push pop movsl dec and cs push mov ret nop xchg xor mov and ret dec (bad) xor pop pop jno pop adc dec or xor mov loopne mov inc icebp sub dec (bad) les inc ret push inc or pop enterw nop lcall push insb add sbb mov jb loop pop sbb sub imul loopne mov or orb push jb xor or and jb lcall stos loope pop xchg test push jns repz push pop pop jmp pop pop mov mov test pop mov pop sbb popf mov aad mov out inc (bad) cwtl and insb xor shrb sarb pusha mov xor jae cmpsl mov dec popa pop jmp sub cmpsl jb add loop mov enter fwait jb xchg push inc jo imul xor mov add inc or cmp loop xchg adc dec jns pop popa sbb pop stc add cli out inc (bad) cmp push imul sti (bad) sub enter addl jmp pop je jns mov clc xlat xor add cmp in or lcall push mov xor sub into or loopne rcrl adc fcmovbe shrl add or pop xor xor in jnp sbb ficoml or movb daa sbb jecxz xor mov xor andb insl ss (bad) or pop rolb adc sub pusha orb sub mov mov sub jne sub movsb lods xchg movsb pop mov pop or sub sub xchg and cmp ljmp aad mov sub mov movsb je pushf cltd popf sbb inc adc cmp and sub xchg sub push inc fbld mov inc stos adc call adc das add push pop fsubs cmp mov mov leave in shr test inc nop movsl or bound aam dec adc test or pop push and jmp loope push imul push mov add cmp xor xor add popa scas jns in jmp adc adc jne bound add stos push cwtl (bad) in pop mov push push dec or sub sbb fstl dec imul or add dec js (bad) inc add lret mov jae xchg mov lds aad add aam push or xor mov dec inc rcll shrb pop adc and (bad) push nop rolb pop ljmp jmp cmp pop lock out add jmp hlt pop pop stc movsb push ja rcll mov add sbbb sbb cmp cmpsb mov pop cmp cmpsl popa ljmp ret (bad) and cmp xchg les loope cmp test cmp rolb les addb loopne push adc dec mov push icebp jb repnz bound mov xor inc mov jb mov lock rcrl bound adc mov mov inc ret negl roll arpl test les cmp add pop icebp test pop movsl dec dec stc xor adc mov test adc jb xor xchg xchg clc and loop xchg in push cltd xchg mov inc pop sub test push jno sub dec lret inc sub loopne cmpsb push cmc mov add add xchg xchg mov add xchg adc sbb adc rolb pop aaa xchg jmp adc or or sub add inc pop pop pop xchg adc cmp andb sti dec lret xor inc gs data16 sbb insb jle push int lcall sbb dec inc popa out cmpsl or fstl adc cmp jae push popf and cmp int stos mov pushf (bad) imul rclb mov shll std imul pop push pop push fsubs (bad) dec pop and pop jmp das ss add add or xchg mov repz cmp call xor xchg ds xor rcrl mov pop sti je divl or ljmp cli mov loope js lods rorl dec inc fisttpl arpl lods push cli fmulp int3 or out inc rorl pop arpl add dec int lods jb fnstsw adc out or mov and mov call sub sbb inc (bad) ljmp test push push (bad) sub stos push sub ror dec adc add lods mov iret pop add jmp mov mov pusha outsb jbe sbb pusha sub in add adc jne inc subl stos mov rolb jle scas cmpl inc and out sbb pop push sti je enter loop mov insl in cmp lods adc gs addr16 jbe dec jp jl aam pusha ss cmp movsl lods cld sbb sub add rorb jle add dec and in inc pushf arpl jge fcmovb lods lret (bad) mov fstps in add cli aad xor dec mov movsb subb jo hlt jb lds xchg repz (bad) ss push mov imul push cmp mov and cmp or pop loop outsb adc inc (bad) pop dec xchg xchg xor inc mov in or push dec xchg loope cli lcall or imul cmp and and and jb bnd ret dec mov jb mov cmp add and add and and dec adc dec insb jbe and sbb adcl and sub es and inc and sub push or xor xor jecxz mov nop jns int3 nop jp inc jno in pushf xchg xchg add or popf mov mov add xchg cltd pop movsl sub inc pop loop xchg mov push sbb cwtl xchg mov cmpsb inc xchg push inc mov adc xchg rolb ret (bad) mov pop repnz ficoml test jae and dec cmp icebp cmp loope xchg test xchg xchg mov or ret add add add lock jb jp (bad) xor lods xchg es aam icebp call enter sub or xchg dec sub daa imul and push inc jno push stc sub test test (bad) and adc pop add push jmp fs inc mov fsts add push pop lock lret shll jns mov xchg ret and xchg add jae push and adc insb inc mov scas aam push mov or int and (bad) icebp lds cmp mov roll inc lcall mov cli mov sbb mov sub js pop xor shll mov cmpsl push jmp pop fs xchg je xchg in imul sti sbb enter sbb xchg cltd sbb ljmp sub and jnp imul cmp jge jb mov xchg (bad) out sarb and cltd mov mov repz jb pop gs fisttpl push (bad) ds nop adc dec mov push pop adc stos xor xor sahf xor ret scas repz push inc xor or mov (bad) push insl push or test adc in inc pop lcall rorb fsubrl push jle cmp add pop add add adc sub (bad) fstsw sahf lods jle imul push add push inc in imul push pop mov arpl add xor cmp jl in xchg pushf cmp cmp jnp dec icebp jbe mov (bad) dec in add inc jp mov cwtl out in cmp dec ret inc call adc jmp jmp cmp push mov in in cmp lret add cmc loop inc inc jbe aas sub scas sbb cmpsl pop xor and sub test mov in mov in cmc xchg lret lods xor or mov cs or mov in xor mov mov dec and cltd scas cmp aad inc xchg sub popf mov cmp icebp add push pusha leave ret mov push out mov xchg bound mov repz xorl push dec add xchg movsl or or int3 sbb xchg jge pop aaa imul adc add sarb in test or enter or jae dec (bad) popf mov dec add shrb jmp or cltd shrb lea call jbe mov dec xchg fs xchg loop and sti jecxz and pop xchg inc jge,pt dec push xchg out and and adc and jae mov push push xorl add push sbbl call xor dec mov addr16 arpl clc inc loope repz stos mov xchg add push hlt push in les mov sbb pop dec xor or mov add out ss cmp lods or add and and xchg jb inc repnz mov push (bad) loop sbb mov xchg inc test jmp add push jge pop faddl mov lods cmpsl fs and rcr popa jns mov jno push cli nop out in jns (bad) xchg cmp sbb ret lock js lds xchg push inc fdivl pop imul insl cltd stos fldenv dec or jne sub mov data16 stc sub xchg cld dec adc xor rolb sbb xor loop pop and jb repnz jne inc mov push sub bnd dec ds add in movsb subb cmpsl test sub int or loopne jae xchg (bad) or stos imul or lock jbe add cmp and fnstsw clc shrl and push adcl or push ss aad stos jo push sbbl adc push imul cmpsl je and data16 push jbe cli cmc pop xchg xor (bad) or repnz ret shll bound (bad) shll adc jecxz notl stc ret (bad) repnz xchg repz adc dec std jp inc mov arpl fisubl out pop loopne jns push testb jb test ja bound popf xchg mov jb push addr16 xor idiv std movsl inc cli divl push mov xchg idivb mov mov lcall xor pop lock dec clc aaa jbe mov in out popf loope sub cmpsb push aam imul fs sbb ljmp push mov sub push or xchg jl mov xchg adc xchg popf (bad) mov sub ja xchg pop aaa lcall mov mov cld mov push stos sub xchg xchg mov (bad) mov add lcall mov push cli cmp jbe cltd sub loope mov (bad) loopne popa pop sub hlt out xor mov jns aam or popa arpl fwait sub adc dec loopne idivb lock (bad) or (bad) or mov jnp mov aam mov push xchg push mov xchg mov xchg xchg and cmp add cld pop icebp jae cld inc add sub or inc xchg add inc es dec xlat call pop mov xor enter jae sbb inc jbe push out xor and adc int ret arpl push mov mov rorl and mov inc inc mov shl fisubl (bad) mov insb push cmp sub mov mov xor lods adc and ret inc fwait inc clc jns jmp pop sbb test hlt or inc call cmp stos rcll mov push cmp (bad) sub sbb mov mov add sbb xchg mov je mov lods push xchg mov jge mov jns jmp shl cmp and (bad) mov push aas (bad) and gs mov adc lds test aam pop xchg mov adc inc xchg call or sub (bad) vpmaxsw ror jmp sbb popf add inc mov sbb mov sub scas xchg jecxz push xor push loop mov or (bad) add gs pop scas and and xor inc fmull pop adcb pop movsb pop sub (bad) sahf inc insl jbe enter xor mov iret xchg std mov mov jl xchg out cmp cmpsb fwait test out mov (bad) sub pop adc mov or or and sub lock and lret add inc mov adc cltd fnsave lods mov xor inc sbb pop inc lahf jb inc pop xor pop cmpsb jge int nop sub push jae push xchg inc loop mov dec xor sbb in mov cmp push (bad) pop adc sub mov xor add out jmp mov sub js mov or push inc dec es cli scas xchg fwait xchg repz cmp adc je xor cmpsl dec rclb ss jne int inc movsl repnz pushf les push or push gs add stos sub jl jne adc in mov mov ret push mov pushfw mov jne push sub pop inc add sub or add pop xor dec lods andl pop and lods fldenv cmp mov mov popa enter xchg or sub pop lret (bad) repnz pop js or xor add leave ss mov pop push add int cmp push adc push and (bad) push outsb inc mov add pop inc in adc test testb fmuls jge ss adc movsl sub subl mov push push gs pop add xor adc shrl sub test jp mov mov or mov cmp lds fsts push adc sbb or jno sahf add jns adc test imul sahf cmp mov sub xchg aad xchg cmp jae into add insb sub sub mov (bad) inc out and add jno frndint lea push mov lds pop mov inc pop sub ljmp out xchg mul inc fsts popa (bad) int cmp or sub inc add xor add ret push cmpsl pop sbbl cwtl push push es sti cld sbbb or cltd inc pop mov pusha decb sbb sub or leave loop xchg push insb addr16 (bad) jnp mov or repnz xor and and push sub in dec insl in sbb sahf movsl mov push sbb dec cmp lcall je xchg pusha xlat (bad) push lcall mov fldl inc in (bad) push jb xor test or xchg inc je mov cmpsb adc in je lods dec add jp cmp jae hlt int3 lret lea addr16 ficompl cwtl mov test xchg in xor fmull mov xchg lods inc (bad) ljmp sub sbb add adc in sbb cmp jmp jbe jns in sub and jecxz sub loope mov int3 cmp jae adc repz jae add sub and mov sbb jl mov or push sub pushf sub xor orb mov or jmp int3 jns inc or out and pop sub adc int3 insb push mov sbb xor lret arpl pop xor jl andl pop js xor inc mov les daa inc sub loop mov in test cwtl je xchg repz stc arpl xor jne push or stos inc xchg mov insb sub and mov stos or pop add mov mov in and sub aad dec and pop xchg mov xor loop jp ret inc cwtl sub clc xchg shr imul ss xchg addr16 je aad rorl in sub in sub add fs (bad) push or fidivl jns mov nop push push jb clc mov cmpsb jp cmp push mov lods daa pop mov (bad) cmpsb cmpl adcl shrl aam pop sub fcomi jno xor imul rcr jae pushf les sub aam fs aam les and adc push gs in push push pop test mov mov mov in mov in xor cmp xor repz or in mov add loope inc loopne movsb test rcl lds out inc cmp lret push and mov and popa mov cmpsb fcmovnb sbb cmp mov imul mov mov les fwait mov xchg cli call loope nop mov (bad) ret xchg and hlt inc inc es push dec popa jne fildl mov movsb test movsl inc cmpsb sbb stos sub sub in mov mov and hlt (bad) xchg pushf loop (bad) cmc adc cmp nop xor xor jb xor enter cmp stos test dec or fistl lret mov xchg xor xchg dec and add loop movsl xchg push cmpsl and xor jp pop xchg mov loopne lret rolb xchg adc xchg jb mov xchg adc mov shll and xchg inc and add push add data16 sbb or test xchg imul adc inc adc add jecxz push ds mov popf xor inc xchg xchg sbb gs xchg mov mov adc mov inc mov dec inc aam sub and pop movsl sub aam sub push popa sub clc push dec add mov and movsb icebp push and mov pop cmp test and xor pop sahf fnstcw loope or sbb daa jno push lds sbb add insl rcl lcall pushf mov loope mov pop mov and ljmp xor mov inc cmp pop fs cli inc stos test pop scas or sbb addb or and jecxz loopne mov rcr mov ret rcrl dec call (bad) mov ficomp test and ja jl inc pop aam les pop pop xor lahf xchg leave adc ljmp xor mov sarl (bad) (bad) adc sbb inc inc inc xor dec jg xlat sbb scas mov test fsub insb add daa sbb dec cwtl dec inc jle or cld test jno fidiv test sbb dec mov xchg jbe or push mov movsl mov js mov fisttp inc pop test and insb add push mov jns call xchg aad or jb js mov mov inc in fwait movl call sub pop adc push add stos rcrb (bad) or dec push ret arpl int3 jae mov icebp xor lcall outsb or xor arpl aam rorb je jbe sub xchg pop in fbstp and imul inc icebp push enter adc jmp push push bound les push loopne jne mov push out pop mov and fisttp rcrl mov sarb popa jo cmp fstl cmpsb stos pop jl xchg imul push adc push je sbb xlat loop push bound xor cmp dec xor pusha jl ret cmp ret mov xor jne cmpsb inc jne nop cmpsl sbb pop hlt mov xor cli aad dec clc mov jnp and sbb dec inc xchg test subb test add adc (bad) (bad) insl xor adc and dec inc add inc das ss add fcoms (bad) pop and jo sahf xor ja add (bad) ljmp sti pop movsb push loope mulb push pop lods add jo sub ret mulb ljmp dec stos lods or or mov pusha andb dec mov adc pop mov data16 cmpsb lods fstl aam jbe and addr16 and sbb xorl or insb popa stos jmp lock add mov lods pop push dec daa and gs adc adc cmpsl xchg and xchg dec push leave cmc lods jmp push stos in add lar jle sbb adc mov (bad) jae (bad) xor xor sub mov push test dec andb push xchg in jp dec mov hlt mov add add out xchg lret hlt sub pop jb aas ret (bad) popa (bad) ja mov push (bad) icebp fstp mov inc jmp sbb les clc imul stc test adc ret inc jle and and or pusha sbb mov shrl popf push jb inc add mov int int3 add sbb lods push pop subl adc int3 push test sub adc add xor push and adc loop imul roll lea popf xor lea mov (bad) repnz clc std ds mov out clc std cmp inc inc stc int xor mov jne in cmp int fsubrp icebp add inc ret adc jo addl nop mov adc add push mulb jge popf arpl adc in mov je or or icebp enter es cmp or xchg rorl mov gs ret fisubl push cwtl xor jns dec lods dec ds xor jae mov jae movsl arpl pop mov orl xor xor add in mov fldcw push adc stos sub ds lock adc add loop cmp or push mov mov lret popa ljmp jb lcall mov test mov xor cs (bad) inc mov xor dec fmull int (bad) pop lret rcrb lea jnp ret loop push repnz add cmp xor (bad) jge daa sub addr16 xchg es ret cli inc push xor call lods mov inc mov cmpsl push insl pushf pop and cmp xchg fsts mov clc add sbb sub jae jb sub (bad) movsb loop pop ljmp pop jmp and sahf push out popa push sub lods das add pop sbb retw pop or jecxz daa xchg add and dec or test pusha hlt mov jp push out call add inc cmpsl loopne test xor mov push hlt xor bound xchg adc add push inc push sbb jecxz mov mov sbb mov sub sbb inc dec cmp insb xor and xchg jecxz mov mov ret push push cmc cwtl push mov mov fwait test jp mov movsl rclb adc in sub sbb nop lock pop fcoml cmc inc or bound cmp in add loop mov shrl aam (bad) fcmovnb mov cli push stos or jmp mov inc clc mov mov jo adc ja xchg repz out mov add icebp xchg shr push mov stos or xor or pop hlt pop stc cmp jecxz cmp jae sbb fidivr xchg std ds xchg pop adc nop mov xor mov inc dec lds mov shlb add dec cmc cmp je fildl fsubrl (bad) jne sti push lods pop dec (bad) jecxz iret sarb cmc jne repz es jp les imul fxch jmp ficomp out push adc lret add addr16 ret jnp pop ret loopne test push pusha das ss add jl pop lock (bad) lock loopne sub xchg pop cmpsb sahf jp cmpsb stos stos scas ret push fcoml lock pop call clc jae,pt add sbb test (bad) pusha pop pop (bad) lock sbb repnz xchg es jl pop (bad) ss aas push clc mov xor add jae,pt in add sti sub or inc mov pop jcxz fildl xor add stos shld sbb adcb enter sub sub xor jo sbb bound mov mov pop or add sbb sub jl fs jge or lock lods pop inc mov cs lock xchg mov jl pop inc add jge jbe and orb mov (bad) in lcall repz or push and jb inc pop addl popa out pushl repz add lods sub cmpsb stos stos scas lret sbb inc outsl jne sbb addb inc or movsb push (bad) and dec pop repnz out add mov cmpsl push rol mov dec and lods adc jmp in mov jbe sub test push (bad) lods push mov push lahf (bad) cmp enter sbb cli test add jg cld pop sub mov (bad) jne pushf add adc pusha xor imul push in in cltd lea mov out dec dec or in add arpl sbb ret jo insb sbb push dec das push mov and pusha xchg popa lods xchg sub cmp xor sub dec inc je add mov fsubr mov adc orb xor or loope push pop xchg subb pop add jo aas iret pop std fsubs flds pop or cmp add sbb or je jl jno dec and das adc push inc fmuls add pop setp orb in adc lret (bad) sbb arpl xlat popf xor sbb jne sub add nop sub inc and xor lods add (bad) fisttpl outsl loop shlb loope sbb mov cwtl sbb cmp shlb and adc iret xor cmpb clc mov sahf clc loop add outsb scas outsb jo shrb mov loope jp add mov sarl or push orl sub gs ficompl add mov mov jo and aam or or lods xlat push inc es dec mov out loop sub aam test insl mov mov and shrl push rcrl adcl sub jmp pop rcrl loopne mov out jp mov lods ja add inc negl (bad) jmp imul in imul js mov mov test dec pop sbb xchg test in cmp cmp and or or mov pop cmp les loopne (bad) mov mov inc xchg cmp pop and fsts jnp or xor jne out mov popf sub push mov shrb pop (bad) (bad) es mov inc pop jbe dec adc pop movsl inc das ss add movsl scas ret mov (bad) ror xor fdivs jae sbb (bad) ljmp xor stos ficompl jae scas mov or stos fcoml or and out addr16 rcrl rcr cmp xlat sub pop rcll xor mov sub scas test lret xlat jae mov pop xorb sbb pop xor mov mov lods lods sbb pop or mov pop (bad) fwait adc pop sub fidiv mov inc in jmp pop jo xor adc fistl add sbb or (bad) sub adc push sub lods arpl xor pop inc fnsave or adc dec (bad) mov cwtl iret fadds pop mov xor xchg call ret adc mov push ret adc cmp push pushf add xchg cmp xor dec imul or inc jo nop adc cmp loopne adc icebp sbb cmpsl add mov xchg fadds and mov dec lcall lret (bad) mov lret sub or mov mov test mov pushf push mov push es pop cmp xlat loopne,pt jmp inc add popa icebp ljmp dec push xchg andl ret add bound js dec pop dec in test ss add cmp sub fstpt (bad) rol int3 jno imul lock sbb mov cltd hlt xchg loope mov mov out mov jno push xchg inc std cmp adc dec lock std inc insl outsl fmuls lock jl sahf fcoml jecxz push fidiv in pop std jl sahf out shll add lock imul cmp adc push mov add xchg fiadd sbb add mov or pop (bad) jns sarb out xchg lret or rorb es inc mov notl adc in ret jmp cmc imul test std push jmp out jae call jecxz rcrb pop cwtl sbb jg daa dec mov mov outsb call (bad) ficom mov lahf cmp in aam mov loop (bad) scas xor lret dec inc jne pop and lock or in dec addr16 pop pop add idivb data16 mov idivl push mov mov in leave add js xor sbb xor xlat mov loopne cmpsb mov pop std fs fsubrp mov or mov aad (bad) outsl xchg das popa adc cwtl adc stos jne stc mov (bad) and aaa mov mov leave iret adc or ljmp adc mov adc sub shrb jp fs xor popf nop mov das ss add neg mov stos ljmp ret into in ljmp mov mul pop fstps scas sbb inc insl cmp (bad) aam stos jnp pop outsb adc cmpb in pop sub or fnsave aaa mov inc jl or imulb mov inc dec xchg or addr16 in pusha gs jnp addr16 aam or or cmp outsl push subl jo rclb lods pop in shrl popf pop cmp insb clc test (bad) aaa xor cltd lret cmp or xchg pop dec adc mov jnp in stc jmp push (bad) or or push mov lret dec adc inc outsb mov adc push loop or lods inc or stos gs or ficoml sbb xchg jbe jecxz insl lods sub cmp clc (bad) xor out bound mov xor outsl pop fsubl loope cmp test pop sub addr16 jl dec in dec pop jne add or jo or dec inc inc xlat adc cli (bad) jp mov jno and mov pop push dec cld ss add cwtl push loopne jbe movsl sbb cmp insb insb or inc (bad) mov push bound (bad) push and push pusha sbb daa mov push xchg inc lods sarl fistpll or add mov inc out xchg shrb pop add popa js dec outsb xchg adc add (bad) in cwtl inc and imul mov sub add sahf xchg sahf or add cmc mov addr16 or loope lret inc jecxz and mov inc jne popf add aaa sbb aaa cltd inc add add imul adc xchg test imul or pop xor sbb pop xchg scas or sub loopne es dec cmpsl lea mov cmpsl out mov fldenv mov mov xchg (bad) insl dec mov add jmp xchg ret dec adc pop cmp xor lds or mov cmp pop mov fsts test lretw inc das or add xchg ds (bad) cmp xchg push out mov or sub inc inc leave jl ficomp xor movsl push push xchg add divl and mov push mov pop test jne xchg aam (bad) sbb lret arpl add xor and mov loope adc add and xor add sub or aam mov inc dec stos int3 add dec in adc pop popa call xchg rclb or and inc jo ss add outsb cmpsb pushf jae pushf in (bad) sbb cltd call push mov lret cmp rorb neg (bad) jb add cmpsl ret cmp mov daa push mov popf out fwait imul jbe in scas mov aam inc xchg ja jb xor pop or ljmp inc scas jbe xor je cmpsb call mov out ds mov adc inc aaa fisttp cmp sarb movl mov pop xchg mov mov data16 push fabs enter sub jbe stc dec dec and push arpl (bad) push loop pop or xchg fstl add lret ss mov add sub cmp push lret sub cwtl jle jge orl inc int les shlb or push test aam imul nop inc push pop push loop sbb xchg mov mov inc fdivs add add in mov mov sbb dec xchg xor inc in jp outsl push lods or mulb xchg fmul xchg adcl xor fwait and daa push ficoml add std inc icebp inc fcoml aam sarl shrb dec xor xchg or in in dec jl int3 (bad) pushf pusha sub sahf pusha sbb push rcl adc bswap es sahf movsb inc jnp xor nop adc and push pop stos push (bad) aaa das insl je xlat pop cmp pop fdivl add int pusha pop gs test mov add add clc bound dec jne jge loopne out sub add push dec mov ljmp out sub loopne test call scas push cmpsl sbb mov cmovo cmp (bad) pop add cli inc in add js jne loope jb fistpl add xchg cmp mov jecxz adc add mov fimul adc mov add mov mov adc or push or inc mov mov jle xchg pop outsb cmp fadds sbb push pusha push popf pop mov inc sub and or (bad) and sarl imul (bad) push sub and shll xchg arpl sbb sbb push mov mov add test add ss fmul xor add out dec pop das push flds aaa add jb push imul sbb xchg pop lret popf sbb mov cmp xchg sti mov jns mov sub into inc lret lea mov lds dec daa dec loope mov sbb lock pop mov xchg movsb pushf or add jae or in in in inc aad das ss add inc je adc mov rcrb push xchg add add pop sbb je mov jnp or mov and pop push dec psrlw or add sahf imul cmc sbb or mov call cltd or push sub les push fistl test lods sbb xor add lret loope inc negl lock lret or push jmp inc push pop mov mov inc push push fcoml xor pop dec push pop (bad) sbb adc mov js or sbb mov xor push mov sbb pop push adc fldt adc leave mov push nop jns push adc lods popf adc bound add sbb fmull mov cmp imul fimull stos or jo push inc mov mov dec lods inc push cmp imul mov or adc fdivs mov inc mov and mov add push xor addb rcrl or adc sub dec dec (bad) les ljmp or pushf mov shrb xor dec push mov fiadd add inc mov push outsl cmp adc shll (bad) cmpsb cs pop repnz pop mov pop or gs pusha adc dec adc add mov mov inc mov inc pop adcb jns stos cmc or inc push push mov shl jecxz inc sbb nop nop xchg jb add bound repnz dec and (bad) and push inc stc mov and aam push jecxz cli sbb xchg loope mov fwait add mulb and mov adc push cmpsb cmp add rolb push cmpsl mov in aaa stos pushf mov in xorl or and adc inc add cmp xor add cmp imul cmp (bad) nop mov push jp add inc or imul movsb sub test ljmp jmp or sti dec in sti inc cmc pop and cmc dec xor pop pop push pop dec pop divb add inc mov or add dec sbb and xchg fmull mov sti dec cld nop adc pusha fwait inc push mov adc cmpsb push nop nop jbe cmpsl pop inc (bad) mov jl rcr dec call mov enter cmp dec test push data16 sbb mov ljmp imul or int3 (bad) loop inc test jle pusha mov rcl ds dec mov in xchg out fs ja and and call pop and and xor xchg sub popf or shr shlb add rorb mov pop dec movsl xor jmp sub je dec sarl and inc xor (bad) push sarb and xor sbb push mov and jb sub push inc mov mov out addb inc mov cs xchg adc adc (bad) dec iret movsb push mov ss popf mov int3 imul jl loopne clc inc cwtl (bad) pusha or cmp mov sahf es (bad) (bad) leave aaa fimull or mov or and lahf outsb and push inc stos jmp jae nop jb loopne test jmp mov sahf (bad) inc mov add jecxz rorl es mov inc push sbbl mov mov cmp daa push fmulp or dec push inc mov cmp sub aas imul add (bad) icebp pop mov mov cltd push xchg jnp fs mov sbb icebp pop mov mov push rclb inc call or cmp mov inc add jecxz test orl mov daa or sbb jo cmp dec pop sbb sbb fdivs dec xchg in jne sbb sub loop sbb jp das push xchg and mov add pop jo pop rcrl cmpsb cs nop xchg inc out jle inc (bad) add pop add scas inc movsb fs dec xor sbb push dec iret mov mov (bad) or aaa inc adc push or dec (bad) xor sub dec jns cmp mov cld sbb std xchg lahf xchg sbb out cmpsl and inc xorl and icebp jmp stos xchg mov add inc push in lret int3 mov or testb pusha (bad) add add push sbb shll push sbb shll push sbb shll fisttpll adc test popa mov or mov inc dec push cwtl fidivr or lea bound rorl stos inc push lea fsubr mov es pop ret mov adc push aad cmp push or pop adc cltd mov rol mov les rol push sbb rcr rolb rol mov inc (bad) fadd adc je cwtl rorb adc xor xor lds cld insl scas insb mov push xchg adc adc repz std pusha mov lods mov adc lds add into icebp or pusha mov fsubp mov stos pusha mov mov adc mov inc clc xor xor mov or cmp es sub aad and sub pop sub enter rol mov cmp ss sub adc aam shlb or or and popa popa enter mov pop sbb sarb lock inc dec mov add loope inc jne in ss nop in cmpsl add or int3 xchg or jmp mov mov jbe cltd adc sub pop sub push fsts rol mov stos aaa (bad) xor loop xchg std inc test jno sub pop and rol rol rol rol rol rol rol rol adc cmp mov pusha or orb add rcrb or (bad) xor cmc pushf scas rol les or ret add pop popa les enter lds pusha add or rol ror add loopne lock or add std int3 fidivl mull cmc xchg pusha dec ja bnd je and (bad) subl in ror insb popa lret movsl adc jno jmp loopne int ficoml cmc xchg fwait in mov xchg inc (bad) loop sbb push fwait cmp or jle xchg rol rolb int3 in xlat push ret or jb cs out mov rcl outsb adc or orl fwait xchg sbb mov add (bad) mov jnp adcl sub ret xor rorl xor popa rol daa mov popa repnz and add xor add mov pop movsl inc push add adc ror loope jae fs rol lret orb add ds shl mov flds dec inc nop xchg rcll mov inc adc or les lds sub dec xchg sub loopne insl xor clc ror ljmp and sbb sub sub pop test adc adc pop xor adc (bad) mov fbstp and (bad) xor fisubl and (bad) xor add cmpb or adcb or push mov ja add (bad) es ja adc dec add mov add or (bad) sbb (bad) mov int fcompl sub xor sbb cwtl push xor (bad) jno xchg adc mov inc and or shrl cs jo jl mov and clc adc add adc and inc cmpsb dec add (bad) xor shr xorb sarb (bad) cwtl and clc adc add adc and cmp pop and les mov xor mov andb clc bound aaa adc adc add sbb outsb rclb adc pcmpgtd mov xor add add sbb shrl push sbb dec andl mov jno cmpsb sbb (bad) adc xor push iret addl sbb mov cwtl pop (bad) arpl or add leave lock in add scas lmsw inc mov cs dec mov enter sbb and test adc inc pop mov push sub int3 daa or inc add inc add dec cwtl (bad) or xchg or cmpl sbb jae adc adc cwtl cmp adc add inc mov insb add add (bad) or cmpl cmp push mov cmp mov (bad) add or push add inc cmpsl add or (bad) or xor adc rclb inc add sub inc add jmp add inc add mov push insb adc repnz cmpsb or addb or (bad) add nop inc add mov or adc adc outsb push int3 adc push addl add xchg fildl inc sahf add dec inc add sub sbb and and (bad) or pusha xorb roll incb psrld dec or add xor mov and pop cmp lret xchg loopne shlb orb sbb repnz dec and xor mov push push or adc adc (bad) mov inc lcall loopne xchg bound add push sub sub in add xchg nop jp out jge (bad) adcl fs (bad) outsb ret inc inc out xchg xor or pop add add jmp loope mov xor shl mov xchg dec xchg inc rclb mov cltd pop test cmpsl andl push and adc mov fistp pop or dec xchg cmpb nop cmp mov xchg pop mov (bad) add or lds rcll push repz imul or (bad) or outsb stc push sbb xor (bad) or (bad) or (bad) add add inc or and add mov adc adc adc pop and and and add jo add push add inc add mov nop inc add inc add inc add push adc gs imul mov xchg popa jns push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub mov xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub and movsl sub xchg test dec push xchg movsl and lcall push sub push xchg movsl sub xchg lret movsl sub xchg imul push xchg movsl and rcrl sub xchg movsl sub movsl mov adc xchg movsl sub push xchg movsl sub xchg xchg in dec push xchg orb and bound pusha inc xchg sub inc mov mov push push xchg movsl sub xchg movsl sub pop xchg pop mov pop mov fsts mov xchg les mov stos sub movsb call je inc and xor sub or inc and dec inc cmpsb out xor (bad) leave fs jge into dec dec mov xchg dec fisttpl fs fiadd mov shlb in fdivl rcrb int3 mov cld mov pusha xchg movsl sub sbb mov sbb mov xor lret ret mov xor (bad) enter rorl (bad) enter dec dec adc push xor sub bound inc test sub pop into inc sbb sbb popf pop scas scas mov add mov dec cmp push in int mov int push xchg sub mov adc es dec imul rorb pop push dec test imul push jl xchg xchg dec fistpl int3 les movsl es push movsl pusha enter leave jl mov push xchg sub mov adc dec xor cmp pop jo xor inc xor mov xchg stos (bad) mov push loop fs sbb nop mov sub cwtl bswap movsb sarb or xchg pop adc xchg int3 test lcall int mov xor (bad) in enter lea dec jb mov test xchg and mov movsb movsb imul adc push sub push push cltd push ret sbb lret call sbb call call call call call call call call ljmp mov push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub test jmp push xchg movsl sub xchg insb movsl sub cwtl adc inc sbb adc sub jecxz pusha mov add pop and dec fs and jb push fsubrl xor rcrl and adc adc sbb add inc sbb xchg movsb dec pop inc daa jb adc and insb incb dec dec leave mov movsb inc sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub nop mov and movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg loope mov addl and mov sub xor adc cmpsb stos dec test popa xor push xor push push (bad) push dec push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub mov inc jns (bad) cmc nop ficom movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl and loop mov (bad) (bad) (bad) je movsl and pop lods push lret push fidivrl fldt xchg sti insl rcl mov (bad) (bad) repz pushf lods inc fistpl jl push stos sbb test aam push xor stos inc aam sub add addr16 (bad) imul xor cwtl lcall stc jl pop mov cmp ret les shll adc xchg fwait xor sbb xor cmp jae pop and stos pop movsb push les add adc adc add push dec dec dec (bad) push push dec pop push xor xor xor push xchg ss test xor stos push mov fs and adc xchg or movsl jnp push xchg xchg xor ljmp inc xor add ret sbb lods loopne jnp pop adc inc test add hlt or test or rcl pop adc pop movsl xlat jp and add adc jo fmull mov call fdivl pop sub push cmpsb pop lret xor xor arpl loop jae xlat mov orb xor lods shr dec pop add push sub xchg adc jmp adc add xchg mov mov stos lret mov sbb jge imul mov add sti ret cld bound add adc add jge mov mov inc test sub inc (bad) insb xchg enter repz stos (bad) jae sti addr16 sbb inc call inc add adc inc and cld or (bad) xchg mov adc stos les and movsl dec enter movsl arpl rclb sub cmp cwtl mov mov clc or mov stos sub pop xor int3 lret mov fsub mov xchg mov ss jp (bad) nop repz mov pop enter inc add or insb mov ret sub sarb jb xchg jns push pop cli push mov loop ja or rorb inc add in daa adcl add mov inc lret and adc cmp mov ss or push xchg mov cltd enter or jl adc pop jmp gs (bad) jbe push xchg jnp or push imul push or add mov inc addb and movsb mov nop sbbl xorb mov lock mov or popa rclb ret jp inc push dec xor cmc in sbb pushf lret adc icebp pop pop sub stos xchg inc stos aas stos in xor int3 mov orl dec orl js orl pop and xchg loope mov (bad) pop jnp mov add xchg jae mov rcrb mov in mov add mov cmp adc push xor addb daa lahf sbb xlat rcrb sbb jmp xchg adc js (bad) mov clc das sbb js rcl push jbe ficoml mov es (bad) sub fst pop and pusha rcl orb sbbb mov cmp aaa imul push or dec mov pop xor mov cltd in fsubrl insb jae fdivrl jl jge out cltd icebp push pop sub adc loopne nop addb outsl push add inc jp hlt mov add mov hlt lret scas lahf jae aam dec jne jg and inc sub jb inc sbb fisubl sarb mov shrb icebp push xor mov cmp gs xchg sti test in push sub movsb lock cmpsb mov dec es xchg std xor pushf addb add inc fwait icebp imul or pop (bad) sahf loope xchg jle cltd mov mov cmpsb jmp (bad) mov jge jmp pop mov call sbb jle sbb mov inc adc dec dec outsl xlat in scas fwait xchg jne push (bad) sub sub push (bad) lcall dec push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub orb xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl add push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg add add add add add add add add add add add or add add add or add add add aad add fiaddl add xchg add or add js add adc add fiaddl add cwtl add or add adc add add pop cwtl add sub add adc add add add push or add xor das add adc add pop jge add adc add xchg add push movsb add pop jge add sbb add add dec fiadd add movsb add sbb add or add or add push out add sbb add sbb add lahf add or add push out add arpl add sbb add add or into add outsl pushf add sbb adc add add outsl pushf add jnp add and add and ucomiss add mov add xchg add and add adc add xchg add and add daa pop add adc add adc add sahf test add pop add sub add adc add sahf test add int add add adc lahf add stos addb mov add sub add das cmp add lahf add sbb add mov add shlb add lods add sbb add sbb add leave stos add xor add sbb add leave stos add aam add xor push add sbb add sbb add aam add (bad) add cmp add sti add sbb add push or add cmc add jmp sti add ds add push or add je add inc add hlt stos add ds add inc sub add je add out add stos add add add inc addb and add and add xchg add or add inc addb inc sldt and add out add cli add pop pop add inc sldt dec int add out add pop add and add dec int add add and fiaddl add fiadd add sti add dec xor add add fiaddl add dec add cs add cmp add dec call add sub add inc add dec call add sub add inc add push inc add push pusha add push mov add sub add push inc add pop icebp add push mov add sub add or add add imul add or add nop add imul add pop out add das nop add xor add xor add add pop jb add adc add xor add jb add add xor add add mov add xchg and add gs add xor and add gs add xor clc add sahf push add test add imul add ss add cmp add mov add insb push add cmp add mov add sar add add jo add cmp add cmp add cli add int3 mov add add jb add cmp add add int3 mov add das add jb add jne add cmp add ds add das add in add jne add ja add ds add mov add lock add jns add aas mov add lock add jns add jp add aas mov add decl add or add add jl add inc push add inc out add inc add pop adc add jle add inc out add add adc add jle add orl add push add sub add orl add add sub add xor add test add mov add inc bound add add xor add cmp add mov add mov add add dec arpl add loopne add add mov add lret add dec arpl add add push imul add lret add dec arpl add add pop je add out add add dec int3 add pop je add add xchg out add add dec pop add pop adc add add pushf clc add mov int3 add dec pop add pop test add mov xchg add dec int3 add dec pop add popa lds add add test add lods pop add dec pop add dec in add add jno add lods pop add mov add dec in add add jno add jne add mov add mov add push bound add add jne add jl add mov add mov bound add add jl add xchg add mov mov add add push push add xchg add xchg test add add push push add push fadds add add mov mov add add add mov adc add mov add testb push add push std add lods adc add testb les add pop add mov jmp add mov add pop add pop leave add (bad) jmp add rolb add xor add xchg add pop leave add pop sbb add jecxz add (bad) xchg add leave and add add add jecxz add lock add test add pop adc add testl add test add pop adc add add decb add int3 xor add ret add pusha add popa mov add sbb add iret inc add popa mov add sbb add iret inc add rcl add arpl add fs add daa xor add roll add repz fs add sub xor or add shll add add addr16 add add push dec add shll add jnp add add imul add add aam add aam add addr16 add add pusha insb add outsb sbb add lock (bad) jb add add push add outsb sbb add add (bad) jb add loop add add imul add add mov add xlat loop add cltd add imul add add mov add xchg scas add fstps add insl pop add outsb movl add add fcoml add jo add movsb inc add mov add fcoml add jo add jno add mov add rorb fimul add fist add jno add jae add rorb iret popa add fist add fist add jae add iret popa add fdivrl add loope add jae add je add fdivrl add loope add loop add je add jbe add ljmp add movl add add ja add mul add dec add out add ja add js add roll out add out add js add jp add roll and add call add jnp add lods add leave add ljmp add add mov add addl add add jle add mov add dec add jmp add in jns add add jg add dec add insl add in jns add pusha add jg add cmpl add out add out pusha add lock add out add add lock add sbb add mov add xchg add hlt push add test add sbb add cmc testb test add sbb add cmc testb negl add data16 out add mov add pop add clc iret add mov add mov add push add clc iret add cli pop add mov add mov add push add imul cli pop add cli aad add pop add imul (bad) jbe add aad add stos add mov add add pop add cld stos add (bad) sub add mov add pop add roll add sub add mov add roll add lock call add (bad) flds add lock add add faddl add call add add add add add xchg call add and add push int3 add xchg push add das insb add push int3 add or add pop add cmp inc add or add cwtl fiaddl add dec mov add mov add cwtl fiaddl add mov add or add add lcall add gs add or add push dec add fwait xchg add popf adc add jae add push dec add adc add popf adc add sub add adc add adc add mov mov add adc add mov scas add fwait int add outsl add adc add mov dec add stos mov add add adc scas add mov mov add adc add mov flds add les add pop add sbb add add (bad) testl add sub add flds add fnstsw add sbb flds add mov add sbb les add les add clc sub add les add push add and add add add and add pop add lods and add in add adc add and add add lods mov add adc add push jmp add add and sub add push jmp push sub add and pop add mov add mov add sub add cmp add pop add sub add mov add mov add cmp push inc lods add sub add sub add pop add inc lods add push add add jp add pop add mov add push add push pop dec add sub insl add mov add mov dec add pop add add insl add xor aaa add mov add push bound add movsb add mov mov push bound push push movsb add adc add mov push push sahf add adc add push add mov or push jbe add test add push add inc fwait add mov add add nop xchg add inc fwait add inc roll mov incl push nop xchg add xchg cmpsl add inc roll inc push add mov aaa add xchg cmpsl add xchg test add add dec cmp add mov test push sahf or add dec add add aaa sub sub das das xor das outsl xor inc xor xor xor xor inc aaa inc cmp cmp pop inc xor inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc push inc push inc gs inc addr16 ja inc inc push inc push inc pop inc inc push inc inc inc dec inc dec inc aaa inc inc inc imul inc insb dec dec dec inc dec inc dec dec dec addr16 imul dec inc push inc push inc push outsl push inc push dec push dec push insb push sub push inc pop xor aaa pop inc pop push pop inc pop push pop arpl popa inc popa bound fs data16 cmp addr16 arpl imul imul inc jo jae je ja jns jns sub inc xor outsl xor xor ss ss ss ss ss inc cmp cmp xor gs dec inc dec inc jp sub inc xor inc inc inc push inc pop inc inc inc inc inc das inc dec inc inc outsl inc xor push dec inc dec jp inc dec inc dec addr16 das dec gs dec push inc push dec push dec push push push push push pop push inc push inc push addr16 push push js dec push dec push push push push insb push outsl push jne pop push arpl pop xor pop bound pop jae dec pop xor pop outsl popa dec bound xor inc fs fs fs gs gs gs inc push xor addr16 dec push imul imul imul outsl imul imul insl dec insl push outsb inc jo jb jbe jbe ja ja ja ja ja ja js js js jns jns jp jp sub inc sub xor xor cmp dec das push das data16 imul das jns jp inc xor xor insl xor inc xor xor xor jp dec xor dec aaa dec aaa push cmp cmp push cmp das cmp cmp dec cmp pop inc xor cmp inc dec inc dec inc pop inc outsl inc jae jns das inc inc inc dec inc outsl inc inc inc dec inc dec inc dec inc dec inc push inc jbe xor cmp dec inc inc inc insl inc xor inc push inc imul jo cmp dec dec dec pop dec inc dec inc dec cmp dec dec dec aaa dec jno push push xor push pop push popa push js jns xor push dec push push push push dec push dec push dec push push push push push push push inc push arpl push dec push push pop das pop xor pop inc pop inc pop inc pop dec pop pop insl popa inc popa dec popa arpl inc arpl arpl jb push fs gs sub xor addr16 addr16 addr16 addr16 addr16 outsl push imul push push push push push imul imul insb inc insb data16 outsl inc outsl pop jo jo jno jb jae jae jae je je je je je jbe jbe jbe ja ja ja ja ja js js js jns jns jp sub das push das addr16 jbe inc ss ss ss ss aaa das cmp push cmp cmp ja dec inc pop inc cmp inc insl inc inc inc push xor dec inc sub inc inc inc dec dec inc dec cmp dec das push inc push inc push dec push imul inc push pop push imul fs gs inc push dec push inc push dec push dec push push push dec push pop push cmp pop inc pop outsl pop inc pop inc pop push pop inc pop push pop gs bound xor arpl dec fs fs fs xor addr16 push dec imul xor pop insl dec outsb outsl jb jae jae je je jne jbe jbe ja ja ja ja js jp sub dec das sub push das js ja dec xor inc ss ss ss aaa inc cmp cmp outsl inc jbe inc inc inc inc dec inc addr16 ja inc inc push inc insb inc jb outsl inc inc inc push inc pop dec das dec gs jp das dec dec dec dec dec dec dec jae dec dec push dec push dec pop dec cmp push das push xor push dec push dec push jp inc push inc push sub gs xor push outsl push ja das push xor push jbe ja pop dec pop imul jp dec popa push fs imul ja dec push jp imul outsl dec outsl jns jp dec jno je je je je je jbe jbe jbe ja ja js jns jp sub pop xor xor xor cmp dec ss aaa outsb cmp cmp jno outsl dec inc dec pop dec jb dec dec cmp dec dec dec xor dec addr16 ja dec push inc push dec push jne inc push push jae xor push inc push addr16 gs pop pop push popa das popa dec fs fs fs das xor push push push inc imul js inc outsl inc outsl push jae je je jne jne jbe ja ja ja ja js jns jp sub sub dec das pop xor xor xor inc xor pop xor xor dec inc push inc push inc fs jp inc inc addr16 inc inc inc inc jp dec dec push dec push dec dec dec dec dec inc dec push dec inc push inc push dec push dec push dec push dec push ja jbe inc push inc push sub push dec pop xor popa xor dec popa dec bound inc addr16 addr16 addr16 addr16 push jb jae imul imul outsl imul insl inc outsl popa jae je je jne jne jbe jbe ja js js js js das inc xor inc xor xor js inc cmp cmp jbe dec cmp xor inc push inc arpl ss push inc xor inc dec inc push dec push dec push dec inc dec das dec push dec xor dec push dec addr16 push push push push das push push push push push pop push addr16 push pop pop ss pop fs inc addr16 push inc imul das jb jae jae je jbe ja js jns jp sub xor inc das fs push xor xor cmp push cmp sub inc xor cmp inc pop inc push inc inc dec dec dec outsb dec xor dec dec dec ja jp cmp push inc push pop push inc push dec push push push push push addr16 jbe insl push outsl push jne insl push outsb push inc push dec push push push pop dec pop imul gs addr16 push outsb dec outsl inc je jbe js jns jns jns jns das push xor inc xor pop ss aaa outsl cmp cmp push inc ss aaa inc insl inc addr16 dec inc outsl inc inc inc inc dec dec dec dec insl dec outsb dec dec dec xor dec pop dec fs insb dec inc dec dec dec push push inc push dec push push push dec push jp xor aaa push inc pop push imul xor imul insl inc jo je jne jbe jbe ja ja js js jns jp sub cmp jne sub addr16 aaa jbe jae xor inc push inc push inc pop inc push dec dec dec xor dec insb dec dec dec xor ss jb das push aaa push push push xor ja cmp push push xor dec pop gs push popa push cmp arpl pop fs push cmp imul outsl push jb je je jne jbe jbe ja ja js jns sub jbe dec xor xor xor push xor inc xor dec xor ss jns das inc pop inc push inc ja pop inc pop dec das dec xor dec push dec push push jno jbe inc push addr16 xor jne push push push push push imul insb xor insb push outsb dec outsl das jae jae jae jae je je je jne jne jne jbe jbe jbe jbe ja jns jns jp sub push cmp inc xor push inc push dec push bound push push inc push inc pop arpl popa dec popa dec bound push arpl imul dec addr16 dec outsl xor outsl dec jb jae jbe ja js js sub xor aaa xor xor push xor bound xor inc inc arpl inc jae inc inc inc inc dec inc push dec ss dec dec dec dec aaa dec push dec ja gs push push sub push push pop inc pop pop pop addr16 jae xor insb gs addr16 push jb jae je js js jns sub push xor dec xor xor outsl xor xor inc jno dec dec push dec dec dec dec insb push ss push pop pop arpl push fs inc jb jp cmp jb inc inc aaa inc inc inc inc dec outsl dec xor push dec push inc push fs data16 pushw imul dec jbe ja js js js js xor ja insb cmp das inc cmp inc pop inc popa dec inc dec inc dec dec dec push dec inc dec dec dec inc dec jae jne push push push push pop push jo inc push push push imul inc pop jno inc popa bound dec fs fs push addr16 dec outsb inc outsl dec jne jne ja jp jp xor xor push inc gs inc dec inc dec aaa dec xor addr16 dec push inc push inc push dec push jb inc popa inc arpl arpl insl xor push jbe js jp sub inc cmp dec inc jns insb inc xor dec jns inc dec pop dec popa dec dec dec dec push push pop push insb push jb cmp gs gs gs push dec push jo jno jb jne jns jp sub inc xor push sub imul dec push dec inc push jo xor cmp push je insl push jno inc pop dec popa jbe dec addr16 jae push imul sub je push xor xor cmp push inc bound ja push inc push dec outsl dec jno inc dec pop dec bound push outsl push push push xor push push popa push bound pop sub bound bound popa push jno bound jo jb je jp das dec xor cmp inc xor push push arpl outsl dec jo jno jb sub sub dec xor outsl pop push inc imul jns xor jno jae jbe js jp inc push push dec cmp das jb push ss sub inc inc push inc dec addr16 inc push push push push pop fs inc arpl push jo jne xor jno push inc addr16 jp pop inc inc dec jae xor dec push push bound push gs imul popa inc gs addr16 insb arpl jno jb jb jae jne jbe jbe jbe js jns sub xor data16 xor inc xor aaa data16 je das dec ja inc push arpl push popa push push pop jo arpl outsl fs push push jb jns jns das inc inc cmp dec jb xor push outsb push inc push ja push imul insb insb insl dec jbe jbe js jns inc inc inc dec inc inc dec xor push dec gs push push jno push push push imul outsl xor outsl data16 jbe jns jns das push xor xor push inc gs xor dec jbe bound pop dec arpl inc data16 push push insl outsw push js jp xor xor xor dec jne aaa dec push dec push fs push push pop push dec popa xor push insb cmp outsl arpl jae jae jae jae jns sub xor push xor jae dec inc inc inc bound dec inc dec push dec dec inc push pop push jae xor imul insb xor dec cmp pop inc xor dec inc dec imul aaa fs addr16 push xor jae js sub dec cmp dec dec outsl push jns jns pop arpl jns cmp imul push dec ja xor aaa dec cmp dec push push xor bound jbe push push arpl outsl pop jb jne jne ja jns cmp cmp xor dec dec dec dec push xor push push push push imul imul xor jo ja dec push dec dec dec push dec xor push dec push xor push imul sub imul inc ja xor ss imul pop inc jne ja dec dec dec push xor push cmp imul arpl jne arpl push cmp push inc dec inc imul inc fs push dec dec dec outsl push data16 cmp imul inc jne jp das pop xor imul imul inc push cmp inc jae das jae jbe inc cmp imul dec inc dec dec dec jns push push push inc pop inc pop ja ja ja push ja ja jns sub das jo inc xor cmp outsb inc das dec xor push ja inc data16 push dec jbe xor xor sub inc cmp inc push dec pop dec jp jp push push push pop push bound dec arpl cmp imul js sub xor inc inc push dec ja push dec inc push imul pop inc insb push jbe jbe jp xor xor xor xor xor push inc push inc pop dec imul dec push dec cmp push push push outsl push dec push inc push push push imul jb jae jae jne jbe ja jp das inc xor outsb xor xor xor jo push inc xor dec xor dec insb gs pop ja jns sub inc xor push ss cmp dec dec push dec pop dec push push jno sub arpl pop push gs imul popa pop jbe jb bound bound imul push imul insl gs je ja ja xor outsl xor xor dec cmp push inc cmp dec cmp dec outsl dec inc dec inc dec inc push pop push bound pop jno jns cmp pop inc data16 bound dec je jbe jbe jp xor xor xor push xor ss inc xor dec dec dec jno xor push jp xor push jbe inc bound inc push cmp jb jb jbe ja ja ja jns jp jp sub sub jno inc ss ss ss ss ss arpl fs popa push pop push sub inc popa sub push push dec insl das insl xor insl push insl imul dec jne ja js jp xor push xor push ss aaa push aaa pop inc push inc dec inc push dec dec dec pop dec jns je pop dec popa dec insl dec je jbe dec push inc push dec push dec push je das pop xor pop push bound bound bound push bound insl bound xor xor outsb imul js js jp xor push xor insb xor push cmp push inc dec inc jo jae je jne jbe imul inc jae jne inc inc inc dec xor dec insb dec jae jbe inc dec push dec push dec push push xor push push push push je xor pop outsb pop xor pop outsb popa xor popa pop bound bound push bound imul arpl pop arpl outsb arpl insl fs dec gs imul insb push insb jns jp je jo aaa xor jp xor dec ja jae xor push push outsb push imul insl pop jns xor pop insb gs jo js cmp jno je jne js arpl inc jb xor dec addr16 dec dec ja inc push xor push outsb push push push push pop xor popa push popa ja bound xor inc insb imul insb dec addr16 dec dec addr16 push push xor cmp inc inc push push das push cmp jbe jbe ja jp das dec cmp imul ss gs xor dec je xor push xor push pop pop dec pop push pop jo push bound pop bound fs inc gs push insb jae dec xor jb push dec jne imul inc dec jo jb push push xor push pop push inc push pop push insl push xor push push push jo inc bound insb fs insb insb ja jp imul insb ja xor push inc push inc push push xor insl js xor jns jp das inc ss pop inc jno insb dec inc dec xor cmp dec popa dec arpl push imul addr16 push insb push jo sub push inc fs dec inc push inc jo push inc inc inc ja jns imul pop jb push jo jo jno jae je ja xor push xor cmp gs popa inc pop inc je ss push dec pop dec jb insl dec jb dec push push push jp jp arpl push ja xor dec outsl inc outsl ja push jno jno jb jb jae jns xor xor sub sub push outsb inc inc inc dec inc push dec xor dec push push push outsb push je push pop insl pop jp xor gs imul outsb jno ss jb xor xor pop xor xor xor aaa ja jne insl inc bound inc xor inc pop inc pop inc bound addr16 push inc push dec jno jb jo push pop pop push pop jb xor dec pop fs aaa bound bound cmp bound pop data16 jo xor outsb push outsb ja cmp jo jo jo jo jno jno jno jno jno jb jb jb jb jne jne jns jns das push je cmp push xor js cmp dec xor xor ss dec aaa push imul cmp push js dec inc popa inc dec inc xor sub dec gs imul push push push push pop arpl data16 data16 push push outsb outsb jo jo jo jb jb jb jb jae jae jae jae je jne jbe ja ja ja sub xor xor xor outsb xor aaa cmp inc jbe js js outsb inc js xor dec dec dec xor dec dec jo push push push pop push popa push popa outsb outsb gs ja xor insb pop outsb push outsb outsb jns xor jno jb jb jb je jne js js jns jns xor jo je ss imul inc push dec dec jp xor imul push push push insl pop inc popa jb push jae aaa cmp insl xor outsb pop outsb data16 jo ss jno jno jb jb jae jne jns jp jp das arpl imul dec xor cmp xor insl cmp js dec inc push inc push inc gs outsl dec js push dec push dec push dec inc dec push dec push push push arpl push jne cmp push push dec pop jne jb bound jno js outsb data16 das insl push insl pop insl jo inc outsl jne jbe jae pop jae jne jne jne jne jp xor bound imul xor jae inc cmp popa inc ss push dec imul push insb push cmp popa outsl outsb cmp push push imul insb jo pop jae jbe js sub xor pop xor xor dec xor ss dec cmp cmp push inc xor inc outsb dec jp dec dec outsb pop dec pop xor cmp insw insl push push imul jne jno arpl jae js js jns jp xor xor js sub aaa inc jne js imul dec jns ss inc dec dec dec outsl push xor pop inc pop xor popa xor inc push pop insl inc insl push insl jns dec jb jb je je jne jbe js jp jp das dec xor xor das xor dec xor push xor inc xor xor ss xor inc fs jp jns sub pop dec jne xor push inc push push push ss dec push pop pop inc pop js dec pop sub arpl jno xor imul outsl push jo jno jno jb je jne jns jns sub dec xor xor jae jp jno jb bound xor insl jne jp xor jno jns jp das popa xor xor push xor xor xor pop cmp sub inc xor dec insl dec dec push sub fs push jb dec addr16 imul xor outsl dec outsl push outsb jb jb jae jae je je jne js jns sub jns pop xor inc dec dec fs outsl dec aaa push push ja imul push dec popa cmp data16 data16 outsb xor cmp cmp push xor imul je push sub jp cmp ss ss jne bound dec dec dec xor dec bound push jae popa pop dec pop dec arpl fs pop data16 push insb aaa insl insb outsb outsb cmp jno js jns jns jp jp jp xor dec xor bound fs xor dec sub arpl dec pop dec push push pop pop inc bound popa fs gs imul js inc jae jae je je jne js jns jns jp sub push dec xor xor xor xor xor push cmp inc popa inc jae cmp dec aaa dec aaa dec gs xor insb dec jae xor dec push dec outsb push push push imul popa jne pop addr16 push push outsl addr16 jo jb jae je je jne jns jp jp sub jne push cmp insb inc je je arpl dec ss imul cmp popa push popa pop fs fs push jno outsl gs jo jno jno jb jb jne jns das push xor inc xor xor dec dec dec jno gs dec push push popa bound bound push imul insb popa insl dec outsb dec outsb push ja jp xor inc insl inc push inc insb dec push dec pop push xor push jns je push bound das push insb je je jae dec jno jb je ja jp xor xor dec push dec jp jbe fs cmp bound bound push outsb inc jo jae ja jp dec push push jp jno push jae jne jbe jp sub popa xor xor xor xor cmp jb cmp dec xor push js dec pop dec popa jno jo jno imul outsb aaa sub xor xor cmp ja xor dec dec js push dec jne bound pop dec pop push popa insb inc insb outsb insl addr16 jae je js jp xor jns jp jae jne xor dec imul bound outsb insl insl jb je je jne jbe xor bound aaa insl cmp dec xor dec push dec jbe jp xor push xor popa fs outsl insl outsb xor jo jno jb jae je jne jbe ja js jns aaa cmp push aaa fs push pop insb push insl push outsb dec outsb push jno jno jae jne jne js jp sub dec xor insl dec je fs outsb inc jno jno je jbe js jp jp sub jno dec xor aaa dec gs cmp push jb xor fs xor jae push insl pop jb jae je jne jbe jbe xor pop cmp arpl inc jb js pop gs insl dec jo xor cmp jo jne push push jo bound jno jno jno jae jbe jp sub sub bound push xor dec inc xor push push insl push pop push dec xor push sub jno jb jne jne xor bound insl dec jns dec jb jne aaa popa popa bound addr16 push outsb pop outsb jbe jne push xor push ss aaa pop inc arpl dec das dec fs pop push arpl push jo jbe jbe ja sub xor inc aaa dec xor dec push push dec popa push outsb xor jne jns xor xor insl dec jbe cmp pop push pop sub bound sub push insl arpl je ja jp jp das outsb xor pop cmp bound dec pop push ss gs imul jno xor xor dec inc xor push jo arpl push jb insl jb je je jp sub sub sub push ss pop je jne inc gs dec insl push jae jns jp das pop xor dec push imul aaa popa inc jo push dec arpl push jns ss jns dec gs imul jb jbe jns aaa jp arpl dec inc pop popa arpl push jb jae js jp imul push bound pop dec gs jns js sub js push aaa push aaa jo jo popa push outsb push je cmp pop das push imul outsl push jo jno jae jbe jns jns dec popa dec inc push jo xor insl inc je xor ss jae pop dec gs insl dec popa dec fs fs imul pushw imul insb outsl push jb jne jne jne ja js xor dec aaa xor xor dec dec dec fs je bound pop dec pop push pop js popa bound popa imul jno ja dec xor push dec push push js imul imul ss ss insb arpl jo xor ss xor dec imul jbe arpl xor jbe push dec push dec je imul jno xor xor outsb cmp ss xor dec arpl dec inc push jne inc pop pop pop popa pop jne push jne inc cmp inc imul push je ss cmp dec push js jns push js js xor dec cmp popa jo dec jp xor popa dec pop outsl aaa jbe xor das dec jno jae sub das push xor fs cmp pop imul push imul cmp bound push push imul imul sub xor push dec bound arpl arpl dec data16 jae arpl xor cmp jp dec dec outsb push push pop outsb pop pop bound je jbe push jo jb js jns xor xor dec dec ss push pop push pop jo xor dec arpl push insl jae inc jno xor jae jb outsl dec xor pop xor sub imul jbe jae outsb dec inc dec imul xor push xor push outsl dec jno jns dec dec push push push jb data16 xor dec jo insl push outsb push jo jno jne dec push xor insb dec push imul dec gs js push push xor dec ss js jp jp push sub dec insl dec je 