xchg mov jb push mov jb push jb inc mov jb mov mov jb int jb add jb xchg mov jb fwait mov jb mov mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb add jb xor movsb jb jne jb xchg mov jb jne jb out mov jb frstor jb add add pushf sub add adc add add adc add add and add add mov add add add push push inc add add add add add add mov add add add add add or inc add add add add add add outsb pop inc add add add add add add ficoml inc add add add add add add cmp inc add add add add add add lods sbb add add add add add pop sbb add add add add add push add add add add add rcrl add add add add add add cmp inc add add add add add add int inc add add add add add add sbb add add add add add mov add add add add add add add add add add add add jp inc add add add add add add adc add add add add add js inc add add add add add add fcompl add add add add add push inc add add add add add add into push inc add add add add add add das pop inc add add add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add in push into and inc cmpsl fwait cmc add push mov add add add je outsl jns outsb add dec xor add (bad) mov dec cmpb in aam or sub dec xchg mov pop sub dec lods xor or stos add xchg popa add add add push add jo outsl push addr16 aaa add jns outsl jo jns outsl jo imul add inc add add add jo jo jns outsl jo imul test add adc add sub add sbb add inc add add add xor add or add add sbb xor add (bad) decl add add add add add add add add add inc add inc add add addl add add inc outsb outsl arpl gs imul jb outsl jb jae je outsl outsb xor add je outsl jns outsb addr16 add add add add add pop inc add add xor adc add inc add sbb icebp add add add and pop dec cmpb in aam or adc add mov add add add push add add (bad) clc dec xchg pop xchg mov jae popl add add add add push add out cmpsb add add add call add add add hlt and mov mov add add add add push add sbb add add add pop dec inc add add add add adc mov cmpsl cld or (bad) sahf jge add add add add push push add add add sub add add push add add pusha int gs and mov add add add add repz add sub inc add add mov stos mov mov mov sldt add add push add or add add add sbb inc add add add add xchg add mov jg sahf mov add add add add add push add sbb add add add inc dec inc add add push add add mov sub sbb add add add add push add ds add add add test inc add add add ljmp dec cltd or cmpsl or add add add sub add add inc add add add add pop icebp (bad) decl lods into mov add add add add push add fild add pop sub sbb add push add add mov push dec lods xor push or add add add lock add cmp inc add add add add add add inc add add add sbb pop add add add add add add add pop inc add add add push inc add add add add add inc add add add adc add movsb adc add dec adc add or add rclb pop add add add add add adc add add add adc pop add add add add inc add add add adc pop add add add dec adc pop add add inc add add add add jo inc add add add inc add add add adc pop add add add cmp inc add add add cmovno pop add add add push add add inc add add add push inc add add add inc add add add push inc add add add or add xchg or add push or add hlt or add add add add insb or add add add or add add add or pop add add add add inc add add add or pop add add add add inc add add add inc add add add or pop add add inc add add add inc add add add or pop add add add cmp inc add add add pop inc add add add add dec pop inc add add add inc add add add push inc add add add inc add add add inc add add add add add xchg add add dec add add cld add add add add add push add add add add add add add pop add add add cmp inc add add add add pop add add add add inc add add add inc add add add add add add add add add pop add add add pop add add add add add inc add add add incl pop add add add add inc add add add incl pop add add add add add add add inc add add add std inc add add add add inc std inc add add add cld inc add add add add add add add add inc add add add sti inc add add add inc add add add inc add add add cli inc add add add add add add add add stc inc add add add add push stc inc add add add stc inc add add add clc inc add add add add add inc add add add testl nop testl dec testl clc testb add add add add add add add inc add add add add push add add add loopne inc add add add add add add add add hlt inc add add add add add add add add repz add add add repnz add add add add cmp inc add add add icebp inc add add add add add add add add inc add add add lock add add add add add add lock add add add out inc add add add add cmp inc add add add out inc add add add add dec out inc add add add out inc add add add add add add add add add shr inc add add add add add inc add add add jmp add add add add pop jmp add add add inc add add add ljmp js inc add add add ljmp loopne inc add add add add xor inc add add add call add mov add add inc add add add inc add add add out add add add inc add add add out add add add out add add add add add inc add add add inc add add add add fs add add add in add add add in add add add add inc in add add add inc add add add add push add add jecxz add add add loop add add add add add add add add loope add add add add pop loope add add add loope add add add add push add add inc add add add fild pop add add add inc fild pop add add fiadd pop add add add add add add add inc add add add fldl pop add add add add add add loopne inc add add add add push faddl pop add add fildl pop add add add push add add inc add add add fiaddl pop add add inc add add add inc add add add flds pop add add add add add add add inc add add add add push add add fadds pop add add xlat inc add add add add dec xlat inc add add add (bad) inc add add add add insb (bad) inc add add add inc add add add add add add add add add lods aam add add add inc add add add aam add add add add jo inc add add add inc add add add rolb pop add add add add add add add roll pop add add add add inc add add add roll add add inc enter add add (bad) (bad) incl add add xor add add and les inc add add add rolb add add mov inc add add add add add add nop es add mov push es add inc add add add add adc xor add add add pop add add jg add test pop add add adc cmp add add add sbb add enter sub test sbb add inc add add add add add adc add enter inc addl add add add add adc add enter push addl add add add add add add jg add test add add inc add add add add add or add enter jo test or add inc add add add add add add add jg add add inc add add add add add (bad) (bad) (bad) incl add add jl add (bad) (bad) incl adc push add add add add add add jg add jnp add add add add add add or add enter dec arpl add adc pop add add add add add enter or test sbb add inc add add add add add adc add enter and add add add adc add add add add add add jg add imul inc add add add add add or add enter enter or add inc add add add add add add add jg add add inc add add add add add push add add jg add add inc add add add add add add add jg add test or add inc add add add add add or add add jg add push test or add add add add add add add jg add add inc add add add add add add jg add jg adc add inc add add add add add enter loopne test add add inc add add add add add add jg add pop test push add add adc mov add add add add add enter mov add add adc nop add add add add add add jg add rolb xor inc add pop add add inc add (bad) (bad) incl add add add add jg add inc add (bad) (bad) call add inc add inc add inc add sub mov sub mov sub (bad) sub jecxz inc add sub std sub or inc add sub and inc add sub sub dec sub pop sub sub jb inc add inc add inc add sub shrb add sub fisubrl inc add sub hlt sub add inc add sub sbb inc add sub xor sub dec sub pop sub imul inc add sub popf sub stos sub mov inc add sub shrl inc add sub jmp inc add sub add sub pop sub sub inc add sub inc sub push sub pusha sub insl sub jp inc add add add and push adc pop adc pop adc pop sub subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add inc enter add add inc add (bad) (bad) incl add add enter xor add add jle add inc add add add add add inc add add add inc add add add sub add sub add add add inc add add add inc add inc add adc xor add cld sbb pop add add jge hlt aad add add add adc cmp add cld sbb or add add add add xor enter mov add add adc cmp add cld sbb or add dec xor enter sub inc add add inc add add add cld sbb sldt add jg add add inc add add add sbb sbb add add inc add jg add testl inc add add add cld sbb pop add add inc add jg add in inc add add add adc dec add add sbb adc add mov jg add add inc add add add cld sbb push add add xor enter xor inc add add add adc push add add sbb or add je inc add jg add inc add add add adc pop add add sbb sbb add (bad) xor enter sbbb add add add adc pop add add sbb push add add inc add jg add add inc add add add cld sbb adc add mov add jg add add inc add add add sbb or add in inc add jg add add inc add add add cld sbb adc add inc xor jge mov add add adc insb add add sbb add add add add add jge les inc add add add add cld sbb push add add xor jge int3 sbb push add add adc je add cld sbb add add push ss add jg add sbb add add inc add add add cld sbb adc add mov inc add jg add sbb adc add inc add add add sbb or add or inc add jg add sbb or add inc add add sbb adc add add add add inc add jg add inc add add add inc add add les inc add jg add inc add add inc add add sbb adc add and inc add jg add sbb add add add adc mov add cld sbb sbb add jl inc add jg add inc add add add adc nop add add sbb sbb add fdivrs inc add jg add inc add add add adc xchg add add sbb add add xor inc add jg add inc add add add adc cwtl add add sbb add add nop cmp enter fs add add inc add add inc add add add cmp enter jo inc add add add adc mov sbb or add dec cmp enter sbbb or add inc add add inc add (bad) (bad) incl add add add add jge push rolb (bad) (bad) (bad) incl add add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add sub add inc add inc add inc add sub add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add sub inc add inc add inc add inc add sub inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cs add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add das inc add inc add inc add inc add das inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add add inc enter add add or (bad) (bad) incl add add inc add inc add add add jle mov inc add add add inc add add add add add add add add mov add add inc add inc add add add add add inc add adc xor add cld sbb add add inc inc inc add jg add inc add add add adc cmp add cld sbb pop add add jge js inc add add add adc cmp add cld sbb or add clc inc inc add jg add add inc add add add cld sbb adc add push inc inc add jg add add add adc inc add add sbb adc add mov inc add jg add add inc add add add cld sbb adc add or inc add jg add add inc add add add inc add (bad) (bad) incl add add add add inc add rolb (bad) (bad) (bad) incl adc push add add sbb pop add add inc inc add jg add add inc add add add sbb or add pop inc inc add jg add push inc add add add adc pop add add sbb add add mov inc add jg add push inc add add inc add add add sbb or add add add add inc inc add jg add push inc add add add add cld sbb adc add insb inc inc add jg add push inc add add inc add add add sbb sbb add enter enter or inc add add inc add add add cld sbb sbb add and inc add jg add inc add add add adc insb add add sbb sbb add addb enter and inc add add add adc jo add cld sbb push add add inc inc add jg add pop inc add add add adc je add cld sbb add add add add add inc inc add jg add add add add add cld sbb adc add add add add jge push pop inc add add add add sbb or add lock inc add jg add add add add adc addb add sbb sldt add add jg add inc add add add adc test add cld sbb or add test inc add jg add add add adc mov add cld sbb or add add inc add jg add add add adc mov add cld sbb add add pusha dec inc add jg add add add adc nop add add sbb add add mov jg add add inc add add inc add add add dec inc add jg add add add adc cwtl add add sbb adc add je inc add jg add pop inc add add add adc pushf add add sbb sbb add rorb add jg add pop inc add add add adc mov sbb sbb add sub inc add jg add pop inc add add add adc movsb add add sbb push add add jg add pop inc add add add add add cmp push adc pop adc pop adc loopne inc add cmp push adc pop adc pop adc or add cmp push adc pop adc pop adc xor add cmp push adc pop adc pop adc pop cmp add cmp push adc pop adc pop adc cmpb cmp inc add inc add inc add inc add cmp push adc pop adc pop adc sarb add cmp push adc pop adc pop adc clc cmp add cmp push adc pop adc pop adc and inc add inc add inc add inc add inc add cmp push adc pop adc pop adc jo inc add cmp push adc pop adc pop adc cwtl cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add cmp inc add inc add inc add inc add ds add cmp push adc pop adc pop adc cmp inc add cmp push adc pop adc pop adc pusha ds add cmp push adc pop adc pop adc mov inc add cmp push adc pop adc pop adc mov inc add cmp push adc pop adc pop adc fdivrs inc add cmp push adc pop adc pop adc add inc add cmp push adc pop adc pop adc sub inc add cmp push adc pop adc pop adc push aas inc add cmp push adc pop adc pop adc js inc add cmp push adc pop adc pop adc mov cmp push adc pop adc pop adc enter cmp inc add inc add inc add inc add aas inc add cmp push adc pop adc pop adc sbb add cmp push adc pop adc pop adc add add inc enter add add or (bad) (bad) incl add add leave inc add add add add gs pop dec inc add add add add pop dec inc add add add add add add inc add dec inc add add add dec inc add add add add mov add adc xor add cld sbb adc add in dec inc add jg add sbb add add add adc cmp add cld sbb sbb add dec push inc add jg add sbb add add add adc cmp add cld sbb sbb add movsb push inc add jg add sbb add add add adc inc add add sbb add add add add jg add sbb add add inc add add add sbb pop add add add jg add sbb add add add adc dec add add sbb or add mov jg add add inc add add add sbb or add adc inc add jg add sbb add inc add add add cld sbb or add jo inc add jg add add inc add add add sbb adc add int3 push inc add jg add add inc add add add cld sbb sbb add sub add jg add add add add adc pop add add sbb adc add test add jg add add add add adc pusha add add sbb or add loopne inc add jg add inc add add add adc add add sbb push add add inc add jg add add add add adc push sbb adc add cwtl push inc add jg add add add add adc insb add add sbb add add add add add push inc add jg add add add add add cld sbb or add push push inc add jg add add add adc je add cld sbb push add add jge nop sbb add inc add add add cld sbb adc add add add add push inc add jg add add add adc jl add cld sbb adc add fs inc add jg add add inc add add rolb (bad) (bad) (bad) incl add add add add push inc add rolb (bad) (bad) (bad) incl adc test add cld sbb push add add add jg add add add adc mov add cld sbb sbb add mov inc add jg add sbb add inc add add inc add add add inc add jg add sbb add inc add add sbb add add push jg add sbb add inc add add inc add add add pop inc add jg add sbb add inc add add sbb add add and add jg add sbb add inc add add inc add add add add jg add push inc add add add adc mov sbb or add add add add pop inc add jg add push inc add add add inc add add add inc add jg add push inc add add add add add add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add inc add inc add inc add inc add add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add inc add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add add dec inc add inc add inc add inc add inc add inc add inc add inc add dec inc add dec inc add inc add inc add inc add add add add add inc add (bad) (bad) incl add add xor add add add add pop inc add add add inc add add add pop inc add add add pop inc add add add inc add pop inc add add add gs add add add add inc add inc add adc xor add cld sbb adc add cwtl pop inc add jg add inc add add add adc cmp add cld sbb or add hlt pop inc add jg add inc add add add adc cmp add cld sbb adc add push pusha inc add jg add add add add adc inc add add sbb or add lods pusha inc add jg add add add inc add add add sbb add add or add jg add add add add adc dec add add sbb sbb add fs inc add jg add inc add add add adc dec add add sbb add add shlb enter mov inc add add add adc push add add sbb sldt add inc add jg add add inc add add add sbb or add js inc add jg add add add adc pop add add sbb add add aam inc add jg add add add adc pop add add sbb adc add xor add jg add add inc add add add cld sbb push add add jge int3 and push add add adc add add sbb sbb add call jg add and sbb add inc add add add cld sbb sbb add inc fs add jg add and sbb add inc add add add sbb or add add add add jg add and or add add add cld sbb push add add fs add jg add inc add add add adc je add cld sbb pop add add inc add jg add inc add add add adc js add cld sbb push add add jge sbb inc add add add adc jl add cld sbb or add adc add jg add and or add inc add add sbb adc add add add add add jg add inc add add add inc add add add inc add jg add inc add add add adc mov add cld sbb pop add add inc add jg add inc add add add adc mov add cld sbb add add add add add jg add add add add sbb adc add fsubl add jg add add add inc add add inc add add add push jge jl inc add add add adc cwtl add add sbb or add xchg push jge mov inc add add add adc pushf add add sbb sbb add lock jge pushf and sbb add inc add add sbb adc add dec imul lods and adc add inc add add inc add (bad) (bad) incl add add add add jg add inc add (bad) (bad) incl add add pop inc add adc pop adc pop adc cmp add adc pop adc pop adc pusha pop inc add adc pop adc pop adc mov add adc pop adc pop adc mov inc add adc pop adc pop adc fcomps add adc pop adc pop adc add nop pop inc add inc add inc add inc add pop inc add adc pop adc pop adc push pop inc add adc pop adc pop adc js inc add adc pop adc pop adc mov pop inc add inc add inc add inc add pop inc add adc pop adc pop adc lock inc add adc pop adc pop adc sbb add adc pop adc pop adc inc pop inc add adc pop adc pop adc push pop inc add inc add inc add inc add pop inc add inc add inc add inc add pop inc add inc add inc add inc add pop inc add adc pop adc pop adc or add adc pop adc pop adc xor add adc pop adc pop adc pop pop inc add adc pop adc pop adc sbbb nop pop inc add inc add inc add inc add pop inc add inc add inc add inc add pop inc add adc pop adc pop adc clc pop inc add adc pop adc pop adc and add adc pop adc pop adc dec pop inc add adc pop adc pop adc jo inc add adc pop adc pop adc add add inc enter add add (bad) (bad) incl add add enter xor add add add add add int3 sbb add add mov inc add add add add mov add add mov push outsl inc add add add add sbb in sbb inc add add add cld sbb pop add add add jg add inc add add add adc cmp add cld sbb sbb add mov jg add sbb sbb add inc add add add cld sbb adc add cld outsl inc add jg add sbb adc add inc add add add cld sbb adc add pop jo add jg add inc add add inc add add add sbb add add mov inc add jg add inc add add add adc dec add add sbb or add adc add jg add add add add adc dec add add sbb adc add add add add add jg add add add add add inc rolb (bad) (bad) (bad) incl add add add add jno add rolb (bad) (bad) (bad) incl adc push add add sbb add add add add add add jg add sbb add add add add cld sbb or add mov jg add add inc add add add sbb sbb add adc inc add jg add sbb sbb add inc add add add cld sbb adc add jo inc add jg add adc adc add inc add add add sbb adc add int3 jae add jg add pop inc add add add adc push sbb or add sub enter xor inc add add add adc insb add add sbb sldt add jge jo inc add add add adc jo add cld sbb push add add je add jg add add add add adc je add cld sbb or add cmp inc add jg add pop inc add add add adc js add cld sbb or add add add add jg add pop inc add add add add sbb sbb add hlt jne add jg add add inc add add sbb adc add push jbe add jg add add adc add inc add add inc add add add jge dec or add inc add add sbb push add add ja add jg add inc add add add adc mov add cld sbb add add fs add jg add add add inc add add sbb sbb add (bad) ja add jg add add inc add add inc add add add inc add jg add inc add add add adc cwtl add add sbb sbb add js inc add jg add cmc inc add add add adc pushf add add sbb pop add add js add jg add out inc add add add adc mov sbb or add xor add jg add testb add add adc movsb add add sbb add add mov add jg add inc add add add add add inc add inc add inc add inc add push add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add imul push add inc add inc add inc add imul push add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add insb inc add inc add inc add inc add inc add insb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add insl inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add outsb inc add inc add inc add inc add inc add outsb inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add or (bad) (bad) incl add add xor add add gs pusha jp add add add and add add pusha jp add add add inc add add add add jp add add add jle add inc add add add addb and call add add add cld sbb push add add jle add jg add and push add add adc cmp add cld sbb adc add dec jg add jg add and adc add inc add add add cld sbb add add test inc add jg add inc add add add adc inc add add sbb add add add inc add jg add and add add inc add add add sbb sbb add pusha addb jg add inc add add add adc dec add add sbb add add mov jg add inc add add inc add add add sbb adc add add add add addl pop and adc add add add cld sbb pop add add add jg add add add add adc push add add sbb or add rolb jge je inc add add add adc pop add add sbb push add add inc add jg add add add adc pop add add sbb or add mov jge nop and or add inc add add add cld sbb or add in inc add jg add add inc add add add sbb adc add inc addl jg add add add adc push sbb adc add pushf addl jg add and adc add inc add add add sbb or add clc addl jg add and or add inc add add add inc rolb (bad) (bad) (bad) incl add add add add add rolb (bad) (bad) (bad) incl adc je add cld sbb sbb add call jg add and sbb add inc add add add cld sbb sbb add inc test enter lock sbb add inc add add add sbb add add add add add jg add and add add add sbb adc add cld test enter or inc add add add adc test add cld sbb pop add add inc add jg add inc add add add adc mov add cld sbb add add mov inc add jg add inc add add add adc mov add cld sbb or add adc jge sub inc add add add adc nop add add sbb sbb add insb xchg enter cmp inc add add add adc xchg add add sbb push add add xchg enter dec and push add add adc cwtl add add sbb adc add and inc add jg add inc add add add adc pushf add add sbb or add add add add jg add add add add sbb sbb add fmull jge insb and sbb add inc add add inc add add add mov enter js inc add add add add add inc add jns add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jp add jns add inc add inc add inc add jnp add jns add inc add inc add inc add jnp add jns add inc add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jnp add jns add inc add inc add inc add jnp add jns add inc add inc add inc add jl add jns add inc add inc add inc add inc add jns add inc add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jl add jns add inc add inc add inc add jl add jns add inc add inc add inc add jge add jns add inc add inc add inc add jge add jns add inc add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jge add jns add inc add inc add inc add jle add jns add inc add inc add inc add jle add jns add inc add inc add inc add inc add jns add inc add inc add inc add inc add jns add inc add inc add inc add jns add inc add inc add inc add jle add jns add inc add inc add inc add add add add add add or (bad) (bad) incl add add inc add add push data16 or inc add add add inc add add add inc add add add inc add add add mov sbb mov add mov push mov cmp inc add add add daa inc add inc add adc xor add cld sbb adc add add add add jge inc daa inc add add add add add sbb or add clc mov enter push daa inc add add add adc cmp add cld sbb add add add add add add jg add add add add add cld sbb sbb add mov inc add jg add add add add adc inc add add sbb or add add add add inc add jg add add inc add add add cld sbb or add push jg add add add adc dec add add sbb adc add les jge mov add add adc push add add sbb push add add xchg inc add jg add add inc add add add sbb adc add jl inc add jg add add add adc pop add add sbb pop add add xchg inc add jg add daa inc add add add adc pop add add sbb adc add xor inc add jg add daa inc add add add pop add add inc rolb (bad) (bad) (bad) incl add add add add jg add inc add (bad) (bad) incl adc add add sbb adc add and inc add jg add daa inc add add add adc push sbb push add add jg add daa inc add add add adc insb add add sbb add add fcoml jge lock inc add add add adc jo add cld sbb push add add xchg inc add jg add sub push add add adc je add cld sbb add add xchg xchg inc add jg add inc add add add adc js add cld sbb add add lock inc add jg add sub add add inc add add add sbb adc add dec xchg inc add jg add sub adc add inc add add sbb or add test inc add jg add sub or add inc add add inc add add add inc add jg add inc add add add adc mov add cld sbb sldt add inc add jg add inc add add add adc mov add cld sbb sbb add mov jg add inc add add add adc nop add add sbb pop add add xchg inc add jg add inc add add add adc xchg add add sbb add add je inc add jg add add add add adc cwtl add add sbb or add rclb jge jo inc add add add adc pushf add add sbb sbb add sub inc add jg add add inc add add sbb sbb add mov jge xchg sub sbb add inc add add inc add add add cwtl inc add jg add add add add adc inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov xchg mov push adc pop adc pop adc add inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add mov xchg mov push adc pop adc pop adc hlt mov xchg mov push adc pop adc pop adc sbb inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add mov xchg mov push adc pop adc pop adc or inc add inc add inc add inc add inc add inc add inc add inc add add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lea xchg mov push adc pop adc pop adc cld lea xchg mov push adc pop adc pop adc and inc add inc add inc add inc add add inc add inc add inc add add inc add inc add inc add add add add add add inc add (bad) (bad) incl add add leave inc add add lock mov add add add add add add cltd inc add add add add rcrb add insb add inc add add add add push addb and mov inc add adc xor add cld sbb sbb add dec sahf inc add jg add and sbb add inc add add add add sbb sldt add jge enter sldt add adc cmp add cld sbb sbb add add jge aam inc add add add adc inc add add sbb adc add pop lahf inc add jg add and adc add inc add add add sbb adc add mov jg add and adc add inc add add add cld sbb sbb add adc inc add jg add and add add inc add add add sbb pop add add inc add jg add inc add add add adc push add add sbb add add int3 mov jge sbb add add add adc push add add sbb push add add mov jge sub inc add add add adc pop add add sbb adc add test jge cmp inc add add add adc pop add add sbb add add add add add mov jge dec and add add add add cld sbb or add cmp inc add jg add add add inc add add add sbb sbb add cwtl mov jge pusha and add add add adc push sbb sbb add hlt mov jge je inc add add add adc insb add add sbb or add push mov jge andb or add inc add add add cld sbb add add lods mov jge mov add add inc add add add sbb add add or add add add adc js add cld sbb adc add movsb inc add jg add add inc add add add sbb adc add add add add movsb inc add jg add add inc add add sbb push add add jge shlb push add add adc test add cld sbb or add add add add inc add jg add and add add add sbb add add aam inc add jg add and add add add adc mov add cld sbb or add xor jge lock add add add adc nop add add sbb push add add jge cld and add add add adc xchg add add sbb adc add call jg add add inc add add sbb pop add add add jg add and add inc add add inc add add add jg add add inc add add sbb or add cld cmpsl inc add jg add inc add add add pop add inc add (bad) (bad) incl add add add add inc add rolb (bad) (bad) (bad) incl add add cltd inc add inc add inc add inc add inc add cltd inc add inc add inc add inc add inc add lcall push adc pop adc pop adc cmp inc add inc add inc add inc add inc add inc add inc add inc add inc add cltd inc add inc add inc add inc add cltd inc add inc add inc add inc add lcall push adc pop adc pop adc add inc add inc add inc add inc add fwait inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cltd inc add inc add inc add inc add fwait inc add inc add inc add inc add inc add fwait inc add inc add inc add inc add inc add pushf inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cltd inc add inc add inc add inc add cltd inc add inc add inc add inc add pushf inc add inc add inc add inc add inc add popf inc add inc add inc add inc add inc add popf inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add cltd inc add inc add inc add inc add cltd inc add inc add inc add inc add popf inc add inc add inc add inc add inc add popf inc add inc add inc add inc add inc add sahf inc add inc add inc add inc add inc add add add add add add (bad) (bad) incl add add inc add xor add add add add add add add sub add add fs add insb test add push add add add add add lods inc add inc inc add add add addb sub loopne inc add adc xor add cld sbb add add hlt lods inc add jg add sub add add inc add add add add sbb pop add add inc add jg add sub pop add add adc cmp add cld sbb sbb add lods scas inc add jg add inc add add add adc inc add add sbb sbb add or jge adc inc add add add adc inc add add sbb sbb add fs inc add jg add inc add add add adc dec add add sbb or add shrb add inc add add add adc dec add add sbb push add add inc add jg add inc add add add adc push add add sbb push add add inc add jg add inc add add add adc push add add sbb adc add aam inc add jg add add add add adc pop add add sbb add add add add add mov add jg add add add add add sbb or add mov jge push add add adc pusha add add sbb or add add add add mov add jg add inc add add add add sbb adc add inc mov add jg add add inc add add add cld sbb push add add jg add add add adc insb add add sbb adc add add add add mov add jg add add add adc jo add cld sbb adc add pop mov add jg add add inc add add add sbb or add mov inc add jg add add inc add add add cld sbb add add adc add sub add add inc add add add sbb adc add insb mov add jg add sub adc add inc add add sbb sbb add enter enter fsubrl inc add add add adc test add cld sbb or add and inc add jg add sub or add inc add add sbb sbb add xorb add sub sbb add inc add add inc add add add mov add jg add inc add add add adc nop add add sbb sldt add mov add jg add sub sldt add adc xchg add add sbb add add xchg mov add jg add inc add add inc add add sbb add add lock add jg add inc add add add adc pushf add add sbb pop add add add jg add inc add add add adc mov sbb adc add test inc add jg add add add add pop add inc add (bad) (bad) incl add add add add inc add rolb (bad) (bad) (bad) incl add add add test add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add test inc add inc add inc add inc add inc add test add inc add inc add inc add inc add test add inc add inc add inc add add test add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add stos inc add test add inc add inc add inc add stos inc add test add inc add inc add inc add inc add test add inc add inc add inc add add test add inc add inc add inc add add test add inc add inc add inc add inc add inc add inc add inc add stos inc add test add inc add inc add inc add stos inc add test add inc add inc add inc add inc add test add inc add inc add inc add inc add test add inc add inc add inc add add test add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add lods inc add test add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add test add inc add inc add inc add add test add inc add inc add inc add inc add inc add inc add inc add lods inc add test add inc add inc add inc add add add add add add or (bad) (bad) incl add add lret test inc add add add data16 adc add fs add adc add sbb add adc inc add mov mov push mov inc add add add sbb add add adc xor add cld sbb or add mov jg add add inc add add add add sbb add add add add add mov jge movsb and add inc add add add cld sbb push add add inc add jg add add inc add add add cld sbb sbb add mov inc add jg add and add inc add add add sbb adc add adc jge int3 and add inc add add add cld sbb or add add add add add jg add and add inc add add add sbb add add enter enter hlt and add inc add add add cld sbb or add and inc add jg add and add inc add add add sbb push add add jg add inc add add add adc pop add add sbb adc add fadd inc add jg add es add add add adc pop add add sbb sbb add cmp inc add jg add inc add add add adc pusha add add sbb add add xchg roll jg add es add add add adc add add sbb pop add add roll jg add inc add add add adc push sbb adc add dec ret enter push es add add add adc insb add add sbb push add add jg add add add add adc jo add cld sbb sldt add inc add jg add inc add add add adc je add cld sbb or add pusha ret inc add jg add add add add adc js add cld sbb sbb add mov jg add add add add adc jl add cld sbb add add sbb inc add jg add add add adc addb add sbb adc add add add add add jg add add add adc test add cld sbb or add rol inc add jg add add inc add add rolb (bad) (bad) (bad) incl add add add add jge push rolb (bad) (bad) (bad) incl adc mov add cld sbb adc add rol add jg add add inc add add sbb or add sbb inc add jg add add inc add add inc add add js inc add jg add es add add inc add add sbb adc add aam inc add jg add es add add add adc pushf add add sbb sbb add xor inc add jg add es add add inc add add sbb pop add add jge in inc add add add adc movsb add add sbb sbb add call jg add es add add add add add mov inc add inc add inc add inc add inc add adc pop adc pop adc push mov inc add inc add inc add mov inc add inc add inc add mov inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add adc pop adc pop adc cmpb add inc add inc add inc add mov inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add adc pop adc pop adc jo inc add adc pop adc pop adc cwtl mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add adc pop adc pop adc mov add inc add inc add inc add mov inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add mov inc add inc add inc add inc add inc add adc pop adc pop adc js inc add adc pop adc pop adc hlt xor or (bad) (bad) incl add add xor push inc cmpsl pop mov dec xchg sbb xchg and add add or cwtl enter add add inc add add add add add add add add add add (bad) (bad) call sbb jl inc add add add incl add add add inc add (bad) (bad) decl add add add mov jle (bad) incl add add add (bad) decl add add add add incl add add add dec inc add (bad) (bad) decl add add add add (bad) incl add add add cmp (bad) (bad) (bad) decl add add add add jle (bad) incl add add add (bad) (bad) decl add add add andb (bad) incl add add add jns add (bad) (bad) decl add add add mov jle (bad) incl add add add inc add (bad) (bad) decl add add iret inc add add add gs (bad) incl add add add (bad) (bad) decl add add iret inc add add add data16 (bad) incl add add add (bad) decl add add iret inc add add add jle (bad) incl add add add test add (bad) (bad) decl add add iret inc add add add incl add add add or add add add cmp pop add jae add jae pop add push add add jae imul add jo pop add add add jb add add xor add add and push add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp cmp inc add add add outsb add add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae pop add jns jae je add cmp inc add add add outsb add add jae cmp add add cmp pop add imul outsl add jae pop add jns jae je add xor xor cmp inc add add add outsb add add jae cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add bound add cmp inc add add add outsb add add jae pop add jns jae je add xor xor pop add imul outsl add jae push add ja add push add add add add add add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add jns jo add add outsl add add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add add push add dec add add outsb add add cmp pop add jb outsl add jb popa add and inc add insb add jae and sub js cmp add add add arpl jb outsl add outsl add je and push add jae jne popa add add je jne add outsl add add cmp cmp pop add add add je outsl jns outsb add push outsl jb gs push addr16 aaa add push outsl jae jb outsb addr16 add imul add push add push gs insb outsl outsl outsb je add fs push popa jb popa jo je add add insb imul add gs popa jb aaa add add outsb popa jb imul add inc outsl jo outsl jo imul add add imul mov pop sub jecxz inc lahf pop ds jb jne (bad) mov dec cmpb in aam or xlat aas pop inc mov scas mov dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add or add ja outsb insl insl cs insb add add inc add add add add add add add inc add inc add gs or xor add add xor add pop add add gs xor add add add gs dec outsb jne add rolb cld rolb add add in inc add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add lock inc roll add add lock add or je jmp push mov call jmp add add add add jb gs xor add add push add add imul inc inc inc add add roll add add cld ss add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add roll add add or inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add inc add rolb add add adc inc add or je jmp push mov call jmp add add add add add add imul jb jo jb dec gs fs add inc add add and inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add lock rcl inc add add sub inc add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je lock and inc add add cmp inc add or je jmp push mov call jmp add add add inc insb outsl jae inc imul rolb roll add add inc aaa inc add or je jmp push mov call jmp add add add add data16 je imul addr16 js add sub inc add add push aaa inc add or je jmp push mov call jmp add add add add dec outsb push arpl add lock hlt roll add add pop aaa inc add or je jmp push mov call jmp add add outsl outsb jae jb add add inc insl arpl adc outsl outsb jbe jb inc gs jne je outsl arpl add add mov inc add inc add add push add add add add or je jmp push mov call jmp add add add add je insb imul push imul lock cwtl aam add add je inc add or je jmp push mov call jmp add add add add insl xor cs insb add add insl insl inc gs popa outsb imul je add add in inc add aam add add xorb add or je jmp push mov call jmp add add outsl insb jns gs dec jne inc add add sub inc add add add mov inc add or je jmp push mov call jmp add add add add arpl outsb jne popa imul add rolb mov inc add add cwtl aaa inc add or je jmp push mov call jmp add add add add fs outsl arpl add add add je gs imul add push jo arpl imul gs add add add add inc add aad add add movsb aaa inc add or je jmp push mov call jmp add add imul cs add add adc add inc outsl arpl outsb je jb jo jb imul inc add inc add add mov inc add or je jmp push mov call jmp add add add add js gs gs popa jo inc add lods rolb movsb (bad) inc add add mov add add add add or je jmp push mov call jmp add add add add je bound arpl jo add add inc add (bad) inc add add enter mov or je jmp push mov call jmp add add add add je jne jb outsb je push dec add mov inc add inc add add aam inc add or je jmp push mov call jmp add add add add je outsb jne gs jne je je insl add lock adc add add loopne inc add or je jmp push mov call jmp add add add add jbe jo xor add add int3 xlat inc add aad add add in aaa inc add or je jmp push mov call jmp add add gs gs jo popa je inc add add mov inc add fadds add add clc aaa inc add or je jmp push mov call jmp add add add add je outsl insb jns imul sub inc add inc add add add inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add je arpl add fadds add add adc inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs je insb dec popa outsb fs gs add mov inc add fadds add add sbb inc add or je jmp push mov call jmp add add add add fs popa je add inc add add add sub inc add or je jmp push mov call jmp add add add add outsl jae dec gs inc imul imul add sub inc add add xor inc add or je jmp push mov call jmp add add add push gs popa jbe dec gs add flds add add inc cmp add add add add or je jmp push mov call jmp add add add add je jb imul inc add mov inc add inc add add dec cmp add add add add or je jmp push mov call jmp add add add add popa jae push popa jo add add fiaddl add add pop cmp add add add add or je jmp push mov call jmp add add add add gs je inc arpl insb gs je jb popa bound add rolb test inc add add cmp add add add add or je jmp push mov call jmp add add add push jb jo jb push popa jo add fiaddl add add jo inc add or je jmp push mov call jmp add add add push gs insb outsl jae dec gs or add inc gs jns inc outsl insb outsl jb lods stos or dec xchg cmpl fadds cmp inc add add jl inc add or je jmp push mov call jmp add add add inc jb popa je push arpl popa bound outsl outsb je gs jne arpl add inc add add mov inc add or je jmp push mov call jmp add add add add inc push lock hlt fildl add add xchg cmp add add add add or je jmp push mov call jmp add add add add jb fs insb add add add gs gs outsl outsb outsb arpl outsb inc add xor inc add inc add add mov add add add add or je jmp push mov call jmp add add popa insb imul je add add rolb mov inc add add lods cmp add add add add or je jmp push mov call jmp add add add dec outsl arpl push outsb insb outsl arpl mov inc add faddl add add mov add add add add or je jmp push mov call jmp add add add inc outsl outsb outsb arpl push jb outsb je jb insb add inc add fldl add add les inc add or je jmp push mov call jmp add add add add inc imul je js add rolb fldl add add sarb inc add or je jmp push mov call jmp add add gs jbe inc jb je arpl push arpl outsb add add mov inc add add fdivrl inc add or je jmp push mov call jmp add add add add jae je jb outsb je jb add add add fldl add add call add add add add or je jmp push mov call jmp add add add add je outsb jne je insl push arpl rolb inc fiadd add add hlt cmp add add add add or je jmp push mov call jmp add add add add ja outsb imul arpl add lock mov inc add add add inc add or je jmp push mov call jmp add add gs arpl push arpl add or add push gs imul add inc add fiadd add add or inc add or je jmp push mov call jmp add add add add je jne bound inc outsl jb popa je add add mov inc add fild add add sbb inc add or je jmp push mov call jmp add add gs popa jae inc jb outsl jb add add fild add add and inc add or je jmp push mov call jmp add add add add gs imul add add inc add add xor inc add or je jmp push mov call jmp add add jb gs gs jne arpl add add loopne add add cmp inc add or je jmp push mov call jmp add add add add imul push outsl insb jne add add lods rolb push loopne add add dec cmp add add add add or je jmp push mov call jmp add add add add gs je inc insb insb imul outsb dec outsb imul add inc add add push cmp add add add add or je jmp push mov call jmp add add add add je popa jo jne add lock hlt loopne add add pusha cmp add add add add or je jmp push mov call jmp add add add jae gs insb xor cs insb add add add outsb inc js arpl jb jb add add loope add inc add add insb cmp add add add add or je jmp push mov call jmp add add add jbe jb imul add add add push gs outsb jae popa insb insb inc imul nop loope add add js inc add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs outsl fs mov inc add loope add add test inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add inc add add nop cmp add add add add or je jmp push mov call jmp add add inc add fiadd add add pushf cmp add add add add or je jmp push mov call jmp add add add add outsl ja imul jns arpl lock mov add test inc add or je jmp push mov call jmp add add add add gs popa outsb arpl inc outsl outsb outsb arpl outsb inc add add inc add jecxz add add mov inc add or je jmp push mov call jmp add add add jo push add push outsb push jne jb add push jecxz add inc add add sarb add or je jmp push mov call jmp add add add add je jb outsb je jb jb jbe jb add add add add int3 cmp add add add add or je jmp push mov call jmp add add outsl insl fs xor cs insb add add or add inc imul inc and add jecxz add in add add fdivrs inc add or je jmp push mov call jmp add add rolb dec fildl add add in inc add or je jmp push mov call jmp add add add add je inc dec dec outsl fs sub inc add inc add add lock add add add add or je jmp push mov call jmp add add add add jae jb dec outsb jne je insl inc add rolb mov add cld cmp add add add add or je jmp push mov call jmp add add add add je jae jb bound arpl outsw jb popa je outsl outsb inc add add rolb add inc add add or inc add or je jmp push mov call jmp add add add insl imul dec inc add inc add add adc inc add or je jmp push mov call jmp add add add add je popa jo gs insb popa addr16 add inc add add and inc add or je jmp push mov call jmp add add add add je outsl insb outsl jb jo arpl add hlt and mov mov rolb in inc add add sub inc add or je jmp push mov call jmp add add add add addr16 imul cmp inc add inc add add cmp inc add or je jmp push mov call jmp add add add add je inc inc js lock and add add inc cmp add add add add or je jmp push mov call jmp add add add add jae push jne je gs popa addr16 rolb shl add add push cmp add add add add or je jmp push mov call jmp add add outsb insb outsl arpl imul add out add add pop cmp add add add add or je jmp push mov call jmp add add add add je jns je insl inc gs jne je popa outsb addr16 inc add mov inc add inc add add push add add add add or je jmp push mov call jmp add add add add popa jo outsl arpl add add pop les mov pop imul push (bad) jae or sbb test sbb roll mov add je inc add or je jmp push mov call jmp add add add add gs inc inc insb push popa jb insl add add rolb add inc add add cmpb add or je jmp push mov call jmp add add add insl imul arpl rolb dec call add mov inc add or je jmp push mov call jmp add add add add insb imul je insl add lock nop call add cwtl cmp add add add add or je jmp push mov call jmp add add add add je imul je add sub inc add call add movsb cmp add add add add or je jmp push mov call jmp add add add add push outsb imul imul add jmp add mov inc add or je jmp push mov call jmp add add insb outsl jae push jb outsb je jb add add jae outsl jb jb outsb gs or mov inc (bad) inc add inc add add mov add add add add or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add inc add jmp add enter mov or je jmp push mov call jmp add add add add outsb fs js arpl popa bound add loope add ljmp aam inc add or je jmp push mov call jmp add add add add gs je inc dec inc push popa je gs inc jb jae add add inc add inc add add loopne inc add or je jmp push mov call jmp add add add add gs je inc imul jns add add mov inc add add in cmp add add add add or je jmp push mov call jmp add add add add outsb fs imul inc add add rolb cld ljmp clc cmp add add add add or je jmp push mov call jmp add add add add je gs outsl popa jb push je je add add lock inc jmp add add add inc add or je jmp push mov call jmp add add add inc fs insl jo je imul insb gs lock nop jmp add add adc inc add or je jmp push mov call jmp add add add add js jb gs outsl outsb je outsl insb inc gs imul add jmp add add sbb inc add or je jmp push mov call jmp add add jo outsb inc jbe outsb je outsl add add mov in inc add add sub inc add or je jmp push mov call jmp add add add add fs jo popa je push gs jne arpl add mov inc add add add xor inc add or je jmp push mov call jmp add add add add insb imul imul add in inc add add inc cmp add add add add or je jmp push mov call jmp add add popa jbe dec jne inc insb outsl jae add add push arpl jo outsb jae jb lods rolb or inc add add dec cmp add add add add or je jmp push mov call jmp add add add add outsl jae inc jbe outsb je outsl add add in inc add add pop cmp add add add add or je jmp push mov call jmp add add add add gs je dec arpl dec outsb imul lock movsb in inc add add cmp add add add add or je jmp push mov call jmp add add add add outsb fs outsb jbe jb outsb insl outsb je je imul loope add in inc add add jo inc add or je jmp push mov call jmp add add add add outsb inc jbe outsb je add mov inc add inc add add jl inc add or je jmp push mov call jmp add add add add ja imul test inc add add mov inc add or je jmp push mov call jmp add add add add insl push gs outsl insl jo jae je outsl outsb push imul bound outsb arpl imul add add in inc add out inc add add xchg cmp add add add add or je jmp push mov call jmp add add add add outsl bound inc gs je insl dec popa insl gs add mov inc add out inc add add mov add add add add or je jmp push mov call jmp add add popa imul outsb je jb push add add inc (bad) inc add add add lods cmp add add add add or je jmp push mov call jmp add add add add fs je insl inc add add mov inc add out inc add add mov add add add add or je jmp push mov call jmp add add add add outsl jae inc insb imul add lock or inc add add les inc add or je jmp push mov call jmp add add add add je imul imul je outsl jb je add add lock add add sarb inc add or je jmp push mov call jmp add add add dec outsl outsl imul jb jbe insb gs imul popa insl gs add lock add add fdivrl inc add or je jmp push mov call jmp add add add inc insb outsl bound push outsb imul inc add lock add add call add add add add or je jmp push mov call jmp add add add add imul inc insb outsl jae add inc add add hlt cmp add add add add or je jmp push mov call jmp add add add add insl inc gs popa outsb imul je outsl jne je add add aam add add add add or je jmp push mov call jmp add add add add je jb jbe je dec bound arpl arpl imul fadds fdiv inc add add or inc add or je jmp push mov call jmp add add js jb arpl outsl outsb inc add add cmp inc add inc add add sbb add or je jmp push mov call jmp add add add add jo arpl inc inc insb push popa jb insl add rolb je inc add add and inc add or je jmp push mov call jmp add add jae popa fs outsl fs je add add mov inc add add xor add or je jmp push mov call jmp add add add add gs push gs imul arpl arpl imul add inc add add cmp inc add or je jmp push mov call jmp add add add add outsb gs je inc outsl outsb jae insb gs je insb inc jbe outsb je add add repz add add dec cmp add or je jmp push mov call jmp add add add dec outsl imul inc add rolb lods repz add add push cmp add or je jmp push mov call jmp add add gs outsb addr16 push imul inc add repz add add pusha cmp add or je jmp push mov call jmp add add add add je jne jne fs outsl insl jo gs outsl outsb push je je jae add mov inc add hlt inc add add insb cmp add or je jmp push mov call jmp add add add add imul add lods rolb mov inc add add js inc add or je jmp push mov call jmp add add add add addr16 gs outsl jb dec gs add mov hlt inc add add test add or je jmp push mov call jmp add add add push insb jae gs popa insb jne add cmc inc add add nop cmp add or je jmp push mov call jmp add add add add insb jns imul sub inc add add add pushf cmp add or je jmp push mov call jmp add add add add insb insb push popa je add add sub inc add add test inc add or je jmp push mov call jmp add add add add insl push gs outsl outsb jbe jb imul jne add dec popa insb imul addr16 insb gs add dec imul xor add in inc add cmc inc add add mov inc add or je jmp push mov call jmp add add add add inc gs push je jb insb popa arpl outsb je add inc add add add sarb mov or je jmp push mov call jmp add add add add je imul add rolb movsb testb add int3 cmp add or je jmp push mov call jmp add add add add je outsl jns jne jae jb add lock call add fdivrs add or je jmp push mov call jmp add add imul gs jb dec gs fs add add inc add add in inc add or je jmp push mov call jmp add add add add imul outsb je outsl insb add testl lock add or je jmp push mov call jmp add add add dec jo outsb inc popa arpl jo jbe outsb je outsl addr16 add je gs outsb gs mov testl cld cmp add or je jmp push mov call jmp add add add add je gs inc imul js add sub inc add clc inc add add or add add add mov or je jmp push mov call jmp add add add add je popa jbe inc imul add add in jecxz add add add adc inc add or je jmp push mov call jmp add add add add gs add mov inc add add and add add add mov or je jmp push mov call jmp add add add add insl inc gs outsl outsb je js add add aam add clc inc add add sub inc add or je jmp push mov call jmp add add add add gs gs jns je insl push imul rolb inc stc inc add add cmp add add add mov or je jmp push mov call jmp add add add add jbe dec jne dec gs popa add dec outsb data16 popa je jb jae xor add add inc add add inc cmp add add add mov or je jmp push mov call jmp add add add add jbe dec jne inc gs gs popa jo inc add lods rolb in inc add add push cmp add add add mov or je jmp push mov call jmp add add add add je outsl jb fs jb outsb jae outsl jb add add inc add cli inc add add pop cmp add add add mov or je jmp push mov call jmp add add add add jb popa je add add mov inc add add add push add add add add or je jmp push mov call jmp add add add inc gs jne jb outsb je jb arpl jae add cli inc add add je inc add or je jmp push mov call jmp add add add add je insb popa jae dec outsb outsw inc add add rolb or inc add add cmpb add add add or je jmp push mov call jmp add add add add outsl bound inc fs je insl inc add dec outsl outsb gs jb imul add add sti inc add add mov add add add mov or je jmp push mov call jmp add add add add je insb addr16 je insl push gs inc add rolb mov inc add add cwtl cmp add add add mov or je jmp push mov call jmp add add add push popa imul insb gs bound arpl roll clc sti inc add add movsb cmp add add add mov or je jmp push mov call jmp add add add add gs je push arpl outsb add add inc add add add mov inc add or je jmp push mov call jmp add add add add arpl jae push outsb fs jne imul add add cld inc add add mov add add add add or je jmp push mov call jmp add add add add outsb jae popa je inc arpl insb gs je jb add add rolb loopne inc add add enter mov or je jmp push mov call jmp add add add push outsl insb jns outsl insb jns outsl outsb add insl aaa add add sub inc add std inc add add aam inc add or je jmp push mov call jmp add add add add je insb je add inc add add add loopne inc add or je jmp push mov call jmp add add add push jb je push jb imul imul inc add add in cmp add add add mov or je jmp push mov call jmp add add add add imul arpl jne je popa insl gs add mov incb add add clc cmp add add add mov or je jmp push mov call jmp add add add add je data16 outsl outsl je outsl outsb imul je jae add incb add add add inc add or je jmp push mov call jmp add add add add jbe push outsl inc js add add inc add add adc inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je inc fs insb imul outsl ja add bound fs xor add incb add add sbb inc add or je jmp push mov call jmp add add add add gs jb outsl insl insl inc jb outsl jb add incl add add sub inc add or je jmp push mov call jmp add add add add je popa imul outsw add incl add add xor inc add or je jmp push mov call jmp add add imul jae je add add inc add add inc ds add or je jmp push mov call jmp add add add inc insb addr16 imul add rolb and inc add add dec ds add or je jmp push mov call jmp add add outsb fs gs popa addr16 add add lock add add add pop ds add or je jmp push mov call jmp add add add add je outsl outsb jae insb gs jne jo je push add dec jne insl popa outsb fs jb outsb cmp add add add add add fs add or je jmp push mov call jmp add add add add inc insb insb outsl arpl add add add add add jo inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb imul inc outsl jb popa je add rolb push add add add jl inc add or je jmp push mov call jmp add add add insl imul arpl push popa je push rolb movsb add add add mov inc add or je jmp push mov call jmp add add add push gs outsl jbe inc outsl outsb je gs jne arpl add inc add add add add xchg ds add or je jmp push mov call jmp add add add add imul add sub inc add inc add add mov add add add add or je jmp push mov call jmp add add add add gs je dec popa je push push push jne addr16 popa add add sub inc add add lods ds add or je jmp push mov call jmp add add add dec outsl popa fs je imul inc add add add add mov add add add add or je jmp push mov call jmp add add add add inc insb imul inc outsl jb popa je jbe imul lock sbb inc add add les inc add or je jmp push mov call jmp add add add add je dec inc inc outsl insb outsl jb popa bound add add inc add inc add add sarb inc add or je jmp push mov call jmp add add add add outsl ja ja gs outsl jo jo add rolb mov add fdivrl inc add or je jmp push mov call jmp add add add add outsl bound dec gs outsl jb push je je jae add add add add call add add add add or je jmp push mov call jmp add add imul outsb je outsl jne arpl add add mov add add add hlt ds add or je jmp push mov call jmp add add add add je popa jae inc arpl gs outsl jo jo add rolb mov add add inc add or je jmp push mov call jmp add add add add je outsl insb jns imul sub inc add add add add or inc add or je jmp push mov call jmp add add add add jbe dec jne inc gs outsl jae je outsl outsb add lods rolb xor inc add add sbb inc add or je jmp push mov call jmp add add add add outsl outsl jae push imul insl popa je add sub inc add add and inc add or je jmp push mov call jmp add add inc dec popa jo je imul add add add xor inc add or je jmp push mov call jmp add add outsb je jb jb je arpl push arpl outsb add add inc jb outsb imul mov inc add inc add add cmp inc add or je jmp push mov call jmp add add add add popa fs imul roll insb push inc add add dec aas inc add or je jmp push mov call jmp add add gs insb addr16 je insb dec inc add add lock mov inc add add push aas inc add or je jmp push mov call jmp add add add inc fs gs popa je inc add rolb clc push inc add add pusha aas inc add or je jmp push mov call jmp add add add add popa jo imul mov inc add inc add add insb aas inc add or je jmp push mov call jmp add add add add outsl ja jne jae jb add rolb addb add add js inc add or je jmp push mov call jmp add add add add insb insb dec jae inc imul inc jb je je je outsb addr16 jb fs je outsl outsb jae imul les inc add add test inc add or je jmp push mov call jmp add add add add gs je push imul inc add rolb sub inc add add nop aas inc add or je jmp push mov call jmp add add add add insl dec outsb jae popa insb insb dec dec inc inc add in inc add add add pushf aas inc add or je jmp push mov call jmp add add add add je push inc gs je jo add add rolb mov add test inc add or je jmp push mov call jmp add add add add je outsb push inc imul imul add sub inc add or add add mov inc add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul rolb pop or add add sarb add or je jmp push mov call jmp add add add add je push push outsl imul add popa jbe add add xlat inc add add int3 aas inc add or je jmp push mov call jmp add add add add ja arpl add add lock clc or add add fdivrs inc add or je jmp push mov call jmp add add add add jae imul lock cmp inc add add in inc add or je jmp push mov call jmp add add arpl push imul sub inc add add lock inc add or je jmp push mov call jmp add add add add je gs inc push je jb js jb inc add sub inc add or add add cld aas inc add or je jmp push mov call jmp add add add add outsb fs jb jbe jb gs popa add add inc add add or add or je jmp push mov call jmp add add add add addr16 gs arpl push fs addr16 add add inc gs outsb fs add add lock or add add adc inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne lock rorb add add and add or je jmp push mov call jmp add add gs outsl outsb jae insb gs jne jae jb outsb outsw add add mov inc add or add add sub inc add or je jmp push mov call jmp add add add add jbe dec jne inc jb popa imul add add lods rolb pop or add add cmp add or je jmp push mov call jmp add add add add addr16 jb popa je dec gs js add or add add inc inc inc add or je jmp push mov call jmp add add add add insb imul inc add or add add push inc inc add or je jmp push mov call jmp add add add add insb jns outsl outsb add push outsl fs jb insb jae jb cmp push insl jne imul add add pop inc inc add or je jmp push mov call jmp add add add add insb jns jb ja add add inc add add push add add add add or je jmp push mov call jmp add add add add popa bound outsb jne je insl add lock int3 or add je inc add or je jmp push mov call jmp add add add add gs inc outsl insb outsl jb jo arpl add add inc add inc add add addb mov or je jmp push mov call jmp add add add add insb outsl arpl gs imul bound add add push inc add add mov add or je jmp push mov call jmp add add add add dec inc dec inc push jb arpl add add rolb mov inc add add cwtl inc inc add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul dec imul jae lock cld push inc add add movsb inc inc add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add mov inc add add add mov inc add or je jmp push mov call jmp add add add add je imul inc js inc js add add inc add add mov add add add add or je jmp push mov call jmp add add add add je bound arpl add inc add cmovno add add enter mov or je jmp push mov call jmp add add add add jo push imul adc add add aam inc add or je jmp push mov call jmp add add add add fs arpl jae inc outsb imul add adc add add loopne inc add or je jmp push mov call jmp add add add add outsb jae popa je dec gs popa add add inc insb imul gs add add rolb mov add in inc inc add or je jmp push mov call jmp add add add add je gs push outsb add sub inc add adc add add clc inc inc add or je jmp push mov call jmp add add add add je outsl insl insl push jb jo jb imul roll pop adc add add add inc add or je jmp push mov call jmp add add add add je gs imul popa insl gs add mov adc add add adc add or je jmp push mov call jmp add add add add jne dec outsl outsb imul add add adc add add sbb inc add or je jmp push mov call jmp add add gs jns gs popa add add lock cmp inc add add sub add or je jmp push mov call jmp add add add add jae popa addr16 outsl js js add add jb outsl insl popa addr16 jae outsb gs add add add add lock test inc add add xor inc add or je jmp push mov call jmp add add jae popa fs gs fs je add add mov inc add adc add add inc inc inc add or je jmp push mov call jmp add add add add je imul inc js inc js add add inc add inc add add dec inc inc add or je jmp push mov call jmp add add add add je jb jae dec jb inc js add sub inc add inc add add pop inc inc add or je jmp push mov call jmp add add add add inc jb gs popa je dec popa outsb fs add add rolb rclb add add fs inc add or je jmp push mov call jmp add add add add je jae jb gs jne je inc dec inc add mov inc add inc add add jo inc add or je jmp push mov call jmp add add add add jo jb outsl outsb popa je dec popa insl gs imul outsb je add adc add add jl inc add or je jmp push mov call jmp add add add add insl inc gs jb jns outsl outsb je js add add aam add add mov add or je jmp push mov call jmp add add gs jo popa je push outsb add add lock clc adc add add xchg inc inc add or je jmp push mov call jmp add add add add je inc dec inc push add add mov inc add inc add add mov add add add add or je jmp push mov call jmp add add add add gs insb xor add add add insl insl popa outsb fs imul addr16 add test inc add add lods inc inc add or je jmp push mov call jmp add add add add imul outsb outsl ja gs popa addr16 add lock fcoml add mov add add add add or je jmp push mov call jmp add add add add insb arpl imul add add add inc add inc add add les add or je jmp push mov call jmp add add add add jne push gs jne arpl popa outsb addr16 addr16 add mov inc add inc add add rolb add or je jmp push mov call jmp add add add add je popa insb gs gs outsb je imul rolb enter add add faddl add or je jmp push mov call jmp add add add inc insb popa jae push imul rolb adc inc add add call add add add add or je jmp push mov call jmp add add add add jne inc jb popa imul mov inc add inc add add hlt inc inc add or je jmp push mov call jmp add add add add inc push dec add add add add jne push popa addr16 imul pop inc add add add add or je jmp push mov call jmp add add add dec outsb jae jb dec outsb jne add gs add add add lock lock inc add add or inc add or je jmp push mov call jmp add add imul outsl push jns je insl push imul mov inc add inc add add sbb add or je jmp push mov call jmp add add add add insb dec outsl jbe dec gs outsl jb add add sbb add add and inc add or je jmp push mov call jmp add add push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov sbb add inc add insb add and jbe add jae imul cmp and add add and add push add outsl add add je and jbe add jae imul cmp and add sbb add inc add insb add and data16 add jae cmp and add add adc add inc add insb add and dec add cmp and add push inc inc ss dec dec add add pop pop jbe popa push popa jb jne add jbe popa push je dec xor add jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs popa jb add add jbe popa push je inc popa je inc jae outsl jb xor inc jb imul add add add jbe popa inc jo xor add pop pop jbe popa dec xor jns add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa push je inc outsl jo add add pop pop jbe popa dec gs add add jbe popa inc jb gs je add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add dec lahf inc mov ds xlat mov lds dec mov ret (bad) or (bad) repnz (bad) clc dec xchg pop xchg mov jae popl test inc mov test repnz lods xor or stos add xchg inc jb je imul push gs push outsb popa je add add outsb fs outsl arpl add push fs insl gs jae jb add jae data16 xor add push jbe insb gs fs xor add add jne je outsb popa add add push gs insb je je outsb fs gs jae jb add add jae imul xor add inc imul imul je gs jae jae jae addr16 add outsb jae jo outsl jae outsb add add dec jns outsb aaa add inc insb jne arpl add jb insb gs insb jns add data16 outsl arpl popa jb add add inc outsl outsb je insl popa arpl jne cmp add push outsb je imul add jae add add insb insb gs addr16 jae add fs outsl outsb jae gs imul jae add inc outsb je je popa imul add add inc popa insl jae jae add jb je jb imul gs add dec imul add add inc jo imul jae gs add add push push gs add int cmp fldln2 dec lods cmp (bad) imul dec test mov adc mov mov cmpsl cld or (bad) sahf jge xchg xchg cli mov lods jle fisub loope cld inc imul je add insb popa insl gs je add imul je outsb insb imul insl gs push outsl jo jp outsb gs add gs imul push outsb gs jb jae jb addr16 insl insl gs add add dec gs popa insb fs outsb xor add add outsl jb jb insl insl gs gs add insl imul je add add inc jne insb gs add outsl jo gs outsl je add add push popa jb je jo outsb add inc popa addr16 insb popa add imul gs gs add add inc outsl jb gs imul gs fs outsl insl jbe outsb insb popa addr16 add add push add add inc outsb addr16 jb bound add add push fs outsl jo imul jae jb jbe outsb xor add je jo outsl outsb outsl jae outsl jo add dec jne imul jo jae je outsl outsb outsb jae add push outsb outsb popa je jb insb imul aaa gs pop dec (bad) adc dec push dec mov cmpsl test imul fild adc lahf xor shlb fisttpl ret and mov mov stos and adc inc mov gs outsb add insl insl gs outsl jbe outsb aaa add insb imul imul gs add add jb insb imul outsl imul add jae imul jae add add fs jae popa outsb imul gs add add inc popa outsb popa outsb jo popa outsb je add add insb insl imul gs popa jae imul xor add add gs jo insb jae add add popa push imul inc data16 addr16 jb gs add dec outsb jne gs outsb outsb gs gs xor add add jae gs xor add jae imul add jo jb outsb outsl jne add popa je gs popa je jp je outsl outsb add add inc jne bound outsb gs add add dec gs insb outsb imul jae dec jns jb fs insl imul push push jae gs gs add outsb fs jb outsb outsb add jne popa insb imul popa jb gs popa jae jb jb outsb je jb add dec insl addr16 outsb addr16 dec outsb fs outsb add dec bound imul out (bad) loopne jno dec mov ljmp outsb out cmpsb dec cmpsl (bad) xchg jle test stos mov mov mov xsavec xchg addr16 repz dec mov jmp pushf adc addr16 outsb je add add jb popa jae gs add je popa outsb jae gs popa bound inc imul push add add insb insb arpl jae add gs outsl jae jo popa je add add jne jb jo outsb imul popa arpl add add addr16 jbe outsw jb bound xor inc outsl jne insb gs add add inc insb popa jb bound gs popa bound add outsl popa imul je outsb gs add inc outsl jb fs jae jae add popa fs outsl insb fs outsb jne add add inc outsl outsb add add inc imul push push jb add add inc jne outsl jo jns push add add outsb je gs add add dec jae arpl imul gs push outsb addr16 add add je insl outsb je jbe outsb gs cmp dec jne imul addr16 add add jb outsb addr16 inc popa jbe jb imul add add imul imul push je je push gs add push outsl popa arpl outsb cmp add iret cld cmp push clc cmpsl inc xchg pop and pusha pop shlb sbb inc cmpsl pop mov movsl test mov jg sahf mov add mov pushf jns push inc mov add pop inc lods mov outsl jne imul arpl add add popa imul je jb jb add push outsb arpl popa bound add insl jo jae jb popa je gs gs add push imul jae add dec outsl outsb jbe jbe jo jb jne add add ja gs arpl add imul jb gs add dec outsl jbe arpl je add add push imul add imul jae inc imul outsb xor inc outsb fs jae popa jo je insb bound bound gs add inc insb jns gs imul outsb xor add jo jb outsb je popa insb imul imul gs add add outsb jne je gs gs add inc outsl insb insb jae add inc jae imul add inc imul add jbe outsl insb popa je add add outsb jne outsb outsl imul add outsl addr16 insl jo outsb imul add jb outsb outsl arpl jo jae add add insb imul je jb add arpl je inc insb addr16 gs add dec popa arpl gs dec add inc xchg sub push mov fisttp mov hlt push mov lret mov sub sbb scas cmp popf mov (bad) mov outsl jb outsb arpl push popa outsb fs imul outsl jae imul insb popa addr16 add add gs imul push outsl fs imul jb add inc outsb je outsb imul gs insl gs fs add gs outsl outsb jae fs je outsb gs add fs jb imul jae jb inc bound jo xor add add jb imul add jae jne xor add add fs je outsw jb popa je jb add add inc outsl insb imul add add push jo jne outsb xor inc jb jae addr16 je arpl imul push imul outsb add add push jae gs gs add add add add popa outsb je gs gs fs addr16 fs outsl jb jb add add imul add dec gs jbe jbe je jb outsb add add arpl je jb add add insl popa je imul cmp add dec outsl gs gs cmp add add jne outsb imul outsb gs add add jae insb popa addr16 data16 jb gs add add insl popa jb gs jae data16 insb gs add push mov flds lods mov xor rorb cltd ret or push ljmp dec cltd or cmpsl insb loop mov test outsl sbb fadds popa outsb popa outsb outsl jae popa add add inc jne insb gs outsb je jb gs add push popa jo push add add imul add insl insb imul gs outsb addr16 gs add inc imul jo jb gs add jbe jb add dec jne fs popa bound outsb add add inc imul popa addr16 outsb add push je popa outsb fs add add jb gs jbe je inc push popa arpl popa je xor add jne insl gs insb imul je outsb xor add dec jne imul bound je jb fs inc gs jae add add insb popa jae add inc outsb outsl imul gs add arpl add add je jae outsb jb add add je outsb add push gs imul fs xor dec insb popa jae imul outsl outsb add arpl jae gs xor jb imul imul push outsb arpl je outsl insb insb gs add push jo push jae jb data16 jb xor pop cwtl les (bad) (bad) and daa int (bad) xchg cmp (bad) xor std in xchg pop icebp (bad) decl lods into mov mov pop rorb insb cmp push gs imul outsb fs add insl outsl jb popa insb imul add jbe jae gs outsb addr16 popa insl insl gs add add inc imul gs outsb addr16 add add gs jb jae add add fs jbe add arpl insb imul imul jne xor inc insb jne add add je jb gs add push insl insl outsb je outsb aaa add add dec popa imul jae add gs imul dec jns jb insl gs jb xor add add outsb je jne insl gs add bound imul add push outsb outsl jbe jb imul dec outsl jb je add dec popa jae insb imul dec imul xor add inc outsb imul jae outsb xor jae insb je outsb fs inc jb outsb jne popa je xor add jb insl imul arpl popa jb add push outsb arpl insl imul add add fs outsb fs add add outsb popa jb outsb gs add in shrl sti dec mov push jg out xchg test lock imul push adcl lds push push add nop dec sbb sub inc insb je outsb fs imul add add popa imul xor add inc gs je gs jae add add inc jne jo outsb popa add outsl jo fs imul add gs gs add add inc jns popa outsb fs imul aaa add add gs gs insl xor imul addr16 jne imul add arpl fs xor add je je je push jns bound jb popa jb xor add add jb push imul gs add jo gs jae add push jb insb insb bound xor dec imul outsb gs add inc jb outsb fs jns fs outsl insl imul outsl jb je xor add add je je add je outsl jo outsb jae add je fs jb jbe imul imul add inc arpl insl add add imul add inc jb jo gs add inc gs imul jae add int3 xor sbb icebp (bad) decl lods into mov cwtl les (bad) (bad) and daa int cmp xor or stos add xchg xchg add add add outsb popa jb imul add gs jb outsb je jb outsb fs sbb add and and (bad) (bad) jmp add outsl jb outsb je jb outsb fs xor push adc add add (bad) sldt inc add add add add or inc jb outsb jne popa je xor add or dec outsl arpl imul mov push adc add add add add or inc bound imul add add imul adc lock add incl das add add or dec jns jb insl gs jb xor add or push jb outsl bound add push add fs add add add add add outsb outsl jbe jb imul add push add imul std adc push test add add add jbe jae gs outsb addr16 popa insl insl gs add add inc imul jecxz outsl or adc incl sub add push or inc imul jne xor add add jne add or add add add add or inc data16 insb je outsb fs add or dec outsl jbe fs je imul and test or push add add pop add fs jbe add or inc jb data16 je je jae add add add testl add add add or dec imul jb add adc inc jns je jne gs jb addr16 jo jns add push xor cmp add add add or add jb insl imul arpl popa jb add or dec popa imul xor add add or pop add add add add or dec gs outsl jb popa insb imul or dec gs jb popa outsb xor add setge stc add incl sub or dec popa jae insb imul or inc arpl outsb imul pop push or sub adc add add add add gs jb jae add push add push add or add or incl sub add push or dec imul add or dec gs insb gs add adc or or add add push add imul add jo outsl jb gs outsb addr16 add or or push add add add add or inc imul popa insb add or push jb jo jns popa js jae add or adc (bad) incl daa add add or push insl insl outsb je outsb aaa add add popa insb add add or aas adc adc incl xor add adc add imul jae add or inc gs insb jns add add add add add add add add add jb add or inc imul outsb add add add adc incl add add add jb je add push add popa jae outsb gs je xor fwait pop jle jl adc add add add add jb imul outsb fs add or dec popa jae jb outsb jae add add add add or inc outsb je jne insl gs add or dec outsl jb imul adc imul pop adc add add or dec jae gs gs add lldt jo imul jae add or or adc incl sub add sbb add jae outsb xor add fs insl jae add or cmpsb add add add add add or inc imul gs outsb addr16 add add dec jae xor add or adc popf or sbb incl sub add sbb add addr16 gs xor add or inc outsl insb imul add adc or leave or add add add or push gs outsb fs add or inc popa imul add or or sbb incl xor add sbb add arpl insl imul add or inc js insl imul add push lret push sub sbb incl add dec xor sbb mov push dec lods xor push ds shrl sti dec mov cmp xor or stos add xchg xchg add add add inc outsl jo outsl jo imul push add jbe je add add inc add add (bad) (bad) (bad) jmp add jbe je add ret add add add add add pop add je outsb fs or dec outsb jae outsb imul add sbb cmc or add add incl sub add add add imul add or inc insb imul add paddusw rolb adc add incl aaa add add or push jb insb insb bound xor add adc inc imul imul imul add pop nop psraw adc add add add imul dec je gs add add add or incl sub add add gs gs insl xor add jb jo imul adc or adc add incl aaa add add or inc jns popa outsb fs imul dec popa jb imul je jb gs gs add adc adc lock adc add add or inc jb jo gs add or inc push jo jns gs sub or incl sub add or add jo gs jae add push add imul out or pop add add add or jo fs imul add gs or and adc add add add add lldt jb outsb addr16 jne imul add or inc popa jb imul add or or or incl sub add or add je outsl jo outsb jae add pop add jae imul sub or or incl xor add or add outsl jb je xor add sldt jbe imul jae outsl jb bound add add or or add add add add arpl fs xor add or dec jns jb bound imul xchg or or add add add push or inc jns bound jb popa jb xor add push add popa insb outsl jne outsb gs gs add movnti push add add add bndldx push gs jne jae jb jbe imul imul add or dec gs fs arpl add or or push add add add add add je add or push outsb ja outsb fs outsb add mov stc add or add add add or inc gs imul jae add or jae imul xor add or sti or adc incl xor add adc add push outsb gs add or dec bound je imul mov push outsl push adc add add or inc popa je je je push add add jo jb gs add push add incl sub add adc add imul or inc imul fs add push cltd or or adc incl sub add adc jb push imul dec gs popa jae add adc push adc incl sub or dec jb jo gs add or inc jb gs popa outsb je xor add or add adc add add or inc push outsb jae add or dec outsb outsl insb outsl imul adc add add incl sub add sbb add popa jo outsb popa add or push jb popa jb je arpl add (bad) or or adc pop add add add add adc inc jb outsb fs jns fs outsl insl imul add insl jo insb popa bound add add or sbb incl add add or inc gs je gs jae add adc push jo je insb imul je xor add adc or sbb incl xor add sbb popa imul xor add or push jne insb imul xor add or or sbb incl add add add je je add or jo jae gs gs add or or enter add add int3 xor sbb pusha int gs and mov outsl adc (bad) adc dec push cmp xor or stos add xchg lcall add or push gs insb outsl outsl outsb je or insb jae fs sbb add and and (bad) (bad) jmp add jae fs xor push add jle add popf push add inc add add add add add popa jae gs gs add str fs jbe imul xor add add and adc add add add add add outsb fs jb outsb outsb add pop add arpl jae add or or add incl sub pop add outsb fs outsb add or inc bound gs fs add add add add add add add insb insl imul add imul fs or adc add incl sub add add jae imul add push add imul adc or add add add or dec bound imul inc outsb je jb push imul or xchg add add add add add adc inc outsb fs jae popa outsb imul gs add or inc jb jbe outsb addr16 add pop lret or pop decl adc add add str fs insb outsb imul jae add or push jne jo outsb fs jb add push fwait adc int adc add add add add adc inc outsb popa je gs popa je jp je outsl outsb add or dec outsb popa addr16 add add lcall incl sub or popa outsb jo popa outsb je add add add push imul add movd xor pop adc add add add add or dec jns jb fs insl imul add popa arpl insl xor add mov push or adc add add add add add insb imul imul gs add push add gs add add adc or incl cmp add or jb insl popa jae imul xor add push add fs fs outsb outsb jae add adc or cmovno adc incl xor add push or inc jb jae gs xor add lldt jne popa je insb outsl imul mov add add add add (bad) add insl bound outsb gs add push add je outsb add emms or add adc add add add adc add jb insb imul add fs insb outsl jo add add adc adc add add add add adc inc popa jb gs popa jae jb jb outsb je jb add or inc imul je add or or adc add add add add pop add imul add or push imul gs outsl xor adc lods or adc incl add add or insb imul jae add sldt gs popa bound popa addr16 add push mov add adc incl sub add adc add gs jo insb jae add or push popa jo jae imul fmuls or mov adc add add add add imul jne add or push jb fs popa jb add or dec add add adc incl sub add push or inc gs popa insb imul add outsb add or add adc or adc add add or push popa insl insl gs outsl jbe outsb aaa add or inc push jb outsl js add add or add add add add adc dec outsb jne gs outsb outsb gs gs xor add or bound outsl jne outsb gs add pop int3 add add incl sub add sbb add addr16 outsb addr16 add or inc jb push data16 add or or sbb incl xor add sbb inc data16 addr16 jb gs or dec outsl outsb jbe insb jae outsl outsb add adc incl sub add sbb add fs outsb add or push fs jae gs add or test sub incl sub add sbb add popa push imul or dec gs insb gs add or xor or adc add add dec xor sbb lods push sti pop stos mov mov mov (bad) out (bad) loopne jno dec mov ljmp cltd iretw adc pusha rcll mov add push add add pop add fs or imul jae outsb imul add inc add add (bad) (bad) (bad) jmp bound je imul push push add mov add sbb add jmp add add add add or gs imul add pop add data16 je add or test add incl sub or inc outsl insb insb arpl jae add or dec outsb fs outsb addr16 add or add push adc add incl xor add add add jne jb jo outsb imul pop imul popa imul add push xor in cmp adc add add add add add jne insb gs add or inc addr16 insb jae add cvtdq2ps in cmp adc add add add add jae imul outsl addr16 add or inc gs insb outsl je xor add or or cvtdq2ps add add add push add outsl popa imul je outsb gs add adc inc outsb je jne gs jo outsl jns outsb je add adc adc add add add add or push push jb add push add jb jo gs insb jae jae xor nop or adc add add add add or push imul imul add je insb imul or jmp incl xor add or add addr16 jbe outsw jb bound xor add or push fs insb addr16 add push mov incl add add or push gs jb popa jae gs add or inc jb outsb imul mov (bad) adc or incl das add add or dec outsl outsb je gs add or arpl popa je jb aaa add push inc cmovp dec push adc add add add add arpl jae push add or push gs je gs add add or xchg or add add add outsb add or dec insl jo jb gs xor sub pop or adc or incl and add push push add insl gs add push imul add or push or or add add or inc outsl imul add or inc outsl jne addr16 outsb xor add adc or or adc add add add add or push outsl popa arpl outsb cmp add or inc outsb imul gs or adc sbb adc add add add adc add addr16 outsb je add or inc popa insb imul jae add adc push push add or add add add str je popa outsb jae gs popa bound add adc inc insb gs push gs insb outsl jne xor hlt or adc incl cmp add adc add popa jb bound gs popa bound add adc inc imul popa bound imul cmc adc roll adc add add add adc add jb outsb addr16 add or push jns popa insl imul fcoms ds adc incl xor or dec jae arpl imul push jne popaw insl gs jns je imul add add add adc incl xor add push or inc jne outsl jo jns push add or dec jo je outsb imul or (bad) add add adc add add adc push gs popa insl outsb je jbe outsb gs cmp add push add gs xor add pop popa push roll incl xor add sbb je jne insb jne addr16 add or imul insl gs xor add add pop loopne adc adc add add add add push add popa je push gs add str imul outsl jae insb jb jb xor add or or sbb incl xor add sbb jne outsl jae jo popa je add or push outsl jns insb je gs add add inc push sbb adc add add add add adc push insb popa fs outsl insb fs outsb jne add or inc jbe gs xor add or or sbb incl sub add sbb add jb fs jae jae add push add insl imul push jne adc sbb incl add int3 xor sbb mov mov cmpsl cld or (bad) sahf jge int cmp fldln2 dec lods cmp (bad) imul adc pusha rcll mov add add add push add add imul popa jo jb jb sbb add and and (bad) (bad) jmp imul popa jo jb jb xor insb add add add push add add add add or inc outsb addr16 jb bound add sbb inc jb insl data16 insb jae jae popa jae imul outsb gs add add emms or adc add add or push fs outsl jo imul or push jne jae gs add or add or pop adc add add add add push add je jo outsl outsb outsl jae outsl jo add push add jae popa jb je outsb gs cmp add adc or add incl add add add jae outsl outsb insb imul adc push outsb fs fs imul gs add or nop adc incl das add add jb je jo outsb add add add addr16 jbe outsb jae add movhps and stc or add incl sub add push pop add insb insb gs add or inc outsl push xor push or or incl xor add pop or popa je jb insb imul or inc push insl popa je arpl add push movlps jmp adc add add add add or push outsl jo jp outsb gs or gs outsl outsb imul add or add or add add add or inc push jb imul adc inc push jb outsb fs addr16 insb popa fs cmp add add movups add add add add add inc insl arpl add or push gs outsb gs gs add or or add add or incl aas add add adc push outsb gs jb jae jb addr16 insl insl gs add adc dec imul popa outsb je imul gs add add jle adc add add add or add addr16 insb popa add or push outsb jae popa insl popa bound add add add add movups add add add add jo jae je outsl outsb outsb jae add or inc jns gs insb xor add push add or or incl sub add push pop add imul add data16 gs add adc adc add or add add add push add imul add outsl insl popa outsb imul adc arpl adc add add add add or inc imul je add or push jb imul jb add cmovge pop add movups add add add add or inc js jo gs outsl je add add fs add push cmp jno jae adc add add add add adc inc outsl jb gs imul gs fs add jns add add adc adc incl xor add adc inc insb insl imul je add or bound popa jb gs xor add add or adc adc incl xor add adc add gs insb fs outsb xor add or push imul je xor add push dec push std or adc add add add add jo insb gs add or inc insb je outsb outsb add cmovae int push pop adc incl das add add or insl jbe outsb insb popa addr16 add or inc imul add or or add add add or dec outsl insl gs add push add bound imul gs add add or add add add add pop add imul add popa popa jb jo add adc add pop add add add add or push gs jb jbe outsb xor add or arpl insl jo outsl outsl data16 add adc add sbb incl xor add sbb add outsl jb jb insl insl gs gs add or dec outsl imul jae add add or sbb incl aaa add add or inc imul jb je add adc dec outsl jb imul insb jae imul xor add push rclb add adc add add add add add push add lldt outsb jae popa bound gs outsb cmp add add or movntq adc add add add int3 xor sbb add mov jg sahf mov add cld cmp push clc cmpsl inc xchg pop and pusha pop shlb iretw adc pusha rcll ret add add add add jb popa jo je or insb arpl fs jae je sbb add and and (bad) (bad) jmp add arpl fs jae je xor es add cmp add pop or add add or inc popa jbe outsl insb popa je add adc push insb je popa arpl jae jb popa je jae xor add or adc or add incl cmp add add add insl jo jae jb popa je gs gs add push add insb outsl outsb outsb bound fs add push clc add add add add or push outsb arpl popa bound add or push outsl jo gs arpl add adc pop adc add add add add jbe jbe jo jb jne add or inc jne addr16 je add or add add incl sub add add insb insb jae add or push jo je imul add add push or or add incl sub or inc outsl jb outsb outsl arpl jo jae add pop add imul add adc or add add add push add imul add add jo add add pop adc add add add add or dec outsl jbe arpl je add or inc outsl arpl gs add or add or push adc add add add or add jo popa jns outsb xor add pop add jns jae jae add or xor or incl xor add or add jo jb outsb je popa insb imul add jb push gs add or movups add add add add or dec outsb outsb jne outsb outsl imul or dec gs insl popa outsb fs add adc or jno adc add add add add add imul jae add or inc gs imul add or or or incl add add jae outsl jb add add jbe add push pushf pop sub sti or or incl xor add push str push imul add or inc imul add adc lcall incl sub add sysret add jno gs add or dec outsl jb popa outsb imul out add bsr push adc add add adc inc gs imul je jb jb add adc push imul fs imul gs xor mov adc incl xor add adc add insb imul je jb add or bound jae jb bound add add es jle adc add add add add or inc jae imul add or je jns je insl gs add add add adc incl cmp add adc gs jae popa jo je insb bound bound gs add or push jne jb arpl cmp add or or add add add add add add jns gs imul outsb xor add or push gs jae popa outsb add or or adc incl xor add adc ja gs arpl add sldt insb outsl jb jp je outsl outsb xor add adc movups incl xor or inc outsl jne imul arpl add str fs jae gs outsb outsb jae add or mov adc add add or insl gs gs gs add sldt outsb je jne outsl insl popa arpl popa aaa add add adc add add add add or push imul jae add add inc popa gs add add add lahf or pop add add add add lldt outsl addr16 insl jo outsb imul add or push outsb bound outsb gs push sub add sbb incl xor add sbb dec outsb jne je gs gs or dec jb fs insb outsb xor add or adc add add add sbb add addr16 gs add adc push insb popa je jae outsb arpl push add add add sbb incl xor add sbb add jb outsb je jb bound add or inc outsl jno gs imul adc or add dec xor sbb and mov mov pop les mov pop imul push xor or stos add xchg ret add add add add imul add jne jne gs sbb add and and (bad) (bad) jmp add insl jne gs xor loopne add dec add add add inc add add add add or dec outsb data16 outsl arpl popa jb add or push arpl fs je jb add add sbb push add add incl aas add add adc push imul gs imul gs add adc dec bound jb popa je jae popa je jae outsb jae add adc adc add add add add or inc jo imul jae gs add or inc gs je gs cmp in add add add add add gs gs add or push jbe jne outsb gs add or or adc or add incl daa add add jne arpl add pop add insl gs imul add or incl sub add push or push jo outsb jae jb add or push outsl insb je outsl outsl outsb jae add or jmp cwtl or add add add adc push jo arpl imul gs add adc inc imul jb insl outsb je insb je popa je jb add pop dec add fmuls adc add add add add or dec outsl outsb jae jo outsl jae outsb add add add outsb jae imul jae add or ret pop add add add or add je imul add add jae popa outsb fs add adc adc pop or or incl xor add or add jns gs gs add or outsb imul gs xor add adc out or adc or incl add add adc jne je je outsb fs gs jae jb add lldt jae gs gs insb outsl jae jae add push fild add or or incl sub add or add popa outsb imul add or inc outsb popa jae imul or or or incl sub add or popa jbe add or inc fs xor add add or adc or incl cmp add push or inc outsl jb insb gs insb jns add adc push jns bound je insl insl gs jae jb cmp add add push add incl sub add (bad) add insl aaa add or inc outsb fs jb je outsb aaa add add sub push add add add adc je insl popa arpl jne cmp add or outsl insb fs fs outsb add or add mov incl cmp add adc add insb push gs jns je insb jae jae jae addr16 add or inc insb arpl outsl insb imul or insb add adc add add add add sbb push outsb fs outsl outsb jae gs imul jae add or push je jo jns imul add adc add add add adc add imul add or inc gs gs jae xor add add scas or adc incl sub add adc add insl outsb aaa add or dec popa addr16 add (bad) adc adc incl add add jae add str fs outsb imul jae add pcmpgtd adc incl sub add push pop add je outsb outsl xor add or push popa outsb imul add add add adc add add or push arpl jo outsb jae jb add or inc popa jb imul add or std or push add add or dec jne je gs outsb gs add or push jne jo fs add or or add add add sbb add je je popa imul add or inc outsl jb je jbe je add adc or sbb incl xor add sbb add insl jae jae add str jbe imul insb outsl addr16 add or or add add add or dec jne imul add push add imul adc call sbb incl xor or inc outsl insb insb gs addr16 jae add adc push outsb outsl jae outsb je je outsl jne insb jns add push int fiaddl addl add dec xor sbb pop test inc movb jecxz cmpsl push mov flds lods mov xor dec lods xor or stos add xchg aam add push add add or inc popa je insl popa jb aaa add popa jae jo jb jae jae sbb add and and (bad) (bad) jmp add jae jo jb jae jae xor jo add or add sti push add inc add add add popa xor add jae jb outsb imul add or adc add incl sub add add add jbe jb add or dec jns gs arpl outsb xor into or add incl xor add add add insb outsl jb popa arpl popa je xor add or push imul outsb cmp add adc add adc add add add add add arpl jae gs xor add arpl outsb imul (bad) push int dec or add incl xor add add bound outsb je jb gs add or inc jb outsb imul gs add or cmp incl xor add push or push popa jo push add adc push imul gs imul jae add adc push adc add add or outsl outsb je outsl insb insb gs add add gs add add or push add add add add push add je outsb add add add outsl outsb imul add add add adc add add add add str popa jae imul outsl outsb add or inc insb popa outsb arpl jb add or inc add add add add or dec jne fs popa bound outsb add or push outsl insb jne outsl jb xor add or adc add add add add push add insb popa jae add or push push insl cmp add psubq push add incl das add add add popa outsb popa outsb outsl jae popa add or push insb popa jae imul push ljmp or incl xor add or jae gs jb gs add or inc popa insb jae insl imul push or or incl xor or inc bound je jb fs add adc push popa insl insl outsb je outsb outsb fs add rsm or or add add add add or inc gs jae add str outsb imul outsb gs add or or push add add add add or pop fs imul add outsl jae arpl popa jb insl add push aas or add movups add add add add lldt jae imul fs xor add or dec jae imul add adc inc adc adc add add add add add dec jne imul inc outsl jne imul sbb scas jle adc incl das add add or push je popa outsb fs add or outsb imul jb add add or adc incl cmp add adc add insl insb imul gs outsb addr16 gs add or dec popa outsb outsb popa outsb jae add add add add add add add je jae outsb jb add adc inc outsl jb jb addr16 insl bound jae popa outsb add add or adc incl sub add push or inc imul popa addr16 outsb add or inc outsl imul xor add pop loope inc or add adc add add adc push imul gs insb imul je outsb xor add pop add je outsl fs je outsl outsb jae imul gs jae jb add or adc push add add add sbb add outsl imul gs add adc dec jbe jb popa jbe jb bound jae add add add add adc add add add add or inc insl outsb imul add add add jae imul jb outsb outsb xor add or or or adc add add add add or dec imul jbe je add or inc outsb je push jb add or add sbb incl cmp lldt gs jae jb data16 jb xor add adc push outsl imul gs jns je insl gs gs add add add add adc sbb incl sub pop add jae addr16 add or push imul gs outsb jae add (bad) adc or add add dec xor sbb xorb mov jne dec dec add inc xchg sub cmp xor or stos add xchg in add push add add or dec outsl ja imul add add outsb gs insb outsl insb imul add inc add add (bad) (bad) (bad) jmp add outsb gs insb outsl insb imul addl add adc add add inc add add add add or jae jb addr16 jb outsb add or dec popa fs jo jb je aaa add add or add incl xor add add add insb jbe je outsb add str outsb arpl arpl popa je outsb xor add or add or adc add incl cmp adc dec jbe jb outsl outsb jae fs je outsb gs add adc push jb outsb jae jae outsl jb jae outsb addr16 add adc add rdmsr push adc add add add add add outsl jae addr16 je arpl imul add dec imul nop add or add add add add jb imul add add gs imul and scas add add add add add adc push jb fs addr16 fs outsl jb jb add push add je jb arpl je imul (bad) or test adc add add or inc gs insl gs fs add push add jne jae jns gs gs add or add push add add pop add je jb xor add or inc push bound je jae xor add adc add pop add add add or add jae insb popa addr16 data16 jb gs add or push imul add or pop xchg push inc or or incl xor adc push popa insl popa jb gs jae data16 insb gs add or dec outsl outsb jae je imul lahf add adc add add add add or push arpl je jb add push add jb jae imul xor cltd adc add add add add add add jae jne xor add adc push fs outsb addr16 data16 add or pop dec pop and incl xor add or imul add or jbe imul add push mov imul add add lldt fs jb imul jae jb add adc dec popa je outsl outsb popa insb insb imul add or or add add add or push popa outsb fs imul or push jbe outsb addr16 jb jae add add adc push add add add add or push outsl fs imul jb add or inc jb je imul xor add or or or (bad) incl das add add or dec outsl gs gs cmp add or insl gs imul add add add adc adc adc incl sub add adc add fs jo xor add or push push outsb insb imul sbb pop movzwl jecxz adc add add add add or push jae gs gs add pop add insb imul add adc and cmpsb adc adc incl xor or dec gs imul add adc inc outsl bound insb je gs outsb gs add push sbb dec push dec add adc incl sub add adc popa outsb je gs gs add jb jb insb add or add push out adc adc incl xor add push or insl popa je imul cmp add or dec jbe jb popa je gs add add jecxz adc add add adc push insb jne outsb imul outsb gs add lldt je jb arpl jne gs add pop mov push adc add add adc dec outsb fs je outsw jb popa je jb add or push je outsb addr16 gs add add push add pop add add add add adc dec outsl jae imul insb popa addr16 add or push outsl insb imul xor add or adc add add add add or inc outsl insb imul add adc inc push outsb outsl insl insl gs imul add add pop cvtpi2ps adc add add add add pop add jb outsb arpl add or push gs gs gs xor add add add add add add add add add outsb je outsb imul add outsb addr16 jb imul add or pandn loope adc add add add int3 xor sbb xchg (bad) repnz (bad) clc dec xchg pop xchg mov jae (bad) mov dec lahf inc mov ds dec lods xor or stos add xchg xchg cmpsb add push mov add je outsb addr16 or gs popa insb insb jns add add inc add (bad) mov add mulb mulb add add add add add add add add sbb add add shlb push xor jmp xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop cld cld cld cld cld cld cld cld cld cld xorl cld cld cld cld cld cld cld cld cld cld jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call mov jecxz js push xlat fldcw inc out flds (bad) and xchg inc mov mov outsb inc dec test dec popf jbe pop mov xlat fstps pop xlat fldenv (bad) aas into and (bad) pop pop pop fcomps xlat (bad) rcr pop pop xchg movsl out lods shll xlat fldcw addl push ds mov xlat subb jae mov push xlat orl fldenv dec (bad) xor pop xlat fsincos out mov mov push xlat mov mov outsb xlat leave mov stc pop mov rcr pop ds mov xlat orl fldenv stc pop (bad) sub pop push sub test pop push ret pop lcall pop fiaddl xchg test cmp (bad) fldenv push xlat fldcw push pop and (bad) fbstp or xlat fyl2xp1 push xchg lret push andb inc push and push xlat push lcall es es loop add jnp mov pop aad mov push xlat push in add xorl insb shlb jno jbe mov add pop dec pop xlat fldcw dec (bad) xor adc fsincos out test mov push xlat fxch push rcr mov push xlat mov stc inc jns push xlat in add fldcw push ds push xlat subb cmpsl xor adc fsincos out nop (bad) mov stc xchg mov stc pop in push xlat cltd aad nop and loop movsl js mov sbb fstps inc fldenv out pop into mov or fyl2x insb xlat mov insb xlat mov out and mov out and mov or fldcw inc notl add sub (bad) mov dec (bad) xor out sbb mov lea fldenv push xlat push in pop xchg movsl out or mov or fldcw inc out in add (bad) mov xlat orl fldenv dec (bad) xor adc fsincos out push xlat mov lea fldenv push xlat push in pop xchg movsl out (bad) push lea les xlat fldcw inc scas xor xlat fprem out xor mov or fldcw rcrl lret push lea loopne xlat fldcw inc fbstp mov push xlat mov insb sub hlt push pop pop leave push push fldenv xchg mov add pushf test pop fdivs push rcr pop aas daa lods push xlat push in ds dec hlt rcr pop aas xor dec inc mov pop pop xor (bad) dec fldenv (bad) pop pop cmp (bad) frstor push sub xlat fldcw dec cmp (bad) sub pop lea cltd sub outsl fsubs push push mov outsb xlat jmp mov push push movsl test (bad) out pop pushf lods out add mov out jg mov out aam mov out (bad) push pop pushf in dec iret mov push arpl inc lret pop cltd pop fcomps or fldcw inc iret pop cltd push mov fldenv (bad) (bad) push xor lret fldenv push mov aam sub pop xchg or sbb push xlat mov (bad) mov push pop pushf mov or xorb fcomps xlat (bad) rcr pop ds mov xlat (bad) dec fwait rcr pop sub push pop pushf lods add xor push xlat fldcw inc fcmovnu arpl fldenv lcall adc fyl2xp1 (bad) xlat push in ds push xlat andl push aam mov push xlat (bad) (bad) pop aas dec lods push xlat mov mov mov push xlat orl fldenv push test mov push sub dec adc xor sub aad shll cmc and popa mov push xlat mov pop xchg sbb push xlat push aam pop pushf lods (bad) sub bound rcr mov stc mov aad push pop sahf popf lea push loope das fldenv cld (bad) mov cltd pop fisub (bad) push xlat mov sub pop inc gs fldcw cltd adc mov (bad) adc push pop inc insl add fldenv jmp xlat fldenv push xlat push es (bad) fldenv push xlat push (bad) cmp pop push xlat fldcw cltd (bad) shll rcl mov push mov fdivrs xorl cli pop push pop mov out dec movsl push xlat (bad) fldcw outsb mov push jecxz pop push mov fsts push (bad) mov push xlat mov stc (bad) shll (bad) xlat lods inc (bad) push (bad) fldenv jo push hlt or (bad) mov pop pop mov inc fisttpl mov inc in push movsl push xlat (bad) fildll outsb lods push xlat fstps (bad) push push (bad) mov push adc rcll and xlat (bad) and push pop outsb mov xlat fldcw adc sub (bad) sub bound fcmovnu mov push xlat push es fldenv (bad) dec fldenv push xlat fldcw inc (bad) push es fcmovnu mov lea lods push xlat push es fcmovnu mov adc pop mov notb jb mov jb xor push (bad) mov pop ret xor xlat fldcw cltd (bad) aad push aam mov pop and sub push cmp xlat fldcw pop ret xor xlat fldcw cltd (bad) aad push aam mov pop and sub cmp lcall sbb stc aas pusha stos push xlat xor (bad) fsubrs push mov xchg push xlat fldcw inc fistl or pop mov shll push xlat fldenv mov shll add xlat push rcrl push movsb stc pop mov pop mov iret xchg add aad push xchg loopne xlat fptan stc mov shll push mov andb lcall mov (bad) rcr lods push xlat mov add outsb lods push xlat fldcw adc mov stc (bad) mov mov push xlat fld (bad) fcmovb mov add push popl xor cmp (bad) or push pop add (bad) out mov aaa sub inc lea sbb push xlat push in pop xchg cmc lea out sub push out add (bad) pop mov push xlat push fmull pop and (bad) lahf push out or (bad) cwtl shll mov sbb xlat fldcw dec xchg push in add mov push xlat orl fldenv outsb aas mov push xlat push in pop and lcall jb push in pop sbbl lea fldenv push xlat es push sub mov insb xlat mov lea mov stc pop pop pop pop fcomps sub sub xor out inc shll or cmpsl xor xlat fsincos out test mov push aas imull jbe jmp push xlat orl fldenv dec fbld nop stc pop mov outsb xlat jmp int xlat fstps rcll push sub pop push fist push adc mov insb xlat push scas stc cmpsb lea andl add stc in negb push and push xlat push in adc in insb xlat mov stc mov push (bad) push sub pop push iret pop pop push fcomps xlat fldcw adc nop (bad) push mov sbb xlat fld mov js movl pop xorl (bad) aad pop rorl xchg stc add (bad) xlat (bad) and aam mov pusha push and push adc cmpsb push (bad) fldcw dec cmpsl xor xlat fsincos out dec fisub lea es das fldcw push pop sahf mov (bad) sub bound test push pop push add (bad) fisttp xchg stc pop pop pop push fcomps xlat fldcw pop (bad) pop bound cwtl (bad) adc xchg mov add cmp fldenv push fbld roll sub and xlat (bad) and aad mov push xlat (bad) cmp out and mov add fldcw pop fistp push sub pop (bad) pop and lds mov outsb xlat leave mov lea mov rcll push xlat fsubs jbe push scas push xlat orl fldenv push sub pop push fcomps xlat fldcw dec (bad) xor or fsincos out fbld pop xlat fldcw call pop add f2xm1 lea or mov aam mov sti sub and xlat (bad) and lea fldenv push xlat push es fldenv ds mov push xlat push es fldenv push (bad) fldenv push xlat push es fldenv push pop pop and stc sub mov pop xlat fyl2x stc inc mov push xchg (bad) fldenv push xlat fldcw orl mov mov fldenv or pop or xlat fstps push inc mov add fldcw push ljmp (bad) xlat fldenv (bad) fcomps push xlat fstps mov sbb jbe dec mov cmp fldenv adc fldenv mov in dec xchg cmp push ljmp cmp fldenv add fldenv push pop mov push xlat pop aad cmp and rcl and insb (bad) es xlat fldenv push sub pop xlat fstps inc fsubs pop xlat (bad) sub pop lds es sahf (bad) fldenv push xlat es fldenv push (bad) cltd pop mov fsubs pop xlat fstps stos fsubs add fsubs push xlat es xchg (bad) fldenv push xlat xor lea mov push mov lods add sub bound fldenv push (bad) fldenv pop fbld xchg stc (bad) mov mov (bad) sub bound fldenv mov fsubs pop xlat fldcw pop fbld xchg stc (bad) mov mov push xlat es xchg (bad) fldenv push xlat push es (bad) fldenv std push sbb pop xlat fptan insb shll push (bad) (bad) fldenv push xlat push decb sub pop push mov mov push mov adc xlat push (bad) push sub pop push scas xor fcomp mov pop jmp add xlat fldenv iret xchg push mov in lea into push sbb lea push mov pop int inc push movsb popf push mov or into pop xchg popf icebp es sub push mov pop pop addr16 pop lahf stc mov loop and movsl imul xlat mov mov mov scas xlat fldenv push xlat fldcw inc repz jno mov (bad) adc insb fldenv (bad) adc jp or or sub iret fdivs scas jmp push push imul lods mov or sbb or fldenv push xlat fldcw jnp push aad ret mov mov push (bad) fldenv std out nop iret out sub fcomp mov and push test pop fnstsw pop xlat (bad) or fldenv in push mov mov or arpl xlat fldcw fsub sbb aam sbb adc fnstenv fcmovnu sub enter xlat or or jmp test mov pop data16 ljmp pop (bad) fldenv out sbb push xlat andl lea leave mov inc aas xchg mov lea les inc aas out mov or mov xchg lods push xlat mov rcr mov or fnstenv or fsqrt (bad) mov adc xchg pop lcall fldenv rcl mov push pop (bad) cltd fsubl lahf and xlat lods dec out cs push (bad) pop cltd pop mov fsubs push xlat xor repz dec mov fldenv lea lret mov push xlat pop pop pop mov fldenv mov out notl (bad) cmpsl push xlat push cld or mov enter push aas fwait cmpsl push xlat fsubrs sar out cltd fbld jae pop cmpsl es pop cmpsl sub pop cmpsl push xchg pop cmpsl es pop cmpsl push xchg pop cmpsl pop xchg pop cmpsl push xchg pop cmpsl push xchg pop cmpsl inc xchg pop cmpsl dec xchg xor shrb mov push andl lret push sub push pop xchg lods xchg fnstcw mov cwtl and aad and xlat lods push lea ret mov fcmove push mov fldenv push sub or mov push sub rcr mov xchg arpl (bad) cmc idiv (bad) icebp sub fsubl xlat fldcw pop jmp jns scas shrl inc fistl add fldenv push pop in test (bad) sub sub fistpll push lea leave mov push mov fcmovne push xlat fabs push sub or mov push andl arpl xlat fincstp push sub outsb pop fisub push xlat (bad) rcr mov push xchg aam mov mov lea (bad) and and pop out rcr mov or pop stc sub xchg or xlat pop pop pop fcomps cli sub dec inc and pop bound mov push pop cltd popf vmovss adc pop repz test fcmovnb test shlb out aad outsl bound mov ss cltd mov xchg xchg sub pop dec add sub (bad) aad sub fistpll push dec aaa sub (bad) aad push aaa push push aad fist mov xlat loopne pop fcmovnb test (bad) notl (bad) push xlat push in and push cmc and push std and pop push mov lcall adc jmp loope pop cltd mov xlat push stc cs loop push test aam push mov mov push adcl pop or jle fldl test icebp or pop lods pop add (bad) push dec test xor inc pop out repnz test mov adcl mov ret nop movb mov adc lods mov sub xlat fldenv ret and xlat lods out (bad) das fsubl xlat fld (bad) lret push xlat pop bound pop fisubrl lds (bad) aam dec add push xlat fldenv out (bad) push ds (bad) mov cld mov mov mov arpl inc fnop addr16 (bad) xor xchg shlb push mov frstor bound mov or (bad) xlat push stc outsb into mov push mov push aam pop in scas dec out pmullw mov mov inc mov fldcw inc mov mov stc sub lea pop movsl push adc sub pop sbbl (bad) das fsubl insb shll push push (bad) mov push xlat mov stc (bad) mov pop xchg cmp push cmpsl test xlat fld jb pop fbld mov mov js cltd mov xchg sbb push push cmpsl test xlat fldenv lcall inc mov cltd mov xchg mov xor cmpsl test xlat jmp fbld xchg fld (bad) mov pop mov xchg sbb or push xlat xor cmp sbb xlat fldenv push xlat (bad) adc cld or mov stc mov es lea les push fcmovu mov push xlat push pusha lea fldenv inc fsubl adc xchg pop lcall pop addr16 lret insb xlat mov insb (bad) mov insb aad mov stc (bad) stc sub pop lods lods xchg fnstcw push sub test xlat (bad) idiv (bad) std idiv (bad) icebp sub pop addr16 lret insb (bad) mov insb xlat (bad) lret push mov sbb inc repz pop repz stc xlat fldenv dec adc std movsl mov in jae call stos cmp pop inc pop int dec pop popf test test xchg lret inc mov mov stc sub add ficompl inc pop lret xlat mov mov inc ret push mov inc (bad) (bad) cmp and out fidivrl push pop xchg mov xchg std mov fwait std test (bad) xor bound test repnz jno das fldcw push pop test add popf test xchg loopne or mov mov (bad) (bad) ljmp sub pop bound adc pop xlat fldenv jae push loop adc lcall (bad) sbb pop rclb inc push loop jae mov aam xchg pop pop add xor xchg popa aam mov fiaddl sub aam pop lcall xlat fldcw push rcrl bound and cltd adc std movsl lea std test dec push loop jae pop fiaddl xlat lods push xchg sub repz vpsubsb (bad) fldenv adc lods daa push jge pusha aad adc pop inc cmp addr16 and inc and mov (bad) adc std movsl lea push mov xchg cwtl and xlat lods push (bad) (bad) lds pop cltd xchg xchg mov add mov (bad) adc in sub repnz stos (bad) arpl and clc lcall clc mov es sub test aad mov sti subl xlat xor movsl mov mov stc jmp pop div in dec imul xchg es (bad) out es cwtl shrl mov jb mov jb jmp repz stos les mov jmp push mov stos les mov je stos into pusha mov mov loop movsl stos les pop je mov push cmc stc mov sti std and cwtl shrl mov jb mov jb jmp subl (bad) mov inc mov andl or sub (bad) jae stc mov stc addl aad mov lods les cmc (bad) sub pop dec xlat mov push xlat xchg mov sub popf mov out das xor icebp push xchg in xchg fprem1 push xchg fstps cmp pop push xlat pushf mov cmp fldenv stc xlat fldenv push ret push (bad) fldenv push xlat fldenv push xlat fldenv push (bad) fldenv push xlat fldenv push xlat fldenv stc sub lds (bad) ds inc mov ljmp mov mov stc mov jmp out sahf xor stc xchg mov imul imulb mov dec cmp pop inc mov aad mov mov xchg out sub out mov lods into jbe mov bound xor (bad) mov cmpsl (bad) xchg movl les sub loopne mov es inc mov loopne mov aad movsl stos call out push mov xchg xor xor out sub repnz pushf (bad) je stos mov stc test je mov arpl xor sub imull lods aam mov mov and outsl movsl lods aam mov mov mov stc xchg stos les mov loopne aas rorl sub out mov xor test arpl xor arpl mov jl (bad) ds inc mov mov mov stc nop mov (bad) push mov leave dec mov les xor jmp mov mov iret arpl es inc movsl mov shrl mov dec mov es inc mov in mov mov les (bad) ds push mov int3 outsl mov stos into gs rolb aas pop push stc sub into je mov xlat arpl sub xchg mov jb mov arpl pushf xlat arpl ds stc test dec cld ds jne mov mov stc test fldenv lods aad xchg (bad) aas es push xlat xor jb mov push pushf fldenv lods aad mov ss stc cltd lods divb les stos aad mov in arpl xor jb mov aad scas lods cmc outsb movsl mov pop call xchg stos les mov mov stc cltd lods icebp je lods les vpperm enter shrb int3 imul lods repnz mov shll mov pop stc cltd lods repz shll mov pop stc cltd lods hlt push mov mov mov xor arpl lods enter shrl mov scas out sub hlt jne stos xchg xor xor push mov (bad) xor pop dec mov roll mov xlat xor sub aam mov xor (bad) jmp dec stc sub mov out sub mov lock es push xlat fldenv stc clc mov xchg sub out xchg test xor xchg mov pop mov mov dec stos loop sar mov mov push xchg sub or xor int3 mov scas lea (bad) shrb inc or js movsb push bound testb sarl out sarb inc fbld jle ljmp popa cmp adc pop enter jmp dec lock xor (bad) adc enter mov push insb xchg cmp (bad) outsb jle nop notb lcall push sti jecxz mov imul shlb inc (bad) fs cmp jnp cmp fild rcl add lods push push inc dec inc jle dec mov inc nop xchg mov (bad) ficoml mov ds call xlat fldenv stc (bad) fldenv stc sub ret test nop and fldenv stc (bad) fldenv stc sub mov cmc sub mov arpl es push xlat fldenv stc xlat fldenv stc sub mov out sub mov add outsl ss mov dec sbb jae inc insl out mov mov lock (bad) out cmpsb shrl (bad) jae inc sarl outsl or push icebp cli or imul imul mov clc cmp imul or sti sarb clc bound jecxz mov cli mov add inc daa outsb arpl push mov xor add test loop xor push xor jno fdivrs data16 shlb sub sbb sbb scas (bad) mov es (bad) loopne (bad) fstp mov sub daa adc les aas bound aaa push or std jo scas loop mov push fisubr into movsb pop in test inc fcmovb xchg out cmp xchg mov imul add and shr inc fstpl push mov mov sbb imul in jne fistl aam mov shlb lcall loope mov push call cmp push and leave mov scas pushf or xlat cmp add cs cld jo ss dec and lods lea cmp pop mov ret stc daa mov adc outsb mov pop inc xor sub mov (bad) cmp popa sarl or out mov pop outsb das add push pushf jne xchg (bad) jae repnz movsb dec inc xchg sub mov jno scas pop pop or inc cmp sbb imul dec (bad) adcl cmp pop jmp ljmp loope leave (bad) scas mov mov sbb dec stos ljmp inc (bad) jle jp in andl adc mov mov inc mov xchg jo int jb loopnew das ds imul adc je movl cld xor (bad) ds xor (bad) cltd dec aam or iret cmp jne inc in ret or icebp jnp adc and sbb cltd movsb in imul adc dec or or cld ljmp mov pop sub lods (bad) adc pop mov cmp rcll dec mov mov (bad) sub fidiv clc arpl (bad) mov jns xor dec test sahf inc mov add cwtl or cmp sub or adc popf add inc mov (bad) mov or cmp stos xor adc pop fmuls (bad) loop ds fnclex xchg sahf subb mov and gs cs inc idivb add sub push adc cmp jb testb dec jge outsb sbb scas add in std (bad) xor push pusha mov test das aaa ss popa cmp jo and push sbb loopne sarl mov inc std cmp mov push mov xor add and inc (bad) xor int xchg push orl (bad) ss adc mov es mov fstl inc repnz mov jmp cmp mov mov imul (bad) cmp xchg es fbld pop psraw nop pusha leave pop inc mov or in xor loope jo imul jb stc xchg imul (bad) jo sub jecxz mov pop int arpl mov lods push mov out test (bad) jecxz clc cltd sbb jno fsubrl mov dec mov mov iret imul adc sbb xchg rol out push xor mov adc mov data16 xchg jo imul out xor sub aaa push ret ljmp test fsubr outsb dec nop mov sub push in movsl roll jne jecxz jp pushf push xor xor scas xlat out sbb stos addr16 sub bound push cmc iret adc cmp bound jo sbb fsubrs mov test cwtl jne push and loop mov xor sub xchg add (bad) out insb out xor mov mov jl adc xchg push in push dec pop push jg lds mov add int ss fdivrp jbe xor mov jns mov mov or scas test adc xchg in and add pop leave gs outsb fldt add pop pop cld aam jg in or lret cmpsl pop inc stos inc dec xor push sub pop out xor inc gs les orb mov add lods lret and je das cmp mov les leave pop dec les subb mov call ficoml jae mov pop lock sti mov mov xlat mov or out fstps jge xor adc cmpsl dec mov popf pop int3 xor jnp cltd add or xor adc mov xor xchg flds mov (bad) pushf repz cmp mov and dec sbbl push sub jb xlat xchg inc xor xchg jmp push sbb lret push dec push inc add mov ljmp mov mov out movsl or cmp mov test ljmp mov xor insb ficompl jne test fcmovu outsl ljmp add adc je cmp (bad) cmp in fdivrs add jbe inc cld scas pop bound imul enter stos xchg stos std (bad) pop mov das (bad) jbe movsl (bad) cmp insb lea or sarb in add lock push mov in pop mov push sub loop mov imul xor jbe pop je adcb mov mov xlat jmp hlt mov jne lods (bad) imul sbb cmc dec and test adc dec push sub out mov movsl cld adc mov pop push insb ljmp mov add add pop rolb lret inc dec inc or pop outsb rcrl xchg out rcrb jg xchg pop xchg and das and xor pop mov inc rcrb inc and lahf lcall pop push add mov mov dec ret outsl fnstsw or dec lcall push rcrl add stos adc mov or fisubrl movsb movsl int xchg jecxz and mov dec inc call (bad) inc add cmp add stos incb pop in fs daa lods gs xchg inc push pop adc mov xchg push mov lds scas adc leave das aam push cmpsb dec jns or cli insl push scas fisttpl in into sub or test xor jo jp imul out ljmp out jne jnp mov movsb and clc clc cmp test scas and cmp leave add sbb cmp pop or jne dec lods cmp ficompl or rolb nop cmp xchg cmp cmp data16 repnz (bad) sub popf and pop hlt pop in cld xor rcrl xchg push out ds adc fwait ret xor sti mov enter jmp lds jae mov stc insb pushf or pop lods pop popf (bad) mov fst leave cmp mov mov mov xchg movsb or xor push dec push stos test lea je jo call outsl mov mov inc cmpsl das addr16 out dec ds cmpsl sub movsl inc lret addr16 lods and pop jo xchg xchg test xor (bad) aas lahf sarl add hlt ret bound sub popl adc mull outsl popaw cmpsl leave cwtl mulb xchg gs inc sahf aam fsubrp adc fistpl sbb rcrb add rcl dec out xchg xlat inc fmuls cli push cmp lret ds push movsl (bad) or cmp pop outsb nopl daa push adc inc pushl lock clc cmp or out pushf not fstpt loope sub jle pop jl daa sbb scas jb mov adc xor add push jecxz iret push lods fadd test sub cmp inc sub dec imul imul push xchg imul popf popf lcall es divb mov addr16 mov testl lahf (bad) out mov push nop ss xchg test or out test mov xchg push shlb pop (bad) mov xchg push dec gs mov in fnstsw lods negl fistp xchg cmp jmp lcall push stc into mov loop cli sub dec movsb pop pop or outsl sub push in testb xchg hlt xor imul test jle pop adc push repnz rcll repz adc (bad) cmpl loope dec (bad) or xchg add xor js mov mov inc movsb xor fnstenv mov sub xchg test out fldl adc popf js or push loop add inc popa mov out push mov jecxz mov emms lret rcrl faddl insl stos faddl lret pop fisubrl push mov and dec mov or pop mov dec xchg lret cwtl fnstsw or dec aam call ds (bad) sub jl,pt mov adcl popa fcoms cltd les andnps in push in cmp add mov sbb mull ss mov je mov push call sbbb cld cld int mov ss push sub xchg mov mov ret fdivs dec (bad) push (bad) insl push sbb lods out or cmp xchg xchg pushf dec mov lret test or lds icebp pusha pusha mov xor es arpl jmp or loopne add lods movsl sub fcmovnu mov xchg lea dec push sbb mov fld paddb dec lea lods pop in add test and out xor jae sbb imul sub mov ja test jle,pt mov cmp cmpsl fs fldt les dec out data16 or jmp jge cmp pop loopne das xlat sbb sbb mov mov hlt fs xor mov shlb cwtl sbb aaa cmp or add in fsubs mov into add cltd arpl push pushf pop and inc xlat nop dec lahf inc dec lret leave insl jno stos xor push xor add cltd or sub test cmp sbb sub fwait lret dec and or fsubs dec daa jmp lret pop nop ja and outsb fdiv push sbb pop stc cmp (bad) aaa (bad) sti xchg mov loope (bad) outsb addr16 (bad) insl iret mov xchg imul mov mul test icebp out or andb insb xchg pop addl fucom inc sbb jle mov inc testl xchg mov add add pop inc es sahf xchg pop or inc sti sbb loop mov punpckhdq sti lahf scas aam xchg lods mov jg xchg lea adc sahf cmpsl cld sub loop aad or push gs fdivrp adc cs pop xor movsl mov fdivrl je scas nop sbb add scas inc cld out xor or icebp mov popf xchg (bad) pop add dec cwtl sub mov sbbl jns jne cmp xor movsb add add aam js fwait cli push les push rcrl fcoms or xor je or adc loope std icebp ja fstl xchg sbb pop xchg xchg jno jb cmp sbb pop stos fcmovnu dec push xor cmp jne out xor jae in mov rcrb lods sbb xchg fisubrl xlat mov lcall ret scas fcoml xchg call jno mov int jmp rcll repnz mov jnp das mov sub dec and rcr xchg pop xchg cmp pop int xor mov jge push sbbb insl adc jmp adc mov xor lds inc jecxz jecxz xor lds sub lea inc jmp scas push lods push pop inc popa or dec cli jno fwait adcb adc dec push enter in dec pop xchg rolb loopne cwtl mov adc test and or pop lret or jno fnsave in dec and fmull push das push scas pusha les xchg xchg and add test ljmp dec bound rorl xchg mov pop cmc pop lea lret push mov sub mulb mov fiadd outsb aam (bad) out pop xlat or adc dec les lret loopne enter out or pop outsl (bad) mov pusha mov inc outsl imul sub lcall clc repnz inc xor inc fsubrs jbe lds ror arpl (bad) fidivrl daa out orl test sahf pop push cmp iret (bad) pop add arpl lea and mov lods adc mov insl in mov sarl inc outsl dec xchg pop out shl call mov cltd xchg (bad) xor gs xor inc idiv mov pop loopne fmuls cmp inc in or mov out fwait pop pop fcompl cmp scas outsb shr movsb push test jae inc sbb mov jno jg decb add aas inc out fdivrl xlat mov add pushf scas or dec jp in call sbb add xchg mov mov push lds repz ret adc loopne mov call pop sbb ja push mov shrl cmp inc push movsl fild fisttp cmpsl or scas mov leave jle int3 adc mov test cmpsb out cmp loopne in out into (bad) (bad) stos (bad) dec and xor sub arpl imul stc xchg add (bad) bound aas test inc cmp inc out mov fs lds aas hlt cli sub sub dec loop pushf sub dec outsl jle push loopne test out xor dec ds pop loope cwtl push (bad) mov cmp mov inc ss jbe mov lcall push pop mov adc sti or xor addr16 dec add iret movsl (bad) xor mov add mov fidivrl mov adc jle loop dec jle cmc loopne xlat es mov dec xor pop push sti push dec fucomip enter push nop sub movsl mov cmp aas pop cmp mov mov ret cmp negb int3 mov push lcall sub pop pop je lcall push push fistpl iret cmp daa addr16 or push aas popl ret ss (bad) not sub dec rcrl sub and dec sub lret pushf or lea cmpsb test hlt xorl shrl sub xchg or mov jg int3 inc jmp punpckhbw or (bad) mov int movsb jecxz (bad) xacquire push xor mov aam push sub and rcll in push pop mov sbb enter rcll shrl jo xchg sbb rcrl scas push sbb (bad) jno call in mov fsubrl cmc xchg jmp rorb stos xchg xor (bad) icebp dec pop cmpsb sbb addb add jl lahf aaa xchg out mov sti fsubrs and mov les adc xchg nop loope outsb addr16 xlat es fist adc (bad) in aad inc dec mov loop icebp jo xor imul js xchg fwait (bad) fmull fbstp gs rol xor dec push mov jne push pop insb inc leave fnsave les and mov test jg push hlt xor jns sub xchg out pop cmp jae dec ret mov lcall jecxz out scas sbb pop dec test enter push or insl std jbe pop cmp adc mov aaa arpl mov jo pusha fnstsw push test sti sbb std scas mov shr cmp lea cs xor mov mov ficom pop icebp shll mov mov fdivr mov dec fcmovnu popa outsb or sbb insl push jp std jae dec aas sbb loopne add adc or inc rcll outsb cmc adc sub push fwait fwait jecxz out push add cmp inc and add addl adc jmp push dec mov jecxz push cmp pusha mov insl cmpsl push or (bad) aaa mov daa mov cmp fwait mov jmp dec inc sbb ret lds and lds vmovlps xchg xchg fwait and dec lcall cmpsl pop imull std sarl mov and sbb int3 pop jg addl cmp stos xchg fild adc inc fdiv mov jle rclb (bad) std sub hlt and push out ss sub inc add je scas mov (bad) aas inc push sbb addl loop and adc jno xchg mov xor (bad) xchg pop jg fwait push xchg jmp sub lahf lret mov (bad) or dec loope bound fidivrl jae add pushf jg aam int3 clc clc ret (bad) mov in sub inc and cli addr16 pop dec les mov sub data16 mov xor insl test add mov cs repz adc outsl xchg nop pop push cmp mov int3 adc sarb rcrl lret adc jnp add jp dec cmp nop fsubr or jno cmpsb loope addr16 (bad) mov add pop mov (bad) mov adc cmp into rcr js dec lret jbe and mov jle mov fidivl jns outsb add mov xor cmp popa cmp adc mov cmpsl (bad) sub cmp adc xchg fwait push or js sahf mov lahf jecxz fildll stos fcomip mov popf icebp add sahf mov jae lock jmp mov fildll dec daa aas jecxz lret mov vrcpss mulb rcrl sbb push fimull in inc inc test je sbb hlt bound mov add lea add das out jp jae sahf cmc nop or sub repz adc adc add cmpsb rcrl push adc es insl add adc mov dec iret (bad) lock cs xor xchg subl push sarl test push pop leave mov out cli and cmp in mov lahf adc push testb insl out (bad) mov ret shrb sbb out out push gs leave repz fwait mov das subb cmp pop sub cmp inc pop gs int push mov cs inc push mov xchg repnz scas icebp test lods push in mov arpl pop fsubrl fs xor adcl mov cltd das loope (bad) fiadd sub jp and or sti mov gs sub cli dec cli xchg loopne add or ret xchg cmp xchg mov int mov xor leave aad dec lea mov sub cli mov pop in ja popf push xchg icebp inc jmp mov int mov adc xchg push dec lock cmp out (bad) sbb shlb mov addr16 jo imul pop jmp cmpsl cmpsl neg and fwait lret lock mov mov fildl sub js add pop fucomi push mov into movsl aam repnz xchg xchg mov fcomps sbb pop jnp stos imulb xchg and (bad) sub jne ret daa sub xchg daa inc sbb fcomp les fstl xor and sub adc xchg push iret dec ret test push lds cmp addr16 inc jp daa cld data16 lods or pusha mov mov dec repz xor mov add push pop jb (bad) jns xor icebp test jge lock hlt mov negb xchg jo jl sub (bad) cmp je movsl sti lcall ds in jns and fsts jo int3 add lock sbb push push out imul sub dec pop mov jge pop xlat xor sub jp ja ficompl push or aam push mov mov nop (bad) out clc std and xor push movsb xchg jle push mov sti xchg and nop lcall and outsb jge inc pushf daa jecxz sub shr fisubrl (bad) sti pop repz frstor sbb lret gs and cmp jge ja ds clc jns mov push iret cmp fnstcw dec xchg and addr16 jae cmpsb dec sbb add inc cltd cltd cld or fistpl bound add jmp mov jnp out sub jnp (bad) mov nop or jp cmpsl inc aad stc sahf mov movsb lret pop push scas adc mov gs adc or sub into cmpb inc test cmp (bad) fild inc inc sub add jbe daa mov pop outsl stos push (bad) into cltd dec push inc cmp push aas test sbb push xor (bad) fmulp adc jg sub adc dec cmpsl adc fwait mov out fwait loope cltd das das sub fimull lea add cld mov out dec mov push xor cmp mov ss or incl addr16 adc in lods lret (bad) ret ds and push les push dec fisub scas push inc fld jae cmpsb cs ljmp test and add mov in scas (bad) subb aaa daa js jg popa es sub rcrl repnz xor mov dec push cmpsl pop push call dec or bound pop into test sbb xor jae pop cmp movsl and or xor imul push loop xor or adc xchg and pop push mov das shl cld movsb push addr16 jae pop (bad) pop jmp test cltd xchg mov push mov aam push mov push gs data16 sub or inc lcall lock cmpsb insb dec icebp add incb leave mov cmc stos dec movb or mov adc aas lcall (bad) sub repnz repnz or negl jnp sub js idivl sub xlat into or das fucomi cmc xlat mov jb imul es shl cs lods lds pop xchg (bad) clc or dec outsb jns jmp mov xor lock and lds shr xor inc scas xchg test and push xchg sbb jns cs cmp dec and mov push leave dec rcrl sub repnz int3 mov test mov pop sub sbb lods sbb lods cmpsl (bad) mov jge (bad) and pop inc cmp les lock inc scas xor pop push mov jl nop loopne pop ja mov jle ljmp pop dec xor sbb adc ret loopne jne fdivrs leave clc aad das mov out repnz jo sbb int xor jne movsl out jle idiv fsubrl lds inc imul cmp inc mov xor xchg or in lds and jle enter inc iret test xchg movsl mov fsubp and sbb adc sbb cli push sbb loopne pop cmp jns scas push push pop add stc push add imul inc cmp cmp sahf ljmp mov push arpl push xchg pop fnsave or jp incl pop test fdivs adc add stos fldenv cmp and loopne shrb addr16 repz sbb push push mov dec push xor mov cld jnp adc aad enter popa iret repz rcrb test repz sbb push lds cmpb cmpsl jno add data16 loope jbe push scas jge mov movsl hlt aaa inc xor or jae popa jl jne mov (bad) and popf cmpsl shl test dec lods outsl in out push push imul mov jle mov std add pushf xchg sbb mov mov fisubr shrl enter pop jg leave dec sub fistpl push (bad) adc fwait pop mov cmp out in sahf stos idivb outsl pop adc push push xchg repz enter add andl and push cmc pop mov loopne adc jp jle aas mov js mov pop mov push insb arpl (bad) lahf adc lods test lret jne fisttpll dec call pop mov xor sbb pop dec adc mov (bad) pop leave cmp outsl ja and xchg adc lods dec push sub aaa sahf addr16 xchg inc mov out dec incb mov gs pop push inc xor mov push pop sbb popf cmp sub ret imul es sub rcrl xor cmp scas movsl dec or sar inc es jge sahf fnsave sbb (bad) sbb fbstp shrb sahf lret xor sub dec mov mov xor mov cmp ds sub cs jmp pop testb dec mov (bad) mov sbb push sbb and push xor mov add ds mov xchg inc lods inc mov xor mov (bad) stc ljmp subl pop sbb add jns and xchg shrl out das popf mov jnp sbb out shlw roll ficoml xchg addr16 orb int3 push jo lds push or gs (bad) mov les jo inc xor scas movsb rclb cli push adc arpl mov push mov pop int3 aaa pop pop push movsl sar notl out jmp fnop in inc inc call inc nop mov and aas in (bad) mov iret pop and pop fistpl jo aaa lcall insb iret xchg or adc repz cmp mov xchg mov adc ss (bad) cmp and arpl js jp fidiv add mov lahf stos add sbb inc arpl pop inc adc mov adc inc mov and (bad) les rcr jp lcall dec pop push fadd (bad) cmp sbb lea sub and pop fidiv lret jbe xor pop test pop dec inc pop lods cld les test jl push pop sub dec hlt lea rcrb jae lahf loop fbld (bad) mov pushf jecxz sbb mov scas jmp outsb pop mov xor add push lods (bad) push into fsubs adc and inc ja arpl and mov jbe popf pop popa jae sub popa inc xor cltd icebp mov test add std mov out jge xchg pop add sbb pop test and lods in out jmp xchg inc jnp mov inc xchg mov pusha mov mov xlat in mov frstor enter iret dec imul ror inc into repnz addr16 jle dec mov push hlt and cld mov adc dec pop mov lcall movsl inc dec and pop xchg xlat ret fcoml fs sub add jo inc and mov movsb movsb imul push pop aaa leave sbb bound push or (bad) mov or mov push enter dec cltd adc xor mov jb mov ret jns dec cli mov inc dec inc adc and fstpl arpl das test lcall gs ss jl mov inc insl push dec xchg jl sbb insb jg dec mov and or (bad) loop ret rcr andb xor push dec and mov (bad) pop xchg fdivl mov xchg stos dec stos inc xor (bad) and out dec daa mov popa push mov mov inc mov jge insl adc inc inc dec xchg push inc jo in decb push (bad) leave push mov pop nop mov imul nop jno adc ljmp call cmp (bad) cmp xchg sbb xchg cmpsb jb test cmp movsb cmp cmp or or iret xor movsb repnz mov or mov xchg and out push (bad) push xchg lock or mov bound fwait std xchg stos cltd push ficom test lds add or into xchg test faddp loopne je xchg pop repz inc mov lock arpl loopne pop stos std push in and aas clc pop test inc jl movsb lret mov sub inc mov repz mov bound je cmpsl (bad) push out xor add int subb or xchg or or arpl xor lret cwtl rcrb loope enter fwait or es mov insb pop aad jecxz repnz out loop imul mov mov pop in fbstp add push mov push add lahf movsb cmp (bad) jnp movsl fstpl add into push iret pop sbb jmp push lret rcr push aam lock inc mov lods inc (bad) in subl mov inc test mov (bad) lods xchg push xor xchg ficom sbb das sub dec push jg and rcr das cmp mov dec jmp inc xchg (bad) repz dec mov jg ss (bad) sbb das ret sarl push ficom sti and adc and pop incb test xchg (bad) jbe xor sbb cmp xchg mov das test pop lret fwait ja ret and jae mov add xor jmp pop sahf roll inc adc ja (bad) jl mov add jne push jp inc sub and (bad) jno inc or rorl fs arpl mov mov cwtl lret mov or in adc test mov test fcomps jnp sub inc hlt jns frstor add jnp xchg in mov push fiadd wbinvd cwtl cmp pop jbe popa jns jmp sbb std dec jne cs out roll (bad) and dec add xchg mov leave push mov dec cmp fcomps (bad) push mov cmp pop ret int3 xchg jno mov inc push sub pop test (bad) out inc pop je and lret hlt icebp mov xor adc pop add iret inc fcmovb movsb mov push and cmp imul xor sub mov pop aaa (bad) dec insb (bad) repz pop fildl xor xor adc (bad) arpl mov outsl (bad) mov fs mov xchg jp sbb add ror stc f2xm1 push sub adc nop pop in (bad) mov cmp cld lret pop inc mov mov mov pop push mov xchg xor or adc push jecxz fcoml pop rcr flds insb inc dec pop lea (bad) xor xchg ret jmp xchg ss sub lods mov pop inc loopne mov adc cmpsb and add jb mov cmp push push add in mov sbb call test leave arpl (bad) jb fsubr stos int3 or sbb adc andl jbe cmc lret mov xor push roll pop xchg dec or ss add (bad) pop mov stos add add mov movsl leave mov shrb inc add xchg test idivl (bad) mov jbe ja cmp lods leave mov insl (bad) mov mov out dec push (bad) out repz xorl push movsb movsl pop std sbb icebp stc pushf xchg add xlat mov xchg mov mov adc inc movsb outsl mov push jmp adc xchg cltd sbb jb,pt stos sbb insb adc ds out dec cld scas icebp (bad) jp pop les dec and lods mov or or inc xchg push aam and dec call cmp pop cld adc das popf inc insb sbb add outsb push jmp xor push jno sub sbb cmc leave repz ret mov dec into sub imul push ror loop lea pop out mov lret mov jg and cltd out jmp push out cmp mov out inc and mov adc mov add xchg add lcall add adc andl push shrb pop inc sub sbb sahf and mov jge imul pop sub push out pop in jb es and (bad) popf xor xchg pop pop cltd mov js jecxz fcmovnbe cmc fdiv mov jb popa pushl xlat out popf test jmp ret in xor jns (bad) xor out jle pop out xchg sete dec popa js addb aad push push jmp cmp lods add sub xchg cmp aad lods cmp in lds mov gs and js mov mov arpl mov mov ss jns test mov mov push sub iret into pop add (bad) (bad) in test push jg fisubl jnp int int3 inc ja pop fcoml lret add scas sub jae push add (bad) jae dec fidivrl jo jns outsl cmpsb ret fwait ret push cmp out pushf lods mov cmpsl and jb lret dec ljmp lds mov in push mov sahf xchg out lds imul pop test xor xor add leave daa mov adc cmpsb stos jl,pn ja ds dec iret inc (bad) mov int3 dec lds xchg xchg movsl push push mov adc lcall in sub adc mov sub adc pop sbb in lea aam das push xchg sbb xchg icebp in xor or mov xchg mov push fimul mov mov add inc loop mov xor and jle sti mov and cltd test cmp push pop or and push mov inc jmp fldt sti xor scas sub xchg jg pop pushf lods call sahf mov lret loope or add xor xor test or rcr orl stos out xor lock jmp sbb mov and jle out aas xchg mov adc add push mov push arpl nop out pop arpl mov into stos cmp in les jmp cmpsb js ss inc xor mov mov pop into out pop movsb lea mov dec xor popa ljmp mov cmp out imul mov icebp test push push sub (bad) mov xchg cld (bad) popa insl inc mov mov push and jle fs sbb in dec movsl mov (bad) aaa fldl clc cli jl out xor outsl adc pushf lea xor in outsl mov insb test sub jmp sub test push cmp lcall ljmp cmp in lock xchg (bad) xchg js lcall mov add adc sahf (bad) call movsl subb xchg ljmp pusha mov cs fidivrl mov inc jl add addl mov rolb clc push lea and lods data16 or jnp jmp cmp adc ds adc pop in fdecstp mov mov dec push push in inc cmpsl pop mov fistl xor xchg push adc adc cmp aad test pushf jmp mov sbb jno stos cmp (bad) out (bad) lock rcll ja int3 mov xlat adc int fwait data16 call (bad) push mov ljmp jnp inc (bad) mov and or push daa pop sbbb sbb mov xor sahf mov insb outsl inc cld imul lods adc shl mov aaa cmpsb ss mov and xlat push das mov lods pop (bad) loope cld mov xor ds sub lret and mov add xchg orl and push daa les sub cli and (bad) add xchg push in sbb cmc push jbe sub lock pop insb jmp lods aam pop sub jmp mov jl mov cltd hlt sbb rcrb stos sub dec cmp adc clc jo mov push js inc pushf rol arpl ljmp int3 pop loop adc xor popa cmp leave push push inc das test jb lret cld cmp (bad) mov mov xor sahf adc sbb jae mov mov jns icebp scas jg lds cmp jecxz pop imul mov mov outsl cmc gs ja sbb sub jno iret sahf pop or mov (bad) jo movsb subl call hlt mov and shll inc jns pop pop sbb test jne jns pop and cs insl test in or xchg push xchg sbb out pop mov pop xor clc stos mov repz out jge aas cmp xchg shr jmp sbb les arpl inc repz lcall ss cmp test rclb popf cmp scas mov mov pop outsl push xchg shrl mov cmc stc push mov out hlt or mov push ret ret pop icebp mov pusha adc ret iret imul sub push sub fcoms add cmp scas les xchg dec mov pop xchg push jae test mov jnp jo iret hlt adc mov movsb push lcall push pop xchg push fcmovnb push gs loopne jp test mulb sbb mov inc mov inc sbb jg push ret mov mov into adc movsl sti mov fisttp in outsb fisttpll aas or add cld sbb mov add (bad) mov (bad) js ret and jmp xor xor jg mov out push mov mov aam xchg lds pop jge aam fisubrl xchg das mov pop jb int out sahf jl push xorl mov pop inc out bnd iret in mov mov sti xor (bad) jbe pushw inc ud1 mov enter loope add (bad) mov pop sbb loopne push insl cmp sub jns sub mov fucomi cmp mov inc and loop sbb mov push dec dec fcomps cmp jmp lock mov sbb imul clc inc shrl (bad) sbb jns and push xchg jmp addl es sbb jo sub sbb inc mov pop shl lock stos lds rclb mov cmc insb popa lea push and mov data16 aaa les loop mov sbb pop fdivs pop out sbb inc xor cwtl enter arpl pop sub stos movl outsl lahf add add (bad) jbe mov insl xor das push stos mov xor stc jae (bad) in sbb in jo (bad) arpl add xchg das loope loop bound add bound jp xchg ss lahf mov sbb xchg sub mov outsb mov xchg mov xchg into outsb mov jo jmp push repnz movsl push add push testb int xchg shr cmpsb inc leave ss je (bad) std cltd icebp sahf inc mov nop cltd xchg add adc cmc pop xor adc mov test stc arpl dec fiaddl xor aaa (bad) gs negb mov inc push dec popa (bad) je call jle hlt sub dec xor mov cmc outsb jbe fsubrs mov pusha popa push and sbb fmul mov jb jmp jno pop out and or cmc sub insw mov cmp sbb dec xchg fistl mov repz push jne cmp xchg imul nop mov or es push xor jp sub fimull or sub mov lret pop andb and inc mov sbb sbb xor lds add add test pushf xor xor es push mov or dec (bad) dec dec orl adc cmp mov add dec adc xchg mov mov xor inc sbb mov pop or sti outsl inc or test lock dec and push (bad) mov mov pop xchg pop cmp push inc pop xchg xchg push roll adc push and outsb dec adc mov and scas es xchg lcall lcall test adc jg xchg adc dec test leave addr16 in xchg cli movsl mov xor xor cmp aas pop jl sbbl mov adc add ds pop movsb adcl cltd adc movsl push rorb adc fsubrl xor enter add sbb out aaa lret jp aad mov lods rorl cmpl decl flds or inc scas jp adc jbe std jp cmp mov push or push mov push inc xor je add mov lds dec les or xchg (bad) mov fnstcw sbb aad clc mov mov xchg rclb nop and mov inc popa test icebp push and lahf lret jmp mov add pop cmpsl dec jl,pt testb cmp pop dec popa cmp or das jns add mov add adc dec dec fnstcw sbb dec in nop out insl dec sbb add dec xchg xor jne outsl lea pop popa jecxz movsl xor test sub adc (bad) and jp dec dec mov lsl cmpsl inc push and push je sti or fwait lds pop lret and fldt mov repz pop imul inc push xlat xchg roll test gs (bad) mov (bad) arpl lods movntq mov stos mov lcall test (bad) sub arpl ja sbb push fmul int out mov in mov (bad) push push jno (bad) mov lock sahf push sbb mov pop daa mov xchg je mov add xor faddp in jle cmp daa repnz sub cld in push (bad) iret sub (bad) push sub add jl (bad) push insl cli jbe movsl stos mov dec fwait jo push sbb mov mov fs clc hlt test sarl in cmp les mov mov dec das dec sbb inc ret repnz push jno arpl cltd outsb jno,pt int jne pop push mov adcl inc push lea ret mov daa fstpt aaa jmp or (bad) fldenv push test mov or and sbb and mov fildll es push bound jecxz out imul dec mov xlat stos adc adc rol sbb bound cli xor or pushf aas sub jp movsb daa xchg icebp pop jp cmc cltd mov mov jg jle in jp cs sub mov inc nop push xchg lds adc adc mov lret test clc and adc and jg jp xchg cld pushf adc or jae dec stos pop push imul lcall int3 jl rorb cmc out ljmp push adc cwtl sbb push repz dec (bad) sar rcll push (bad) jb add inc ret inc inc scas lret addr16 jp (bad) mov sbb js pusha cmp outsl dec xchg int3 cmp iret push mov pop mov ja (bad) iret daa pop stos jmp cmpsb stos jne sti sub addr16 sti mov mov pop fs cmpsb outsl dec xchg ror imulb adc cwtl jbe jnp xchg or stos std mov movsl fs pop lea insb fidiv sarb js dec (bad) jns adc inc xor out cmp aad sti sub push dec rorl movsb pop push mov mov adc mov add subl xchg movsb movsl (bad) sbb mov push insb inc mov lret fcomps xchg and dec testb (bad) in push (bad) jnp jmp push aaa and pop inc dec lret insb int3 mov sbb test pop mov pop push in ret popf (bad) outsl jge mov int3 xor add push mov pop in push (bad) mov dec mov pusha repz insl (bad) int3 cltd test mov add aas repz push andl dec mov cmp mov and (bad) or pop jg leave inc push aaa push add sub pushf inc cli dec mov lret push push pop dec aam or cltd ss push mov push fnsave add push xchg int jecxz xchg icebp push cltd dec int (bad) ljmp jns mov xor (bad) ljmp arpl push ret lods pop lods xchg jno mov push pop add in call or cmp test fcoml xchg loope adc icebp incb xchg xchg loope mov sti xor mov cmpsl lods lods popf push ss sti or cli adc out jp mov js push test stc pop push popa mov aas cli jl add sub inc (bad) dec aam inc adc jmp aam add sbb jp cwtl lret stos test movsl push scas mov (bad) xor push gs aam push push dec mov pop ss pop xor dec addr16 lods repnz mov push xor ds push mov jno fildl jecxz daa add js sub mov add inc ss aas test inc pop out fdivl roll cmp dec ds or aaa movsb cmp fisub and adcl xor pusha xlat sub push fnsave in jg stc jnp xor ret inc sbb call vpmaxsw inc xor mov xor aaa repz fild sub mov jl adc xchg jmp insl xchg repz hlt (bad) mov repz add call sbb mov mov pop mov pop xor push (bad) dec (bad) mov xlat push inc sti pop imul or cmp sub pop mov imul (bad) xor jge (bad) sbb fstpl (bad) clc sbb jl sub shlb inc xorl sbb jno insl jno out inc xchg repnz pop jns xor fild (bad) (bad) mov mov (bad) hlt hlt xchg push jb fs xlat add scas and jge lret imul inc mov ljmp mov into lods int3 test mov in cmpl jl out cltd out push push ret jo xor jo call stos sti add out or insb es ret into push sub pop aas dec mov pusha inc imul mov sbb xlat lret je pushf cs in push add sbb outsb es pop xchg and jns mov push scas pop xchg pop pop jecxz add dec imul (bad) sbb fsts pop add push cmpsl sub (bad) mov inc pop pop or xchg dec sbb sbb cmp dec ret pop inc or out mov jg adc mov rcll outsb rolb cmpsb inc and (bad) movl mov stc xchg loopne popf cmpl popa cwtl aam fwait (bad) (bad) je push mov dec das cltd (bad) test adc test sbb xchg mov sar sub xor jae (bad) cmp hlt jne mov and dec scas sub mov or inc xor push inc jl in jbe icebp fmuls (bad) clc adc pop sahf pusha sub adc mov jecxz sbb and icebp pop test lds inc push jno xchg jbe jo adcb mov xchg adc rcrb adc mov jmpw clc es out mov or ss icebp cmp xchg mov and sbb mov (bad) insl mov lock ljmp fimul mov lock stc mov jle,pn and xchg lcall outsl mov push shr xchg js push dec jp xor sbb fstps and repz or and pop sub add push daa or xchg rcl cmp xor lret scas (bad) or icebp iret test je dec cmc test adc xor out mov cmc fcomps push mov inc jb js test daa in shrb (bad) push or jmp adc and leave mov lret ss hlt jle shll jge stos xchg xor repnz or lahf dec adc sub orb popa pop adc call out dec test push (bad) lcall sbb jmp clc xchg notb push cmp or movsb hlt adc popa pushf clc sbbl test pop pop enter cmp gs add scas dec ss cmp fs mov push inc imul out loop adc dec mov cli bound stc push rcrl stc mov mov mov fxch pop xchg cld mov movsb xchg fidiv mov popa rcrl (bad) imul pop add jg cmc or shrb and cmp or (bad) mov out imul test sub jns xor lock fistp jle ds ja xchg ret scas gs jp xchg lcall dec (bad) or pop pusha inc and xor jbe rol push gs clc mov cmp (bad) outsb and fldln2 lahf es fimul incb fimull inc das cmp inc cmp cmp cmp lret ljmp jg in jg movsb cltd nop repz xchg xchg std and push lods add xchg (bad) jo roll ljmp dec jecxz and mov fistpll arpl test push add imul fidivl lgs dec add movsb adc sub jae lea inc enter (bad) cltd adc cmpsl rclb movsl and mov or inc bound fldcw loope rorl mov loopne insb dec jp repz scas hlt scas xchg fucomip jns xchg xchg aad dec inc pop xor scas scas xchg jnp fildll inc add push push jecxz std fnstcw jne out (bad) mov sbb push out lea lcall fs xor push daa nop gs add shlb movsb pop mov xor sub outsl and test sub jmp lea lahf sbb sti popa arpl mov nop out cmc mov xchg xor jns and or sub push (bad) sub add jge iret mov dec in jmp (bad) aam sbb sub lret jecxz pop inc jp cmc inc es je in fs (bad) addr16 xchg cmp je xchg js mov pop aaa into lea lds gs add xchg dec leave ljmpw test cmove dec test mov push adc fsubr or cmp or xchg sbb js xchg inc dec adcl mov cwtl ja movsl jl or adc push adc clc mov (bad) shll adc mov test add push sub cltd sarl dec movsl and shrb (bad) ss inc das lock adc roll xchg jl mov outsb lcall xor mov and or arpl das sbb cmp dec push lea mov ja int movsl sub jns push inc and aad and scas ret scas or cs cmpsb js cmp mov mov mov out ret mov xchg imul or test jg mov scas xchg pop cmp sub and rclb int3 push jno pop inc pusha stc enter adc mov lods addb pop out mov xlat (bad) mov dec cmpsl das add mov mov xchg into into daa mov fsubp adc cld testb mov pop fwait das dec xchg add sbb pop cmpsb inc pop out pop cwtl add ds loopne lcall stos cltd jecxz xchg jp pop popf add outsb sbb js mov dec jmp sbb (bad) mov dec sub pop test loopne cmp push mov pop ret sbb jo (bad) arpl and pop repnz mov mov dec adc outsb xor mov repnz dec xchg aaa push jne cld into mov arpl stos rclb fistpl hlt pop shrl (bad) lock pop scas mov pushf inc pop jae pop clc ja scas js pop enter aam pop sub mov out push loope push cmp dec dec pop add dec hlt dec iret leave enter sahf mov lahf loope loope pop add rcrl push adc out mov loope loop xchg into adc push (bad) xor arpl (bad) sahf lds inc push mov push js repnz mov push xor inc insl xchg adc mov cwtl jmp mov pop cmp push ret pop sub test pop push dec xchg imul lahf jne lock cmp ja lcall xchg insb in inc push xchg std clc das add (bad) rolb fstpl push mov and xorl and in lods push in dec clc jle outsl pop adc ds cmp and inc xor pop push mov in (bad) push loop mov fwait mov rclb pop push mov push imul daa inc pop xor leave sbb add push jmp or push sti shl repnz aad xchg lcall push or repz jg and jmp adc pop xor (bad) mov call mov gs push cs sarb cmp xor jae push mov adc xchg iret mov (bad) pop (bad) sub cltd ret push cwtl xor loop,pn ljmp loop xchg je sti push stc into rcrb dec jmp push inc add sub cmpsl mov (bad) or and icebp xor (bad) jle cs fwait je and add movsl fcom or pop cmp fs pop cwtl mov push aad (bad) adcb push test dec (bad) push inc jg fistp cli lret pop dec (bad) pop dec and and xchg leave inc mov roll dec xor or xchg or mov ret inc push and jns add inc mov out xchg mov int3 out lock sbb cmp push sub mov (bad) jecxz push xor (bad) and fucom fnop test mov xchg mov adc cwtl jmp pop cwtl (bad) hlt mov loope std mov imul or xchg loopne push dec mov rorb movsb (bad) mov mov mov mov hlt fsincos fistpl cmc ds jmp adc cltd movl cmpsb test (bad) push ret mov lock movsb lret lods bswap jns jecxz push lock xlat cmpsb stos cli addr16 or xchg popf ja cmp hlt test in adc pop xchg push add (bad) adc inc cmpsb lahf hlt out xchg fist xchg mov testb pop and (bad) popa arpl fcomip pop cmc dec push jmp sub ret dec mov add out insb ds and or xchg daa add das mov sti shrl dec jb in xchg xchg xor mov and or push push pushw into cli jo dec stos and je les fldln2 div rcrb add pop mov push repz cmp xor ds movsl lods add mov push dec cmc movsb dec shrb sub push or xchg lret pop jne dec jb jne ljmp adc mov iret jecxz sub ss (bad) (bad) dec and pop mov outsl lock inc outsb xor pop sbb fisttpll mov arpl leave push or jg arpl mov dec in je fdiv rorl mov pop push mov repz ret ret inc (bad) jne or sbb data16 in push jmp mulb push mov jl pop sbb (bad) call repnz cmp sub repz jo or arpl adc add ret pop and arpl jo (bad) insb cmovne aam jp jne lods arpl add lods xlat into mov pop and jno (bad) std (bad) imul mov sahf sbb leave stos fs incb fwait out mov je inc loop call mov sbb or xor mov (bad) lods into ss mov imul in sub pop aam and xchg into jge push out jne (bad) rep in or pop pop out (bad) mov in pop push add testb xlat jbe outsl xchg sub push loope enter inc pop cli xlat xchg ret add pusha shlb push adc jg shll bound out and xchg and imul insb xlat jl clc pushf jmp sub enter addr16 mov inc aas std mov lods add (bad) xchg sbb or (bad) pusha mov mov mov es in sub es sub ret xor popf imul fidivl pop test fistp pop inc mov push dec iret lods rcr lahf icebp jns rorb jl clc lret lret sbb add cmp sbb das test lret icebp dec hlt data16 mov push out and dec add sti jecxz or pop push popf lret (bad) pop sarb push xchg daa aad test mov mov fs mov sbb test mov and lret cmpsl add push (bad) lock loopne sbb repz out add inc mov xchg sti test outsb xchg dec jne orl mov inc dec test pusha cli pop push push addr16 xchg pop mov out xchg or into adc scas sub jbe in scas xchg xchg inc cs lea inc enter fmull std (bad) call imul mov sub nop mov adc dec in push sbb test cld push shrb ss out dec lret jmp iret sbb fldl imul xchg mov or jge pusha lret js or (bad) ret inc out xor jbe xchg mov and ret dec adc (bad) sahf sub scas cmp add mov push ds sar cmp lea fist sub mov addl xchg enter icebp divb ret xor pop and jg xlat lods aam mov (bad) faddp jmp je pop sub sbb sahf jae pop jecxz and push daa sbb xlat (bad) pop ja adc mov push loope pop int3 mov inc mov dec icebp jns imul jp mov mov push div (bad) lock jecxz mov add pop daa or dec adc or test iret push pop repz ss fcmovne cmc fwait cli push xor xchg pop inc pop inc (bad) jo sub and cmp cmp stc inc mov loop stos push xchg push popf std pushf xchg add mov icebp enter add jecxz adc add in ljmp in outsb mov (bad) xor lock (bad) (bad) insl adc lahf lret pop dec xchg mov test pop mov cmp inc hlt or cltd fptan xchg jbe cs lret rolb mov test jmp mov inc cmc inc and xor inc pop fdivp sbb sbb mov nop scas xor jmp jnp in dec pop fcmovu xchg mov push mov jge mov pop xchg xor pop dec movsb imul cltd mov orl dec mov and push hlt mov sub mov xchg testl mov xor mov lahf sub dec orl (bad) xchg lcall mov rolb insl fcmovbe je and mov clc cmpsb iret inc mov xchg insl stc inc push sub xchg mov cmpl pop mov loopne ljmp test mov add (bad) ds aaa pop mov cwtl ret jbe and jns fistl adc aad daa and (bad) sub sbb in repnz mov (bad) mov (bad) mov test mov jo stos rolb mov outsl add sub (bad) pop lret mov scas dec out loope push mov xchg pop inc mov push aaa ljmp pushf popf jmp ds lcall rol or rcl sbb aad jle stos les inc jl lods dec subl pop xchg push rol inc rclb idivl nop push loop lcall aad xor mov ja (bad) cli sub add aam stos scas hlt test or xchg sti dec cs xlat add clc jo mov mov in psubw (bad) cmp (bad) jne inc mov cmp xchg popa xor pop rcrl sahf mov inc xchg int3 or cwtl sub sbb ror shll cmp add gs (bad) lahf scas inc ds jbe sub xor hlt (bad) sub lock (bad) jnp fwait cmp and out sub xchg loope inc inc mov movsl mov xor xchg add testb xchg ljmp cmp cwtl mov cmp rolb sbb jbe sbb mov das add outsb mov loop xor xchg jnp mov mov cld addps hlt roll icebp jo arpl popf pop inc jne mov movsb fcoms mov ljmp push lods xchg pushf sbb aam add out mov leave cmp xor mov int3 ds xchg pop inc aad test outsl inc mov and fisubr or sti jnp xchg adc repz clc out push sub leave sbb sti add cmp sub pop ret inc iret test pop sti jg jmp adc xlat xchg scas leave ficompl sub push pusha mov sahf mov inc jne xor ljmp cmp out inc mov sbb jp cmc mov movsb test movsb sahf push pushf (bad) ja addl jbe mov cwtl sbb js dec insb sbb ret int adc mov movsl sti dec cmp mov add loop jnp xchg jae sbb add fildll stos mov icebp outsb es mov cs add sbbb jne gs lret aad bound mov hlt mov andb push dec je inc inc and daa cmp cld mov push adc (bad) fiadd push sub push push (bad) jmp fwait cmp fsubrl pushl (bad) dec rolb add fwait cmp (bad) xchg fimull fwait sahf outsb inc addr16 mov out sbb lock jle sti psrlw dec mov sub cmpl mov mov sbb in ror (bad) jb lds push cmpsl pop outsb mov inc mov push rolb jle les clc movb pop dec xchg and lock xchg das jno ljmp inc xor pop or push aaa pop add push add imul sbb inc je js adcl mov or cmpsl jp in mov inc sub dec cmp and cs xchg test pop xchg jecxz iret (bad) (bad) call iret (bad) jle fistp xchg cs and aaa mov outsb cltd ja leave inc sub jb and cltd mov fcomp mov stos add outsl ljmp push mov in jmp jmp call (bad) nop lds mov cmp fistl les jl pushf push out cmp enter mov es roll dec dec jne movsb lahf rcrl add ret mov or pushl fstpl mov xor sbb fstpt sbb inc adc inc dec add fs in (bad) data16 inc pop hlt lods lods xor push cmp test lret cmp xor scas rcrb iret or idivb mov adc jp mov xor dec iret lret ret adc pop xlat imul pop pop enter ja jp daa shlb test dec lahf les loope jns stc xchg xor daa push and xchg cwtl enter lods out arpl xor mov fiaddl dec je push gs jne mov into cmc and xor and out jl decb xchg and jecxz outsl leave mov mov ret pushf fsubl movsb xor cmp push cmp jg inc sbb cmp pushf jp out incl or shrb movsl mov add lret adc sbb push cmpsl pop test inc lods repz jge leave dec rorb xchg daa cld jne mov not stos mov or xor test jl cmp stc in mov leave inc mov repnz lret push js and clc repnz mov test dec outsb xchg in insl and jge repnz gs sub push jo testb pop or jp lods jl repnz and fbstp pop adc fmuls sub and sub or mov adc mov xchg ja into div into lea js shr popf fisubrl out mov sbb (bad) mov push cvttps2pi ret imul inc push inc cld push or jp in (bad) jns push lods test dec (bad) imulb dec sbb dec loopne lods movsb xor sub mov mov or mov jp jp xchg insb pop adc cmp jge jno imul dec cmp pop sbb dec cmp loope insb test je adc and adc push push jae cmp xor jl mov sub inc dec stos pop iret mov sub dec dec jmp xor add push mov adc sub add dec xor mov rcl add xchg pop or int (bad) push pushf pop cmp jb mov jae jecxz xchg mov xor jg cld push ja insb cmpsl loop,pt mov or lcall roll dec cs mov fcmovne lcall std pop dec jge (bad) xor mov aas cmp out jo xchg inc push jns add jmp mov adc sbb mov jo mov stos sub mov scas test imul or pop (bad) xor lods mov call lds and inc bound and aaa insl cld cs in fildll (bad) push data16 push int3 cmp push movsb lock sub gs movq rol jge into pushf popa pop ret rcrl jno ss cmp sub pop inc (bad) lock sti aas cmp pop ds pop mov mov lcall mov out into dec lods jmp scas jns adc and ret loop pop fwait jp into mov sbb rcrb add push dec mov add es mul xchg pushf pop mov test jmp or mov pop dec xorl mov fcomps cmp mov test loop lea sub inc pop mov sbb rorl push outsb mov jb scas push fnsave aam push test and movsl shr es or or ds loope fwait test punpckldq lahf and push mov adc fsubr mov xchg cmp cmp (bad) add jmp (bad) mov test pop dec sbb jbe inc mov cmc std pusha mov xchg out jne or mov (bad) jae in cltd jge cli pop jecxz fs add sbb bound int movsb xor cs adc cltd mov adc fisttp mov mov leave jae sub cld mov pop lds (bad) jl sahf xchg les jle rol cs mov iret xchg mov cmp mov (bad) into inc scas pop mov je jmp inc (bad) cmp cmpsl sti mov push aas push pop xchg test adc mov cmpsl dec loop push lcall jg cmovno mov in push push out loop inc and jb sti insl movsb add jns,pt mov movb in pop das pop js dec lea test call outsb push into push push sub mov rcr adc sbb cli and push xchg sub arpl jbe sbb sbb fs jbe dec jnp jo jg dec lea (bad) scas dec mov xor arpl aam stc scas fwait dec mov mov int3 jbe pushf ja stos xchg aaa pop push cmp fsub inc dec imul fcomps addr16 sbb sti dec ss test push push out test mov int3 mov mov add sbbb mov xchg call aaa adc mov sti dec lock mov roll push jl jne fwait dec inc rorb push jae pop repnz scas inc (bad) cmc jbe xor das (bad) or cli cmc enter sub daa and pop jmp mov incb mov in pushf divl imul daa mov adc dec sbbl popa cmp and sahf outsl mov sbb mov out or add adc les mov pop ljmp rcr div stos es xchg or popa sub insl pop int test in addr16 loop push push popf lds imul add popf adc pop fsubs leave pop test push (bad) iret xlat test push mov jmp mov stos jno fcomps adc pop add or dec inc clc add ret pop rolb clc cmpsl jns and jecxz pusha xchg add ja mov mov jbe inc push cmpsl sti data16 cmp jae in xor scas and xchg push mov les cmc aam jmp gs xor div lret inc inc iret push cli loopne mov xor or idivl out push nop fisubr in add lock outsb sbb rol addl mov add jbe or je popf adc jle daa arpl dec test mov (bad) loopne test inc loope or bound fdivl fimull xor or push pop dec outsl or dec push jbe (bad) aad mov ds lea jl stc pop outsl stc pop mov insb pop cmpsl out jo outsl jns pop push xchg jl (bad) dec andb outsl sbbl cwtl (bad) dec adc add pushf dec mov or pusha adc mov iret add push sbb xchg lret sub pop jno mov fnsave pop cmc mov gs pop fnstcw dec (bad) cmc xor cmp insl or mov (bad) xchg or pop roll mov mov out jecxz out sbb push xor pop jb arpl and xchg xor push cmp lret jb cmovs and sub jecxz (bad) pop insb fcompl in das push rolb sahf push adc xchg sti jmp test imul push xorl dec cmc adc push cli inc pop sti mov or (bad) lahf insb sbb mov pop ret scas add adc sub add or test mov mov sbb inc mov xlat mov orl mov dec push pop add imul repnz and cmpsl xchg scas jle xchg xchg fidivr ficom pop mov popf dec push push jbe xchg push mov js sub sbb or and jns in dec out scas fcom sub cwtl test mov loopne inc inc lea cmc lds cmp rcl dec pop cmpl in clc mov xchg mov xchg cmp test jecxz ret (bad) scas mov add jp add lods test popf call loope xor mov cli jae shl fdivp jns enter sbb add or in js xchg xor (bad) xchg mov or pop daa loop jnp mov int leave addr16 sub lcall dec mov jo aad stos ja jnp sbbl push (bad) fucomp sbb xchg paddusb or cmc icebp (bad) in lea mov je sub fldl frstor mov and pop mov ss adc loop lahf test sub test xor push or fstl cmp dec les add cmp fstpl mov clc mov sub dec xor into xor push in inc add in add imul or popa (bad) dec jl push add cmp enter mov adc and (bad) dec cmp pop sub outsl cmp xchg lret push popa ret testb jle or fwait ret lret nop push dec loop iret popa pop cmp dec xchg pop ds leave mov pop int ret pop push addr16 jns and imul add push loope add and stos pop (bad) not mov imul jne push imul mov and imul data16 inc cmp push inc dec inc mov out sar adc addr16 nop out insb cli adcl jl jns xor in or es lret lcall in pop je out dec loope push fsubr sub ljmp jmp arpl pop dec inc aad jo ja sbb and sbb (bad) pop into pop dec mov xor (bad) mulb (bad) repnz int mov test add cmp outsl shlb adc sti (bad) (bad) je push xchg (bad) jge loope sbb loope mov scas rcrl xchg mov pop rclb mov mov and pop and cld mov shrl popa mov mov cmp sbb lods stos cli or out cmp outsl std fninit gs xor ret outsl mov or insb jmp in ret adc inc xor xor adc ret bound mov mov inc hlt imul test inc adc push pop aaa pushfw leave dec dec lods std jle jbe push sub lods stos and or xor xlat xor leave (bad) icebp mov pop out andb push stc int3 bound jne adc xor pusha pop rolb mov sti jno jle out add push add lods push popa cmpsl cmp fiaddl push (bad) cmp rol inc sti sbb std dec sbbl cmpsb dec (bad) ljmp mul shrl sub add sbb jnp sbb stos inc pop pop ds xor inc hlt sub aam aaa popf fcmovb inc pop test xchg (bad) adc dec sti dec mov sarb popf test popa and jno jl xchg faddl in lret (bad) xor and ret decb pop js and bound cld pop xor call adc dec mov pop push inc data16 xor int test test pusha inc mov mov sbb (bad) xor adc aad iret lret and inc cltd jle stos (bad) push pusha cmp add mov repnz leave fdivrp into push test subl pop test pop adc push inc aas in and cmc add aad test push mov and jo lahf push stos jle sbb int3 dec push push lds cmp mov shr into mov fwait js rorl in xchg pusha mov jmp add lods mov pop in cltd cld mov cmpb xchg mov fwait js sahf out xchg push mov fdivrl in and push test xchg jge es add pop mov or gs (bad) addr16 lea pop dec inc in (bad) icebp mov jno push fcmovb ss movsb and (bad) int3 sub xchg jnp fs inc push les or (bad) inc cmp xorl inc (bad) ljmp sbbb push pop mov sbb dec lods les icebp jae orb inc jl push js fidiv add adc loope inc fs fsub xlat arpl sub push or cmp scas or jno push cwtl clc dec pop lea mov mov xchg iret cmc leave lea sahf adc pop and (bad) pop ljmp fildl (bad) pop fs mov mov xchg sbb add ficom iret iret xor fmull fimul test (bad) insb pop xlat aas in icebp sub xorb (bad) icebp push ret rcll mov (bad) sbb jecxz mov aam and lret dec push lret push adc testb mov jmp or ja dec or cmc xchg mov pop add fadds sti addr16 and gs icebp xor add insl xchg subl inc jl xchg in fnop gs shl sbb frstor xchg int scas and sbb ficom arpl test mov lds sub and push cmpsb call pop ret push cmpsl inc sbb pop adc push adc ret mov imul jmp jmp xor je pop in scas jns jg mov adc or dec jl out push jne scas test sbb and mov scas enter fdivrl xchg test adc sub push dec mov sbb add xchg sti sahf repnz nop mov dec add mov or and jge cltd mov and imul das or jae and loope call jns and insl fnstenv daa loope popaw dec and aad daa mov mov sbb pop mov push inc and dec dec cli scas sti das jle ret or or out fidivl loopne lahf dec (bad) jae idivb insb in sbb or dec sarb adc es mov cld repz fs xchg dec push push jmp outsl xchg fidivrl addr16 rorl push fnstsw add pushf int or cmp mov mov cwtl in fwait jl shlb and in mov scas cmp mov inc dec xor push cmp adc pop test jbe (bad) aam (bad) in mov mov mov xor dec adc dec repz and push inc or push (bad) pop add inc mov leave cmp aam into mov stos pop cmpsb cs xor inc add leave mov test push sbb mov adc push aaa (bad) cld or jnp hlt or inc inc inc cmp push add dec pop js mov push pushf stos jns inc insb rorb cmpsl mov dec inc testl test orl jg jns leave add xchg pop orl out adc shll movsb aaa stc ficom nop (bad) ds nop popf sbb aad pop xor jmp push and add push lock dec nop and cmp aam push cli xor pop and jmp sub insb pop scas xlat dec pop int mov div stc idivb mov push xchg rcrl addr16 setnp stos (bad) push jbe push subb fstps push push imul xor adc imul and pop sti xor mov lock std and mov cmp cld jle in xchg mov jmp and fidivl clc jg push in into je or es idivl fwait cmp jbe push cmp outsb aad das pop test iret mov push mov int pop loopne ds jns stc jb std imul sub movsl mov push sub inc lahf cmp or daa add mov cmp pop push adc gs inc jmp (bad) roll stos dec cmp mov mov mov mov dec mov cmp mov mov xor neg inc mov sbb push cs mov in addr16 (bad) jo stc sub cwtl pushf or loop mov sbb xor pop jae sub fwait repz aas rcrl sub sub lahf jle mov pusha inc rol sbb pop fmul data16 jmp mov cwtl pop movsl jp pop add call (bad) push add fisubrl sbb push sub stos movsl fildl jle jnp movsl xorps fnstsw push mov insl in sub push inc leave imul push aad dec inc sub (bad) sbb mov loopne mov std sbb inc push int sub loopne ficompl xor outsb xchg test dec stos xchg push cmp (bad) jb decb shll dec adc shr data16 jo (bad) cmc adcl push (bad) push xchg jp cltd addr16 ja mov lods add cmp outsl and sbb es shrb mov les inc adc es cmc insb int ljmp clc add and xchg pop xchg cli xchg outsb sbb mov jb das xchg push (bad) jg je xchg repz in mov int mov (bad) shrb lock (bad) xor mov or ficoml mov mov pop mov push js sub sub imul sbb push pop add sarb push lock jbe sbb sti sbb in aas test (bad) jnp cmp or and mov imul sbb mov jg xor stos daa sub sub sub sub ljmp dec jo push push out shlb rcl mov xor mov int3 ja cmp mov subl lcall lds push mov ds cmp xchg pop jmp or xor pusha jecxz mov xchg lret ja jl (bad) stos fldl xor cmpsb push mov aas stos dec in pop frstor add cmpsl fnsave push sub int3 ja lret mov or call test loopne or dec in add jno sub loop or pop mov scas pop mov loop adc cmp xchg pop adc xchg and mov and mov jmp mul lcall adc sbb cmpsb or rolb test pop aam sbb imul mov mov sbbl ds inc outsl dec aaa push in movsb xor mov aas and and test jno shl mov and add push add daa xchg dec mov mov or lods imul inc leave lret mov or data16 sarl sbb mov (bad) xchg mov add fbstp cld and lods or xchg mov add fidivr xchg int cmpsl cvtps2pi cmp dec out (bad) out jno cli cs fs stc xchg xor pop cwtl cmpsl (bad) jmp repnz iret popl pop (bad) xlat lret cmp push push stos call sti incl jp add std xor push scas add insl sahf xchg pop sub jno repz stos mov gs mov push pop out inc xor cmp ljmp mov mov andl mov sub pop arpl leavew jge pop outsb mov int3 mov pop pop mov stc cmp adc in pop mov scas out stos icebp sbb nop or das lret lock inc je mov inc outsb in mov es push (bad) push rol lcall (bad) xor cld jne mov cmp xor fidivl cmp hlt mov mov arpl sbb out mov (bad) mov cmp add int inc insl inc stos cmpsl add jg xor add aaa rcrl mov iret mov out sti jo jo xor jl,pn jno in add push push inc (bad) stc mov dec jns cmc and pop xchg xlat pushf cmp loope in push or (bad) lods inc xchg outsl mov test mov mov pop roll flds jle jo mov mov cld mov mov cmp loope mov lcall lods (bad) push xor (bad) push ja out movsl sub cmpsb or and push jge add out jb mov dec insb push adc push divl push push pop lcall dec mov das aam pop fstpl ljmp stos sub ss adc lahf mov cwtl roll (bad) in jbe dec mov xchg insb mov pop jge movsl fiadd in imulb or and sbb mov adc mov mov cld or xor pop mov in push xor cmpsl fs call aad mov outsb cmp inc jne jae (bad) add sub flds add jmp mov mov pop push icebp (bad) call lds mov repnz rcrb mov outsb xchg push or lock les lock in adc loop dec push aam loop mov mov jg clc in ret and popa mov xlat sbb jbe (bad) cld xchg lahf pop out sub push imulb add fistpl pop call je mov mov in pushf test xor and daa xchg sub aad pop ficompl jg (bad) imull jo dec pop cwtl sub inc xchg roll xor jns sti mov pop push test outsb nop sbb and sbb lret (bad) fsubrp pop xchg sbb sbb aam jno mov cmpsb pusha inc sbb push add fwait out out sub repnz pop sbb aas aaa ret push popa mov mov mov cli ret pusha rdmsr leave sbb test daa dec jp jg test or mov jecxz (bad) imul jns add ret leave fcompl fstp mov ret lods add push xchg lret stos dec sub stos cmp xor or sub push adcl insl add sbb mov mov mov shll lahf js pop fwait mov inc pop test mov add lds mov cwtl jmp in insl daa dec mov adc scas popa mov adc lahf call jp sbb repz add jno mov sahf jmp repnz lods inc (bad) jecxz movl fs shl leave imul lock inc into adc fistpll xchg and pop sar lods cmpsb ror xor add sarl add into mov and xor stos jnp xor lret adc shl mov iret push xchg lods dec xchg adcb (bad) jbe lret pop mov jg push loope sub into in lods rcl push notb inc sti test push fistp (bad) pop mov cld push imulb mov mov andb xchg xchg pop lds mov pushf (bad) in sbb addb cmpsl dec sub pop pop jmp xor jne out rcrl xchg ds pop or adc jno fst aas jo pop repnz les cmpsb in lret xchg loope or sbb xchg xchg lds leave dec xlat popf mov sub mov cmp in notl or adc xchg xchg push int sub mov xor cmovno mov sti mov dec inc mov cmpsb ret insb and decb push mov mov cmp and dec addr16 jl shlb insb sti (bad) int push mov (bad) adc dec push lahf neg data16 iret popf adc repz cvtps2pi jp push mulb xor (bad) inc dec ss daa gs push shrb xchg xor jle push cmp jmp cli xchg sub cmp push bound and dec imul push insb xchg and mov inc cmp adc rcl mov inc xchg mov mov lea lret xor adc cwtl jbe in in dec pop je sbb in cld je loope popa pop sahf push cmp jb pop adc lret pop cli jmp repz mov sbb lahf iret cmc cs mov sub sub xchg inc cli cmp imul push mov pop ret xchg rcrl js notl test stos lcall inc addr16 sub sub xadd inc bound es cmp xor adc sti sub in pop mov (bad) jmp xor (bad) pop sbb ljmp out lea lret (bad) scas and fsts cwtl mov loop pop out add mov push lcall sarl mov es mov mov cmpsb push lods test sub mov movsb dec xchg push dec inc dec push dec mov loope lock loop cltd (bad) (bad) lret add xchg mov fcoms test pop lods inc fsubrs push arpl add dec mov inc pop sbb push bound movsl addr16 pop sub jne add mov sub sarb das cmp in dec test xor iret or fidivr mov out enter test or and cmp movb cmp add call inc cmp lahf push cmp mov outsb push sti and leave cmp sti movsb popa int push fwait xchg (bad) jp daa jle jg lcall movb jge xor ficomp sti push (bad) mov xor js mov mov nop sub sbb popf xor in dec pop xchg gs out popa push push js sub xchg pop test rcrl and pop pop rorb mull sub mov sbb xchg scas or push inc divb cwtl scas mov adc (bad) jo out dec mov mov lds lcall sbb cmp stc shlb cmpsb xor hlt mov les and mov cmpsl jmp sub (bad) mov push mov mov xchg subl xor arpl insl mov test push inc pop test imul mov jne out dec adc add mov and pop cmpsl sub dec inc xchg imul stos fcmovne push jge push out inc jmp lret ret (bad) loopne call (bad) xor dec inc adc mov adc bound jge fdivp jp rcrl test (bad) hlt dec jo movsb cmp jg and add push inc mov push adc fisub aas dec test lret mov and fs xor sarl fs sub fs ret sub out rep lret in lds lock pop mov adc jmp or mov push adc in ljmp and push inc mov pop add push popa xchg add xchg aaa sub cmp or xchg bound test pop addr16 mov and xor bound pminub out aam add cmpsb inc sti mov stos mov mov push insl daa pop cli or xor test jnp inc popl jecxz cli push or lock pusha cli mov leave (bad) lods dec cli and mov xchg push movsb js je and test xchg jnp or mov sub imul xlat xchg lcall pop stos fcmovnbe mov ret pop and fmul popf push mov mov insb mov sub pop dec pop (bad) jp add daa push (bad) jl ss (bad) aad sbb dec or jg cmpsb jmp into xor xorb cmp push xchg pop das out bound fisubr sarl test inc mov negl popf cltd add sbb mov cmp push or incl (bad) pop outsb gs sbb jae jne fcomps das jp adc mov and add mov or sub mov adc ds sub outsb movsl mov shlb (bad) sbb adc les xchg repnz cmpsb arpl outsb clc mov xchg scas imul enter pop icebp cld push js dec mov nop divl roll pop add cld psubsw push ljmp add (bad) ret sar js dec cmc ljmp cmc xor push pop cmc dec add fdivrs arpl dec imul dec jl outsb mov ret (bad) call sub mov jns out lods pusha into pop inc or push stc push jo cmp (bad) mov xor mov popa test push bnd aas subb shl jns (bad) mov inc pop push scas je xchg pop and and sti pop dec out fwait or (bad) jno lahf cs ljmp push cmpsb mov or nop mov jno (bad) lea mov aaa xchg mov aad push (bad) jl (bad) int3 push mov inc ljmp cmp int adc xchg mov out dec mov loop rclb xlat jns out ja jmpw sub jge adc jbe fadd pop fcompl outsb (bad) outsl jle stos pop xchg xor pop enter (bad) lock and cs mov pop ret push lcall dec sbb jp imul dec dec and lods mov jmp in inc (bad) mov sub mov xorl cltd lret mov jb xchg sub leave loopne xor pop roll push adc cs (bad) out daa fwait cld ret gs jl push test adc dec jae push fcomps jmp js negl mov (bad) mov mov bound sbb fdivrp stos xchg push or adc mov sti fmull outsb cs jmp fist sbb rorb aaa arpl pop lock mov scas pop push mov mov das stc lahf xchg fsin xor jl test ret mov addr16 mov sub add (bad) das xchg fwait mov iret incl sub cwtl (bad) sub ret mov mov push sbb cmp xchg jecxz daa push fstpt push pop enter ret or cmpb (bad) out pop out gs bound imul pop cmc sub test cmp sbb lods xor mov push iret and pop test xchg or push (bad) xchg das mov pusha pop hlt js fidiv push mov fidiv cmp nop (bad) fstpt pusha xchg daa and fsts sahf xchg push dec js (bad) jb (bad) leave je (bad) mov xchg jne jo pop das into add out testl dec cwtl out das inc shll sub (bad) shrl test mov xchg loopne xchg dec mov mov in pushf sbb inc add stos insl lcall mov pop out into cltd sub repz mov and cmc jl dec movsl std mov mov leave je cwtl sbb pop int ss sar dec cmpsb dec daa lcall in cmc outsl (bad) sub movl push rclb inc jno je stc (bad) fcom inc push pop sub ljmp sbb mov call jbe jle clc inc sub pop nop lahf pop add dec ss gs jo test inc mov mov rorb repz sbb xor jnp icebp aaa and pop out dec repz xor or bound ds ficom gs cmpsl xor in mov call add add push mov (bad) repnz lock (bad) or dec sbb es xor cmp fisubr and xlat (bad) pop iret cmpsw fstps cmpsl mov lret jns pop push mov and mov adc xlat jne aad inc leave jnp data16 cmpsb nop out ret cmp inc popa (bad) cmpsb pop mov test xchg xchg or lock inc xorl mov dec inc lods xor mov push mov mov (bad) jnp or aam lea sub ljmp mov cmp movsl pop imul aaa jl push test (bad) arpl xor rcl mov mov jb loopne jno out adc mov stc mov push xchg push das mov stc test cmp mov mov fs test js adc dec (bad) xor cmp out mov imul mov dec pop loopne and loop fisubl sub xor xchg dec fwait dec cmpl pop (bad) aas push cli mov clc or jecxz jg mov movl fninit push and int3 out dec adc in cmpsl sub pop or mov cmp fild (bad) (bad) or mov push mov dec jbe add insb jne aam icebp dec xchg add idivb xor or cmpsl mov sbb and mov pop ss xor cmpsl fs cli fistpl add add ss dec iret xchg inc sahf mov xor push enter mov dec jmp cltd push repz push insb inc or leave stos pop inc xor int test dec cs fiaddl push jo ret push add inc into shrb dec fwait outsb (bad) loopne inc imul xor mov push lret (bad) leave pop loope sbbl jge push outsb popl lock pop les cmc in cld mov fstp mov out pop mov outsb xchg mov fstpl pop xchg mov pop out push ljmp add jmp push les ficom repnz adc jle push ljmp ss fdivl (bad) lods xor dec pusha add lcall pop ja cmp push pop xchg push lods loopne dec mov repnz loop jbe jp fmulp jmp dec adc pop icebp push sbb rcll test mov outsb fxch les push xor pop pop adc mov inc test fisttpl sub push lods inc cltd jl cltd inc (bad) popf (bad) lock dec shrb or pop out clc or leave and push lock mov jns nop jns cld mov rcrb and mov jge out inc shrl outsb cmp cmc xor dec xor orl mov xor jp aas add mov ret adc repnz shr es scas hlt or out xchg in add mov jp push xchg mov js (bad) std shl lcall sti cmp shl out or in jg jmp push cmp cmp movsl loope pusha in sub jnp ljmp sub cltd cmp xor fisttpll fistp lods cwtl jae push pop push jle das in outsl mov mov fcomps or xor adc test and add inc or pop stos mov mov pop mov push jo and (bad) in repz inc dec ljmp rorb call sbb xlat sub movlps pop sbb mov and inc adc push cmp mov mov dec inc je dec sbb sub jns dec fcomps call dec in sbb mov cmp sbb or cltd iret cltd adc imul and push outsl cmp int xor jb movsb (bad) int3 and loope pop int push mov mov loopne cmpsb fs into out aas popa stos mov cmpsl loope pop out add mov mov out mov sahf cld or add or adc mov pushf aam inc jecxz jno sbb pusha sbb inc mov xor xor xlat jmp psllw and mov fsubl dec and mov jmp and pusha mov aaa push mov js sti lea scas xlat add es inc jne xchg sbb popf lret fs mov and (bad) sbb lcall movsl pushf test fcompl fdivrs jne push out jae cmc jl mov xchg imul call sti jecxz cmp jle jns ja mov insb mov push dec lcall push shr xlat lock repz iret repz ret and mov dec lret xorl out les xlat insb pop (bad) insl mov test jno fcmove stos lods fcmovne stos and scas xchg jmp imul dec fstps out cmp mov push ja jg mov adc sub xor jmp (bad) dec aad sub ds pop add daa aam aas jne adc inc xchg das lods mov arpl add jae mov xor sbb fmul jns xor enter cmc xchg sub jmp iret fistpl movsl aas and dec push inc mulb (bad) pusha jecxz push pop (bad) xor xchg dec xor cmpsl cltd mov addr16 push mov addl hlt inc sbb fstpt aad mov (bad) repz popf add call sahf loop cmp cmpb inc jns add push inc push inc jl (bad) mov clc push outsb jae roll cwtl fidivr and xchg xchg lock sub mov sub fisttpl mov push lcall xchg inc xchg rorb hlt cwtl sbb inc out stos dec insl mov ja lea mov push rol jmp fisubrl pop outsl fmul insb rorb (bad) int3 mov sbb lret cmp sub clc xchg lock int dec xlat pop test js test repz in mov pop and stc xor or inc xchg jp sbb dec mov mov push sbb mov pop mov xor cmpsb js (bad) sahf clc setno mov push inc popf mov clc sub sub dec pop xchg mov xor pop sub fadds jnp pushf cmpb push cmp mulb cli out frstor fwait xor outsl xchg jo icebp and loopne pop test out js jnp push nop jae enter sub insl pop leave xchg aaa lds mov dec dec jne pop or jp cli aas addr16 repz xchg add mov xor dec repz sub aad inc jb in gs insl fist jge push lods and push dec push push enter xchg xorl test mov insb pop out ret jns mov pop mov adcl insl mov in repnz popa xchg sbb or push pop arpl js nop adc mov fsubl insb push icebp jp mov or xchg insb push test mov jp jg pop iret cwtl cmc sub aam (bad) xor push daa (bad) sti int3 add insl fucomi lcall mov ret ret lret pop mov mov and and lods hlt mov lock cwtl mov clc (bad) cmp andl sbb inc adc inc mov mov cmp xlat sbb scas add pop fbld xchg adc out insb add and jno sub iret mov inc sub jg rcrl insb (bad) pushf or jnp sbb push push jge nop xchg xchg inc mov scas xor push adc and push leave jbe jbe pop push jae aam inc lock fimul jge lods hlt and fcmovnbe repz adc out cmpsb add ds add adc je addr16 mov xchg jb jno out cmpsb cmp call push adc int rcl sbb dec mov or push insl dec add stos jnp push jns mov jb out mov mov movsl mov jmp outsb popf fstl push out inc xchg adc mov cmovne sub sbb fsubl ss adc dec imul pop mov aas mov push fiaddl fs push jl lea add cli add out imul and test sbb adc mov bound inc es leave ret movsb and mov sbb or pop mov sbb cmp lret cmp cmp and cmpsl int inc xchg jg and arpl xchg cmc stc and movl pop add push in pop pop push mov test xadd xchg loopne,pn lods jb lret pusha jo adc test std imul insb or call jbe clc mov pop dec repnz in aad jmp into mov test cmp xchg iret mov outsl imul into stos jg xchg int xchg sbb dec sub aam and scas jmp inc dec cmp les shl xor inc cwtl jmp and into lods or xchg dec test and jle xlat xchg push or push in or or iret imul cmp cld dec xor and stos inc outsb dec xchg sarl test push xchg mov mov push loopne fwait add xor fistpl loop loop inc add ja inc int loopne push pop scas and xor mov les mov dec inc ret pop jl jbe cmc add je cmp xchg jge sbbl pushl (bad) adc push add fwait sbb cmp mov mov in xchg xchg or xchg xchg push pop ds movsl mov and and mov rcll push adcl mov mov nop dec aaa pop in imul jle insl mov jge xchg mov fwait test (bad) jae sbb push clc ss out mov xor dec inc mov mov mov cmc xlat sahf mov xchg scas sub cmpsl je movsb mov sub dec push in mov ficomp enter adc jbe xchg sub in and xchg push sbb bound pop rcll incl mov jl dec out inc repz mov jno mov test pop adc and jne repz inc punpckldq mov adc mov rol sti sbb jecxz fdivr and out jg xchg sbb aaa call inc adc or jnp sbb cmpsl jg mov push xor fnstsw xchg and sbb pop pop mov bound scas movb pop pop pop xchg daa lods xchg in and or jns js (bad) push pop inc inc cli add pop addr16 pop mov xlat lods adc dec inc sub rorl add mov roll scas incl or in movsl push testl or mov mov mov mov jb,pt push mov add mov sahf leave aad dec jl and jo cmc push lock fild and jb push fsubs jecxz fwait call cmp fbstp cmc adc aam cmp jmp xchg out jg xchg xor repz js lret test pusha push pop sub roll stos sbb sbb repnz inc push cmp mov jno gs sub cmc sahf mov mov pushf popa cmc add popf inc ja xchg adc jmp jl (bad) adc pop fs mov sbb pop mov add lods ss xor push push push jbe cs clc or in jp and jb loope ffreep jbe (bad) sarb dec sbb sbb inc push adc lea jg push std js scas pop popf or inc jnp outsb imul and lea xor test (bad) fsubrs pop in mov cmp and sub xchg ret es pushl in cwtl aad mov cli sbb insb incl push lods inc daa sbb stos sbb das loope xchg xchg in pop ret and dec and mov jne xchg pop inc sbb dec mov addr16 stos sbb and pop pop mov dec pop push add pop (bad) int3 xor rorl adcl xchg xor mov repnz jmp sub cmp mov mov pusha lret ret (bad) xor xchg cvtpi2ps dec push fnstenv rorl aam loopne pop mov inc inc pop jg imul jno adc push hlt rol int3 pop adc cmp repnz test sbb rolb jns out push fcmovbe push stc insl adc dec sbb orl pop add sarl xchg push lock xlat xor daa jle cmpsb iret cmp or sbb fisttpl int call daa out xchg ljmp out roll call aam cs cmp inc fmuls cmp cmp sbb adc shlb add adc adc movsl fnsave push sub insl mov lods sub in add movsl ret push xor stos xor pop test mov sub iret (bad) push jle lods repnz fcoml iret scas mov fwait mov aaa or sub (bad) enter clc ret jns xor cmpsb push in mov loopne dec jb insb cmc bound mov in (bad) ja rol xor mov test sub jp mov (bad) or test or (bad) inc xor pop pop repz ror xchg clc push sub pop xchg inc mov adc xchg push jo or mov xchg sub mov lret imul add mov movsl test push inc popf aas mov lret aaa movsb dec (bad) loop pushl (bad) mov rolb mov add add and sub lods (bad) lret stos pop and mov outsb mov adc sbb pop mov mov fwait jle loope adc scas out je into in mov xchg add cmpsl push adc push mov iret rcrl fwait adc mov sub daa mov adc add mov inc jmp stc (bad) jb aad sbb sbb jno jecxz int3 jmp mov jb push mov addr16 pop and pop inc lods or sub pop imul pop inc sbb push (bad) mov push adc ret xchg add popa lods mov enter and in mov xchg pop mov das dec mov call loop jae mov lods std add jecxz mov mov mov jg int movsb out enter leave ss dec les cmp cmp mov inc scas pop add sbb fisttp add cmp jo mov pop dec cmp jecxz flds adc cmpb nop jl jl scas aas (bad) jno jno mov xchg test (bad) push or adc lods mov inc cmp mov imul fistpl sbb je push fstpt mov imul nop xchg (bad) jmp imul or loop loope pop sbb add or out nop test cld lahf (bad) or fisubr cmpsl (bad) dec jmp push push js testb push adc mov mov adc jl or push outsl pop jge dec iret mov lahf sbb lods dec aad jae ss adc mov in call and lods xor lret add add push xor mov outsb sub adc and iret stos test add scas daa xchg ja int push xor mov (bad) jnp lret call stos inc adc sub repz add or or dec mov push (bad) xor in mov mov (bad) mov stos lds stc pushf dec addr16 inc ja jg jmp out out inc (bad) mov ret mov cmp cmpl icebp cmp mul mov inc out push adc fnstenv jne dec mov push loop movaps jbe loope add jle push xchg dec iret cmp pop push lret pusha ficom inc fimull push inc sbb into (bad) or fs ret xchg inc mov lds mov mov jp stc inc cld cmp cs mov scas or les js dec jp rolb je or iret outsb popf add movsl fadd bound je out leave das scas shlb add mov mov popf xorl insb mov icebp jns outsl imul sbbl cmp add adc pop clc push push jge push and adc xchg xor mov lret pop mov (bad) lcall decb xor xchg insb xor and out inc dec es or imul bound mov pushf fist xchg sbb sub imul mov mov test (bad) add lds and dec mov xorl push cld sahf dec enter or mov push xchg out clc movsl mov mov and fbstp enter movsl daa or pop fsubl cwtl jmp and jbe (bad) leave ror flds cmpsb mov leave xchg or lret int3 mov inc andl outsl iret scas xor sbb push xchg sbbb lahf sub fcoml xor mov loope ss test jg ja cltd (bad) xor or mov inc icebp sbb mov mov and fwait dec lret jb jecxz movsb imul test xchg mov imul aas dec xchg (bad) outsb cmp lahf adc inc sub adc iret and popa push loop in fcomi ss incl gs sub xchg (bad) mov popf sahf adc insb aaa add mov nop out out ret push mov (bad) and adc pop pop xchg jecxz clc mov mov xor mov loopne lock jecxz pusha mov inc data16 lds push jg dec cmp and mov inc mov jecxz jo (bad) (bad) sarl mov mov sets popa mov xor testb sub int xor push xchg jbe hlt (bad) sub (bad) mov dec xor xchg sub sbb es (bad) (bad) xor bound in inc addr16 pop call jg insb push or pop inc leave popa stos xchg (bad) and and jmp and (bad) cmpsl nop pushf mov jg lahf push lret mov dec push popa sub jle push scas in cltd sahf add mov sahf add and adc jmp inc lcall icebp or jmp loopne and jae ror and or arpl mov leave adc inc lock (bad) dec fidivl daa shlb stos cmp aas add xchg mov fstl loop hlt pushf xor mov lods or stos roll sbb out stc imul ret lea sarl aaa ret sbb shll repz pop popa jne adc dec nop out push mov xor inc xchg mov push mov nop fsts popf lods nop orb inc xchg cmp cmp sahf (bad) insl push out adc and mov dec repz pusha ret mov arpl out xchg out pop lret test push xorl ror arpl cmp testl sub jmp les lcall bound js pop into or pusha dec pop test inc jp stos fs inc mov mov cmp mov stos mov push dec lods mov ja gs divl mov jmp into and push lods sub movsb mov ja and xchg mov mov fstpt push or push cmp frstor dec (bad) xlat add pop jp int push cltd scas or into ds iret push xlat adc xor jne jl dec scas adc out jle mov mov push inc movsl xor dec lcall mov inc mov ffree push in add (bad) in mov les scas sbb or adc inc test pushw and pushf mov sub and sbb xor gs mov aas pop dec stos outsl and mov push push movsb mov pop push scas sbb mov into pop and cmp mov or or dec push xchg andl push and ds xchg daa icebp inc aas mov insl jns xlat mov cmpsb test add int3 mov cmp and mov xchg jb,pn test add inc sbb int sub std rcl je lods mov pop mov sbb inc aam xor nop test shrb test in cmp mov les in sbb cmp leave fcmovu popf dec pop cltd jl jns iret jmp sub jnp addr16 mov adc dec pop pop sub (bad) mov or aad mov sbb sbb loope movsb or stos stc (bad) fisubrl out aas sub test dec bound out cmp ss mov jne or dec andb mov cwtl xor jl popf adc adc mov inc lods fbld fistpll cmpsb leave loopne scas out sub lea add pop pop inc dec adc je mov mov (bad) sub shl arpl cmc mov mov or loope lock cld lahf adc jg je in imul (bad) push jl pusha cmpsl cwtl es add mov xchg xchg push push loopne (bad) addr16 mov movsl fsubrs sbb or mov push push mov mov adc iret sub mov ljmp push or inc int push (bad) outsb push pop inc and shlb jle ss adc sbb test mov inc push and das cwtl pop xor fnstsw into pop add mov pushl (bad) lods enter pop mov pop (bad) call in rorl jmp push daa mov add bound cvtps2pd in jecxz mov jnp sub jg imul push (bad) (bad) (bad) xchg (bad) add mov sarl cld scas sbb xchg adc cltd xor cs sbb inc add inc (bad) idivl mov sub mov dec adc stos add jg inc hlt or sub repnz enter (bad) push outsb (bad) ss push adc sbb in push and add enter mov test mov mulb sub inc jb ret cltd popl dec pushf jl imul mov push js (bad) fsubl dec push notl jmp lds sbb aas sbb outsl sub or incl xor or arpl jno (bad) mul jp iret insb ss sbb jnp jnp push or add nop sub scas pop sti mov jmp repz pop sub ret adc les add add aam jg xor ja fnstsw dec ss jae in rcll and and and mov and repz jmp adc cmp mov push push push out and inc ljmp jl cmp pop outsb and test subl insb push push mov movsl icebp add or inc stos popf (bad) addr16 cmp xchg mov js cli mov jo sub xor jecxz adc call xor jl pop nop ja mov das js sub out sti xchg int3 lock mov pop push or loope or push outsl loop subl mov stc in xor int dec cmp push jg (bad) cmc fs outsl ds sub in dec ret inc int inc jmp hlt xchg (bad) pop and orl jp imul jb or shll xor push inc sbb xchg inc sub xorb lahf dec lret mov cs clc nop cmc (bad) jecxz xchg jo jns movsb int3 popf into sub das cmp test xchg adc sbb lret sahf roll xor mov jp ret testb jle or push pop inc mov mov inc hlt cld sbb pop fstps lea inc cmp dec repz mov in out loop fs leave insl lret sbb dec sbb sub ret xchg aad or adc mov repz ja jge or cmp jl cmc clc jb adc mov sub pop jp frstor (bad) sbb xlat lds fdivp in push mov loop aam sub nop push adc insb movsb jmp pop jecxz into cmp dec jle and inc mov or (bad) lret (bad) iret movsl xor outsb dec sub and fnop pop dec outsl nop (bad) sarl pop and aas sub jl cmpsl cmp ja inc dec loopne sbb rolb into (bad) das xor push test pushf outsb push push cmpl out aad jg in push jl out sbb mov into outsb xchg or arpl sarl xchg xor test cmp outsl dec push sarl lahf pusha roll mov dec fidivr jmp cmp inc shrl xchg movsb outsl stos (bad) jbe lods mov sub int adc ja scas xor and imul dec es dec and xchg mov inc cmp jne sbb cmp mov dec notl and jge xor xor out or out inc sub cmp mov fildll call pop jmp stc (bad) mov add or js les in mov je inc mov test add xor push pop pop sahf les outsl popa or pop pop xchg xchg call int push inc or gs mov iret mov insl add mov pushf jae sahf ja jb (bad) (bad) cmp or inc arpl add push dec pop jmp dec and in push add cmp mov call fnsave loop dec mov jbe mov push cmp pop add icebp rorl into aaa cmp mov dec repz cld sub mov adc fisubrl sub inc mov scas jecxz adc jecxz les fiaddl test jne add clc jecxz jbe repnz adc test cmp dec lret inc shll lret jb dec leave xor add es je or sub notl jo std lea inc imul lahf add sbb mov loope cmp dec push movsb gs test or repz clc in divl stos jmp lret mov cmp xor adc rol mov test ljmp outsl aaa and js adcl adc push call xor push pop cmp and negl iret insl cmp sti jg add pop push mov xchg cmp js add popf push stc out arpl pop adc mov push sbb mov shrb (bad) repz and cmc sub aad gs or scas dec loop rcrb rorl (bad) mov add cmc in mov dec sti icebp nop (bad) addl dec pusha push arpl sub aam fimull dec xor inc add int (bad) mov lds popf inc aaa out popf adc loopne hlt cmp loopne mov dec jo in das sub lea dec jno cmp fidivrl sbb aad sahf mov adc call inc cs movsb inc adc xchg cmp mov imul icebp adc sti cmp arpl idiv (bad) sbb stc sbb add (bad) xor les repz push outsl lahf or lods xor and in test sub fdivrl lret out jne std add xchg lcall (bad) push add sbb or mov insl test int3 vsubsd push mov add add sbb and jno jmp jae daa inc lret inc pop (bad) shr mov adc xor test mov repz imul sbb aas mov lods test shrl cmp test sti pushf aad mov cltd loope stc or jmp lods orl pop push addl fs xchg sbb jb pusha fdivrs push sub push adc (bad) push lret bound test sahf mov push adc push xchg stos mov mov push mov xor arpl push xchg (bad) sarl add xor mov sbb popf mov in add (bad) mov mov (bad) mov cmp add pop nop sbb stc (bad) xor movsl js or pop xor aaa in fsubrp jp jb mov sar mov loopne enter lea cwtl (bad) bnd pushw cmp jl rcr aaa xor mov hlt cmp xchg mov pushf sar sub das das xchg cmp fildll push inc insl cmp push fsubrl cmp (bad) xor movsl and mov sar pop ja mov mov stos ja cmp push (bad) sub xchg lcall (bad) hlt fisubrl pop xor aaa daa pop pop or sbb cs lods cmpsb adc cmpsb in sub mov mov sub (bad) js lock gs jge pop xor in idivl call mov shll mov dec push sbb jmp popa (bad) jbe getsec push jl adc fcmovnbe xlat cli ljmp ljmp xchg rcr ja mov int jp clc sbb mov cltd imulb jb pop cld stos push pop ror sub ss cmpsb sbb hlt ds adc cmpsl push xchg adc shl ret out xchg dec (bad) fsts iret mov dec adc out (bad) repz insl repnz push icebp pop jbe,pt (bad) dec popf adc jg fwait inc mov addr16 push movsb loopne push les fsubrs (bad) sbb dec ja and unpckhps hlt sahf mov es sub insl sbb inc ljmp xor movsb les iret popa repnz out std repnz mov xchg loop mov mov mul sti ret fidiv sbb xchg popa pop pop pop into push int sub dec pop lods jle insl (bad) repnz mov scas adc push cli mov sahf dec repz xor lcall loope mov repnz imul movb in sub and push fadds mov repz loope jecxz adc sti lret cwtl lock call and or mov repnz mov pop clc add dec mov fwait shlb mov xchg insb cmp dec and add push int3 pop lods inc ret mov (bad) jbe lret out push jle enter repz les xor jl pop inc loopne clc out sub loop mov xchg mov and cmp test pop push dec das jg dec mov ja mov jp lods adc pop sarl mov rcrl sub inc jo mov jae sbb into mov mov jbe movsb cli (bad) in popfw lock pop lea aam and pop sahf (bad) sahf stos adc test cltd jne jns fs and push call mov fwait (bad) adc add fprem1 fcmovnbe sbb sbb dec and xchg sub pop mov push outsl loopne in mov mov imul movsl cmc ret outsb sahf adc insl mov and stos in dec jno in push sub mov clc sti mov mov fs or scas sti (bad) lret call inc lahf insb fstp pop ja mov adc lcall aaa clc fildll xchg add sbb mov test hlt jmp mov jg (bad) xchg fwait mov and mov and test dec loopne (bad) xlat into cmp cmpsb add adcl movsb cs mov dec out and mov xchg popf sub (bad) shlb repz adc sbb (bad) mulb sbb (bad) lods dec pusha jmp and mov xchg sub or xchg cmp sbb imul xchg mov imul stc ja movsl ss mov fs xchg mov imull lret adc jmp cmp cmpsb ds (bad) (bad) fwait dec push int3 or fistpll lahf pop hlt scas shl mov fisttpl inc test in or dec mov sub mov inc sub adc bound lahf cs pop ds (bad) mov push (bad) idivl jns pop test pop jns jl pop jmp in les or cmp scas pop sbb enter shll push cmpsl int3 xchg ret xor ret aad add xor ss xchg add rcrl lods imul push roll fidivr mov fadds adc mov notb pxor into aam jge mov sbb (bad) stos adc pop dec mov lock mov push sbb or adc mov or jae leave stos mov pop xlat jecxz and sarl push (bad) jae jno mov test pop mov mov jno sahf push pop cmp jbe mov leave ret jl test cmc mull das xchg (bad) sti mov stc cmp mov dec pop ds pop ljmp push lds jle sub arpl inc xchg mov in daa insl sbb pop nop aaa or push test adc xor inc iret shlb test enter andl xchg je push lds pop imul loopne mov loope and or fldl repz mov fnop mov mov mov jp or push jno cmp or idivb adc scas xchg loopne ss lahf sti pop or dec mov int3 inc lods jle ja sti push jns xchg inc and ret xchg (bad) mov add cld push fcmovnu stos cmp das inc mov in scas mov dec fs adc jl push jns or icebp repnz repnz lret ss add adc cmp js mov adc xchg addr16 cld sub pop jbe sbb cmpsl iret jge add scas mov add repnz loop adc popf aam or dec mov fwait cmp aas mov cmpsb mov pusha popf xorl push push repnz lret (bad) cs mov push dec pop sti mov dec push xchg sub sti cmpsl pusha jo inc jge xchg mov jne jb insb and xchg popf repz jmp jge mov pop aam icebp roll sbb cmp add xchg in xor out sub lret and inc xor mov lods and lods dec ret iret cmpl mov mov loopne aas jo shrb loope imul lds add movsb mov or push push (bad) or mov sub jno dec pop dec sbb imul aad stos xchg jecxz cmc adc loop arpl or dec or (bad) pop mov sub test (bad) scas push dec adc out push jp movsl cmpsl add dec jp decl dec (bad) cwtl int mov mov mov mov ja push jp xchg adc mov sahf pop cmp mov xchg loope popf add and xor repz dec sub jecxz lods enter or mov dec jl mov cltd mov adc push loop loope pavgb push adc bound adc out mov enter or fwait mov xchg adc add enter adc jge cmp mov (bad) jns stc stos rolb jg std xchg add and hlt scas stos and pop xchg mov mov fisubr aam fistpll xchg mov (bad) push and or cmpsb outsb jmp ss mov push ds mov pop mov mov pop jg mov sbb push mov xchg push data16 mov ja mov (bad) imul mov (bad) repz scas xor inc add sbb and fwait mull negl xchg dec or xor mov adc xor inc adc inc sbb jnp dec mov adc inc dec ret push xor std das or sbb inc jecxz inc jne ret aas in rorb repnz dec fsubrs and pop mov cmp nop fadds lahf cmp and ret dec aas or cmp scas imul lods and jmp ljmp fbld sahf or push adc jnp out mov cmp jne ficoml jl rorb (bad) rcrb loop insl bound addl cmc nop mov sub pop push mov iret dec mov daa neg aas addl cmp dec es pushl or jne clc pop sti push sbb dec bound popl fsubrl inc mov int3 lahf mov mov cmp fwait pop add js inc mov pop outsw arpl cmpsl mov mov inc sub lock shrl cmp jns (bad) dec in cs fidivl xor les sub shrb inc lret mov enter cmp and (bad) bnd dec lret xlat mov inc (bad) xor aas sub sub or nopl iret adc insb add push enter or js out xlat (bad) addr16 jne sub (bad) mov addr16 je lods mov enter sbb push add or or out fincstp jb in divb fimul pop pop rolb push dec mov in add mov out pop and js out and dec repz mov pop jmp add fbld inc rol mov sahf jae mov push xchg add inc inc sub fdivs xchg popf jb or cmp imul imul inc nop sub out int push das pop fcoml or add sti push jle xor pop mov adc scas inc pusha adcw aad push sbbb cmp mov xchg xlat das mov js cmc xor (bad) popa stos fisubr adc mov imul arpl orb js call imul push sbb (bad) adc fld sbb stc scas pop out sbb (bad) mov movsl shl mov daa jle stos and dec adc movsl aam jl xor stc hlt mov cmp sti mov inc or loop jle loopne jnp bound mov mov shr (bad) mov mov dec and test out xor push orl mov mov push add in and outsl repnz inc sbb fsub cmpl orl sbb mov andl imul icebp sub sbb inc int3 adc addb scas roll jg repz leave std lds pop xchg daa or dec test jp (bad) fdivl into push cmp lret mull ss push mov push (bad) push xchg lahf test fwait cwtl movsb fmull cwtl stc aam push cmp cmp pop int mov cmp sub xchg push jmp pop mov imul push cld mov dec (bad) (bad) pop in push pop das sbb inc int3 loope cmpsb ss (bad) loope das movsl lods jmp cld jbe xlat mov jns jae xchg and jbe rolb mov lret cwtl test in stos dec dec jae cmpsb push (bad) popa cmp sar inc push xchg push popa adc or push adc outsb iret addr16 cli test and add fdivl inc mov inc xchg fldl movsl stos ret imul add stos (bad) inc jmp add jno fist in test test ret sbb js js pop sahf xchg xchg jecxz dec sbb jecxz in aam sub insb jno push push je cltd fsubs enter xchg ror setg ret fildl sub pushl sbb mov inc movsb mov dec lcall (bad) jge or xchg fucom pop cmpsl sbb dec jnp sbb stos and outsl mov scas xchg and test lods sarl jl sub dec inc xchg call inc ja enter clc icebp jae and or and cmp dec xchg push repz push in imul mov (bad) call jns mov mov nop hlt inc lret arpl divb aad pop jns iret lcall or dec cmpsb push fdiv dec shll fldl cmp aaa pop sbb inc pop mov and incb leave mov add (bad) jbe fwait pop ficompl mov adc scas jp test dec xchg les mov xor scas pop popf adc fs (bad) inc adc out mov mov and mov lahf and xchg push jle jge ljmp popf mov sbb insl jne cmc dec inc dec xor xchg xor dec sub icebp ljmp repz pop arpl (bad) mov mov stc jne dec jnp inc inc ficom ss sub cmp mov lcall pop out mov add and xor and cmpsl cli push xor mov sub movsb xlat xor pop lret inc mov flds cmp jp mov adc push lahf xchg xchg cs mov mov repnz stos in pop mov idivl leave or inc jmp int (bad) dec les dec mov push push xchg add scas dec out int xor mov jno xchg push sbb (bad) repnz ret adc rcrb add mov adc jl sbbl dec and in std xchg lods pop (bad) push inc dec cli and add or push xor dec add xchg push (bad) mov add stos dec loope push fistp lds es mov push out and xchg add pop sarl cwtl inc mov std mov xlat cmpsb ljmp adc in inc scas imul xor ss out dec fnstcw ss mov sbb popf aas scas cmp mov lahf sub (bad) xor sbb outsl hlt jnp pop test mov or add xor inc inc jg cmp sahf pop rolb inc pusha jne insl mov mov mov outsb jecxz xor pop cwtl mov pop and or (bad) movsb loop cmp dec lcall sbb dec inc int3 mov and jp icebp sbb movsb xchg (bad) push add mov add mov movsl cmp mov and cs (bad) stos xor push xor cmc sub pushf lret hlt adc fwait dec mov jbe add add xchg sbb lods pop push mov aam xchg leave mov rcll mov mov out mov dec dec sub hlt inc sbb xor xor sarl adc clc sbb idivl dec push scas jns push sti inc sarb xor pop je sarb dec mov aas aad push or popa inc dec or cmpsl fmul adc xchg loopne test adc mov pop fidiv mov sbb pop nop arpl mov mov sahf stos out adc cmc mov dec shr aad mull sub shr jmp lock mov cmp jno (bad) fwait stc ret repnz add ja fiadd jns ljmp lds aas (bad) push xchg das push and gs jb sub (bad) mov or mov mov adc xchg add xor repz inc push push mov pop lret mov int rcrl lcall mov sub ja mov add inc in and pop jl jno push in jno fcomp push push addr16 xor je je adc out sbb push and inc movsl addb xchg add out gs (bad) push and (bad) clc imul lret rcr ret jle push out push data16 xor xchg mov sarl mov out adc data16 mov shrl jl imull dec iret mov mov mov cmp sbb in sahf leave cmp add push push xor rclb mov inc pop mov in stos pop ja push out mov mov lahf mov sbb pop or insl decl pusha rorl mov ja jmp int3 je icebp sbb sbb inc (bad) lock inc xor lds dec loope (bad) push mov push test cmc push pop jb in scas rclb sub hlt mov jno fs (bad) (bad) cmp fldenv inc ljmp mov push xchg inc inc jns adc jl je and push out repz in call sbb lods std cwtl cmp dec pop push inc sahf mov gs popa xchg dec push and jl nop lds lret cld xchg cmpsl jns inc xlat pop xchg arpl fcomip xlat jbe cltd mov pusha std push push push loop jg add sub mov ret ds les cmp jns imul cld xchg test add movsb add inc std jl mov dec lret (bad) push loope lods mov mov xchg push stos xor adc pushf arpl repnz lds cmp insb cs mov lods push mov mov les stos stos sbb add out jns mov push lahf cmpsb icebp sbb jge aaa pop mov pop jne movsl push in arpl sub lret cli mov imul push pop xchg notl or push inc movd iret jno std int3 sahf inc fmull xchg mov push ja cld pop int3 in fbstp (bad) xor arpl out popf inc shrb xchg test (bad) loopne mov (bad) (bad) sbb call test mov and gs xlat mov pop mov js mov dec ss mov jno lock es mov into sub mov and lret cmp stos (bad) int3 js xchg mov ja adc or mov int3 lods mov dec cmp outsb into clc lcall sub fsubs xchg and insl push xchg (bad) data16 into aam lret pop ljmp jmp sub jge mov clc neg (bad) sub push cvttps2pi mov scas data16 mov lea jo and fs aas icebp mov inc jb inc mov ljmp jg push popf aam jbe jecxz push mov mov xchg push mov jae gs or call aas mov lret (bad) loope jae fidivr decb ja movsb test fisttpll mov cs rcrb mov jmp sbb jp push pop out icebp and sbb jae out gs inc roll stos mov dec stc test or xor xchg jl dec in push adc xchg test cltd ljmp fadd or clc outsl push lcall pop inc imulb inc push mov ja xchg stos out rsqrtps adc scas adc cmovle out cltd bound mov loop dec add inc sub xlat mov cmp outsb les xor xor stos in adc or je mov pop addl (bad) jmp lcall mov jl out pop or mov mov pushl cmp xor xchg orb addr16 xchg aam loope jno and pusha mov sbb cmp xor xor repz aas cmp addr16 shl ja sbbl jns cmp cli xor cmpsb out dec stos push (bad) mov sub (bad) mov fiaddl mov push std aaa jb aam lret inc cltd xor xchg and popf inc out lods dec stc xlat mov popa jne aad cmc int3 clc mov popa jg rolb add push mov jg fsubrs cmc out inc mov shrl lret testl fmul in pusha dec enter sbb loope (bad) call mov mov mov lea mov ds cmp mov jge or inc or or in sbb repz (bad) enter inc xchg cmpsb cmp pop dec inc xor jg jp xchg ret (bad) lret mov push (bad) xor hlt jne cmp (bad) shrb mov test and test pop sbb les push clc lahf adc and xchg mov fdivrl or and (bad) and jge ss jne,pn sbb jo ss xor mov adc out in jnp sbb push aaa fs sub sbb insb arpl loope and mov sub dec nop in imul or jmp repnz mov push (bad) xor mov push xchg adc push pop mov push xor inc les push mov adc sbb adc adc pop jnp fldenv mov mov pop es xchg add push jmp daa push movsl adc js mov repnz es mov ja or push add adc je cmp mov int mov or shll repz cs xor and ja (bad) inc aaa sbb ficompl loopne popf in xchg push into sub cmpsb pop or repnz andl sub (bad) divb dec sahf repz mov xchg repz jns call mov ret inc (bad) stc push insl jge in or jmp out sbb addr16 mov inc mov mov push mov cmp pop sub rclb ljmp pusha inc adc mov dec push ret js insb mov (bad) ljmp das inc int3 in fisttp push pushf push popa push mov cmp jne push add pop cmp iret movsb mov rorl mov mov pop test jne jo sbb sub lea dec stos adc mov outsb push lods stc cmpl mov jne jo sahf std or mov andl loopne fwait (bad) pxor in cs jno cmpsb fldcw aam rol ds dec getsec scas inc movsl inc inc movsl cmp xor ss and int3 push adc mov insb insb xor jl inc cltd or loopne adc daa cmp pop je gs stc out in sub test enter mov push in sub dec cmpsb frstor dec adc push mov mov fisubr arpl lret je jmp and insl pop into xchg icebp loope outsl push out lret pop jg inc xchg jbe mov jo ficompl adc ficom or cld out out test pop xchg and xchg ljmp mov pop out push jae pop pop jae xchg xor insb mov push xchg movsl out loope lret sbb adc xchg lret imul cmpsb shl scas cmp add pushf xor inc push add mov sti adc pop mov sbb inc lods insl push test push push bound negl adc jecxz mov fcomi in icebp addr16 dec pop xchg fcmovnu rcl adc cwtl stos push enter clc or lret jns es adc shl hlt dec mov pushf gs dec stc or das xchg imul into arpl mov imul inc inc lret (bad) pop ljmp aaa and inc loopne imul or cmp and fdivl rcl arpl loopne rcl ds lea cmp pop fcoml xor popf and fisubr ss shl jno add insl in push cmpsl mov in fnstsw aad mov arpl mov std cmp data16 pop vmulpd pop pop sbb dec xchg fild scas andl xor jp push push sbb gs pusha cwtl mov or and inc and call xor cmp ja pop sbb hlt aaa jp cwtl in lods xchg xchg mov and leave pop mov mov dec cld push sarb adc jbe sub push cmp cmp rcrl ds sbb dec (bad) insb sbb out sbb mov jp adcl sub fadd inc mov aas ss xor ret xchg aaa fwait inc pop sub or aas xlat mov dec xchg lods mov outsl push in outsl dec ret sub sahf loop ret or gs sahf inc xor (bad) (bad) or ret icebp fist (bad) push test mov in and in sub mov xchg cmpsl xor sub cmp mov cmp adc in jae in test popa mov cld fsubrl (bad) iret sbb ret rcll cmpsb add divb stc lahf jge das mov sub into bound mov lods sub adc push lea sub inc mov repnz add incl xchg dec xlat movsb (bad) jo and cmp inc add lea sbb aaa dec xchg cmc jo pop stos arpl ja stos popa call add xor jae stos (bad) das pop fwait lea clc dec (bad) in push rcrb dec call jge or enter xchg push call pop dec pop shll or jb push fdivrs (bad) cmp push dec sub inc ljmp mov iret dec xchg xchg in mov xlat jae cmp movsl mov jns sub mov div push loop xor cmp jp scas mov loopne push cmp add dec out add or ret jl insl cmp insl pop dec insl cs das and mov scas jge adcb hlt in inc gs sub jg fstp dec pop xor aas (bad) aaa popa imul adc pop in inc hlt mov mov push sub xchg pop mov decb mov jge mov mov mov mov fist outsl js js xchg push int3 xchg sub add mov stc call inc inc das popa mov aas in pop ljmp lret mov xchg inc std mov insb mov stc loope rclb outsb aas xchg sbb jne aad lods jmp push adc xlat ljmp fwait xor (bad) sbb ds sbbb mov repnz push pop out add fwait aas inc sub js int3 push xchg aaa in push mov sbb pop lea cwtl dec fdivr mov outsl js cmc pop rolb cmpsb push mov lret adc cmpsl mov in (bad) sub mov mov (bad) lods movsl add popl mul fldt ljmp rcl mov loop mov and cmp xor ss sbb pushf dec jge test adc repnz cmc pushf sub loop push xor pop stos ljmp cmp int sarb or sbb push (bad) jns and ljmp insl push sbb (bad) dec js (bad) pusha mov push shrb int3 pop pop subb (bad) mov jns adc cmpsb lret in and cmp mov mov daa jb aas xor jbe mov cmc mov and aad lock mov cli pop xor or cmp test in jg dec imulb push test pop mov stc pop lahf aas popa xor sub test subb std iret add imul or xchg jp inc xchg cli icebp imul xorb dec jmp test pop mov ja or loopne inc sbb mov adc or xor mov ljmp (bad) ds push ret inc in jb mov iret hlt (bad) pop pop pop add jle sarl hlt in mov bound jo mov cmpsb lret cmp and sub test mov lahf fdivrs sbb or ret (bad) hlt adc jecxz sub outsb leave push mov aas cmpsb cmp pop test divl les in insl pop or jb xchg (bad) test cmp les fsubs pop mov mov test and fisub mov xchg push int fsubs jecxz int int movsl xchg push sub jmp inc or jecxz dec or push xrelease enter int3 jae pop stos in jb or jno ss inc fnsave dec dec adc mov sbb jnp sbb sub xchg (bad) ret cld add mov ds dec dec inc (bad) rcl cltd sub repz movsb addr16 adc daa cld xchg cmp adc adc out test jecxz dec pop cmp pop mov arpl shl dec cwtl fs mov orl jae iret mov or insb push mov jnp aas data16 sub add mov add mov movsl lea adc mov jnp cmp fstl xchg cmpsl in or mov inc adc fucom clc pop mov stos mov out pop lahf shrb inc sahf or int lret popf insl out xchg and leave inc adc les mov pop sub int3 int3 or inc lock pop aas cli xchg fldl pop inc inc into lods nop fildl test mov jbe mov mov pop jp lret push imul pop xchg (bad) popa call fs add ret cmp loope and lds cmp test add imul rcll or ret arpl cmp data16 (bad) into mov sbb mov xor xlat jae dec cs ja lds ljmp fsubrl mov pcmpgtd push pop xchg mov or adc pop pushf dec imul stc decl xor cwtl cmc inc fistl adc cmp pop int3 jne insl push and pop xchg xor pushf icebp or adc dec inc (bad) je cmp push or std sub or fwait pop push push cmp pushf es mov fmull movsb in mov pusha outsb jecxz xor arpl cmpsb subb push sbb mov inc xchg insb jno adc (bad) pusha sbb pushf mov stos divl adc push push (bad) dec push and cmp mov dec pop sub ret andl add sub (bad) mov scas xchg inc inc push stos pop jg xor adc cli dec dec les sahf out cmp aaa imul dec shll (bad) pop inc mov out insl jno das es icebp adc imul or loopne pop cwtl imul pop mov mov js (bad) es loopne out cmpsl sti subl mov sub sub sbb or out in iret sahf rcll out data16 scas mov sbb mov movsb push into rorb pushf push lds outsl and or enter lret sbb loopne adc sub cli fstp test mov mov add xlat inc movsl xor xor mov pushf stos lretw adc fidivl cmp sbb mov mov test add xchg lahf mov pop stos mov lock pop call mov dec or fwait mov jae aam adc xchg mov mov lcall arpl repnz in xchg xchg or xor sub push (bad) lret cmc dec pop test stos adc test xchg (bad) add inc or sbb imul cli dec icebp rcrb mov add scas xchg inc jno (bad) cli (bad) mov insb pop push or dec cmp xchg rol push je movsl andl cmp or jmp jb insl xchg sub mov fdivrs pop pop or pushf xchg clc inc pop fbld dec pop fstl cmp test jno dec jmp pop mov push fcmovnu mov loopne into fidivl cltd adc ds pushf sub mov or arpl inc loop mov lcall push sahf inc inc rdmsr cmpsl dec mov adc jge or add dec jge add loope insl lahf mov push xchg (bad) fucom xchg insl jp popa fisttpl fidivl mov push fdivl or pop (bad) dec fildl ret jbe js das and mov movsl inc mov insl scas xorb xchg pop (bad) xchg (bad) icebp pusha xchg mov and dec cli mov pushf pushf fsts (bad) arpl jno ljmp push rcrl pop and jo in xor adc aas add arpl push dec xchg and (bad) in jg jge scas xor mov sub cli mov out cli dec mov push add add or dec addr16 and xor pop (bad) sub out movsl pop int3 fnop pop or mov mov rcrl xlat add mov dec int3 mov cli outsl pop test mov pushf jge nop mov cmp adc xchg (bad) push dec push cmp jge jle mov orb adc loop sub push cmp and sub jmp dec jno insl add sub aaa es fs addr16 xor test data16 scas or add mov pushf mov xor rcrb pop movsb jp or dec pop inc sub ljmp outsl sub lret clc push into cmp jecxz in jb into iret or call sub sbb dec aad imul test push lret pop xor scas cwtl shll pop je mov or jno cmp scas aaa (bad) inc jmp inc sbb pop fwait mov loop and popf repnz stos fidivrl inc insl mov pushf fimull das sbb (bad) inc mov daa push insl stos push or imul aas out iret pop push arpl call mov cmp xor out pop outsl lods pop std dec sbb (bad) in fiaddl lods mov dec jecxz out out cmp lock mov aad add push mov dec daa dec pop or add and dec lret iret sti dec cmp aaa out xor sahf inc (bad) cmc mov cmp mov or cmp aam cli rol repz aam mov mov xor push (bad) push clc mov pushw aad add add arpl imul mov lds mov mov arpl pop stos stos push xchg je out popf dec mov mov repz cmpsb and aaa dec pop xchg push or cmp notl jo arpl and sti pop (bad) in sahf roll sbb lahf scas lcall mov xchg mov cld popa into daa into push mov lods jp aaa inc cmp inc sbb stos iret test sub and push pop xchg fnstcw cmp xchg fnstsw sub xchg add addr16 aaa bound (bad) (bad) or and imul pop mov cmp movsl (bad) mov jge jmp (bad) dec or call (bad) imull loope mov jnp xchg mov movsl call pop outsl inc xor mov mov fwait cltd inc mov cwtl xchg mov into jge add sbb scas fs test adc and xor mov call xlat sbb push mov mov pushf push test (bad) mov mov push fstl fwait cmp xchg ret lock pop sub in mov cmp pop cwtl pop jns pop sti arpl cmpsl xchg mov stos lds pushf xor add fldl jns insb and fwait mov cltd int3 movsl pop inc (bad) lret repz dec imul ja or rcrb leave cmp jnp push jae aad lods inc mov icebp xor jne mov push orl pop idivl dec mov (bad) xor push inc jg iret push sub and cmp mov xchg mov add mov mov divb cmp das icebp mov add or lret loop fnstenv bound adc pop inc or imul out icebp test xorb movsl cwtl xchg and test rorl daa jb pop jmp in mov repnz sub hlt mov (bad) xchg (bad) cli push inc fisubr aas cltd adc add pop mov push jb enter mov movb xor lcall xchg sbb pusha mov dec xchg xchg rolb iret dec cmp incl mov test jne rcr mov into in add mov cwtl ret rcr cmc in imul arpl daa mov shrb dec mov cmp sar fadd sub cmp jl pop rolb pop leave push cwtl (bad) (bad) movsl jl xor js fcmovu push aas je (bad) fcomi adc mov or loopne mov in jae dec rolb rcr mov dec mov je js cwtl (bad) mov sub cli add jnp lahf xchg cmp loope mov push (bad) mov loope in add pop jle lret add mov cmpsl sbb xrstors cmp les scas add push stos fsubp std std in icebp or xor mov pop mov push in push dec stos stos scas xlat lea add dec iret sahf push aam push pop adc or jbe sub pop pop sub sbb (bad) (bad) xor push pop out cli mov fdivs iret mov cltd inc mov lea xlat int3 cmp movsb cmpsl mov push mov aam dec mov popl sar adc cmpsb subl cwtl lahf loop cmp les iret pop xor mov es mov je jle popf mov jg cltd out iret xor popf xor sbb (bad) mov in test out xor cmc (bad) call out fwait test lods mov repnz jl dec cmpsb lods test or push mov mov and (bad) movsb xlat cmpsb xor aad lods lods int3 jnp movsb mov bound jb out or cmp out pop call stc jg sub xchg lods and add push pop pop sub in in repnz popf cmp test dec ss mov cmpsl repz int3 sub pop daa push incb jbe xchg xchg cmp pop loopne jp movsb ja cmp adc mov sub jmp xor fldcw cwtl test and jp mov push mov cmp xor pop fildl and in jmp movsb pop (bad) iret jge fdivrl cli or inc les in jg inc jg fimul (bad) sub push jbe fsubrl inc inc add and sbb cmp pop stos pusha outsb push imul inc loopne jbe push rorl test inc test js sub cmpsl sub ss cs sub cltd dec push sti dec jp loopne loopne mov into daa fldcw ljmp lock icebp fdivp iret push pop sub das jne cwtl test add xor idivb ds add dec pushf flds mov mov mov andl iret mov jecxz mov cwtl pop mov daa mov out push jne int3 in rorl je test (bad) jne jg or incb fsubrs sub cmp mov ret std push jae (bad) fsubs into xchg cltd dec rcll mov push inc cmp test pop fcos jo or fwait ja out mov ss aaa xchg lods pushf lods ja (bad) out std sub push cmc pusha scas mov fidivl sarl in shlb sbb es add insl lret jo in jbe jl fldt call inc xchg dec mov mov xlat test call mov add neg jmp lods mov or jbe bnd mov fs and jae,pn scas or imul mov sbb and repz scas negl shlb add fsts inc cltd add inc push mov cmp inc xchg js inc and movsb mov inc cvttps2pi jns and xchg dec aad cltd push rclb cld jmp fisubr add mov out pop jae mov stos sbb xchg leave xorl jmp movsb jne mov xchg in lcall and xor popf lds mov xchg push jge sbb cmc cmp loope dec jl or push fistp insb cli xchg les pop pop mov mov mov les roll hlt add or int3 jns (bad) xor (bad) lods sub popf lds in xchg lret into adc out int3 adc add jbe sbb mov es stc dec cld or mov pop leave jb out xorl xchg fcoms xlat push dec jmp or dec lea xchg mov out mov gs dec mov insl lea rep les test jmp out fisttpl stos mov inc dec adc sbb push scas jne pop data16 and mov wrmsr cli and leave fmuls pusha icebp push or cli bound ds movsl sub in ljmp xchg add mov lahf push cmp cmpsl add inc aas push or inc xchg push test inc sbb inc dec shrl mov fs xchg xor aas pop or bound icebp stos sbb clc std or adc inc pop lds jmp jne mull dec fucomi or (bad) (bad) mov add cltd lcall dec and in jmp (bad) rcll and xchg add or ret jecxz mov inc (bad) fildll out push fldt jnp pushf mov mov add mov mov ja inc in push push xor mov int and movsb sarl and lret gs aam sti adc jge cmc xchg push insb test loopne push and cli lcall rolb or cli inc hlt aam xor movsl or ret outsb adc xchg pop sti cltd jnp jb les push loope xchg (bad) lock dec inc outsl lahf push cmovae orl pop lea mov inc pop mov ficompl sub insb mov imul aam cmp aas call jno push lahf out dec push jbe lods fldcw roll in ds sarl out lcall lcall cmp and cmp cmovae jo sub mov sahf mulb and lock mov cmc mov push loopne call sub add mov in test cli popf mov es ss push ss dec ss mov mov mov mov and and in and add push hlt es jmp cwtl pop pop and mov fildl dec sbb rolb (bad) jecxz push sbb mov xchg and xor mov push cmp cltd mov mov sar dec call mov or xor rcrb pop insl insb ret js xchg lds mov imul sbbl lret xchg jecxz mov mov dec xor sbb add int3 shll arpl out cmpsl aam sbb mov mov mov pusha xchg xlat pop hlt cmpb pop aam icebp loope popa lock jp out or cmpl cmp cmpsl std std pop add sahf insl ret or sbbl mov iret fdivr pop jbe movsb stos insw lds inc loope pop popa in pop pop push mov outsl or dec cmpsl mov das sbb enter ret and cmpsb jbe adc fidivl jp das test (bad) inc inc mov (bad) in mov add mov pop xor xor jp rcll adc in push dec mov cmp cltd jae cmp or inc or rdmsr push dec adc xchg and cwtl xchg repnz xchg (bad) pop inc icebp insb int3 dec cmp push dec data16 sbb xlat xchg mov ja mov and jecxz sbb sbb xchg hlt add sub jne mov outsl in push mov pop jne aaa mov mov mov push jge (bad) enter mov scas into lock push lods pop mov xlat arpl (bad) mov sbb mov pop inc cmova and fcompl ljmp ret sbb jne pop xor ret pushf jl jl inc xchg xchg dec dec jne adcl lahf rcrb pop and jnp fsub loopne cmp (bad) (bad) fimull fdivrl lock sbb in stc inc add cli daa call (bad) mov lods dec mov sub movsb or stos fidiv jp adc js mov negb test mov aam rol pushf lock jmpw in ror gs cmpsb mov dec mov mov shrl imul jbe push cmpsl mov jl imulb cmp xor call mov fstps adc sub jno lahf sarb repz mov es mov ret xchg cmc push (bad) arpl fadds xchg in mov sbb cmp shl fsub adc xchg jb dec rcr mov xchg (bad) stc push addl sbb push dec std mov dec dec popa mov das xor pushf in hlt and sub loop xchg inc cwtl and push mov and cmp sub hlt jge cmpsb aaa iret add shrb xchg hlt not push pop add push aas mov sbb pop and scas in and add pop mov iret cmp ret pop push roll mov adc push cmp loop push in xchg icebp xchg push push add outsb (bad) xlat fsubrl jg jmp jns sub shll ds mov cmpsb andb out mull (bad) xor xchg aaa jnp jg arpl stc mov shr cmpsl movsl or lds cmp int3 into fdivs pop mov pop push pcmpgtw jmp rolb add adc inc popa lcall mov popf xor pop or sub jl mov popf cmc lret jne test mov cmp ljmp loop imul sbb (bad) adcl and xchg leave addr16 popa mov mov jae enter popa sbb sahf xor adc mov loopne mov (bad) cs fildll cmpb enter roll ficoml cmp das jo or and es push fistl mov in (bad) hlt push lcall bound sub jge inc sub aad fnstcw ret mov pop inc cmpsb dec fnstcw dec xchg scas cwtl add pop mov fisubl cltd aad inc jnp cltd add jecxz dec sub out bound lret lret push test inc dec mov mov and add jo loopne add iret or dec data16 cmp cmpsb adc cmpsl (bad) sbb ret daa add pop cmovns out fs scas (bad) xlat dec imul add fstpl mov ss xor (bad) jne xchg xchg and inc xchg and xlat xor xorl push (bad) inc das sbb cmpsb mov and (bad) mov notl pop cmpsb xor jb stos fcomps scas sub ljmp (bad) outsb xor lahf repnz pop loopne cld rol xchg cmp jno adc push mov lock pop fwait sbb pop or cwtl or jae stos jb mov mov loope inc sub lods fstpt dec adc js hlt mov repz (bad) xor adc fsubrs xor jecxz (bad) push mov xlat bound fisttpl imul mov (bad) fs jno and outsl jle xchg fldl2t insb cwtl stc add xchg adc mul sbb push pop mov sub xchg push mov (bad) push cwtl cmp je addb daa lds pop mov cmpl ds enter test outsb mov mov inc jnp out or mov loop add out movsb or cmc add or sarb test sbb lods pop pop push stc fsub jg jo mov push push adc sbb and lods adc jb xor inc fwait inc ret call es ret jmp test arpl and and imul nop mov ja fcmovb inc cmp jae mov adc push sub push xchg movsb push push mov pop or push pop and lods fnsave xor int3 mov and shl addb addr16 rol cmc insb lret xchg inc dec cli (bad) cli dec push call lods jl,pn inc int outsb outsl or int3 mov mov sbb fsts pusha sbb fdivrl and popa loopne inc hlt popl fdivr jns dec (bad) jbe mov test pusha add sub dec shrb loopne jne insb fcomps push pop sub idivb ret (bad) divb scas in lahf jecxz mov mov xor cmpsb fistl add es jnp push mulb mov andb xor xchg data16 and out icebp jecxz pop sbbl mov fcompl mov fidiv jg sbb fwait imul mov jmp imul xchg shrl stos mov loop jg hlt lahf into push add adc ss and pop cmp push rcrb in call in xchg fwait ljmp sbb jmp jno shlb enter lret jbe push js dec sbb mulb add push loope cwtl pop mov xor loope push loope icebp inc add (bad) daa scas cmp mov jnp or es sarl stc sbb jmp imul fisubl cmc mov or aam (bad) gs icebp sbb sbb mov pop test ret jns jecxz adc loope test and mov jbe dec mov movsb pop push mov in cmp mov loope lret mov jge xlat daa ja imul (bad) cmc pop pusha adc (bad) inc cmp rcrl enter cmp xchg inc gs fucomp nop jns jg mov std mov js jb or xchg int3 mov add std sbb loopne jge (bad) mov xchg aaa pop lods xlat inc ficomp ss xor sub ret movsb adc mov sub jp aaa add sub rcr mov jl jp je mov outsl bound in les and fistl out mov jp push test pop mov adc inc fldt add and call js mov add xchg inc out xchg and lret aad cmp (bad) dec bound fstp out and imull into mov ljmp or js inc (bad) dec stc mov rolb mov pop insb and mov and out fdivrs scas inc (bad) dec das jmp clc shrl mov (bad) cmp ja mov mov clc sti lods jae std push sbb int3 mov cmp mov addr16 xlat cwtl and inc mov cld mov enter (bad) fsubrs jns daa insl adc jns jb roll and ss pop jge and dec test js iret add aas jl cli repnz mov sub add mov lahf and push insl or dec jae mov cwtl out cmp stos fadds hlt jno bound icebp mov pushf insb push sbb neg nop sbb stos dec idivb push cmp mov sub or in aas bound xchg jecxz popf xor clc roll mov lcall lret imul sti fisttp pop test adc test ret cmc or cmp enter jo jno push popf roll jno popa (bad) in mov clc test jp cmp push push (bad) mov cmp (bad) rcl lods aad loop push xchg sub in pop aad jns cmpl cmpsl xor sbb (bad) push adc rdpmc ret int3 int3 iret (bad) (bad) xchg aad jno test inc call pop xchg outsl push sub xor mov aad and es fs repnz test pushf (bad) jbe loope stos pushl ds (bad) cltd jno,pt lret aam adc negb les pop fsubs sub jmp sub inc mov or pusha cli cltd sub imul das xor es aam les mov or xchg int cmpsl leave outsb inc iret stos cmp aaa rol jne jl pop (bad) repnz loope add outsl out add aam jne popf adc fstpl jmp pop call sbb repnz fsubrs mov mov or (bad) xor clc and aaa (bad) jne xchg and cmpsl pop mov xchg and sbb jns sbb cmp xchg lods or scas mov je mov xchg inc es ret rorl (bad) lret xchg dec add sub lds xchg mov (bad) stos inc cmp movsl mov outsl repnz jae inc icebp std cltd ljmp sub adc adc int (bad) fistl ret add mov mov (bad) mov lds out add das pop mov jl mov int mov pop mov push cmp push nop add adc inc mov inc fsubrl fcompl aad out int3 jle inc jbe dec movb scas (bad) fs in orl push ss xor cli add in movsb and mov call fsubr push dec sbb adcb mov pop dec xchg pop sub gs cld and cwtl mov push lcall mov push insb ret jmp movsb push pop daa pop nop sub add mov (bad) jp jl mov or enter and sti roll push (bad) or mov insl or in fnsave mov mov hlt cmc cld hlt ret mov mov scas call cmp dec jge lcall adc (bad) mov pop push scas mov imul cmp cmp mov fdivs fcoml mov mov jmp aaa (bad) lea push push fisttpll (bad) and (bad) scas lcall mov mov push pop lret cltd test xchg test (bad) adc add jo popa pop mov fsub lahf or jb enter scas pusha lds mov push cmp and jae test int (bad) sub dec push dec cmp and mov fld dec bound lret mov inc mov jae insb nop push hlt out out in inc test sub das pop pop lcall mov xchg xchg shlb in negb out cs ja imul cltd and sub in ds mov aas fwait pop popf mov (bad) outsb push mov jae dec fwait enter sbb mov dec addr16 jo inc push mov out ss test push pop adc bound xchg pop mov sbb push loopne xchg inc pop aas or sahf leave xchg mov mov cmc ret (bad) and mov sub mov fcmove dec mov mov mov mov cmp (bad) notb lock dec cmpsl adc stos pop pop jnp mov popf sbb icebp xchg or add cmp fsts xor shlb jbe xor adc sar ja lock loopne push test pushf outsb jo das lods sbb pop (bad) mov add push pop and dec aad jge inc fisub push pop enter jnp inc fisttpl cli insl xchg or adc ret mov push xor js rorb popa sbb xchg test enter (bad) or xor mov jp jmp lahf mov xor ljmp mov mov inc cmp inc arpl sub (bad) mov testb jg cmc push inc enter push sbb cmpsl imul jae (bad) and aaa int cmpb jae sar inc loop fdivs dec or jecxz inc push in xchg mov mov cmp jno mov push hlt imul aad (bad) hlt xchg imul in fcoml clc pop jb ret mov push leave cmp sbb inc stos inc inc out es rcrb (bad) ljmp mov mov aad sub mov call mov (bad) lret mov fcoml ret (bad) cmpsl inc fs xor dec lea jne xchg sbb roll lcall mov mov adc sub ror sub roll out jge scas inc lea sub add rcl repnz push push idivl push add subl inc add mov pop jecxz insb mov push loop rolb loopne insl dec mov loop dec or aam add loop (bad) hlt into ds (bad) out dec scas in push sbb cmc push sbb pop mov push in dec sub and pop jo,pt les mov shll fdivl pop scas incb adc mov push fmull sub in jle das ja insb lahf sub inc js popf sbb les test push push dec add xchg push lock add and outsb dec negb pop sbb jecxz cmp divb cltd imul in or insl adc dec sub popf idivl in roll lods pop xor popl add pop pop out pop inc mov fidivrl mov ret pushf xor sbb mov and idivl push mov push dec sbb jle js aad inc jecxz xchg arpl xchg fnstcw mov sbb je xchg mov sub lret inc xchg aas cli sub lret aam xchg inc lea je test push in test pusha popf insb mov aad outsb mov jb out and cmp sub jb imul out les outsb cli inc call mov repz scas pop push mov adc (bad) mov (bad) jmp push xchg sbbb mov xor xchg jge popf ljmp jp cmc popa in out sahf jno daa push push rol fs rcr int3 inc mulb fstps lret dec add push outsb inc xlat in sahf cmc mov inc int3 jmp xchg push in pop push push push fnop ret dec inc imul fmuls les mov push in mov inc xor bound and mov add cli stc pop psubusw hlt cmc sub mov or sbb mov stos jae stos icebp sbb int3 push xchg test jae int sbb mov pop push (bad) fwait add into fstpt jge cmp repnz je daa in cmovno or adc cmp jns psubusw mov pop and sub std sti cmp push (bad) daa xlat sbb dec push add jge leave data16 add xchg mov outsb cmp out sbb and js (bad) and nop mov push fcmovnbe scas (bad) test jo mul cmp xchg sub cmp push and push aam test cmc movsl jg jecxz mov fstps pop je lahf mov pushf movaps daa les fisubl mov es xor xrelease mov mov fwait lea (bad) mov inc cltd xlat clc pop fisttpl adc or or fistl and into adc test popa adc rcrl aad and enter fidiv js cmp adc repz out adc pop mov xlat outsl xor add sub loop fisubr lret lea mov (bad) pop sbb mov pop cli iret add into fs xor sarl jge mov mov popf (bad) loop mov push and adc xchg inc and cmp inc push shll jle pop arpl in int cwtl dec inc sub pop loop xor cld stos mov pop leave sub push rcrl jle mov sbbl inc ljmp jno adc imul imul mov test arpl pop lock sbbl mov push roll je outsb lea ds scas adc xchg das sbb scas xor adc ss mov icebp lods cs fwait ds insl in sbbl (bad) lret lret inc xchg dec or sub ss or pop ja push mov fildll xchg cmp dec repnz aam pop loopne or inc sub mov inc inc loopne jb out xlat in mov mov jnp call sahf xor mov mov cmpsb js fimul push cmp mov adc enter clc sahf adc cs test test xchg inc adc roll adc xchg cmp pop inc mov (bad) dec popf adc push push leave es fwait mov mov xor mov decb dec in dec add mov and mov (bad) and (bad) imul sahf sti gs sub sahf fadds in and mov gs dec mov push or popl sbb (bad) outsl jl es fucomi jns and mov into add sub insl popf mov dec dec stos jge ljmp lock out push movlhps imul add in test jmp into insb inc andl jmp add push push or loopne and loop loopne gs movsb cmpsb gs pop stos mov inc lret adc mov mov adc jo sub test popf xlat pop imul xchg mov sarb xchg pop fisubl xchg in (bad) loope imul nop sbb scas dec sub sbb xor dec test jne cmp sub out or repnz jmp nop dec sbb addr16 inc out add aaa fildll pop adc mov and cli lret mov mov or mov loopne (bad) mov repnz mov aad jnp icebp xchg insl jle push stc les and nop cmp mov push in inc cmp push mov and test test pop mov stc jge mov andb outsb xor scas and testb lods dec push mov fwait stos out mov loopne mov mov clc sbb xor mov push fstp jbe aam movsb popa call in xchg adc xor jle cwtl jb or inc cmp out push adc push and repnz or pop mov xor insb cmpsl pop sub jbe out cltd push out (bad) cmp test es test ss loope inc cmp aad lods cs cmpsl xorl test in or and mov movsl dec adc and in dec jae dec lret xchg mov mov mov sahf add fnsave dec les jp push mov cmp xchg scas je inc decl mov outsb loop pop (bad) adc mov mov mov sub mov mov push fadds roll cwtl in je mov pop bnd lds (bad) (bad) cmp fisttpl cmp icebp pop sbb lahf (bad) push jae pop mov das add arpl lahf adc inc push (bad) rol xlat fild fild jnp test xor out mov xor movsl mov fcmove mov adc jae adc insl popf add cmp (bad) negb jmp iret pop cmp push push ds repz mov xor or pop cmp cmp pop and bnd sti movsl push inc and (bad) lcall or test loop ds fildll addr16 dec cmpsl adc cmp cmp into cmp xor mov cmpsl add call cld sub xchg fidiv daa mov into mov loop loopne jecxz mov push mov inc jns popf arpl cmp jb inc mov xor push stos mov test dec sub out outsl cmp inc or inc mov mov or xchg cmp add inc js out cmp lds xchg pop inc xchg pop test cmpsl popf scas (bad) jns lcall mov push adc cmp inc fldenv xchg pop fildll lds imul clc pop pop cli lods gs or and lcall and push leave pop mov hlt cld xlat nop mov cmpsb and mov ljmp mov xchg in stos lahf pop in imul xor and nop movb add (bad) icebp dec (bad) fucom and and sbb xlat pop fs stos cld push xchg add cld xor or cmpl ja insl sbb or fnstenv call popa dec adc push xchg es aam sbb shr adc insb adc cli or xlat repnz repnz test out and mov adc (bad) add (bad) mov call pushf jle dec mov icebp or ret (bad) negl cli and mov inc ss icebp andb adc fisub pusha sub pop add xchg sbb mov daa in xlat push sti mov (bad) pop and jo cmp xor into xchg bound ret mov fisubrl mov mov (bad) sub jp sub pop mov aaa ret test into mov pop xor cs inc fisub leave repnz adc xchg (bad) cmp push mov dec cmp adc pand out ss int and cmp sbb cs cmp dec sub in and lret mov nopl lea push cwtl xchg call es icebp sub pop loopne outsl or lds xchg or iret divb popa rcrl jge mov in outsl fwait inc lahf out (bad) xchg mov mov mov cld std mov cmp lcall call gs push push shrb mov pop cs pop (bad) aam out jp in sbb mov ffreep add nop incb cmp mov lcall aaa (bad) (bad) ss jge inc pop inc jnp adc fiaddl (bad) mov cli mov mov add jo bound notb fwait mov mov in lods pop lret mov (bad) sbb mov inc lods pushf or je mov andl fisttpl mov and jmp and shr pop jp cltd pop in xor fnstcw fwait in mov (bad) push pop (bad) in loopne incb cmp lret jbe inc (bad) fsubr mov pop mov mov ljmp insb sar mull imull fldenv adc andl int3 shll adc adc (bad) testb (bad) mov popa push (bad) (bad) ss repnz or cld sbb outsb mov pop test ret push add pop mov imul jns in inc xor push loopne pushf push int xor fwait (bad) mov or sub sub mov cmp es (bad) sub pusha (bad) and sbb inc int test stos pop mov xchg cmp or push sub rcrl jp ja mov mov cmp dec pop popa fcoms sub (bad) enter imul xchg imul fucomi mov push inc push (bad) clc out mov test sub jp sbb aas addr16 cmp andl loop (bad) (bad) insb pop test sbb and mov push sahf push jge inc dec ss add or test ror stc (bad) in xchg jne jne sub fnsave sahf xchg mov repz clc mov pop and mov inc nop pop pop sahf mov cmp (bad) je fwait ss add sbb mov or fwait clc das jb ss into mov inc sub push movsl push jbe roll push mov xchg mov fnsave mov cmpsl pop in inc js lcall icebp stc ds inc or ja repz pop mov loope sub jle test in lahf sub inc mov rcll ret or jno sbb jecxz xor je push or mov or fcmovbe dec imul adc jle mov adc or sub jl xchg sbb and ret ja mov mov cltd aaa jle inc jg pop sbb push das (bad) sbb push jle outsl mov sbb stos xor sahf pop clc shl std mov out fsubrl test movsl mov out and icebp push sub jle jne (bad) clc inc sbb mov ja dec sbb mov pop js outsl lods mov (bad) repnz and cli test pop jge mov les div imul sbb jnp or cltd arpl ret cwtl iret mov push mov test fs mov push dec clc lret cmpsb ja xor mov test push movsl xchg hlt mov and xlat fcomp pop fcmovnbe push cwtl mov cli int repz dec jno push jae mov mov dec (bad) idivb lds out loop sar jne imul cwtl iret push dec mov push rcl rcrl outsl adc stos push lods sbb mov and rcrb call sbbl fcom dec jl stos push add inc aad cmc mov stos insl push negb out jbe inc jmp adc sub fwait lret sbb xor gs push out xchg ret cmp or jne xchg mov addr16 cmp int shrb cwtl mov lods jmp xchg (bad) ljmp inc jns mov (bad) in cmp rcll sbb lret add das xchg std cmp jmp scas das mov loop stos cmp pop mov push (bad) push ja lods xchg mov and and jb mov cltd stc rcr and mov fs and jno daa icebp pop push inc hlt (bad) lahf sti adc shl test dec lahf cmp mov lock icebp insl jle jnp sbb repnz (bad) ljmp xchg orl js fcomip dec jnp popa xor mov mov cmp sbb test lds lcall cld stc add idivb mov fs lock icebp mov popf (bad) fstpt sbb test pushf loop mov xchg bound push (bad) pusha shlb cltd in push int mov push call cmpsl lds popa mov int (bad) out jae ja lds sub mov xor hlt ds pop imul int decb pop xchg add imul ds test pusha dec xchg sbb mov inc aad aas mov dec nop pop aaa xchg add sub lcallw sub lret ds icebp in cmp lock loope cmpsl push adc push lods adc std cmp and xchg sbb fmuls mov pop cmp push dec push sbb pushl lods cs mov daa decl loope add sbb or aam out mov mov inc push popa push pop into xchg pop xchg pop sub dec sub mov cmp gs or or push cmp pop rclb cmp repnz cs xlat lret lcall fnstsw in jmp clc dec ror cli or es pop into repnz cmpsl fsts outsl mov out repz jns jae adc and sub div dec dec mov cmp (bad) mov (bad) and sbb xchg sbb daa pop leave test out sbb mov mov inc xchg mov lahf stos inc sub xchg aam and test (bad) sub pop dec daa leave jb jns lds xchg (bad) mov in jne sbb jo orb mov mov std inc jl cli (bad) fdivrs or (bad) icebp push pop xor daa clc lret mov cmp mov sahf pop pop jo popf sbb test insb pop enter mov adc repnz popa stos mov notl aas adc shrb rcl mov pop inc mov xchg mov fist jp lret lods pop pushf xchg mov push push sub adc sbb mov pop imul inc int in rclb xchg push out add xor ret repnz push dec cmc cld push daa push das scas dec dec adc adc push mov fbld lds or daa sbb sbb or cmc mov add pusha enter mov or fs mov ja movsl xor dec or repz inc std pop jne pop (bad) mov adc mov xchg sub pop pop repz test sarl lea ret ret sar mov mov jns cmp adc lea or sbb (bad) aad aam xorl add dec lret ds dec mov rcl mov mov pop imul mov mov cmp xchg (bad) mov sbb and cmpsb daa xchg insl int3 sub (bad) and ret sbb push enter inc loope and roll sub hlt icebp jo aas mov jg out hlt mov and adc leave std in cmpsl jnp mov (bad) add mov das out fs repz pop mov mov adc shlb inc ret xchg mov pop lds insl or lret repnz into lods jo pop das and inc sub frstor stos inc dec clc fdivs jl arpl sub xchg rcr fistl push movsl push cmp rcrl fbstp dec cwtl ljmp inc mov dec out adc sub push or or lock adc adc fchs lcall push sub sbb mov fsub push ljmp pop xlat aas jb pop ficom insb cmp push sub xchg xchg jge ja ljmp mov cmp (bad) das in mov jmp sbb push mov out pop mov dec adc movsb and inc push mov ljmp and push cld push dec sub sti sarl arpl icebp (bad) fsubl or mov sub mov push sti or hlt lahf pop ficompl xchg dec je into int ret test bound push dec movl jno outsb das ficomp jnp lcall inc sbb sub ss add fs jmp std or jnp sti sub inc and push push aam popa jbe push das in pop insb sbb jl in add repz pushf ja loopne jo push ss sub je xchg ja jmp lods sbbb and repz ds jno and mov inc js out and fidivr scas leave jg sbb fsub iret and push push sbb std js inc xlat test mov jb sbb int3 xlat popf or xor pusha aam and push jne mov mov push (bad) addr16 testb and std in mov lret adc pop pushf inc out leave in and addr16 xchg leave pusha jg insb adc sbbl cwtl mov xor ret popa mov and jge aam cmc fmuls xlat mov mov fucomip and cmp sub and imul xchg add push mov sub adc jle push and out dec cwtd bound xchg iret mov adc sbb rcll in xor jmp mov dec (bad) push jl bound pop movsl mov jae mov xor jle cwtl jp jnp test (bad) into xor leave decb ret dec sti cmpsl push into or inc sub ret mov push push loopne fisttpl adc rcrb dec dec sub imul jg cmp push xor test into adcl jno xor sub or cmp sbb leave dec cmp mov sbb sahf in pop insl ljmp pop scas or int3 sub bound nop mov cmp cmp icebp pop pop xor out mov aas jb jno mov push sub out outsl xorl xchg or test mov je in adc inc daa daa adc mov mov xor sub (bad) jge aaa leave sub mov pop lahf xchg adc and mov cmp xchg xchg pop mov or push cpuid or lods xchg pop out inc sub pop pop pop cltd cwtl cmpsb cmp loopne mov jns fxch scas jnp push addb aaa lahf cld cld iret sub lret and and adc mov push icebp out jno mov sub push movl jns pusha lock dec adc jno mov add sbb sbb (bad) loop das sub push jo dec jno aaa sbb mov and int3 fs cld cli roll xor cltd clc mov ja and push fmull add or out adc mov in dec jg lcall enter jge push movsb mov adc mov vmovd (bad) add pop xchg nop sub inc popf inc inc jae sub sub inc insb movsl xchg loope dec add (bad) cmp pop out jl or scas or (bad) dec adcb pop outsb pop sbb sub les sbb (bad) daa movsl (bad) jo aaa das pop or cmp mov jmp subb cmp jecxz or js aaa pusha sub inc (bad) mov (bad) imul xchg dec lret or pop jns and mov test jne mov jnp inc push xchg and out sub adc dec arpl int xchg jbe mov push data16 cmpl bound sbb mov data16 enter (bad) call push cmp jns cld mov add mov xor fimul push scas dec cld push rcr scas movsl fadds ss addr16 stos sub mov jecxz xchg rcrl add cmp outsl sbb imul mov xchg sub stos pop into test ret int ljmp gs mov lds test dec fistpl sbb cmp pop cmp jmp shlb mov stc out (bad) sub pmaxsw ficompl (bad) sbb (bad) or test xor je call addr16 sbb inc mov stos or outsb xchg shll (bad) and xor or fidivrl pop add and xchg (bad) popa adc and testb jns loopne jecxz push icebp push mov sarb lea fs xchg js movl out test xchg add cmp dec lcall repz push push dec sarb insl jmp lahf pop movsb cld push lret mov dec loope xor lods lret mov sbb lret inc pop push hlt fsubrs cld cmp (bad) jmp lods inc aas pop sbb imul lret lcall sub inc jnp xor mov mov cmp sarb xchg sbb aas lret cmp jmp lods mov icebp fwait stos repnz out mov lahf std (bad) push notl xchg loopne or ja loope adc cmp mov mov mov inc mov (bad) cwtl sub imul adc fcomps add dec or cmpsb rolb mov or pop aam cmp lahf or dec mov xchg or iret data16 (bad) mov rorl out mov in jne clc mov inc hlt (bad) fcmovnbe sub js dec fsubrl fdivp stos xchg push lret pop mov ds sti je imul into mov (bad) movsb fsubr notl bnd pop aam xchg mov or jne xchg lea cwtl clc cmpsl cs push stos dec rol adc xchg (bad) xor mov lret adc mov jg xor int3 cs imul push out cmp inc add xchg sub pop int3 hlt and js out fcmovnu push lea mov mov sbb push rclb jecxz mov test push call sbb clc lahf cwtl inc push and out int3 xchg hlt jae cmp mov xor adc ffree push mov rolb push and inc in push jns call xchg daa and pop push sub sub dec pop lret jae xchg push iret or popf sub addl movsl jno lret int3 and rcrb es (bad) repnz xchg jg (bad) loop and and xorl loope sub stos cld cmp add pop in leave pop sti sub pop aad in imul adc sub jp or outsb sbb stos jl fisubr dec hlt roll leave mov inc (bad) icebp aaa xchg popf pushf shll pusha cmpsb push inc push repz (bad) lds sti mov roll mov cwtl push xor cmpsl add ror pop push adc jae,pt pop fldenv xchg subb add lods cmp cwtl mov jbe (bad) pop mov xor cmp iret idivb mov mov lods push cwtl negb arpl adc in sahf jmp xchg mov push inc mov mov or sbb mov mov mov mov std pop imul sub jl jmp add sbb cmp pop fmuls out insb daa test fsts xchg (bad) in sbb mov inc lods xlat ja,pt loope jns xchg fstpl add inc push stos add xchg jbe (bad) sub dec mov mov xchg xor outsl mov xor push pop or xor imul jbe fmuls aaa dec inc iret jg push jne and (bad) (bad) (bad) aad push (bad) andb lcall mov pop jbe popl inc jno inc mov inc sub jno inc cmp hlt push fmulp jg push pop dec nop ret mov mov aad (bad) and dec dec xchg sub in xchg daa in in (bad) fistpl int lock dec cwtl subl dec mov cltd enter pushf jb sbb and push adc sub mov inc insb dec cmp mov mov mov xor adcb pop xchg test jecxz clc add pop and mov jmp lret pop sbb imul test cmp push push test and jg mov fistpl sbb es cmp outsb lods enter cmp pop es fs sub pop aad lret mov (bad) nop stos loopne das lock mov xchg mov inc clc das adc (bad) mov lock out (bad) ret inc int (bad) xor daa push push sub and inc add fucompp mov (bad) loopne xchg add mov or out repz push fisub fiadd cmp in mov (bad) xchg stc and std idivb add (bad) jbe xor adc lret cltd pop leave movsb (bad) out cld sub fist cmpl or aaa icebp sbb adc add je mov jle xor xor add adc jle sbb lcall test push fmull test or imul jno add dec daa mov xor dec cli push aas ret sub testb call and scas inc sub jl mov jle pushf mov jg cmp or clc pop cmp js (bad) cmp std mov dec pop mov jge jl inc dec cmp cmpsl dec test jp cli inc cmp mov mov xchg inc xchg cmp cltd fdivl jae adc mov icebp mov or cmp in fistl sub jmp lods mov pushf pop leave cltd add xlat jmp test jg leave jle mov mov pop xchg jg dec inc mov sbb adc mov jae popa xchg (bad) stos xor lahf cmp lea stc push push repz cmp push or out ss insb jo jg (bad) jg rol jbe jg in adc jb pop (bad) fmul out out (bad) xchg fwait pop (bad) jo inc mov outsl xchg xor std into jp iret clc xor ja adc psrlq arpl lret mov push aam mov cmp jo leave popf loope cmp repz mov fs sub out or and dec xchg add xchg pop arpl jb push push es xchg rcrb mov fstpl jnp lahf cmp and xchg xchg cmpsb inc (bad) leave cld cmpsb xchg jp mov sbb inc ja cmp aas ja push out out xchg jmp mov mov popa cmc pop xor dec loopne and imul dec in jge pop dec mov fistp je xor cmp pop leave adc dec div shr cmpsl add cld outsl inc test jno xor pop sub xchg (bad) mov iret jmp push fmull inc inc xor inc (bad) cmp in jo or cltd mov xchg mov idivl xor jno andl dec fimull (bad) fwait mov (bad) mov inc test mov movsb out nop arpl push mov sub cli sti and vpcmpgtb add push inc lods pop add imul push mov cmc fist lds inc inc cmpsl mov add rolb call pushf daa ret xlat inc ud2 push out addr16 lods fstl lods (bad) call mov pop push ret hlt jmp les fbld mov dec sub clc inc test pop sub mov fbstp cwtl mov push je mov call icebp fmull fist test lock cltd jne or pop sub pop mov data16 icebp dec dec fistl xchg scas xchg xchg ficom jg pop rorb repnz fst lock xchg and rcr pop push inc leave inc test cli mov add push stos daa (bad) and add adcb in pop xchg push add cmp mov sub sti ret (bad) int sub xor mov jno push ret xchg movsb imul xchg cltd cld mov xlat fadds and cwtl sbb sar xchg in into (bad) cltd jns add jmp pop xchg rorl jnp cwtl push mov or xchg inc pop mov stos pop mov add mov cltd push xchg sub xor ret ljmp mov (bad) (bad) dec mov add cli mov sbb jb iret (bad) lods in xor jmp push ljmp inc lock dec loop push mov in xchg stc xchg std out pop and xor iret push scas push cmp lods test arpl data16 mov inc jmp cld pushf xchg lret mov and sbb mov or sub (bad) inc mov cmp xchg out jmp jmp gs int3 xchg pop jae pand mov ljmp leave pop dec stos xlat jns cmpsb or dec cmp leave pop pop rclb sbb dec call pop inc or add pop xchg cmp mov or cli sbb xor aad jle pop mov cmp add ficoml insl add lret outsl pop repnz dec mov out adc sub aaa jnp jecxz test sbb jp add mov mov and faddp jno sarl add in inc dec xlat call rorb inc scas push dec mov push push mov dec lcall out mov scas xor pop jo cltd and in sub jl xchg mov dec ret cmp rcrl mov and sbb adc test lcall sub fidivl inc out dec rcl mov sbb mov or lret int3 adc xchg bound push push add inc cwtl mov push pop out xchg insb out jmp imul add das push inc push dec leave ret inc jg loopne pop adc or push and (bad) sub inc adcl or pop out jg mov out cmp movsb pop and popa push jmp adc jno imul in hlt xlat jle mov xchg mov dec pushf mov or adc lcall nop sub and lods push dec or fldenv aad in mov lcall fidivl pop popa out jnp nop xchg iret out xor arpl inc ret in repnz mov dec data16 sbb xor mov popa out (bad) aaa or (bad) in inc int dec lds adc inc call sbbl cltd ffree sbb mov mov ret xchg or mov scas test adcb imul int3 sub loopne or out rcrb sub ljmp jbe jmp fldenv add push add clc js cmp sbb add mov cmp sbb repz lahf fs xor (bad) (bad) aad sub inc daa jg push push pop pop rcrl and stc pop adcl sub call popa adc jb inc aaa shrb out cmpsl test (bad) leave fnstcw (bad) mov cmpsl cmpsb mov cld mov repz cmp (bad) iret out lret insl outsb xchg loopne push mov into sbb dec xchg pop testb std sub jmp std insb fadds cmp ja push imul xchg mov test pop mov fistpll les in lret popf std hlt mov jb jge ret int3 dec sti or outsl rorb ljmp psllw mov (bad) int sbb inc inc rol dec push push mov pop cmp jb jo das das frstpm(287 xor popf ffree imul int3 loopne pop (bad) shrb movsb je into and arpl iret inc aam add inc imulb xchg test mov js in gs movsl (bad) popa sub push push aam mov push mov xor or or addr16 in out out mov outsl push jb jae cltd pop adc dec sub lods dec ror xor mov push cli int icebp std sbb cmpsb sub inc xchg mov lcall scas xor ficom mov out std icebp (bad) icebp repnz insl out popf (bad) mov xor jb and mov stc cli popf ficoml lret mov xor ja push pop lea cmp insl es decl cld add sahf xlat loopne push cld pop fwait insb imul pop pop bound fnstcw arpl inc pop (bad) fbld or sub in bound test mov cli xchg pop js dec push xor add xor xor add adc add pop sar push hlt jne test or mov bound jno mov into mov cmp iret js into push leave sbbl clc (bad) xor out insl mov add xchg jl mov test sarb mov loopne (bad) push xor jl mov sbbb sbb push push fimul cld inc push sub cmc or subl in dec stos lds or adc setb sbb aas jae test scas mov xchg add repz aam mov add push push fnstcw cmpb in les adcl pop xchg mov je rcr xchg sti mov pushf xchg (bad) xchg inc or iret xlat in cli sub jae sub scas mov mov mov push xchg js imul xor cmpsw icebp test loop scas pusha and xor fsubl xor push sbb scas xor decl imul int lock fildl fptan xor std orb ret mov xor ss pop mov aaa (bad) pop lods arpl sti jg cltd xchg mov xchg jno inc inc sbb jmp ljmp in test mov jbe mov sbb dec push xchg push xorb sbb push xchg cmp adc push ja xchg in mov push xchg mov scas (bad) jnp gs inc movsb jnp in and aad in lcall (bad) dec in stc mov xchg cmp fs push adc xchg addr16 sti out ljmp test cmp xchg mov dec mov mov xor pusha (bad) xor cmp jne lock sahf std inc lret movsl sbb popa xchg cmp cmc and loopne fdiv pop hlt mov fist push pop faddl enter mov add inc mov mov loop sbb fldl jge add std aaa lea (bad) mov cmp lret daa push mov (bad) cmp mov push ret xchg call xor mov stc leave fstpt inc push cld fimull inc aaa ja call sbb dec jns lods (bad) xchg ss iret dec sahf negb xchg mov dec fs shrb xor inc xor rorb mov aam scas mov xchg (bad) and jae sub push mov sbb lea and xlat leave pop jle stos iret out loop and insl cmp and add fsubs mov mov jmp (bad) jmp jmp push add lock outsl sbb cld out jl xchg pop push negb and pushf test outsb aam (bad) xor roll adc ret mov cmpsl test and inc loope jge clc adc inc xor js adc arpl ljmp int3 ret pusha push cmp cli outsl clc mov mov jae aas inc xchg cltd out fisttpll fwait jns and (bad) mov pop movsl nop ss lds mov lret xchg dec adc xor sti imul jb cmp cmp jb push mov lret stos inc xor stc stc loop push sbb fnop loope and xchg adc dec test mov jp fsubrl insb or jno outsl add mov pop lcall clc out jecxz pusha in (bad) in pop loopne pushf pop test hlt add fs scas mov sarl mov lcall gs js xchg imul fdivs (bad) pop cmp mov jg cmp mov stos je dec dec stos out movsb (bad) mov data16 cmp jecxz xchg out jno or cld ret dec out jge and cmp push jp outsb mov daa ljmp xchg fstpl cmp mov cltd fsubrl mov sbb sub add leave mov mov dec jge add rcl xchg push xchg inc cs or xchg jp testb in mov mov fwait out clc adc loopne sbb xchg bound sbb cmpsb in (bad) aas sbb push mov ficompl pop and sbb (bad) adc enter xor fwait mov roll jae sahf mov push jno adcl mov xchg dec push mov das fnstcw xor inc fs inc jns addl and movl dec popf mov iret jl push mov lods pop jne jg in addl bound test xchg push fwait sub sbb notb pop outsl outsl mov dec gs adc lds sti xchg xor lods cmpsb mov adc loope jno jo (bad) les das das xchg push hlt mov cmpsb mov xor cmp clc enter mov insl sub pop fildl fnstcw shll jb arpl out inc test add sbb dec loop adc jmp int3 out daa aam cmp sub adc xor and sub add ss push ret push xchg cmp push adcl mov sub jnp enter xchg mov jge jge ret cs push les je lock enter or xchg outsl mov jae push in arpl loop ret pushf push xor (bad) jns dec (bad) fs jb ret or sub das hlt stos or mov scas insb mov das jnp jecxz fisttpl (bad) dec pop sub imul add push mov dec xchg addr16 add cltd cwtl stc (bad) inc fldl stos xchg repz hlt push xor jl (bad) sbb out stos sub and (bad) push jne fs adc imul stos jae mov pushf in ds lods jmp dec (bad) xchg inc arpl jae inc jae jmp sub pop ljmp push lods xchg cmp mov std ja das xor stos add sbb sub sub jmp xor jb mov cltd lods inc pop pop pop or test pushf and sub jmp stos pop sahf push lods pop (bad) je or or shlb jns rorl mov sub xor and cmp xor (bad) jge loopne dec push (bad) out dec adc mov fstps jns jbe loop fnsave mov cmpsl jb inc dec test mov aas in test mov mov pop stos es and iret ret mov inc add das sbb mov repz outsl (bad) enter into jb cmc jge enter dec add push cwtl lods xor leave in gs sbb andl leave sahf xchg pop fist mov lods dec mov mov xchg push inc and scas lds sub sbb adc popf lds frstor adc (bad) les loope xor mov fucomp xchg cmp out dec rcll dec jno repz push sub add jg or add fwait repnz leave mov call subb shrl clc jns or mov xor mov push mov into inc mov mov pop adc jb add pop xor inc js mov inc idivl (bad) clc and push int3 or cs add jb jne jae mov and cmpl jns popf pushl ffreep xchg mov mov clc pop cmp loope clc out adc mov sahf pop movsb rcll mov adc xchg xor xchg mov stc jmp add mov pop sbb push pop mov out or push mov popa (bad) (bad) in pop adc mov ss ja add pop dec sbb hlt mov jp clc ret imul iret pushf cmpsb mov insl dec pop xor popa xor mov loop ss jns push jb lret sub xor ds or insb (bad) jmp lea dec stos (bad) jb (bad) sub aas incb mov jmp and je iret mov mov aaa jmp inc jmp pop cli push popa testb sbb adc ss xor stos je mov sub aad (bad) pop xchg (bad) mov repz mov mov pusha and ljmp scas cmp test repz scas ret push (bad) pop lea movsb (bad) jno pusha mov in cmp mov xchg sbb add xchg xor mov jmp and inc cltd (bad) pop pushf jae mov shrl sarl mov mov dec jg pop cmpsb insb or scas out das nop rcrl adc adc push dec subl (bad) ss pop cmc mov jmp (bad) mov inc xor aam jbe mov jb inc jno loop repnz out cld mov or xor adc pushf jb add ja xor mov mov cltd adc lcall inc jecxz mov inc jle push ret imul dec dec lock mov (bad) test pop push inc in aam call xchg add inc dec jp pop dec adc das push pushf push orl fcmovu int3 add jnp mov repnz ror push pop divb mov in cmp ds inc fildll (bad) imul lea outsl add es push test push mov leave mov pop pop (bad) pop lods pop jg jno mov in lds imul and add stos movsl (bad) (bad) rorl fisttpll rcl lea call into mov add stos mov sbb sti inc nop lea mov or pop mov pop jbe lret adc in int3 bound or push mov shrl pop imul push inc scas cmp leave xchg dec loopne jns aas jle sti arpl (bad) pop add xor in add cmp sbb adc xchg fnop dec cmp push jmp cmp add mov mov les mov or cmp or loope push repnz repnz das mov les and scas call jle lahf and mov aad stos lcall push adc scas loopne cld stos mov ret inc test adc mov out inc (bad) (bad) pusha sarl sub std dec inc (bad) into add inc mov (bad) mov mov sahf pop imul orl (bad) lahf fs out mov and sub sub sub loope sub pop pop aaa test sub je pop stos roll es mov add scas mov outsb (bad) fsubr xchg cmc js stc dec cmpsl insl daa dec aas lret inc inc lods mov mov jmp sub mov jbe or js test jae inc sti cmp lods cmpsl in or mov imul int gs stos jg mov push lret jnp test scas gs mov repnz jp ja xor xor xchg fsubrl fxch and push gs insb shl xchg mov xor add out push push mov pop mov jbe jb lcallw inc and arpl mov mov mov ss xor repz cmc xchg cli popa and incb mov out in ja fsubl (bad) mov stc popa mov call cmp add push mov int3 pop out or adc in (bad) in and imull test xlat inc mov inc mov xor out jge dec repz call popf sbb inc sbb pop adc inc jecxz gs scas cmpl lea jnp in movsl push xchg rcr adc mov push xchg add sub repnz add xchg popa jge push aad out repz loope nop insl adc into xor push mov jmp mov mov cli mov add outsb cmp ret xor mov mov andl rolb lods ds fs push lret pop push mulb cld push sbb cwtl xor incb fnop sbb xchg sub cs and arpl inc fisttp leave inc ret testl or pop nop cmp dec (bad) repz and enter test fstp adc and movsb jo test je xor or les add push push cmp xorb xchg gs and outsb mov clc cmpsb or fldcw lods inc aad (bad) loopne hlt repnz rorb push popf mov pop in insl xor pop stos adc (bad) xor sahf mov fisubr jbe enter call dec cmp pop push xor mov mov daa mov js loope in sahf stos cmpsb dec je and stc jne cltd pop pop sbb jle mov ljmp and inc and sbb cmpsl (bad) cwtl insb add xchg call or xor sbb cmp imul xorb mov mov into jns lea outsl lock jle fcomps mov xor rclb mov fwait leave xor adc dec mov xchg int (bad) insb sahf nop lds mov xchg ret xchg loopne xor test sub jo (bad) cmp jmp cmpsl cs (bad) cmp pop mov dec ret addl ud1 popa pop adc and push push mov push mov out outsl cli mov rclb int3 xlat mov xchg mov sbb pop ret not dec (bad) int push out push popf and mov sub or repz div aam lock pop or adc mov pop movsb insb inc lcall mov xchg or push icebp cmp test stos jae pop pop jne call pop test mov cmc or out pop sti fcmove fs sub or dec xchg shll orl jns or imul es mov and or arpl test lcall inc data16 test jb xchg cmpsb xchg clc cmp scas pop mov push fimul dec mov xor insl xchg dec xor and push xchg add cmp xlat mov add cltd xchg adc sti push sub and insb mov enter out cmp in fucomi ss jmp setae es pop sub xchg inc xor (bad) inc out sarl xor fstpl (bad) xor dec call sbb pop lret pushl pop adc mov xchg inc (bad) repz cld sahf rcrl or fs pusha pop adc push cmp pop mov pop mov test mov cmpsb aas iret pusha mov dec loopne adc cmp sub mov add ds out adc lahf dec icebp jnp (bad) clc xor xchg sub fdiv imul and xchg aas dec sbb nop and and jle mov xchg stc pop cmp mov dec mov outsb xchg jl mov outsl pop es jle in inc add das and jb xchg mov into fdivrp dec clc icebp add js jno cmp mov shlb inc rcr jb movsb shrl or mov popf in push push sbb mov arpl jo adc loop jl movsb lret mov iret push sub mov mov push xor xchg outsl mov xor pop sbb hlt fldl popf loop pop std gs push je push lods push iret loope cld jns mov dec or sub test (bad) adc insb jg cli push out xchg outsb jne xor jae or pop and lods or and data16 or cwtl jg jge sbb fisttpl dec (bad) mov xchg out shrb fmul or (bad) mov pop outsb mov pusha stos push gs icebp sub daa and push xor ficompl and es mov push dec adcl jle das int3 fdivrs xchg cmp pop outsb mov lea int3 cld outsl and fsubl (bad) jle sub lock inc adc les fisub sub lcall stos gs fidiv add mov sub gs push repz mov js mov adc jbe hlt mov loope pop incl mov cli xchg insl push push inc xor loop and xor xchg mov test ljmp mov shlb jl je fucomp rep and or sbb xbegin mov icebp scas adc mov cli sub in mov test fwait cmp insl pop (bad) xchg inc pop jle mov mov inc lret out lcall arpl fs xlat mov mov repnz mov pushf lret cmpsl icebp imul sub inc push addr16 mov jb cmp (bad) xchg pop je stos adc lods sub cmpsl frndint scas sub cmpsb adcl push lock mov cmp mov jecxz sub clc pop inc test lret mov mov and dec enter cwtl scas mov inc into and inc stos test inc jp cmp sub or (bad) hlt pop and repnz or pop lock or jne (bad) mov jg fistpll push (bad) jb scas fidivr push pop enter andl dec sub xchg xchg add pop push cmp les or ret push loop lds in mov andb sub outsb cmpsb cltd je (bad) xlat xchg xchg rcll mov ja adc pop (bad) pop xor sub fs jbe pop pushf out lret sub push dec lahf js decl cmp stos push dec xchg icebp and fisubrl xor jbe jnp xchg jecxz fnstsw dec jecxz push adc icebp loop popa test mov std ds jmp and cmp mov out fldenv mov (bad) push vmwrite pop jns daa (bad) mov lsl rorl mov repnz lds mov decb sarl dec or and lret adc fstpt xchg movsl push imul mov jae dec loopne xor dec clc or and inc mov xor or lret mov dec and xchg dec rorb xor pop lods mov push xchg rcll mov fcom orl nop add sbb adc xchg jmp lods push adc bound out leave push push pop inc setge int3 pop daa push jge movb sbb or pusha jno xchg and ljmp into notb fcmovnbe insb adc jbe xchg jl,pn fisubr cmp cmc stos cltd adc movsl cltd mov aaa icebp mov pop mov mov add (bad) mov leave divl lcall rorb pop and mov push cwtl out xlat push adc jns lss push cli sub add sbb push xor movsb cwtl pop decl mov icebp cli call into inc jg scas sti add sub xchg xchg fidiv add push lds jbe xchg push mov mov mov ljmp pusha push enter jb or cmp xchg les pop cmpsl cmpsb lods fneni(8087 rcrb xchg and jecxz insl imull adc in clc jle fidivrl sbb mov and lret sbb loope out je dec xlat pop movsl hlt pop sti xchg unpcklps sahf insl cmp dec mov and xlat dec ret inc mov fisub mov add pop aad int3 dec push and iret mov popf xchg jne mov (bad) call cmp xchg mov cmpsb das mov xor leave (bad) jno inc pop lods fnop jmp push dec outsl (bad) cld outsl push faddl sarl pop jle out pop xchg mov inc pop scas das push xchg sbb adc out inc inc cmpsb dec mov vphadduwd jmp stc into fstps and inc mov mov mov inc push daa dec int cmp and inc insl mov in cmp pop test (bad) std loopne test sbb repz icebp mov shll and gs mov push pop dec popf in cmpsb in cmp sub into andl in cld and insb outsl sbb push jo or iret stos mov cmp mov xor ret fdivrl lds lods outsb call (bad) ds cs add lods push xchg adc mov (bad) test add out sub dec inc test cli sbb mov in push fnop das mov mov in pusha lods stc clc xchg mov sti pop ljmp dec jns sub pop fimul cs out mov enter ljmp xor ror push pop and pop icebp xor inc mov pop scas (bad) mov mov and sub sbb xchg push adc lahf enter movsl lods adc or mov pusha sahf xor int (bad) cmp je arpl rclb inc outsl cmp mov shrb (bad) cs inc sub push mov lret cmp and xchg in popa cmc or mov outsl loope in cmp mov cwtl js push sub and adc nop jge nop dec jns int3 lret and or or test (bad) dec add push arpl out xor clc xchg add mov int adc dec xor into ret cmp rolb and cmc or shll dec mov mov dec xor rclb adc and sub xabort ljmp dec (bad) xchg repz xor and xchg inc mov push repz out test adc or cmp pop bnd xorl in ja sub push push mov mov push fadd movsb shll sbb sub inc fwait cli lock fwait mov xchg cli in xchg and loop pop scas add rcrb adc cmp pop lret mov or jl fstps jnp add lea push xlat add pop mov cmc mov jo fsubrl test xorl loope pop loope aas or aam and incl mov lret and in std jo fsubrs jno mov jmp or fldenv cli bound pop dec push insb sbb mov mov fwait jbe jg stos cltd and pop and pop leave dec mov rcll dec popa inc shl hlt ret or jne sahf xor add ljmp sub (bad) lahf xchg shll stos or pop popaw loop and call or mov jnp aaa push movsb mov test leave sbbl dec imul in cmp sbb lret clc jae fistp pop sbb popf negl or xchg inc add xor mov inc fcomi dec push jle xor inc adc xor call stos pop xchg pop arpl jb fnstsw scas jno cltd fldl fdivl ret jns fstpt jg out leave repnz mov int cmp xchg out shlb add mov jno inc xor cmp (bad) cmp rcr scas jmp clc cmp bound sub lods sbb push xchg mov xlat clc sti add rorb ficoml jmp sbb das pop push cmpsb ret cmpsl push pop sub (bad) xlat mov das popf data16 icebp mov cmpsb xchg lods (bad) jl dec inc push and stos mov imul inc sbb jl lds pusha loop push xor movsb and inc (bad) outsb cmc xor xchg scas push out aaa inc loop lea add pop mov mov mov and movsb cmp out in inc pushf or sub mov std insl mov stos push fidivl add xchg lea js lret jbe pusha pop ror das cmp add movsb pop lds cltd lahf (bad) pop ss test mov xchg in jp iret pop mov aas push insb pop stc pop sub xchg int andb and adc pop sub mov mov xchg dec jne lahf xchg jbe cmp push pop add test push ret sub pusha sahf and out sbb pushf rorb add lods (bad) loope or and lods mov fcoml push mov lea int3 insb cmp leave pop dec je addr16 cmp in adc push out inc rcrl int in jl inc fsubp lods xchg xchg lock inc mov clc les and ss push add add or jmp cs (bad) xor scas in xchg jo mov push lock aaa outsl outsb je add xchg dec ret pushf cmp inc loopne mov pop lea mov push jge in mov std sbb lods nop loope test inc jle push jae repz fistpl in flds es cwtl pop (bad) sar adc loopne cmpsb call loop lcall xchg loopne cs repz outsl jg push push pop stc daa dec mov mov inc pop dec divl jp add mov or test mov hlt cwtl js dec (bad) mov movsb pop mov cmp aad mov inc dec push repnz ljmp mov test sahf push or bound dec inc and lahf xchg fdivs out std sub mov (bad) dec idivb (bad) jmp pusha dec notl sub pop out xor fldl and adc pop sub push push xor test lds mov icebp rolb sbb or xchg loope xchg cltd xchg xor imul mov mov scas test pop addr16 add cmp sti xchg pop sub add scas cmpsb push into (bad) lret mov inc int sbb rcr or mov sub push push jge xor stos hlt ja push insb lods loope in jne sbbl jnp push idivb int3 in dec mov les int3 xchg or pop xorl mov xor adc dec xchg mov add gs jmp xor cmp dec sub popf insl pop inc faddl xor ficom jmp add pop repnz push adc push jecxz ljmp push insb or sarb outsb and cmp pop inc ret pop xchg adc lods insb mov xor idiv sub icebp inc lods ljmp jl or sbb dec call xchg test lods js sub mov cmpl pop stos lahf es add stos xchg xchg dec xchg fadds mov push fisttpll xor jge das es movsl and mov rorl push dec mov cwtl sub cwtl push lea mov std cs fcmovb xor stos xor pusha jg imul gs inc aaa sbb push imul repz xchg js cmp mov and leave mov push xchg stos lds bound inc es aaa or out ret cwtl out jne les jl adc stos pop xlat sub cwtl jno out xor aad jno int xor mov inc add xchg lcall stos pop nop test pop cmp mov or stos lods adc cltd jnp jmp ljmp enter or jmp inc movsl sub push lahf push mov inc roll push in pop arpl sahf jnp cmp pop sbb ret pop mov xchg inc cmp push pop mov adc mov hlt or mov sti test out jecxz mov pop inc dec jb and sbb pop sub js jmp inc rorl sbb pop jno mov sarb cwtl sub loop stos out sahf repz mov mov jl dec rcrb fnstcw pop sbb enter adc fisub vmovupd int3 lods scas xor pop in fisubr dec lods int3 pop lds movsl clc stc push sub dec jg scas addr16 dec loope push mov pop dec pop imul rcll lcall ror inc iret fldcw call andl loope in sbb sbb mov (bad) lret cmpsl inc or sahf cmpsl pop push jne mov loop negb lods lods mov popa stc mov jb,pt cmpsl sub les (bad) xchg jle cltd lds fistl cltd sarb aad lods test cli jns jge add sbb pop stos push sub stos or jmp in fdivs test in xchg es jmp pop mov mov mov addr16 mov mov loopne pop fsubl xor fcomip lock fdivrl popf cmp jecxz adc push xor cmp sbb into cmpsb int3 (bad) in cmp jp sub ja adc mov (bad) mov loop xor sbb dec in notb addr16 out fisttpll lods fwait icebp fild lods in scas adc sbb test pop cmp loopne dec sbb inc cs fcmovnb add call cmp cmp sbb push int outsb fidivr inc pop xor lds or addr16 adc push ret in fwait mull jo in out sarl imul movsb mov icebp fwait pop push rol inc (bad) pop popa loopne xchg sti xlat mov sarl push add cltd addr16 xchg js and setne inc pop out cmp pop xor (bad) stos aas ret push lds adc enter in xor cwtl popa fdivr shll xchg nop add sbb iret test push and xchg lar arpl mov mov sub jae imul sbb adc aam sbb push repnz dec and adc pop pop xlat push jg fidivr sub ret addr16 push repz lock sub insb lods jecxz,pt jmp das test pop and xchg add inc sub cmp clc jle xchg jae or xor inc lahf leave pop push mov mov xchg pop push push lods imul (bad) pop mov (bad) or lcall je jmp mov cmp sub and xlat loope cmp add dec popa popa lds sub xor mov pop mov (bad) push pop pop (bad) je mov das mov mov pop mov inc cmp xor rcll cmp or int nop mov (bad) ss mov push push adc xor push cmp inc popa stos pop xchg mov sti jp push (bad) call push ljmp sbbl jecxz mov out test adc lds (bad) xchg sub pop scas push and shrb sub fwait std xor ffreep aad or jge sub mov shrl mov mov mov pop movsb adc gs cs aaa jmp mov sahf adc pop pop cmpsl stos xchg mov les sbb pop jno dec in data16 sahf rcr (bad) sub xor lea sbb and and mov cmp and pop or mov mov sub outsl xlat jmp push test test loope incl idivb pop scas jg sub mov xor mov add mov ret in pop and mov cmp std (bad) cmp data16 mov push hlt xchg mov cmpsb push adc in dec (bad) sub mov xchg rcrb and and js fdivr sti fucomp push aam xor ja popa out enter imul mov sbb rcrb int les cwtl out out adc in pop pop sub cmp sbb sbb mov sti fnsave mov daa jg mov call clc cmp in xchg pop ret test xchg loope cmp jnp or fidiv fdivr xchg insl imul repnz mov aad and mov xchg (bad) cmp mov jl pop sbb sub cmp add jae pop mov rorl je jno push push clc fdivr add movsl push int xchg inc push pop sbb call fwait xchg (bad) clc dec insl add add or data16 cwtl pusha xchg (bad) fisubr mov movsb xchg push xchg mov ja out std adc jbe adc sub (bad) pop fidivl xor xor andb and iret in sbb in dec cltd sub push push xchg in and popa je outsl fs sub loop dec mov jno xor inc add int3 xchg arpl jne ret dec inc jb fadds test adc scas hlt inc imul inc mov and cwtl mov in push pop mov out xchg cltd es sbb sub out sbb enter inc iret xchg mov push xor xchg add enter dec xchg sarl das push mov scas (bad) movsl inc push inc add jmp in shll fldl scas pop and add popl cmp orl in sbb push xor ja cmp pop fadd push and cs sbb mov cmpsb imul add lcall out fildll stos int3 loopne lea sahf sub arpl bnd icebp xlat add and and jns fs mov xor push arpl (bad) das add mov xor das fnstsw js stc push jmp insl adc lock sti mov fldenv sti push push ds (bad) mov aam xor sti rorb out xchg ljmp cmc paddusb jb xchg xor pop enter in inc adc mov xlat push shr les movb cmp push xor das notl mov imulb aas inc xor push jo cltd push dec sub (bad) lea cmp insb sbb cld insl jns push (bad) into js fldl out fnstenv and pop ret sbb mov into cltd jge lcall mov cmpsl out loopne mov inc adc xchg scas popf jo jp mov inc and std cmp push push adc jl mov gs xchg xchg hlt cmp adc ss loop xor or js jbe loope jns rolb repnz rclb inc ja nop insl xchg adc nop jns ljmp in repnz loop (bad) dec xchg (bad) mov adc inc jp jmp lahf xchg ret mov aas out pushf (bad) mov sbb sbb (bad) xlat in ja mov sahf mov mov xchg sbb mov and out test cltd sbb fdivl (bad) jne fidivr adc add pop xchg iret cmp aad push and enter mov xchg sbb aaa sbb cmpsb leave and movsl cmp movsb sbb pushaw cwtl mov jns add adc sbb js ds lods or lea push dec lods inc js imul sbb iret dec push jb stc insl pushl jns pop jns xchg rcrl or aaa mov repnz jge icebp stos pop mov mov roll int xchg arpl add sub pusha xchg scas sbb jg shl mov sub add dec inc faddl cmp add (bad) mov ss cmp push into movsl cmp jae packssdw rorl aas push add mov lock jle jbe mov mov lret je sbb arpl and cmp stos push adc xor aaa ret mov out or add in repnz jbe pop adc xchg sbb xor daa or (bad) test xchg loope sbb sarb daa push lahf aaa sub sub xor test sbb cmp popf jbe adc xchg insb push shl jae repnz ss pop and add mov fnsave dec test test out push (bad) sti xchg cltd cld inc lret fisubr ret adc fisubr add mov lds jbe push xchg cmp inc adc and scas dec insl sbb in insb xchg icebp clc test sbb cmp push cmp cli bound jmp and and adc popf mov test sbbb popf cmc inc loope out imul push (bad) ljmp jb (bad) sahf and sar cs inc add imul jb notb or cli ds aam mov (bad) xor cmp aad test sbb mov cmp push imul ret and jp lahf (bad) stos xchg cli (bad) (bad) fcmovnbe mov and xchg scas or daa xchg (bad) insl jge in push enter pop in pop dec xchg jne lret mov and enter insb leave std pop xor xchg adc cmp (bad) stc ds rol (bad) or sahf imul inc cmp and in xchg inc lods (bad) mov (bad) sbb gs arpl inc in imulb insb xor jp movsl stc pop pushf push jo xorb pop scas lds cmp cli leave test (bad) hlt repz loope outsb jle mov repnz and and mov inc jmp pop enter (bad) xchg flds inc pop rcll push cmc stos pop add add dec outsl push aam cltd cltd inc add xchg (bad) leave dec insb in dec pop outsb pop pop xor lods mov roll mov je out pop xchg cltd cli (bad) lds pop mov adc push ljmp jne and pushl arpl adc or (bad) sbb sbb or mov xchg push insl pop (bad) fstl sbb cmp add movsb fcoms mov lret inc push or rep addr16 nop xor push (bad) inc test test xchg stos pop imul mov (bad) adc sub inc mov out (bad) testb push adcl sub aam mov dec pop ds cmp outsl ss add and das xchg xchg cmpsb cmpsb inc sbb push mov jae jns xor or mov push and clc jae dec cmp cwtl repz sub dec dec insl cld mov mov in jo mov push mov cmp fsubrl scas ret mov pop cmp mov jb loop xorb test push in dec popf pop lret push lret rol in addb popa mulb pop cld cs and jbe sbb push stc adc and and es pop inc xor jle push shr push jle fildl ljmp mov lcall faddl sub fs iret ljmp jae leave lret es mov xor push (bad) in xchg fcomip mov xchg outsb sbb add adc jg stc cmp mov test lret popa mov xor sub adc pop sbb jp xchg add stos and (bad) cli sti pop jg adcl sbb add iret popa sub repnz dec inc test outsl mov ljmp fs mov sbb addr16 and es mov int leave scas sbb loope aam jo push sahf icebp es cmpsl xlat inc push in (bad) jp ret lret mov rcrb rorl or fstps jecxz (bad) fisubrl dec xor repnz dec add aaa pop shl pop and cs fcmovne cld jecxz push push mov jmp cmc or dec pusha in repz int push loope inc lock lcall loope sbb (bad) mov xchg mov (bad) in stos push jge add sub ret pop pop fisttp addr16 mull jns mov (bad) aaa ficomp bound mov idiv aaa hlt stos sbb (bad) repz std adc add das mov mov add pop lcall adc ds and mov scas scas and add lahf cmpsl mov in xor pushf mov (bad) xchg adc inc (bad) in icebp je test xor pop daa pop jne out cmp or cmpsb outsb out lods ss (bad) push out mov mov lret xchg mov jb and mov flds insl mov movsl aas aas scas lock push nop xchg sbb (bad) jo (bad) in test push mov arpl in std mov cmp add pusha sub iret jmp imul arpl adc out lret aaa jge inc inc fidiv sbb cmc and inc dec pop daa fistpll jo mov (bad) dec pop xchg or cmp or lods jnp std repz dec les rcll mov sbb lcall push sbb and std xchg mov rorb adc or mov gs mov mov and ja mov mov sbb add sub loope mov gs mov std das je aas pop and popa cmp or aas iret xchg add add (bad) mov push add pop push jae fs (bad) imul add outsb aas push xchg mov adc data16 or inc fucomip push xchg push test rclb add out xor sub mov stc pop and mov xor sub (bad) cltd les dec xor cld adc and popl push sbb xor jecxz dec add jns addr16 add mov dec xchg outsb cmp mov cmp dec and arpl and imul jp mov cltd xlat notb lods fdivrp adc mov push out aaa fsubl mov dec mov pop or sbb sub push cmp sub inc cmp pop inc cmpsb sbb loope scas fcmovb pop sub push sbb mov rcl hlt jecxz fisttpll mov pushf push lock addr16 inc adc in ficom mov mov mov (bad) push and pxor pop lock add repnz xor cli sub pop loope addl movsb insb iret mov adc test (bad) xor pushl and data16 xor push and loop (bad) adc js stos xor mov shll xchg cmp or cmpl test cmp xor add pop sub or (bad) adc ss repnz out cli loope cltd ffree mov lea jne xor add pop adc outsl outsb jne push pop push xor in cmp add jno or scas pushf out push aam pop loope fwait clc sbb inc pop sahf adc sbb and mov js shl adc in inc mov out mov or or mov push adc cmp loopne pop ficompl gs divb gs fwait jge lret lcall sub xchg pop insl inc sbb mov xchg jns pop (bad) stc popa das les into ret les fidivr outsl adc inc adc push je dec in data16 pop adc int pop xor shr ds (bad) stc pop inc adc jne ds mov cs fsts lahf fistl dec pop or test pop jne aaa push aad mov int jecxz sbb mov inc inc and inc fsubl pop mov aaa roll mov jmp mov push inc int fwait enter fiadd push sbb popa inc add insb or popa je xchg jmp cmpsb push xor cld xor add aad and in or cmp jne inc sub loope sub inc sbb inc out iret xchg int3 lcall popa add mov sub sahf pop (bad) mov inc adc mov int mov sahf pusha ss fidiv dec adc ret movsb cmp (bad) mov cmp dec dec push jp outsl imul mov popa sbb (bad) lods and jno rol inc mov subl mov xor push mov cmp mov mov inc fs (bad) sub adc jmp pop add lea xchg in mov sub in insl or stos sub mov stos call enter xor int push lahf add adc jbe cmp pusha enter jmp arpl push cmp add in subl in sbb hlt mov add jg outsb xchg push cmpsl push divb or xchg repz xchg dec sbb mov ret ds xchg (bad) lret (bad) mov loope loope inc or andb cmpsl xchg push dec bound int jb mov repnz inc jno push ret push pop jg xchg rorb add cwtl push subl loop fdivl iret cmpsl scas stos shr clc gs and push sahf stc stos sub xlat fisub jo test mov or stc lock mov xor xchg movsl adc sbb mov clc dec data16 (bad) call scas scas dec or mov xchg scas in lods in pushf dec xor pop data16 pop pop and sbb and adc xchg mov pop mov xchg push dec (bad) mov mov cmp ja into neg je push xchg mov inc adc sbb sub mov clc stos in add int3 push mov lods mov into and dec inc or lock jge push nop xchg sbb dec jne int out jno repz punpcklbw xchg test mov in into das jbe (bad) mov push ljmp push jae sub lods and std inc xchg push ret scas or outsb jae test ja pop mov xchg mov ret mov sti sub loop (bad) dec sarl lea and pop in push xchg rcl cld mov mov js imul arpl jmp imul or jns or js fdivrs jecxz cmp ret flds push push jg pop mov enter bound jmp and jmp sub insb push xchg int mov or sub lret js adc fstl or pusha gs adc ret xor xor add mov fistp dec inc adc mov mov and pop mov xchg in out int3 dec add mov bound sbb jnp and adc sbb out push mov aad insl jbe in mov loope dec xor iret call (bad) arpl sbb aam add and mov fwait or pop (bad) aam insl mov stos and rcrl pop mov or jnp (bad) roll cltd and inc pop sbb cmp cmpsl shlb and mov xor cs out adcl scas aaa pop sub mov sahf pop xor lahf in imul cwtl mov pusha inc je insl push test into inc imul push xor sti xchg cmpl jae test icebp ds jmp les xlat sub int xchg cmp and cmp cmp loope shlb cmp push out std fstl mov pop lods add add xchg xchg icebp mov jle push push jge lock jmp mov adc add jno push lock inc int push cmpsb jecxz (bad) pusha adc add mov aam sbb jle mov ljmp int3 cltd and push sub negb add lea sbbl stc adc das std add adc inc clc mov outsb (bad) popf outsl addr16 jge std xor fadd pop movsb in xor sbbl mov data16 shrw mov bound sbb dec in lret das scas test lods add lea mov dec fisubl (bad) mov mov push daa out xor adc mov cli sub and sub inc xchg lret jne push pushf push jl xchg test fist in and and (bad) das xor out xchg notl and mov (bad) xchg pop mov repz adc mov push loop push adcb and test xchg lcall push fimul sahf je movsb push push sub (bad) fcom daa xor dec popa (bad) loopne dec mov xchg sub push out test pop addb mov cmpb jb adc xchg or sbb push add scas dec mov sub mov inc pop std adc mov enter push jno inc dec fisubl into adc lods out adc pop xchg lcall sahf cs mov loope xor sub inc pop fs inc add push push cwtl out icebp pusha nop mov (bad) xor mov adc divb daa adc inc inc call jl (bad) push outsb lret imul or and lcall loopne test mov (bad) in adc fs out imul mov movsl (bad) and fmul (bad) fcoms imul jbe sbb xchg (bad) pop les jmp mov adc enter stc hlt xor (bad) fmul push cmp xchg (bad) movsl or and lahf mov aam mov or mov popf add leave arpl dec lahf (bad) xor pop push aas pop gs pop enter cld push dec add in dec mov jbe cld dec pop mov in pop mov ret push not repz pop insb pop scas insl mov je or sub and fucom and jl daa test or xchg mov push sbbb add and leave mov fldl out xlat lret sbb lods (bad) cli int3 in (bad) inc pop inc fildl mov icebp jnp cmp test or push movsb adc push dec cltd xor push cmp (bad) test cmp fmull ret inc ja mov xchg dec xchg fsubp stos mov (bad) (bad) je add (bad) es aam in nop shll xor sbb gs mov mov mov mov stc inc cwtl mov out mov (bad) cs mov sub pop lret shrl dec decl jge out loope (bad) insl arpl (bad) ja fisubr (bad) adc das add jecxz dec sbb rcr pop inc es ret popf aaa xor fbstp xchg or imul out cmpsl mov data16 aad dec jns xchg sub pcmpeqd adc enter mov jge cltd pop xor jp and add or stos inc lods jl adc xchg dec pop cld xor insb mov dec pop pop sbb add and mov shll (bad) mov mov sub fsubrs (bad) and movsb mov cli mov mov fsubs dec int3 inc pushf js bnd das sub mov mov movsb adc sbb mov mov push addr16 popa lds lds (bad) pop xchg jnp (bad) ja dec cmp sub sub fnstcw test fistpll in adc aam jns and dec aaa lods imul mov mov mov inc mov les sbb or lahf lds sbb xchg dec (bad) fstpt jp and (bad) mov jmp outsb cmp arpl cmp sub pop mov arpl sbb pop in pop pushw push xchg loopne test dec lret add (bad) out pop or ret (bad) mov incb sbb push adc (bad) hlt fcoml sbb push mov inc pop pop sbb dec inc in ret xor ss mov aad fbld insb (bad) (bad) jne and jbe inc adc sub adc push adc lahf mov test fldcw push je clc stc jne xor in stos xlat and pop push mov sbb lret mov push (bad) lea lahf sbb int3 sub or add jp mov fdivl mov loope loop stos xchg add andb adc inc cmc jle mov out sub jge mov shlw pop test bound xchg xlat in fwait xchg xchg push jae nop fisttpll pushf adcl cmp xchg mov icebp mov pop mov lcall sbb fyl2x mov orl xor jo xor xchg xor sub addr16 mov push mov cmpsl pop pop cmp jle fimull (bad) je iret xchg xor repnz movsl rcr in and fiadd sbbl sbb jge add popf mov (bad) cld pop jae push int andb xchg fcoml or gs lcallw sbb xchg fwait bound int fwait test cmp ljmp xlat fstp fadds inc cmp pop jmp mov mov mov out sub lahf lods cltd fldenv divl mov inc (bad) imul pop xchg pop pop aaa (bad) push push inc mov arpl push adc dec bound jge loop add and hlt xchg push fs (bad) cmc cmp pop adc push rolb jne push lret jl mov mov xchg and aas jns aad dec ficom pushf inc aad scas mov mov jne pop adc icebp push ss jecxz pop xor adc arpl push xlat dec ficom mov push (bad) aad push scas das test sbb mov mov push mov js dec fstl pop dec lock test xlat mov arpl bound add push add sbb jns daa jmp movsb mov push fwait push sbb push and addr16 sbb adc (bad) sbb lods cmpsb xor xor scas enter or in fcomp int3 (bad) (bad) xchg pop jb mov mov cmp sbb sub imul push mov inc jl mov dec jge fnsave mov mov mov and push pusha adc jne aas sbb icebp and adc sub sti pop cltd popf scas push mov xchg ss mov mov jge test jecxz or sbb dec stc imul mov (bad) mov (bad) scas push loop js bound push cmpsb or jno xor (bad) adc jle daa sbb sbb dec mov enter push test (bad) std push lahf nop leave add xchg loopne sbb pop addr16 xchg call or cmp jno or sbb sar sub outsl hlt dec repz jbe (bad) pusha pop stos or dec and jge cwtl push dec movsl test orps test sbb cli mov rcrb jmp push mov mov lds inc cld or jmp jnp and ret push cli or lret nop fwait sub adc pop xchg sbb int das jg and push clc ds in pushf mov leave cmp sti pop (bad) outsb sahf lret jg sbb test mov pusha mov movsb js push (bad) les rcr cli cmp jae ficoml push mov mov jbe test mov out scas mov pushf inc shl test push clc mov cld fcmovnbe cs dec lret and mov pusha es fimul pop cltd (bad) addr16 jmp ljmp mov lahf mov mov aam lahf inc mov mov cs inc fistp push arpl push xchg in dec mov mov jbe test enter out lea jg xchg dec sbb test cmp repnz sbb cwtl xchg inc out xlat faddl mov cmp insl push enter dec push jbe xlat gs push sub int mov xchg sbb fs cmp mov dec cmp das and xchg xor mov add pop cld dec xchg fwait and push lock adc mov out cld fistl push xchg mov push add ficomp hlt ret pop cli leave mov sub cmp and mov mov cli push cs stos adc (bad) aam fcomps push subl inc scas outsl mov or and int3 fnsave sub lahf insl adc mov lods mov dec scas pop (bad) xor aad aaa lcall pop iret mov inc repnz fildl inc or and dec cmp sub or sti imul adc in mov mov jecxz xchg pop lds loope jb (bad) xchg cltd mov (bad) pop lret mov ss xor adc xor jge inc mov inc xchg xchg inc data16 repz rep adc (bad) out jp cmp pop leave jno popa and in test (bad) mov sub mov scas adc xchg pop add jne js add enter fsubr sub lods das (bad) enter int3 push adc add cli inc aaa in mov jmp inc fcmovnu inc pusha add mov xchg sbb push andb jmp pop decl (bad) jle pop push xchg insl sub divl cmpsb add push push out aad scas sbb out shrb jbe adc int das cs shl xchg test sbb lret out les pop push dec out fwait mov sbb ficom ficom push out test pop js mov fwait pushf inc (bad) pop mov push xchg xlat aad cmpl or imul imull xchg or cmp mov pop sbb xor stos test jg xchg aad or mov fidivrl jae inc push lret add leave rcll adc dec mov cmpsb mov movsb shr jle je xchg ret cmpsl mov fldenv cltd mov leave dec mov movsb cmp mov ja mov mov mov mov out jns adc xchg jb inc dec and pop dec fnstsw pusha pushf xlat and lret les in lahf adc loop test fs jp xchg mov ds sub push and mov fildll push pop jecxz icebp pop push sub add mov cmpsl adc mov mov (bad) mov and pop mov (bad) (bad) jae mov xlat cmp dec mov or add sbb pop mov enter push enter adc push xchg int3 add sbb into jmp inc incl inc out movsl cmc les outsl push xchg push adc inc lea push mov sub bound sub pop inc mov loope xchg mov adc dec into cwtl jle jle lods or sbb xchg dec movsl js add mov ds les cmpsl or sbb enter pop incb dec (bad) fldl xor xchg push (bad) jnp out jmp adc test fistl int in jnp lret dec xchg (bad) in popa std sub mov les fisubr sbb mov push mov pusha in out pop dec int3 pop mov gs sbb mov push sbb icebp or out and cmp mov sub dec icebp push mov fcoms push imul leave imul movsl push inc sbb lods (bad) int imul incb rol add (bad) shl ss xchg mov add dec pop cltd aam sbb fs pop (bad) jne lret cmc cwtl or outsl out in push push aaa in orl bound roll cmpsb imul or mov insl lahf sbb rorl loope pop pop (bad) push xchg and push ds sbb je cwtl sub js adc adc fdivl adc (bad) sar cmp cmp lock xchg outsl lods xor pusha mov outsl pop pop in pop push bound in push scas jnp (bad) rcrl or inc int lahf push scas lods arpl sarb lret (bad) jae shrb push mov rcl or leave dec add ja mov stos ds lds mov fwait sub int3 pop or mov dec push pusha (bad) std test mov cmp data16 or int3 push mov sbb sbb movsl pushf inc repnz out daa push in dec and lcall jecxz mov mov sub dec (bad) mov out sbb fistpl pop in sbb adc adc sbb aaa mov fbld imul gs (bad) jne ljmp cmp scas mov mov xor cmpsl and arpl push push mov mov inc out or sub jns mov decl rorl in mov pusha addr16 fidivl into and aad pop sarl iret adc mov sbb test pop stos xchg in jp lahf mov mov sbb iret (bad) fcom xor inc insb mov lea ss mov cmpsb sbb mov mulb cmp mov jnp mov fstl fwait dec jb incb (bad) in test lock mov pushf fucom mov imul popf cmp pop nop dec inc mov sti in xor (bad) mov nop scas push aaa pfcmpeq jae lahf outsb lods or arpl cmp and out rcll sbb inc enter sbb call dec fsubrl xchg fstl imul (bad) aaa enter push jae aaa mov mov push mov push shrl adc ljmp push mov cmp lds cmpb xchg xor pushl (bad) cmc cmp pop push stc jecxz add jg mov (bad) in push cmpl lcall dec xlat inc insl pop or mov call data16 mov dec dec mov adc inc lods pushf outsl outsl test fidivrl fcmovbe call jnp mov lcall lcall mull add mov cmpl lret xchg or or imul and insl mov subl loop notb push roll lret imul test cltd rorb (bad) jg mov adc inc xchg xchg cmp fdivr inc xor (bad) dec in and enter repz lds cs push dec adc jb push popa jae sub mov gs xor repnz jne mov mov xor xorl sbb pop test push insl jg insl arpl ljmp mov dec (bad) addr16 lods jne lock cmpsl int notl or (bad) or xchg pop cmp mov push dec mov fstpl cmovne mov cmp mov jo adc js sub xchg dec int stos push (bad) fwait idivb cmp pop add jnp xchg aas jne push hlt sub lret lods scas imul and ret push aaa insl mov test add out sub out popf es push clc xor mov mov pop sub sub push jg dec aaa icebp pop repz loop fdivp pushf or xor lock das mov cmp iret out daa xchg insb int3 pushf cmp and add (bad) cmc or adc jae int xchg jmp lods test (bad) test pop inc les out or adc shrb addr16 repz push aas hlt and pop lods lods cmp sbb push inc push xor in dec and jmp mov pop adc cmpsl imul cmpsb jmp jbe outsb mov mov inc das inc adc (bad) enter int3 push (bad) cld dec jge pop outsl cmpsl cmpsl sahf sbb subl pop dec fwait imul adc pop sub imul data16 fwait arpl rorb arpl inc insb out loope dec sbb cmpsl jecxz call out ds aaa pop popa das sub je pop mov inc lods sub pop sbb pop enter ljmp mov cs shlb ret jp inc arpl push mov scas xorl arpl loope cmpsb in lds mov shll and pop cmpsl pop repnz or (bad) (bad) mov aam xor jae nop mov notb lock lahf push addr16 ljmp nop fisub aam (bad) cmc pop and lds ror not je bound (bad) jne loope rcll std adc pop repz fldt pop mov cmpsb loop cmp mov js aaa cltd mov dec mov js shlb adc leave test xchg aad lret pop in jmp cmpsb xor pop in and clc dec jno incl fisubr xor notb adc icebp pushf push in clc cmp xor mov pop cmp cli push ss gs or jne adc subl xchg in fsub mov and leave hlt lret add jo shll adc mov mov pop cmp pop add pop imul repnz jle scas notl fldcw push mov cmp xor aas mov es cmp icebp mov orl mov cmpsl mov ret (bad) xor decl loopne sbb pop ds test fucomip insl mov fwait mov ja adc add jae jne sbb dec into mov cmp xor popf and push cmc outsl dec rorb add and sub jg jno ja (bad) (bad) sbb ja dec jae stos loopne xor (bad) out repnz mov fild fucomi stc mov loop outsl aad or cmpsb addr16 sarb in push jge pop movsb cmp test mov pop ljmp int3 dec rolb xlat dec cmpsb inc cmp and lock (bad) imul lret jg sub sahf xor icebp lcall cmpl or rolb pop jge xchg mov mov push testl sub addl loope testb sub xchg sub mov jnp inc push rorb pop test (bad) lods loopne push or insl mov cmpsb pusha (bad) adc (bad) push mov insl add mov notl push mov popa test mov (bad) mov addr16 outsl (bad) pusha add jg xchg test adc mov inc and aad sahf inc pop mov ds std cmp roll or dec and push pop and outsb pop (bad) jbe (bad) gs lret sub das js lret test inc or cli dec jp insb mov jb xchg mov pop jb jb dec mov xchg sbb in bound movsl (bad) mov lock xlat ret mov rcrb mov xchg fs pop iret lock jb jne jecxz cmpsl mov daa incl (bad) dec inc js sub aad addr16 fnstenv notb jp mov jnp and sbb jmp adc sbb rclb (bad) rcrb xor push xchg inc leave xchg add cmpsl leave and mov add or mov pop outsb push mov mov jnp sub loope or mov test inc test sbb lods dec leave and mov test addb lds pop mov xchg imul ret push shrl and fsubrs adc popa or xchg lret dec mov cs and in test inc arpl movb xchg jge into insl fdivr mov lea movsb lret add pushl dec push mov inc mov (bad) repz or mov fbld pop add aam pushf cmpsl push into pop push hlt mov imul fidivl lcall jge add orl sub scas sub mov jae sub repz sarl sbb xor outsl cmpsb js test xchg xchg inc out xor lret enter push pop (bad) dec imul or in repz jecxz sbb mov leave repz push mov push adc push xor push mov sub (bad) movl mov push (bad) xlat cmp or adc and push out xor cltd push fnsave mov loop (bad) daa jle stos repnz sbb loope inc or mov push addr16 lcall sarb ja pop push sbb xchg out (bad) jno xchg mov cmp dec inc int3 mov and in sti hlt inc push (bad) cmc pop popa sbb lret xor jmp int cmp enter mov popf or add rol out gs cmp add dec xchg push imull sbb sahf mov stc lds aam and daa std sbb xor call ret sbb cmc les jmp iret adc in std ret repnz sbb cli sub xchg push fwait inc xchg aad jns and shrl icebp sub cmp mov push in (bad) stos cmp or mov (bad) aad pusha push (bad) xor and or outsl out (bad) call add ljmp jbe sbb adc mov in ficompl idivb pusha mov shlb repnz xchg mov or push fmuls aaa arpl mov sbb lods std outsl (bad) loope jno in sti inc pop xor fistpll fwait outsl sbb inc jnp push out sub add call jne clc push sub mov imul mov daa jbe or stos gs dec cmp mov push cmp aad xchg xchg (bad) cmp loope jmp or decl rcr (bad) je lret ljmp inc insb pop les inc jecxz fmuls push mov nop pushf loopne into mov sub xchg insl xchg push inc mov add enter sbb mov fcomps pop je andl loopne imul popf clc scas cmpsb ss adc imul ds mov mov bound pop and cmc mov insb jmp shrb fucomi sub push add xchg loope dec jno je push cmpsl insb pop arpl js jno andl pop pushf test leave addr16 cmpsb dec mov xlat push jnp lods add or outsl js popa and push inc imul push add arpl add loop mov cmpsb lahf and das lea andb mov movl or mov inc jp jg add repz cmp imul inc leave mov in push mov in ret out xchg jge or cmc jg mov jns dec xchg dec (bad) fsubr orb fcomi cwtl cmp movsb xchg add pushf push push cmp xor mov adc jle mov add sbb cli mov iret lea repz dec jecxz or lea inc push repz xor jmp push enter cmp std (bad) mov dec cmp push fidivrl sbb gs adc dec cmp inc mov pop mov mov mov xchg lahf stos js loope clc test pop mov lea mov and mov pop pop lret fsubl mov int3 in arpl call and enter test test xchg jle push jno mov push xorb sbb inc jl cwtl das addr16 dec ljmp aam lds imul fwait sbb daa push or fsubrs cs fsubs jae sub sbbb sbb and inc pop mov scas (bad) push jge jecxz into ljmp (bad) dec push jle cmp rolb test push mov aaa pop xchg and mov jl jne and push mov pop notl mov dec rcrl int3 inc out lods rol xchg adc xchg adc mov mov pushf popf cmp std mov clc stc push add iret (bad) dec ficom mov test decl dec mov lea mov mov repz test push data16 mov out pop sbb rcrb adc and pop stos outsb mov mov out cmp int add mov and and jne ret pushf pop bound xor mov loope mov sbb mov out jno hlt sbb push insb xchg aad jp arpl jl notl mov lcall xchg cmp push inc adc cli pop mov add addr16 (bad) sbb mov jno call in fmuls stos xchg cmp ret cmp icebp pop dec jno xor sbb outsl (bad) jle (bad) inc add push pusha pop jle push arpl fisttp ret adcl cli push ja xchg lea pop out aam and xchg push add out inc ljmp sbb sbb mov cltd or mov hlt ss (bad) loop nop push sbb pop loope test das or mov cld or test inc popf imul mov movsl adc mov fidivr jmp ds mov (bad) mov fs mov je add test mov iret ljmp mov test dec jne (bad) mov fildll cmc ja,pt and bound sar iret leave out das mov adc clc ja and pop test popf ret lods mov int cmc cmp ret sbb ja or aad jg adc je mov cmpsb adc sbb and mov lret enter xchg repnz test pusha psubusb aaa cmpsl push mov repz mov sub dec das xor ss mov out push (bad) popf mov jnp in insl dec sbb or pop ret (bad) sbb rcll js cwtl popa xlat mov fwait out xchg arpl aaa (bad) (bad) or outsb cmpsl pop stos mov cmovns (bad) jno jmp lret (bad) mov call shll and cmp cltd dec xchg addl push mov mov add xchg sbb (bad) push push cs shll adcl and jl add inc pop out icebp addb sbb jp cmp test (bad) adc pop fimul adc dec test stos inc cmp inc iret push push cmp aam and fbld push in repnz adc sub push push or in sub dec mov add test into sbb shrl mov sub adc xchg stos add jp jne pop movsl aaa ret and dec adc inc dec stos loop xlat nop mov stos (bad) add das mov enter ja sub jb popa ja ficom mov sbb call cmpsl xor lock xchg bound mov daa xchg push ss lcall xor ja lods cmc fmull lcall or jb xor cltd fbld nop mov mov pop push add pop scas ss test xchg or loopne dec sbb cld xchg lret ss (bad) negl fiaddl add sub cmp je shrb ret mov (bad) push ja fmuls out fistpll enter scas add call ljmp pop movsl mov movsl nop (bad) cmc aaa add adc cld gs mov jle jecxz rorb jnp jecxz pop jo mov repz in and out mov mov push pop rcrb cs (bad) (bad) sub nop repz mov repz add pop test (bad) sbb fidivl mov dec dec rclb xchg fcmovne insb popa out jno bound pop (bad) jmp xchg scas ret push std sub xchg sbb xchg es dec int fimul (bad) dec popf pop lds es clc jge mov pop jb in jb adc (bad) lods cli data16 push dec shr sti test out popf inc jbe stc push std mov dec push sub mov out (bad) sub ror iret mov in mov rorl (bad) jae and scas pop dec rclb leave jno xor and push push mov xchg repnz xor and in mov shl mov adc pusha fldt xor inc inc mov clc in inc insb (bad) ret mov rorl mov mov jnp jmp out clc lret popf test jbe add pop mov ret and loop pushl add add xor sbb xchg sar out sbb lock stos aas dec icebp ret mov (bad) dec cs stos push xchg mov test push pop nopl adc out cld xchg pop pop or mov mov jecxz mov andl xlat jmp add (bad) (bad) leave mov loope,pn ficomp into push sbb inc (bad) cmc dec push icebp inc daa inc clc je or mov mov mov cmp lcall mov out lock or insb sti insl lret inc and jmp sahf data16 (bad) jo pop and std out xor ret push sbb movsb xchg insl add cmc or xor (bad) je lret (bad) call test cs mov sti xor stos cmp lds xchg sub mov cld jg cmpsb stc (bad) insb movsb xchg mov mov add add jp xchg inc outsl jecxz mov xor mov out xchg mov inc dec jb ret lcall sarl pop stos sbb add pusha hlt pop test sbb adc pop sbb enter cltd outsl mov ficompl in inc dec fidiv push int or fcmovbe xchg test shrl jne pop pop mov (bad) xor mov jecxz mov scas xchg std adc addr16 mov and mov lret enter mov outsb cmc out cmp imul clc jge or adc inc sbb das test xchg mov into int3 sbb fwait xchg adc inc jae cmpsl jmp cmp call xor sub (bad) daa add or jns das out daa mov aas icebp leave pop fwait and xchg lret push or fwait add out add movl test cld mov out mov push cld gs push inc cmp ds jno xchg jecxz mov add nop sbb clc xchg lcall shr inc hlt inc repz js movl jg test mov fbld cld mov outsb mov gs mov int3 mov push inc push aas cmpsw pusha pop fwait int (bad) stc push cmpsb push mov popa ret stos sub stos push sahf jo es pop pop repz lret divl notl sahf arpl fildll movsb call dec insb ret scas dec adc cs cltd cs lcall clc adc adc cmp xlat add js imul (bad) repnz xchg jo adc xchg and out hlt sub (bad) pop stos pop xchg mov xor xchg dec aad jecxz popf adc loope jge add xor dec stc mov push test scas jmp shll sbb jns scas or lret popa xor lret sub dec xor sub mov into mov push int3 jb addb lahf enter or enter and mov rolb lret enter cmp pop and lret mov cld loop (bad) scas psubusb push fwait cmp push fsubrs push dec pushf push cld pop xchg sbb pushf adc sti pop sub xor sbb and cmp faddp xor inc lea fsubs sarb sbb jmp lock mov jl xor ja std push add cmp popa mov mov sub cltd jo inc xchg dec mov lock arpl cmp mov leave jg int3 push divl jnp cmp xchg adc push nop movsl adc add add fstps popa xor ljmp sub xchg stos fstl mov ja or adc sbbl add jae dec insb in arpl add test jns or add scas inc push loopne mov mov add les in pop push hlt push std ret adc push dec pop aad push outsl (bad) mov mov movsb rcll mov into push incl mov inc in push xlat int3 rcrl imul jne inc les sub or lahf lea push push test cmp or xchg pop jnp es dec clc fwait popf adc and dec test add adc dec out vpermd xchg jnp ss imul cmpsl inc jl mov int3 and mov sbb sbb subb xchg mov mov popa inc insl out fs adcb mov js inc jbe (bad) hlt fst movsb fistpl pop (bad) es jno in add mov push cli pop and loopne pop mov cmpl xchg ret adc into pop bound mov xor shrb (bad) jne sbb fwait test into mov adcl sub cltd nop bound cmp sti or sarb add xchg xchg pop mov jle add out adc push lcall ficom mov inc roll adc lock dec test xchg fldcw movl inc push into dec xor mov pop (bad) repnz cmp fistp rol pop test out stc and dec ljmp add dec mov gs (bad) xor jecxz in push sahf xor sbb (bad) jg jle pop sbb lea jle mov jl,pn jb xor jecxz cmpsl fldenv xchg fwait imul add mov aaa aad jo dec mov cmpsb test or push adc leave or adc cmp (bad) hlt fisttpl lcall push xchg xlat out in daa mov mov popf mov mov ficom cmp or add call mov pop or loopne ret repz push jb ret stc (bad) clc sub mov lock subl mov inc xchg (bad) mov (bad) or shlb pop cmpsb shl fdivrp cmp es daa out and push cmp or or call fnop jo cmp dec xchg (bad) pop ljmp push popa push arpl notl out sti test jbe enter fsubrs mov ret adc cltd jle ret dec add rcll xchg rorb push sbb pop inc pop or jns cld ficomp cmpsl int3 sub cli andb cmp lret xchg push dec fmuls jmp sub aas push sub es inc fistp add sarb and sbb mov push or sarl test shrb jle mov pop lret sti sbb pop in xchg mov cmp mov out fistpl repz dec add cmp ss xor add sub jbe fsubr hlt test loopne xchg scas out fistp in xorl mov cld cmp pop into clc mov pop or and mov stos out loopne xchg sbb pop mov and xor stos fiaddl or and mov bound shrb sub jae jle aas cmpsb imul jp icebp sbb inc jb pop out imul imul mov stos imul popa dec sbb popa repz dec xchg pop shrb mov test dec ret jns fildll xor and incl xchg xor inc add and insb in or add aaa adc mov fs push and cmpsl (bad) push movsl adc or lret mov mov lret arpl js movsl sahf mov mov aas jge add into xor (bad) lret in pop pushf adc in in cmp (bad) hlt ret xchg je jmp sub cwtl xor fnstcw mov sub lock rorb xchg adc adc inc dec or mov cltd fwait and (bad) mov pop xlat mov dec lock xchg inc addr16 std test jno leave int (bad) cwtl daa inc mov lods sbb int3 dec mov pushf adc scas mov or pop jecxz loopne xor mov inc daa adc nop mov cmpsl sbb loopne xchg ficoml dec jg sub xchg frstor or xor aas or xchg push lahf idivb xchg cmp insl jg inc jae sbbl dec add pop or fwait push daa or mov jg jl jmp (bad) or pop out sarl or adc cmpsl cmp iret ja add adc gs inc pushf or jne pop jbe mov insb sbb push shrl lock jae fwait pop pop jecxz and mov mov outsl cwtl and gs jle fnstcw out outsl mov mov xchg pop jle jmp out adc arpl ret mov add and lcall pop into loop insb fwait mov in dec (bad) sub jae pusha aad es mov sub icebp push aaa mov (bad) mov aas pop mov push popf xlat inc ds xor roll push movsb xchg cli add mov mov and sub daa icebp into rcrl das fidivl mov std inc sub insl gs out add cmc mov scas mov jb sarl or flds leave jae pop mov in cld and pop loope xchg aas mov inc lret mov mov jns leave shrb sti jbe je jecxz (bad) lods lret es mov mov mov xchg int3 jg in mov jge push mov sbb into push les jno cmp pop pop rcrb jge mov jb inc mov gs adc dec sti cld sbb mov imul dec mov adc jle mov sbb in sarb mov hlt popa xor std sub ds cwtl imul mov call dec adc int push mov add jne lds adc nop ret jmp xchg xor daa pop fidiv xor int xchg mov cmpsb aaa lds jge rorl and js inc xchg lock icebp andb sbb add pop pop in push and idivl and repz ss jecxz cmpsb add push in pop inc ret outsl repz shl jno mov push push push pop out std ds shr dec iret mulb imul dec sbb xchg pop lahf or mov pop in lret mov out out in dec fcmove cwtl push cmp xchg xlat jno xor xor popa or adc pmullw or jne ljmp push jno xor (bad) cmp xchg out lcall or aam ret in das inc cmp xchg int3 mov pop xor cmp jb sub syscall loopne leave clc mov (bad) cmp add ja mov mov cs adcl arpl push shlb fwait or fucomip and lods adcl inc sub add dec in add inc sbb fisubrl adc sbb push pop mov loopne (bad) push movsl ret ss xchg mov pop gs dec and fcoms int3 sbb fadd test pop sbb dec std push inc loopne mov jo mov notb or iret ja shrl fldlg2 fdiv push jno aam jp,pn or lds xor hlt icebp (bad) mov and icebp jle fbstp xchg aaa lcall clc addr16 sub dec xchg in ret sbb cld push mov les lret add add mov mov mov ret and xor adc cltd and out inc sbb leave sub sbb xlat (bad) cwtl push push lods loop sbb xchg aad adc xor stos leave (bad) pop xchg shr sahf jle enter mov sbb jb std ss stos jmp cmp pop or inc mov sbb in push fildll xchg ret mov lret lock lock lods jl,pt add es cli rcll push add imul xchg outsb ret sti xchg add rcrl (bad) and xchg sub sub fldenv ja sbb dec xlat fimull cs and outsl (bad) xor fdiv mov xchg (bad) jp cmp jae push faddl (bad) out les lahf sarl add data16 pushf push cmovnp es outsl pushf div rcl (bad) (bad) aad cld push stos inc and cli push xchg add jno jne fisttpll xor aaa lock repz int out push lcall sbb jns out push jecxz jnp adc daa stc shrb lods sahf jbe push sub (bad) outsb jb imul dec cmp xchg andl lcall call xor xor dec dec movsl icebp das bnd sub jo dec (bad) sub sub sbb or rcrl dec and and ret adc repnz test dec movsb test in idivb ret (bad) mov ror push and (bad) gs arpl sahf fs into add jno add pop insl in faddl push std out insl ljmp push mov push (bad) push aam pop jmp (bad) mov mov sbb sub fwait roll popf xchg mov fwait xor gs mov aaa push cmp sbb cmp mov inc mov or rorb call xor daa and cmp arpl mov cwtl mov sub adc push fmull hlt mov adc jmp cmpsb cld insw pushf and pop fidiv call or ja push (bad) fstl sub testl stc jns mov mov xchg add cmp or push fwait (bad) pop jbe inc movsl dec cmp in add pop cmpsb jmp pop lcall lods add ja sub adc mov xor cli rcll mov mov lock xor mov add aam push inc jl inc or (bad) jge push lods pop int f2xm1 test xchg test add call xchg add jb mov lock lret popa xchg rorb (bad) ret or mov js hlt arpl clc xlat cmpsl jb push inc dec inc out rolb xor and pop xor loop mov adc cmpsl lret cmp inc sbb or xchg fldenv pop loop test adc in aam mov movsb outsb mov mov fmulp pop pop movsl mov lahf mulb imul dec inc loop mov outsl or in ss cli sti outsl sbb inc xchg stos std mov inc cmp shrl inc inc outsb std mov stos mov sbb lea bound aam repnz push popf inc sbb xchg dec jg jo mov sub mov mov stc clc push loop das dec outsl fldenv mov inc adc xchg repnz imul dec push adc adc pop mov and pop or icebp adc mov cmpsb lret outsb std mov mov push cmp push push shrl xorb rcr mov fcoms into sbb mov ret clc inc nop insl cwtl (bad) sbb pushf push inc push iret sub jne (bad) jge lods jb mov outsl cmp sarl xchg (bad) cmp cmp fimull (bad) rorb sarb ja inc and xor push inc xor lret jb and lock and (bad) dec mov pusha sbb sbb fnsave mov imul mov xchg sub push pushw mov add push sti xor call mov (bad) in imul mov insb mov or jbe mov mov das mov in mov cld xor jg pop push hlt push rcll scas jle jge cmp sub jb xchg sbb adc hlt xlat push and pop adc mov imul fsubrs lods and xor xor or lds repnz gs cs jle sub sbb mov push fldcw pop roll or push push dec sbb mov adc inc (bad) setb inc mov mov mov decb movsb lds sub rclb arpl movsb mov iret adc mov out inc xchg aaa icebp mov pusha fwait sbb ret jl mov iret cmp mov xor pusha arpl xchg mov je and shr sub jecxz push nop js loopne xor sti addr16 out fistpll push rclb (bad) out add je or loopne jb nop outsl mov push adc mov stc roll jnp sahf test sbb enter or jp inc mov (bad) addr16 daa adc outsb cmp pop xchg fsubs sub stos sbb sbb aas aad repz les add ja xchg cld sub and adc xlat or cwtl adc mov sub ljmp call ja pop out push rcll pop std arpl jb jmp fild cmp hlt lea or xor outsb cwtl daa stos xchg ja mov mov xor mov lods add mov icebp mov push (bad) fcomps mov sbb sarb negb rcrl pop rol mov leave lcall js (bad) repnz sub popf inc cwtl xchg pop sub xchg sbb adc add cmp sbb pusha movsb mov cmpl out ja in mov out je jno ret es inc int3 pusha mov pmulhuw mov shrb movsl (bad) xchg repz xorl lock cwtl (bad) cmp mov repz or pop cli mov dec in cmc mov aam in cmp pusha jbe xor imull jge sti add xor pop loopne mov sub and ret je mov shl adc out mov push popa imul stos cwtl pop xchg arpl repz (bad) xor mov out mov or pop cltd dec call and nop and mov out dec jmp lret (bad) lret jp mov jp dec popf cmp (bad) lock (bad) xor xchg cmp sub sbb addr16 xchg fsubrs or ret repz bound lcall sub mov jecxz lcall cmp cld xor xor in mov popa push push mov mov cltd lret leave or dec mov in fs orl int3 je and fwait cmp inc pop out sbb sub lods out xchg cmpsb es repnz inc sub out lods add mov enter loop sbb fsubrl jne pop ja outsb mov (bad) mov mov sub enter mov in hlt lds sub idivl mov pop mov fsubp mov dec mov leave xor add rcrl cmp cmp mov sbb mov pop pop xchg (bad) cmp fidivrl jae xchg popf pop pop inc xchg fdivrl add pop rcll aam dec sbb push negl adc idivb int bound in mov push and loop cmc adc mov sbb repnz lret pop mov nop jo rcll xchg rorl jmp pop inc xor adc mov sti (bad) (bad) mov inc std xor inc sub into scas bound (bad) cli out cmp pop mov sarb jecxz adc in cld and cmpsl mov fistpl cmp pop out dec fdivrp sbb je (bad) xlat add jno iret sbb fdivrl xor mov push sbb add cmpsb or movsb negl jb in adc fs jg jecxz jno and mov or inc repz push pop insb flds in push mov orl and out dec push push pop in jmp lahf lods jg aad pop (bad) or lret or dec repz push sti mov fmull pusha pop and lds inc mov jle aam imul pop and xchg cmpl mov fsubrs mov imul add mov jns or cmpsb push push imul mov jne jae es add cmp dec sbb fwait adc jecxz lret lods loop xchg pushf mov mov mov mov in push add sahf cmp lods xor sbb fwait pop movsb sahf push sub cmp pop sub ljmp push or inc cmc or popa fistp aad pop mov pop or popf dec dec lds clc out mov jbe (bad) (bad) outsb sub mov adc mov mov ret in or dec mov push cld leave push inc shrl dec sbb loopne jb jae dec sub sbb mulb inc sbb pusha inc in or popa xchg mov inc stos push inc mov das fwait scas lahf push xor xchg mov mov add jmp int jne je or popf push jno lcall push loopne roll or lcall jmp push repz movsb or clc das fs (bad) and into ja jp and fidiv xor cmp in push enter cmc lods mov add mov sub push or xchg ss inc imul mov xchg imul push or adc mov lahf and dec das sbb cmpsl out xchg dec mov pop (bad) mov fxam cli bound aam cmp jns or adc bound xor or rcrl shrb jo push sub jne sti or xchg out pop fist popf popf (bad) pop (bad) sub adcl pop and jo stos fnstsw mov out jns push mov or sub sahf mov popa (bad) mov lods mov aaa push ret (bad) loopne in gs and jnp inc clc xchg mov jae mov (bad) cmp push sbb inc and push movsl pop mov sti xchg lret mov push adc fdivrs decl fnstsw fnstenv dec or xor lds mov and mov ret ja sahf dec mov push (bad) mov cmp or xchg adcl adc cltd pop inc pop movsb push xor imul or jns sbb cmp pop xor test scas adc lcall push fucomip xchg leave test jb or scas stos imul and popf out out in lods test cmp stc stc jae fcomps bound enter mov cmc and scas jge (bad) dec insl adc lock insb test pop adc stos (bad) sbb adc insb inc ror push pop xchg dec icebp lahf xor je xor les bts test in ret or shlb or into mov hlt push push incl in pop js add aaa sti pop jns sub xor mov les mov idivb xlat xchg sub xor ror fidivr dec fisubrl jne pop adc imul push fldl or sub sti into jmp add fucomi enter outsl jb jecxz mov (bad) and xchg jnp pop dec es and jg jne pop mov outsb jbe aam dec jnp (bad) cmp adc sub and int sti pop popa out pop push or jnp in xchg sbb hlt jne rclb flds jp das inc cs jmp inc daa pop inc push movsb cmp adc (bad) sbb jecxz jl mov addl mov add inc add sbb pop shlb pop (bad) jo call add cmp aaa push mov cs and mov dec insb shr fsubl fcomip mov ja sbb xchg lret mov ja ret ret imul adc mov movsb (bad) fsts and out daa pop pop repnz adc cs lret or sub xchg pop int cs cltd cmp outsb pop jecxz push arpl std and in lcall iret sbb sbb fxtract loopne cmpsl roll in rolb mov and sbb mov or mov jb into pop ja aaa add aad pop pop push xchg in dec notl cs (bad) mov adc (bad) xchg es rcl xchg in out inc loop,pn cmpl cmp xchg cmc add mov cli jg and stc test outsl dec lea clc ret adc xchg cmp (bad) push jns ror mov fwait popa dec popf mov xchg push mov xchg movsl sbb leave dec mov sub shr mov xor js scas repnz dec mov mov add adc pop shll lahf mov out (bad) inc aam sub (bad) mov push xor in add sbb outsb pop jl rolb fldt adc frstor or lahf xchg add loopne push test mul pusha cs (bad) lret faddl lcall roll sbb lds (bad) mov (bad) xor fsts sti addr16 jo jp dec or and mov arpl mov adcb bound ret les xorl pop dec pop insb aad test mov and test jmp push inc jp xor movsb aad inc push popa faddl adc (bad) imul mov ds loop mov ss mov pop adc popf aas test (bad) xor push inc jo scas jae fcompl sbb jno sti xchg lcall inc das (bad) stos inc shrb imul test mov mov jge cli push inc jmp pushl pop jno es cs mov jle jmp push cld cmp lods mulb stos jg jnp or inc jecxz test and inc mov loopne mov mov mov repz cs lock call ljmp dec test push hlt (bad) fidivrl decl addr16 (bad) fwait mov gs stos pop insl popf cmp push mov jb xor mov ret mov movsb lods cmp dec mov xor pop das sbb rorb inc das iret mov xorb inc test push out iret or jno adc dec repz push cmc mov xchg jmp mov and mov (bad) (bad) out sub jge loopne xor jbe adc (bad) inc punpckhwd mov or roll and roll (bad) daa insb xchg mov add unpckhps out or jae stos imul scas lahf xor sbb dec lcall nop ss arpl and (bad) clc xor mov dec fxch add dec mov push int imul mov dec adc imul inc adc mov lods mov and or lea test pushf popa add and adc fstpl mov in fdivl jp in or jp pop mov push push ret loop fs and pop outsw push push push aam push and sbb in movsb mov or in inc ljmp push daa sar test mov jae lea or cli ficompl push iret mov pop rclb mov shl into stc rcrl pusha push imul ror repz sbb out ja enter or insl sbbl xor mov (bad) addr16 pushf fistp mov mov pop (bad) jns or push mov sbb xchg or insl jns mov dec pop mov lock add sub fcomi ret and mov fimul cmp test fcomps in (bad) cmp sub dec aam jle mov es sbb movsl xorl dec inc cmp push (bad) cs mov cmp sbb xchg cs dec fldl inc xchg mov in (bad) std pushf xchg and ret mov cmp aas cmpsb (bad) fs cmp mov scas cs out sbb int3 scas les jg mov push inc data16 mov mov adc std (bad) std mov inc lea test lret ret add repz mov aam xchg inc push xor push fdivs movsl inc mov lret mov int3 inc xchg out add xor mov mov cmp out lods fwait gs cmp sbb sahf xor cli xchg dec imul test daa repnz sbb (bad) (bad) mov mov popl xor icebp xlat xlat push gs imul stos decb repz sbb call xchg cmp jg jns cmp xchg (bad) adc jl pop pop in popf push push out add xor cmpsl mov mov dec xchg and lea test and jl insl xlat fcoms xlat sub (bad) in cwtl popf jecxz add pusha jg ficomp (bad) icebp (bad) rolb jno mov lock ljmp (bad) and xchg stos and enter psubsb mov mov aad xchg icebp test sbb cmpsb push push stos inc ret fadds jo adc push call sbb in pop jae pop fisttp add xlat xchg icebp sub rclb outsb jecxz (bad) int in popa dec call mov test mov xor adc mov cmpsl jl mov pushf and xchg arpl cmpsb cs cmp cmp repz adc and cmpsb lcall imul push mov scas cvtdq2ps aam inc daa xchg dec nop aad and call push rcll loopne mov loop mov je ficomp add decb xlat push mov inc iret mov mov xchg (bad) push fistl push push mov mov aaa movl lret roll shll push adc inc aas fistpl (bad) (bad) into xchg mov es js insb out imul pop mov lods push mov pop jecxz mov daa (bad) jo push xchg insb (bad) push in js insl cs xchg je inc and xchg adc imul test lea pop dec data16 call sbb fmull stc out and mov mov adc fdivrs dec lret adc and pop xor pop popa or pop mov and shll (bad) xchg mov js addl std insb outsl push jmp rep sub out fistpl and stc jns lret sbb sahf push xchg mov insl and cwtl mov int3 fdivp inc mov and cmp cmp leave lret popf push out and movsb cwtl jg fisubl cltd jbe pop xchg pop dec push mov out insl cltd push xor fstpt mov test xor or cmpsl scas or adc push aam faddl mov movsb push push lret lcall pop hlt mov ret and add add jbe jmp xchg (bad) mulb test and dec adc dec mov pop cmpsb stos sbb jle pop or movb push adc dec pop mov imul cli sahf sub cld das mov sub ds fild arpl pushl adc mov (bad) insb out test add rcrb pop lea cli xor cmp sbb xor nop aaa hlt imul movsb dec push sub into insl aaa or test roll cmp mov sbb push mov mov stos xchg nop repz popf (bad) cmp mov add fisubl icebp cmp dec lret mov sahf xor cld je xchg inc in sub clc sub call dec add (bad) imul outsb cli jb and lahf nop jge xor sbb dec xchg jmp add (bad) add mov pop mov lahf xchg shrl jmp fsubrl sbb (bad) or inc out dec in push jae nop cwtl pop shrl pop ljmp mov mov jmp lret mov (bad) hlt stc ret fcmovnb daa mov mov xchg leave (bad) xchg mov push jae out stos lret mov mov dec mov mov insb inc jecxz test xor nop mov xor fistl sub mov xor xchg iret imul inc cld pop nop jp mov hlt test imul jmp jbe (bad) pop mov cmp add xor fnsave mov mov call mov cmp and rcll sub inc addb mov daa stos adc lahf cld std fadds mov sbb paddsw fsubl (bad) inc push xchg decl jmp adc mov arpl sbbb adc inc dec into mov notl mov movsb lds jnp mov scas push test dec loope pop hlt and push (bad) insb push mov push jb ja cmc mov outsl push aaa sub test shrl iret stc adc adc rcr orps push fucomip push aas jae sbb and ja pop jg andb lock and or adc lcall dec mov push cmp cmpsl popf pop aam xor mov xchg cmp pop aam cli fs adc pop cmp and xor notl ret (bad) cmpsl pop leave pop incb mov xor int3 mov adc cwtl mov (bad) xor adc je test mov or mov xchg cmp mov cs add data16 (bad) fisubl xchg je ja dec loopne shr mov jb ficompl sbb cwtl mov mov lock outsl fwait test mov les icebp push and pop inc cli es arpl jge mov push add cld cli pop push repnz int cli and xor test fs mov xchg stos add ja incl std pop and pusha cmp and inc dec cmpl mov cmpsl or jmp push int3 add enter cmpsl test xchg bound loop jmp (bad) mov inc loopne pop lock add mov int aas pop sub jg push out adc daa paddsb dec adc shrl and mov test dec lret and rcrl loop mov xor (bad) lea out or and out popa pop rolb dec lock xchg aas fadds jae pop push pop dec add push test lahf hlt push faddl xlat nop push dec pop ds (bad) push in pop pop xor call inc mov push inc mov add or scas scas hlt mov sub push pop ret mov repz es pop sub pushf fwait bound xchg and lahf inc pop test fldl test dec mov repnz xor jmp into idivl leave (bad) leave dec paddsb cmp lret lret fnstenv mull dec mulb or xchg inc sub add dec jbe jnp in gs pop sub mov dec and or popa mov (bad) in add imul pushf or xor push xchg mov cwtl mov je pushf fistpl (bad) pop movsl mov or rolb push in push (bad) adc mov js (bad) xchg mov xchg pop inc mov cwtl daa xlat sub mov xchg push push les fwait shrb mov lea xor or xchg int3 rcll push insl out mov ja enter mov loop les outsb pusha and (bad) push or mov shlb xchg (bad) mov cmp jb push pop into loope sarl push inc mov dec sti out fldl ret subps call pop lcall (bad) jnp stc jecxz popa mov data16 pushf (bad) repnz mov (bad) out es add jno into dec pop mov popa jle and mov arpl dec out mov or pusha in xor call jae fnsave out cwtl mov sbb scas xor dec add shl (bad) cmp add and sbb fadds mov in fs jle popf push adc rorl xor adc inc mov push lods aam int clc (bad) repz mov inc jb adc pop iret shrb ret cwtl inc mov pop js and sbb stos jecxz fbstp xlat mov pop jmp xchg pushf xchg shrb jno mov rol loope jecxz jl jno or (bad) xchg cmpsb mov repnz push loope imul xchg push push xchg sahf cmp adc addl xchg movsb ret cmpsb mov (bad) push and cmpsl jl or add dec inc jne lods sbb ss cmp mov mov aad test scas push jb xchg lock xchg mov je aas ljmp dec arpl cs mov xchg xchg jbe stos push ljmp (bad) mov ret lods jo pop xchg pop and sahf int in pop int inc repnz dec cli xor jp fwait xor push mov (bad) iret mov jbe push into pop cmpsb test cmp add loopne lret rcr movsl mov xor inc lods scas ss xchg hlt and test or pop cmpl sub jl sub inc jmp xor mov lsl cld sub ds add dec lcall cld mov push inc cld inc insl push out insb fidiv lods or add cwtl sti inc out inc mov push push inc inc xchg aas and mov or icebp and jmp aaa add xchg cmpsl insb arpl rolb and push cmc pop movsb jae cmpps in xor pusha inc (bad) cld lds inc mov xchg mov jbe and (bad) mov push push jbe vmovddup mov adc je xlat push lret push jecxz dec mov sahf jl sbb hlt movsb push jnp aaa lret je lock lahf cs lahf call adc cli add loop add xorb jmp (bad) testb loope mov je sub jbe mov sub in and cmp dec popf out in push testl mov dec sti jae xchg gs in loope xor dec loop flds add push inc dec pushw ret inc cmp jge fdivrp fsubrl or mov mov test sahf ffree outsl lcall xchg pop popa dec popf push addl stos sbb int sbb jno cmp push roll mov pop aas jp fiaddl cmp cmp lods pop mov mov cli repz cmp mov and push cs pusha js lock mov xor (bad) clc js cmp push adc mov sti adc movsb cmpsb xchg dec or sbb addr16 and inc push or jg or nop ds hlt xor (bad) out (bad) mov jbe dec rcl sbb (bad) cmc (bad) or out xchg cmp dec xchg fs jo sbb dec and sbb xchg lret dec pop pop insl cmc xor std adc add mov scas push popa sub (bad) leave lods add gs mov lods push jns daa or (bad) inc ljmp loop (bad) jmp pop sti fdivr incl xchg inc aam push adc shlb add sub test outsb lret mov cmp dec mov jnp int xchg xchg bound mov sbb pop push es test jmp xchg notb jmp jecxz adc enter test sub and iret mov js jecxz data16 ds fiadd mov lcall std rorl inc push adc aam dec push (bad) xchg inc or cmc js cmp xchg jp in inc and cwtl nop nop pop push add cmpsl lock dec adc pop mov sbb fcoml add aam add sarb mov iret outsb pop xchg sti cmp push pop mov jbe or adc jg pusha inc lahf scas cmp mov mov xchg jnp es mov add add testl mov and pop inc lods lret cmc xchg (bad) and sub sbb test out pop pop and (bad) cmpsl outsl pop out cmp xchg js lcall test dec test fcomp std inc mov add dec xor movsb xchg inc push add jns call jb enter mov insl in aam adc pop xorl jecxz inc pop push dec rcll xchg ret mov inc and or dec scas test xlat inc xor pop in (bad) lea jmp inc cmpsb (bad) xchg pop or test fsts xchg dec xor data16 flds test mov dec in mov inc es out mov daa xrelease mov or (bad) pop xchg insl insl cmp (bad) enter adc xchg imul test xor lcall sub movsb inc xchg popf jmp mov insb inc mov cltd dec mov sahf (bad) mov stc push shr mov add scas enter fmul push mov inc fnstcw (bad) es sbb js jle pop add dec clc shr les movsl js cli cmp in and or xchg hlt push xchg ret sti push arpl jge adc (bad) fdivrl push lret cs push push in in xor and (bad) jns jle sahf push iret push or fmull xor into (bad) cltd gs les outsl das add popf data16 or lock inc (bad) xor shrl xchg adc mov in addl (bad) mov sbb (bad) push sti xlat roll test sub inc inc mov and jge (bad) adc aam mov hlt cwtl xor imul dec adc jp stos or xchg out movsl cltd xchg stos scas jnp daa cmpsl mov int3 fwait out xchg lahf ss xor sub addr16 cmpsb mov (bad) pop mov sbb and fsubr fildll pushf popf push repnz mov cmpsb xchg aad pop fnstenv clc cwtl jl mov cwtl into mov mov test lock ja pop push popl out sub fnop mov lret jle add jmp aas and (bad) or and mov xlat outsb dec fisttp push test das in js aas pusha subl gs mov aam (bad) fidivr jae jg insl aad les outsl les dec pop dec out pop inc or sub mov xor ss ds nop icebp ret push idivb ret out iret in xor and aaa stos insl jmp test outsl jp mov movsl mov jns testb cmp call les xor inc (bad) loope lods xchg pushf cmp or dec inc adc push js arpl jecxz push cmp cmp xor jne rorl js jbe fmull inc mov jmp xor inc (bad) mov push (bad) xchg outsl add push sbb inc pop mov je repnz jle or xchg or add daa xchg movsb xchg xor loope (bad) xor std into mov (bad) mov es sub lret repz decb or sub xchg jecxz or scas sbb ds testb xor pusha dec push loope jns lods int3 pop mov mov xor jb test (bad) mov (bad) negb mov xlat mov mov incl movsb pop sbb xor sahf or mov inc (bad) push sti fiaddl push sub in test lds ja mov lret jnp inc inc outsb lock xchg out adc jae shlb repz or int cmp in lret (bad) lock roll xor testl jp sbb insl std push repnz fcompl push shll mov mov movsb jecxz sub cmpsb repnz stos rcll std xchg jmp pop pop in in test (bad) jg dec xchg cmp cmp (bad) dec iret add lahf or mov pop jmp orb mov out in test adc bound sub dec loope cmpsb jl adc repnz rcll push sub mov iret lods lods testl aas lds call loope test inc lret movl int lcall (bad) or xchg jno fsubrl lock xchg adc lahf sbb int clc hlt mov sbbb mulb xor ret outsl push and xchg shr dec add cwtl cld and dec lcall in ret inc hlt add cmp cmp dec adcl (bad) jmp sahf dec ret aas lret mov test mov jns outsb bound and adc mov repnz xchg and negb dec jae sub push pop lock dec rcrb ja inc test and cld in mov fstpt cwtl or js adc test mov rcrb leave popf test mov (bad) movsb rcrb sbb mov mov xchg aad adc dec jae pop dec pusha cmpsb or or inc mov sub pop popa imulb add (bad) jg and aaa (bad) xor mov adc es pop insb pop fs pusha hlt lods ss mov cmp push ret outsl gs cmp fistpl push sahf fadd out popa xchg mov hlt jbe imul lahf rcll mov push mov out ret fstpl fstpt rolb jle or mov into jnp ja sar icebp rol inc hlt mull mov ss or pop cmp roll rclb and mov int3 fmull mov out pop and mov mov pop dec push mov lcall test dec cmova cmp push adc mov mov jo negb xor inc ret sbb dec cld jmp add sbb (bad) fcoml cmp dec sbb sti xorb inc and jg jecxz push test movsb fildl mov xorl cld fimul insb xlat lods pop cmp adc pushf stc pop jge test rcrb sub sahf fisttpl push mov dec jae xor jecxz idivl lcall xchg push mov or stos sbb inc sbb les bt sub mov or pop lahf sahf test ss aaa push dec shlb in mov sbb in jns jl scas jno mov gs mov fnstsw insl loopne push outsl dec mov jb mov pop mov movsl pusha adc repz jae pop cs cld mov jmp pop and mov stos jnp or out pop pushf mov xchg sahf xchg imulb popf dec cs push jmp push pop fildll adc xor or dec lahf fdivrl mov cmp sub movsb hlt xchg rol and fs insl popf jle bound aaa les stc push (bad) icebp ret adc cld or aad mov sbb mov push xchg sub popa cmp das rol (bad) aad dec pusha pushf inc arpl cltd test fwait out int3 in lret into pop repz lods pushf and (bad) into xor mov pop dec mov popf orl clc pop cmp lods sbb dec (bad) push mov arpl (bad) imul rorl push call or es inc addb fwait push push inc lret fcmovb jg or loope cmp ret into jnp jnp fidivrl insl jne dec or xchg cli pop xor mov int3 out ret divb mov ja xor jns es ljmp cmp add push movsl aaa jne lds and sub xchg mov inc inc or adc pusha loopne inc adc js aad shrl aam pop ja (bad) fstps adc or ljmp fimul jno lods sbb inc and xor cmc xchg push push add mov cmc push dec aam loopne adc fimul lret or ds dec jo push xchg repnz sti std xchg push clc add add loop (bad) pop lods les fsubl add repnz outsl jno aad mov (bad) pop into in es mov add pop stc dec lods ljmp lock pop out xor xchg dec push mov mov in cmp nop mov mov or or dec jmp in mov popf pushf call cmpb sub pop push add xchg push pop and sub out push nop call fstp lods (bad) (bad) push and scas xchg pop loop lret nop/reserved inc test push std mov pop (bad) cmpsl pop and jl cmp icebp dec add push cmp push jmp jl mov mov jo scas lahf cld or push cmp in fld push push push inc pushf dec or int lea mov sbb mov pop stos sub pop sarb aam mov fs push add idivb mov popf add test ficoml add xchg cmp jp mov shlb mov int ret xor xchg push in out cli clc sub jp jge inc mov in cmp arpl jb lock leave popf cmp lods jmp inc push push pop into add add mov pop mov test xchg in sbb lods test stos sbb roll push cmp dec jne (bad) cmp in cmp icebp push outsl lods xchg out test cmpsb mov js jne ffreep sub cmp push cmp xor sbb mov int js xor imul fidivr rol stos push inc outsl popl fnstcw xchg sahf pop or or fs imul cltd out fs scas ret inc rcrl add xor data16 (bad) pop out cmpsl bound clc data16 fisubl add cs into rdpmc adc pop add push das out cmp pop enter add add push xorl test icebp fs cmp add sub fwait mov sahf mov sub push lea test stc sbb rorb enter ret adc jnp and cmp iret loopne sub (bad) or (bad) (bad) outsb incl push cmp fstps xchg xor into int3 lret (bad) jo js push lds test in (bad) jne ret mov cmp movsl bound add jb xchg lahf in fmull adc and out bound lahf aas aaa inc pop or adc add data16 movsb push arpl push or inc xor jae push sub xchg lods adc lea iret push dec call xor push (bad) and stos sbb sbb iret pop fmulp int scas test repz add inc mov into adc mov jg pop loop mov add push ret pop or hlt or dec scas or fsubrs mov cmpsb decl addl gs xchg fwait je sarb outsb sti mov mov jno out fwait dec imul cmp push push hlt mov inc shrb mov mov jb ret aam in in movhps xchg pop ficomp cld orl arpl cmp out loopne pop hlt pop in gs ljmp mov xor add call (bad) or popf xchg int jbe daa xchg jnp adc or stos sti mov inc fidivrl fisttp lods adc sub fnstenv sbb sti (bad) scas movsb jne adc cmp call lock (bad) push adc sbb ret in xlat lock sub cmpsb xchg loop dec stos iret mov push bound dec (bad) jmp sbb into adc pop pop ret sub mov (bad) outsl adc imul fidiv sarb insb lea push cmp add mov addl mov (bad) jl jbe mov xchg into sbb fisttp pop xor addr16 lret xchg mov cmp push fcoms push push cmpl ja (bad) jl dec iret (bad) jle insb add ja sarb scas xor pushf mov pushf push mov imul inc les addr16 inc jl mov jmp imul jo dec repnz add movsb or stos ljmp cmp mov mov pop jmp adc aam (bad) cmpsb outsl xor roll repz mov outsb repnz xor test or adc ficom xchg cmpb cmp lcall mov push lock jg jg imul push cld in mov mov inc jns push sub pop in mov mov mov jb cmc popf fstl (bad) lahf pushf in divb lods fs jle cli cmpsl pop (bad) loopne pop jge pop jo out mov (bad) scas cmp jmp jecxz lret lods or cmpsb in hlt insb push jbe pusha xchg sbb (bad) popf or mov (bad) mov jp mov pop jl sbb addr16 cmp xchg mov mov or lock loopne sub or cltd cmp or xlat push sti (bad) jne xor ljmp (bad) je call repz xor jg xchg push xor fsubl das aas mov jecxz (bad) mov mov and daa xchg mov test iret loop pop in cmpl std fsubl cmp mov and sbb cs out push inc mov std push (bad) (bad) vpaddw gs dec inc and das fsubrs jmp jbe cltd lea jmp jl mov mov inc aaa nop out sub sbb fildll les cmp jecxz idivl cs (bad) in or cltd sbb imul jp mov add inc mov push fidivrl mov mov mov test mov repnz mov xor cltd mov mov mov pop scas clc pop inc dec cld mov adc jl int ds pop sbb into cmc scas js pop inc loopne ja push mov cmc xchg pop dec leave inc or mov outsb out and lret es push jne mov mov lds cmpsb pop pop xor mov sti fist inc mov pop sub imul adc pop mov cwtl jmp mov and fimul std push (bad) call (bad) cmc push sub xor mov sahf xor xchg jbe inc jmp jle mov std addr16 insb sub pop xor xchg fstp or jle popf in setbe pop addr16 mov xor movsl jbe cmp xor popa mov pop cmpsl orl mov int outsb sub or adc mov pop aaa addr16 stos push daa (bad) (bad) loopne lgs jmp rol inc mov loope divb mov add test xchg push sub loop adc mov inc adc and cmp push dec lds mov (bad) aas pop adc ret pop inc cli fisubrl and nop imul jae fstp inc ljmp in xchg std js in fucomp cmpsb pusha rclb dec cvtps2pi and fnsave int push mov cmp (bad) mov mov and add je sahf frstor in push icebp int3 jae jno leave sub mov cmp cmp and sub (bad) lock cmp mov shrl cmp add mov repz jb in rcll fcompl outsb pop sbb xor mov loope js add add insb imul int3 out aam cmc es jge mov mov push test jb (bad) stc adc fidiv nop in xchg js mov xorl loop inc scas mov ljmp jl repnz add xchg lds mov mov into cltd movsb iret out fcmovnb scas loope pop negb mov sbb mov xchg push lret push daa mov push ret jecxz cmpsb mov ret shrb mov fisttpl jno push pusha mov hlt dec adc jge movsl jb in cmovle in repnz iret sbb push outsl fisttpl lods test inc mov in xchg mov jmp mov mov dec xlat aam mov push mov ja mov sbb out dec adc or arpl lahf xor fadd xchg stos (bad) and xchg movsb sub pop out jo and mov xchg xor inc inc outsl xlat sbb lea mov hlt add cmp aaa dec jb stos mov aam and rcl imul enter pop jbe add and push mov add xchg scas mov test outsb sub and sbb bound lods xor aad push mov lock xchg pop xchg jns mov pop mov pop add fs cmp cli cmp (bad) loop sbb js fistpll cmp dec mov mov sub in test out rcll xchg out outsl xor dec test xchg xchg mov js push sbb mov jecxz cmp cwtl dec iret incb xchg sub jge or xchg inc xchg mov dec fdivs and lds aas in lds mov cmp fstpt xor jno mov mov popa flds dec xchg sbb aas xchg mov jae push pop (bad) clc jo in int3 repnz sbb adc pop push leave nop cs ror inc or sub daa dec xchg loop pop cmp jnp pop popf shll jbe sbb sbb dec dec (bad) cmp mov xchg (bad) ss lahf ret sub cmp xchg cmp add fidivr mov xlat call lea testl inc imul inc sub loop inc mov mov inc add inc popf bnd cld pop add in xchg aas cwtl xchg xchg sahf mov xchg aas add or sbb es jmp mov mov lds rcrl pop mov pop cs stc push ret into dec lahf (bad) fcoms adc mov mov dec pop adc fiaddl add xor outsb leave and fs cmc repz pop popf enter mov xor inc int movsl in gs repz test je cli mov cltd xorb push pop int3 pop lret ds sub cmpsl xchg sbb iret mov mov in and xor stos inc clc lahf xor jns add mov adc inc mov scas daa lea mov dec pop pop push pop push cs ss mov cwtl test ja add (bad) cmp inc or (bad) xor jge or push cmp inc icebp mov inc data16 clc add inc add (bad) (bad) jnp lea shrl add fwait popl dec incb movsl sbb aad out jbe setns add packssdw arpl adc or mov call sahf pushf sub cmpsb xor insl sbb push and jge and pop xor dec std outsb sbb fmull add xchg rcl push lock sbb (bad) mov jo cltd adc xor (bad) loop xchg adcl mov sub je sub inc push and fsub popf inc imul jecxz cmc xor stos aam adc les sbb jmp movsb cmpsl insl adc aad out mov pop inc aaa iret shl (bad) jbe jmp out clc lret jno or xchg lahf cmp mov xchg aas and mov inc mov (bad) or push enter daa inc dec outsb pop cmpsl add xchg call sbb das loop imul fstpt fnstcw (bad) lret push js (bad) es rclb fsts add mov and lea adc leave xor mov lods mov sarl loopne xchg mov loop gs and sub les test cmp popa cltd movl pop aaa sbb ret scas push mov lret clc ja sbb pop aaa push inc inc pusha push aam mov mov cmp ret adc jae out test pop jecxz decl cwtl and sub lahf cmp in cs out pop les mov and inc cmp in and inc mov scas and xor stos (bad) mov leave test (bad) pop lods jbe mov sub std jae (bad) xchg xchg fcmovnbe mov cmp fist (bad) xchg or clc jmp mov xor push (bad) ja pop adc mov push pop jb mov and inc cld or add leave scas inc nop mov and jnp sbb pop sbb add leave dec (bad) mov call jmp cmpsl in mov add enter sub xor xchg cmp pop cld jns pop (bad) movsl js out inc mov pop xchg ja ljmp push cli idivl mov out push xchg xchg mov mov xchg outsl in push pop mov xor sbb iret adc inc sbb sbb enter mov or mov in jne add inc xchg lret (bad) xor (bad) jbe add rolb jns les sti imul dec pop or mov rorb inc shrl cmp roll cmc mov push test sub (bad) lds rcrl jae dec (bad) aad mov sbb das cmp dec lods jnp ud2 dec mov cmpsl movsb add xor jp inc pusha sub ret sbb cwtl push cmpsb mov adc nop fldcw xchg dec cmp out loop xor jle mov or lds lods push out xor jge jne adc jae mov dec mov dec mov add in dec movsb mov (bad) mov mov xchg enter adc fldcw pusha and push insb inc jp jl repz sbb push lods mov shrl roll mov sub xor out dec fisub cmp adc xor xchg bound adc xor mov ljmp hlt jb ret add add rcrl xchg pop out rclb out fistp xor dec out test sbb xor into sub sahf enter push out test pop inc jl repz clc pop mov ret or push sahf mov push mov mov xchg loop lods jle pop push scas push int3 loop mov mov sbb mov loopne stc mov aam jbe mov mov mov iret mov loope outsl and jmp jecxz mov pop sub ret jmp popf pop mov mov ss cmp cmp test icebp int3 test fbld orb or rolb aam je roll lcall inc jl mov mov or scas jmp pop insl std lds mov push test dec mov pop push cmp pop adc jnp es mov sbb fldenv sub push sub hlt sti std aaa xor jns mov lds std sub lahf pop out ljmp push mov dec jbe xchg push int popf movsl imul inc int test and ret lret cs les adc lds pop mov and and shrb sub add (bad) je scas aam sbb xchg das push push stos cmpsl lds movsb mov xchg loopne xor les call loopw sub mov push je cmpsl (bad) pinsrw insb mov lahf push xchg mov cltd adc sbb das dec adc mov fdivrp adc sub (bad) jp fucomi sub inc adc xchg push mov jo jns call add and (bad) (bad) cmpsb lods xor sbb xlat or and mov stos nop jge mov push aaa xor test dec mov push cli mov pop movsb inc cmova ret popa int3 jmp push fsts scas jmp lret ljmp cwtl fimul xchg aaa dec pusha jae jg sbb sub clc jbe mov lods lret cli and rolb mov popa jl cmp inc lcall jne repnz jp lock mov rorl fstl sub fcoms scas (bad) aad outsb arpl adc repz xlat dec mov cmp xchg push xchg push clc pop idivl jb mov cmp orl adc adc mov mov dec cmp push mov (bad) or jae xor dec jbe mov sbb cli inc add sub jp gs dec in out fdivrs push daa mov dec mov dec jge or scas push mov add or clc jl mov add dec mov or adc stc mov aaa mov jl repz jne pop pop mov add (bad) std mov enter movsl arpl cmp (bad) lret insb inc insl mov push add xor adc add sub stos jl out outsl inc out inc fs add pop out cld push in xor rolb jp xchg mov aam stc sbb inc sub out call cmp dec or jmp jb addr16 mov bound jge inc cmpsb outsl sahf dec sub mov or add mov fwait push data16 mov hlt jmp outsb cmp aam mov inc or dec pop mov bound xor mov xchg test push adc mov das data16 sbb jge jecxz mov jge sub mov subl mov dec sub mov lods fldl xor neg pop jmp shlb mov idiv mov iret add in test repnz xchg cwtl dec jecxz dec aam jo insl jbe fiadd pusha dec pop xlat lret adc stc stos sub mov sbb in loop sbb add icebp cmp rcll pop add dec cmp mov fsincos and xchg xchg pop leave push adc clc inc xlat outsb mov inc ret insl leave in dec lret xchg lods inc movhps insl adc loope lea xlat jnp and scas jns loope pusha insl adc decb repnz sahf (bad) testl cmp clc and xchg pop jo sbb add dec and cltd mov psraw je and sub loopne (bad) loopne shr rcll js or xor std hlt xorl xor mov xor push cmpsl sahf push mov lret mov jmp jb movb add cli shlb rcll movsl sbb jns cmp imul dec cmp mov fs xchg js mov nop add push fistpl xor fs movsl cmp and jns jmp aam push out xchg mov in cltd pusha push ret vcvtsi2ssl idivl outsl mov push mov dec int3 stos pop sub cmpsl inc and lret sub push (bad) testl pop mov loop cmp ds inc ljmp jle or js lcall js mov jbe xlat icebp add fsubl aas cmc mov repz int lock outsl in inc cmp inc pusha je aad inc xor xor test inc push or rcr (bad) cmp cmpl pop daa sbb jg enter inc outsb iret jl adc enter (bad) mov push jbe popa dec ds mov movsl or in jae scas adc push xchg sbb inc ja inc mov ljmp (bad) (bad) jne xchg (bad) insl push pop in test popf sahf les pop add js inc push or bnd in pop test add mov (bad) xchg add lea (bad) bound inc lcall lret loope dec ret in sub ja popl mov mov enter jl push rorl test pop sbb mov push gs mov imul pop xchg or cli (bad) mov loopne aad dec xlat repz imul stc or xchg cmp adc test jl lcall (bad) loopne push xchg jnp cmp aas or ret adc dec lret pop push mov es mov sub andl stos cmc out out push xor mov aad movsb rcll bound jl cwtl cmpsl cltd inc mov pop xor adc lods add ret or aad jo xor add je std sub pop scas sbb jge add fcoms (bad) aaa je sbb test xlat sbb jno pop sub mov and push mov ss mov pop inc sub mov cmp or xchg push out and popa les cmp add out (bad) orl iret sub mov mov mov xor jno loopne adc fadd (bad) mov rorl subb pop inc out adc adc push out insl bound xchg pop lods sbb add stos mov and push fistpll mov popl aad mov loop or rorb sahf mov push mov scas xor add ficompl mov popa dec mov cmp fnop adc (bad) cmpsl pop pushf or and jge pop aad inc add fs sbb stos lea loop mov arpl clc xor je in mov cmp add lret fistl push sub out or xchg in (bad) fisubr jae dec jl std jb repz popf ja fadds stc into mov jmp (bad) adc and jmp lcall sub insb xchg dec in iret int3 lret or jb (bad) xor sarl pop out (bad) cmp pushl popa jecxz jge sub push adc lahf and add jne and dec (bad) mov push add mov mov jno mov in dec cmpsl cmp call push mov gs jg pusha push xor dec iret cmc sbb into inc out mov lds xlat mov cwtl leave ret test xlat mull xor insb lahf cli dec jb pop (bad) push jp push (bad) jo xchg and ret ljmp (bad) adc xchg jle out or xor add xor mov xor xchg call in out movsl jl xchg inc mov xchg inc push fadds (bad) mov leave fs and xlat (bad) aaa repnz xor in mov jne lahf je jno push dec xchg (bad) (bad) adc sub (bad) aam add dec rol lret push mov sbb aad sub jne lock jp dec test jmp enter out sub mov jne ljmp and dec mov mov call jle in aaa out cltd push loopne mov stos jne scas jo (bad) fcoml sub push push sub out lods not or add cmp sbb sub loope aad inc icebp cmp ret in xchg add negl sub push das xor xchg xchg adc into push mov into pop push sbbl dec aam cmp stos or stos in pop lret or loopne call test in jb xor xor push and movsb aaa ljmp pop pop adc or out inc mov xchg insb lcallw cmp push fcmovu jg pop and cmp popf cmp push outsb mov (bad) into cwtl cmpsb xchg cmp in mov push loopne jl xchg fisttp enter push fdivrl or pop jnp inc xchg or outsl inc jns pcmpgtw and stos jp cld adc shlb test lods xor mov jno imul add and popf iret push and sbb and aas fbstp rcl jo sbb sarb sbb (bad) dec sbb xor in pop pop shrb inc adc rcll pop int3 inc imul aas push lret cmpsb inc dec bswap inc mov cmpsl pop cmpsl in mov cmp cmp xchg mov jne mov mov adc cmp aad push popa pop (bad) (bad) fistl sub pop lcall sbb mov icebp shr (bad) loope negb inc stos imul mov rorb inc xchg repz movb push icebp cmpsb jbe mov add fdivr ss out add pop inc cmp xor sub inc (bad) sub repz js mov fxch outsb pop lcall iret dec (bad) lea stc in in (bad) int dec pusha inc cmpsl and aaa push cmpsb cmp jl aam andl add (bad) inc into mov and jge ss jo mov fcoml rcrl push xchg and xor cmp addr16 test inc ficom sbb jnp push pop adc lods jns (bad) mov xor (bad) lods adc sahf sub jo mov cmp fwait inc and cmp ljmp addb inc (bad) testl add lret dec push cmp lea or sbb repz loopne pop push pop clc jmp test (bad) pop sub jg repz xchg daa sub es loop dec inc arpl xor mov divl pop idivl or sbb pop pop mov loop aad xchg add jnp xchg jno jmp mov mov icebp bound add pop xor ja add and xor fnstcw add xor pushf stos jecxz xchg pop pop imul pop (bad) cmc jp outsl addr16 or into movsl xchg nop fbld and jmp inc addb scas cmpsl out divb loop cltd mov pop adc cmpsb ja jle mov mov sub lods aam scas jl xchg xor leave mov add mov rcrl push pop sub ficoml popa lret sbb lea inc jo (bad) adc mov test mov das xchg cmp or leave sbb xor add add ret pushf xchg fistpl cwtl repz ds xor stos sub mov xchg add adc and loope jno out mov pop pushf sahf push outsl add adc jg stos std jb sub lret jle movsb or sub jp loop add mov std insb int3 and cmc mov shrb fdecstp inc test hlt pop in lret inc aam mov add sbb xchg mov in sub repnz lret or rcr andl push idivb mov sarl push xor jp mov decl mov jb test fwait xchg roll xchg push adc int xor xor dec dec adc mov lret fadds scas pop or pop pop bound sbb mov mov and jg pop push fcomps ja nop xchg xchg test mov sub sti sub and (bad) and test mov fldt sub in ja (bad) mov xor lods lret jne cmpsb sbb ss pop mov lods or adc mov idivb xor (bad) je lods cld inc pop jp ret sbb fwait or insb aam inc xchg div adc xchg jb jns inc sub xchg mov xchg imul sub in xchg pop popf icebp push pop inc and sbb js jbe xor aas jp les or pusha mov cmp pop rcrb and cld jle jp mov jmp adc ljmp shll loop mov ret repnz popa lret in xor xchg add mov lods sub repnz cmp xor xor pop xor mov (bad) xchg loopne lahf xlat adc jp fcmovbe push jnp and (bad) dec out mov cmp pop sti (bad) aaa data16 aaa jo out inc mov insb rclb sahf (bad) push dec inc mov lock mov insl jnp icebp lods es mov aaa xchg test jle xchg addr16 push std jge dec out cmpsl rcll or push loope cmp lahf xor sbb rolb cmp jae in xor jge cmp rcll pop xchg jae or xchg xor or mov lods jecxz xchg mov or xor sbb icebp fisub jne fmuls mov ss mov sbbl outsl je hlt lock ret aam loope loope shl lret aad dec adc or jp jnp push sub lret cs movsb sahf xchg cwtl jmp rcll loope dec inc sbbl hlt and mov in (bad) (bad) sub call int addr16 xchg (bad) out ds and or test mov (bad) lds fldl sbb mov mov sarl jecxz pop dec sbb ret (bad) in sub jg sarb inc enter ret into jo das jl popa ret cmp dec xchg mov mov fild in xchg xchg and jns xchg add sub sub dec mov popa mov push sub dec test xchg movsl pop lcall mov sbb jno mov daa xchg and mov inc pop pushl xchg jge push dec xchg daa sbb or sub jp out repnz int dec cmp pop jle push cmpsl movsb mov add xor adc lahf setae mov lahf xor mov rcl ss aad inc in inc xchg pop mov or cld outsl sub dec push (bad) insl inc and xor fisttpl jmp pop push lea das testl pushf push mov pop jl jnp dec stc (bad) xchg jmp cmp dec xchg sub cs pop fidivr push lods lcall out rorl test rcl leave lahf mov stos xor adc cltd enter daa dec testb sbb and inc rorl pop xor push cltd insb cmp sbb sahf fwait or jae mov rorl jl xlat (bad) adc pusha lock jmp (bad) jge sbb jb xchg push sarl push adc sub flds dec cmpsb mov pop push and mov cmpsl xchg xlat (bad) testl add sti and adc pop mov add adc stos ret or movsl (bad) sub pop mov xor sbb lcall mov xchg mov push clc jg aas lcall xchg bswap iret leave ret nop push test inc (bad) in pushf sub cwtl insb shll ds jns inc ret jmp xchg pop push cmp pop mov or mov addr16 dec mov outsl js xchg sub xchg in popf jecxz push in mov or iret mov loop or sub push xchg mov mov insb jp fidivl or divl jae lret cmp loope and jle or mov stc arpl adc fs cltd jp int cmpsb daa insl jg mov cmp sub ja or xchg aas inc sbb (bad) push lds imul test add mov lds imul gs xor (bad) call jb and insl ret ret test push push mov or mov mov fimull pop loop das inc sbb xchg mov outsl dec enter mov inc cmc js jnp cmp mov mov push sti mov pop lea and pop push stc and sahf mov cmpb mov pop pop dec xchg std mov nop push or shl mov mov jb nop dec (bad) jmp (bad) scas xchg inc jl (bad) mov dec (bad) jo test pop mov icebp mov out push rorb adc popf cmc xchg mov xchg xchg cmp loope jle sub mov ds (bad) dec dec and addr16 mov push jno jmp adcl aaa sub out jp (bad) dec (bad) bound jmp dec pop pop pop adc mov ret push mov shll sub repnz sub lea add test push cmp out dec dec (bad) mov fdivrp cmp adc lea cmpsl sbb xchg or push inc (bad) pop xchg (bad) push repz mov mov ret jg push mov pusha fs adc call and addr16 inc sahf push fildll pop pop push pop cltd ret dec imul das das mov (bad) lock repnz mov lcall cmp xchg incl or loope daa mov mov cmp push or jbe dec xchg xchg lods into push dec (bad) jnp sub lret mov xchg insb mov mov cmpsb mov ds sbb fxch imul ficom sub insl (bad) pop pop or pop inc fxch mov pop push mov jg and mov loopne out dec xlat repnz mov popf xchg je mov cmp jo (bad) and scas push cli sub insb cld xor ret das mov or cmp sbb push adc inc jnp pop pop cmc arpl pusha mov aad repz (bad) dec cmp aad in imul xchg mov pusha jl push sti inc pop and or cmp xchg and (bad) out sbb jbe loop lods mov xor outsb pop lcall mov sub mov and mov ds pop rcr xlat add shl sti out xor jae and dec int3 push das popf push mov sbb and jno stos popf add sbb inc movsl fwait and add push bnd sbb mov jno pop sbb sbb mov xchg lret or mov mov aad xchg rclb (bad) es sub lods dec ss sti mov aaa popf pop mov ret loop enter in jne fcoms push sub mov xchg mov lcall cmpsb (bad) cmc sbb xchg (bad) dec cmc mov jnp mov lahf dec (bad) scas lods pop stc jnp jbe jbe arpl and or add push movsb sti cmpsb (bad) or or sbb xchg xorl gs jnp sub aaa add push cmp add cld push and out dec add push pop jno divl iret mov jmp rdtsc loopne pop inc arpl sub mov or aad dec xchg mov add std repz jae mov xor test adc add cmc scas les out or out cmp stos fistpl push rcrb and push add sub cltd or push dec xchg jl sub pusha rcrl inc jl dec or jb sbb pusha adc dec icebp les inc mov xchg pop mov xchg push lea mov aad das dec or push mov adc cmp in jae in ljmp jge cmp mov fild cmp sub sahf ds pop add jno cwtl cmpsb ret bound leave rorb repnz xor in dec je inc imul add mov xchg aas inc stos pop xchg popa jbe enter (bad) movsb mov pop imul cwtl icebp push mov fs push and pushf test fnop add test imul sbb ljmp or push outsl dec movsb mov add aaa push pop adc inc test movsb cmp (bad) leave aad pop mov (bad) fs or ret push mov add in lods or loope popf inc push fist xor mov mov mov add loope jge movb scas jecxz adc (bad) mov mov (bad) jns mov mov (bad) ficompl dec outsl lret stos hlt int3 pop inc push push adc or mov pop xor hlt jle xorl lcall jge xchg push mov sbb mov jg pop xchg push (bad) hlt out sbb pop push adc in aas adc inc aad jae adc jae push sbb add adc mov int mov mov and repnz out cmpsb scas popa into pop fbld ret pop adc es jns cmp cmp dec cld and jle dec push arpl mov test pushf (bad) xor lret mov loopne or pop sub xchg out cmpsl movsl xor adc add add jg xor push inc xor out jmp cmc shrb in pop in lret pop add and inc mov mov and (bad) push adc jb sub arpl xor cs xor xchg ja cli sbb adc stos ret mov inc mov jg dec sub jns dec fstp jl lock mov add push daa push iret ret pop mov jb sbb inc mov test not fwait inc pop testl push mov jmp xor inc stc shr xor push push xchg pop add ds aam aad and test (bad) sbb push jbe push mov pusha loopne mov jb add in dec iret aas sbb daa call mov adcl fcoml out ja lods jecxz pop out incb sub lret pop sarb and sbb stc dec aas outsl les jle cmpsb mov jg les rclb lret jge pop mov jg sub inc adc jo pop add sbb push int3 jle cmp lea push push push pop (bad) dec or jge stos cmp das cmp push xchg sub sub sbb ds mov jge mov mov jmp push mov (bad) push loope out mov xchg adc mov rol mov pop les lahf enter add pop mov negl sub rorl ds outsb mov psllq push inc popf jle repz push test scas bnd mov stos sub scas sahf mov pop repnz pushf push pushf add and iret mov ret jge cwtl mov push cmp lcall daa test push ljmp jb adc loope (bad) lcall outsl push lahf nop sub es mov rolb jl (bad) jo and mov (bad) xchg pop jbe jmp enter ret pop addr16 fdivrs sub outsl mov and icebp ds xor xor jo lcallw loopne mov mov xchg into adc ret xchg push jl (bad) (bad) test mov cmpsb call inc shll cli fistpl pop push fsubrl std mov loopne and dec (bad) lods (bad) lock inc pop in ds mov call (bad) mov or or add xor in iret mov js and dec insl js in adcl fildl add je lret cmp pop pop push outsl push cmc (bad) fildl mov or repnz dec mov enter jns xor pusha aam xor push je add xchg fidivrl cmp scas es int jae (bad) adc pusha ret add dec xchg mov lods mov xchg sarl in int3 and scas stos popf jle lds cwtl repnz xor leave and imul outsb inc inc outsl testl and cmp jmp lret jbe mov mov cmp addl mov (bad) enter mov xchg iret jecxz,pn adc repz cli out in lahf mov cmp add scas inc push sbbl loope xchg xchg cmp ss das mov or mov repz mov incl ds push nop xchg (bad) aaa ss dec xchg push adc inc xor repz mov xor cmpsl and xor cs push pop pop cmc fwait (bad) mov hlt sbb sbb fdivl frstor pop lods std enter shlb mov mov and or pop pop xor xchg mov clc das add (bad) (bad) mov pop and outsb dec enter insb aas xchg jb fcoms loop sahf ds (bad) popf scas ret push dec jbe,pt mov jae lock jmp and push add push sub sub mov mov lret jecxz icebp subl test sub push adc cmp cmovle or ds ja jbe cmpl sbb jmp cmp stos test jbe xor movsl notl inc fcoml cld push out js xchg xchg inc rol xchg in push outsl push test (bad) arpl (bad) mov mov mov jo scas aad push dec shlb xlat repnz pop scas rcrl fmull mov stos mov mov insl (bad) out dec push or arpl dec outsl jns mov mov and dec or lea inc mov adc push stos mov repz sub push mov mov je repz add push out (bad) icebp jmp xor cmpsb out ss les sbb lods std fsubs (bad) mov sbb push xchg pop mov inc xor pop pop add cs bsr xchg cmc jno mov (bad) repnz sub scas push fsubrs dec cmp mov xchg xor xchg popf fcompl cmp jne mov js (bad) icebp cli mov push into adc loope push sahf fucom popa xchg push inc test (bad) sbb jae push lods repnz rcrl push sahf inc gs inc (bad) jb ret insl cmp in inc pop jl inc mov xor or and fnstenv pop leave push movsb mov xchg faddl dec and pop enter (bad) ljmp fsubs imul into mov inc ss sub inc adcl pop loop xor pop cmpsb jbe jbe (bad) scas dec mov xor jl mov dec mov xchg dec lds cmp in mov cmp inc push popl rolb nop pop xchg fs xlat inc in add sti js inc pop xchg hlt jno test cmp push je jb inc push sbb sub add aas inc js sbb pop mov inc xchg out pushf aad (bad) mov imul loop adc xchg dec xor out popf in je insb sub xchg dec orb jbe sti les sub mov push shl (bad) pop insb fidivl cwtl fadds leave icebp orl ret mov mov sub xor sub mov pop push (bad) or push and inc repz sub add nop cmp out push sbb mov xchg mov arpl out adc lret sub or mov icebp mov shlb xchg cmp sbb add aas data16 xor dec mov in jge jmp (bad) inc mov shrb scas or xor cli adc xchg inc pop ds inc data16 inc adc xor xchg loope lcall sub mov or dec cmp sub sub xor mov sub mov and out scas push cltd into inc rclb sub andl pop mov cmpsl es cmp push out xor mov mov xchg pop fwait jecxz jne stc cltd inc sbb (bad) adc add (bad) xor dec (bad) popa push push push push lret jns dec jbe mov and ja bound pop sub and cmp add adc or (bad) ss test aaa adc jl sbb and faddp jmp cmpsb push cltd ffree adc and jae mov arpl cmp inc or xor xchg jle push jne gs xchg mov mov push mov jg aad ret mov (bad) in mov cmp or pop rclb dec out cmp (bad) (bad) (bad) mov or mov fsubp clc pushl push lcall and (bad) sbb jle xchg cmp pop adc scas and pop cwtl addr16 xor dec mov or add stc jl js jno mov (bad) int3 nop dec call sub mov pop sub add mov pusha inc out mov mov (bad) push xchg lret (bad) (bad) dec stos js,pt mov outsl inc stos aad insl (bad) xor aaa shrl rcr jo mov fisubr mov sbb jecxz out mov xchg pop ds (bad) lock cmpsb adc stc (bad) out mov or out inc xor push popa rorb cltd cmpsl mov lock mov pop adc cmp mov lret in js jp sbb mov mov clc cmp repnz and pop scas adc pop psrlw shrl xchg int mov inc inc inc inc add sub dec enter leave mov les mov fcoms xchg push dec js inc imulb mov jnp arpl adc mov inc xchg mov fsubs pop push xor imul stos add xchg sbb imul mov sbb pop mov push xchg out xchg std in stc lret pop push lea xor xchg and xchg mov xchg jl insb out out ljmp and mov std jmp daa pop push rcl fmulp jns iret pop in jmp mov mov fnsave imull jl fdivl add fwait imul mov jne jecxz andl dec xchg push fiadd enter jno mov cld clc aaa addr16 lret (bad) lock sub (bad) adc loopne dec or outsl imul mov mov adc jmp (bad) (bad) pop (bad) or inc (bad) sub mov loop mov xchg bound push adc dec rcrl mov cmp sarb xor insl (bad) in ljmp sbb das out dec insb sub dec inc scas movsl mov mov mov out stos (bad) mov xchg xchg sub dec cwtl add add sub cmp jl pop cmp xchg xchg cli ss lods push lods jmp js push test add out jo insl les shr aaa pop cmc flds mov lock jne cmp sbb xor dec test mov iret dec pushf lahf arpl test das (bad) jg loopne push mov sbb mov pop addr16 sti cs xor cmp in (bad) hlt push ss push jge movsl test in arpl mov jl xor jb stos jmp fcomip inc push and imul push cmp icebp mov int3 lret push sbb mov pop cwtl test or mov in mov dec ljmp cwtl add pop stc cmp (bad) or or sbb shr adc mov aas fcmovnu add dec ja and xchg clc mov jns jmp sub dec jmp pusha out in test aas sub pop hlt sub xchg sub cmp nop cmp xor sahf xchg sub add cmp xchg mov mov roll negb cmp adc divb jbe jnp sub shrb jnp test inc clc iret das bound adcl dec lods add sub loopne cmpl add je dec pop aaa xchg jb in es sbb (bad) mov je arpl sbb xchg addr16 ljmp imulb inc push jbe loopne and jmp scas jg cmp mov lret mov add add int3 mov sbb (bad) sbb xor sub cmpsb pop sub dec and pop flds mov cs jl lret icebp es and add fdivr fcoml imul (bad) sbb add pop fwait push leave les adc push jnp sub in ljmp divl pop ficompl xor and push inc in mov pop inc dec mov pusha stos cmp mov popf pop cmp cmp jnp mov pushf add xchg mov pop cwtl sbb lds inc jle addr16 sub mov ret cwtl minps or shlb call cmp sub mov (bad) adc inc pop (bad) std push test dec (bad) and ret mov lcall js test inc lea stc aad push shr (bad) gs in scas repnz add leave sub lods daa insl loop adc les push (bad) lcall adc cmpsl call es dec jge pop lahf std mov xlat dec add mov xchg mov xchg int and je fisttpll lahf pusha dec jl (bad) lret adc xchg push aad jle cwtl dec jmp (bad) insl in adc pusha mov cmp push scas push mov xor mov js testb xor outsl jne lods xlat push mov es inc test xor cmc stos pop stc xchg sti aam hlt lahf loop adc es inc cwtl es xlat push push or sub fstps mov fistpl jle fildl or aas push xor pop mov in cmpsb iret add data16 xchg test push shlb cmc test aam fcomps pop daa cmp test adc fstpl imul popl (bad) push mov inc pop mov jbe xchg popa js adc dec push aam jmpw mov push jl lret ljmp sub stos (bad) cld mov add lds mov lret jb cmp pop sarb mov inc mov push mov jge ja cmp xor outsl dec xor cld mov jns icebp dec push call cli outsb ljmp xchg add inc into cmp mov mov stos scas pop pop push dec push mov mov aam mov push add fucomi repnz mov xor daa and sbb ret nop lea push xor rorb call jno rcrl das out loopne js mov push mov jge mov ret mov mov call (bad) push mov sti adc and push sarl mov stos pop cmpb cmp fsubs mov jl aad jns inc adc ficompl cli inc stos aam fcoms sar aam jb xor test (bad) in into mov pusha pop stc out sysret adcl mov adc in or inc je fisub and cmpsb or push std push jbe xor mov mov test adc sub push addb lods xlat jle and xor or push (bad) push pusha (bad) popa lret scas ss mov mov pop or xor xor (bad) pusha xchg cmp cs adc movsl pop movsb scas jle clc cmp (bad) leave leave xor push repnz cli mov dec fwait pop roll ret sub sub nop jns inc xchg adc ds cltd dec clc in dec pop insb sbb jle loopne,pt loopne ljmp lret or popf pop sub insb mov in movsl pop nop or les mov mov pop push xchg xor push or push mov or sbb dec sub or out xor mov subb mov fstl pop jns je sub in cmp jp cmp push std sub movsl xor movsl push hlt ljmp fcompl jnp cmpsl push lock inc cmp movsl or mov es sbb and jno popf sub push out jns mov and jle dec jle add mov push fimull pop rorl popf iret dec add mov jnp fild fldl andb out xchg leave xor sbbl jp bound in lret popf push aad lret call popf repz test fistp ss mov adc xchg jne adc les cltd push sahf add pop xchg mov iret ror sub (bad) push sub std xor cmp ja jae fcoml cmpsb sbb add loope jge fwait insb lea jne insb sbb mov push mov dec inc loope mov dec les sbb scas mov arpl sar xchg fldenv inc sbb fadds (bad) dec mov cmp pop mov sarl and push insb cwtl jp fcomp fimul lock pop add mov xchg idivl ds add mov mov cwtl mov add aam pop push cmp fs pop js push (bad) push xor inc add lcall stc (bad) (bad) rclb popf dec dec dec add and mov mov fcmovb cwtl test push std sub loope inc dec in mov ret nop pop push fisubl and lds lahf lock xchg add je mov call in jno in cmc aad out push cmpsl dec mov lahf (bad) sbb dec ds inc fsubrp mov mov rcrb adc xchg mov mov xchg jo call sti pop ljmp lret and xorl cmp pop loope jmp cli ret ja sub mov jp inc fdivl inc adc and cmpsl jp inc mov mov rolb lret mov pushf out lods sbb push mov xchg imul mov ds xor mov cmp jne lods push jg xchg idivl lods mov jnp enter movsl rclb sarl pop or push fsubl jne push mov nop lock shrb push sbb jnp test and add test mov sbbb push (bad) fisubl fsubr sbb mov fsubs dec sahf fidivl sahf repnz in dec fsubrl and mov cs sub fs gs lahf inc in cld arpl pusha push mov pop sar jg lret jp cld jmp into insl dec and cwtl daa and xor push sub sub lret pushf add (bad) mov dec xchg scas xchg adc jae aaa cwtl sub or ss dec imul cmp and (bad) pop (bad) jle sub stos cmpsl push pop lock mov push hlt cmpb mov sbb xchg pop cmp jb inc add dec xor push test rcrl xchg test pop pusha and enter sub mov adc push lcall addr16 ret jb dec jmp pop sub in (bad) fwait mov outsl notb xor mov or repnz popf and mov mov mov adc pop add push testb mov ja sbb xor jbe inc (bad) hlt popf call repnz or inc shll aaa jb stos and jmp inc xor gs sub shll loope push or fisttpll stos repz dec lea mov pop jmp imul mov std in sbb dec add pop fcmovu push mov jne imul pop push leave sbb cmp cli fistl adc cmp in push hlt cmpsl inc movb push xchg jns ret popa mov push push (bad) dec loopne aam sub movsl mov scas (bad) mov nop add jae (bad) jne rorl or (bad) push sbb repz sub test (bad) movsl sbb mov inc sbb fimull int loop mov add fstl test lock fldt adc and and clc xchg lret aad sub dec (bad) or outsl push or lock push lcall jo xchg add and in jl imul out loop fldlg2 sarb mov inc mov jl shll daa (bad) jns mov pop xor inc movsl push cmp call mov fidiv xlat aad push pop sub cltd fcoms ja dec sahf xchg and daa das inc mov sbb cmp rcll sbb cmp mov lock ret xchg or out ja lods imul sbb mov mov jp add ja loope xor (bad) fucomi push push push pushf dec inc fmuls lods aaa js int mov pop jno mov xchg lret not mov imul or in movsb cmp add push jns test jecxz cmp mul fcmovnbe jmp dec ss add imul mov clc loop push call pop add sub stos (bad) pop pop in cmp shl jb pop out mov popf lds (bad) mov or in cmp mov pushf or and loope xchg adc (bad) dec scas (bad) adc daa fild pop pop or cmp jae pop pop inc xchg lret adc std popf lock lock jo mov pop mov data16 (bad) outsl (bad) mov inc or sbb mov lcall cmpsl cmp pop pop adc lock lret ds test shr xchg cli or iret cltd cli pusha adc (bad) adc mov pusha xchg or inc xor outsb scas in add loopne lcall mov xor mov mov daa jge push out mov mov bnd mov fnstsw cmovp mov push pop pushf and hlt mov cmpsb in xchg (bad) cmp xchg mov cs mov jns mov jno lods sbb or xlat outsb cmp xchg pusha in enter push xchg mov push dec sbb lahf sub inc push (bad) stos into dec cmpsl movsl imul stos shll mov fisubrl cltd out mov jno dec repz outsl xchg pop add adc mov push mov mov (bad) (bad) or pop sbb push push test xor je rep mov hlt fldcw or rcl (bad) (bad) xor test mov adc adc xlat gs bound cmpsb rclb or outsl loopne jne pop adc or xchg mov fs fiadd pop xchg lret pop push cmpsb repnz lret leave outsb lock sbb or push aad fmull jle sahf movsl push subl imul test imul aaa sub in andb cli cmpsb mov or push lock mov in pop sbbl das dec mov cwtl pushf mov int dec imul aam hlt lods mov sub and add popf cmc push rorl and add subl dec in jecxz pop xor cmp dec scas add or lds xchg fldt out js cwtl lods pop das xor fsubrs out cmp mov enter cmp sahf (bad) dec xchg and in scas push (bad) or dec loopne push lret ret loopne jge pop push cltd push ret insl data16 leave adc ret (bad) jg jp daa sub jbe inc push cwtl mov sarb lahf idivb cmp xchg dec (bad) jb jmp sbb jnp xchg inc push xor mov xor mov fadd sub imul push or imul shr push loope adc pop add js push repnz mov pop imul sbb mov mov adc les mov push inc decb xchg pop push add rcrb pop leave pop xlat xchg (bad) call pop imul xor cmp cmp inc mov mov mov (bad) pop adc cld add mov push cld (bad) test inc out pop sbb inc sahf ja mov aad test mov inc fdivrs push ja pop icebp sbb imul repz pop out (bad) push push lea mov jl sbb or movsl rcl push sahf lock test sbb jo leave lods adc aas cli xor test mov push repnz stc add push mov dec pusha or and xchg test ljmp cld lds lods push adc mov mov and pop out int3 jbe cmp push js hlt std dec cmp imul fisubl push jns dec mov jb lret xchg pushf mov mov xor shll pop aam sahf shlb adc test push loop adc imul push jnp aad mov push (bad) cmc out mov fs xchg xchg and repz cmp pop mov and pop dec jo cmp test cltd das in cmpsb test repnz jmp cmpb scas sub sbb push pusha les xor dec xor fcoml mov mov sbb nop lret and in stc shll loope imul fadd imul push mov add scas in sub mov int3 inc add adc inc clc mov hlt sub mov sbb or sahf xor push sbb jne xor movsl in pop add mov popa gs mov or aas clc data16 (bad) fist xchg pop adc sub (bad) stos sbb mov pop adc test xchg popf cli push gs push (bad) jp lods test fmulp jno (bad) xlat jae mov mov lods sub mov mov mov out mov lock test adc popa call lahf ss mov cli or std fldenv rol nop decb ss xchg push sbb imul inc scas lahf lahf fisttpl inc jno inc and cmpl mov lret (bad) fnsave lods test arpl adc jns int mov add aad xchg jno fs sbb outsb pusha add inc xor mov (bad) pop dec dec jl xor out pop mov or dec mov fstl jmp xchg sbb mov lds mov jo xor pop inc add clc dec es fsubl jne sbbb shrb xchg cmc sub mov push jbe pusha imul cld jb cmp in xor adc adc pushf mov cmp stos adc pop jecxz pop mov sub jbe or mov push jmp push (bad) iret and jge lret add and ljmp push stc cmp jnp push test ds inc sbb or sbb adc inc inc sarl adcl je or lea push inc xor cmp cmp mov test arpl std mov sbb sbb mov jnp loop mov insb dec cmp and (bad) jle out mov fstpt inc adc enter pop sarl (bad) sbb mov sub dec bnd push dec add xor aad (bad) push lock and mov stos leave addr16 xor xor sub pop pop sub cmpsb shl aas popf mov stos mov out mov aam iret call lods not adc insb sbb sub inc dec stos int out jle jo jae push jecxz insl loope and dec and sahf and dec adc int3 inc iret loop inc inc sbb popa dec sbb push cmpsb rorl sbb dec divb and (bad) adc cmp jecxz inc lods daa mov pop xchg pop cli (bad) aam or imul mov enter mov popf mov aas aad push (bad) mov ds test xchg andl push popl inc jb gs dec add mov cmp xchg dec pop iret gs xorb pop mov pop push jb cs cli pop add (bad) cmp inc in paddq (bad) fwait xchg test out hlt stc int3 test out push jg mov mov inc cmpsb fsts mov push in jno sahf mov pop jns inc ja (bad) ljmp loop into adc ss test call jbe or cmpsl sbbl pop adc nop loope inc adc lret or push je mov pop out xchg jae xchg pop insl adc xor test and pop mov inc or fcoms test xchg or dec sbb xor mov pop stos xor into outsb lods add and mov or mov js inc adc mov pop mov jbe inc or pop mov ret push push pusha cmp lods dec sbb fldcw (bad) mov imul addb mov sbb jge lods xchg push xor mov fcomps in inc es (bad) into jbe aam shrl dec lcall mov or lods sbb xchg cli sarb jb adcl add cwtl mov outsl ljmp mov loope lods or hlt jecxz sbb and movsl or sahf jmp aam rcrw dec cld in add push mov dec mov jae fsubrp sbb push xor mov mov add dec mov ss ret mov ds flds jp arpl daa loopne aam stc push xlat (bad) or rorb insl push add or mov mov mov (bad) ss mov add mov stos js cmp xchg add aaa jg stos cwtl push or movsb push inc mov inc loop xor test neg mov lret mov inc aaa decl and lret test dec pushf sub inc mov cmp add mov mov inc dec inc push insl cltd push add cli std cmp fidivl xor push pop mov sbbl mov pop push cs jbe clc ss insl out out repnz mov and loop push xor inc cmp mov jmp loop fistpll fnstcw les jg jbe (bad) ret testl popf (bad) sub xlat andps jp or rclb movsb sti sbb adc fsubrs fnstsw cltd mov inc xchg ljmp cwtl pushf jb jge mov (bad) or pop jge fldenv jecxz psrld data16 aaa mov dec repnz mov jp repnz sbb les dec and and lds mov mov mov nop pop cmp dec push push stc ljmp (bad) xchg in mov sbb std fdivrs stos mov shlb add xchg rcll push test sbb ret aaa adc add fs jo jmp leave shlb leave lcall add notl pop pop cmp into bound jl repz ljmp insl push jp stc inc ja lods enter (bad) mov mov or adc pop repnz (bad) hlt sub inc (bad) cld outsl retw divb adc js and mov pop xchg mov test dec push xchg mov jle pop inc mov (bad) sbb insb dec pop dec inc sahf lods rorl jae sub xlat jo hlt leave scas stc push mov inc imul rcrl jae mull inc jge mov push movsb jg mov mov mov pop lcall push les mov add sub (bad) fisttp xchg pushf rol dec test push dec add xor adc add test pop sub lds sbb fistl insb xchg pop fldcw sti jge addr16 mov sub push out aas gs xchg repnz xchg xlat inc push cs jl pop pop clc js or (bad) inc je ljmp adc push jmp outsb push popa cwtl movsb ret push cmpl push jae arpl repz pop aam push pop jb pop sbb loope repz or jl aam shll add xchg sbb dec jbe imul scas mov das negb es mov mov repz cmp inc push dec xor mov jl xchg in bnd pop and stc or fwait xlat inc fdivs (bad) or push mov and test jecxz gs (bad) addr16 ret mov (bad) stos mov cmpsl mov adc add sbb pop xchg jmp mov jbe out fisubl xor test leave clc jecxz mov add bound ss jl subb rol xor push sub test clc pop movsl jno dec bound jnp out jmp inc adc ret sbb jo movsl xchg mov es int3 (bad) fsubl inc and es popa mov in fwait pop imul xchg cld ret add andb jl rcr adc dec imul orl pusha rcrl sbb xchg data16 aam pop movsb stc mov mov dec inc mov cli in xchg (bad) pop cmp clc jmp clc jnp jge mov xchg sub aad loope rcl icebp (bad) icebp pop lods lea jg sti iret aaa es jge inc jae ja test cmc xchg inc stos cli mov gs adc pop or pop jb addr16 or fwait fwait popa inc and sub (bad) mov rclb pop adcb mov (bad) xchg lahf fs dec inc dec ljmp inc fdivl ja fdivs arpl lahf in addr16 dec push adc cltd add stos std xchg cs cmp add pop push adc mov fs (bad) enter inc and mov inc (bad) mov stc fmull add adcl pop add mov sub clc repnz fistpl inc cmc mov std movsb ds xor lods insl cmp fidivl ds jo pop dec pop or pop cwtl dec aas and mov sub ror scas scas adc push fstps pop sbb lret sub cmp mov xchg gs pop sbb nop sub scas dec adc in inc jo loope inc dec roll jae jbe stc out das xchg popa (bad) shrl in mov or ffree popf push pop cmpsb in stc cs cmp mov stos (bad) mov daa flds add int pop mov mov xchg imul (bad) xor hlt lods imulb push cmp push pop adc outsb out pop or clc or (bad) fcmovbe or inc push test and das sarb adc int3 inc sub mov mov dec repnz add or out adc dec stos cmp mov notl shrl sub sbb push test insb jns fidivl std mov orb jbe icebp sub rcll cmc sub stos jmp mov push orps xor pop (bad) xchg pop sbb (bad) lea dec or cld push addr16 cmp mov test push rcrb mov mov ret add add xlat addr16 cmp pop ret mov cmp stc add or mov cs iret mov ss lret mov mov mov ljmp sahf xor cmp (bad) flds sub roll xchg negb rcll xor sarb cmpsl stos pop push dec mov mov sahf mov sar jge xchg or frstor incl jmp mov sbb jecxz and sbb loopne negb and stos mov xor cld jno inc mov pop psrad loopne inc jmp and sbb in rcrb inc or je mov cmp jge mov xchg push ret aad test jae sbb rcrl jecxz push arpl ja sub add lock psrld sub xor leave or arpl arpl (bad) adc loope inc and xchg jo mov leave xor cmp cltd xlat sahf addl outsb adc push notb popa jne pop cmpsl sti pmaxub and sbb cwtl cwtl sub jne pushf mov mov xor repnz dec outsb push test fsts aas xchg push cli imull sub mov jle mov mov mov lods sbb mov push xor pop push (bad) ljmp rorb dec pop xchg fsubs (bad) sbb orl sbb mov dec inc add xor adc rcrb or push dec test cltd fnstsw or (bad) lock addl ja sbb ljmp cmp cmp sub pop inc (bad) xor aad popf aam add jbe or (bad) or cli inc sbb pop rcr push cmc pop dec (bad) xchg mov push subb sub pop mov mov mov xchg pop xor or (bad) mov jecxz push xchg ja loopne cmpsl pminsw xchg lcall fwait loop add jbe call sbb js jg iret mov adc cmp mov add xor xor xchg push test (bad) jne and inc daa cmpsl xor mov into lea pop (bad) jle inc dec push in cmp (bad) sbb sahf and sbb ljmp cmp imul mov xchg mov pop sub sub adc scas sbb pop jb jp inc mov mov test mov pop jp lret cmpsl xchg out jne fdivr jg repz pop imul pop gs or or fwait (bad) (bad) sub push pop stos stc dec lds es arpl fnop jnp cld (bad) push loope or jb lret jl (bad) jb movsl repz sbb jecxz (bad) pop int pop cwtl adc inc push xor aaa inc addr16 mov daa in lcall sub ret push mov movsl test xor fwait and or mov arpl jo cwtl insb mov icebp and cmpsl cmpsl mov add pop aas imul movsl test xchg rcl mov push jmp add dec inc add rol pop pop daa in sub pop dec cmp pslld mov stos cmp inc std mov cmp pop in and mov inc adc cmp sti sbb mov sub jg jle cmp in xor in pop sbb flds je stos cmp mov ret adcl cmp push test xorb outsl mov test pop pop push inc cld lcall adc xor lock mov scas push jns sar jge sub xor mov (bad) jno jge or addl push stos cwtl xchg popf outsl sub loope (bad) adc fistp inc pop imul into mov fldt sub cmp mov jle in insb or ds mov test pop lret out inc add xlat das jo jmp dec mov or xchg mov mov popf sub mov mov paddsb fmul xchg or pop aam cmc (bad) mov fstp push frstor jo add in fidivl mov jle pop inc mov push or js xor nop add jo je shlb test push jl jmp subb (bad) adc pop mov pushf fildl push sbb xchg xorl cmp mov xchg mov sti lods imul ret adc orb inc push mov test sahf mov je mov jge shrl or test loope shlb mov xchg push stc adc jl movsl repz and cltd xor rclb xchg movb jbe (bad) pop loop mov sub hlt cmp sub xlat adc repnz mov push aaa jne dec push jne push mov cmpsb dec jb (bad) out pop pop sub mov cmpsb xchg mov js nop xchg (bad) imul popf add lea fwait (bad) jge je lret xor or mov mov cmp jg xchg pop xor insl out xor imul pusha mov addl call pop mov pop jnp addr16 clc insl adc aad cmc adc cmp jbe inc xor insb ljmp jnp (bad) cmpsb jno xchg loopne jmp iret mov test test mov cli cmp xchg rcrb sub or jb or adc jb pop (bad) or cmp lahf jmp in mov outsb add sub lret cs std mov pop inc adc inc mov in xor loop (bad) (bad) inc mov outsl (bad) imul aad test loope outsl fistl sbb movsb jmp vshufps imul aad pop add push mov (bad) hlt enter mov push shrl ljmp into aas popl cmp or adc mov jmp fs pop and daa or subb mov xchg xchg sub (bad) mov mov mov adc aad popf mov js mov arpl lods jno daa mov (bad) arpl jnp mov add mov mov cmpsl mov and pop adc imul lods lods int mov pop sub int mov or inc lcall mov int cmc outsb addr16 cld pop iret lret and push or adc repz mov stos mov test mov pop jp ficoml and les push daa ss jecxz popf out into fyl2xp1 cmp push push (bad) mov ret xor push fwait sbb movsl div pop fs es lds add loop jp leave or jnp hlt dec cli fist imul imul or divb jmp dec bound add aaa mov nop cmc hlt outsb jno (bad) scas lcall (bad) pop in add add sarb ljmp inc mov popa adc jp mov xor dec mov mov sbbl out xlat in cmp test mov outsl in insb inc cmp je and or xor lahf xor flds cld pusha (bad) hlt cltd jns xchg stos aam dec fnsave xor pop movsb call mov adc fldt fimull mov dec pop punpckhdq inc out adc outsl adc loopne mov cmpsl push jnp (bad) sbb xchg in adc or sub sbb xor shrb jns xchg add pop jne mov (bad) mov (bad) in lahf (bad) outsb dec daa ret jecxz dec cli cmpsl pop pop mov popf pushf js dec stos ljmp (bad) add xor jg mov mov add xchg cli inc xchg mov adc or lea cmp fld aaa pop sbb xor pop inc ljmp xchg addr16 adc xchg push fsub push push mov idivl subl testl cltd adc mov xchg cmp cmp mov dec sbb and cmp insl pop cmpsb hlt pop lcall mov fcomps pushf or popf imul sub pop cmp inc cmp push fsubs and pop pop fwait pop pop mov xchg movsb mov mov mov js xchg and (bad) outsl arpl test lea pop loopne xor arpl jmp (bad) scas adc mov outsl rorb dec xor jne xchg and iret or push and mov xlat mov je hlt cmpsb mov jo pop xor shll xchg shll aad inc stc jbe aas int3 mov mov das enter jb mov (bad) push in dec mov mov xor mov jb dec pop sbb leave imul int movsl pop sbb cmp jbe jp in mov mov mov xchg mov cltd outsb sti fidivr pop fimul ds jns addl dec push movb cmp push cmpsl mov (bad) pop pop inc jle cltd ja (bad) mov jle fdivp add inc sbb cmp lret jne (bad) mov jmp out mov mov ja push (bad) inc or aaa hlt imul sbb jne jle (bad) popf orb sbb sub mov movsl sub xchg push push jne daa pop fcomps pop jp add jecxz adc lods xlat ds or fisttp lea lods adc mov call insl insb arpl inc movsl lock push pop xchg mov test push outsb data16 mov mov add loope push mov cmc pop cli (bad) xor out adc jmp add or mov push and cli cmp pop test xchg pop js inc movl mov mov pop pop dec lahf loope dec push push pop cmp lea or and push fnstsw cmp cmp or push fisubrl or sbb and fstpl aas imul out adc adc jg mov pop jg lret sub ja xchg dec jo add out adc push lcall lcall cmpsl sub jo inc push ret es nop outsb xor js mov push icebp dec fwait and int3 xor xchg or inc das sub mov ds pop hlt in andl pusha pop mov ficom fdivl push loopne mov movsb ds pop or add add push int3 mov mov data16 jmp iret push lret lcall or dec jo daa into inc iret mov cmp mov (bad) lods dec fstpl cmp jle lahf inc stos jp fiaddl push add cmp call fstl cmp cmpsb js dec hlt sub imul aas movsl loopne (bad) sub xchg dec iret das xor in xor outsl enter jns dec (bad) cmp jmp pop push dec jg clc dec jno addb sarb cmp push push pop fs jmp in add cmpb add nop dec mov shr push cwtl xchg adc cli mov inc frstor mov pop dec in and lock gs inc mov sbb pop dec in mov xchg inc inc adc mov insb (bad) xor add not adc or mov inc repz mov stos pop xchg sbb sti out pop mov mov jl jle xor cmp fisub lock shrl push fucomip inc jo xor arpl mov jle or jb bound sbb mov mov sub outsl dec mov addr16 out mov push andb add xor imul cld aad cmp test dec aaa mov outsl test jne cmp adc add xor or fsubs inc mov mov (bad) pop pushf ffreep fs clc dec jg shrb mov mov xor stos cli mov xor pmulhuw mov pop lods dec dec xchg pop jecxz mulb mov rcll outsb jmp fcoml sbbl pop pop insl mov add xor push ljmp pop and imul mov aaa repnz push jl xor sub add mov (bad) cmc mov and jns add pop mov jmp cmp pushaw lods sub lds (bad) shrb mov jl loope push bound mov inc push fwait movsb and lahf adc dec clc int pop pushf fcoml xor or xor insl imul or xchg lods fidivrl jbe movsl mov pop jmp addr16 insl sti (bad) repz (bad) push adc cld mov xlat repnz inc push aam mov sub adc jmp xor and jne test pop add dec rolb mov cltd pop repnz sub mov pop repz inc es aaa jge inc sub jp sbb cmp jge int mov or call push mov push insl sub xchg xchg mov add aam sar push out bound xchg pushf aad push push ret push xlat mov (bad) cmc ljmp sub pop pop sub div stos rcll stos lea inc mov xchg (bad) iret mov or icebp jmp add mov mov testb insb sahf cltd retw fucomip lret ja notb sbb test sub sbb ss jp jmp flds bnd nop adc cmp push xor sbb cltd fdivrs lock push sub push lods mov push jo jns outsb fcoms pop mov jnp cmp imul daa ret xchg lds pop add inc cmc shrl lods jecxz ja hlt sub dec jb out int3 imul int3 mov ljmp sub loopne insl push call mov mov stos xor int3 popf lret clc sbb arpl mov adc iret daa push jecxz leave lods or ficom push popf cwtl cmp adc or pop sbb lods mov xlat dec mov add mov cmp adc test sbb movsb push pop fwait lods push pushf call mov cmc xchg mov addl idivb js imul mov loopne or cli jnp push sarl js jmp mov xchg push jno adc jns sub push dec pop sub shlb insl or jle jle mov sbb mov push sti jg ljmp (bad) lock sub insb mov aaa dec xchg push sahf dec inc fidiv mov jg scas idiv xor test dec xor jmp push mov xor sbb xor adc inc xchg aaa imul jns mov fnstenv dec into cltd ffreep pusha and test mov dec and push xor in push push and stos jb dec mov add je test lahf loopne push mov inc arpl inc icebp outsl mov idivl lret (bad) cltd cmpsl ret fidivrl mov mov subb pop adc sub loop sbb icebp mov lcall inc shrb ficoml xor nop xchg out loop fidivrl out fldpi xchg dec add aaa pop in adc call repz inc (bad) push inc mov sbb and or mov pop cltd push cmc or push cmpsb mov push vpmaxub add xor mov mov int3 pop sub pusha push mov xor xchg dec and in xchg jge inc int3 add and sbb shrb dec ret mov inc add mov push mov std mov icebp or fldcw ds xchg ljmp mov subl aad popf or lods sbb call dec negl jb lods inc in ret inc pop pusha (bad) lea out jp xchg (bad) pop addr16 pushf jo rcrl int loopne and cmp or jecxz dec ret (bad) cmp dec fnsave or xor sbb add add sar aaa rcll push aas btr mov push loope scas xor clc xor loope imul aas lock aam mov fidivl add shll ret test outsl inc imul aas das out or lods and cmp int mov adc fwait loop sub dec stc lods mov or mov fwait call (bad) jmp and aaa xor push fistpl ret (bad) out mov mov push std mov rcrl leave mov sub outsb lcall enter mov push test pop sahf adc cld mov or mov dec inc cld mov mov push fistl repnz mov sbb add stos dec xchg mov stc imul pop into mov xchg sbb inc inc stos push cwtl mov xrelease inc stc jns pop mov inc xlat clc sbb jns popa pushf ss xchg or mov cmp icebp xacquire jbe xchg xchg sbb mov stos fbld out lret es or lret jl stos loop test jecxz push lret repnz adc repz movsb cmpsb dec mov dec (bad) dec aam fild aaa stos xor ds lods cld and inc inc out cltd pusha pop mov jnp arpl insl jae icebp imul (bad) mov xor cmp cli and push gs push sub xchg and (bad) je mov lock sbb cmp (bad) stc ss mov and mov pop rcl cmc es push mov xchg pop inc push stos sub xchg fstl pop iret pop mov mov fnstsw push adc fs mov push jle inc (bad) icebp sub push aas jnp cmp aad out imul push (bad) sbb jnp cmp jae and test mov jno add xor sub dec sbb je jae jne fisttpl mov imulb push rorb scas bound mov insl stos inc pop imul jno fxch addr16 cmp in pop xchg bound push cltd dec lret sbb fidivrl sub or popf inc jb ret xor and mov pop sub data16 (bad) jno mov je mov add cwtl fmul jge adc inc enter xor mov cmc in jecxz mov xchg jne fcoms mov not (bad) dec xchg (bad) and cwtl add sub and mov adc and jle mov mov mov sbb xor pop mov mov ficomp arpl stos cmp or push dec mov out (bad) sbb or xor adc in or test dec outsl bound mov ds pop and adc add inc lock std fcomi jns add push push or neg add dec xchg adc jns inc int imul out cmp mov mov mov mov in in popf ret cmc aam dec movsb add pusha mov lea inc jo xor popa enter out js loope xlat clc std jns lods roll sarb imul mov jge cld lret pop push stos into pop in add rcll mov loop out (bad) lret std (bad) ficoml and jle xchg psubusb dec lea mov dec xchg push cmpb cmp (bad) sub cli cmp adc jge mov adc daa sbb test ja jp or xchg (bad) mov loopne pop lods std nop push adc and out xor sbb mov nop push sub les pop xor add (bad) mov jle jne imul xor leave lds cmp cmp fwait (bad) jo (bad) mov fwait push out dec pop scas andl data16 bound dec cmc arpl popf dec sar lcall mov out sub popa add push insb arpl and xor jge xchg pop sub sub mov dec xchg mov inc push add or ss jecxz xor push imul mov mov cli or rorb cmp mov and mov scas fcmovne inc test mov cmp cmpsb xchg push pop inc dec dec add (bad) mov ret ds lock xchg sbb mov or adc push sbb cmpsb imul add mov (bad) lcall push idiv or inc dec add out pop push sub (bad) repnz aad lods and mov sbb pop call sbb pushf ret mov pop push cs mov dec roll mov std cltd xlat jb sbb fidivr cmp and pusha mov into ds inc lcall dec dec loope xor ss push or cwtl repnz in imul pop pop push sbb inc push and pop popf fnstcw jle ljmp pop dec push pop or xor push mov lcall iret push idivl dec fwait xlat enter xchg mov or pop int3 addl mov xor leave out add cmp pop xchg push add push push sub jae cmp xchg xlat (bad) add jns sub jae popa out fstpt stc test fwait sbb incl inc push xor (bad) out adc (bad) ja in push mov shl enter daa in cmp (bad) xlat popa dec mov mov cmp jg pop das sub cmpsb jns sub sub mov adc (bad) jg xchg icebp stos into insl push mov daa add bound cmp imul cwtl out pop xlat (bad) mov sbb addl mov mov xchg ror bound aas fsubr mov fwait push outsb mov (bad) sbb in add dec outsb mov mov adc decl mov cltd mov cs mov nop push or mov daa dec add pop ficompl fnstenv outsb cmp into out rol notl mov cli leave pusha dec pop dec (bad) call mov lods and jne lods cmp popf hlt or enter xchg orb or adc cmpl into loope fcomp test jmp pop hlt sbb test in mov ja push or inc or fstps ljmp addl push dec push jmp inc es aad jmp dec fisubr cwtl jg jbe aam imul fdivs mov in cmp dec outsl fwait imul adc js mov cli ljmp (bad) fnop mov xchg mov scas lret rorb in push cmp clc je sub add push loop insb and xor and cwtl and xchg mov dec mov mov cmpsl mov jge jmp popl stos loop jbe jp or mov das stos add leave xchg ja or mov es xchg jmp cmp ljmp mov int3 fcmove mov dec jbe pop lret sbb jl pop jmp and test pop xor iret arpl punpcklbw xor or data16 jp dec mov xor enter cwtl out cmp lea push les lods mov test fdivl xchg xchg inc adc xchg mov inc hlt lds xor cmp subb push clc push add imul pop jnp sub jb outsb in arpl or insb mov pop and hlt cs cld jo clc lret pop fchs pop xlat fadd (bad) hlt mov popa je sub mov loopne jnp mov pusha enter push mov notl mov outsb aas jnp (bad) xor xchg inc into loop pop (bad) adc mov inc je sub (bad) aam mov leave xor sbb ret dec mov and outsl bound test mov (bad) int3 mov sub xchg stc iret pop mov mov aad push add sbb or push mov push mov repz xor and aaa jo ret ret ror loope (bad) jb (bad) cmpsb imul nop cli xorb lret in add pop cmp in pop jg insl push jo jmp addr16 popa add test out pushf rorl dec push lcall fsubrl enter das mov ret roll push cmp cld adc aaa scas sbb jmp cmpsb jbe js js pop xchg ljmp add mov inc cmp aam push stc or xchg gs sti (bad) clc dec add mov out in mov movsl loop push dec outsl mov push and icebp adc cmpsb xchg pop aaa idivb jbe and and (bad) (bad) jmp add jae popa insb insb jns add es add mov add inc add add add add pop add jne imul add outsb imul or adc add add or inc outsb jae data16 xor add or dec popa arpl je insl xor add add jle adc add add add add lldt jae outsl jb jb outsb gs add or push ja jae outsb fs add pmaxub xchg pop xchg add add add add add outsb gs jb imul or push jns je insl imul int3 or lods pop adc add add add add je jb xor add or dec jo insb jne jae outsb add or or add incl sub add push pop add jb outsb fs add or push bound gs insb jns add adc adc add add or inc jb je imul add add jae imul add or adc push add add add add or push jbe insb gs fs xor add or push popa jne arpl jae xor add or or pop add add add add or dec imul xor add pop add fs jne add add sub add adc add add add add adc push gs outsl fs jb insb jae jb cmp add or inc outsl jae jb gs add or or adc add or incl xor add or je je je outsb addr16 add gs outsl data16 add or ja jns adc add add add add add jb outsl insl popa addr16 jae outsb gs add or dec popa insb je outsl jb add push adc or add add add add outsl fs je outsl outsb jae imul inc popa insb popa jne je add or adc or incl sub add push pop add jbe jb add or push popa jb imul add setns sub cli add or add add or push fs addr16 add pop add jae data16 add or push adc add add add add or push imul imul add add popa je outsb je jbe outsb gs add add or (bad) incl sub add adc je imul cmp add add inc insl popa jae add or push jns adc add add add add push add gs add push add insb insb jae add or push jge jge adc add add add add adc dec jne insl popa outsb fs jb outsb cmp add add outsl xor add add sub daa push adc add add add add add insl insl gs jae jb add adc inc outsl gs gs jo fs outsb aaa add or incb add add add jne je outsb popa add pop add outsb gs imul or or add add or inc outsl bound fs xor add jae outsb imul cmpsl or add add add add or dec bound outsb arpl imul add jbe popa insb imul cmp add push repz push add adc add add add add or push jne addr16 popa add or inc outsl insl insl gs je imul or adc add add add sbb dec outsb data16 popa je jb jae xor add push add outsb imul fild mov sbb incl xor add sbb arpl outsl jb outsb popa je add or push gs popa outsb imul inc add add push adc add add add add adc dec popa insb imul addr16 insb gs add or push imul insb popa fs outsb jae add or adc add add add add add imul add adc imul gs outsl jb popa jb fs add pop sub adc add add loopne inc add or or or or or or or or or or add add jns add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add test add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add inc add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add add (bad) (bad) incl add add add add add fmuls inc add add add or pop inc add pop inc add add add add add add cmp inc add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add dec inc add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add inc add (bad) (bad) incl add add pop inc add add add pop inc add pop inc add pop inc add add add add add add (bad) (bad) incl add add pop inc add (bad) (bad) incl add add rolb xor add sbb xor inc add int3 int3 int3 jmp mov xor pop ret push mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call push mov pushl call mov lea call push pushl push call add lea call mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call movl fwait push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call push mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call fwait push lea call lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov fldl fstpl xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov fldl fstpl xor leave ret push mov xor pop ret push mov push pop call mov flds fstps xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov fldl fstpl xor leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call lea lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov xor pop ret push mov xor pop ret push mov push pop call mov fldl fstpl xor leave ret int3 sahf sahf sahf sahf lods pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add adc add add test add xchg and mov and shlb add and sub add repnz or add push add adcb sbbb add sub add and dec and push and push add jp add mov add lcall add and in and cli and or add and add sub add inc and dec and pop and jo add andb add and add subb add enter shlb add loop add out and clc and add add or add add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop popa fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 